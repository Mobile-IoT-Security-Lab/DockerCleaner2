{"seed":3187408344,"processedDockerfileHash":"e4538442755561be759e00a0de491499","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   First stage, install composer and its dependencies and fetch vendor files\nFROM alpine:3.7\nRUN apk add php5=5.6.40-r0 php5-dom=5.6.40-r0 php5-phar=5.6.40-r0 php5-gd=5.6.40-r0 php5-iconv=5.6.40-r0 php5-json=5.6.40-r0 php5-mysql=5.6.40-r0 php5-openssl=5.6.40-r0 php5-xml=5.6.40-r0 php5-zlib=5.6.40-r0 php5-curl=5.6.40-r0 curl=7.61.1-r3 --no-cache\nRUN mkdir /app \\\n && mkdir /app/pleio \\\n && curl -sS https://getcomposer.org/installer | php5 -- --install-dir=/usr/local/bin --filename=composer\nRUN ln -s /usr/bin/php5 /usr/bin/php\nWORKDIR /app\nCOPY composer.json composer.json /app/\nCOPY mod/pleio/composer.json /app/pleio/\nARG COMPOSER_ALLOW_SUPERUSER=1\nARG COMPOSER_NO_INTERACTION=1\nRUN composer install\nWORKDIR /app/pleio\nRUN composer install\n#   Second stage, build usable container\nFROM alpine:3.7\nLABEL maintainer=\"Luc Belliveau <luc.belliveau@nrc-cnrc.gc.ca>, Ilia Salem\"\nRUN apk add apache2=2.4.41-r0 php5=5.6.40-r0 php5-apache2=5.6.40-r0 php5-ctype=5.6.40-r0 php5-curl=5.6.40-r0 php5-dom=5.6.40-r0 php5-gd=5.6.40-r0 php5-iconv=5.6.40-r0 php5-json=5.6.40-r0 php5-mysql=5.6.40-r0 php5-xml=5.6.40-r0 php5-zip=5.6.40-r0 php5-openssl=5.6.40-r0 php5-curl=5.6.40-r0 curl=7.61.1-r3 php5-opcache=5.6.40-r0 libmemcached-libs=1.0.18-r2 --no-cache \\\n && apk update \\\n && apk add php5-mysqli=5.6.40-r0 --no-cache \\\n && mkdir -p /var/www/html/vendor \\\n && mkdir -p /data \\\n && mkdir -p /run/apache2 \\\n && chown apache /data \\\n && ln -s /dev/stderr /var/log/apache2/error.log \\\n && ln -s /dev/stdout /var/log/apache2/access.log \\\n && sed -i '/#LoadModule rewrite_module modules\\/mod_rewrite.so/c\\LoadModule rewrite_module modules\\/mod_rewrite.so' /etc/apache2/httpd.conf \\\n && sed -i '/DocumentRoot \"\\/var\\/www\\/localhost\\/htdocs\"/c\\DocumentRoot \"\\/var\\/www\\/html\"' /etc/apache2/httpd.conf \\\n && sed -i '/Options Indexes FollowSymLinks/c\\\\' /etc/apache2/httpd.conf \\\n && sed -i '/AllowOverride None/c\\\\' /etc/apache2/httpd.conf \\\n && sed -i '/Options Indexes FollowSymLinks/c\\\\' /etc/apache2/httpd.conf \\\n && sed -i '/<Directory \"\\/var\\/www\\/localhost\\/htdocs\">/c\\<Directory \"\\/var\\/www\\/html\">\\nDirectoryIndex index.php\\nOptions FollowSymLinks MultiViews\\nAllowOverride All\\nOrder allow,deny\\nallow from all\\n' /etc/apache2/httpd.conf\nRUN { echo 'opcache.memory_consumption=128' ;echo 'opcache.interned_strings_buffer=8' ;echo 'opcache.max_accelerated_files=4000' ;echo 'opcache.revalidate_freq=60' ;echo 'opcache.fast_shutdown=1' ;echo 'opcache.enable_cli=1' ;echo 'opcache.enable_file_override=1' ; } > /etc/php5/conf.d/opcache-recommended.ini\n#   install memcached\nENV PHPIZE_DEPS=\"autoconf file g++ gcc libc-dev make pkgconf re2c php5-dev php5-pear  zlib-dev libmemcached-dev cyrus-sasl-dev libevent-dev openssl-dev\"\nENV PHP_PEAR_PHP_BIN=\"/usr/bin/php5\"\nRUN set -xe \\\n && apk add $PHPIZE_DEPS --no-cache --virtual .phpize-deps \\\n && sed -i 's/^exec $PHP -C -n/exec $PHP -C/g' $( which pecl ;) \\\n && pecl install memcache-2.2.7 \\\n && mv $( INSTALL_ROOT ;)/usr/lib/php5/modules/memcache.so /usr/lib/php5/modules/memcache.so \\\n && echo \"extension=memcache.so\" > /etc/php5/conf.d/memcache.ini \\\n && rm -rf /usr/share/php \\\n && rm -rf /tmp/* \\\n && apk del .phpize-deps\nCOPY ./install/config/htaccess.dist /var/www/html/.htaccess\nCOPY --from=0 /app/vendor/ /var/www/html/vendor/\nCOPY . /var/www/html\nCOPY --from=0 /app/pleio/vendor/ /var/www/html/mod/pleio/vendor/\nRUN chown apache:apache /var/www/html\nWORKDIR /var/www/html\nEXPOSE 80/tcp\nEXPOSE 443/tcp\nRUN chmod +x docker/start.sh\n#   Start Apache in foreground mode\nRUN rm -f /run/apache2/httpd.pid\nENTRYPOINT [\"docker/start.sh\"]\nCMD [\"/usr/sbin/httpd\", \"-D\", \"FOREGROUND\"]\nRUN addgroup -S docker-user ; adduser -S -G docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  First stage, install composer and its dependencies and fetch vendor files\nFROM alpine:3.7\nRUN apk --no-cache add php5 php5-dom php5-phar php5-gd php5-iconv php5-json php5-mysql php5-openssl php5-xml php5-zlib php5-curl curl\nRUN mkdir /app \\\n && mkdir /app/pleio \\\n && curl -sS https://getcomposer.org/installer | php5 -- --install-dir=/usr/local/bin --filename=composer\nRUN ln -s /usr/bin/php5 /usr/bin/php\nWORKDIR /app\nCOPY composer.json composer.json /app/\nCOPY mod/pleio/composer.json /app/pleio/\nARG COMPOSER_ALLOW_SUPERUSER=1\nARG COMPOSER_NO_INTERACTION=1\nRUN composer install\nWORKDIR /app/pleio\nRUN composer install\n#  Second stage, build usable container\nFROM alpine:3.7\nLABEL maintainer=\"Luc Belliveau <luc.belliveau@nrc-cnrc.gc.ca>, Ilia Salem\"\nRUN apk --no-cache add apache2 php5 php5-apache2 php5-ctype php5-curl php5-dom php5-gd php5-iconv php5-json php5-mysql php5-xml php5-zip php5-openssl php5-curl curl php5-opcache libmemcached-libs \\\n && apk update \\\n && apk --no-cache add php5-mysqli \\\n && mkdir -p /var/www/html/vendor \\\n && mkdir -p /data \\\n && mkdir -p /run/apache2 \\\n && chown apache /data \\\n && ln -s /dev/stderr /var/log/apache2/error.log \\\n && ln -s /dev/stdout /var/log/apache2/access.log \\\n && sed -i '/#LoadModule rewrite_module modules\\/mod_rewrite.so/c\\LoadModule rewrite_module modules\\/mod_rewrite.so' /etc/apache2/httpd.conf \\\n && sed -i '/DocumentRoot \"\\/var\\/www\\/localhost\\/htdocs\"/c\\DocumentRoot \"\\/var\\/www\\/html\"' /etc/apache2/httpd.conf \\\n && sed -i '/Options Indexes FollowSymLinks/c\\\\' /etc/apache2/httpd.conf \\\n && sed -i '/AllowOverride None/c\\\\' /etc/apache2/httpd.conf \\\n && sed -i '/Options Indexes FollowSymLinks/c\\\\' /etc/apache2/httpd.conf \\\n && sed -i '/<Directory \"\\/var\\/www\\/localhost\\/htdocs\">/c\\<Directory \"\\/var\\/www\\/html\">\\nDirectoryIndex index.php\\nOptions FollowSymLinks MultiViews\\nAllowOverride All\\nOrder allow,deny\\nallow from all\\n' /etc/apache2/httpd.conf\nRUN { echo 'opcache.memory_consumption=128' ;echo 'opcache.interned_strings_buffer=8' ;echo 'opcache.max_accelerated_files=4000' ;echo 'opcache.revalidate_freq=60' ;echo 'opcache.fast_shutdown=1' ;echo 'opcache.enable_cli=1' ;echo 'opcache.enable_file_override=1' ; } > /etc/php5/conf.d/opcache-recommended.ini\n#  install memcached\nENV PHPIZE_DEPS=\"autoconf file g++ gcc libc-dev make pkgconf re2c php5-dev php5-pear  zlib-dev libmemcached-dev cyrus-sasl-dev libevent-dev openssl-dev\"\nENV PHP_PEAR_PHP_BIN=\"/usr/bin/php5\"\nRUN set -xe \\\n && apk add --no-cache --virtual .phpize-deps $PHPIZE_DEPS \\\n && sed -i 's/^exec $PHP -C -n/exec $PHP -C/g' $( which pecl ;) \\\n && pecl install memcache-2.2.7 \\\n && mv $( INSTALL_ROOT ;)/usr/lib/php5/modules/memcache.so /usr/lib/php5/modules/memcache.so \\\n && echo \"extension=memcache.so\" > /etc/php5/conf.d/memcache.ini \\\n && rm -rf /usr/share/php \\\n && rm -rf /tmp/* \\\n && apk del .phpize-deps\nCOPY ./install/config/htaccess.dist /var/www/html/.htaccess\nCOPY --from=0 /app/vendor/ /var/www/html/vendor/\nCOPY . /var/www/html\nCOPY --from=0 /app/pleio/vendor/ /var/www/html/mod/pleio/vendor/\nRUN chown apache:apache /var/www/html\nWORKDIR /var/www/html\nEXPOSE 80/tcp\nEXPOSE 443/tcp\nRUN chmod +x docker/start.sh\n#  Start Apache in foreground mode\nRUN rm -f /run/apache2/httpd.pid\nENTRYPOINT [\"docker/start.sh\"]\nCMD [\"/usr/sbin/httpd\", \"-D\", \"FOREGROUND\"]\n","injectedSmells":[],"originalDockerfileHash":"be53c2393b8ef9952d5e0d80bdfbfdd8","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   First stage, install composer and its dependencies and fetch vendor files\nFROM alpine:3.7\nRUN apk --no-cache add php5 php5-dom php5-phar php5-gd php5-iconv php5-json php5-mysql php5-openssl php5-xml php5-zlib php5-curl curl\nRUN mkdir /app \\\n && mkdir /app/pleio \\\n && curl -sS https://getcomposer.org/installer | php5 -- --install-dir=/usr/local/bin --filename=composer\nRUN ln -s /usr/bin/php5 /usr/bin/php\nWORKDIR /app\nCOPY composer.json composer.json /app/\nCOPY mod/pleio/composer.json /app/pleio/\nARG COMPOSER_ALLOW_SUPERUSER=1\nARG COMPOSER_NO_INTERACTION=1\nRUN composer install\nWORKDIR /app/pleio\nRUN composer install\n#   Second stage, build usable container\nFROM alpine:3.7\nLABEL maintainer=\"Luc Belliveau <luc.belliveau@nrc-cnrc.gc.ca>, Ilia Salem\"\nRUN apk --no-cache add apache2 php5 php5-apache2 php5-ctype php5-curl php5-dom php5-gd php5-iconv php5-json php5-mysql php5-xml php5-zip php5-openssl php5-curl curl php5-opcache libmemcached-libs \\\n && apk update \\\n && apk --no-cache add php5-mysqli \\\n && mkdir -p /var/www/html/vendor \\\n && mkdir -p /data \\\n && mkdir -p /run/apache2 \\\n && chown apache /data \\\n && ln -s /dev/stderr /var/log/apache2/error.log \\\n && ln -s /dev/stdout /var/log/apache2/access.log \\\n && sed -i '/#LoadModule rewrite_module modules\\/mod_rewrite.so/c\\LoadModule rewrite_module modules\\/mod_rewrite.so' /etc/apache2/httpd.conf \\\n && sed -i '/DocumentRoot \"\\/var\\/www\\/localhost\\/htdocs\"/c\\DocumentRoot \"\\/var\\/www\\/html\"' /etc/apache2/httpd.conf \\\n && sed -i '/Options Indexes FollowSymLinks/c\\\\' /etc/apache2/httpd.conf \\\n && sed -i '/AllowOverride None/c\\\\' /etc/apache2/httpd.conf \\\n && sed -i '/Options Indexes FollowSymLinks/c\\\\' /etc/apache2/httpd.conf \\\n && sed -i '/<Directory \"\\/var\\/www\\/localhost\\/htdocs\">/c\\<Directory \"\\/var\\/www\\/html\">\\nDirectoryIndex index.php\\nOptions FollowSymLinks MultiViews\\nAllowOverride All\\nOrder allow,deny\\nallow from all\\n' /etc/apache2/httpd.conf\nRUN { echo 'opcache.memory_consumption=128' ;echo 'opcache.interned_strings_buffer=8' ;echo 'opcache.max_accelerated_files=4000' ;echo 'opcache.revalidate_freq=60' ;echo 'opcache.fast_shutdown=1' ;echo 'opcache.enable_cli=1' ;echo 'opcache.enable_file_override=1' ; } > /etc/php5/conf.d/opcache-recommended.ini\n#   install memcached\nENV PHPIZE_DEPS=\"autoconf file g++ gcc libc-dev make pkgconf re2c php5-dev php5-pear  zlib-dev libmemcached-dev cyrus-sasl-dev libevent-dev openssl-dev\"\nENV PHP_PEAR_PHP_BIN=\"/usr/bin/php5\"\nRUN set -xe \\\n && apk add --no-cache --virtual .phpize-deps $PHPIZE_DEPS \\\n && sed -i 's/^exec $PHP -C -n/exec $PHP -C/g' $( which pecl ;) \\\n && pecl install memcache-2.2.7 \\\n && mv $( INSTALL_ROOT ;)/usr/lib/php5/modules/memcache.so /usr/lib/php5/modules/memcache.so \\\n && echo \"extension=memcache.so\" > /etc/php5/conf.d/memcache.ini \\\n && rm -rf /usr/share/php \\\n && rm -rf /tmp/* \\\n && apk del .phpize-deps\nCOPY ./install/config/htaccess.dist /var/www/html/.htaccess\nCOPY --from=0 /app/vendor/ /var/www/html/vendor/\nCOPY . /var/www/html\nCOPY --from=0 /app/pleio/vendor/ /var/www/html/mod/pleio/vendor/\nRUN chown apache:apache /var/www/html\nWORKDIR /var/www/html\nEXPOSE 80/tcp\nEXPOSE 443/tcp\nRUN chmod +x docker/start.sh\n#   Start Apache in foreground mode\nRUN rm -f /run/apache2/httpd.pid\nENTRYPOINT [\"docker/start.sh\"]\nCMD [\"/usr/sbin/httpd\", \"-D\", \"FOREGROUND\"]\n","originalDockerfileUglifiedHash":"4bd2a97ae64a0a44046f7b4f9b55ca0f","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/0e802194ecf120eaceda570ebf905f3fd332952a.dockerfile"}