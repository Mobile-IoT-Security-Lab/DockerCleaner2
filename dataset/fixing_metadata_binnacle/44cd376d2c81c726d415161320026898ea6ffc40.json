{"seed":3873093155,"processedDockerfileHash":"2f3ef3848087e779565d0015aac82733","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM ubuntu:14.04\nRUN echo 'deb http://us.archive.ubuntu.com/ubuntu/ precise universe' >> /etc/apt/sources.list\nRUN :\nRUN (apt-get update ;apt-get install --no-install-recommends software-properties-common=0.92.37.8 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends python-software-properties=0.92.37.8 -y ) \\\n && apt-get update -y\n#   oracle java\nRUN add-apt-repository ppa:webupd8team/java \\\n && apt-get update -y \\\n && echo debconf shared/accepted-oracle-license-v1-1 select true | debconf-set-selections \\\n && echo debconf shared/accepted-oracle-license-v1-1 seen true | debconf-set-selections \\\n && (apt-get update ;apt-get install --no-install-recommends oracle-java7-installer -y )\nRUN (apt-get update ;apt-get install --no-install-recommends supervisor=3.0b2-1ubuntu0.1 nginx-light=1.4.6-1ubuntu3.9 git=1:1.9.1-1ubuntu0.10 wget=1.15-1ubuntu1.14.04.5 curl=7.35.0-1ubuntu2.20 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends python-django-tagging=1:0.3.1-3 python-simplejson=3.3.1-1ubuntu6 python-memcache=1.53-1build1 python-ldap=2.4.10-1build1 python-cairo=1.8.8-1ubuntu5 python-django=1.6.11-0ubuntu1.3 python-twisted=13.2.0-1ubuntu1.2 python-pysqlite2=2.6.3-3 python-support=1.0.15 python-pip=1.5.4-1ubuntu4 gunicorn=17.5-2build1 -y )\n#   fake fuse\nRUN (apt-get update ;apt-get install --no-install-recommends libfuse2=2.9.2-4ubuntu4.14.04.1 ) \\\n && cd /tmp ; apt-get download fuse \\\n && cd /tmp ; dpkg-deb -x fuse_* . \\\n && cd /tmp ; dpkg-deb -e fuse_* \\\n && cd /tmp ; rm fuse_*.deb \\\n && cd /tmp ; echo -en '#!/bin/bash\\nexit 0\\n' > DEBIAN/postinst \\\n && cd /tmp ; dpkg-deb -b . /fuse.deb \\\n && cd /tmp ; dpkg -i /fuse.deb\n#   Graphite\n#  run\tpip install whisper\n#  run\tpip install --install-option=\"--prefix=/var/lib/graphite\" --install-option=\"--install-lib=/var/lib/graphite/lib\" carbon\n#  run\tpip install --install-option=\"--prefix=/var/lib/graphite\" --install-option=\"--install-lib=/var/lib/graphite/webapp\" graphite-web\nRUN cd /usr/local/src \\\n && git clone https://github.com/graphite-project/graphite-web.git\nRUN cd /usr/local/src \\\n && git clone https://github.com/graphite-project/carbon.git\nRUN cd /usr/local/src \\\n && git clone https://github.com/graphite-project/whisper.git\nRUN cd /usr/local/src/whisper \\\n && git checkout master \\\n && python setup.py install\nRUN cd /usr/local/src/carbon \\\n && git checkout 0.9.x \\\n && python setup.py install\nRUN cd /usr/local/src/graphite-web \\\n && git checkout 0.9.x \\\n && python check-dependencies.py ; python setup.py install\n#   Elastic Search\nRUN cd ~ \\\n && wget https://download.elasticsearch.org/elasticsearch/elasticsearch/elasticsearch-1.3.4.deb\nRUN cd ~ \\\n && dpkg -i elasticsearch-1.3.4.deb \\\n && rm elasticsearch-1.3.4.deb\n#   grafana, kibana\nRUN mkdir -p /www/data\nRUN cd /tmp \\\n && wget http://grafanarel.s3.amazonaws.com/grafana-1.8.1.tar.gz \\\n && tar xzvf grafana-1.8.1.tar.gz \\\n && rm grafana-1.8.1.tar.gz \\\n && mv /tmp/grafana-1.8.1 /www/data/grafana\nRUN cd /tmp \\\n && wget https://download.elasticsearch.org/kibana/kibana/kibana-3.1.1.tar.gz \\\n && tar xzvf kibana-3.1.1.tar.gz \\\n && rm kibana-3.1.1.tar.gz \\\n && mv /tmp/kibana-3.1.1 /www/data/kibana\n#  ####### no 'add' before this line to utilize caching (see http://crosbymichael.com/dockerfile-best-practices.html)\n#   Add graphite config\nCOPY ./graphite/initial_data.json /opt/graphite/webapp/graphite/initial_data.json\nCOPY ./graphite/local_settings.py /opt/graphite/webapp/graphite/local_settings.py\nCOPY ./graphite/carbon.conf /opt/graphite/conf/carbon.conf\nCOPY ./graphite/storage-schemas.conf /opt/graphite/conf/storage-schemas.conf\nCOPY ./graphite/storage-aggregation.conf /opt/graphite/conf/storage-aggregation.conf\nRUN mkdir -p /opt/graphite/storage/whisper\nRUN touch /opt/graphite/storage/graphite.db /opt/graphite/storage/index\nRUN chown -R www-data /opt/graphite/storage\nRUN chmod 0775 /opt/graphite/storage /opt/graphite/storage/whisper\nRUN chmod 0664 /opt/graphite/storage/graphite.db\nRUN cd /opt/graphite/webapp/graphite \\\n && python manage.py syncdb --noinput\n#   grafana, kibana config\nCOPY ./grafana/config.js /www/data/grafana/config.js\nCOPY ./kibana/config.js /www/data/kibana/config.js\n#   elasticsearch\nCOPY ./elasticsearch/run /usr/local/bin/run_elasticsearch\n#   Add system service config\nCOPY ./nginx/nginx.conf /etc/nginx/nginx.conf\nCOPY ./supervisord.conf /etc/supervisor/conf.d/supervisord.conf\n#   graphite render, es, kibana, grafana\nEXPOSE 80/tcp\n#   graphite\nEXPOSE 81/tcp\n#   Carbon line receiver port\nEXPOSE 2003/tcp\n#   Carbon pickle receiver port\nEXPOSE 2004/tcp\n#   Carbon cache query port\nEXPOSE 7002/tcp\nVOLUME [\"/var/lib/elasticsearch\"]\nVOLUME [\"/opt/graphite/storage/whisper\"]\nVOLUME [\"/var/lib/log/supervisor\"]\nCMD [\"/usr/bin/supervisord\"]\n#   vim:ts=8:noet:\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:14.04\nRUN echo 'deb http://us.archive.ubuntu.com/ubuntu/ precise universe' >> /etc/apt/sources.list\nRUN apt-get update -y\nRUN apt-get install software-properties-common -y\nRUN apt-get install python-software-properties -y \\\n && apt-get update -y\n#  oracle java\nRUN add-apt-repository ppa:webupd8team/java \\\n && apt-get update -y \\\n && echo debconf shared/accepted-oracle-license-v1-1 select true | debconf-set-selections \\\n && echo debconf shared/accepted-oracle-license-v1-1 seen true | debconf-set-selections \\\n && apt-get install oracle-java7-installer -y\nRUN apt-get install supervisor nginx-light git wget curl -y\nRUN apt-get install python-django-tagging python-simplejson python-memcache python-ldap python-cairo python-django python-twisted python-pysqlite2 python-support python-pip gunicorn -y\n#  fake fuse\nRUN apt-get install libfuse2 \\\n && cd /tmp ; apt-get download fuse \\\n && cd /tmp ; dpkg-deb -x fuse_* . \\\n && cd /tmp ; dpkg-deb -e fuse_* \\\n && cd /tmp ; rm fuse_*.deb \\\n && cd /tmp ; echo -en '#!/bin/bash\\nexit 0\\n' > DEBIAN/postinst \\\n && cd /tmp ; dpkg-deb -b . /fuse.deb \\\n && cd /tmp ; dpkg -i /fuse.deb\n#  Graphite\n# run\tpip install whisper\n# run\tpip install --install-option=\"--prefix=/var/lib/graphite\" --install-option=\"--install-lib=/var/lib/graphite/lib\" carbon\n# run\tpip install --install-option=\"--prefix=/var/lib/graphite\" --install-option=\"--install-lib=/var/lib/graphite/webapp\" graphite-web\nRUN cd /usr/local/src \\\n && git clone https://github.com/graphite-project/graphite-web.git\nRUN cd /usr/local/src \\\n && git clone https://github.com/graphite-project/carbon.git\nRUN cd /usr/local/src \\\n && git clone https://github.com/graphite-project/whisper.git\nRUN cd /usr/local/src/whisper \\\n && git checkout master \\\n && python setup.py install\nRUN cd /usr/local/src/carbon \\\n && git checkout 0.9.x \\\n && python setup.py install\nRUN cd /usr/local/src/graphite-web \\\n && git checkout 0.9.x \\\n && python check-dependencies.py ; python setup.py install\n#  Elastic Search\nRUN cd ~ \\\n && wget https://download.elasticsearch.org/elasticsearch/elasticsearch/elasticsearch-1.3.4.deb\nRUN cd ~ \\\n && dpkg -i elasticsearch-1.3.4.deb \\\n && rm elasticsearch-1.3.4.deb\n#  grafana, kibana\nRUN mkdir -p /www/data\nRUN cd /tmp \\\n && wget http://grafanarel.s3.amazonaws.com/grafana-1.8.1.tar.gz \\\n && tar xzvf grafana-1.8.1.tar.gz \\\n && rm grafana-1.8.1.tar.gz \\\n && mv /tmp/grafana-1.8.1 /www/data/grafana\nRUN cd /tmp \\\n && wget https://download.elasticsearch.org/kibana/kibana/kibana-3.1.1.tar.gz \\\n && tar xzvf kibana-3.1.1.tar.gz \\\n && rm kibana-3.1.1.tar.gz \\\n && mv /tmp/kibana-3.1.1 /www/data/kibana\n# ####### no 'add' before this line to utilize caching (see http://crosbymichael.com/dockerfile-best-practices.html)\n#  Add graphite config\nADD ./graphite/initial_data.json /opt/graphite/webapp/graphite/initial_data.json\nADD ./graphite/local_settings.py /opt/graphite/webapp/graphite/local_settings.py\nADD ./graphite/carbon.conf /opt/graphite/conf/carbon.conf\nADD ./graphite/storage-schemas.conf /opt/graphite/conf/storage-schemas.conf\nADD ./graphite/storage-aggregation.conf /opt/graphite/conf/storage-aggregation.conf\nRUN mkdir -p /opt/graphite/storage/whisper\nRUN touch /opt/graphite/storage/graphite.db /opt/graphite/storage/index\nRUN chown -R www-data /opt/graphite/storage\nRUN chmod 0775 /opt/graphite/storage /opt/graphite/storage/whisper\nRUN chmod 0664 /opt/graphite/storage/graphite.db\nRUN cd /opt/graphite/webapp/graphite \\\n && python manage.py syncdb --noinput\n#  grafana, kibana config\nADD ./grafana/config.js /www/data/grafana/config.js\nADD ./kibana/config.js /www/data/kibana/config.js\n#  elasticsearch\nADD ./elasticsearch/run /usr/local/bin/run_elasticsearch\n#  Add system service config\nADD ./nginx/nginx.conf /etc/nginx/nginx.conf\nADD ./supervisord.conf /etc/supervisor/conf.d/supervisord.conf\n#  graphite render, es, kibana, grafana\nEXPOSE 80/tcp\n#  graphite\nEXPOSE 81/tcp\n#  Carbon line receiver port\nEXPOSE 2003/tcp\n#  Carbon pickle receiver port\nEXPOSE 2004/tcp\n#  Carbon cache query port\nEXPOSE 7002/tcp\nVOLUME [\"/var/lib/elasticsearch\"]\nVOLUME [\"/opt/graphite/storage/whisper\"]\nVOLUME [\"/var/lib/log/supervisor\"]\nCMD [\"/usr/bin/supervisord\"]\n#  vim:ts=8:noet:\n","injectedSmells":[],"originalDockerfileHash":"c4ef684d6bb2b7b2855e36c8e6dab623","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:14.04\nRUN echo 'deb http://us.archive.ubuntu.com/ubuntu/ precise universe' >> /etc/apt/sources.list\nRUN apt-get update -y\nRUN apt-get install software-properties-common -y\nRUN apt-get install python-software-properties -y \\\n && apt-get update -y\n#   oracle java\nRUN add-apt-repository ppa:webupd8team/java \\\n && apt-get update -y \\\n && echo debconf shared/accepted-oracle-license-v1-1 select true | debconf-set-selections \\\n && echo debconf shared/accepted-oracle-license-v1-1 seen true | debconf-set-selections \\\n && apt-get install oracle-java7-installer -y\nRUN apt-get install supervisor nginx-light git wget curl -y\nRUN apt-get install python-django-tagging python-simplejson python-memcache python-ldap python-cairo python-django python-twisted python-pysqlite2 python-support python-pip gunicorn -y\n#   fake fuse\nRUN apt-get install libfuse2 \\\n && cd /tmp ; apt-get download fuse \\\n && cd /tmp ; dpkg-deb -x fuse_* . \\\n && cd /tmp ; dpkg-deb -e fuse_* \\\n && cd /tmp ; rm fuse_*.deb \\\n && cd /tmp ; echo -en '#!/bin/bash\\nexit 0\\n' > DEBIAN/postinst \\\n && cd /tmp ; dpkg-deb -b . /fuse.deb \\\n && cd /tmp ; dpkg -i /fuse.deb\n#   Graphite\n#  run\tpip install whisper\n#  run\tpip install --install-option=\"--prefix=/var/lib/graphite\" --install-option=\"--install-lib=/var/lib/graphite/lib\" carbon\n#  run\tpip install --install-option=\"--prefix=/var/lib/graphite\" --install-option=\"--install-lib=/var/lib/graphite/webapp\" graphite-web\nRUN cd /usr/local/src \\\n && git clone https://github.com/graphite-project/graphite-web.git\nRUN cd /usr/local/src \\\n && git clone https://github.com/graphite-project/carbon.git\nRUN cd /usr/local/src \\\n && git clone https://github.com/graphite-project/whisper.git\nRUN cd /usr/local/src/whisper \\\n && git checkout master \\\n && python setup.py install\nRUN cd /usr/local/src/carbon \\\n && git checkout 0.9.x \\\n && python setup.py install\nRUN cd /usr/local/src/graphite-web \\\n && git checkout 0.9.x \\\n && python check-dependencies.py ; python setup.py install\n#   Elastic Search\nRUN cd ~ \\\n && wget https://download.elasticsearch.org/elasticsearch/elasticsearch/elasticsearch-1.3.4.deb\nRUN cd ~ \\\n && dpkg -i elasticsearch-1.3.4.deb \\\n && rm elasticsearch-1.3.4.deb\n#   grafana, kibana\nRUN mkdir -p /www/data\nRUN cd /tmp \\\n && wget http://grafanarel.s3.amazonaws.com/grafana-1.8.1.tar.gz \\\n && tar xzvf grafana-1.8.1.tar.gz \\\n && rm grafana-1.8.1.tar.gz \\\n && mv /tmp/grafana-1.8.1 /www/data/grafana\nRUN cd /tmp \\\n && wget https://download.elasticsearch.org/kibana/kibana/kibana-3.1.1.tar.gz \\\n && tar xzvf kibana-3.1.1.tar.gz \\\n && rm kibana-3.1.1.tar.gz \\\n && mv /tmp/kibana-3.1.1 /www/data/kibana\n#  ####### no 'add' before this line to utilize caching (see http://crosbymichael.com/dockerfile-best-practices.html)\n#   Add graphite config\nADD ./graphite/initial_data.json /opt/graphite/webapp/graphite/initial_data.json\nADD ./graphite/local_settings.py /opt/graphite/webapp/graphite/local_settings.py\nADD ./graphite/carbon.conf /opt/graphite/conf/carbon.conf\nADD ./graphite/storage-schemas.conf /opt/graphite/conf/storage-schemas.conf\nADD ./graphite/storage-aggregation.conf /opt/graphite/conf/storage-aggregation.conf\nRUN mkdir -p /opt/graphite/storage/whisper\nRUN touch /opt/graphite/storage/graphite.db /opt/graphite/storage/index\nRUN chown -R www-data /opt/graphite/storage\nRUN chmod 0775 /opt/graphite/storage /opt/graphite/storage/whisper\nRUN chmod 0664 /opt/graphite/storage/graphite.db\nRUN cd /opt/graphite/webapp/graphite \\\n && python manage.py syncdb --noinput\n#   grafana, kibana config\nADD ./grafana/config.js /www/data/grafana/config.js\nADD ./kibana/config.js /www/data/kibana/config.js\n#   elasticsearch\nADD ./elasticsearch/run /usr/local/bin/run_elasticsearch\n#   Add system service config\nADD ./nginx/nginx.conf /etc/nginx/nginx.conf\nADD ./supervisord.conf /etc/supervisor/conf.d/supervisord.conf\n#   graphite render, es, kibana, grafana\nEXPOSE 80/tcp\n#   graphite\nEXPOSE 81/tcp\n#   Carbon line receiver port\nEXPOSE 2003/tcp\n#   Carbon pickle receiver port\nEXPOSE 2004/tcp\n#   Carbon cache query port\nEXPOSE 7002/tcp\nVOLUME [\"/var/lib/elasticsearch\"]\nVOLUME [\"/opt/graphite/storage/whisper\"]\nVOLUME [\"/var/lib/log/supervisor\"]\nCMD [\"/usr/bin/supervisord\"]\n#   vim:ts=8:noet:\n","originalDockerfileUglifiedHash":"21da0f5a4fd7b5ed9f32b3b31fed6dc5","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/44cd376d2c81c726d415161320026898ea6ffc40.dockerfile"}