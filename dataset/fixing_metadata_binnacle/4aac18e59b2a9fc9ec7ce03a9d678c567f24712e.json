{"seed":2493410801,"processedDockerfileHash":"cd8b814113e489cc51112f0c0d970497","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM ubuntu:16.04 AS BUILDSTEP\nMAINTAINER Sergey Dolin <sergey@s4y.solutions>\n#   Install all necessary for building dependecnies, read more about\n#   depencensies in readme section in the root of the repo.\nRUN apt-get update \\\n && apt-get upgrade -y \\\n && (apt-get update ;apt-get install --no-install-recommends jq=1.5+dfsg-1ubuntu0.1 netcat=1.10-41 inetutils-ping=2:1.9.4-1build1 vim=2:7.4.1689-3ubuntu1.5 git=1:2.7.4-0ubuntu1.10 wget=1.17.1-1ubuntu1.5 make=4.1-6 cmake=3.5.1-1ubuntu3 gcc=4:5.3.1-1ubuntu1 g++=4:5.3.1-1ubuntu1 python=2.7.12-1~16.04 libev-dev=1:4.22-1 libmpdec-dev=2.4.2-1 libjansson-dev=2.7-3ubuntu0.1 libssl-dev=1.0.2g-1ubuntu4.20 libgnutls-dev=3.4.10-4ubuntu1.9 libmysqlclient-dev=5.7.33-0ubuntu0.16.04.1 libhttp-parser-dev=2.1-2 libcurl4-openssl-dev=7.47.0-1ubuntu2.19 libldap2-dev=2.4.42+dfsg-2ubuntu3.13 libkrb5-dev=1.13.2+dfsg-5ubuntu2.2 libalberta-dev=3.0.1-1build1 libgss-dev=1.0.3-2 libidn11-dev=1.32-3ubuntu1.2 librtmp-dev=2.4+20151223.gitfa8646d-1ubuntu0.1 -y ) \\\n && rm -rf /var/lib/apt/lists/*\nRUN git clone https://github.com/edenhill/librdkafka.git \\\n && cd librdkafka \\\n && ./configure \\\n && make \\\n && make install \\\n && cd / \\\n && rm -rf librdkafka\nRUN mkdir viabtc_exchange_server\n#   Copy all necessary files and directories for build process, basically we\n#   recreate the root repository directory, but with tham we could ensure that\n#   nothing\nCOPY depends viabtc_exchange_server/depends\nCOPY network viabtc_exchange_server/network\nCOPY utils viabtc_exchange_server/utils\nCOPY alertcenter viabtc_exchange_server/alertcenter\nCOPY matchengine viabtc_exchange_server/matchengine\nCOPY marketprice viabtc_exchange_server/marketprice\nCOPY readhistory viabtc_exchange_server/readhistory\nCOPY accesshttp viabtc_exchange_server/accesshttp\nCOPY accessws viabtc_exchange_server/accessws\nCOPY makefile.inc viabtc_exchange_server/makefile.inc\n#   Do the actial build of the microservices.\nRUN cd viabtc_exchange_server/depends/hiredis \\\n && make \\\n && mv libhiredis.* /usr/lib \\\n && cd .. \\\n && mv hiredis /usr/include\nRUN cd viabtc_exchange_server/network \\\n && make\nRUN cd viabtc_exchange_server/utils \\\n && make\nRUN cd viabtc_exchange_server/alertcenter \\\n && make\nRUN cd viabtc_exchange_server/matchengine \\\n && make\nRUN cd viabtc_exchange_server/marketprice \\\n && make\nRUN cd viabtc_exchange_server/readhistory \\\n && make\nRUN cd viabtc_exchange_server/accesshttp \\\n && make\nRUN cd viabtc_exchange_server/accessws \\\n && make\n#   Multi-stage builds are a new feature requiring Docker 17.05 or higher on the\n#   daemon and client. Multistage builds are useful to anyone who has struggled\n#   to optimize Dockerfiles while keeping them easy to read and maintain.\n#   With this we ensure that previous build layers are not stored and we grab\n#   only what we need.\nFROM ubuntu:16.04\nRUN :\nRUN apt-get upgrade -y\nRUN (apt-get update ;apt-get install --no-install-recommends libldap-2.4 libgss3=1.0.3-2 librtmp1=2.4+20151223.gitfa8646d-1ubuntu0.1 libmysqlclient20=5.7.33-0ubuntu0.16.04.1 jq=1.5+dfsg-1ubuntu0.1 netcat=1.10-41 -y )\nRUN rm -rf /var/lib/apt/lists/*\nRUN mkdir /viabtc_exchange_server\n#   keep .exe for better grep of ps output\nCOPY --from=BUILDSTEP /viabtc_exchange_server/alertcenter/alertcenter /viabtc_exchange_server/alertcenter.exe\nCOPY docker/exchange/configs/alertcenter.json /viabtc_exchange_server\nCOPY --from=BUILDSTEP /viabtc_exchange_server/matchengine/matchengine /viabtc_exchange_server/matchengine.exe\nCOPY docker/exchange/configs/matchengine.json /viabtc_exchange_server\nCOPY --from=BUILDSTEP /viabtc_exchange_server/marketprice/marketprice /viabtc_exchange_server/marketprice.exe\nCOPY docker/exchange/configs/marketprice.json /viabtc_exchange_server\nCOPY --from=BUILDSTEP /viabtc_exchange_server/readhistory/readhistory /viabtc_exchange_server/readhistory.exe\nCOPY docker/exchange/configs/readhistory.json /viabtc_exchange_server\nCOPY --from=BUILDSTEP /viabtc_exchange_server/accesshttp/accesshttp /viabtc_exchange_server/accesshttp.exe\nCOPY docker/exchange/configs/accesshttp.json /viabtc_exchange_server\nCOPY --from=BUILDSTEP /viabtc_exchange_server/accessws/accessws /viabtc_exchange_server/accessws.exe\nCOPY docker/exchange/configs/accessws.json /viabtc_exchange_server\nCOPY docker/exchange/entrypoint.sh /docker-entrypoint.sh\nENTRYPOINT [\"/docker-entrypoint.sh\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:16.04 AS BUILDSTEP\nMAINTAINER Sergey Dolin <sergey@s4y.solutions>\n#  Install all necessary for building dependecnies, read more about\n#  depencensies in readme section in the root of the repo.\nRUN apt-get update \\\n && apt-get upgrade -y \\\n && apt-get install jq netcat inetutils-ping vim git wget make cmake gcc g++ python libev-dev libmpdec-dev libjansson-dev libssl-dev libgnutls-dev libmysqlclient-dev libhttp-parser-dev libcurl4-openssl-dev libldap2-dev libkrb5-dev libalberta-dev libgss-dev libidn11-dev librtmp-dev -y \\\n && rm -rf /var/lib/apt/lists/*\nRUN git clone https://github.com/edenhill/librdkafka.git \\\n && cd librdkafka \\\n && ./configure \\\n && make \\\n && make install \\\n && cd / \\\n && rm -rf librdkafka\nRUN mkdir viabtc_exchange_server\n#  Copy all necessary files and directories for build process, basically we\n#  recreate the root repository directory, but with tham we could ensure that\n#  nothing\nCOPY depends viabtc_exchange_server/depends\nCOPY network viabtc_exchange_server/network\nCOPY utils viabtc_exchange_server/utils\nCOPY alertcenter viabtc_exchange_server/alertcenter\nCOPY matchengine viabtc_exchange_server/matchengine\nCOPY marketprice viabtc_exchange_server/marketprice\nCOPY readhistory viabtc_exchange_server/readhistory\nCOPY accesshttp viabtc_exchange_server/accesshttp\nCOPY accessws viabtc_exchange_server/accessws\nCOPY makefile.inc viabtc_exchange_server/makefile.inc\n#  Do the actial build of the microservices.\nRUN cd viabtc_exchange_server/depends/hiredis \\\n && make \\\n && mv libhiredis.* /usr/lib \\\n && cd .. \\\n && mv hiredis /usr/include\nRUN cd viabtc_exchange_server/network \\\n && make\nRUN cd viabtc_exchange_server/utils \\\n && make\nRUN cd viabtc_exchange_server/alertcenter \\\n && make\nRUN cd viabtc_exchange_server/matchengine \\\n && make\nRUN cd viabtc_exchange_server/marketprice \\\n && make\nRUN cd viabtc_exchange_server/readhistory \\\n && make\nRUN cd viabtc_exchange_server/accesshttp \\\n && make\nRUN cd viabtc_exchange_server/accessws \\\n && make\n#  Multi-stage builds are a new feature requiring Docker 17.05 or higher on the\n#  daemon and client. Multistage builds are useful to anyone who has struggled\n#  to optimize Dockerfiles while keeping them easy to read and maintain.\n#  With this we ensure that previous build layers are not stored and we grab\n#  only what we need.\nFROM ubuntu:16.04\nRUN apt-get update\nRUN apt-get upgrade -y\nRUN apt-get install libldap-2.4 libgss3 librtmp1 libmysqlclient20 jq netcat -y\nRUN rm -rf /var/lib/apt/lists/*\nRUN mkdir /viabtc_exchange_server\n#  keep .exe for better grep of ps output\nCOPY --from=BUILDSTEP /viabtc_exchange_server/alertcenter/alertcenter /viabtc_exchange_server/alertcenter.exe\nCOPY docker/exchange/configs/alertcenter.json /viabtc_exchange_server\nCOPY --from=BUILDSTEP /viabtc_exchange_server/matchengine/matchengine /viabtc_exchange_server/matchengine.exe\nCOPY docker/exchange/configs/matchengine.json /viabtc_exchange_server\nCOPY --from=BUILDSTEP /viabtc_exchange_server/marketprice/marketprice /viabtc_exchange_server/marketprice.exe\nCOPY docker/exchange/configs/marketprice.json /viabtc_exchange_server\nCOPY --from=BUILDSTEP /viabtc_exchange_server/readhistory/readhistory /viabtc_exchange_server/readhistory.exe\nCOPY docker/exchange/configs/readhistory.json /viabtc_exchange_server\nCOPY --from=BUILDSTEP /viabtc_exchange_server/accesshttp/accesshttp /viabtc_exchange_server/accesshttp.exe\nCOPY docker/exchange/configs/accesshttp.json /viabtc_exchange_server\nCOPY --from=BUILDSTEP /viabtc_exchange_server/accessws/accessws /viabtc_exchange_server/accessws.exe\nCOPY docker/exchange/configs/accessws.json /viabtc_exchange_server\nCOPY docker/exchange/entrypoint.sh /docker-entrypoint.sh\nENTRYPOINT [\"/docker-entrypoint.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"e442ed4ac89ad15753f7ea99949e6df1","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:16.04 AS BUILDSTEP\nMAINTAINER Sergey Dolin <sergey@s4y.solutions>\n#   Install all necessary for building dependecnies, read more about\n#   depencensies in readme section in the root of the repo.\nRUN apt-get update \\\n && apt-get upgrade -y \\\n && apt-get install jq netcat inetutils-ping vim git wget make cmake gcc g++ python libev-dev libmpdec-dev libjansson-dev libssl-dev libgnutls-dev libmysqlclient-dev libhttp-parser-dev libcurl4-openssl-dev libldap2-dev libkrb5-dev libalberta-dev libgss-dev libidn11-dev librtmp-dev -y \\\n && rm -rf /var/lib/apt/lists/*\nRUN git clone https://github.com/edenhill/librdkafka.git \\\n && cd librdkafka \\\n && ./configure \\\n && make \\\n && make install \\\n && cd / \\\n && rm -rf librdkafka\nRUN mkdir viabtc_exchange_server\n#   Copy all necessary files and directories for build process, basically we\n#   recreate the root repository directory, but with tham we could ensure that\n#   nothing\nCOPY depends viabtc_exchange_server/depends\nCOPY network viabtc_exchange_server/network\nCOPY utils viabtc_exchange_server/utils\nCOPY alertcenter viabtc_exchange_server/alertcenter\nCOPY matchengine viabtc_exchange_server/matchengine\nCOPY marketprice viabtc_exchange_server/marketprice\nCOPY readhistory viabtc_exchange_server/readhistory\nCOPY accesshttp viabtc_exchange_server/accesshttp\nCOPY accessws viabtc_exchange_server/accessws\nCOPY makefile.inc viabtc_exchange_server/makefile.inc\n#   Do the actial build of the microservices.\nRUN cd viabtc_exchange_server/depends/hiredis \\\n && make \\\n && mv libhiredis.* /usr/lib \\\n && cd .. \\\n && mv hiredis /usr/include\nRUN cd viabtc_exchange_server/network \\\n && make\nRUN cd viabtc_exchange_server/utils \\\n && make\nRUN cd viabtc_exchange_server/alertcenter \\\n && make\nRUN cd viabtc_exchange_server/matchengine \\\n && make\nRUN cd viabtc_exchange_server/marketprice \\\n && make\nRUN cd viabtc_exchange_server/readhistory \\\n && make\nRUN cd viabtc_exchange_server/accesshttp \\\n && make\nRUN cd viabtc_exchange_server/accessws \\\n && make\n#   Multi-stage builds are a new feature requiring Docker 17.05 or higher on the\n#   daemon and client. Multistage builds are useful to anyone who has struggled\n#   to optimize Dockerfiles while keeping them easy to read and maintain.\n#   With this we ensure that previous build layers are not stored and we grab\n#   only what we need.\nFROM ubuntu:16.04\nRUN apt-get update\nRUN apt-get upgrade -y\nRUN apt-get install libldap-2.4 libgss3 librtmp1 libmysqlclient20 jq netcat -y\nRUN rm -rf /var/lib/apt/lists/*\nRUN mkdir /viabtc_exchange_server\n#   keep .exe for better grep of ps output\nCOPY --from=BUILDSTEP /viabtc_exchange_server/alertcenter/alertcenter /viabtc_exchange_server/alertcenter.exe\nCOPY docker/exchange/configs/alertcenter.json /viabtc_exchange_server\nCOPY --from=BUILDSTEP /viabtc_exchange_server/matchengine/matchengine /viabtc_exchange_server/matchengine.exe\nCOPY docker/exchange/configs/matchengine.json /viabtc_exchange_server\nCOPY --from=BUILDSTEP /viabtc_exchange_server/marketprice/marketprice /viabtc_exchange_server/marketprice.exe\nCOPY docker/exchange/configs/marketprice.json /viabtc_exchange_server\nCOPY --from=BUILDSTEP /viabtc_exchange_server/readhistory/readhistory /viabtc_exchange_server/readhistory.exe\nCOPY docker/exchange/configs/readhistory.json /viabtc_exchange_server\nCOPY --from=BUILDSTEP /viabtc_exchange_server/accesshttp/accesshttp /viabtc_exchange_server/accesshttp.exe\nCOPY docker/exchange/configs/accesshttp.json /viabtc_exchange_server\nCOPY --from=BUILDSTEP /viabtc_exchange_server/accessws/accessws /viabtc_exchange_server/accessws.exe\nCOPY docker/exchange/configs/accessws.json /viabtc_exchange_server\nCOPY docker/exchange/entrypoint.sh /docker-entrypoint.sh\nENTRYPOINT [\"/docker-entrypoint.sh\"]\n","originalDockerfileUglifiedHash":"d987c13fe673defa10b3dd97ccb9e8cf","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/4aac18e59b2a9fc9ec7ce03a9d678c567f24712e.dockerfile"}