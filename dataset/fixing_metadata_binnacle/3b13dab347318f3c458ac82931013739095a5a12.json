{"seed":3325011547,"processedDockerfileHash":"eb176541526cfda94fd0d9537d7ea597","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","use-copy-instead-of-add","have-a-healthcheck"],"processedDockerfile":"FROM ubuntu:16.04\nMAINTAINER kevthehermit (https://github.com/kevthehermit/VolUtility)\n#   Version Vars\nENV YARA_VERSION=\"3.4.0\"\nENV SSDEEP_VERSION=\"2.13\"\n#   Switch to user root\nUSER root\n#   Install OS Dependancies\nRUN apt-get update \\\n && apt-get install --no-install-recommends autoconf=2.69-9 automake=1:1.15-4ubuntu1 autopoint=0.19.7-2ubuntu3.1 curl=7.47.0-1ubuntu2.19 gettext=0.19.7-2ubuntu3.1 git=1:2.7.4-0ubuntu1.10 libimage-exiftool-perl=10.10-1 libtool=2.4.6-0.1 nano=2.5.3-2ubuntu2 pkg-config=0.29.1-0ubuntu1 python-dev=2.7.12-1~16.04 python-pip=8.1.1-2ubuntu0.6 sudo=1.8.16-0ubuntu1.10 -yq\n#   Install Mongo\nRUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv EA312927 \\\n && echo \"deb http://repo.mongodb.org/apt/ubuntu xenial/mongodb-org/3.2 multiverse\" | tee /etc/apt/sources.list.d/mongodb-org-3.2.list \\\n && apt-get update \\\n && apt-get install --no-install-recommends mongodb-org -yq\n#   Install packages from source\n#   Make Tmp Dir\nRUN mkdir ~/tmp_build\n#   Install Yara\nRUN cd ~/tmp_build \\\n && curl -sSL https://github.com/plusvic/yara/archive/v$YARA_VERSION.tar.gz | tar -xzC . \\\n && cd yara-$YARA_VERSION \\\n && bash build.sh \\\n && make install \\\n && cd yara-python \\\n && python setup.py build \\\n && python setup.py install \\\n && cd ../.. \\\n && rm -rf yara-$YARA_VERSION \\\n && ldconfig\n#   Install SSDEEP\nRUN cd ~/tmp_build \\\n && curl -sSL http://sourceforge.net/projects/ssdeep/files/ssdeep-${SSDEEP_VERSION}/ssdeep-${SSDEEP_VERSION}.tar.gz/download | tar -xzC . \\\n && cd ssdeep-${SSDEEP_VERSION} \\\n && ./configure \\\n && make install \\\n && pip install pydeep==0.4 \\\n && cd .. \\\n && rm -rf ssdeep-${SSDEEP_VERSION}\n#   Get the maxmind database for ip lookup\nRUN cd ~/tmp_build \\\n && curl -sSL http://geolite.maxmind.com/download/geoip/database/GeoLite2-City.mmdb.gz > GeoLite2-City.mmdb.gz \\\n && gzip -d GeoLite2-City.mmdb.gz \\\n && mkdir /usr/share/GeoIP/ \\\n && mv GeoLite2-City.mmdb /usr/share/GeoIP/\n#   Install and Build libpff\nRUN cd ~/tmp_build \\\n && git clone https://github.com/libyal/libpff.git \\\n && cd libpff/ \\\n && ./synclibs.sh \\\n && ./autogen.sh \\\n && ./configure --enable-python \\\n && make \\\n && make install \\\n && ldconfig\n#   Install Volatility\nRUN cd ~/tmp_build \\\n && git clone https://github.com/volatilityfoundation/volatility.git \\\n && cd volatility \\\n && python setup.py install\n#   Create Volutility User\nRUN groupadd -r volutility \\\n && useradd -r -g volutility -d /home/volutility -s /sbin/nologin -c \"Volutility User\" volutility \\\n && usermod -a -G sudo volutility \\\n && mkdir /home/volutility \\\n && chown -R volutility:volutility /home/volutility\n#   Get VolUtility\nRUN cd /opt \\\n && git clone https://github.com/kevthehermit/VolUtility.git \\\n && chown -R volutility:volutility /opt/VolUtility\n#   Install PIP Requirements.\nRUN cd /opt/VolUtility \\\n && pip install -r requirements.txt\n#   Clean Up\nRUN rm -rf ~/tmp_build\nRUN apt-get remove -yq automake autopoint gettext autoconf gettext pkg-config libtool\nRUN sudo apt-get clean\n#   Setup and Run\nUSER volutility\nWORKDIR /opt/VolUtility\nCOPY start.sh start.sh\nRUN mkdir ~/dbpath\nRUN chmod 755 ~/dbpath\nCMD /bin/bash /opt/VolUtility/start.sh\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:16.04\nMAINTAINER kevthehermit (https://github.com/kevthehermit/VolUtility)\n#  Version Vars\nENV YARA_VERSION=\"3.4.0\"\nENV SSDEEP_VERSION=\"2.13\"\n#  Switch to user root\nUSER root\n#  Install OS Dependancies\nRUN apt-get update \\\n && apt-get install autoconf automake autopoint curl gettext git libimage-exiftool-perl libtool nano pkg-config python-dev python-pip sudo -yq\n#  Install Mongo\nRUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv EA312927 \\\n && echo \"deb http://repo.mongodb.org/apt/ubuntu xenial/mongodb-org/3.2 multiverse\" | tee /etc/apt/sources.list.d/mongodb-org-3.2.list \\\n && apt-get update \\\n && apt-get install mongodb-org -yq\n#  Install packages from source\n#  Make Tmp Dir\nRUN mkdir ~/tmp_build\n#  Install Yara\nRUN cd ~/tmp_build \\\n && curl -sSL https://github.com/plusvic/yara/archive/v$YARA_VERSION.tar.gz | tar -xzC . \\\n && cd yara-$YARA_VERSION \\\n && bash build.sh \\\n && make install \\\n && cd yara-python \\\n && python setup.py build \\\n && python setup.py install \\\n && cd ../.. \\\n && rm -rf yara-$YARA_VERSION \\\n && ldconfig\n#  Install SSDEEP\nRUN cd ~/tmp_build \\\n && curl -sSL http://sourceforge.net/projects/ssdeep/files/ssdeep-${SSDEEP_VERSION}/ssdeep-${SSDEEP_VERSION}.tar.gz/download | tar -xzC . \\\n && cd ssdeep-${SSDEEP_VERSION} \\\n && ./configure \\\n && make install \\\n && pip install pydeep \\\n && cd .. \\\n && rm -rf ssdeep-${SSDEEP_VERSION}\n#  Get the maxmind database for ip lookup\nRUN cd ~/tmp_build \\\n && curl -sSL http://geolite.maxmind.com/download/geoip/database/GeoLite2-City.mmdb.gz > GeoLite2-City.mmdb.gz \\\n && gzip -d GeoLite2-City.mmdb.gz \\\n && mkdir /usr/share/GeoIP/ \\\n && mv GeoLite2-City.mmdb /usr/share/GeoIP/\n#  Install and Build libpff\nRUN cd ~/tmp_build \\\n && git clone https://github.com/libyal/libpff.git \\\n && cd libpff/ \\\n && ./synclibs.sh \\\n && ./autogen.sh \\\n && ./configure --enable-python \\\n && make \\\n && make install \\\n && ldconfig\n#  Install Volatility\nRUN cd ~/tmp_build \\\n && git clone https://github.com/volatilityfoundation/volatility.git \\\n && cd volatility \\\n && python setup.py install\n#  Create Volutility User\nRUN groupadd -r volutility \\\n && useradd -r -g volutility -d /home/volutility -s /sbin/nologin -c \"Volutility User\" volutility \\\n && usermod -a -G sudo volutility \\\n && mkdir /home/volutility \\\n && chown -R volutility:volutility /home/volutility\n#  Get VolUtility\nRUN cd /opt \\\n && git clone https://github.com/kevthehermit/VolUtility.git \\\n && chown -R volutility:volutility /opt/VolUtility\n#  Install PIP Requirements.\nRUN cd /opt/VolUtility \\\n && pip install -r requirements.txt\n#  Clean Up\nRUN rm -rf ~/tmp_build\nRUN apt-get remove -yq automake autopoint gettext autoconf gettext pkg-config libtool\nRUN sudo apt-get clean\n#  Setup and Run\nUSER volutility\nWORKDIR /opt/VolUtility\nADD start.sh start.sh\nRUN mkdir ~/dbpath\nRUN chmod 755 ~/dbpath\nCMD /bin/bash /opt/VolUtility/start.sh\n","injectedSmells":[],"originalDockerfileHash":"cda6a1a5a2d008ec3faa7eacc62fa65b","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:16.04\nMAINTAINER kevthehermit (https://github.com/kevthehermit/VolUtility)\n#   Version Vars\nENV YARA_VERSION=\"3.4.0\"\nENV SSDEEP_VERSION=\"2.13\"\n#   Switch to user root\nUSER root\n#   Install OS Dependancies\nRUN apt-get update \\\n && apt-get install autoconf automake autopoint curl gettext git libimage-exiftool-perl libtool nano pkg-config python-dev python-pip sudo -yq\n#   Install Mongo\nRUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv EA312927 \\\n && echo \"deb http://repo.mongodb.org/apt/ubuntu xenial/mongodb-org/3.2 multiverse\" | tee /etc/apt/sources.list.d/mongodb-org-3.2.list \\\n && apt-get update \\\n && apt-get install mongodb-org -yq\n#   Install packages from source\n#   Make Tmp Dir\nRUN mkdir ~/tmp_build\n#   Install Yara\nRUN cd ~/tmp_build \\\n && curl -sSL https://github.com/plusvic/yara/archive/v$YARA_VERSION.tar.gz | tar -xzC . \\\n && cd yara-$YARA_VERSION \\\n && bash build.sh \\\n && make install \\\n && cd yara-python \\\n && python setup.py build \\\n && python setup.py install \\\n && cd ../.. \\\n && rm -rf yara-$YARA_VERSION \\\n && ldconfig\n#   Install SSDEEP\nRUN cd ~/tmp_build \\\n && curl -sSL http://sourceforge.net/projects/ssdeep/files/ssdeep-${SSDEEP_VERSION}/ssdeep-${SSDEEP_VERSION}.tar.gz/download | tar -xzC . \\\n && cd ssdeep-${SSDEEP_VERSION} \\\n && ./configure \\\n && make install \\\n && pip install pydeep \\\n && cd .. \\\n && rm -rf ssdeep-${SSDEEP_VERSION}\n#   Get the maxmind database for ip lookup\nRUN cd ~/tmp_build \\\n && curl -sSL http://geolite.maxmind.com/download/geoip/database/GeoLite2-City.mmdb.gz > GeoLite2-City.mmdb.gz \\\n && gzip -d GeoLite2-City.mmdb.gz \\\n && mkdir /usr/share/GeoIP/ \\\n && mv GeoLite2-City.mmdb /usr/share/GeoIP/\n#   Install and Build libpff\nRUN cd ~/tmp_build \\\n && git clone https://github.com/libyal/libpff.git \\\n && cd libpff/ \\\n && ./synclibs.sh \\\n && ./autogen.sh \\\n && ./configure --enable-python \\\n && make \\\n && make install \\\n && ldconfig\n#   Install Volatility\nRUN cd ~/tmp_build \\\n && git clone https://github.com/volatilityfoundation/volatility.git \\\n && cd volatility \\\n && python setup.py install\n#   Create Volutility User\nRUN groupadd -r volutility \\\n && useradd -r -g volutility -d /home/volutility -s /sbin/nologin -c \"Volutility User\" volutility \\\n && usermod -a -G sudo volutility \\\n && mkdir /home/volutility \\\n && chown -R volutility:volutility /home/volutility\n#   Get VolUtility\nRUN cd /opt \\\n && git clone https://github.com/kevthehermit/VolUtility.git \\\n && chown -R volutility:volutility /opt/VolUtility\n#   Install PIP Requirements.\nRUN cd /opt/VolUtility \\\n && pip install -r requirements.txt\n#   Clean Up\nRUN rm -rf ~/tmp_build\nRUN apt-get remove -yq automake autopoint gettext autoconf gettext pkg-config libtool\nRUN sudo apt-get clean\n#   Setup and Run\nUSER volutility\nWORKDIR /opt/VolUtility\nADD start.sh start.sh\nRUN mkdir ~/dbpath\nRUN chmod 755 ~/dbpath\nCMD /bin/bash /opt/VolUtility/start.sh\n","originalDockerfileUglifiedHash":"735e95b0d58133c6c5c44973fffb35ab","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/3b13dab347318f3c458ac82931013739095a5a12.dockerfile"}