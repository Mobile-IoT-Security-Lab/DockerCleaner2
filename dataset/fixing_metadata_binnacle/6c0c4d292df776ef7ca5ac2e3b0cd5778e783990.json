{"seed":597027683,"processedDockerfileHash":"3f79d9f782a745f7c5bb00dbb77ff0c3","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-pip","pin-package-manager-versions-npm","use-copy-instead-of-add","have-a-healthcheck"],"processedDockerfile":"FROM nvidia/cuda:9.0-cudnn7-devel-ubuntu16.04\nMAINTAINER Miguel Morales <mimoralea@gmail.com>\nARG PYTHON_VERSION=3.6\nUSER root\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#   update ubuntu installation\nRUN apt-get update \\\n && apt-get install --no-install-recommends apt-utils -y \\\n && apt-get install --no-install-recommends build-essential bzip2 ca-certificates cmake curl emacs ffmpeg flex fluidsynth fonts-liberation gifsicle git imagemagick inkscape jed libav-tools libboost-all-dev libjpeg-dev libpng-dev libpq-dev libsdl2-dev libsm6 libxext-dev libxrender1 lmodern locales nano netcat pandoc python-dev qt-sdk sudo swig texlive-fonts-extra texlive-fonts-recommended texlive-generic-recommended texlive-latex-base texlive-latex-extra texlive-xetex unzip vim wget xpra xvfb -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\nRUN echo \"en_US.UTF-8 UTF-8\" > /etc/locale.gen \\\n && locale-gen\n#   Configure environment\nENV CONDA_DIR=\"/opt/conda\" \\\n    SHELL=\"/bin/bash\" \\\n    NB_USER=\"jovyan\" \\\n    NB_UID=\"1000\" \\\n    NB_GID=\"100\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US.UTF-8\"\nENV PATH=\"$CONDA_DIR/bin:$PATH\" \\\n    HOME=\"/home/$NB_USER\"\nCOPY fix-permissions /usr/local/bin/fix-permissions\n#   Create jovyan user with UID=1000 and in the 'users' group\n#   and make sure these dirs are writable by the `users` group.\nRUN groupadd wheel -g 11 \\\n && echo \"auth required pam_wheel.so use_uid\" >> /etc/pam.d/su \\\n && useradd -m -s /bin/bash -N -u $NB_UID $NB_USER \\\n && mkdir -p $CONDA_DIR \\\n && chown $NB_USER:$NB_GID $CONDA_DIR \\\n && chmod g+w /etc/passwd \\\n && fix-permissions $HOME \\\n && fix-permissions $CONDA_DIR\nUSER $NB_UID\n#   Setup work directory for backward-compatibility\nRUN mkdir /home/$NB_USER/work \\\n && fix-permissions /home/$NB_USER\n#   Install conda as jovyan and check the md5 sum provided on the download site\nENV MINICONDA_VERSION=\"4.5.4\"\nRUN cd /tmp \\\n && wget --quiet https://repo.continuum.io/miniconda/Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh \\\n && echo \"a946ea1d0c4a642ddf0c3a26a18bb16d *Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh\" | md5sum -c - \\\n && /bin/bash Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh -f -b -p $CONDA_DIR \\\n && rm Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh \\\n && $CONDA_DIR/bin/conda config --system --prepend channels conda-forge \\\n && $CONDA_DIR/bin/conda config --system --set auto_update_conda false \\\n && $CONDA_DIR/bin/conda config --system --set show_channel_urls true \\\n && $CONDA_DIR/bin/conda install --quiet --yes conda=\"${MINICONDA_VERSION%.*}.*\" \\\n && $CONDA_DIR/bin/conda update --all --quiet --yes \\\n && conda clean -tipsy \\\n && rm -rf /home/$NB_USER/.cache/yarn \\\n && fix-permissions $CONDA_DIR \\\n && fix-permissions /home/$NB_USER\n#   Install Tini\nRUN conda install --quiet --yes 'tini=0.18.0' \\\n && conda list tini | grep tini | tr -s ' ' | cut -d ' ' -f 1,2 >> $CONDA_DIR/conda-meta/pinned \\\n && conda clean -tipsy \\\n && fix-permissions $CONDA_DIR \\\n && fix-permissions /home/$NB_USER\n#   Install Jupyter Notebook, Lab, and Hub\n#   Generate a notebook server config\n#   Cleanup temporary files\n#   Correct permissions\n#   Do all this in a single RUN command to avoid duplicating all of the\n#   files across image layers when the permissions change\nRUN conda install --quiet --yes 'notebook=5.7.2' 'jupyterhub=0.9.2' 'jupyterlab=0.35.4' \\\n && conda clean -tipsy \\\n && jupyter labextension install @jupyterlab/hub-extension@^0.12.0 \\\n && npm cache clean --force \\\n && jupyter notebook --generate-config \\\n && rm -rf $CONDA_DIR/share/jupyter/lab/staging \\\n && rm -rf /home/$NB_USER/.cache/yarn \\\n && fix-permissions $CONDA_DIR \\\n && fix-permissions /home/$NB_USER\nUSER root\n#   Configure container startup\nENTRYPOINT [\"tini\", \"-g\", \"--\"]\n#   RUN chmod +x /usr/local/bin/start-notebook.sh\nCMD [\"start-notebook.sh\"]\n#   Add local files as late as possible to avoid cache busting\nCOPY start.sh /usr/local/bin/\nCOPY start-notebook.sh /usr/local/bin/\nCOPY start-singleuser.sh /usr/local/bin/\nCOPY jupyter_notebook_config.py /etc/jupyter/\nRUN fix-permissions /etc/jupyter/\n#   Switch back to jovyan to avoid accidental container runs as root\nUSER $NB_UID\n#   Install Python 3 packages\n#   Remove pyqt and qt pulled in for matplotlib since we're only ever going to\n#   use notebook-friendly backends in these images\nRUN conda install --quiet --yes 'conda-forge::blas=*=openblas' 'beautifulsoup4=4.6.*' 'bokeh=0.13*' 'cloudpickle=0.5*' 'cython=0.28*' 'dill=0.2*' 'h5py=2.7*' 'hdf5=1.10*' 'ipywidgets=7.2*' 'matplotlib=2.2*' 'numba=0.38*' 'numexpr=2.6*' 'pandas=0.23*' 'patsy=0.5*' 'protobuf=3.*' 'scikit-image=0.14*' 'scikit-learn=0.19*' 'scipy=1.1*' 'seaborn=0.9*' 'sqlalchemy=1.2*' 'statsmodels=0.9*' 'sympy=1.1*' 'vincent=0.4.*' 'xlrd' \\\n && conda remove --quiet --yes --force qt pyqt \\\n && conda clean -tipsy \\\n && jupyter nbextension enable --py widgetsnbextension --sys-prefix \\\n && jupyter labextension install @jupyter-widgets/jupyterlab-manager@^0.38.1 \\\n && jupyter labextension install jupyterlab_bokeh@0.6.3 \\\n && npm cache clean --force \\\n && rm -rf $CONDA_DIR/share/jupyter/lab/staging \\\n && rm -rf /home/$NB_USER/.cache/yarn \\\n && rm -rf /home/$NB_USER/.node-gyp \\\n && fix-permissions $CONDA_DIR \\\n && fix-permissions /home/$NB_USER\nRUN npm install npm@9.6.4 -g \\\n && npm install asciicast2gif@0.2.1 -g\n#   Install facets which does not have a pip or conda package at the moment\nRUN cd /tmp \\\n && git clone https://github.com/PAIR-code/facets.git \\\n && cd facets \\\n && jupyter nbextension install facets-dist/ --sys-prefix \\\n && cd \\\n && rm -rf /tmp/facets \\\n && fix-permissions $CONDA_DIR \\\n && fix-permissions /home/$NB_USER\n#   Import matplotlib the first time to build the font cache.\nENV XDG_CACHE_HOME=\"/home/$NB_USER/.cache/\"\nRUN MPLBACKEND=Agg python -c \"import matplotlib.pyplot\" \\\n && fix-permissions /home/$NB_USER\nUSER $NB_UID\nRUN /opt/conda/bin/conda install -y python=$PYTHON_VERSION numpy pyyaml scipy ipython mkl mkl-include cython typing \\\n && /opt/conda/bin/conda install -y -c pytorch magma-cuda90 \\\n && /opt/conda/bin/conda clean -ya\nENV PATH=\"/opt/conda/bin:$PATH\"\n#   This must be done before pip so that requirements.txt is available\n#   jupyter notebook\nEXPOSE 8888/tcp\n#   tensorboard\nEXPOSE 6006/tcp\n#   switch back to user\nUSER $NB_USER\nRUN conda install --yes --quiet pytorch torchvision -c pytorch\n#   install necessary packages\nRUN pip install pip==23.1 --upgrade \\\n && pip install tqdm==4.65.0 numpy==1.24.2 scikit-learn==1.2.2 pyglet==2.0.5 setuptools==67.6.1 gym==0.26.2 asciinema==2.2.0 pandas==2.0.0 tabulate==0.9.0 tornado==5.*\nRUN pip install git+https://github.com/mimoralea/gym-bandits#egg==ym-bandits \\\n && pip install git+https://github.com/mimoralea/gym-walk#egg==ym-walk \\\n && pip install git+https://github.com/mimoralea/gym-aima#egg==ym-aima \\\n && pip install git+https://github.com/pybox2d/pybox2d#egg==ox2D\n#   create a script to start the notebook with xvfb on the back\n#   this allows screen display to work well\nRUN echo '#!/bin/bash' > /tmp/run.sh \\\n && echo \"nohup sh -c 'tensorboard --logdir=/mnt/notebooks/logs' > /dev/null 2>&1 &\" >> /tmp/run.sh \\\n && echo 'find /mnt/notebooks/ -name \"*.ipynb\" -exec jupyter trust {} \\;' >> /tmp/run.sh \\\n && echo 'xvfb-run -s \"-screen 0 1280x720x24\" /usr/local/bin/start-notebook.sh' >> /tmp/run.sh \\\n && chmod +x /tmp/run.sh\n#   move notebooks into container\n#   ADD notebooks /mnt/notebooks\n#   make the dir with notebooks the working dir\nWORKDIR /mnt/notebooks\n#   run the script to start the notebook\nENTRYPOINT [\"/tmp/run.sh\"]\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM nvidia/cuda:9.0-cudnn7-devel-ubuntu16.04\nMAINTAINER Miguel Morales <mimoralea@gmail.com>\nARG PYTHON_VERSION=3.6\nUSER root\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#  update ubuntu installation\nRUN apt-get update \\\n && apt-get install --no-install-recommends apt-utils -y \\\n && apt-get install --no-install-recommends build-essential bzip2 ca-certificates cmake curl emacs ffmpeg flex fluidsynth fonts-liberation gifsicle git imagemagick inkscape jed libav-tools libboost-all-dev libjpeg-dev libpng-dev libpq-dev libsdl2-dev libsm6 libxext-dev libxrender1 lmodern locales nano netcat pandoc python-dev qt-sdk sudo swig texlive-fonts-extra texlive-fonts-recommended texlive-generic-recommended texlive-latex-base texlive-latex-extra texlive-xetex unzip vim wget xpra xvfb -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\nRUN echo \"en_US.UTF-8 UTF-8\" > /etc/locale.gen \\\n && locale-gen\n#  Configure environment\nENV CONDA_DIR=\"/opt/conda\" \\\n    SHELL=\"/bin/bash\" \\\n    NB_USER=\"jovyan\" \\\n    NB_UID=\"1000\" \\\n    NB_GID=\"100\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US.UTF-8\"\nENV PATH=\"$CONDA_DIR/bin:$PATH\" \\\n    HOME=\"/home/$NB_USER\"\nADD fix-permissions /usr/local/bin/fix-permissions\n#  Create jovyan user with UID=1000 and in the 'users' group\n#  and make sure these dirs are writable by the `users` group.\nRUN groupadd wheel -g 11 \\\n && echo \"auth required pam_wheel.so use_uid\" >> /etc/pam.d/su \\\n && useradd -m -s /bin/bash -N -u $NB_UID $NB_USER \\\n && mkdir -p $CONDA_DIR \\\n && chown $NB_USER:$NB_GID $CONDA_DIR \\\n && chmod g+w /etc/passwd \\\n && fix-permissions $HOME \\\n && fix-permissions $CONDA_DIR\nUSER $NB_UID\n#  Setup work directory for backward-compatibility\nRUN mkdir /home/$NB_USER/work \\\n && fix-permissions /home/$NB_USER\n#  Install conda as jovyan and check the md5 sum provided on the download site\nENV MINICONDA_VERSION=\"4.5.4\"\nRUN cd /tmp \\\n && wget --quiet https://repo.continuum.io/miniconda/Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh \\\n && echo \"a946ea1d0c4a642ddf0c3a26a18bb16d *Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh\" | md5sum -c - \\\n && /bin/bash Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh -f -b -p $CONDA_DIR \\\n && rm Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh \\\n && $CONDA_DIR/bin/conda config --system --prepend channels conda-forge \\\n && $CONDA_DIR/bin/conda config --system --set auto_update_conda false \\\n && $CONDA_DIR/bin/conda config --system --set show_channel_urls true \\\n && $CONDA_DIR/bin/conda install --quiet --yes conda=\"${MINICONDA_VERSION%.*}.*\" \\\n && $CONDA_DIR/bin/conda update --all --quiet --yes \\\n && conda clean -tipsy \\\n && rm -rf /home/$NB_USER/.cache/yarn \\\n && fix-permissions $CONDA_DIR \\\n && fix-permissions /home/$NB_USER\n#  Install Tini\nRUN conda install --quiet --yes 'tini=0.18.0' \\\n && conda list tini | grep tini | tr -s ' ' | cut -d ' ' -f 1,2 >> $CONDA_DIR/conda-meta/pinned \\\n && conda clean -tipsy \\\n && fix-permissions $CONDA_DIR \\\n && fix-permissions /home/$NB_USER\n#  Install Jupyter Notebook, Lab, and Hub\n#  Generate a notebook server config\n#  Cleanup temporary files\n#  Correct permissions\n#  Do all this in a single RUN command to avoid duplicating all of the\n#  files across image layers when the permissions change\nRUN conda install --quiet --yes 'notebook=5.7.2' 'jupyterhub=0.9.2' 'jupyterlab=0.35.4' \\\n && conda clean -tipsy \\\n && jupyter labextension install @jupyterlab/hub-extension@^0.12.0 \\\n && npm cache clean --force \\\n && jupyter notebook --generate-config \\\n && rm -rf $CONDA_DIR/share/jupyter/lab/staging \\\n && rm -rf /home/$NB_USER/.cache/yarn \\\n && fix-permissions $CONDA_DIR \\\n && fix-permissions /home/$NB_USER\nUSER root\n#  Configure container startup\nENTRYPOINT [\"tini\", \"-g\", \"--\"]\n#  RUN chmod +x /usr/local/bin/start-notebook.sh\nCMD [\"start-notebook.sh\"]\n#  Add local files as late as possible to avoid cache busting\nCOPY start.sh /usr/local/bin/\nCOPY start-notebook.sh /usr/local/bin/\nCOPY start-singleuser.sh /usr/local/bin/\nCOPY jupyter_notebook_config.py /etc/jupyter/\nRUN fix-permissions /etc/jupyter/\n#  Switch back to jovyan to avoid accidental container runs as root\nUSER $NB_UID\n#  Install Python 3 packages\n#  Remove pyqt and qt pulled in for matplotlib since we're only ever going to\n#  use notebook-friendly backends in these images\nRUN conda install --quiet --yes 'conda-forge::blas=*=openblas' 'beautifulsoup4=4.6.*' 'bokeh=0.13*' 'cloudpickle=0.5*' 'cython=0.28*' 'dill=0.2*' 'h5py=2.7*' 'hdf5=1.10*' 'ipywidgets=7.2*' 'matplotlib=2.2*' 'numba=0.38*' 'numexpr=2.6*' 'pandas=0.23*' 'patsy=0.5*' 'protobuf=3.*' 'scikit-image=0.14*' 'scikit-learn=0.19*' 'scipy=1.1*' 'seaborn=0.9*' 'sqlalchemy=1.2*' 'statsmodels=0.9*' 'sympy=1.1*' 'vincent=0.4.*' 'xlrd' \\\n && conda remove --quiet --yes --force qt pyqt \\\n && conda clean -tipsy \\\n && jupyter nbextension enable --py widgetsnbextension --sys-prefix \\\n && jupyter labextension install @jupyter-widgets/jupyterlab-manager@^0.38.1 \\\n && jupyter labextension install jupyterlab_bokeh@0.6.3 \\\n && npm cache clean --force \\\n && rm -rf $CONDA_DIR/share/jupyter/lab/staging \\\n && rm -rf /home/$NB_USER/.cache/yarn \\\n && rm -rf /home/$NB_USER/.node-gyp \\\n && fix-permissions $CONDA_DIR \\\n && fix-permissions /home/$NB_USER\nRUN npm install npm -g \\\n && npm install asciicast2gif -g\n#  Install facets which does not have a pip or conda package at the moment\nRUN cd /tmp \\\n && git clone https://github.com/PAIR-code/facets.git \\\n && cd facets \\\n && jupyter nbextension install facets-dist/ --sys-prefix \\\n && cd \\\n && rm -rf /tmp/facets \\\n && fix-permissions $CONDA_DIR \\\n && fix-permissions /home/$NB_USER\n#  Import matplotlib the first time to build the font cache.\nENV XDG_CACHE_HOME=\"/home/$NB_USER/.cache/\"\nRUN MPLBACKEND=Agg python -c \"import matplotlib.pyplot\" \\\n && fix-permissions /home/$NB_USER\nUSER $NB_UID\nRUN /opt/conda/bin/conda install -y python=$PYTHON_VERSION numpy pyyaml scipy ipython mkl mkl-include cython typing \\\n && /opt/conda/bin/conda install -y -c pytorch magma-cuda90 \\\n && /opt/conda/bin/conda clean -ya\nENV PATH=\"/opt/conda/bin:$PATH\"\n#  This must be done before pip so that requirements.txt is available\n#  jupyter notebook\nEXPOSE 8888/tcp\n#  tensorboard\nEXPOSE 6006/tcp\n#  switch back to user\nUSER $NB_USER\nRUN conda install --yes --quiet pytorch torchvision -c pytorch\n#  install necessary packages\nRUN pip install pip --upgrade \\\n && pip install tqdm numpy scikit-learn pyglet setuptools gym asciinema pandas tabulate tornado==5.*\nRUN pip install git+https://github.com/mimoralea/gym-bandits#egg==ym-bandits \\\n && pip install git+https://github.com/mimoralea/gym-walk#egg==ym-walk \\\n && pip install git+https://github.com/mimoralea/gym-aima#egg==ym-aima \\\n && pip install git+https://github.com/pybox2d/pybox2d#egg==ox2D\n#  create a script to start the notebook with xvfb on the back\n#  this allows screen display to work well\nRUN echo '#!/bin/bash' > /tmp/run.sh \\\n && echo \"nohup sh -c 'tensorboard --logdir=/mnt/notebooks/logs' > /dev/null 2>&1 &\" >> /tmp/run.sh \\\n && echo 'find /mnt/notebooks/ -name \"*.ipynb\" -exec jupyter trust {} \\;' >> /tmp/run.sh \\\n && echo 'xvfb-run -s \"-screen 0 1280x720x24\" /usr/local/bin/start-notebook.sh' >> /tmp/run.sh \\\n && chmod +x /tmp/run.sh\n#  move notebooks into container\n#  ADD notebooks /mnt/notebooks\n#  make the dir with notebooks the working dir\nWORKDIR /mnt/notebooks\n#  run the script to start the notebook\nENTRYPOINT [\"/tmp/run.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"726dd54012628940858792472395eb63","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM nvidia/cuda:9.0-cudnn7-devel-ubuntu16.04\nMAINTAINER Miguel Morales <mimoralea@gmail.com>\nARG PYTHON_VERSION=3.6\nUSER root\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#   update ubuntu installation\nRUN apt-get update \\\n && apt-get install --no-install-recommends apt-utils -y \\\n && apt-get install --no-install-recommends build-essential bzip2 ca-certificates cmake curl emacs ffmpeg flex fluidsynth fonts-liberation gifsicle git imagemagick inkscape jed libav-tools libboost-all-dev libjpeg-dev libpng-dev libpq-dev libsdl2-dev libsm6 libxext-dev libxrender1 lmodern locales nano netcat pandoc python-dev qt-sdk sudo swig texlive-fonts-extra texlive-fonts-recommended texlive-generic-recommended texlive-latex-base texlive-latex-extra texlive-xetex unzip vim wget xpra xvfb -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\nRUN echo \"en_US.UTF-8 UTF-8\" > /etc/locale.gen \\\n && locale-gen\n#   Configure environment\nENV CONDA_DIR=\"/opt/conda\" \\\n    SHELL=\"/bin/bash\" \\\n    NB_USER=\"jovyan\" \\\n    NB_UID=\"1000\" \\\n    NB_GID=\"100\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US.UTF-8\"\nENV PATH=\"$CONDA_DIR/bin:$PATH\" \\\n    HOME=\"/home/$NB_USER\"\nADD fix-permissions /usr/local/bin/fix-permissions\n#   Create jovyan user with UID=1000 and in the 'users' group\n#   and make sure these dirs are writable by the `users` group.\nRUN groupadd wheel -g 11 \\\n && echo \"auth required pam_wheel.so use_uid\" >> /etc/pam.d/su \\\n && useradd -m -s /bin/bash -N -u $NB_UID $NB_USER \\\n && mkdir -p $CONDA_DIR \\\n && chown $NB_USER:$NB_GID $CONDA_DIR \\\n && chmod g+w /etc/passwd \\\n && fix-permissions $HOME \\\n && fix-permissions $CONDA_DIR\nUSER $NB_UID\n#   Setup work directory for backward-compatibility\nRUN mkdir /home/$NB_USER/work \\\n && fix-permissions /home/$NB_USER\n#   Install conda as jovyan and check the md5 sum provided on the download site\nENV MINICONDA_VERSION=\"4.5.4\"\nRUN cd /tmp \\\n && wget --quiet https://repo.continuum.io/miniconda/Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh \\\n && echo \"a946ea1d0c4a642ddf0c3a26a18bb16d *Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh\" | md5sum -c - \\\n && /bin/bash Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh -f -b -p $CONDA_DIR \\\n && rm Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh \\\n && $CONDA_DIR/bin/conda config --system --prepend channels conda-forge \\\n && $CONDA_DIR/bin/conda config --system --set auto_update_conda false \\\n && $CONDA_DIR/bin/conda config --system --set show_channel_urls true \\\n && $CONDA_DIR/bin/conda install --quiet --yes conda=\"${MINICONDA_VERSION%.*}.*\" \\\n && $CONDA_DIR/bin/conda update --all --quiet --yes \\\n && conda clean -tipsy \\\n && rm -rf /home/$NB_USER/.cache/yarn \\\n && fix-permissions $CONDA_DIR \\\n && fix-permissions /home/$NB_USER\n#   Install Tini\nRUN conda install --quiet --yes 'tini=0.18.0' \\\n && conda list tini | grep tini | tr -s ' ' | cut -d ' ' -f 1,2 >> $CONDA_DIR/conda-meta/pinned \\\n && conda clean -tipsy \\\n && fix-permissions $CONDA_DIR \\\n && fix-permissions /home/$NB_USER\n#   Install Jupyter Notebook, Lab, and Hub\n#   Generate a notebook server config\n#   Cleanup temporary files\n#   Correct permissions\n#   Do all this in a single RUN command to avoid duplicating all of the\n#   files across image layers when the permissions change\nRUN conda install --quiet --yes 'notebook=5.7.2' 'jupyterhub=0.9.2' 'jupyterlab=0.35.4' \\\n && conda clean -tipsy \\\n && jupyter labextension install @jupyterlab/hub-extension@^0.12.0 \\\n && npm cache clean --force \\\n && jupyter notebook --generate-config \\\n && rm -rf $CONDA_DIR/share/jupyter/lab/staging \\\n && rm -rf /home/$NB_USER/.cache/yarn \\\n && fix-permissions $CONDA_DIR \\\n && fix-permissions /home/$NB_USER\nUSER root\n#   Configure container startup\nENTRYPOINT [\"tini\", \"-g\", \"--\"]\n#   RUN chmod +x /usr/local/bin/start-notebook.sh\nCMD [\"start-notebook.sh\"]\n#   Add local files as late as possible to avoid cache busting\nCOPY start.sh /usr/local/bin/\nCOPY start-notebook.sh /usr/local/bin/\nCOPY start-singleuser.sh /usr/local/bin/\nCOPY jupyter_notebook_config.py /etc/jupyter/\nRUN fix-permissions /etc/jupyter/\n#   Switch back to jovyan to avoid accidental container runs as root\nUSER $NB_UID\n#   Install Python 3 packages\n#   Remove pyqt and qt pulled in for matplotlib since we're only ever going to\n#   use notebook-friendly backends in these images\nRUN conda install --quiet --yes 'conda-forge::blas=*=openblas' 'beautifulsoup4=4.6.*' 'bokeh=0.13*' 'cloudpickle=0.5*' 'cython=0.28*' 'dill=0.2*' 'h5py=2.7*' 'hdf5=1.10*' 'ipywidgets=7.2*' 'matplotlib=2.2*' 'numba=0.38*' 'numexpr=2.6*' 'pandas=0.23*' 'patsy=0.5*' 'protobuf=3.*' 'scikit-image=0.14*' 'scikit-learn=0.19*' 'scipy=1.1*' 'seaborn=0.9*' 'sqlalchemy=1.2*' 'statsmodels=0.9*' 'sympy=1.1*' 'vincent=0.4.*' 'xlrd' \\\n && conda remove --quiet --yes --force qt pyqt \\\n && conda clean -tipsy \\\n && jupyter nbextension enable --py widgetsnbextension --sys-prefix \\\n && jupyter labextension install @jupyter-widgets/jupyterlab-manager@^0.38.1 \\\n && jupyter labextension install jupyterlab_bokeh@0.6.3 \\\n && npm cache clean --force \\\n && rm -rf $CONDA_DIR/share/jupyter/lab/staging \\\n && rm -rf /home/$NB_USER/.cache/yarn \\\n && rm -rf /home/$NB_USER/.node-gyp \\\n && fix-permissions $CONDA_DIR \\\n && fix-permissions /home/$NB_USER\nRUN npm install npm -g \\\n && npm install asciicast2gif -g\n#   Install facets which does not have a pip or conda package at the moment\nRUN cd /tmp \\\n && git clone https://github.com/PAIR-code/facets.git \\\n && cd facets \\\n && jupyter nbextension install facets-dist/ --sys-prefix \\\n && cd \\\n && rm -rf /tmp/facets \\\n && fix-permissions $CONDA_DIR \\\n && fix-permissions /home/$NB_USER\n#   Import matplotlib the first time to build the font cache.\nENV XDG_CACHE_HOME=\"/home/$NB_USER/.cache/\"\nRUN MPLBACKEND=Agg python -c \"import matplotlib.pyplot\" \\\n && fix-permissions /home/$NB_USER\nUSER $NB_UID\nRUN /opt/conda/bin/conda install -y python=$PYTHON_VERSION numpy pyyaml scipy ipython mkl mkl-include cython typing \\\n && /opt/conda/bin/conda install -y -c pytorch magma-cuda90 \\\n && /opt/conda/bin/conda clean -ya\nENV PATH=\"/opt/conda/bin:$PATH\"\n#   This must be done before pip so that requirements.txt is available\n#   jupyter notebook\nEXPOSE 8888/tcp\n#   tensorboard\nEXPOSE 6006/tcp\n#   switch back to user\nUSER $NB_USER\nRUN conda install --yes --quiet pytorch torchvision -c pytorch\n#   install necessary packages\nRUN pip install pip --upgrade \\\n && pip install tqdm numpy scikit-learn pyglet setuptools gym asciinema pandas tabulate tornado==5.*\nRUN pip install git+https://github.com/mimoralea/gym-bandits#egg==ym-bandits \\\n && pip install git+https://github.com/mimoralea/gym-walk#egg==ym-walk \\\n && pip install git+https://github.com/mimoralea/gym-aima#egg==ym-aima \\\n && pip install git+https://github.com/pybox2d/pybox2d#egg==ox2D\n#   create a script to start the notebook with xvfb on the back\n#   this allows screen display to work well\nRUN echo '#!/bin/bash' > /tmp/run.sh \\\n && echo \"nohup sh -c 'tensorboard --logdir=/mnt/notebooks/logs' > /dev/null 2>&1 &\" >> /tmp/run.sh \\\n && echo 'find /mnt/notebooks/ -name \"*.ipynb\" -exec jupyter trust {} \\;' >> /tmp/run.sh \\\n && echo 'xvfb-run -s \"-screen 0 1280x720x24\" /usr/local/bin/start-notebook.sh' >> /tmp/run.sh \\\n && chmod +x /tmp/run.sh\n#   move notebooks into container\n#   ADD notebooks /mnt/notebooks\n#   make the dir with notebooks the working dir\nWORKDIR /mnt/notebooks\n#   run the script to start the notebook\nENTRYPOINT [\"/tmp/run.sh\"]\n","originalDockerfileUglifiedHash":"d77d7307f7de0c27fd823f2c23b119c6","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/6c0c4d292df776ef7ca5ac2e3b0cd5778e783990.dockerfile"}