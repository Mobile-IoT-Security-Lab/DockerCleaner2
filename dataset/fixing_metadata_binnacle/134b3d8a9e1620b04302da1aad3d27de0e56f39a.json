{"seed":1345583458,"processedDockerfileHash":"ecd23bdde617f64f7bcc7fa00adef262","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM openjdk:8-slim\nMAINTAINER Julian Xhokaxhiu <info at julianxhokaxhiu dot com>\n#   Environment variables\n#  ######################\nENV USER=\"root\"\nENV SRC_DIR=\"/srv/src\"\nENV CCACHE_DIR=\"/srv/ccache\"\nENV ZIP_DIR=\"/srv/zips\"\nENV LMANIFEST_DIR=\"/srv/local_manifests\"\n#   Configurable environment variables\n#  ###################################\n#   By default we want to use CCACHE, you can disable this\n#   WARNING: disabling this may slow down a lot your builds!\nENV USE_CCACHE=\"1\"\n#   Environment that controls the CCACHE size\n#   suggested: 50G\nENV CCACHE_SIZE=\"'50G'\"\n#   Environment that compresses objects stored in CCACHE\n#   suggested: 1\n#   WARNING: While this may involve a tiny performance slowdown, it increases the number of files that fit in the cache.\nENV CCACHE_COMPRESS=\"1\"\n#   Environment for the LineageOS Branch name\n#   See https://github.com/LineageOS/android_vendor_cm/branches for possible options\nENV BRANCH_NAME=\"'cm-14.1'\"\n#   Environment for the device list ( separate by comma if more than one)\n#   eg. DEVICE_LIST=hammerhead,bullhead,angler\nENV DEVICE_LIST=\"''\"\n#   OTA build.prop key that will be used inside CMUpdater\n#   Use this in combination with LineageOTA to make sure your device can auto-update itself from this buildbot\nENV OTA_PROP=\"'cm.updater.uri'\"\n#   OTA URL that will be used inside CMUpdater\n#   Use this in combination with LineageOTA to make sure your device can auto-update itself from this buildbot\nENV OTA_URL=\"''\"\n#   User identity\nENV USER_NAME=\"'LineageOS Buildbot'\"\nENV USER_MAIL=\"'lineageos-buildbot@docker.host'\"\n#   If you want to start always fresh ( re-download all the source code everytime ) set this to 'true'\nENV CLEAN_SRCDIR=\"false\"\n#   If you want to preserve old ZIPs set this to 'false'\nENV CLEAN_OUTDIR=\"true\"\n#   Change this cron rule to what fits best for you\n#   By Default = At 10:00 UTC ~ 2am PST/PDT\nENV CRONTAB_TIME=\"'0 10 * * *'\"\n#   Print detailed output rather than only summary\nENV DEBUG=\"false\"\n#   Clean artifacts output after each build\nENV CLEAN_AFTER_BUILD=\"true\"\n#   Provide root capabilities builtin inside the ROM ( see http://lineageos.org/Update-and-Build-Prep/ )\nENV WITH_SU=\"true\"\n#   Provide a default JACK configuration in order to avoid out-of-memory issues\nENV ANDROID_JACK_VM_ARGS=\"\\\"-Dfile.encoding=UTF-8 -XX:+TieredCompilation -Xmx4G\\\"\"\n#   Create Volume entry points\n#  ###########################\nVOLUME $SRC_DIR\nVOLUME $CCACHE_DIR\nVOLUME $ZIP_DIR\nVOLUME $LMANIFEST_DIR\n#   Copy required files and fix permissions\n#  ####################\nCOPY src/* /root/\n#   Create missing directories\n#  ###########################\nRUN mkdir -p $SRC_DIR\nRUN mkdir -p $CCACHE_DIR\nRUN mkdir -p $ZIP_DIR\nRUN mkdir -p $LMANIFEST_DIR\n#   Set the work directory\n#  #######################\nWORKDIR $SRC_DIR\n#   Fix permissions\n#  ################\nRUN chmod 0755 /root/*\n#   Enable contrib support\n#  ########################\nRUN sed -i \"s/ main$/ main contrib/\" /etc/apt/sources.list\n#   Install required Android AOSP packages\n#  #######################################\nRUN apt-get update \\\n && apt-get install --no-install-recommends bc=1.07.1-2+b2 bison=2:3.7.5+dfsg-1 build-essential=12.9 ccache=4.2-1 cron=3.0pl1-137 curl=7.74.0-1.3+deb11u7 flex=2.6.4-8 g++-multilib=4:10.2.1-1 gcc-multilib=4:10.2.1-1 git=1:2.30.2-1+deb11u2 gnupg=2.2.27-2+deb11u2 gperf=3.1-1 imagemagick=8:6.9.11.60+dfsg-1.3+deb11u1 lib32ncurses5-dev lib32readline-dev=8.1-1 lib32z1-dev=1:1.2.11.dfsg-2+deb11u2 libesd0-dev liblz4-tool=1.9.3-2 libncurses5-dev=6.2+20201114-2 libsdl1.2-dev=1.2.15+dfsg2-6 libssl-dev=1.1.1n-0+deb11u4 libwxgtk3.0-dev libxml2=2.9.10+dfsg-6.7+deb11u3 libxml2-utils=2.9.10+dfsg-6.7+deb11u3 lzop=1.04-2 maven=3.6.3-5 openssl=1.1.1n-0+deb11u4 pngcrush=1.8.13-0.1 procps=2:3.3.17-5 python repo rsync=3.2.3-4+deb11u1 schedtool=1.3.0-4 squashfs-tools=1:4.4-2+deb11u2 unzip=6.0-26+deb11u1 wget=1.21-1+deb11u1 xsltproc=1.1.34-4+deb11u1 zip=3.0-12 zlib1g-dev=1:1.2.11.dfsg-2+deb11u2 -y\n#   Allow redirection of stdout to docker logs\n#  ###########################################\nRUN ln -sf /proc/1/fd/1 /var/log/docker.log\n#   Cleanup\n#  ########\nRUN apt-get clean \\\n && apt-get autoclean\n#   Set the entry point to init.sh\n#  ##########################################\nENTRYPOINT /root/init.sh\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM openjdk:8-slim\nMAINTAINER Julian Xhokaxhiu <info at julianxhokaxhiu dot com>\n#  Environment variables\n# ######################\nENV USER=\"root\"\nENV SRC_DIR=\"/srv/src\"\nENV CCACHE_DIR=\"/srv/ccache\"\nENV ZIP_DIR=\"/srv/zips\"\nENV LMANIFEST_DIR=\"/srv/local_manifests\"\n#  Configurable environment variables\n# ###################################\n#  By default we want to use CCACHE, you can disable this\n#  WARNING: disabling this may slow down a lot your builds!\nENV USE_CCACHE=\"1\"\n#  Environment that controls the CCACHE size\n#  suggested: 50G\nENV CCACHE_SIZE=\"'50G'\"\n#  Environment that compresses objects stored in CCACHE\n#  suggested: 1\n#  WARNING: While this may involve a tiny performance slowdown, it increases the number of files that fit in the cache.\nENV CCACHE_COMPRESS=\"1\"\n#  Environment for the LineageOS Branch name\n#  See https://github.com/LineageOS/android_vendor_cm/branches for possible options\nENV BRANCH_NAME=\"'cm-14.1'\"\n#  Environment for the device list ( separate by comma if more than one)\n#  eg. DEVICE_LIST=hammerhead,bullhead,angler\nENV DEVICE_LIST=\"''\"\n#  OTA build.prop key that will be used inside CMUpdater\n#  Use this in combination with LineageOTA to make sure your device can auto-update itself from this buildbot\nENV OTA_PROP=\"'cm.updater.uri'\"\n#  OTA URL that will be used inside CMUpdater\n#  Use this in combination with LineageOTA to make sure your device can auto-update itself from this buildbot\nENV OTA_URL=\"''\"\n#  User identity\nENV USER_NAME=\"'LineageOS Buildbot'\"\nENV USER_MAIL=\"'lineageos-buildbot@docker.host'\"\n#  If you want to start always fresh ( re-download all the source code everytime ) set this to 'true'\nENV CLEAN_SRCDIR=\"false\"\n#  If you want to preserve old ZIPs set this to 'false'\nENV CLEAN_OUTDIR=\"true\"\n#  Change this cron rule to what fits best for you\n#  By Default = At 10:00 UTC ~ 2am PST/PDT\nENV CRONTAB_TIME=\"'0 10 * * *'\"\n#  Print detailed output rather than only summary\nENV DEBUG=\"false\"\n#  Clean artifacts output after each build\nENV CLEAN_AFTER_BUILD=\"true\"\n#  Provide root capabilities builtin inside the ROM ( see http://lineageos.org/Update-and-Build-Prep/ )\nENV WITH_SU=\"true\"\n#  Provide a default JACK configuration in order to avoid out-of-memory issues\nENV ANDROID_JACK_VM_ARGS=\"\\\"-Dfile.encoding=UTF-8 -XX:+TieredCompilation -Xmx4G\\\"\"\n#  Create Volume entry points\n# ###########################\nVOLUME $SRC_DIR\nVOLUME $CCACHE_DIR\nVOLUME $ZIP_DIR\nVOLUME $LMANIFEST_DIR\n#  Copy required files and fix permissions\n# ####################\nCOPY src/* /root/\n#  Create missing directories\n# ###########################\nRUN mkdir -p $SRC_DIR\nRUN mkdir -p $CCACHE_DIR\nRUN mkdir -p $ZIP_DIR\nRUN mkdir -p $LMANIFEST_DIR\n#  Set the work directory\n# #######################\nWORKDIR $SRC_DIR\n#  Fix permissions\n# ################\nRUN chmod 0755 /root/*\n#  Enable contrib support\n# ########################\nRUN sed -i \"s/ main$/ main contrib/\" /etc/apt/sources.list\n#  Install required Android AOSP packages\n# #######################################\nRUN apt-get update \\\n && apt-get install --no-install-recommends bc bison build-essential ccache cron curl flex g++-multilib gcc-multilib git gnupg gperf imagemagick lib32ncurses5-dev lib32readline-dev lib32z1-dev libesd0-dev liblz4-tool libncurses5-dev libsdl1.2-dev libssl-dev libwxgtk3.0-dev libxml2 libxml2-utils lzop maven openssl pngcrush procps python repo rsync schedtool squashfs-tools unzip wget xsltproc zip zlib1g-dev -y\n#  Allow redirection of stdout to docker logs\n# ###########################################\nRUN ln -sf /proc/1/fd/1 /var/log/docker.log\n#  Cleanup\n# ########\nRUN apt-get clean \\\n && apt-get autoclean\n#  Set the entry point to init.sh\n# ##########################################\nENTRYPOINT /root/init.sh\n","injectedSmells":[],"originalDockerfileHash":"ada3922cc2b6ea876112f3c45033f962","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM openjdk:8-slim\nMAINTAINER Julian Xhokaxhiu <info at julianxhokaxhiu dot com>\n#   Environment variables\n#  ######################\nENV USER=\"root\"\nENV SRC_DIR=\"/srv/src\"\nENV CCACHE_DIR=\"/srv/ccache\"\nENV ZIP_DIR=\"/srv/zips\"\nENV LMANIFEST_DIR=\"/srv/local_manifests\"\n#   Configurable environment variables\n#  ###################################\n#   By default we want to use CCACHE, you can disable this\n#   WARNING: disabling this may slow down a lot your builds!\nENV USE_CCACHE=\"1\"\n#   Environment that controls the CCACHE size\n#   suggested: 50G\nENV CCACHE_SIZE=\"'50G'\"\n#   Environment that compresses objects stored in CCACHE\n#   suggested: 1\n#   WARNING: While this may involve a tiny performance slowdown, it increases the number of files that fit in the cache.\nENV CCACHE_COMPRESS=\"1\"\n#   Environment for the LineageOS Branch name\n#   See https://github.com/LineageOS/android_vendor_cm/branches for possible options\nENV BRANCH_NAME=\"'cm-14.1'\"\n#   Environment for the device list ( separate by comma if more than one)\n#   eg. DEVICE_LIST=hammerhead,bullhead,angler\nENV DEVICE_LIST=\"''\"\n#   OTA build.prop key that will be used inside CMUpdater\n#   Use this in combination with LineageOTA to make sure your device can auto-update itself from this buildbot\nENV OTA_PROP=\"'cm.updater.uri'\"\n#   OTA URL that will be used inside CMUpdater\n#   Use this in combination with LineageOTA to make sure your device can auto-update itself from this buildbot\nENV OTA_URL=\"''\"\n#   User identity\nENV USER_NAME=\"'LineageOS Buildbot'\"\nENV USER_MAIL=\"'lineageos-buildbot@docker.host'\"\n#   If you want to start always fresh ( re-download all the source code everytime ) set this to 'true'\nENV CLEAN_SRCDIR=\"false\"\n#   If you want to preserve old ZIPs set this to 'false'\nENV CLEAN_OUTDIR=\"true\"\n#   Change this cron rule to what fits best for you\n#   By Default = At 10:00 UTC ~ 2am PST/PDT\nENV CRONTAB_TIME=\"'0 10 * * *'\"\n#   Print detailed output rather than only summary\nENV DEBUG=\"false\"\n#   Clean artifacts output after each build\nENV CLEAN_AFTER_BUILD=\"true\"\n#   Provide root capabilities builtin inside the ROM ( see http://lineageos.org/Update-and-Build-Prep/ )\nENV WITH_SU=\"true\"\n#   Provide a default JACK configuration in order to avoid out-of-memory issues\nENV ANDROID_JACK_VM_ARGS=\"\\\"-Dfile.encoding=UTF-8 -XX:+TieredCompilation -Xmx4G\\\"\"\n#   Create Volume entry points\n#  ###########################\nVOLUME $SRC_DIR\nVOLUME $CCACHE_DIR\nVOLUME $ZIP_DIR\nVOLUME $LMANIFEST_DIR\n#   Copy required files and fix permissions\n#  ####################\nCOPY src/* /root/\n#   Create missing directories\n#  ###########################\nRUN mkdir -p $SRC_DIR\nRUN mkdir -p $CCACHE_DIR\nRUN mkdir -p $ZIP_DIR\nRUN mkdir -p $LMANIFEST_DIR\n#   Set the work directory\n#  #######################\nWORKDIR $SRC_DIR\n#   Fix permissions\n#  ################\nRUN chmod 0755 /root/*\n#   Enable contrib support\n#  ########################\nRUN sed -i \"s/ main$/ main contrib/\" /etc/apt/sources.list\n#   Install required Android AOSP packages\n#  #######################################\nRUN apt-get update \\\n && apt-get install --no-install-recommends bc bison build-essential ccache cron curl flex g++-multilib gcc-multilib git gnupg gperf imagemagick lib32ncurses5-dev lib32readline-dev lib32z1-dev libesd0-dev liblz4-tool libncurses5-dev libsdl1.2-dev libssl-dev libwxgtk3.0-dev libxml2 libxml2-utils lzop maven openssl pngcrush procps python repo rsync schedtool squashfs-tools unzip wget xsltproc zip zlib1g-dev -y\n#   Allow redirection of stdout to docker logs\n#  ###########################################\nRUN ln -sf /proc/1/fd/1 /var/log/docker.log\n#   Cleanup\n#  ########\nRUN apt-get clean \\\n && apt-get autoclean\n#   Set the entry point to init.sh\n#  ##########################################\nENTRYPOINT /root/init.sh\n","originalDockerfileUglifiedHash":"3ce94a7e6eb4726a452e06efdb3affb2","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/134b3d8a9e1620b04302da1aad3d27de0e56f39a.dockerfile"}