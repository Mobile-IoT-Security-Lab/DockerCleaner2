{"seed":813510243,"processedDockerfileHash":"13857df25c7f3917bb1017ade44ac580","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","have-a-healthcheck","have-a-user"],"processedDockerfile":"#  ########################################################################################\n#   Dockerfile to build vitam and run on one server\n#   Based on Debian\n#\n#   Maintained by Vitam Integration Team\n#   Image name: vitam/dev-deb-base\n#  ########################################################################################\n#   Set the base image to Debian 8\nFROM debian:9.5\nMAINTAINER French Prime minister Office/SGMAP/DINSIC/Vitam Program <contact.vitam@culture.gouv.fr>\n#  ENV DEBIAN_FRONTEND noninteractive\nRUN apt-get clean \\\n && apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends apt-utils -y )\n#   Make sure the package repository and packages are up to date.\nCOPY deb/stretch-backports.list /etc/apt/sources.list.d\nRUN apt-get clean \\\n && : \\\n && apt-get upgrade -y\nRUN apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends stretch-backports openjdk-8-jdk-headless -t -y )\nRUN (apt-get update ;apt-get install --no-install-recommends systemd-sysv -y )\n#  ###############################  Configure systemd  ###############################\n#   Hint for systemd that we are running inside a container\nENV container=\"docker\"\nRUN cd /lib/systemd/system/sysinit.target.wants/ \\\n && ls | grep -v systemd-tmpfiles-setup.service | xargs rm -f \\\n && rm -f /lib/systemd/system/sockets.target.wants/*udev* \\\n && systemctl mask -- tmp.mount etc-hostname.mount etc-hosts.mount etc-resolv.conf.mount -.mount swap.target getty.target getty-static.service dev-mqueue.mount systemd-tmpfiles-setup-dev.service systemd-tmpfiles-setup.service systemd-remount-fs.service systemd-update-utmp-runlevel.service systemd-logind.service \\\n && systemctl set-default multi-user.target || true\n#  ###############################  Install build tools (rpm / maven / java)  ###############################\nRUN apt-get clean \\\n && apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends openssl -y )\n#   to bypass the \"trustAnchors parameter must be non-empty\" problem\n#   See http://stackoverflow.com/questions/6784463/error-trustanchors-parameter-must-be-non-empty\nRUN /var/lib/dpkg/info/ca-certificates-java.postinst configure\nRUN apt-get clean \\\n && apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends curl -y ) \\\n && apt-get clean\n#   Add Java to path\nENV JAVA_HOME=\"/usr/lib/jvm/java-8-openjdk-amd64\"\n#   Install & configure maven\nRUN curl -k http://repo.maven.apache.org/maven2/org/apache/maven/apache-maven/3.3.9/apache-maven-3.3.9-bin.tar.gz --output /tmp/maven.tgz \\\n && tar xvzf /tmp/maven.tgz --directory /opt \\\n && rm -f /tmp/maven.tgz \\\n && ln -s /opt/apache-maven-3.3.9 /opt/maven \\\n && mkdir -p /devhome/.m2 \\\n && chmod -R 777 /devhome\n#   Add Maven & java to path\nENV M2_HOME=\"/opt/maven\"\nENV PATH=\"${M2_HOME}/bin:${JAVA_HOME}/bin:${PATH}\"\n#  ###############################  Install ansible  ###############################\n#   for sudo in automatic deployment ; note : ansible needs epel repo\nRUN apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends sudo net-tools -y ) \\\n && apt-get clean\n#   Editor & unzip\nRUN (apt-get update ;apt-get install --no-install-recommends vim unzip wget -y )\nRUN (apt-get update ;apt-get install --no-install-recommends stretch-backports golang -y -t )\nRUN (apt-get update ;apt-get install --no-install-recommends node-gyp nodejs-dev -y ) \\\n && (apt-get update ;apt-get install --no-install-recommends nodejs -y ) \\\n && ln -s /usr/bin/nodejs /usr/bin/node\nRUN apt-get -t stretch-backports -y install ansible\nRUN apt-get clean \\\n && apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends git vim -y )\n#  #################################  Declare local deb repo  #################################\n#   Note : declare at the end ; else other commands will fail.\nRUN apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends dpkg-dev -y ) \\\n && apt-get clean\nCOPY deb/local.list /etc/apt/sources.list.d/local.list\n#  ################################# Add dev helpers #################################\nCOPY deb/vitam-build-repo /usr/bin\nCOPY vitam-deploy /usr/bin\nCOPY vitam-deploy-extra /usr/bin\nCOPY deb/vitam-maven-build-only /usr/bin\nCOPY vitam-redeploy /usr/bin\nCOPY vitam-redeploy-extra /usr/bin\nCOPY vitam-command /usr/bin\nRUN chmod a+x /usr/bin/vitam-*\n#   KWA review : Why remove this script ?\nCOPY deb/profile-build-repo.sh /etc/profile.d\nCOPY profile-prompt-usage.sh /etc/profile.d\nCOPY .bashrc /devhome\nCOPY vitam-usage.txt /etc\nCOPY deb/sudo-nopwd /etc/sudoers.d\nRUN chmod 664 /etc/sudoers.d/sudo-nopwd\nENV TERM=\"xterm\"\n#   If we don't install openjdk a 2nd time, sometimes it doesn't work, why ???\nRUN (apt-get update ;apt-get install --no-install-recommends stretch-backports openjdk-8-jdk-headless -t -y )\n#  #################################  CONTAINER SETTINGS  #################################\n#   VOLUME [ \"/sys/fs/cgroup\" ]\nVOLUME [ \"/code\" ]\nVOLUME [ \"/devhome/.m2\" ]\nWORKDIR /code\n#  ENV DEBIAN_FRONTEND teletype\n#   Entry Point to systemd init\nCMD [\"/sbin/init\"]\nCOPY vitam-stop /usr/bin\nCOPY vitam-start /usr/bin\nCOPY vitam-restart /usr/bin\nCOPY vitam-bench-ingest /usr/bin\nCOPY vitam-mongo-cli /usr/bin\nCOPY vitam-mongo-cli-rs /usr/bin\nCOPY deb/vitam-recreate-repo /usr/bin\nRUN chmod a+x /usr/bin/vitam-*\n#   System tuning for elasticsearch\nRUN echo \"vm.max_map_count = 262144\" >> /etc/sysctl.conf\nCOPY deb/vitam-build-griffins /usr/bin\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"# ########################################################################################\n#  Dockerfile to build vitam and run on one server\n#  Based on Debian\n#\n#  Maintained by Vitam Integration Team\n#  Image name: vitam/dev-deb-base\n# ########################################################################################\n#  Set the base image to Debian 8\nFROM debian:9.5\nMAINTAINER French Prime minister Office/SGMAP/DINSIC/Vitam Program <contact.vitam@culture.gouv.fr>\n# ENV DEBIAN_FRONTEND noninteractive\nRUN apt-get clean \\\n && apt-get update \\\n && apt-get install apt-utils -y\n#  Make sure the package repository and packages are up to date.\nCOPY deb/stretch-backports.list /etc/apt/sources.list.d\nRUN apt-get clean \\\n && apt-get update \\\n && apt-get upgrade -y\nRUN apt-get update \\\n && apt-get install stretch-backports openjdk-8-jdk-headless -t -y\nRUN apt-get install systemd-sysv -y\n# ###############################  Configure systemd  ###############################\n#  Hint for systemd that we are running inside a container\nENV container=\"docker\"\nRUN cd /lib/systemd/system/sysinit.target.wants/ \\\n && ls | grep -v systemd-tmpfiles-setup.service | xargs rm -f \\\n && rm -f /lib/systemd/system/sockets.target.wants/*udev* \\\n && systemctl mask -- tmp.mount etc-hostname.mount etc-hosts.mount etc-resolv.conf.mount -.mount swap.target getty.target getty-static.service dev-mqueue.mount systemd-tmpfiles-setup-dev.service systemd-tmpfiles-setup.service systemd-remount-fs.service systemd-update-utmp-runlevel.service systemd-logind.service \\\n && systemctl set-default multi-user.target || true\n# ###############################  Install build tools (rpm / maven / java)  ###############################\nRUN apt-get clean \\\n && apt-get update \\\n && apt-get install openssl -y\n#  to bypass the \"trustAnchors parameter must be non-empty\" problem\n#  See http://stackoverflow.com/questions/6784463/error-trustanchors-parameter-must-be-non-empty\nRUN /var/lib/dpkg/info/ca-certificates-java.postinst configure\nRUN apt-get clean \\\n && apt-get update \\\n && apt-get install curl -y \\\n && apt-get clean\n#  Add Java to path\nENV JAVA_HOME=\"/usr/lib/jvm/java-8-openjdk-amd64\"\n#  Install & configure maven\nRUN curl -k http://repo.maven.apache.org/maven2/org/apache/maven/apache-maven/3.3.9/apache-maven-3.3.9-bin.tar.gz --output /tmp/maven.tgz \\\n && tar xvzf /tmp/maven.tgz --directory /opt \\\n && rm -f /tmp/maven.tgz \\\n && ln -s /opt/apache-maven-3.3.9 /opt/maven \\\n && mkdir -p /devhome/.m2 \\\n && chmod -R 777 /devhome\n#  Add Maven & java to path\nENV M2_HOME=\"/opt/maven\"\nENV PATH=\"${M2_HOME}/bin:${JAVA_HOME}/bin:${PATH}\"\n# ###############################  Install ansible  ###############################\n#  for sudo in automatic deployment ; note : ansible needs epel repo\nRUN apt-get update \\\n && apt-get install sudo net-tools -y \\\n && apt-get clean\n#  Editor & unzip\nRUN apt-get install vim unzip wget -y\nRUN apt-get install stretch-backports golang -y -t\nRUN apt-get install node-gyp nodejs-dev -y \\\n && apt-get install nodejs -y \\\n && ln -s /usr/bin/nodejs /usr/bin/node\nRUN apt-get -t stretch-backports -y install ansible\nRUN apt-get clean \\\n && apt-get update \\\n && apt-get install git vim -y\n# #################################  Declare local deb repo  #################################\n#  Note : declare at the end ; else other commands will fail.\nRUN apt-get update \\\n && apt-get install dpkg-dev -y \\\n && apt-get clean\nCOPY deb/local.list /etc/apt/sources.list.d/local.list\n# ################################# Add dev helpers #################################\nCOPY deb/vitam-build-repo /usr/bin\nCOPY vitam-deploy /usr/bin\nCOPY vitam-deploy-extra /usr/bin\nCOPY deb/vitam-maven-build-only /usr/bin\nCOPY vitam-redeploy /usr/bin\nCOPY vitam-redeploy-extra /usr/bin\nCOPY vitam-command /usr/bin\nRUN chmod a+x /usr/bin/vitam-*\n#  KWA review : Why remove this script ?\nCOPY deb/profile-build-repo.sh /etc/profile.d\nCOPY profile-prompt-usage.sh /etc/profile.d\nCOPY .bashrc /devhome\nCOPY vitam-usage.txt /etc\nCOPY deb/sudo-nopwd /etc/sudoers.d\nRUN chmod 664 /etc/sudoers.d/sudo-nopwd\nENV TERM=\"xterm\"\n#  If we don't install openjdk a 2nd time, sometimes it doesn't work, why ???\nRUN apt-get install stretch-backports openjdk-8-jdk-headless -t -y\n# #################################  CONTAINER SETTINGS  #################################\n#  VOLUME [ \"/sys/fs/cgroup\" ]\nVOLUME [ \"/code\" ]\nVOLUME [ \"/devhome/.m2\" ]\nWORKDIR /code\n# ENV DEBIAN_FRONTEND teletype\n#  Entry Point to systemd init\nCMD [\"/sbin/init\"]\nCOPY vitam-stop /usr/bin\nCOPY vitam-start /usr/bin\nCOPY vitam-restart /usr/bin\nCOPY vitam-bench-ingest /usr/bin\nCOPY vitam-mongo-cli /usr/bin\nCOPY vitam-mongo-cli-rs /usr/bin\nCOPY deb/vitam-recreate-repo /usr/bin\nRUN chmod a+x /usr/bin/vitam-*\n#  System tuning for elasticsearch\nRUN echo \"vm.max_map_count = 262144\" >> /etc/sysctl.conf\nCOPY deb/vitam-build-griffins /usr/bin\n","injectedSmells":[],"originalDockerfileHash":"cfb0be3d4b71c73c04698e0e307d2e63","successfullyInjectedSmells":[],"originalDockerfileUglified":"#  ########################################################################################\n#   Dockerfile to build vitam and run on one server\n#   Based on Debian\n#\n#   Maintained by Vitam Integration Team\n#   Image name: vitam/dev-deb-base\n#  ########################################################################################\n#   Set the base image to Debian 8\nFROM debian:9.5\nMAINTAINER French Prime minister Office/SGMAP/DINSIC/Vitam Program <contact.vitam@culture.gouv.fr>\n#  ENV DEBIAN_FRONTEND noninteractive\nRUN apt-get clean \\\n && apt-get update \\\n && apt-get install apt-utils -y\n#   Make sure the package repository and packages are up to date.\nCOPY deb/stretch-backports.list /etc/apt/sources.list.d\nRUN apt-get clean \\\n && apt-get update \\\n && apt-get upgrade -y\nRUN apt-get update \\\n && apt-get install stretch-backports openjdk-8-jdk-headless -t -y\nRUN apt-get install systemd-sysv -y\n#  ###############################  Configure systemd  ###############################\n#   Hint for systemd that we are running inside a container\nENV container=\"docker\"\nRUN cd /lib/systemd/system/sysinit.target.wants/ \\\n && ls | grep -v systemd-tmpfiles-setup.service | xargs rm -f \\\n && rm -f /lib/systemd/system/sockets.target.wants/*udev* \\\n && systemctl mask -- tmp.mount etc-hostname.mount etc-hosts.mount etc-resolv.conf.mount -.mount swap.target getty.target getty-static.service dev-mqueue.mount systemd-tmpfiles-setup-dev.service systemd-tmpfiles-setup.service systemd-remount-fs.service systemd-update-utmp-runlevel.service systemd-logind.service \\\n && systemctl set-default multi-user.target || true\n#  ###############################  Install build tools (rpm / maven / java)  ###############################\nRUN apt-get clean \\\n && apt-get update \\\n && apt-get install openssl -y\n#   to bypass the \"trustAnchors parameter must be non-empty\" problem\n#   See http://stackoverflow.com/questions/6784463/error-trustanchors-parameter-must-be-non-empty\nRUN /var/lib/dpkg/info/ca-certificates-java.postinst configure\nRUN apt-get clean \\\n && apt-get update \\\n && apt-get install curl -y \\\n && apt-get clean\n#   Add Java to path\nENV JAVA_HOME=\"/usr/lib/jvm/java-8-openjdk-amd64\"\n#   Install & configure maven\nRUN curl -k http://repo.maven.apache.org/maven2/org/apache/maven/apache-maven/3.3.9/apache-maven-3.3.9-bin.tar.gz --output /tmp/maven.tgz \\\n && tar xvzf /tmp/maven.tgz --directory /opt \\\n && rm -f /tmp/maven.tgz \\\n && ln -s /opt/apache-maven-3.3.9 /opt/maven \\\n && mkdir -p /devhome/.m2 \\\n && chmod -R 777 /devhome\n#   Add Maven & java to path\nENV M2_HOME=\"/opt/maven\"\nENV PATH=\"${M2_HOME}/bin:${JAVA_HOME}/bin:${PATH}\"\n#  ###############################  Install ansible  ###############################\n#   for sudo in automatic deployment ; note : ansible needs epel repo\nRUN apt-get update \\\n && apt-get install sudo net-tools -y \\\n && apt-get clean\n#   Editor & unzip\nRUN apt-get install vim unzip wget -y\nRUN apt-get install stretch-backports golang -y -t\nRUN apt-get install node-gyp nodejs-dev -y \\\n && apt-get install nodejs -y \\\n && ln -s /usr/bin/nodejs /usr/bin/node\nRUN apt-get -t stretch-backports -y install ansible\nRUN apt-get clean \\\n && apt-get update \\\n && apt-get install git vim -y\n#  #################################  Declare local deb repo  #################################\n#   Note : declare at the end ; else other commands will fail.\nRUN apt-get update \\\n && apt-get install dpkg-dev -y \\\n && apt-get clean\nCOPY deb/local.list /etc/apt/sources.list.d/local.list\n#  ################################# Add dev helpers #################################\nCOPY deb/vitam-build-repo /usr/bin\nCOPY vitam-deploy /usr/bin\nCOPY vitam-deploy-extra /usr/bin\nCOPY deb/vitam-maven-build-only /usr/bin\nCOPY vitam-redeploy /usr/bin\nCOPY vitam-redeploy-extra /usr/bin\nCOPY vitam-command /usr/bin\nRUN chmod a+x /usr/bin/vitam-*\n#   KWA review : Why remove this script ?\nCOPY deb/profile-build-repo.sh /etc/profile.d\nCOPY profile-prompt-usage.sh /etc/profile.d\nCOPY .bashrc /devhome\nCOPY vitam-usage.txt /etc\nCOPY deb/sudo-nopwd /etc/sudoers.d\nRUN chmod 664 /etc/sudoers.d/sudo-nopwd\nENV TERM=\"xterm\"\n#   If we don't install openjdk a 2nd time, sometimes it doesn't work, why ???\nRUN apt-get install stretch-backports openjdk-8-jdk-headless -t -y\n#  #################################  CONTAINER SETTINGS  #################################\n#   VOLUME [ \"/sys/fs/cgroup\" ]\nVOLUME [ \"/code\" ]\nVOLUME [ \"/devhome/.m2\" ]\nWORKDIR /code\n#  ENV DEBIAN_FRONTEND teletype\n#   Entry Point to systemd init\nCMD [\"/sbin/init\"]\nCOPY vitam-stop /usr/bin\nCOPY vitam-start /usr/bin\nCOPY vitam-restart /usr/bin\nCOPY vitam-bench-ingest /usr/bin\nCOPY vitam-mongo-cli /usr/bin\nCOPY vitam-mongo-cli-rs /usr/bin\nCOPY deb/vitam-recreate-repo /usr/bin\nRUN chmod a+x /usr/bin/vitam-*\n#   System tuning for elasticsearch\nRUN echo \"vm.max_map_count = 262144\" >> /etc/sysctl.conf\nCOPY deb/vitam-build-griffins /usr/bin\n","originalDockerfileUglifiedHash":"85423c976de9dacb71057d9baf11473a","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/f8f6ebe3cc32dc736eb27950678bd0efd19c1f1c.dockerfile"}