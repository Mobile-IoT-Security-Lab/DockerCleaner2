{"seed":3463795128,"processedDockerfileHash":"551d387613c36052ce6622951dda89ea","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-pip","pin-package-manager-versions-gem","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM ruby:2.3-slim\nENV LANG=\"C.UTF-8\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends curl gnupg apt-transport-https -y\nCOPY config/google-chrome-apt-key.pub /tmp/\nRUN echo \"deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main\" >> /etc/apt/sources.list.d/google-chrome.list \\\n && apt-key add /tmp/google-chrome-apt-key.pub\nRUN echo \"deb http://packages.cloud.google.com/apt cloud-sdk-jessie main\" | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list \\\n && curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -\nRUN curl -sL \"https://keybase.io/crystal/pgp_keys.asc\" | apt-key add - \\\n && echo \"deb https://dist.crystal-lang.org/apt crystal main\" | tee /etc/apt/sources.list.d/crystal.list\nRUN curl -sL \"https://packages.cloudfoundry.org/debian/cli.cloudfoundry.org.key\" | apt-key add - \\\n && echo \"deb https://packages.cloudfoundry.org/debian stable main\" | tee /etc/apt/sources.list.d/cloudfoundry-cli.list\nRUN apt-get update \\\n && apt-get install --no-install-recommends aufs-tools crystal libxml2-dev expect git google-cloud-sdk iptables jq default-libmysqlclient-dev libpq-dev libsqlite3-dev libgconf-2-4 lsb-release php7.0 pkgconf python-dev python-pip shellcheck cf-cli vim wget zip google-chrome-stable -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#   Install packages that are specific to ubuntu and not debian\n#   Including libssl allows us to build php on this image\nRUN wget http://cdn-fastly.deb.debian.org/debian/pool/main/i/icu/libicu52_52.1-8+deb8u7_amd64.deb \\\n && dpkg -i libicu52_52.1-8+deb8u7_amd64.deb \\\n && rm libicu52_52.1-8+deb8u7_amd64.deb \\\n && wget http://mirror.nus.edu.sg/Debian/pool/main/o/openssl/libssl1.0.0_1.0.1t-1%2Bdeb8u8_amd64.deb \\\n && dpkg -i libssl1.0.0_1.0.1t-1+deb8u8_amd64.deb \\\n && rm libssl1.0.0_1.0.1t-1+deb8u8_amd64.deb\nRUN curl -sSL https://get.docker.com/ | sh\nRUN git config --global user.email \"cf-buildpacks-eng@pivotal.io\"\nRUN git config --global user.name \"CF Buildpacks Team CI Server\"\nRUN git config --global core.pager cat\n#   download and install chromedriver\nRUN wget -O chromedriver.zip 'https://chromedriver.storage.googleapis.com/2.34/chromedriver_linux64.zip' \\\n && [ e42a55f9e28c3b545ef7c7727a2b4218c37489b4282e88903e4470e92bc1d967 = $( shasum -a 256 chromedriver.zip | cut -d' ' -f1 ;) ] \\\n && unzip chromedriver.zip -d /usr/local/bin/ \\\n && rm chromedriver.zip\n#   composer is a package manager for PHP apps\nRUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/bin/\nRUN mv /usr/bin/composer.phar /usr/bin/composer\n#   download the bosh2 CLI\nRUN curl -L https://github.com/cloudfoundry/bosh-cli/releases/download/v5.5.1/bosh-cli-5.5.1-linux-amd64 -o /usr/local/bin/bosh2 \\\n && [ 34e9898c244655ccbce2dc657b7d1df52e487cfd = $( shasum -a 1 /usr/local/bin/bosh2 | cut -d' ' -f1 ;) ] \\\n && chmod +x /usr/local/bin/bosh2 \\\n && ln -s /usr/local/bin/bosh2 /usr/local/bin/bosh\n#   download bbl\nRUN wget -O /usr/local/bin/bbl 'https://github.com/cloudfoundry/bosh-bootloader/releases/download/v7.6.0/bbl-v7.6.0_linux_x86-64' \\\n && [ 2e81f0560310791d604145b39f0b0c21cfd50d2c314fcd58059ff7a006cf12ca = $( shasum -a 256 /usr/local/bin/bbl | cut -d' ' -f1 ;) ] \\\n && chmod +x /usr/local/bin/bbl\n#   download credhub cli\nRUN curl -L https://github.com/cloudfoundry-incubator/credhub-cli/releases/download/2.4.0/credhub-linux-2.4.0.tgz -o credhub.tgz \\\n && [ 73edaf1ee47323c4f0aa455bcc17303a73c0cf2a6d9156542f1f6b7b1b1aa3db = $( shasum -a 256 credhub.tgz | cut -d' ' -f1 ;) ] \\\n && tar -zxf credhub.tgz --to-stdout > /usr/local/bin/credhub \\\n && rm credhub.tgz \\\n && chmod +x /usr/local/bin/credhub\n#  download spiff for spiffy things\nRUN wget -O spiff.zip 'https://github.com/cloudfoundry-incubator/spiff/releases/download/v1.0.8/spiff_linux_amd64.zip' \\\n && [ e5b49b7f32b2b3973536bf2a48beda2d236956bebff7677aa109cc2b71f56002 = $( shasum -a 256 spiff.zip | cut -d' ' -f1 ;) ] \\\n && funzip spiff.zip > /usr/bin/spiff \\\n && rm spiff.zip\nRUN chmod 755 /usr/bin/spiff\n#   Ensure Concourse Filter binary is present\nRUN wget 'https://github.com/pivotal-cf-experimental/concourse-filter/releases/download/v0.0.4/concourse-filter' \\\n && [ 2bcad41417bf5bdc545a0912c30d9c466abd4ed0cffa6b02b678f06f71a73bb8 = $( shasum -a 256 concourse-filter | cut -d' ' -f1 ;) ] \\\n && mv concourse-filter /usr/local/bin \\\n && chmod +x /usr/local/bin/concourse-filter\n#   AWS CLI\nRUN pip install awscli==1.27.114\n#   when docker container starts, ensure login scripts run\nCOPY build/*.sh /etc/profile.d/\n#   install buildpacks-ci Gemfile\nRUN gem update --system \\\n && gem install bundler --version 2.0.1\nCOPY Gemfile /usr/local/Gemfile\nCOPY Gemfile.lock /usr/local/Gemfile.lock\nRUN cd /usr/local \\\n && bundle install \\\n && bundle binstub bundler --force\n#  install fly-cli\nRUN curl \"https://buildpacks.ci.cf-app.com/api/v1/cli?arch=amd64&platform=linux\" -sfL -o /usr/local/bin/fly \\\n && chmod +x /usr/local/bin/fly\n#   git-hooks and git-secrets\nRUN curl -L https://github.com/git-hooks/git-hooks/releases/download/v1.1.4/git-hooks_linux_amd64.tar.gz -o githooks.tgz \\\n && [ 3f21c856064f8f08f8c25494ac784882a2b8811eea3bfb721a6c595b55577c48 = $( shasum -a 256 githooks.tgz | cut -d' ' -f1 ;) ] \\\n && tar -zxf githooks.tgz --to-stdout > /usr/local/bin/git-hooks \\\n && rm githooks.tgz \\\n && chmod 755 /usr/local/bin/git-hooks\nRUN git clone https://github.com/awslabs/git-secrets \\\n && cd git-secrets \\\n && make install\n#   Ensure that Concourse filtering is on for non-interactive shells\nENV BASH_ENV=\"/etc/profile.d/filter.sh\"\n#   Install go 1.12\nRUN cd /usr/local \\\n && curl -L https://dl.google.com/go/go1.12.4.linux-amd64.tar.gz -o go.tar.gz \\\n && [ d7d1f1f88ddfe55840712dc1747f37a790cbcaa448f6c9cf51bbe10aa65442f5 = $( shasum -a 256 go.tar.gz | cut -d' ' -f1 ;) ] \\\n && tar xf go.tar.gz \\\n && rm go.tar.gz \\\n && ln -s /usr/local/go/bin/* /usr/local/bin/\nENV GOROOT=\"/usr/local/go\"\n#   Install gems\n#   poltergeist for running dotnet-core-buildpack specs\nRUN gem install phantomjs --version 2.1.1.0 \\\n && ruby -e 'require \"phantomjs\"; Phantomjs.path'\n#   Add git known host\nRUN mkdir -p /root/.ssh/ \\\n && echo github.com,192.30.252.131 ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ== > /root/.ssh/known_hosts\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ruby:2.3-slim\nENV LANG=\"C.UTF-8\"\nRUN apt-get update \\\n && apt-get install curl gnupg apt-transport-https -y\nCOPY config/google-chrome-apt-key.pub /tmp/\nRUN echo \"deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main\" >> /etc/apt/sources.list.d/google-chrome.list \\\n && apt-key add /tmp/google-chrome-apt-key.pub\nRUN echo \"deb http://packages.cloud.google.com/apt cloud-sdk-jessie main\" | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list \\\n && curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -\nRUN curl -sL \"https://keybase.io/crystal/pgp_keys.asc\" | apt-key add - \\\n && echo \"deb https://dist.crystal-lang.org/apt crystal main\" | tee /etc/apt/sources.list.d/crystal.list\nRUN curl -sL \"https://packages.cloudfoundry.org/debian/cli.cloudfoundry.org.key\" | apt-key add - \\\n && echo \"deb https://packages.cloudfoundry.org/debian stable main\" | tee /etc/apt/sources.list.d/cloudfoundry-cli.list\nRUN apt-get update \\\n && apt-get install aufs-tools crystal libxml2-dev expect git google-cloud-sdk iptables jq default-libmysqlclient-dev libpq-dev libsqlite3-dev libgconf-2-4 lsb-release php7.0 pkgconf python-dev python-pip shellcheck cf-cli vim wget zip google-chrome-stable -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#  Install packages that are specific to ubuntu and not debian\n#  Including libssl allows us to build php on this image\nRUN wget http://cdn-fastly.deb.debian.org/debian/pool/main/i/icu/libicu52_52.1-8+deb8u7_amd64.deb \\\n && dpkg -i libicu52_52.1-8+deb8u7_amd64.deb \\\n && rm libicu52_52.1-8+deb8u7_amd64.deb \\\n && wget http://mirror.nus.edu.sg/Debian/pool/main/o/openssl/libssl1.0.0_1.0.1t-1%2Bdeb8u8_amd64.deb \\\n && dpkg -i libssl1.0.0_1.0.1t-1+deb8u8_amd64.deb \\\n && rm libssl1.0.0_1.0.1t-1+deb8u8_amd64.deb\nRUN curl -sSL https://get.docker.com/ | sh\nRUN git config --global user.email \"cf-buildpacks-eng@pivotal.io\"\nRUN git config --global user.name \"CF Buildpacks Team CI Server\"\nRUN git config --global core.pager cat\n#  download and install chromedriver\nRUN wget -O chromedriver.zip 'https://chromedriver.storage.googleapis.com/2.34/chromedriver_linux64.zip' \\\n && [ e42a55f9e28c3b545ef7c7727a2b4218c37489b4282e88903e4470e92bc1d967 = $( shasum -a 256 chromedriver.zip | cut -d' ' -f1 ;) ] \\\n && unzip chromedriver.zip -d /usr/local/bin/ \\\n && rm chromedriver.zip\n#  composer is a package manager for PHP apps\nRUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/bin/\nRUN mv /usr/bin/composer.phar /usr/bin/composer\n#  download the bosh2 CLI\nRUN curl -L https://github.com/cloudfoundry/bosh-cli/releases/download/v5.5.1/bosh-cli-5.5.1-linux-amd64 -o /usr/local/bin/bosh2 \\\n && [ 34e9898c244655ccbce2dc657b7d1df52e487cfd = $( shasum -a 1 /usr/local/bin/bosh2 | cut -d' ' -f1 ;) ] \\\n && chmod +x /usr/local/bin/bosh2 \\\n && ln -s /usr/local/bin/bosh2 /usr/local/bin/bosh\n#  download bbl\nRUN wget -O /usr/local/bin/bbl 'https://github.com/cloudfoundry/bosh-bootloader/releases/download/v7.6.0/bbl-v7.6.0_linux_x86-64' \\\n && [ 2e81f0560310791d604145b39f0b0c21cfd50d2c314fcd58059ff7a006cf12ca = $( shasum -a 256 /usr/local/bin/bbl | cut -d' ' -f1 ;) ] \\\n && chmod +x /usr/local/bin/bbl\n#  download credhub cli\nRUN curl -L https://github.com/cloudfoundry-incubator/credhub-cli/releases/download/2.4.0/credhub-linux-2.4.0.tgz -o credhub.tgz \\\n && [ 73edaf1ee47323c4f0aa455bcc17303a73c0cf2a6d9156542f1f6b7b1b1aa3db = $( shasum -a 256 credhub.tgz | cut -d' ' -f1 ;) ] \\\n && tar -zxf credhub.tgz --to-stdout > /usr/local/bin/credhub \\\n && rm credhub.tgz \\\n && chmod +x /usr/local/bin/credhub\n# download spiff for spiffy things\nRUN wget -O spiff.zip 'https://github.com/cloudfoundry-incubator/spiff/releases/download/v1.0.8/spiff_linux_amd64.zip' \\\n && [ e5b49b7f32b2b3973536bf2a48beda2d236956bebff7677aa109cc2b71f56002 = $( shasum -a 256 spiff.zip | cut -d' ' -f1 ;) ] \\\n && funzip spiff.zip > /usr/bin/spiff \\\n && rm spiff.zip\nRUN chmod 755 /usr/bin/spiff\n#  Ensure Concourse Filter binary is present\nRUN wget 'https://github.com/pivotal-cf-experimental/concourse-filter/releases/download/v0.0.4/concourse-filter' \\\n && [ 2bcad41417bf5bdc545a0912c30d9c466abd4ed0cffa6b02b678f06f71a73bb8 = $( shasum -a 256 concourse-filter | cut -d' ' -f1 ;) ] \\\n && mv concourse-filter /usr/local/bin \\\n && chmod +x /usr/local/bin/concourse-filter\n#  AWS CLI\nRUN pip install awscli\n#  when docker container starts, ensure login scripts run\nCOPY build/*.sh /etc/profile.d/\n#  install buildpacks-ci Gemfile\nRUN gem update --system \\\n && gem install bundler --version 2.0.1\nCOPY Gemfile /usr/local/Gemfile\nCOPY Gemfile.lock /usr/local/Gemfile.lock\nRUN cd /usr/local \\\n && bundle install \\\n && bundle binstub bundler --force\n# install fly-cli\nRUN curl \"https://buildpacks.ci.cf-app.com/api/v1/cli?arch=amd64&platform=linux\" -sfL -o /usr/local/bin/fly \\\n && chmod +x /usr/local/bin/fly\n#  git-hooks and git-secrets\nRUN curl -L https://github.com/git-hooks/git-hooks/releases/download/v1.1.4/git-hooks_linux_amd64.tar.gz -o githooks.tgz \\\n && [ 3f21c856064f8f08f8c25494ac784882a2b8811eea3bfb721a6c595b55577c48 = $( shasum -a 256 githooks.tgz | cut -d' ' -f1 ;) ] \\\n && tar -zxf githooks.tgz --to-stdout > /usr/local/bin/git-hooks \\\n && rm githooks.tgz \\\n && chmod 755 /usr/local/bin/git-hooks\nRUN git clone https://github.com/awslabs/git-secrets \\\n && cd git-secrets \\\n && make install\n#  Ensure that Concourse filtering is on for non-interactive shells\nENV BASH_ENV=\"/etc/profile.d/filter.sh\"\n#  Install go 1.12\nRUN cd /usr/local \\\n && curl -L https://dl.google.com/go/go1.12.4.linux-amd64.tar.gz -o go.tar.gz \\\n && [ d7d1f1f88ddfe55840712dc1747f37a790cbcaa448f6c9cf51bbe10aa65442f5 = $( shasum -a 256 go.tar.gz | cut -d' ' -f1 ;) ] \\\n && tar xf go.tar.gz \\\n && rm go.tar.gz \\\n && ln -s /usr/local/go/bin/* /usr/local/bin/\nENV GOROOT=\"/usr/local/go\"\n#  Install gems\n#  poltergeist for running dotnet-core-buildpack specs\nRUN gem install phantomjs \\\n && ruby -e 'require \"phantomjs\"; Phantomjs.path'\n#  Add git known host\nRUN mkdir -p /root/.ssh/ \\\n && echo github.com,192.30.252.131 ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ== > /root/.ssh/known_hosts\n","injectedSmells":[],"originalDockerfileHash":"f99af62cd63355de0c985271ce7551b8","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ruby:2.3-slim\nENV LANG=\"C.UTF-8\"\nRUN apt-get update \\\n && apt-get install curl gnupg apt-transport-https -y\nCOPY config/google-chrome-apt-key.pub /tmp/\nRUN echo \"deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main\" >> /etc/apt/sources.list.d/google-chrome.list \\\n && apt-key add /tmp/google-chrome-apt-key.pub\nRUN echo \"deb http://packages.cloud.google.com/apt cloud-sdk-jessie main\" | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list \\\n && curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -\nRUN curl -sL \"https://keybase.io/crystal/pgp_keys.asc\" | apt-key add - \\\n && echo \"deb https://dist.crystal-lang.org/apt crystal main\" | tee /etc/apt/sources.list.d/crystal.list\nRUN curl -sL \"https://packages.cloudfoundry.org/debian/cli.cloudfoundry.org.key\" | apt-key add - \\\n && echo \"deb https://packages.cloudfoundry.org/debian stable main\" | tee /etc/apt/sources.list.d/cloudfoundry-cli.list\nRUN apt-get update \\\n && apt-get install aufs-tools crystal libxml2-dev expect git google-cloud-sdk iptables jq default-libmysqlclient-dev libpq-dev libsqlite3-dev libgconf-2-4 lsb-release php7.0 pkgconf python-dev python-pip shellcheck cf-cli vim wget zip google-chrome-stable -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#   Install packages that are specific to ubuntu and not debian\n#   Including libssl allows us to build php on this image\nRUN wget http://cdn-fastly.deb.debian.org/debian/pool/main/i/icu/libicu52_52.1-8+deb8u7_amd64.deb \\\n && dpkg -i libicu52_52.1-8+deb8u7_amd64.deb \\\n && rm libicu52_52.1-8+deb8u7_amd64.deb \\\n && wget http://mirror.nus.edu.sg/Debian/pool/main/o/openssl/libssl1.0.0_1.0.1t-1%2Bdeb8u8_amd64.deb \\\n && dpkg -i libssl1.0.0_1.0.1t-1+deb8u8_amd64.deb \\\n && rm libssl1.0.0_1.0.1t-1+deb8u8_amd64.deb\nRUN curl -sSL https://get.docker.com/ | sh\nRUN git config --global user.email \"cf-buildpacks-eng@pivotal.io\"\nRUN git config --global user.name \"CF Buildpacks Team CI Server\"\nRUN git config --global core.pager cat\n#   download and install chromedriver\nRUN wget -O chromedriver.zip 'https://chromedriver.storage.googleapis.com/2.34/chromedriver_linux64.zip' \\\n && [ e42a55f9e28c3b545ef7c7727a2b4218c37489b4282e88903e4470e92bc1d967 = $( shasum -a 256 chromedriver.zip | cut -d' ' -f1 ;) ] \\\n && unzip chromedriver.zip -d /usr/local/bin/ \\\n && rm chromedriver.zip\n#   composer is a package manager for PHP apps\nRUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/bin/\nRUN mv /usr/bin/composer.phar /usr/bin/composer\n#   download the bosh2 CLI\nRUN curl -L https://github.com/cloudfoundry/bosh-cli/releases/download/v5.5.1/bosh-cli-5.5.1-linux-amd64 -o /usr/local/bin/bosh2 \\\n && [ 34e9898c244655ccbce2dc657b7d1df52e487cfd = $( shasum -a 1 /usr/local/bin/bosh2 | cut -d' ' -f1 ;) ] \\\n && chmod +x /usr/local/bin/bosh2 \\\n && ln -s /usr/local/bin/bosh2 /usr/local/bin/bosh\n#   download bbl\nRUN wget -O /usr/local/bin/bbl 'https://github.com/cloudfoundry/bosh-bootloader/releases/download/v7.6.0/bbl-v7.6.0_linux_x86-64' \\\n && [ 2e81f0560310791d604145b39f0b0c21cfd50d2c314fcd58059ff7a006cf12ca = $( shasum -a 256 /usr/local/bin/bbl | cut -d' ' -f1 ;) ] \\\n && chmod +x /usr/local/bin/bbl\n#   download credhub cli\nRUN curl -L https://github.com/cloudfoundry-incubator/credhub-cli/releases/download/2.4.0/credhub-linux-2.4.0.tgz -o credhub.tgz \\\n && [ 73edaf1ee47323c4f0aa455bcc17303a73c0cf2a6d9156542f1f6b7b1b1aa3db = $( shasum -a 256 credhub.tgz | cut -d' ' -f1 ;) ] \\\n && tar -zxf credhub.tgz --to-stdout > /usr/local/bin/credhub \\\n && rm credhub.tgz \\\n && chmod +x /usr/local/bin/credhub\n#  download spiff for spiffy things\nRUN wget -O spiff.zip 'https://github.com/cloudfoundry-incubator/spiff/releases/download/v1.0.8/spiff_linux_amd64.zip' \\\n && [ e5b49b7f32b2b3973536bf2a48beda2d236956bebff7677aa109cc2b71f56002 = $( shasum -a 256 spiff.zip | cut -d' ' -f1 ;) ] \\\n && funzip spiff.zip > /usr/bin/spiff \\\n && rm spiff.zip\nRUN chmod 755 /usr/bin/spiff\n#   Ensure Concourse Filter binary is present\nRUN wget 'https://github.com/pivotal-cf-experimental/concourse-filter/releases/download/v0.0.4/concourse-filter' \\\n && [ 2bcad41417bf5bdc545a0912c30d9c466abd4ed0cffa6b02b678f06f71a73bb8 = $( shasum -a 256 concourse-filter | cut -d' ' -f1 ;) ] \\\n && mv concourse-filter /usr/local/bin \\\n && chmod +x /usr/local/bin/concourse-filter\n#   AWS CLI\nRUN pip install awscli\n#   when docker container starts, ensure login scripts run\nCOPY build/*.sh /etc/profile.d/\n#   install buildpacks-ci Gemfile\nRUN gem update --system \\\n && gem install bundler --version 2.0.1\nCOPY Gemfile /usr/local/Gemfile\nCOPY Gemfile.lock /usr/local/Gemfile.lock\nRUN cd /usr/local \\\n && bundle install \\\n && bundle binstub bundler --force\n#  install fly-cli\nRUN curl \"https://buildpacks.ci.cf-app.com/api/v1/cli?arch=amd64&platform=linux\" -sfL -o /usr/local/bin/fly \\\n && chmod +x /usr/local/bin/fly\n#   git-hooks and git-secrets\nRUN curl -L https://github.com/git-hooks/git-hooks/releases/download/v1.1.4/git-hooks_linux_amd64.tar.gz -o githooks.tgz \\\n && [ 3f21c856064f8f08f8c25494ac784882a2b8811eea3bfb721a6c595b55577c48 = $( shasum -a 256 githooks.tgz | cut -d' ' -f1 ;) ] \\\n && tar -zxf githooks.tgz --to-stdout > /usr/local/bin/git-hooks \\\n && rm githooks.tgz \\\n && chmod 755 /usr/local/bin/git-hooks\nRUN git clone https://github.com/awslabs/git-secrets \\\n && cd git-secrets \\\n && make install\n#   Ensure that Concourse filtering is on for non-interactive shells\nENV BASH_ENV=\"/etc/profile.d/filter.sh\"\n#   Install go 1.12\nRUN cd /usr/local \\\n && curl -L https://dl.google.com/go/go1.12.4.linux-amd64.tar.gz -o go.tar.gz \\\n && [ d7d1f1f88ddfe55840712dc1747f37a790cbcaa448f6c9cf51bbe10aa65442f5 = $( shasum -a 256 go.tar.gz | cut -d' ' -f1 ;) ] \\\n && tar xf go.tar.gz \\\n && rm go.tar.gz \\\n && ln -s /usr/local/go/bin/* /usr/local/bin/\nENV GOROOT=\"/usr/local/go\"\n#   Install gems\n#   poltergeist for running dotnet-core-buildpack specs\nRUN gem install phantomjs \\\n && ruby -e 'require \"phantomjs\"; Phantomjs.path'\n#   Add git known host\nRUN mkdir -p /root/.ssh/ \\\n && echo github.com,192.30.252.131 ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ== > /root/.ssh/known_hosts\n","originalDockerfileUglifiedHash":"7ffd72487a6eeb20bc262bbc1721d25f","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/3896e85eed09220519b3faa5d7cf16508e05d0f2.dockerfile"}