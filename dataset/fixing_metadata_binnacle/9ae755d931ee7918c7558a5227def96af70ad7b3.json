{"seed":2815130773,"processedDockerfileHash":"1409006bf0180ff66e530e5e79ef28a9","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Woocommerce Docker\n#   PHP Docker for Woocommerce on Steroids\n#\n#   VERSION 0.3\nFROM php:7.2-apache\nMAINTAINER Julian Xhokaxhiu <info [at] julianxhokaxhiu [dot] com>\nLABEL Description=\"PHP Docker for Woocommerce on Steroids\" \\\n      Vendor=\"Julian Xhokaxhiu\" \\\n      Version=\"0.3\"\n#   Add pngout binary\nCOPY ./pngout-static /usr/bin/pngout\n#   enable extra Apache modules\nRUN a2enmod rewrite \\\n && a2enmod headers\n#   install the PHP extensions we need\nRUN apt-get update \\\n && apt-get install --no-install-recommends libpng-dev=1.6.36-6 libjpeg-dev=1:1.5.2-2+deb10u1 libxml2-dev=2.9.4+dfsg1-7+deb10u5 libxslt-dev libgraphicsmagick1-dev=1.4+really1.3.35-1~deb10u3 graphicsmagick=1.4+really1.3.35-1~deb10u3 libjpeg-turbo-progs=1:1.5.2-2+deb10u1 optipng=0.7.7-1 pngquant=2.12.2-1 gifsicle=1.91-5 webp=0.6.1-2+deb10u1 -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && docker-php-ext-configure gd --with-png-dir=/usr --with-jpeg-dir=/usr \\\n && docker-php-ext-install gd json mysqli pdo pdo_mysql opcache gettext exif calendar soap xsl sockets wddx\n#   install APCu from PECL\nRUN pecl -vvv install apcu \\\n && docker-php-ext-enable apcu\n#   install GMagick from PECL\nRUN pecl -vvv install gmagick-beta \\\n && docker-php-ext-enable gmagick\n#   Download WordPress CLI\nRUN curl -L \"https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar\" > /usr/bin/wp \\\n && chmod +x /usr/bin/wp\n#   set recommended PHP.ini settings\n#   see https://secure.php.net/manual/en/opcache.installation.php\nRUN { echo 'opcache.memory_consumption=128' ;echo 'opcache.interned_strings_buffer=8' ;echo 'opcache.max_accelerated_files=4000' ;echo 'opcache.revalidate_freq=60' ;echo 'opcache.fast_shutdown=1' ;echo 'opcache.enable_cli=1' ; } > /usr/local/etc/php/conf.d/opcache-recommended.ini\n#   increase upload size\n#   see http://php.net/manual/en/ini.core.php\nRUN { echo \"upload_max_filesize = 25M\" ;echo \"post_max_size = 50M\" ; } > /usr/local/etc/php/conf.d/uploads.ini\n#   Iron the security of the Docker\nRUN { echo \"expose_php = Off\" ;echo \"display_startup_errors = off\" ;echo \"display_errors = off\" ;echo \"html_errors = off\" ;echo \"log_errors = off\" ;echo \"error_log = /dev/stderr\" ;echo \"ignore_repeated_errors = off\" ;echo \"ignore_repeated_source = off\" ;echo \"report_memleaks = on\" ;echo \"track_errors = on\" ;echo \"docref_root = 0\" ;echo \"docref_ext = 0\" ;echo \"error_reporting = -1\" ;echo \"log_errors_max_len = 0\" ; } > /usr/local/etc/php/conf.d/security.ini\nRUN { echo \"ServerSignature Off\" ;echo \"ServerTokens Prod\" ;echo \"TraceEnable off\" ; } >> /etc/apache2/apache2.conf\nVOLUME /var/www/html\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\nHEALTHCHECK CMD curl --fail http://127.0.0.1:80 || exit 1\n","originalDockerfile":"#  Woocommerce Docker\n#  PHP Docker for Woocommerce on Steroids\n#\n#  VERSION 0.3\nFROM php:7.2-apache\nMAINTAINER Julian Xhokaxhiu <info [at] julianxhokaxhiu [dot] com>\nLABEL Description=\"PHP Docker for Woocommerce on Steroids\" \\\n      Vendor=\"Julian Xhokaxhiu\" \\\n      Version=\"0.3\"\n#  Add pngout binary\nADD ./pngout-static /usr/bin/pngout\n#  enable extra Apache modules\nRUN a2enmod rewrite \\\n && a2enmod headers\n#  install the PHP extensions we need\nRUN apt-get update \\\n && apt-get install libpng-dev libjpeg-dev libxml2-dev libxslt-dev libgraphicsmagick1-dev graphicsmagick libjpeg-turbo-progs optipng pngquant gifsicle webp -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && docker-php-ext-configure gd --with-png-dir=/usr --with-jpeg-dir=/usr \\\n && docker-php-ext-install gd json mysqli pdo pdo_mysql opcache gettext exif calendar soap xsl sockets wddx\n#  install APCu from PECL\nRUN pecl -vvv install apcu \\\n && docker-php-ext-enable apcu\n#  install GMagick from PECL\nRUN pecl -vvv install gmagick-beta \\\n && docker-php-ext-enable gmagick\n#  Download WordPress CLI\nRUN curl -L \"https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar\" > /usr/bin/wp \\\n && chmod +x /usr/bin/wp\n#  set recommended PHP.ini settings\n#  see https://secure.php.net/manual/en/opcache.installation.php\nRUN { echo 'opcache.memory_consumption=128' ;echo 'opcache.interned_strings_buffer=8' ;echo 'opcache.max_accelerated_files=4000' ;echo 'opcache.revalidate_freq=60' ;echo 'opcache.fast_shutdown=1' ;echo 'opcache.enable_cli=1' ; } > /usr/local/etc/php/conf.d/opcache-recommended.ini\n#  increase upload size\n#  see http://php.net/manual/en/ini.core.php\nRUN { echo \"upload_max_filesize = 25M\" ;echo \"post_max_size = 50M\" ; } > /usr/local/etc/php/conf.d/uploads.ini\n#  Iron the security of the Docker\nRUN { echo \"expose_php = Off\" ;echo \"display_startup_errors = off\" ;echo \"display_errors = off\" ;echo \"html_errors = off\" ;echo \"log_errors = off\" ;echo \"error_log = /dev/stderr\" ;echo \"ignore_repeated_errors = off\" ;echo \"ignore_repeated_source = off\" ;echo \"report_memleaks = on\" ;echo \"track_errors = on\" ;echo \"docref_root = 0\" ;echo \"docref_ext = 0\" ;echo \"error_reporting = -1\" ;echo \"log_errors_max_len = 0\" ; } > /usr/local/etc/php/conf.d/security.ini\nRUN { echo \"ServerSignature Off\" ;echo \"ServerTokens Prod\" ;echo \"TraceEnable off\" ; } >> /etc/apache2/apache2.conf\nVOLUME /var/www/html\n","injectedSmells":[],"originalDockerfileHash":"65a47f39bb107fea0753e9b0a7cb7c95","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Woocommerce Docker\n#   PHP Docker for Woocommerce on Steroids\n#\n#   VERSION 0.3\nFROM php:7.2-apache\nMAINTAINER Julian Xhokaxhiu <info [at] julianxhokaxhiu [dot] com>\nLABEL Description=\"PHP Docker for Woocommerce on Steroids\" \\\n      Vendor=\"Julian Xhokaxhiu\" \\\n      Version=\"0.3\"\n#   Add pngout binary\nADD ./pngout-static /usr/bin/pngout\n#   enable extra Apache modules\nRUN a2enmod rewrite \\\n && a2enmod headers\n#   install the PHP extensions we need\nRUN apt-get update \\\n && apt-get install libpng-dev libjpeg-dev libxml2-dev libxslt-dev libgraphicsmagick1-dev graphicsmagick libjpeg-turbo-progs optipng pngquant gifsicle webp -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && docker-php-ext-configure gd --with-png-dir=/usr --with-jpeg-dir=/usr \\\n && docker-php-ext-install gd json mysqli pdo pdo_mysql opcache gettext exif calendar soap xsl sockets wddx\n#   install APCu from PECL\nRUN pecl -vvv install apcu \\\n && docker-php-ext-enable apcu\n#   install GMagick from PECL\nRUN pecl -vvv install gmagick-beta \\\n && docker-php-ext-enable gmagick\n#   Download WordPress CLI\nRUN curl -L \"https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar\" > /usr/bin/wp \\\n && chmod +x /usr/bin/wp\n#   set recommended PHP.ini settings\n#   see https://secure.php.net/manual/en/opcache.installation.php\nRUN { echo 'opcache.memory_consumption=128' ;echo 'opcache.interned_strings_buffer=8' ;echo 'opcache.max_accelerated_files=4000' ;echo 'opcache.revalidate_freq=60' ;echo 'opcache.fast_shutdown=1' ;echo 'opcache.enable_cli=1' ; } > /usr/local/etc/php/conf.d/opcache-recommended.ini\n#   increase upload size\n#   see http://php.net/manual/en/ini.core.php\nRUN { echo \"upload_max_filesize = 25M\" ;echo \"post_max_size = 50M\" ; } > /usr/local/etc/php/conf.d/uploads.ini\n#   Iron the security of the Docker\nRUN { echo \"expose_php = Off\" ;echo \"display_startup_errors = off\" ;echo \"display_errors = off\" ;echo \"html_errors = off\" ;echo \"log_errors = off\" ;echo \"error_log = /dev/stderr\" ;echo \"ignore_repeated_errors = off\" ;echo \"ignore_repeated_source = off\" ;echo \"report_memleaks = on\" ;echo \"track_errors = on\" ;echo \"docref_root = 0\" ;echo \"docref_ext = 0\" ;echo \"error_reporting = -1\" ;echo \"log_errors_max_len = 0\" ; } > /usr/local/etc/php/conf.d/security.ini\nRUN { echo \"ServerSignature Off\" ;echo \"ServerTokens Prod\" ;echo \"TraceEnable off\" ; } >> /etc/apache2/apache2.conf\nVOLUME /var/www/html\n","originalDockerfileUglifiedHash":"37511dc79a329794839925254db3dcb3","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/9ae755d931ee7918c7558a5227def96af70ad7b3.dockerfile"}