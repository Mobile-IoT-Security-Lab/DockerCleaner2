{"seed":3706668518,"processedDockerfileHash":"6bd3dfa635a97fed53397f69868a3ee4","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","pin-package-manager-versions-npm","pin-package-manager-versions-gem","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM ubuntu:18.04\nMAINTAINER Ming Chen\nENV ANDROID_HOME=\"/opt/android-sdk\" \\\n    ANDROID_NDK=\"/opt/android-ndk\" \\\n    FLUTTER_HOME=\"/opt/flutter\" \\\n    JAVA_HOME=\"/usr/lib/jvm/java-8-openjdk-amd64/\"\n#   Get the latest version from https://developer.android.com/studio/index.html\nENV ANDROID_SDK_TOOLS_VERSION=\"4333796\"\n#   Get the latest version from https://developer.android.com/ndk/downloads/index.html\nENV ANDROID_NDK_VERSION=\"19\"\n#   nodejs version\nENV NODE_VERSION=\"10.x\"\n#   Set locale\nENV LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US.UTF-8\" \\\n    LC_ALL=\"en_US.UTF-8\"\nRUN apt-get clean \\\n && apt-get update -qq \\\n && apt-get install --no-install-recommends apt-utils=1.6.14 locales=2.27-3ubuntu1.6 -qq -y \\\n && locale-gen $LANG\nENV DEBIAN_FRONTEND=\"noninteractive\" \\\n    TERM=\"dumb\" \\\n    DEBIAN_FRONTEND=\"noninteractive\"\n#   Variables must be references after they are created\nENV ANDROID_SDK_HOME=\"$ANDROID_HOME\"\nENV ANDROID_NDK_HOME=\"$ANDROID_NDK/android-ndk-r$ANDROID_NDK_VERSION\"\nENV PATH=\"$PATH:$ANDROID_SDK_HOME/emulator:$ANDROID_SDK_HOME/tools/bin:$ANDROID_SDK_HOME/tools:$ANDROID_SDK_HOME/platform-tools:$ANDROID_NDK:$FLUTTER_HOME/bin:$FLUTTER_HOME/bin/cache/dart-sdk/bin\"\nCOPY README.md /README.md\nWORKDIR /tmp\n#   Installing packages\nRUN apt-get update -qq > /dev/null \\\n && apt-get install --no-install-recommends locales=2.27-3ubuntu1.6 -qq > /dev/null \\\n && locale-gen \"$LANG\" > /dev/null \\\n && apt-get install --no-install-recommends build-essential=12.4ubuntu1 autoconf=2.69-11 curl=7.58.0-2ubuntu3.24 git=1:2.17.1-1ubuntu0.17 gpg-agent=2.2.4-1ubuntu1.6 lib32stdc++6=8.4.0-1ubuntu1~18.04 lib32z1=1:1.2.11.dfsg-0ubuntu2.2 lib32z1-dev=1:1.2.11.dfsg-0ubuntu2.2 lib32ncurses5=6.1-1ubuntu1.18.04 libc6-dev=2.27-3ubuntu1.6 libgmp-dev=2:6.1.2+dfsg-2ubuntu0.1 libmpc-dev=1.1.0-1 libmpfr-dev=4.0.1-1 libxslt-dev libxml2-dev=2.9.4+dfsg1-6.1ubuntu1.8 m4=1.4.18-1 ncurses-dev ocaml=4.05.0-10ubuntu1 openjdk-8-jdk=8u362-ga-0ubuntu1~18.04.1 openssh-client=1:7.6p1-4ubuntu0.7 pkg-config=0.29.1-0ubuntu2 software-properties-common=0.96.24.32.20 ruby-full=1:2.5.1 software-properties-common=0.96.24.32.20 unzip=6.0-21ubuntu1.2 wget=1.19.4-1ubuntu2.2 zip=3.0-11build1 zlib1g-dev=1:1.2.11.dfsg-0ubuntu2.2 -qq > /dev/null \\\n && echo \"Installing nodejs, npm, cordova, ionic, react-native\" \\\n && curl -sL -k https://deb.nodesource.com/setup_${NODE_VERSION} | bash - > /dev/null \\\n && apt-get install --no-install-recommends nodejs=8.10.0~dfsg-2ubuntu0.4 -qq > /dev/null \\\n && apt-get clean > /dev/null \\\n && rm -rf /var/lib/apt/lists/ \\\n && npm install npm@9.6.4 --quiet -g > /dev/null \\\n && npm install bower@1.8.14 cordova@11.1.0 eslint@8.38.0 gulp@4.0.2 ionic@5.4.16 jshint@2.13.6 karma-cli@2.0.0 mocha@10.2.0 node-gyp@9.3.1 npm-check-updates@16.10.8 react-native-cli@2.0.1 --quiet -g > /dev/null \\\n && npm cache clean --force > /dev/null \\\n && rm -rf /tmp/* /var/tmp/* \\\n && echo \"Installing fastlane\" \\\n && gem install fastlane --version 2.212.1 --quiet --no-document > /dev/null\n#   Install Android SDK\nRUN echo \"Installing sdk tools ${ANDROID_SDK_TOOLS_VERSION}\" \\\n && wget --quiet --output-document=sdk-tools.zip \"https://dl.google.com/android/repository/sdk-tools-linux-${ANDROID_SDK_TOOLS_VERSION}.zip\" \\\n && mkdir --parents \"$ANDROID_HOME\" \\\n && unzip -q sdk-tools.zip -d \"$ANDROID_HOME\" \\\n && rm --force sdk-tools.zip \\\n && echo \"Installing ndk r${ANDROID_NDK_VERSION}\" \\\n && wget --quiet --output-document=android-ndk.zip \"http://dl.google.com/android/repository/android-ndk-r${ANDROID_NDK_VERSION}-linux-x86_64.zip\" \\\n && mkdir --parents \"$ANDROID_NDK_HOME\" \\\n && unzip -q android-ndk.zip -d \"$ANDROID_NDK\" \\\n && rm --force android-ndk.zip \\\n && mkdir --parents \"$ANDROID_HOME/.android/\" \\\n && echo '### User Sources for Android SDK Manager' > \"$ANDROID_HOME/.android/repositories.cfg\" \\\n && yes | \"$ANDROID_HOME\"/tools/bin/sdkmanager --licenses > /dev/null \\\n && echo \"Installing platforms\" \\\n && yes | \"$ANDROID_HOME\"/tools/bin/sdkmanager \"platforms;android-28\" \"platforms;android-27\" \"platforms;android-26\" \"platforms;android-25\" \"platforms;android-24\" \"platforms;android-23\" \"platforms;android-22\" \"platforms;android-21\" \"platforms;android-20\" \"platforms;android-19\" \"platforms;android-18\" \"platforms;android-17\" \"platforms;android-16\" > /dev/null \\\n && echo \"Installing platform tools \" \\\n && yes | \"$ANDROID_HOME\"/tools/bin/sdkmanager \"platform-tools\" > /dev/null \\\n && echo \"Installing build tools \" \\\n && yes | \"$ANDROID_HOME\"/tools/bin/sdkmanager \"build-tools;28.0.3\" \"build-tools;28.0.2\" \"build-tools;27.0.3\" \"build-tools;27.0.2\" \"build-tools;27.0.1\" \"build-tools;26.0.2\" \"build-tools;26.0.1\" \"build-tools;26.0.0\" \"build-tools;25.0.3\" \"build-tools;25.0.2\" \"build-tools;25.0.1\" \"build-tools;25.0.0\" \"build-tools;24.0.3\" \"build-tools;24.0.2\" \"build-tools;24.0.1\" \"build-tools;24.0.0\" > /dev/null \\\n && echo \"Installing build tools \" \\\n && yes | \"$ANDROID_HOME\"/tools/bin/sdkmanager \"build-tools;23.0.3\" \"build-tools;23.0.2\" \"build-tools;23.0.1\" \"build-tools;22.0.1\" \"build-tools;21.1.2\" \"build-tools;20.0.0\" \"build-tools;19.1.0\" \"build-tools;18.1.1\" \"build-tools;17.0.0\" > /dev/null \\\n && echo \"Installing extras \" \\\n && yes | \"$ANDROID_HOME\"/tools/bin/sdkmanager \"extras;android;m2repository\" \"extras;google;m2repository\" > /dev/null \\\n && echo \"Installing play services \" \\\n && yes | \"$ANDROID_HOME\"/tools/bin/sdkmanager \"extras;google;google_play_services\" \"extras;m2repository;com;android;support;constraint;constraint-layout;1.0.2\" \"extras;m2repository;com;android;support;constraint;constraint-layout;1.0.1\" > /dev/null \\\n && echo \"Installing Google APIs\" \\\n && yes | \"$ANDROID_HOME\"/tools/bin/sdkmanager \"add-ons;addon-google_apis-google-24\" \"add-ons;addon-google_apis-google-23\" \"add-ons;addon-google_apis-google-22\" \"add-ons;addon-google_apis-google-21\" \"add-ons;addon-google_apis-google-19\" \"add-ons;addon-google_apis-google-18\" \"add-ons;addon-google_apis-google-17\" \"add-ons;addon-google_apis-google-16\" > /dev/null \\\n && echo \"Installing emulator \" \\\n && yes | \"$ANDROID_HOME\"/tools/bin/sdkmanager \"emulator\" > /dev/null \\\n && echo \"Installing kotlin\" \\\n && wget --quiet -O sdk.install.sh \"https://get.sdkman.io\" \\\n && bash -c \"bash ./sdk.install.sh > /dev/null \\\n && source ~/.sdkman/bin/sdkman-init.sh \\\n && sdk install kotlin\" \\\n && rm -f sdk.install.sh \\\n && cd /opt \\\n && wget --quiet https://storage.googleapis.com/flutter_infra/releases/stable/linux/flutter_linux_v1.5.4-hotfix.2-stable.tar.xz -O flutter.tar.xz \\\n && tar xf flutter.tar.xz \\\n && rm -f flutter.tar.xz \\\n && flutter config --no-analytics\n#   Copy sdk license agreement files.\nRUN mkdir -p $ANDROID_HOME/licenses\nCOPY sdk/licenses/* $ANDROID_HOME/licenses/\n#   Create some jenkins required directory to allow this image run with Jenkins\nRUN mkdir -p /var/lib/jenkins/workspace\nRUN mkdir -p /home/jenkins\nRUN chmod 777 /home/jenkins\nRUN chmod 777 /var/lib/jenkins/workspace\nRUN chmod 777 $ANDROID_HOME/.android\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:18.04\nMAINTAINER Ming Chen\nENV ANDROID_HOME=\"/opt/android-sdk\" \\\n    ANDROID_NDK=\"/opt/android-ndk\" \\\n    FLUTTER_HOME=\"/opt/flutter\" \\\n    JAVA_HOME=\"/usr/lib/jvm/java-8-openjdk-amd64/\"\n#  Get the latest version from https://developer.android.com/studio/index.html\nENV ANDROID_SDK_TOOLS_VERSION=\"4333796\"\n#  Get the latest version from https://developer.android.com/ndk/downloads/index.html\nENV ANDROID_NDK_VERSION=\"19\"\n#  nodejs version\nENV NODE_VERSION=\"10.x\"\n#  Set locale\nENV LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US.UTF-8\" \\\n    LC_ALL=\"en_US.UTF-8\"\nRUN apt-get clean \\\n && apt-get update -qq \\\n && apt-get install apt-utils locales -qq -y \\\n && locale-gen $LANG\nENV DEBIAN_FRONTEND=\"noninteractive\" \\\n    TERM=\"dumb\" \\\n    DEBIAN_FRONTEND=\"noninteractive\"\n#  Variables must be references after they are created\nENV ANDROID_SDK_HOME=\"$ANDROID_HOME\"\nENV ANDROID_NDK_HOME=\"$ANDROID_NDK/android-ndk-r$ANDROID_NDK_VERSION\"\nENV PATH=\"$PATH:$ANDROID_SDK_HOME/emulator:$ANDROID_SDK_HOME/tools/bin:$ANDROID_SDK_HOME/tools:$ANDROID_SDK_HOME/platform-tools:$ANDROID_NDK:$FLUTTER_HOME/bin:$FLUTTER_HOME/bin/cache/dart-sdk/bin\"\nCOPY README.md /README.md\nWORKDIR /tmp\n#  Installing packages\nRUN apt-get update -qq > /dev/null \\\n && apt-get install locales -qq > /dev/null \\\n && locale-gen \"$LANG\" > /dev/null \\\n && apt-get install --no-install-recommends build-essential autoconf curl git gpg-agent lib32stdc++6 lib32z1 lib32z1-dev lib32ncurses5 libc6-dev libgmp-dev libmpc-dev libmpfr-dev libxslt-dev libxml2-dev m4 ncurses-dev ocaml openjdk-8-jdk openssh-client pkg-config software-properties-common ruby-full software-properties-common unzip wget zip zlib1g-dev -qq > /dev/null \\\n && echo \"Installing nodejs, npm, cordova, ionic, react-native\" \\\n && curl -sL -k https://deb.nodesource.com/setup_${NODE_VERSION} | bash - > /dev/null \\\n && apt-get install nodejs -qq > /dev/null \\\n && apt-get clean > /dev/null \\\n && rm -rf /var/lib/apt/lists/ \\\n && npm install npm --quiet -g > /dev/null \\\n && npm install bower cordova eslint gulp ionic jshint karma-cli mocha node-gyp npm-check-updates react-native-cli --quiet -g > /dev/null \\\n && npm cache clean --force > /dev/null \\\n && rm -rf /tmp/* /var/tmp/* \\\n && echo \"Installing fastlane\" \\\n && gem install fastlane --quiet --no-document > /dev/null\n#  Install Android SDK\nRUN echo \"Installing sdk tools ${ANDROID_SDK_TOOLS_VERSION}\" \\\n && wget --quiet --output-document=sdk-tools.zip \"https://dl.google.com/android/repository/sdk-tools-linux-${ANDROID_SDK_TOOLS_VERSION}.zip\" \\\n && mkdir --parents \"$ANDROID_HOME\" \\\n && unzip -q sdk-tools.zip -d \"$ANDROID_HOME\" \\\n && rm --force sdk-tools.zip \\\n && echo \"Installing ndk r${ANDROID_NDK_VERSION}\" \\\n && wget --quiet --output-document=android-ndk.zip \"http://dl.google.com/android/repository/android-ndk-r${ANDROID_NDK_VERSION}-linux-x86_64.zip\" \\\n && mkdir --parents \"$ANDROID_NDK_HOME\" \\\n && unzip -q android-ndk.zip -d \"$ANDROID_NDK\" \\\n && rm --force android-ndk.zip \\\n && mkdir --parents \"$ANDROID_HOME/.android/\" \\\n && echo '### User Sources for Android SDK Manager' > \"$ANDROID_HOME/.android/repositories.cfg\" \\\n && yes | \"$ANDROID_HOME\"/tools/bin/sdkmanager --licenses > /dev/null \\\n && echo \"Installing platforms\" \\\n && yes | \"$ANDROID_HOME\"/tools/bin/sdkmanager \"platforms;android-28\" \"platforms;android-27\" \"platforms;android-26\" \"platforms;android-25\" \"platforms;android-24\" \"platforms;android-23\" \"platforms;android-22\" \"platforms;android-21\" \"platforms;android-20\" \"platforms;android-19\" \"platforms;android-18\" \"platforms;android-17\" \"platforms;android-16\" > /dev/null \\\n && echo \"Installing platform tools \" \\\n && yes | \"$ANDROID_HOME\"/tools/bin/sdkmanager \"platform-tools\" > /dev/null \\\n && echo \"Installing build tools \" \\\n && yes | \"$ANDROID_HOME\"/tools/bin/sdkmanager \"build-tools;28.0.3\" \"build-tools;28.0.2\" \"build-tools;27.0.3\" \"build-tools;27.0.2\" \"build-tools;27.0.1\" \"build-tools;26.0.2\" \"build-tools;26.0.1\" \"build-tools;26.0.0\" \"build-tools;25.0.3\" \"build-tools;25.0.2\" \"build-tools;25.0.1\" \"build-tools;25.0.0\" \"build-tools;24.0.3\" \"build-tools;24.0.2\" \"build-tools;24.0.1\" \"build-tools;24.0.0\" > /dev/null \\\n && echo \"Installing build tools \" \\\n && yes | \"$ANDROID_HOME\"/tools/bin/sdkmanager \"build-tools;23.0.3\" \"build-tools;23.0.2\" \"build-tools;23.0.1\" \"build-tools;22.0.1\" \"build-tools;21.1.2\" \"build-tools;20.0.0\" \"build-tools;19.1.0\" \"build-tools;18.1.1\" \"build-tools;17.0.0\" > /dev/null \\\n && echo \"Installing extras \" \\\n && yes | \"$ANDROID_HOME\"/tools/bin/sdkmanager \"extras;android;m2repository\" \"extras;google;m2repository\" > /dev/null \\\n && echo \"Installing play services \" \\\n && yes | \"$ANDROID_HOME\"/tools/bin/sdkmanager \"extras;google;google_play_services\" \"extras;m2repository;com;android;support;constraint;constraint-layout;1.0.2\" \"extras;m2repository;com;android;support;constraint;constraint-layout;1.0.1\" > /dev/null \\\n && echo \"Installing Google APIs\" \\\n && yes | \"$ANDROID_HOME\"/tools/bin/sdkmanager \"add-ons;addon-google_apis-google-24\" \"add-ons;addon-google_apis-google-23\" \"add-ons;addon-google_apis-google-22\" \"add-ons;addon-google_apis-google-21\" \"add-ons;addon-google_apis-google-19\" \"add-ons;addon-google_apis-google-18\" \"add-ons;addon-google_apis-google-17\" \"add-ons;addon-google_apis-google-16\" > /dev/null \\\n && echo \"Installing emulator \" \\\n && yes | \"$ANDROID_HOME\"/tools/bin/sdkmanager \"emulator\" > /dev/null \\\n && echo \"Installing kotlin\" \\\n && wget --quiet -O sdk.install.sh \"https://get.sdkman.io\" \\\n && bash -c \"bash ./sdk.install.sh > /dev/null \\\n && source ~/.sdkman/bin/sdkman-init.sh \\\n && sdk install kotlin\" \\\n && rm -f sdk.install.sh \\\n && cd /opt \\\n && wget --quiet https://storage.googleapis.com/flutter_infra/releases/stable/linux/flutter_linux_v1.5.4-hotfix.2-stable.tar.xz -O flutter.tar.xz \\\n && tar xf flutter.tar.xz \\\n && rm -f flutter.tar.xz \\\n && flutter config --no-analytics\n#  Copy sdk license agreement files.\nRUN mkdir -p $ANDROID_HOME/licenses\nCOPY sdk/licenses/* $ANDROID_HOME/licenses/\n#  Create some jenkins required directory to allow this image run with Jenkins\nRUN mkdir -p /var/lib/jenkins/workspace\nRUN mkdir -p /home/jenkins\nRUN chmod 777 /home/jenkins\nRUN chmod 777 /var/lib/jenkins/workspace\nRUN chmod 777 $ANDROID_HOME/.android\n","injectedSmells":[],"originalDockerfileHash":"e6845bedb1b2d11203a8bc42dcef45e6","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:18.04\nMAINTAINER Ming Chen\nENV ANDROID_HOME=\"/opt/android-sdk\" \\\n    ANDROID_NDK=\"/opt/android-ndk\" \\\n    FLUTTER_HOME=\"/opt/flutter\" \\\n    JAVA_HOME=\"/usr/lib/jvm/java-8-openjdk-amd64/\"\n#   Get the latest version from https://developer.android.com/studio/index.html\nENV ANDROID_SDK_TOOLS_VERSION=\"4333796\"\n#   Get the latest version from https://developer.android.com/ndk/downloads/index.html\nENV ANDROID_NDK_VERSION=\"19\"\n#   nodejs version\nENV NODE_VERSION=\"10.x\"\n#   Set locale\nENV LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US.UTF-8\" \\\n    LC_ALL=\"en_US.UTF-8\"\nRUN apt-get clean \\\n && apt-get update -qq \\\n && apt-get install apt-utils locales -qq -y \\\n && locale-gen $LANG\nENV DEBIAN_FRONTEND=\"noninteractive\" \\\n    TERM=\"dumb\" \\\n    DEBIAN_FRONTEND=\"noninteractive\"\n#   Variables must be references after they are created\nENV ANDROID_SDK_HOME=\"$ANDROID_HOME\"\nENV ANDROID_NDK_HOME=\"$ANDROID_NDK/android-ndk-r$ANDROID_NDK_VERSION\"\nENV PATH=\"$PATH:$ANDROID_SDK_HOME/emulator:$ANDROID_SDK_HOME/tools/bin:$ANDROID_SDK_HOME/tools:$ANDROID_SDK_HOME/platform-tools:$ANDROID_NDK:$FLUTTER_HOME/bin:$FLUTTER_HOME/bin/cache/dart-sdk/bin\"\nCOPY README.md /README.md\nWORKDIR /tmp\n#   Installing packages\nRUN apt-get update -qq > /dev/null \\\n && apt-get install locales -qq > /dev/null \\\n && locale-gen \"$LANG\" > /dev/null \\\n && apt-get install --no-install-recommends build-essential autoconf curl git gpg-agent lib32stdc++6 lib32z1 lib32z1-dev lib32ncurses5 libc6-dev libgmp-dev libmpc-dev libmpfr-dev libxslt-dev libxml2-dev m4 ncurses-dev ocaml openjdk-8-jdk openssh-client pkg-config software-properties-common ruby-full software-properties-common unzip wget zip zlib1g-dev -qq > /dev/null \\\n && echo \"Installing nodejs, npm, cordova, ionic, react-native\" \\\n && curl -sL -k https://deb.nodesource.com/setup_${NODE_VERSION} | bash - > /dev/null \\\n && apt-get install nodejs -qq > /dev/null \\\n && apt-get clean > /dev/null \\\n && rm -rf /var/lib/apt/lists/ \\\n && npm install npm --quiet -g > /dev/null \\\n && npm install bower cordova eslint gulp ionic jshint karma-cli mocha node-gyp npm-check-updates react-native-cli --quiet -g > /dev/null \\\n && npm cache clean --force > /dev/null \\\n && rm -rf /tmp/* /var/tmp/* \\\n && echo \"Installing fastlane\" \\\n && gem install fastlane --quiet --no-document > /dev/null\n#   Install Android SDK\nRUN echo \"Installing sdk tools ${ANDROID_SDK_TOOLS_VERSION}\" \\\n && wget --quiet --output-document=sdk-tools.zip \"https://dl.google.com/android/repository/sdk-tools-linux-${ANDROID_SDK_TOOLS_VERSION}.zip\" \\\n && mkdir --parents \"$ANDROID_HOME\" \\\n && unzip -q sdk-tools.zip -d \"$ANDROID_HOME\" \\\n && rm --force sdk-tools.zip \\\n && echo \"Installing ndk r${ANDROID_NDK_VERSION}\" \\\n && wget --quiet --output-document=android-ndk.zip \"http://dl.google.com/android/repository/android-ndk-r${ANDROID_NDK_VERSION}-linux-x86_64.zip\" \\\n && mkdir --parents \"$ANDROID_NDK_HOME\" \\\n && unzip -q android-ndk.zip -d \"$ANDROID_NDK\" \\\n && rm --force android-ndk.zip \\\n && mkdir --parents \"$ANDROID_HOME/.android/\" \\\n && echo '### User Sources for Android SDK Manager' > \"$ANDROID_HOME/.android/repositories.cfg\" \\\n && yes | \"$ANDROID_HOME\"/tools/bin/sdkmanager --licenses > /dev/null \\\n && echo \"Installing platforms\" \\\n && yes | \"$ANDROID_HOME\"/tools/bin/sdkmanager \"platforms;android-28\" \"platforms;android-27\" \"platforms;android-26\" \"platforms;android-25\" \"platforms;android-24\" \"platforms;android-23\" \"platforms;android-22\" \"platforms;android-21\" \"platforms;android-20\" \"platforms;android-19\" \"platforms;android-18\" \"platforms;android-17\" \"platforms;android-16\" > /dev/null \\\n && echo \"Installing platform tools \" \\\n && yes | \"$ANDROID_HOME\"/tools/bin/sdkmanager \"platform-tools\" > /dev/null \\\n && echo \"Installing build tools \" \\\n && yes | \"$ANDROID_HOME\"/tools/bin/sdkmanager \"build-tools;28.0.3\" \"build-tools;28.0.2\" \"build-tools;27.0.3\" \"build-tools;27.0.2\" \"build-tools;27.0.1\" \"build-tools;26.0.2\" \"build-tools;26.0.1\" \"build-tools;26.0.0\" \"build-tools;25.0.3\" \"build-tools;25.0.2\" \"build-tools;25.0.1\" \"build-tools;25.0.0\" \"build-tools;24.0.3\" \"build-tools;24.0.2\" \"build-tools;24.0.1\" \"build-tools;24.0.0\" > /dev/null \\\n && echo \"Installing build tools \" \\\n && yes | \"$ANDROID_HOME\"/tools/bin/sdkmanager \"build-tools;23.0.3\" \"build-tools;23.0.2\" \"build-tools;23.0.1\" \"build-tools;22.0.1\" \"build-tools;21.1.2\" \"build-tools;20.0.0\" \"build-tools;19.1.0\" \"build-tools;18.1.1\" \"build-tools;17.0.0\" > /dev/null \\\n && echo \"Installing extras \" \\\n && yes | \"$ANDROID_HOME\"/tools/bin/sdkmanager \"extras;android;m2repository\" \"extras;google;m2repository\" > /dev/null \\\n && echo \"Installing play services \" \\\n && yes | \"$ANDROID_HOME\"/tools/bin/sdkmanager \"extras;google;google_play_services\" \"extras;m2repository;com;android;support;constraint;constraint-layout;1.0.2\" \"extras;m2repository;com;android;support;constraint;constraint-layout;1.0.1\" > /dev/null \\\n && echo \"Installing Google APIs\" \\\n && yes | \"$ANDROID_HOME\"/tools/bin/sdkmanager \"add-ons;addon-google_apis-google-24\" \"add-ons;addon-google_apis-google-23\" \"add-ons;addon-google_apis-google-22\" \"add-ons;addon-google_apis-google-21\" \"add-ons;addon-google_apis-google-19\" \"add-ons;addon-google_apis-google-18\" \"add-ons;addon-google_apis-google-17\" \"add-ons;addon-google_apis-google-16\" > /dev/null \\\n && echo \"Installing emulator \" \\\n && yes | \"$ANDROID_HOME\"/tools/bin/sdkmanager \"emulator\" > /dev/null \\\n && echo \"Installing kotlin\" \\\n && wget --quiet -O sdk.install.sh \"https://get.sdkman.io\" \\\n && bash -c \"bash ./sdk.install.sh > /dev/null \\\n && source ~/.sdkman/bin/sdkman-init.sh \\\n && sdk install kotlin\" \\\n && rm -f sdk.install.sh \\\n && cd /opt \\\n && wget --quiet https://storage.googleapis.com/flutter_infra/releases/stable/linux/flutter_linux_v1.5.4-hotfix.2-stable.tar.xz -O flutter.tar.xz \\\n && tar xf flutter.tar.xz \\\n && rm -f flutter.tar.xz \\\n && flutter config --no-analytics\n#   Copy sdk license agreement files.\nRUN mkdir -p $ANDROID_HOME/licenses\nCOPY sdk/licenses/* $ANDROID_HOME/licenses/\n#   Create some jenkins required directory to allow this image run with Jenkins\nRUN mkdir -p /var/lib/jenkins/workspace\nRUN mkdir -p /home/jenkins\nRUN chmod 777 /home/jenkins\nRUN chmod 777 /var/lib/jenkins/workspace\nRUN chmod 777 $ANDROID_HOME/.android\n","originalDockerfileUglifiedHash":"de9660f729124e6ce67066c4eeff0f10","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/1fa8a29f0f995d84cb81a2ec3d6c5a289e8e4c10.dockerfile"}