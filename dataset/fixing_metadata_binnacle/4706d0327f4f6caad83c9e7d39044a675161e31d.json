{"seed":2309939673,"processedDockerfileHash":"c432a5481c6ae38566dd4a1f75d9b9d5","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM alpine:3.10\n#   ensure www-data user exists\nRUN set -x \\\n && addgroup -g 82 -S www-data \\\n && adduser -u 82 -D -S -G www-data www-data\n#   82 is the standard uid/gid for \"www-data\" in Alpine\n#   https://git.alpinelinux.org/cgit/aports/tree/main/apache2/apache2.pre-install?h=v3.8.1\n#   https://git.alpinelinux.org/cgit/aports/tree/main/lighttpd/lighttpd.pre-install?h=v3.8.1\n#   https://git.alpinelinux.org/cgit/aports/tree/main/nginx/nginx.pre-install?h=v3.8.1\nENV HTTPD_PREFIX=\"/usr/local/apache2\"\nENV PATH=\"$HTTPD_PREFIX/bin:$PATH\"\nRUN mkdir -p \"$HTTPD_PREFIX\" \\\n && chown www-data:www-data \"$HTTPD_PREFIX\"\nWORKDIR $HTTPD_PREFIX\nENV HTTPD_VERSION=\"2.4.39\"\nENV HTTPD_SHA256=\"b4ca9d05773aa59b54d66cd8f4744b945289f084d3be17d7981d1783a5decfa2\"\n#   https://httpd.apache.org/security/vulnerabilities_24.html\nENV HTTPD_PATCHES=\"\"\nENV APACHE_DIST_URLS=\"https://www.apache.org/dyn/closer.cgi?action=download&filename=  https://www-us.apache.org/dist/  https://www.apache.org/dist/  https://archive.apache.org/dist/\"\n#   see https://httpd.apache.org/docs/2.4/install.html#requirements\nRUN set -eux ; runDeps=' apr-dev apr-util-dev apr-util-ldap perl ' ; apk add ca-certificates=20191127-r2 coreutils=8.31-r0 dpkg-dev=1.19.7-r0 dpkg=1.19.7-r0 gcc=8.3.0-r0 gnupg=2.2.19-r0 libc-dev=0.7.1-r0 curl-dev=7.66.0-r4 jansson-dev=2.12-r0 libxml2-dev=2.9.9-r5 lua-dev make=4.2.1-r2 nghttp2-dev=1.39.2-r1 openssl=1.1.1k-r0 openssl-dev=1.1.1k-r0 pcre-dev=8.43-r1 tar=1.32-r1 zlib-dev=1.2.11-r1 $runDeps --no-cache --virtual .build-deps ; ddist() { local f=\"$1\" ;shift ;local distFile=\"$1\" ;shift ;local success= ;local distUrl= ;for distUrl in $APACHE_DIST_URLS; do if wget -O \"$f\" \"$distUrl$distFile\" \\\n && [ -s \"$f\" ] ; then success=1 ;break ; fi ; done ;[ -n \"$success\" ] ; } ; ddist 'httpd.tar.bz2' \"httpd/httpd-$HTTPD_VERSION.tar.bz2\" ; echo \"$HTTPD_SHA256 *httpd.tar.bz2\" | sha256sum -c - ; ddist 'httpd.tar.bz2.asc' \"httpd/httpd-$HTTPD_VERSION.tar.bz2.asc\" ; export GNUPGHOME=\"$( mktemp -d ;)\" ; for key in A93D62ECC3C8EA12DB220EC934EA76E6791485A8 B9E8213AEFB861AF35A41F2C995E35221AD84DFF; do gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\" ; done ; gpg --batch --verify httpd.tar.bz2.asc httpd.tar.bz2 ; command -v gpgconf \\\n && gpgconf --kill all || : ; rm -rf \"$GNUPGHOME\" httpd.tar.bz2.asc ; mkdir -p src ; tar -xf httpd.tar.bz2 -C src --strip-components=1 ; rm httpd.tar.bz2 ; cd src ; patches() { while [ \"$#\" -gt 0 ] ; do local patchFile=\"$1\" ;shift ;local patchSha256=\"$1\" ;shift ;ddist \"$patchFile\" \"httpd/patches/apply_to_$HTTPD_VERSION/$patchFile\" ;echo \"$patchSha256 *$patchFile\" | sha256sum -c - ;patch -p0 < \"$patchFile\";rm -f \"$patchFile\" ; done ; } ; patches $HTTPD_PATCHES ; gnuArch=\"$( dpkg-architecture --query DEB_BUILD_GNU_TYPE ;)\" ; ./configure --build=\"$gnuArch\" --prefix=\"$HTTPD_PREFIX\" --enable-mods-shared=reallyall --enable-mpms-shared=all ; make -j \"$( nproc ;)\" ; make install ; cd .. ; rm -r src man manual ; sed -ri -e 's!^(\\s*CustomLog)\\s+\\S+!\\1 /proc/self/fd/1!g' -e 's!^(\\s*ErrorLog)\\s+\\S+!\\1 /proc/self/fd/2!g' -e 's!^(\\s*TransferLog)\\s+\\S+!\\1 /proc/self/fd/1!g' \"$HTTPD_PREFIX/conf/httpd.conf\" \"$HTTPD_PREFIX/conf/extra/httpd-ssl.conf\" ; runDeps=\"$runDeps $( scanelf --needed --nobanner --format '%n#p' --recursive /usr/local | tr ',' '\\n' | sort -u | awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' ;)\" ; apk add $runDeps --virtual .httpd-rundeps ; apk del .build-deps ; httpd -v\nCOPY httpd-foreground /usr/local/bin/\nEXPOSE 80/tcp\nCMD [\"httpd-foreground\"]\nRUN addgroup -S docker-user ; adduser -S -G docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM alpine:3.10\n#  ensure www-data user exists\nRUN set -x \\\n && addgroup -g 82 -S www-data \\\n && adduser -u 82 -D -S -G www-data www-data\n#  82 is the standard uid/gid for \"www-data\" in Alpine\n#  https://git.alpinelinux.org/cgit/aports/tree/main/apache2/apache2.pre-install?h=v3.8.1\n#  https://git.alpinelinux.org/cgit/aports/tree/main/lighttpd/lighttpd.pre-install?h=v3.8.1\n#  https://git.alpinelinux.org/cgit/aports/tree/main/nginx/nginx.pre-install?h=v3.8.1\nENV HTTPD_PREFIX=\"/usr/local/apache2\"\nENV PATH=\"$HTTPD_PREFIX/bin:$PATH\"\nRUN mkdir -p \"$HTTPD_PREFIX\" \\\n && chown www-data:www-data \"$HTTPD_PREFIX\"\nWORKDIR $HTTPD_PREFIX\nENV HTTPD_VERSION=\"2.4.39\"\nENV HTTPD_SHA256=\"b4ca9d05773aa59b54d66cd8f4744b945289f084d3be17d7981d1783a5decfa2\"\n#  https://httpd.apache.org/security/vulnerabilities_24.html\nENV HTTPD_PATCHES=\"\"\nENV APACHE_DIST_URLS=\"https://www.apache.org/dyn/closer.cgi?action=download&filename=  https://www-us.apache.org/dist/  https://www.apache.org/dist/  https://archive.apache.org/dist/\"\n#  see https://httpd.apache.org/docs/2.4/install.html#requirements\nRUN set -eux ; runDeps=' apr-dev apr-util-dev apr-util-ldap perl ' ; apk add --no-cache --virtual .build-deps $runDeps ca-certificates coreutils dpkg-dev dpkg gcc gnupg libc-dev curl-dev jansson-dev libxml2-dev lua-dev make nghttp2-dev openssl openssl-dev pcre-dev tar zlib-dev ; ddist() { local f=\"$1\" ;shift ;local distFile=\"$1\" ;shift ;local success= ;local distUrl= ;for distUrl in $APACHE_DIST_URLS; do if wget -O \"$f\" \"$distUrl$distFile\" \\\n && [ -s \"$f\" ] ; then success=1 ;break ; fi ; done ;[ -n \"$success\" ] ; } ; ddist 'httpd.tar.bz2' \"httpd/httpd-$HTTPD_VERSION.tar.bz2\" ; echo \"$HTTPD_SHA256 *httpd.tar.bz2\" | sha256sum -c - ; ddist 'httpd.tar.bz2.asc' \"httpd/httpd-$HTTPD_VERSION.tar.bz2.asc\" ; export GNUPGHOME=\"$( mktemp -d ;)\" ; for key in A93D62ECC3C8EA12DB220EC934EA76E6791485A8 B9E8213AEFB861AF35A41F2C995E35221AD84DFF; do gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\" ; done ; gpg --batch --verify httpd.tar.bz2.asc httpd.tar.bz2 ; command -v gpgconf \\\n && gpgconf --kill all || : ; rm -rf \"$GNUPGHOME\" httpd.tar.bz2.asc ; mkdir -p src ; tar -xf httpd.tar.bz2 -C src --strip-components=1 ; rm httpd.tar.bz2 ; cd src ; patches() { while [ \"$#\" -gt 0 ] ; do local patchFile=\"$1\" ;shift ;local patchSha256=\"$1\" ;shift ;ddist \"$patchFile\" \"httpd/patches/apply_to_$HTTPD_VERSION/$patchFile\" ;echo \"$patchSha256 *$patchFile\" | sha256sum -c - ;patch -p0 < \"$patchFile\";rm -f \"$patchFile\" ; done ; } ; patches $HTTPD_PATCHES ; gnuArch=\"$( dpkg-architecture --query DEB_BUILD_GNU_TYPE ;)\" ; ./configure --build=\"$gnuArch\" --prefix=\"$HTTPD_PREFIX\" --enable-mods-shared=reallyall --enable-mpms-shared=all ; make -j \"$( nproc ;)\" ; make install ; cd .. ; rm -r src man manual ; sed -ri -e 's!^(\\s*CustomLog)\\s+\\S+!\\1 /proc/self/fd/1!g' -e 's!^(\\s*ErrorLog)\\s+\\S+!\\1 /proc/self/fd/2!g' -e 's!^(\\s*TransferLog)\\s+\\S+!\\1 /proc/self/fd/1!g' \"$HTTPD_PREFIX/conf/httpd.conf\" \"$HTTPD_PREFIX/conf/extra/httpd-ssl.conf\" ; runDeps=\"$runDeps $( scanelf --needed --nobanner --format '%n#p' --recursive /usr/local | tr ',' '\\n' | sort -u | awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' ;)\" ; apk add --virtual .httpd-rundeps $runDeps ; apk del .build-deps ; httpd -v\nCOPY httpd-foreground /usr/local/bin/\nEXPOSE 80/tcp\nCMD [\"httpd-foreground\"]\n","injectedSmells":[],"originalDockerfileHash":"10997d0bcec916a0a1567f7789aee1d9","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM alpine:3.10\n#   ensure www-data user exists\nRUN set -x \\\n && addgroup -g 82 -S www-data \\\n && adduser -u 82 -D -S -G www-data www-data\n#   82 is the standard uid/gid for \"www-data\" in Alpine\n#   https://git.alpinelinux.org/cgit/aports/tree/main/apache2/apache2.pre-install?h=v3.8.1\n#   https://git.alpinelinux.org/cgit/aports/tree/main/lighttpd/lighttpd.pre-install?h=v3.8.1\n#   https://git.alpinelinux.org/cgit/aports/tree/main/nginx/nginx.pre-install?h=v3.8.1\nENV HTTPD_PREFIX=\"/usr/local/apache2\"\nENV PATH=\"$HTTPD_PREFIX/bin:$PATH\"\nRUN mkdir -p \"$HTTPD_PREFIX\" \\\n && chown www-data:www-data \"$HTTPD_PREFIX\"\nWORKDIR $HTTPD_PREFIX\nENV HTTPD_VERSION=\"2.4.39\"\nENV HTTPD_SHA256=\"b4ca9d05773aa59b54d66cd8f4744b945289f084d3be17d7981d1783a5decfa2\"\n#   https://httpd.apache.org/security/vulnerabilities_24.html\nENV HTTPD_PATCHES=\"\"\nENV APACHE_DIST_URLS=\"https://www.apache.org/dyn/closer.cgi?action=download&filename=  https://www-us.apache.org/dist/  https://www.apache.org/dist/  https://archive.apache.org/dist/\"\n#   see https://httpd.apache.org/docs/2.4/install.html#requirements\nRUN set -eux ; runDeps=' apr-dev apr-util-dev apr-util-ldap perl ' ; apk add --no-cache --virtual .build-deps $runDeps ca-certificates coreutils dpkg-dev dpkg gcc gnupg libc-dev curl-dev jansson-dev libxml2-dev lua-dev make nghttp2-dev openssl openssl-dev pcre-dev tar zlib-dev ; ddist() { local f=\"$1\" ;shift ;local distFile=\"$1\" ;shift ;local success= ;local distUrl= ;for distUrl in $APACHE_DIST_URLS; do if wget -O \"$f\" \"$distUrl$distFile\" \\\n && [ -s \"$f\" ] ; then success=1 ;break ; fi ; done ;[ -n \"$success\" ] ; } ; ddist 'httpd.tar.bz2' \"httpd/httpd-$HTTPD_VERSION.tar.bz2\" ; echo \"$HTTPD_SHA256 *httpd.tar.bz2\" | sha256sum -c - ; ddist 'httpd.tar.bz2.asc' \"httpd/httpd-$HTTPD_VERSION.tar.bz2.asc\" ; export GNUPGHOME=\"$( mktemp -d ;)\" ; for key in A93D62ECC3C8EA12DB220EC934EA76E6791485A8 B9E8213AEFB861AF35A41F2C995E35221AD84DFF; do gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\" ; done ; gpg --batch --verify httpd.tar.bz2.asc httpd.tar.bz2 ; command -v gpgconf \\\n && gpgconf --kill all || : ; rm -rf \"$GNUPGHOME\" httpd.tar.bz2.asc ; mkdir -p src ; tar -xf httpd.tar.bz2 -C src --strip-components=1 ; rm httpd.tar.bz2 ; cd src ; patches() { while [ \"$#\" -gt 0 ] ; do local patchFile=\"$1\" ;shift ;local patchSha256=\"$1\" ;shift ;ddist \"$patchFile\" \"httpd/patches/apply_to_$HTTPD_VERSION/$patchFile\" ;echo \"$patchSha256 *$patchFile\" | sha256sum -c - ;patch -p0 < \"$patchFile\";rm -f \"$patchFile\" ; done ; } ; patches $HTTPD_PATCHES ; gnuArch=\"$( dpkg-architecture --query DEB_BUILD_GNU_TYPE ;)\" ; ./configure --build=\"$gnuArch\" --prefix=\"$HTTPD_PREFIX\" --enable-mods-shared=reallyall --enable-mpms-shared=all ; make -j \"$( nproc ;)\" ; make install ; cd .. ; rm -r src man manual ; sed -ri -e 's!^(\\s*CustomLog)\\s+\\S+!\\1 /proc/self/fd/1!g' -e 's!^(\\s*ErrorLog)\\s+\\S+!\\1 /proc/self/fd/2!g' -e 's!^(\\s*TransferLog)\\s+\\S+!\\1 /proc/self/fd/1!g' \"$HTTPD_PREFIX/conf/httpd.conf\" \"$HTTPD_PREFIX/conf/extra/httpd-ssl.conf\" ; runDeps=\"$runDeps $( scanelf --needed --nobanner --format '%n#p' --recursive /usr/local | tr ',' '\\n' | sort -u | awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' ;)\" ; apk add --virtual .httpd-rundeps $runDeps ; apk del .build-deps ; httpd -v\nCOPY httpd-foreground /usr/local/bin/\nEXPOSE 80/tcp\nCMD [\"httpd-foreground\"]\n","originalDockerfileUglifiedHash":"ccc6f23fc9b0e3b9832724751723fc0a","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/4706d0327f4f6caad83c9e7d39044a675161e31d.dockerfile"}