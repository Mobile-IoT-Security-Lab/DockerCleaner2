{"seed":1305038061,"processedDockerfileHash":"40d7b04a0c8daded3f413728b849c281","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","use-copy-instead-of-add","have-a-healthcheck"],"processedDockerfile":"#   Licensed to the Apache Software Foundation (ASF) under one\n#   or more contributor license agreements. See the NOTICE file\n#   distributed with this work for additional information\n#   regarding copyright ownership. The ASF licenses this file\n#   to you under the Apache License, Version 2.0 (the\n#   \"License\"); you may not use this file except in compliance\n#   with the License. You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n#   Unless required by applicable law or agreed to in writing,\n#   software distributed under the License is distributed on an\n#   \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n#   KIND, either express or implied. See the License for the\n#   specific language governing permissions and limitations\n#   under the License.\n#\nFROM openjdk:8-jre AS artifactbase\nLABEL maintainer=\"Apache NiFi <dev@nifi.apache.org>\"\nARG NIFI_VERSION\nARG NIFI_BINARY\nARG NIFI_TOOLKIT_BINARY\nENV NIFI_BASE_DIR=\"/opt/nifi\"\nENV NIFI_HOME=\"${NIFI_BASE_DIR}/nifi-current\"\nENV NIFI_TOOLKIT_HOME=\"${NIFI_BASE_DIR}/nifi-toolkit-current\"\nENV NIFI_PID_DIR=\"${NIFI_HOME}/run\"\nENV NIFI_LOG_DIR=\"${NIFI_HOME}/logs\"\nCOPY sh/ ${NIFI_BASE_DIR}/scripts/\nCOPY $NIFI_BINARY $NIFI_BASE_DIR\nRUN unzip ${NIFI_BASE_DIR}/nifi-${NIFI_VERSION}-bin.zip -d ${NIFI_BASE_DIR} \\\n && rm ${NIFI_BASE_DIR}/nifi-${NIFI_VERSION}-bin.zip \\\n && mv ${NIFI_BASE_DIR}/nifi-${NIFI_VERSION} ${NIFI_HOME} \\\n && ln -s ${NIFI_HOME} ${NIFI_BASE_DIR}/nifi-${NIFI_VERSION}\nCOPY $NIFI_TOOLKIT_BINARY $NIFI_BASE_DIR\nRUN unzip ${NIFI_BASE_DIR}/nifi-toolkit-${NIFI_VERSION}-bin.zip -d ${NIFI_BASE_DIR} \\\n && rm ${NIFI_BASE_DIR}/nifi-toolkit-${NIFI_VERSION}-bin.zip \\\n && mv ${NIFI_BASE_DIR}/nifi-toolkit-${NIFI_VERSION} ${NIFI_TOOLKIT_HOME} \\\n && ln -s ${NIFI_TOOLKIT_HOME} ${NIFI_BASE_DIR}/nifi-toolkit-${NIFI_VERSION}\n#   Create necessary directories\nRUN mkdir -p ${NIFI_HOME}/conf \\\n && mkdir -p ${NIFI_HOME}/database_repository \\\n && mkdir -p ${NIFI_HOME}/flowfile_repository \\\n && mkdir -p ${NIFI_HOME}/content_repository \\\n && mkdir -p ${NIFI_HOME}/provenance_repository \\\n && mkdir -p ${NIFI_HOME}/state \\\n && mkdir -p ${NIFI_LOG_DIR}\nFROM openjdk:8-jre\nLABEL maintainer=\"Apache NiFi <dev@nifi.apache.org>\"\nARG UID=1000\nARG GID=1000\nENV NIFI_BASE_DIR=\"/opt/nifi\"\nENV NIFI_HOME=\"${NIFI_BASE_DIR}/nifi-current\"\nENV NIFI_TOOLKIT_HOME=\"${NIFI_BASE_DIR}/nifi-toolkit-current\"\nENV NIFI_PID_DIR=\"${NIFI_HOME}/run\"\nENV NIFI_LOG_DIR=\"${NIFI_HOME}/logs\"\n#   Setup NiFi user and create necessary directories\nRUN groupadd -g ${GID} nifi || groupmod -n nifi `getent group ${GID} | cut -d: -f1 ` \\\n && useradd --shell /bin/bash -u ${UID} -g ${GID} -m nifi \\\n && apt-get update \\\n && apt-get install --no-install-recommends jq=1.6-2.1 xmlstarlet=1.6.1-2.1 procps=2:3.3.17-5 -y\nCOPY --chown=nifi:nifi --from=artifactbase $NIFI_BASE_DIR $NIFI_BASE_DIR\nVOLUME ${NIFI_LOG_DIR}  ${NIFI_HOME}/conf  ${NIFI_HOME}/database_repository  ${NIFI_HOME}/flowfile_repository  ${NIFI_HOME}/content_repository  ${NIFI_HOME}/provenance_repository  ${NIFI_HOME}/state\nUSER nifi\n#   Clear nifi-env.sh in favour of configuring all environment variables in the Dockerfile\nRUN echo \"#!/bin/sh\\n\" > $NIFI_HOME/bin/nifi-env.sh\n#   Web HTTP(s) & Socket Site-to-Site Ports\nEXPOSE 8080/tcp 8443/tcp 10000/tcp 8000/tcp\nWORKDIR ${NIFI_HOME}\n#   Apply configuration and start NiFi\n#\n#   We need to use the exec form to avoid running our command in a subshell and omitting signals,\n#   thus being unable to shut down gracefully:\n#   https://docs.docker.com/engine/reference/builder/#entrypoint\n#\n#   Also we need to use relative path, because the exec form does not invoke a command shell,\n#   thus normal shell processing does not happen:\n#   https://docs.docker.com/engine/reference/builder/#exec-form-entrypoint-example\nENTRYPOINT [\"../scripts/start.sh\"]\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Licensed to the Apache Software Foundation (ASF) under one\n#  or more contributor license agreements. See the NOTICE file\n#  distributed with this work for additional information\n#  regarding copyright ownership. The ASF licenses this file\n#  to you under the Apache License, Version 2.0 (the\n#  \"License\"); you may not use this file except in compliance\n#  with the License. You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n#  Unless required by applicable law or agreed to in writing,\n#  software distributed under the License is distributed on an\n#  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n#  KIND, either express or implied. See the License for the\n#  specific language governing permissions and limitations\n#  under the License.\n#\nFROM openjdk:8-jre AS artifactbase\nLABEL maintainer=\"Apache NiFi <dev@nifi.apache.org>\"\nARG NIFI_VERSION\nARG NIFI_BINARY\nARG NIFI_TOOLKIT_BINARY\nENV NIFI_BASE_DIR=\"/opt/nifi\"\nENV NIFI_HOME=\"${NIFI_BASE_DIR}/nifi-current\"\nENV NIFI_TOOLKIT_HOME=\"${NIFI_BASE_DIR}/nifi-toolkit-current\"\nENV NIFI_PID_DIR=\"${NIFI_HOME}/run\"\nENV NIFI_LOG_DIR=\"${NIFI_HOME}/logs\"\nADD sh/ ${NIFI_BASE_DIR}/scripts/\nCOPY $NIFI_BINARY $NIFI_BASE_DIR\nRUN unzip ${NIFI_BASE_DIR}/nifi-${NIFI_VERSION}-bin.zip -d ${NIFI_BASE_DIR} \\\n && rm ${NIFI_BASE_DIR}/nifi-${NIFI_VERSION}-bin.zip \\\n && mv ${NIFI_BASE_DIR}/nifi-${NIFI_VERSION} ${NIFI_HOME} \\\n && ln -s ${NIFI_HOME} ${NIFI_BASE_DIR}/nifi-${NIFI_VERSION}\nCOPY $NIFI_TOOLKIT_BINARY $NIFI_BASE_DIR\nRUN unzip ${NIFI_BASE_DIR}/nifi-toolkit-${NIFI_VERSION}-bin.zip -d ${NIFI_BASE_DIR} \\\n && rm ${NIFI_BASE_DIR}/nifi-toolkit-${NIFI_VERSION}-bin.zip \\\n && mv ${NIFI_BASE_DIR}/nifi-toolkit-${NIFI_VERSION} ${NIFI_TOOLKIT_HOME} \\\n && ln -s ${NIFI_TOOLKIT_HOME} ${NIFI_BASE_DIR}/nifi-toolkit-${NIFI_VERSION}\n#  Create necessary directories\nRUN mkdir -p ${NIFI_HOME}/conf \\\n && mkdir -p ${NIFI_HOME}/database_repository \\\n && mkdir -p ${NIFI_HOME}/flowfile_repository \\\n && mkdir -p ${NIFI_HOME}/content_repository \\\n && mkdir -p ${NIFI_HOME}/provenance_repository \\\n && mkdir -p ${NIFI_HOME}/state \\\n && mkdir -p ${NIFI_LOG_DIR}\nFROM openjdk:8-jre\nLABEL maintainer=\"Apache NiFi <dev@nifi.apache.org>\"\nARG UID=1000\nARG GID=1000\nENV NIFI_BASE_DIR=\"/opt/nifi\"\nENV NIFI_HOME=\"${NIFI_BASE_DIR}/nifi-current\"\nENV NIFI_TOOLKIT_HOME=\"${NIFI_BASE_DIR}/nifi-toolkit-current\"\nENV NIFI_PID_DIR=\"${NIFI_HOME}/run\"\nENV NIFI_LOG_DIR=\"${NIFI_HOME}/logs\"\n#  Setup NiFi user and create necessary directories\nRUN groupadd -g ${GID} nifi || groupmod -n nifi `getent group ${GID} | cut -d: -f1 ` \\\n && useradd --shell /bin/bash -u ${UID} -g ${GID} -m nifi \\\n && apt-get update \\\n && apt-get install jq xmlstarlet procps -y\nCOPY --chown=nifi:nifi --from=artifactbase $NIFI_BASE_DIR $NIFI_BASE_DIR\nVOLUME ${NIFI_LOG_DIR}  ${NIFI_HOME}/conf  ${NIFI_HOME}/database_repository  ${NIFI_HOME}/flowfile_repository  ${NIFI_HOME}/content_repository  ${NIFI_HOME}/provenance_repository  ${NIFI_HOME}/state\nUSER nifi\n#  Clear nifi-env.sh in favour of configuring all environment variables in the Dockerfile\nRUN echo \"#!/bin/sh\\n\" > $NIFI_HOME/bin/nifi-env.sh\n#  Web HTTP(s) & Socket Site-to-Site Ports\nEXPOSE 8080/tcp 8443/tcp 10000/tcp 8000/tcp\nWORKDIR ${NIFI_HOME}\n#  Apply configuration and start NiFi\n#\n#  We need to use the exec form to avoid running our command in a subshell and omitting signals,\n#  thus being unable to shut down gracefully:\n#  https://docs.docker.com/engine/reference/builder/#entrypoint\n#\n#  Also we need to use relative path, because the exec form does not invoke a command shell,\n#  thus normal shell processing does not happen:\n#  https://docs.docker.com/engine/reference/builder/#exec-form-entrypoint-example\nENTRYPOINT [\"../scripts/start.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"9b6ecc4db8bebd190a18cf5c4dc94ced","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Licensed to the Apache Software Foundation (ASF) under one\n#   or more contributor license agreements. See the NOTICE file\n#   distributed with this work for additional information\n#   regarding copyright ownership. The ASF licenses this file\n#   to you under the Apache License, Version 2.0 (the\n#   \"License\"); you may not use this file except in compliance\n#   with the License. You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n#   Unless required by applicable law or agreed to in writing,\n#   software distributed under the License is distributed on an\n#   \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n#   KIND, either express or implied. See the License for the\n#   specific language governing permissions and limitations\n#   under the License.\n#\nFROM openjdk:8-jre AS artifactbase\nLABEL maintainer=\"Apache NiFi <dev@nifi.apache.org>\"\nARG NIFI_VERSION\nARG NIFI_BINARY\nARG NIFI_TOOLKIT_BINARY\nENV NIFI_BASE_DIR=\"/opt/nifi\"\nENV NIFI_HOME=\"${NIFI_BASE_DIR}/nifi-current\"\nENV NIFI_TOOLKIT_HOME=\"${NIFI_BASE_DIR}/nifi-toolkit-current\"\nENV NIFI_PID_DIR=\"${NIFI_HOME}/run\"\nENV NIFI_LOG_DIR=\"${NIFI_HOME}/logs\"\nADD sh/ ${NIFI_BASE_DIR}/scripts/\nCOPY $NIFI_BINARY $NIFI_BASE_DIR\nRUN unzip ${NIFI_BASE_DIR}/nifi-${NIFI_VERSION}-bin.zip -d ${NIFI_BASE_DIR} \\\n && rm ${NIFI_BASE_DIR}/nifi-${NIFI_VERSION}-bin.zip \\\n && mv ${NIFI_BASE_DIR}/nifi-${NIFI_VERSION} ${NIFI_HOME} \\\n && ln -s ${NIFI_HOME} ${NIFI_BASE_DIR}/nifi-${NIFI_VERSION}\nCOPY $NIFI_TOOLKIT_BINARY $NIFI_BASE_DIR\nRUN unzip ${NIFI_BASE_DIR}/nifi-toolkit-${NIFI_VERSION}-bin.zip -d ${NIFI_BASE_DIR} \\\n && rm ${NIFI_BASE_DIR}/nifi-toolkit-${NIFI_VERSION}-bin.zip \\\n && mv ${NIFI_BASE_DIR}/nifi-toolkit-${NIFI_VERSION} ${NIFI_TOOLKIT_HOME} \\\n && ln -s ${NIFI_TOOLKIT_HOME} ${NIFI_BASE_DIR}/nifi-toolkit-${NIFI_VERSION}\n#   Create necessary directories\nRUN mkdir -p ${NIFI_HOME}/conf \\\n && mkdir -p ${NIFI_HOME}/database_repository \\\n && mkdir -p ${NIFI_HOME}/flowfile_repository \\\n && mkdir -p ${NIFI_HOME}/content_repository \\\n && mkdir -p ${NIFI_HOME}/provenance_repository \\\n && mkdir -p ${NIFI_HOME}/state \\\n && mkdir -p ${NIFI_LOG_DIR}\nFROM openjdk:8-jre\nLABEL maintainer=\"Apache NiFi <dev@nifi.apache.org>\"\nARG UID=1000\nARG GID=1000\nENV NIFI_BASE_DIR=\"/opt/nifi\"\nENV NIFI_HOME=\"${NIFI_BASE_DIR}/nifi-current\"\nENV NIFI_TOOLKIT_HOME=\"${NIFI_BASE_DIR}/nifi-toolkit-current\"\nENV NIFI_PID_DIR=\"${NIFI_HOME}/run\"\nENV NIFI_LOG_DIR=\"${NIFI_HOME}/logs\"\n#   Setup NiFi user and create necessary directories\nRUN groupadd -g ${GID} nifi || groupmod -n nifi `getent group ${GID} | cut -d: -f1 ` \\\n && useradd --shell /bin/bash -u ${UID} -g ${GID} -m nifi \\\n && apt-get update \\\n && apt-get install jq xmlstarlet procps -y\nCOPY --chown=nifi:nifi --from=artifactbase $NIFI_BASE_DIR $NIFI_BASE_DIR\nVOLUME ${NIFI_LOG_DIR}  ${NIFI_HOME}/conf  ${NIFI_HOME}/database_repository  ${NIFI_HOME}/flowfile_repository  ${NIFI_HOME}/content_repository  ${NIFI_HOME}/provenance_repository  ${NIFI_HOME}/state\nUSER nifi\n#   Clear nifi-env.sh in favour of configuring all environment variables in the Dockerfile\nRUN echo \"#!/bin/sh\\n\" > $NIFI_HOME/bin/nifi-env.sh\n#   Web HTTP(s) & Socket Site-to-Site Ports\nEXPOSE 8080/tcp 8443/tcp 10000/tcp 8000/tcp\nWORKDIR ${NIFI_HOME}\n#   Apply configuration and start NiFi\n#\n#   We need to use the exec form to avoid running our command in a subshell and omitting signals,\n#   thus being unable to shut down gracefully:\n#   https://docs.docker.com/engine/reference/builder/#entrypoint\n#\n#   Also we need to use relative path, because the exec form does not invoke a command shell,\n#   thus normal shell processing does not happen:\n#   https://docs.docker.com/engine/reference/builder/#exec-form-entrypoint-example\nENTRYPOINT [\"../scripts/start.sh\"]\n","originalDockerfileUglifiedHash":"0b224b7e8a9a3ae9aef6237e0de6ac02","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/cb73c7492442e865faab3ab3d789a797dc36c393.dockerfile"}