{"seed":751075210,"processedDockerfileHash":"f90535e18ab0c84d02768be532790364","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Docker image file that describes an OpenSuse 42.3 image with PowerShell installed from tar.gz\n#   Implemented in two stages, one that downloads and uncompresses the tar.gz\n#   The next stage simply copies the files from the first stage,\n#   effectively removing the tar.gz and packages that are not needed from the final image.\n#   Define arg(s) needed for the From statement\nARG fromTag=42.3\nARG imageRepo=opensuse/leap\nFROM ${imageRepo}:${fromTag} AS installer-env\n#   Define Args for the needed to add the package\nARG PS_VERSION=6.2.0\nARG PS_PACKAGE=powershell-${PS_VERSION}-linux-x64.tar.gz\nARG PS_PACKAGE_URL=https://github.com/PowerShell/PowerShell/releases/download/v${PS_VERSION}/${PS_PACKAGE}\nARG PS_INSTALL_VERSION=6\n#   define the folder we will be installing PowerShell to\nENV PS_INSTALL_FOLDER=\"/opt/microsoft/powershell/$PS_INSTALL_VERSION\"\n#   Create the install folder\nRUN mkdir -p ${PS_INSTALL_FOLDER}\n#   Install dependencies\nRUN zypper --non-interactive update --skip-interactive\nRUN zypper --non-interactive install tar\n#   Download the Linux tar.gz and save it\nCOPY ${PS_PACKAGE_URL} /tmp/linux.tar.gz\n#   Unzip the Linux tar.gz\nRUN tar zxf /tmp/linux.tar.gz -C ${PS_INSTALL_FOLDER}\n#   ------ Second stage ------\n#   Start a new stage so we lose all the tar.gz layers from the final image\nFROM ${imageRepo}:${fromTag}\n#   Copy only the files we need from the previous stage\nCOPY --from=installer-env /opt/microsoft/powershell /opt/microsoft/powershell\n#   Define Args and Env needed to create links\nARG PS_INSTALL_VERSION=6\nENV PS_INSTALL_FOLDER=\"/opt/microsoft/powershell/$PS_INSTALL_VERSION\" \\\n    DOTNET_SYSTEM_GLOBALIZATION_INVARIANT=\"false\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    LANG=\"en_US.UTF-8\" \\\n    PSModuleAnalysisCachePath=\"/var/cache/microsoft/powershell/PSModuleAnalysisCache/ModuleAnalysisCache\"\n#   Install dependencies\nRUN zypper --non-interactive update --skip-interactive \\\n && zypper --non-interactive install glibc-locale glibc-i18ndata libicu openssl less \\\n && localedef --charmap=UTF-8 --inputfile=en_US $LANG \\\n && ln -s ${PS_INSTALL_FOLDER}/pwsh /usr/bin/pwsh \\\n && chmod a+x,o-w ${PS_INSTALL_FOLDER}/pwsh \\\n && zypper clean -a \\\n && rm -f /var/log/zypp/history /var/log/zypper.log \\\n && pwsh -NoLogo -NoProfile -Command \" $ErrorActionPreference = 'Stop' ; $ProgressPreference = 'SilentlyContinue' ; while(!(Test-Path -Path $env:PSModuleAnalysisCachePath)) { Write-Host \"'Waiting for $env:PSModuleAnalysisCachePath'\" ; Start-Sleep -Seconds 6 ; }\"\n#   Define args needed only for the labels\nARG PS_VERSION=6.2.0\nARG IMAGE_NAME=mcr.microsoft.com/powershell:opensuse-42.3\nARG VCS_REF=\"none\"\n#   Add label last as it's just metadata and uses a lot of parameters\nLABEL maintainer=\"PowerShell Team <powershellteam@hotmail.com>\" \\\n      readme.md=\"https://github.com/PowerShell/PowerShell/blob/master/docker/README.md\" \\\n      description=\"This Dockerfile will install the latest release of PowerShell.\" \\\n      org.label-schema.usage=\"https://github.com/PowerShell/PowerShell/tree/master/docker#run-the-docker-image-you-built\" \\\n      org.label-schema.url=\"https://github.com/PowerShell/PowerShell/blob/master/docker/README.md\" \\\n      org.label-schema.vcs-url=\"https://github.com/PowerShell/PowerShell-Docker\" \\\n      org.label-schema.name=\"powershell\" \\\n      org.label-schema.vendor=\"PowerShell\" \\\n      org.label-schema.vcs-ref=\"${VCS_REF}\" \\\n      org.label-schema.version=\"${PS_VERSION}\" \\\n      org.label-schema.schema-version=\"1.0\" \\\n      org.label-schema.docker.cmd=\"docker run ${IMAGE_NAME} pwsh -c '$psversiontable'\" \\\n      org.label-schema.docker.cmd.devel=\"docker run ${IMAGE_NAME}\" \\\n      org.label-schema.docker.cmd.test=\"docker run ${IMAGE_NAME} pwsh -c Invoke-Pester\" \\\n      org.label-schema.docker.cmd.help=\"docker run ${IMAGE_NAME} pwsh -c Get-Help\"\nCMD [\"pwsh\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Docker image file that describes an OpenSuse 42.3 image with PowerShell installed from tar.gz\n#  Implemented in two stages, one that downloads and uncompresses the tar.gz\n#  The next stage simply copies the files from the first stage,\n#  effectively removing the tar.gz and packages that are not needed from the final image.\n#  Define arg(s) needed for the From statement\nARG fromTag=42.3\nARG imageRepo=opensuse/leap\nFROM ${imageRepo}:${fromTag} AS installer-env\n#  Define Args for the needed to add the package\nARG PS_VERSION=6.2.0\nARG PS_PACKAGE=powershell-${PS_VERSION}-linux-x64.tar.gz\nARG PS_PACKAGE_URL=https://github.com/PowerShell/PowerShell/releases/download/v${PS_VERSION}/${PS_PACKAGE}\nARG PS_INSTALL_VERSION=6\n#  define the folder we will be installing PowerShell to\nENV PS_INSTALL_FOLDER=\"/opt/microsoft/powershell/$PS_INSTALL_VERSION\"\n#  Create the install folder\nRUN mkdir -p ${PS_INSTALL_FOLDER}\n#  Install dependencies\nRUN zypper --non-interactive update --skip-interactive\nRUN zypper --non-interactive install tar\n#  Download the Linux tar.gz and save it\nADD ${PS_PACKAGE_URL} /tmp/linux.tar.gz\n#  Unzip the Linux tar.gz\nRUN tar zxf /tmp/linux.tar.gz -C ${PS_INSTALL_FOLDER}\n#  ------ Second stage ------\n#  Start a new stage so we lose all the tar.gz layers from the final image\nFROM ${imageRepo}:${fromTag}\n#  Copy only the files we need from the previous stage\nCOPY --from=installer-env /opt/microsoft/powershell /opt/microsoft/powershell\n#  Define Args and Env needed to create links\nARG PS_INSTALL_VERSION=6\nENV PS_INSTALL_FOLDER=\"/opt/microsoft/powershell/$PS_INSTALL_VERSION\" \\\n    DOTNET_SYSTEM_GLOBALIZATION_INVARIANT=\"false\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    LANG=\"en_US.UTF-8\" \\\n    PSModuleAnalysisCachePath=\"/var/cache/microsoft/powershell/PSModuleAnalysisCache/ModuleAnalysisCache\"\n#  Install dependencies\nRUN zypper --non-interactive update --skip-interactive \\\n && zypper --non-interactive install glibc-locale glibc-i18ndata libicu openssl less \\\n && localedef --charmap=UTF-8 --inputfile=en_US $LANG \\\n && ln -s ${PS_INSTALL_FOLDER}/pwsh /usr/bin/pwsh \\\n && chmod a+x,o-w ${PS_INSTALL_FOLDER}/pwsh \\\n && zypper clean -a \\\n && rm -f /var/log/zypp/history /var/log/zypper.log \\\n && pwsh -NoLogo -NoProfile -Command \" $ErrorActionPreference = 'Stop' ; $ProgressPreference = 'SilentlyContinue' ; while(!(Test-Path -Path $env:PSModuleAnalysisCachePath)) { Write-Host \"'Waiting for $env:PSModuleAnalysisCachePath'\" ; Start-Sleep -Seconds 6 ; }\"\n#  Define args needed only for the labels\nARG PS_VERSION=6.2.0\nARG IMAGE_NAME=mcr.microsoft.com/powershell:opensuse-42.3\nARG VCS_REF=\"none\"\n#  Add label last as it's just metadata and uses a lot of parameters\nLABEL maintainer=\"PowerShell Team <powershellteam@hotmail.com>\" \\\n      readme.md=\"https://github.com/PowerShell/PowerShell/blob/master/docker/README.md\" \\\n      description=\"This Dockerfile will install the latest release of PowerShell.\" \\\n      org.label-schema.usage=\"https://github.com/PowerShell/PowerShell/tree/master/docker#run-the-docker-image-you-built\" \\\n      org.label-schema.url=\"https://github.com/PowerShell/PowerShell/blob/master/docker/README.md\" \\\n      org.label-schema.vcs-url=\"https://github.com/PowerShell/PowerShell-Docker\" \\\n      org.label-schema.name=\"powershell\" \\\n      org.label-schema.vendor=\"PowerShell\" \\\n      org.label-schema.vcs-ref=\"${VCS_REF}\" \\\n      org.label-schema.version=\"${PS_VERSION}\" \\\n      org.label-schema.schema-version=\"1.0\" \\\n      org.label-schema.docker.cmd=\"docker run ${IMAGE_NAME} pwsh -c '$psversiontable'\" \\\n      org.label-schema.docker.cmd.devel=\"docker run ${IMAGE_NAME}\" \\\n      org.label-schema.docker.cmd.test=\"docker run ${IMAGE_NAME} pwsh -c Invoke-Pester\" \\\n      org.label-schema.docker.cmd.help=\"docker run ${IMAGE_NAME} pwsh -c Get-Help\"\nCMD [\"pwsh\"]\n","injectedSmells":[],"originalDockerfileHash":"03a67b1c423b4c0393f39b622cc47f8a","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Docker image file that describes an OpenSuse 42.3 image with PowerShell installed from tar.gz\n#   Implemented in two stages, one that downloads and uncompresses the tar.gz\n#   The next stage simply copies the files from the first stage,\n#   effectively removing the tar.gz and packages that are not needed from the final image.\n#   Define arg(s) needed for the From statement\nARG fromTag=42.3\nARG imageRepo=opensuse/leap\nFROM ${imageRepo}:${fromTag} AS installer-env\n#   Define Args for the needed to add the package\nARG PS_VERSION=6.2.0\nARG PS_PACKAGE=powershell-${PS_VERSION}-linux-x64.tar.gz\nARG PS_PACKAGE_URL=https://github.com/PowerShell/PowerShell/releases/download/v${PS_VERSION}/${PS_PACKAGE}\nARG PS_INSTALL_VERSION=6\n#   define the folder we will be installing PowerShell to\nENV PS_INSTALL_FOLDER=\"/opt/microsoft/powershell/$PS_INSTALL_VERSION\"\n#   Create the install folder\nRUN mkdir -p ${PS_INSTALL_FOLDER}\n#   Install dependencies\nRUN zypper --non-interactive update --skip-interactive\nRUN zypper --non-interactive install tar\n#   Download the Linux tar.gz and save it\nADD ${PS_PACKAGE_URL} /tmp/linux.tar.gz\n#   Unzip the Linux tar.gz\nRUN tar zxf /tmp/linux.tar.gz -C ${PS_INSTALL_FOLDER}\n#   ------ Second stage ------\n#   Start a new stage so we lose all the tar.gz layers from the final image\nFROM ${imageRepo}:${fromTag}\n#   Copy only the files we need from the previous stage\nCOPY --from=installer-env /opt/microsoft/powershell /opt/microsoft/powershell\n#   Define Args and Env needed to create links\nARG PS_INSTALL_VERSION=6\nENV PS_INSTALL_FOLDER=\"/opt/microsoft/powershell/$PS_INSTALL_VERSION\" \\\n    DOTNET_SYSTEM_GLOBALIZATION_INVARIANT=\"false\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    LANG=\"en_US.UTF-8\" \\\n    PSModuleAnalysisCachePath=\"/var/cache/microsoft/powershell/PSModuleAnalysisCache/ModuleAnalysisCache\"\n#   Install dependencies\nRUN zypper --non-interactive update --skip-interactive \\\n && zypper --non-interactive install glibc-locale glibc-i18ndata libicu openssl less \\\n && localedef --charmap=UTF-8 --inputfile=en_US $LANG \\\n && ln -s ${PS_INSTALL_FOLDER}/pwsh /usr/bin/pwsh \\\n && chmod a+x,o-w ${PS_INSTALL_FOLDER}/pwsh \\\n && zypper clean -a \\\n && rm -f /var/log/zypp/history /var/log/zypper.log \\\n && pwsh -NoLogo -NoProfile -Command \" $ErrorActionPreference = 'Stop' ; $ProgressPreference = 'SilentlyContinue' ; while(!(Test-Path -Path $env:PSModuleAnalysisCachePath)) { Write-Host \"'Waiting for $env:PSModuleAnalysisCachePath'\" ; Start-Sleep -Seconds 6 ; }\"\n#   Define args needed only for the labels\nARG PS_VERSION=6.2.0\nARG IMAGE_NAME=mcr.microsoft.com/powershell:opensuse-42.3\nARG VCS_REF=\"none\"\n#   Add label last as it's just metadata and uses a lot of parameters\nLABEL maintainer=\"PowerShell Team <powershellteam@hotmail.com>\" \\\n      readme.md=\"https://github.com/PowerShell/PowerShell/blob/master/docker/README.md\" \\\n      description=\"This Dockerfile will install the latest release of PowerShell.\" \\\n      org.label-schema.usage=\"https://github.com/PowerShell/PowerShell/tree/master/docker#run-the-docker-image-you-built\" \\\n      org.label-schema.url=\"https://github.com/PowerShell/PowerShell/blob/master/docker/README.md\" \\\n      org.label-schema.vcs-url=\"https://github.com/PowerShell/PowerShell-Docker\" \\\n      org.label-schema.name=\"powershell\" \\\n      org.label-schema.vendor=\"PowerShell\" \\\n      org.label-schema.vcs-ref=\"${VCS_REF}\" \\\n      org.label-schema.version=\"${PS_VERSION}\" \\\n      org.label-schema.schema-version=\"1.0\" \\\n      org.label-schema.docker.cmd=\"docker run ${IMAGE_NAME} pwsh -c '$psversiontable'\" \\\n      org.label-schema.docker.cmd.devel=\"docker run ${IMAGE_NAME}\" \\\n      org.label-schema.docker.cmd.test=\"docker run ${IMAGE_NAME} pwsh -c Invoke-Pester\" \\\n      org.label-schema.docker.cmd.help=\"docker run ${IMAGE_NAME} pwsh -c Get-Help\"\nCMD [\"pwsh\"]\n","originalDockerfileUglifiedHash":"f7bb2363729999c5e14e2f62197eb68a","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/9a7f0e76792127cf7f95c64188efcb9c712f28e0.dockerfile"}