{"seed":334582929,"processedDockerfileHash":"b66457945315e906f6172716be2d48c5","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM openjdk:8u141\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#   https://github.com/yarnpkg/yarn/issues/2821\nRUN apt-get update \\\n && apt-get install --no-install-recommends apt-transport-https\nRUN curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -\nRUN echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list\n#   Install dependencies\nRUN dpkg --add-architecture i386 \\\n && apt-get update \\\n && apt-get install --no-install-recommends ant build-essential bzip2:i386 file lib32ncurses5 lib32z1 libc6:i386 libncurses5:i386 libstdc++6:i386 rsync unzip yarn zlib1g:i386 supervisor -yq \\\n && apt-get clean\nENV NPM_CONFIG_LOGLEVEL=\"warn\"\nENV NODE_VERSION=\"8.12.0\"\nRUN curl -SLO \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.xz\" \\\n && tar -xJf \"node-v$NODE_VERSION-linux-x64.tar.xz\" -C /usr/local --strip-components=1 \\\n && ln -s /usr/local/bin/node /usr/local/bin/nodejs\n#   Download and untar SDK\nENV ANDROID_HOME=\"/usr/local/android-sdk-linux\"\nENV ANDROID_SDK=\"/usr/local/android-sdk-linux\"\nENV ANDROID_SDK_URL=\"https://dl.google.com/android/repository/sdk-tools-linux-4333796.zip\"\nRUN mkdir -p ${ANDROID_HOME} \\\n && curl -L \"${ANDROID_SDK_URL}\" > ${ANDROID_HOME}/sdk.zip \\\n && cd ${ANDROID_HOME} \\\n && unzip -qq sdk.zip \\\n && rm sdk.zip \\\n && mkdir -p ${HOME}/.android \\\n && touch ${HOME}/.android/repositories.cfg\nENV PATH=\"${ANDROID_HOME}/platform-tools:${PATH}\"\nENV PATH=\"${ANDROID_HOME}/tools:${PATH}\"\nENV PATH=\"${ANDROID_HOME}/tools/bin:${PATH}\"\nENV PATH=\"${ANDROID_HOME}/build-tools/28.0.3/:${PATH}\"\nCOPY scripts/android/configureAndroidSdk.sh /tmp/configureAndroidSdk.sh\nRUN /tmp/configureAndroidSdk.sh --install-all-platforms\n#   Install Android NDK\nENV ANDROID_NDK_VERSION=\"android-ndk-r10e\"\nENV ANDROID_NDK_FILE=\"${ANDROID_NDK_VERSION}-linux-x86_64.bin\"\nENV ANDROID_NDK_URL=\"https://dl.google.com/android/ndk/${ANDROID_NDK_FILE}\"\nENV ANDROID_NDK=\"/opt/${ANDROID_NDK_VERSION}\"\nENV PATH=\"$ANDROID_NDK:$PATH\"\n#   i have no clue why some of this is here, but it's working elsewhere\n#   it appears to install the NDK version expo needs, so that's cool\nRUN mkdir /ndk_setup \\\n && cd /ndk_setup \\\n && curl -L ${ANDROID_NDK_URL} > ${ANDROID_NDK_FILE} \\\n && chmod +x ${ANDROID_NDK_FILE} \\\n && sync \\\n && ./${ANDROID_NDK_FILE} \\\n && mv ./${ANDROID_NDK_VERSION} ${ANDROID_NDK} \\\n && cp -R ${ANDROID_NDK}/toolchains/arm-linux-androideabi-4.8/prebuilt/linux-x86_64 ${ANDROID_NDK}/toolchains/arm-linux-androideabi-4.8/prebuilt/linux-x86 \\\n && cp -R ${ANDROID_NDK}/toolchains/x86-4.8/prebuilt/linux-x86_64 ${ANDROID_NDK}/toolchains/x86-4.8/prebuilt/linux-x86 \\\n && cd \\\n && rm -rf /ndk_setup\n#   Support Gradle\nENV TERM=\"dumb\"\n#   Install gradle\nRUN wget https://services.gradle.org/distributions/gradle-4.4-all.zip\nRUN unzip -qq gradle-4.4-all.zip\nRUN mv gradle-4.4 /usr/local\nRUN rm gradle-4.4-all.zip\nENV GRADLE_HOME=\"/usr/local/gradle-4.4\"\nENV PATH=\"${GRADLE_HOME}/bin:$PATH\"\nCOPY . /app/turtle\nRUN mv /app/turtle/workingdir /app \\\n && for SDK_VERSION in `ls /app/workingdir/android/ `; do echo \"preparing $SDK_VERSION shell app\" \\\n && cd /app/workingdir/android/$SDK_VERSION \\\n && if [ -f universe-package.json ] ; then mv package.json exponent-package.json \\\n && mv universe-package.json package.json \\\n && yarn install \\\n && mv package.json universe-package.json \\\n && mv exponent-package.json package.json ; else yarn install ; fi ; done \\\n && mv /app/workingdir /app/turtle\nENV NODE_ENV=\"\\\"production\\\"\"\nENV TURTLE_WORKING_DIR_PATH=\"/app/turtle/workingdir/\"\nWORKDIR /app/turtle\nCOPY supervisord.conf /etc/supervisor/conf.d/supervisord.conf\nCMD [\"/usr/bin/supervisord\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM openjdk:8u141\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#  https://github.com/yarnpkg/yarn/issues/2821\nRUN apt-get update \\\n && apt-get install apt-transport-https\nRUN curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -\nRUN echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list\n#  Install dependencies\nRUN dpkg --add-architecture i386 \\\n && apt-get update \\\n && apt-get install --no-install-recommends ant build-essential bzip2:i386 file lib32ncurses5 lib32z1 libc6:i386 libncurses5:i386 libstdc++6:i386 rsync unzip yarn zlib1g:i386 supervisor -yq \\\n && apt-get clean\nENV NPM_CONFIG_LOGLEVEL=\"warn\"\nENV NODE_VERSION=\"8.12.0\"\nRUN curl -SLO \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.xz\" \\\n && tar -xJf \"node-v$NODE_VERSION-linux-x64.tar.xz\" -C /usr/local --strip-components=1 \\\n && ln -s /usr/local/bin/node /usr/local/bin/nodejs\n#  Download and untar SDK\nENV ANDROID_HOME=\"/usr/local/android-sdk-linux\"\nENV ANDROID_SDK=\"/usr/local/android-sdk-linux\"\nENV ANDROID_SDK_URL=\"https://dl.google.com/android/repository/sdk-tools-linux-4333796.zip\"\nRUN mkdir -p ${ANDROID_HOME} \\\n && curl -L \"${ANDROID_SDK_URL}\" > ${ANDROID_HOME}/sdk.zip \\\n && cd ${ANDROID_HOME} \\\n && unzip -qq sdk.zip \\\n && rm sdk.zip \\\n && mkdir -p ${HOME}/.android \\\n && touch ${HOME}/.android/repositories.cfg\nENV PATH=\"${ANDROID_HOME}/platform-tools:${PATH}\"\nENV PATH=\"${ANDROID_HOME}/tools:${PATH}\"\nENV PATH=\"${ANDROID_HOME}/tools/bin:${PATH}\"\nENV PATH=\"${ANDROID_HOME}/build-tools/28.0.3/:${PATH}\"\nADD scripts/android/configureAndroidSdk.sh /tmp/configureAndroidSdk.sh\nRUN /tmp/configureAndroidSdk.sh --install-all-platforms\n#  Install Android NDK\nENV ANDROID_NDK_VERSION=\"android-ndk-r10e\"\nENV ANDROID_NDK_FILE=\"${ANDROID_NDK_VERSION}-linux-x86_64.bin\"\nENV ANDROID_NDK_URL=\"https://dl.google.com/android/ndk/${ANDROID_NDK_FILE}\"\nENV ANDROID_NDK=\"/opt/${ANDROID_NDK_VERSION}\"\nENV PATH=\"$ANDROID_NDK:$PATH\"\n#  i have no clue why some of this is here, but it's working elsewhere\n#  it appears to install the NDK version expo needs, so that's cool\nRUN mkdir /ndk_setup \\\n && cd /ndk_setup \\\n && curl -L ${ANDROID_NDK_URL} > ${ANDROID_NDK_FILE} \\\n && chmod +x ${ANDROID_NDK_FILE} \\\n && sync \\\n && ./${ANDROID_NDK_FILE} \\\n && mv ./${ANDROID_NDK_VERSION} ${ANDROID_NDK} \\\n && cp -R ${ANDROID_NDK}/toolchains/arm-linux-androideabi-4.8/prebuilt/linux-x86_64 ${ANDROID_NDK}/toolchains/arm-linux-androideabi-4.8/prebuilt/linux-x86 \\\n && cp -R ${ANDROID_NDK}/toolchains/x86-4.8/prebuilt/linux-x86_64 ${ANDROID_NDK}/toolchains/x86-4.8/prebuilt/linux-x86 \\\n && cd \\\n && rm -rf /ndk_setup\n#  Support Gradle\nENV TERM=\"dumb\"\n#  Install gradle\nRUN wget https://services.gradle.org/distributions/gradle-4.4-all.zip\nRUN unzip -qq gradle-4.4-all.zip\nRUN mv gradle-4.4 /usr/local\nRUN rm gradle-4.4-all.zip\nENV GRADLE_HOME=\"/usr/local/gradle-4.4\"\nENV PATH=\"${GRADLE_HOME}/bin:$PATH\"\nADD . /app/turtle\nRUN mv /app/turtle/workingdir /app \\\n && for SDK_VERSION in `ls /app/workingdir/android/ `; do echo \"preparing $SDK_VERSION shell app\" \\\n && cd /app/workingdir/android/$SDK_VERSION \\\n && if [ -f universe-package.json ] ; then mv package.json exponent-package.json \\\n && mv universe-package.json package.json \\\n && yarn install \\\n && mv package.json universe-package.json \\\n && mv exponent-package.json package.json ; else yarn install ; fi ; done \\\n && mv /app/workingdir /app/turtle\nENV NODE_ENV=\"\\\"production\\\"\"\nENV TURTLE_WORKING_DIR_PATH=\"/app/turtle/workingdir/\"\nWORKDIR /app/turtle\nADD supervisord.conf /etc/supervisor/conf.d/supervisord.conf\nCMD [\"/usr/bin/supervisord\"]\n","injectedSmells":[],"originalDockerfileHash":"bdd1dea1a24bccbae1f14ab113f15491","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM openjdk:8u141\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#   https://github.com/yarnpkg/yarn/issues/2821\nRUN apt-get update \\\n && apt-get install apt-transport-https\nRUN curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -\nRUN echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list\n#   Install dependencies\nRUN dpkg --add-architecture i386 \\\n && apt-get update \\\n && apt-get install --no-install-recommends ant build-essential bzip2:i386 file lib32ncurses5 lib32z1 libc6:i386 libncurses5:i386 libstdc++6:i386 rsync unzip yarn zlib1g:i386 supervisor -yq \\\n && apt-get clean\nENV NPM_CONFIG_LOGLEVEL=\"warn\"\nENV NODE_VERSION=\"8.12.0\"\nRUN curl -SLO \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.xz\" \\\n && tar -xJf \"node-v$NODE_VERSION-linux-x64.tar.xz\" -C /usr/local --strip-components=1 \\\n && ln -s /usr/local/bin/node /usr/local/bin/nodejs\n#   Download and untar SDK\nENV ANDROID_HOME=\"/usr/local/android-sdk-linux\"\nENV ANDROID_SDK=\"/usr/local/android-sdk-linux\"\nENV ANDROID_SDK_URL=\"https://dl.google.com/android/repository/sdk-tools-linux-4333796.zip\"\nRUN mkdir -p ${ANDROID_HOME} \\\n && curl -L \"${ANDROID_SDK_URL}\" > ${ANDROID_HOME}/sdk.zip \\\n && cd ${ANDROID_HOME} \\\n && unzip -qq sdk.zip \\\n && rm sdk.zip \\\n && mkdir -p ${HOME}/.android \\\n && touch ${HOME}/.android/repositories.cfg\nENV PATH=\"${ANDROID_HOME}/platform-tools:${PATH}\"\nENV PATH=\"${ANDROID_HOME}/tools:${PATH}\"\nENV PATH=\"${ANDROID_HOME}/tools/bin:${PATH}\"\nENV PATH=\"${ANDROID_HOME}/build-tools/28.0.3/:${PATH}\"\nADD scripts/android/configureAndroidSdk.sh /tmp/configureAndroidSdk.sh\nRUN /tmp/configureAndroidSdk.sh --install-all-platforms\n#   Install Android NDK\nENV ANDROID_NDK_VERSION=\"android-ndk-r10e\"\nENV ANDROID_NDK_FILE=\"${ANDROID_NDK_VERSION}-linux-x86_64.bin\"\nENV ANDROID_NDK_URL=\"https://dl.google.com/android/ndk/${ANDROID_NDK_FILE}\"\nENV ANDROID_NDK=\"/opt/${ANDROID_NDK_VERSION}\"\nENV PATH=\"$ANDROID_NDK:$PATH\"\n#   i have no clue why some of this is here, but it's working elsewhere\n#   it appears to install the NDK version expo needs, so that's cool\nRUN mkdir /ndk_setup \\\n && cd /ndk_setup \\\n && curl -L ${ANDROID_NDK_URL} > ${ANDROID_NDK_FILE} \\\n && chmod +x ${ANDROID_NDK_FILE} \\\n && sync \\\n && ./${ANDROID_NDK_FILE} \\\n && mv ./${ANDROID_NDK_VERSION} ${ANDROID_NDK} \\\n && cp -R ${ANDROID_NDK}/toolchains/arm-linux-androideabi-4.8/prebuilt/linux-x86_64 ${ANDROID_NDK}/toolchains/arm-linux-androideabi-4.8/prebuilt/linux-x86 \\\n && cp -R ${ANDROID_NDK}/toolchains/x86-4.8/prebuilt/linux-x86_64 ${ANDROID_NDK}/toolchains/x86-4.8/prebuilt/linux-x86 \\\n && cd \\\n && rm -rf /ndk_setup\n#   Support Gradle\nENV TERM=\"dumb\"\n#   Install gradle\nRUN wget https://services.gradle.org/distributions/gradle-4.4-all.zip\nRUN unzip -qq gradle-4.4-all.zip\nRUN mv gradle-4.4 /usr/local\nRUN rm gradle-4.4-all.zip\nENV GRADLE_HOME=\"/usr/local/gradle-4.4\"\nENV PATH=\"${GRADLE_HOME}/bin:$PATH\"\nADD . /app/turtle\nRUN mv /app/turtle/workingdir /app \\\n && for SDK_VERSION in `ls /app/workingdir/android/ `; do echo \"preparing $SDK_VERSION shell app\" \\\n && cd /app/workingdir/android/$SDK_VERSION \\\n && if [ -f universe-package.json ] ; then mv package.json exponent-package.json \\\n && mv universe-package.json package.json \\\n && yarn install \\\n && mv package.json universe-package.json \\\n && mv exponent-package.json package.json ; else yarn install ; fi ; done \\\n && mv /app/workingdir /app/turtle\nENV NODE_ENV=\"\\\"production\\\"\"\nENV TURTLE_WORKING_DIR_PATH=\"/app/turtle/workingdir/\"\nWORKDIR /app/turtle\nADD supervisord.conf /etc/supervisor/conf.d/supervisord.conf\nCMD [\"/usr/bin/supervisord\"]\n","originalDockerfileUglifiedHash":"e2819c8b6363d9199904cb05cf15709d","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/657085c9b2c885bbfa3f3eb39c727c1985966d2f.dockerfile"}