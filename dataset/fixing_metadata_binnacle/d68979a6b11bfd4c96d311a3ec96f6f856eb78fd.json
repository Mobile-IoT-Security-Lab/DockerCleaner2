{"seed":503081480,"processedDockerfileHash":"36c37686d78754ed30ede53cf02b5de9","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-pip","pin-package-manager-versions-gem","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Auto-generated via Ansible: edit build/ansible/DOCKERFILES/Dockerfile-work.j2 instead.\nFROM devilbox/php-fpm:7.0-prod\nMAINTAINER \"cytopia\" <cytopia@everythingcli.org>\n#  ##\n#  ## Labels\n#  ##\nLABEL name=\"cytopia's PHP-FPM 7.0 Image\" \\\n      image=\"devilbox/php-fpm\" \\\n      tag=\"7.0-work\" \\\n      vendor=\"devilbox\" \\\n      license=\"MIT\"\n#  ##\n#  ## Envs\n#  ##\nENV BASH_PROFILE=\".bashrc\"\n#  ##\n#  ## Install Tools\n#  ##\nRUN set -x \\\n && DEBIAN_FRONTEND=noninteractive apt-get update -qq \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -qq -y --no-install-recommends --no-install-suggests apt-utils \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -qq -y --no-install-recommends --no-install-suggests curl dirmngr gnupg \\\n && echo \"deb http://ftp.debian.org/debian stretch-backports main\" > /etc/apt/sources.list.d/backports.list \\\n && curl -sS \"https://packages.blackfire.io/gpg.key\" 2> /dev/null | APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=1 apt-key add - \\\n && echo \"deb http://packages.blackfire.io/debian any main\" > /etc/apt/sources.list.d/blackfire.list \\\n && APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=1 apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv A1715D88E1DF1F24 \\\n && echo \"deb http://ppa.launchpad.net/git-core/ppa/ubuntu wily main\" > /etc/apt/sources.list.d/git.list \\\n && APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=1 apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 9DA31620334BD75D9DCB49F368818C72E52529D4 \\\n && echo \"deb http://repo.mongodb.org/apt/debian stretch/mongodb-org/4.0 main\" > /etc/apt/sources.list.d/mongo.list \\\n && curl -sS https://www.postgresql.org/media/keys/ACCC4CF8.asc 2> /dev/null | APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=1 apt-key add - \\\n && echo \"deb http://apt.postgresql.org/pub/repos/apt/ stretch-pgdg main\" > /etc/apt/sources.list.d/pgsql.list \\\n && curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg 2> /dev/null | APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=1 apt-key add - \\\n && echo \"deb http://dl.yarnpkg.com/debian/ stable main\" > /etc/apt/sources.list.d/yarn.list \\\n && DEBIAN_FRONTEND=noninteractive apt-get update -qq \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -qq -y --no-install-recommends --no-install-suggests ack-grep aspell autoconf automake bash-completion binutils blackfire-agent build-essential bzip2 coreutils dnsutils dos2unix file gawk gcc git git-flow git-svn graphviz hostname htop imagemagick iputils-ping jq less libc-dev libffi-dev libssl-dev libyaml-dev make mongodb-org-shell mongodb-org-tools moreutils mysql-client nano net-tools netcat openssh-client patch patchelf postgresql-client redis-tools rsync rubygems ruby-dev shellcheck silversearcher-ag subversion sudo tig tree unzip vim w3m wget whois xz-utils yarn zip zlib1g-dev zsh \\\n && DEBIAN_FRONTEND=noninteractive apt-get purge -qq -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false apt-utils \\\n && rm -rf /var/lib/apt/lists/* \\\n && (find /usr/local/bin -type f -print0 | xargs -n1 -0 strip --strip-all -p 2> /dev/null || true ) \\\n && (find /usr/local/lib -type f -print0 | xargs -n1 -0 strip --strip-all -p 2> /dev/null || true ) \\\n && (find /usr/local/sbin -type f -print0 | xargs -n1 -0 strip --strip-all -p 2> /dev/null || true )\n#  ##\n#  ## Install custom software\n#  ##\nRUN set -x \\\n && curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer \\\n && DEBIAN_FRONTEND=noninteractive apt-get update -qq \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -qq -y --no-install-recommends --no-install-suggests libpython-dev \\\n && DEBIAN_FRONTEND=noninteractive apt-get purge -qq -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false \\\n && rm -rf /var/lib/apt/lists/* \\\n && curl -sS https://bootstrap.pypa.io/get-pip.py | python \\\n && git clone https://github.com/creationix/nvm /opt/nvm \\\n && cd /opt/nvm \\\n && git checkout \"$( git describe --abbrev=0 --tags --match \"v[0-9]*\" $( git rev-list --tags --max-count=1 ;) ;)\" \\\n && { echo 'export NVM_DIR=\"/opt/nvm\"' ;echo '[ -s \"$NVM_DIR/nvm.sh\" ] \\\n && \\. \"$NVM_DIR/nvm.sh\" # This loads nvm' ;echo '[ -s \"$NVM_DIR/bash_completion\" ] \\\n && \\. \"$NVM_DIR/bash_completion\" # This loads nvm bash_completion' ; } >> /home/devilbox/.bashrc \\\n && chown -R devilbox:devilbox /opt/nvm \\\n && su -c '. /opt/nvm/nvm.sh; nvm install node' devilbox \\\n && su -c '. /opt/nvm/nvm.sh; nvm install --lts' devilbox \\\n && su -c '. /opt/nvm/nvm.sh; nvm use node' devilbox \\\n && git clone https://github.com/cytopia/awesome-ci.git /usr/local/src/awesome-ci \\\n && cd /usr/local/src/awesome-ci \\\n && git checkout $( git describe --abbrev=0 --tags ;) \\\n && ./configure --prefix=/usr/local \\\n && make install \\\n && cd / \\\n && rm -rf /usr/local/src/awesome-ci \\\n && curl -sS https://deployer.org/deployer.phar -L -o /usr/local/bin/dep \\\n && chmod +x /usr/local/bin/dep \\\n && git clone https://github.com/drush-ops/drush.git /usr/local/src/drush7 \\\n && cd /usr/local/src/drush7 \\\n && git checkout 7.4.0 \\\n && chown -R ${MY_USER}:${MY_GROUP} /usr/local/src/drush7 \\\n && su - ${MY_USER} -c 'PATH=/usr/local/bin:$PATH; cd /usr/local/src/drush7 \\\n && composer install --no-interaction --no-progress --no-dev' \\\n && ln -s /usr/local/src/drush7/drush /usr/local/bin/drush7 \\\n && rm -rf /usr/local/src/drush7/.git \\\n && rm -rf /usr/local/src/drush7/docs \\\n && rm -rf /usr/local/src/drush7/examples \\\n && rm -rf /usr/local/src/drush7/misc \\\n && git clone https://github.com/drush-ops/drush.git /usr/local/src/drush8 \\\n && cd /usr/local/src/drush8 \\\n && git checkout $( git for-each-ref --format='%(*creatordate:raw)%(creatordate:raw) %(refname)' refs/tags | sort -n | grep -E 'tags/8[.0-9]+$' | tail -1 | sed 's|.*/||g' ;) \\\n && chown -R ${MY_USER}:${MY_GROUP} /usr/local/src/drush8 \\\n && su - ${MY_USER} -c 'PATH=/usr/local/bin:$PATH; cd /usr/local/src/drush8 \\\n && composer install --no-interaction --no-progress --no-dev' \\\n && ln -s /usr/local/src/drush8/drush /usr/local/bin/drush8 \\\n && rm -rf /usr/local/src/drush8/.git \\\n && rm -rf /usr/local/src/drush8/docs \\\n && rm -rf /usr/local/src/drush8/examples \\\n && rm -rf /usr/local/src/drush8/misc \\\n && git clone https://github.com/drush-ops/drush.git /usr/local/src/drush9 \\\n && cd /usr/local/src/drush9 \\\n && git checkout $( git for-each-ref --format='%(*creatordate:raw)%(creatordate:raw) %(refname)' refs/tags | sort -n | grep -E 'tags/9[.0-9]+$' | tail -1 | sed 's|.*/||g' ;) \\\n && chown -R ${MY_USER}:${MY_GROUP} /usr/local/src/drush9 \\\n && su - ${MY_USER} -c 'PATH=/usr/local/bin:$PATH; cd /usr/local/src/drush9 \\\n && php -d memory_limit=-1 `which composer` install --no-interaction --no-progress' \\\n && ln -s /usr/local/src/drush9/drush /usr/local/bin/drush9 \\\n && rm -rf /usr/local/src/drush9/.git \\\n && rm -rf /usr/local/src/drush9/docs \\\n && rm -rf /usr/local/src/drush9/examples \\\n && rm -rf /usr/local/src/drush9/misc \\\n && curl https://drupalconsole.com/installer -L -o /usr/local/bin/drupal \\\n && chmod +x /usr/local/bin/drupal \\\n && git clone git://github.com/petervanderdoes/gitflow.git /tmp/gitflow \\\n && cd /tmp/gitflow \\\n && make install \\\n && cd / \\\n && rm -rf /tmp/gitflow \\\n && git clone https://github.com/laravel/installer /usr/local/src/laravel-installer \\\n && cd /usr/local/src/laravel-installer \\\n && git checkout v2.0.0 \\\n && chown -R ${MY_USER}:${MY_GROUP} /usr/local/src/laravel-installer \\\n && su - ${MY_USER} -c 'PATH=/usr/local/bin:$PATH; cd /usr/local/src/laravel-installer \\\n && composer install --no-interaction --no-progress --no-dev' \\\n && ln -s /usr/local/src/laravel-installer/laravel /usr/local/bin/laravel \\\n && rm -rf /usr/local/src/laravel-installer/laravel/.git \\\n && curl https://raw.githubusercontent.com/cytopia/linkcheck/master/linkcheck > /usr/local/bin/linkcheck \\\n && chmod +x /usr/local/bin/linkcheck \\\n && git clone https://github.com/Linuxbrew/brew.git /usr/local/src/linuxbrew \\\n && chown -R ${MY_USER}:${MY_GROUP} /usr/local/src/linuxbrew \\\n && v=\"${BASH_PROFILE}\" su ${MY_USER} -c -p 'echo \"PATH=/usr/local/src/linuxbrew/bin:/usr/local/src/linuxbrew/sbin:/usr/bin:/usr/sbin:/bin:/sbin\" >> /home/devilbox/${v}' \\\n && v=\"${BASH_PROFILE}\" su ${MY_USER} -c -p 'echo \"export MANPATH=/usr/local/src/linuxbrew/share/man:${MANPATH}\" >> /home/devilbox/${v}' \\\n && v=\"${BASH_PROFILE}\" su ${MY_USER} -c -p 'echo \"export INFOPATH=/usr/local/src/linuxbrew/share/man:${INFOPATH}\" >> /home/devilbox/${v}' \\\n && su - ${MY_USER} -c '/usr/local/src/linuxbrew/bin/brew config' \\\n && wget https://github.com/mailhog/mhsendmail/releases/download/v0.2.0/mhsendmail_linux_amd64 \\\n && chmod +x mhsendmail_linux_amd64 \\\n && mv mhsendmail_linux_amd64 /usr/local/bin/mhsendmail \\\n && git clone https://github.com/cytopia/mysqldump-secure.git /usr/local/src/mysqldump-secure \\\n && cd /usr/local/src/mysqldump-secure \\\n && git checkout $( git describe --abbrev=0 --tags ;) \\\n && cp /usr/local/src/mysqldump-secure/bin/mysqldump-secure /usr/local/bin \\\n && cp /usr/local/src/mysqldump-secure/etc/mysqldump-secure.conf /etc \\\n && cp /usr/local/src/mysqldump-secure/etc/mysqldump-secure.cnf /etc \\\n && touch /var/log/mysqldump-secure.log \\\n && chown ${MY_USER}:${MY_GROUP} /etc/mysqldump-secure.* \\\n && chown ${MY_USER}:${MY_GROUP} /var/log/mysqldump-secure.log \\\n && chmod 0400 /etc/mysqldump-secure.conf \\\n && chmod 0400 /etc/mysqldump-secure.cnf \\\n && chmod 0644 /var/log/mysqldump-secure.log \\\n && sed -i'' 's/^COMPRESS_ARG=.*/COMPRESS_ARG=\"-9 -c\"/g' /etc/mysqldump-secure.conf \\\n && sed -i'' 's/^DUMP_DIR=.*/DUMP_DIR=\"\\/shared\\/backups\\/mysql\"/g' /etc/mysqldump-secure.conf \\\n && sed -i'' 's/^DUMP_DIR_CHMOD=.*/DUMP_DIR_CHMOD=\"0755\"/g' /etc/mysqldump-secure.conf \\\n && sed -i'' 's/^DUMP_FILE_CHMOD=.*/DUMP_FILE_CHMOD=\"0644\"/g' /etc/mysqldump-secure.conf \\\n && sed -i'' 's/^LOG_CHMOD=.*/LOG_CHMOD=\"0644\"/g' /etc/mysqldump-secure.conf \\\n && sed -i'' 's/^NAGIOS_LOG=.*/NAGIOS_LOG=0/g' /etc/mysqldump-secure.conf \\\n && cd / \\\n && rm -rf /usr/local/src/mysqldump-secure \\\n && git clone https://github.com/phalcon/phalcon-devtools /usr/local/src/phalcon-devtools \\\n && cd /usr/local/src/phalcon-devtools \\\n && git checkout $( git describe --abbrev=0 --tags ;) \\\n && chown -R ${MY_USER}:${MY_GROUP} /usr/local/src/phalcon-devtools \\\n && su - ${MY_USER} -c 'cd /usr/local/src/phalcon-devtools \\\n && ./phalcon.sh' \\\n && ln -s /usr/local/src/phalcon-devtools/phalcon.php /usr/local/bin/phalcon \\\n && cd / \\\n && rm -rf /usr/local/src/phalcon-devtools/.git \\\n && curl -sS -L https://squizlabs.github.io/PHP_CodeSniffer/phpcs.phar > /usr/local/bin/phpcs 2> /dev/null \\\n && chmod +x /usr/local/bin/phpcs \\\n && curl -sS -L https://squizlabs.github.io/PHP_CodeSniffer/phpcbf.phar > /usr/local/bin/phpcbf 2> /dev/null \\\n && chmod +x /usr/local/bin/phpcbf \\\n && curl -sS -L https://cs.symfony.com/download/php-cs-fixer-v2.phar > /usr/local/bin/php-cs-fixer 2> /dev/null \\\n && chmod +x /usr/local/bin/php-cs-fixer \\\n && curl -qL https://phar.phpunit.de/phpunit-6.phar > /usr/local/bin/phpunit 2> /dev/null \\\n && chmod +x /usr/local/bin/phpunit \\\n && curl https://symfony.com/installer -L -o /usr/local/bin/symfony \\\n && chmod +x /usr/local/bin/symfony \\\n && VERSION=\"$( curl -sSL https://github.com/wkhtmltopdf/wkhtmltopdf/releases | grep -Eo '/wkhtmltopdf/.+stretch_amd64\\.deb' | head -1 ;)\" \\\n && DEBIAN_FRONTEND=noninteractive apt-get update -qq \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -qq -y --no-install-recommends --no-install-suggests libfontenc1 libxfont1 xfonts-75dpi xfonts-base xfonts-encodings xfonts-utils \\\n && curl -sS -L -o /tmp/wkhtmltopdf.deb https://github.com/${VERSION} \\\n && dpkg -i /tmp/wkhtmltopdf.deb \\\n && rm -f /tmp/wkhtmltopdf.deb \\\n && DEBIAN_FRONTEND=noninteractive apt-get purge -qq -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false apt-utils \\\n && rm -rf /var/lib/apt/lists/* \\\n && curl https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar -L -o /usr/local/bin/wp \\\n && chmod +x /usr/local/bin/wp \\\n && rm -rf /home/${MY_USER}/.*json \\\n && rm -rf /home/${MY_USER}/.cache \\\n && rm -rf /home/${MY_USER}/.composer \\\n && rm -rf /home/${MY_USER}/.config \\\n && rm -rf /home/${MY_USER}/.drush \\\n && rm -rf /home/${MY_USER}/.subversion \\\n && rm -rf /home/${MY_USER}/.v8* \\\n && rm -rf /root/.*json \\\n && rm -rf /root/.cache \\\n && rm -rf /root/.composer \\\n && rm -rf /root/.config \\\n && rm -rf /root/.drush \\\n && rm -rf /root/.subversion \\\n && rm -rf /root/.v8* \\\n && rm -rf /tmp/* \\\n && (rm -rf /tmp/.* || true ) \\\n && (rm -rf /root/.gem || true ) \\\n && (rm -rf /root/.cache || true ) \\\n && (rm -rf /root/.composer || true ) \\\n && (rm -rf /root/.config || true ) \\\n && (rm -rf /root/.npm || true ) \\\n && (rm -rf /home/devilbox/.cache || true ) \\\n && (rm -rf /home/devilbox/.composer || true ) \\\n && (rm -rf /home/devilbox/.config || true ) \\\n && (rm -rf /home/devilbox/.npm || true ) \\\n && (rm -rf /usr/local/src/composer/cache/* || true ) \\\n && rm -rf /tmp/* \\\n && (rm -rf /tmp/.* || true )\n#  ##\n#  ## Install Composer (PHP)\n#  ##\nRUN set -x \\\n && COMPOSER_HOME=\"/usr/local/src/composer\" composer global require asgardcms/asgardcms-installer \\\n && ln -s /usr/local/src/composer/vendor/asgardcms/asgardcms-installer/asgardcms /usr/local/bin/ \\\n && COMPOSER_HOME=\"/usr/local/src/composer\" composer global require codeception/codeception \\\n && ln -s /usr/local/src/composer/vendor/codeception/codeception/codecept /usr/local/bin/ \\\n && COMPOSER_HOME=\"/usr/local/src/composer\" composer global require laravel/lumen-installer \\\n && ln -s /usr/local/src/composer/vendor/laravel/lumen-installer/lumen /usr/local/bin/ \\\n && COMPOSER_HOME=\"/usr/local/src/composer\" composer global require photoncms/installer \\\n && ln -s /usr/local/src/composer/vendor/photoncms/installer/photon /usr/local/bin/ \\\n && COMPOSER_HOME=\"/usr/local/src/composer\" composer global require hirak/prestissimo \\\n && rm -rf /tmp/* \\\n && (rm -rf /tmp/.* || true ) \\\n && (find /usr/local/bin -type f -print0 | xargs -n1 -0 strip --strip-all -p 2> /dev/null || true ) \\\n && (find /usr/local/lib -type f -print0 | xargs -n1 -0 strip --strip-all -p 2> /dev/null || true ) \\\n && (find /usr/local/sbin -type f -print0 | xargs -n1 -0 strip --strip-all -p 2> /dev/null || true )\n#  ##\n#  ## Install npm (Node)\n#  ##\nRUN set -x \\\n && su -c '. /opt/nvm/nvm.sh; npm install -g @angular/cli' devilbox \\\n && su -c '. /opt/nvm/nvm.sh; npm install -g eslint' devilbox \\\n && su -c '. /opt/nvm/nvm.sh; npm install -g grunt' devilbox \\\n && su -c '. /opt/nvm/nvm.sh; npm install -g grunt-cli' devilbox \\\n && su -c '. /opt/nvm/nvm.sh; npm install -g gulp' devilbox \\\n && su -c '. /opt/nvm/nvm.sh; npm install -g jsonlint' devilbox \\\n && su -c '. /opt/nvm/nvm.sh; npm install -g pm2' devilbox \\\n && su -c '. /opt/nvm/nvm.sh; npm install -g mdlint' devilbox \\\n && su -c '. /opt/nvm/nvm.sh; npm install -g @vue/cli' devilbox \\\n && su -c '. /opt/nvm/nvm.sh; npm install -g @vue/cli-service-global' devilbox \\\n && su -c '. /opt/nvm/nvm.sh; npm install -g webpack' devilbox \\\n && su -c '. /opt/nvm/nvm.sh; npm install -g webpack-cli' devilbox \\\n && ln -sf $( dirname $( su -c '. /opt/nvm/nvm.sh; nvm which current' devilbox ;) ;)/* /usr/local/bin/ \\\n && su -c '. /opt/nvm/nvm.sh; npm cache clear --force' devilbox \\\n && su -c '. /opt/nvm/nvm.sh; nvm cache clear --force' devilbox \\\n && rm -rf /home/devilbox/.npm \\\n && rm -rf /home/devilbox/.config \\\n && rm -rf /tmp/* \\\n && (rm -rf /tmp/.* || true ) \\\n && (find /opt/nvm -type f -print0 | xargs -n1 -0 strip --strip-all -p 2> /dev/null || true )\n#  ##\n#  ## Install gem (Ruby)\n#  ##\nRUN set -x \\\n && gem install mixlib-config --version 2.2.4 \\\n && gem install rb-inotify --version 0.9.10 \\\n && gem install mdl --version 0.12.0 \\\n && gem install scss_lint --version 0.57.1 \\\n && gem install sass --version 3.7.4 \\\n && rm -rf /root/.gem \\\n && rm -rf /tmp/* \\\n && (rm -rf /tmp/.* || true ) \\\n && (find /usr/local/bin -type f -print0 | xargs -n1 -0 strip --strip-all -p 2> /dev/null || true ) \\\n && (find /usr/local/lib -type f -print0 | xargs -n1 -0 strip --strip-all -p 2> /dev/null || true ) \\\n && (find /usr/local/sbin -type f -print0 | xargs -n1 -0 strip --strip-all -p 2> /dev/null || true )\n#  ##\n#  ## Install pip (Python) packages\n#  ##\nRUN set -x \\\n && pip install ansible==7.4.0 --no-cache-dir --force-reinstall \\\n && pip install yamllint==1.30.0 --no-cache-dir --force-reinstall \\\n && pip install yq==3.2.1 --no-cache-dir --force-reinstall \\\n && rm -rf /root/.cache/pip \\\n && rm -rf /tmp/* \\\n && (rm -rf /tmp/.* || true ) \\\n && (find /usr/local/bin -type f -print0 | xargs -n1 -0 strip --strip-all -p 2> /dev/null || true ) \\\n && (find /usr/local/lib -type f -print0 | xargs -n1 -0 strip --strip-all -p 2> /dev/null || true ) \\\n && (find /usr/local/sbin -type f -print0 | xargs -n1 -0 strip --strip-all -p 2> /dev/null || true )\n#  ##\n#  ## Configure Bash\n#  ##\nRUN { echo \"PATH=${PATH}:/usr/local/bin:/usr/local/sbin:${HOME}/.yarn/bin:/opt/nvm/versions/node/$( nvm version default ;)/bin\" ;echo \"export PATH\" ;echo \". /etc/bash-devilbox\" ;echo \"if [ -d /etc/bashrc-devilbox.d/ ]; then\" ;echo \" for f in /etc/bashrc-devilbox.d/*.sh ; do\" ;echo \" if [ -r \\\"${f}\\\" ]; then\" ;echo \" . \\\"${f}\\\"\" ;echo \" fi\" ;echo \" done\" ;echo \" unset f\" ;echo \"fi\" ; } | tee -a /home/${MY_USER}/${BASH_PROFILE} /root/${BASH_PROFILE} \\\n && chown ${MY_USER}:${MY_GROUP} /home/${MY_USER}/${BASH_PROFILE}\n#  ##\n#  ## Verify\n#  ##\nRUN set -x \\\n && echo \"date.timezone=UTC\" > /usr/local/etc/php/php.ini \\\n && php -v | grep -oE 'PHP\\s[.0-9]+' | grep -oE '[.0-9]+' | grep '^7.0' \\\n && /usr/local/sbin/php-fpm --test \\\n && PHP_ERROR=\"$( php -v 2>&1 1> /dev/null;)\" \\\n && if [ -n \"${PHP_ERROR}\" ] ; then echo \"${PHP_ERROR}\" ;false ; fi \\\n && PHP_ERROR=\"$( php -i 2>&1 1> /dev/null;)\" \\\n && if [ -n \"${PHP_ERROR}\" ] ; then echo \"${PHP_ERROR}\" ;false ; fi \\\n && PHP_FPM_ERROR=\"$( php-fpm -v 2>&1 1> /dev/null;)\" \\\n && if [ -n \"${PHP_FPM_ERROR}\" ] ; then echo \"${PHP_FPM_ERROR}\" ;false ; fi \\\n && PHP_FPM_ERROR=\"$( php-fpm -i 2>&1 1> /dev/null;)\" \\\n && if [ -n \"${PHP_FPM_ERROR}\" ] ; then echo \"${PHP_FPM_ERROR}\" ;false ; fi \\\n && rm -f /usr/local/etc/php/php.ini\nRUN set -x \\\n && composer --version 2> /dev/null | grep -E 'version\\s*[.0-9]+' \\\n && su -c '. /opt/nvm/nvm.sh; nvm --version' devilbox | grep -E '^[.0-9]+' \\\n && mdl --version | grep -E '[.0-9]+' \\\n && scss-lint --version | grep -E '[.0-9]+' \\\n && eslint -v | grep -E '[.0-9]+' \\\n && jsonlint --version | grep -E '[.0-9]+' \\\n && mdlint --version | grep -E '[.0-9]+' \\\n && gulp --version | grep -E '[.0-9]+' \\\n && dep --version 2> /dev/null | grep -Ei 'deployer\\s*(version\\s*)?[.0-9]+' \\\n && drush7 --version | grep -E '7[.0-9]+\\s*$' \\\n && drush8 --version | grep -E '8[.0-9]+\\s*$' \\\n && drush9 --version | grep -E '9[.0-9]+\\s*$' \\\n && drupal --version | grep -E 'Drupal Console Launcher\\s*[.0-9]' \\\n && git-flow version | grep -E '[.0-9]+' \\\n && laravel --version | grep -E '(Installer|version)\\s*[.0-9]+' \\\n && linkcheck --version | grep -E '^linkcheck\\sv[.0-9]+' \\\n && su - ${MY_USER} -c '/usr/local/src/linuxbrew/bin/brew --version' | grep -E 'Homebrew\\s*[.0-9]+' \\\n && mysqldump-secure --version | grep -E 'Version:\\s*[.0-9]+' \\\n && phalcon commands | grep -E '[.0-9]+' \\\n && phpcs --version | grep -E 'version [.0-9]+' \\\n && phpcbf --version | grep -E 'version [.0-9]+' \\\n && php-cs-fixer --version 2>&1 | grep -E 'Fixer\\s+(version\\s*)?[-_.0-9]+\\s+' \\\n && phpunit --version | grep -iE '^PHPUnit\\s[.0-9]+' \\\n && symfony --version | grep -E 'version\\s*[.0-9]+' \\\n && wkhtmltopdf --version | grep -E \"^wkhtmltopdf [.0-9]+\\s+\\(.+patched.+\\)\" \\\n && wp --allow-root --version | grep -E '[.0-9]+' \\\n && asgardcms --version 2> /dev/null | grep -Ei 'AsgardCMS\\sInstaller\\s[.0-9]+' \\\n && codecept --version 2> /dev/null | grep -E '^Codeception(\\sversion)?\\s[.0-9]+$' \\\n && lumen --version 2> /dev/null | grep -E '^Lumen Installer\\s[.0-9]+$' \\\n && photon --version | grep -E 'Installer [.0-9]+' \\\n && ansible --version | grep -E '^ansible [.0-9]+$' \\\n && yamllint --version 2>&1 | grep -E '[.0-9]+' \\\n && yq --version 2>&1 | grep -E '^yq\\s+[.0-9]+$' \\\n && ng version 2>&1 | grep -iE 'Angular CLI:\\s*[.0-9]+' \\\n && eslint -v | grep -E '[.0-9]+' \\\n && grunt --version | grep -E '[.0-9]+' \\\n && gulp --version | grep -E '[.0-9]+' \\\n && jsonlint --version | grep -E '[.0-9]+' \\\n && pm2 --no-daemon --version | grep -E '[.0-9]+' \\\n && mdlint --version | grep -E '[.0-9]+' \\\n && vue --version | grep -E '[.0-9]+' \\\n && webpack --version | grep -E '[.0-9]+' \\\n && mdl --version | grep -E '[.0-9]+' \\\n && sass --version | grep -E '[.0-9]+' \\\n && rm -rf /home/devilbox/.config/ \\\n && rm -rf /root/.ansible \\\n && rm -rf /root/.console \\\n && rm -rf /root/.composer \\\n && rm -rf /root/.drush \\\n && rm -rf /root/.pm2 \\\n && rm -rf /tmp/* \\\n && (rm -rf /tmp/.* || true )\n#  ##\n#  ## Copy files\n#  ##\nCOPY ./data/php-ini.d/php-7.0.ini /usr/local/etc/php/conf.d/xxx-devilbox-default-php.ini\nCOPY ./data/php-fpm.conf/php-fpm-7.0.conf /usr/local/etc/php-fpm.conf\nCOPY ./data/docker-entrypoint.sh /docker-entrypoint.sh\nCOPY ./data/docker-entrypoint.d/*.sh /docker-entrypoint.d/\nCOPY ./data/bash-devilbox /etc/bash-devilbox\nCOPY ./data/sudo-devilbox /etc/sudoers.d/devilbox\n#  ##\n#  ## Volumes\n#  ##\nVOLUME /shared/backups\nVOLUME /var/log/php\nVOLUME /var/mail\n#  ##\n#  ## Ports\n#  ##\nEXPOSE 9000/tcp\n#  ##\n#  ## Where to start inside the container\n#  ##\nWORKDIR /shared/httpd\n#  ##\n#  ## Entrypoint\n#  ##\nENTRYPOINT [\"/docker-entrypoint.sh\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Auto-generated via Ansible: edit build/ansible/DOCKERFILES/Dockerfile-work.j2 instead.\nFROM devilbox/php-fpm:7.0-prod\nMAINTAINER \"cytopia\" <cytopia@everythingcli.org>\n# ##\n# ## Labels\n# ##\nLABEL name=\"cytopia's PHP-FPM 7.0 Image\" \\\n      image=\"devilbox/php-fpm\" \\\n      tag=\"7.0-work\" \\\n      vendor=\"devilbox\" \\\n      license=\"MIT\"\n# ##\n# ## Envs\n# ##\nENV BASH_PROFILE=\".bashrc\"\n# ##\n# ## Install Tools\n# ##\nRUN set -x \\\n && DEBIAN_FRONTEND=noninteractive apt-get update -qq \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -qq -y --no-install-recommends --no-install-suggests apt-utils \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -qq -y --no-install-recommends --no-install-suggests curl dirmngr gnupg \\\n && echo \"deb http://ftp.debian.org/debian stretch-backports main\" > /etc/apt/sources.list.d/backports.list \\\n && curl -sS \"https://packages.blackfire.io/gpg.key\" 2> /dev/null | APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=1 apt-key add - \\\n && echo \"deb http://packages.blackfire.io/debian any main\" > /etc/apt/sources.list.d/blackfire.list \\\n && APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=1 apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv A1715D88E1DF1F24 \\\n && echo \"deb http://ppa.launchpad.net/git-core/ppa/ubuntu wily main\" > /etc/apt/sources.list.d/git.list \\\n && APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=1 apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 9DA31620334BD75D9DCB49F368818C72E52529D4 \\\n && echo \"deb http://repo.mongodb.org/apt/debian stretch/mongodb-org/4.0 main\" > /etc/apt/sources.list.d/mongo.list \\\n && curl -sS https://www.postgresql.org/media/keys/ACCC4CF8.asc 2> /dev/null | APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=1 apt-key add - \\\n && echo \"deb http://apt.postgresql.org/pub/repos/apt/ stretch-pgdg main\" > /etc/apt/sources.list.d/pgsql.list \\\n && curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg 2> /dev/null | APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=1 apt-key add - \\\n && echo \"deb http://dl.yarnpkg.com/debian/ stable main\" > /etc/apt/sources.list.d/yarn.list \\\n && DEBIAN_FRONTEND=noninteractive apt-get update -qq \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -qq -y --no-install-recommends --no-install-suggests ack-grep aspell autoconf automake bash-completion binutils blackfire-agent build-essential bzip2 coreutils dnsutils dos2unix file gawk gcc git git-flow git-svn graphviz hostname htop imagemagick iputils-ping jq less libc-dev libffi-dev libssl-dev libyaml-dev make mongodb-org-shell mongodb-org-tools moreutils mysql-client nano net-tools netcat openssh-client patch patchelf postgresql-client redis-tools rsync rubygems ruby-dev shellcheck silversearcher-ag subversion sudo tig tree unzip vim w3m wget whois xz-utils yarn zip zlib1g-dev zsh \\\n && DEBIAN_FRONTEND=noninteractive apt-get purge -qq -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false apt-utils \\\n && rm -rf /var/lib/apt/lists/* \\\n && (find /usr/local/bin -type f -print0 | xargs -n1 -0 strip --strip-all -p 2> /dev/null || true ) \\\n && (find /usr/local/lib -type f -print0 | xargs -n1 -0 strip --strip-all -p 2> /dev/null || true ) \\\n && (find /usr/local/sbin -type f -print0 | xargs -n1 -0 strip --strip-all -p 2> /dev/null || true )\n# ##\n# ## Install custom software\n# ##\nRUN set -x \\\n && curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer \\\n && DEBIAN_FRONTEND=noninteractive apt-get update -qq \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -qq -y --no-install-recommends --no-install-suggests libpython-dev \\\n && DEBIAN_FRONTEND=noninteractive apt-get purge -qq -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false \\\n && rm -rf /var/lib/apt/lists/* \\\n && curl -sS https://bootstrap.pypa.io/get-pip.py | python \\\n && git clone https://github.com/creationix/nvm /opt/nvm \\\n && cd /opt/nvm \\\n && git checkout \"$( git describe --abbrev=0 --tags --match \"v[0-9]*\" $( git rev-list --tags --max-count=1 ;) ;)\" \\\n && { echo 'export NVM_DIR=\"/opt/nvm\"' ;echo '[ -s \"$NVM_DIR/nvm.sh\" ] \\\n && \\. \"$NVM_DIR/nvm.sh\" # This loads nvm' ;echo '[ -s \"$NVM_DIR/bash_completion\" ] \\\n && \\. \"$NVM_DIR/bash_completion\" # This loads nvm bash_completion' ; } >> /home/devilbox/.bashrc \\\n && chown -R devilbox:devilbox /opt/nvm \\\n && su -c '. /opt/nvm/nvm.sh; nvm install node' devilbox \\\n && su -c '. /opt/nvm/nvm.sh; nvm install --lts' devilbox \\\n && su -c '. /opt/nvm/nvm.sh; nvm use node' devilbox \\\n && git clone https://github.com/cytopia/awesome-ci.git /usr/local/src/awesome-ci \\\n && cd /usr/local/src/awesome-ci \\\n && git checkout $( git describe --abbrev=0 --tags ;) \\\n && ./configure --prefix=/usr/local \\\n && make install \\\n && cd / \\\n && rm -rf /usr/local/src/awesome-ci \\\n && curl -sS https://deployer.org/deployer.phar -L -o /usr/local/bin/dep \\\n && chmod +x /usr/local/bin/dep \\\n && git clone https://github.com/drush-ops/drush.git /usr/local/src/drush7 \\\n && cd /usr/local/src/drush7 \\\n && git checkout 7.4.0 \\\n && chown -R ${MY_USER}:${MY_GROUP} /usr/local/src/drush7 \\\n && su - ${MY_USER} -c 'PATH=/usr/local/bin:$PATH; cd /usr/local/src/drush7 \\\n && composer install --no-interaction --no-progress --no-dev' \\\n && ln -s /usr/local/src/drush7/drush /usr/local/bin/drush7 \\\n && rm -rf /usr/local/src/drush7/.git \\\n && rm -rf /usr/local/src/drush7/docs \\\n && rm -rf /usr/local/src/drush7/examples \\\n && rm -rf /usr/local/src/drush7/misc \\\n && git clone https://github.com/drush-ops/drush.git /usr/local/src/drush8 \\\n && cd /usr/local/src/drush8 \\\n && git checkout $( git for-each-ref --format='%(*creatordate:raw)%(creatordate:raw) %(refname)' refs/tags | sort -n | grep -E 'tags/8[.0-9]+$' | tail -1 | sed 's|.*/||g' ;) \\\n && chown -R ${MY_USER}:${MY_GROUP} /usr/local/src/drush8 \\\n && su - ${MY_USER} -c 'PATH=/usr/local/bin:$PATH; cd /usr/local/src/drush8 \\\n && composer install --no-interaction --no-progress --no-dev' \\\n && ln -s /usr/local/src/drush8/drush /usr/local/bin/drush8 \\\n && rm -rf /usr/local/src/drush8/.git \\\n && rm -rf /usr/local/src/drush8/docs \\\n && rm -rf /usr/local/src/drush8/examples \\\n && rm -rf /usr/local/src/drush8/misc \\\n && git clone https://github.com/drush-ops/drush.git /usr/local/src/drush9 \\\n && cd /usr/local/src/drush9 \\\n && git checkout $( git for-each-ref --format='%(*creatordate:raw)%(creatordate:raw) %(refname)' refs/tags | sort -n | grep -E 'tags/9[.0-9]+$' | tail -1 | sed 's|.*/||g' ;) \\\n && chown -R ${MY_USER}:${MY_GROUP} /usr/local/src/drush9 \\\n && su - ${MY_USER} -c 'PATH=/usr/local/bin:$PATH; cd /usr/local/src/drush9 \\\n && php -d memory_limit=-1 `which composer` install --no-interaction --no-progress' \\\n && ln -s /usr/local/src/drush9/drush /usr/local/bin/drush9 \\\n && rm -rf /usr/local/src/drush9/.git \\\n && rm -rf /usr/local/src/drush9/docs \\\n && rm -rf /usr/local/src/drush9/examples \\\n && rm -rf /usr/local/src/drush9/misc \\\n && curl https://drupalconsole.com/installer -L -o /usr/local/bin/drupal \\\n && chmod +x /usr/local/bin/drupal \\\n && git clone git://github.com/petervanderdoes/gitflow.git /tmp/gitflow \\\n && cd /tmp/gitflow \\\n && make install \\\n && cd / \\\n && rm -rf /tmp/gitflow \\\n && git clone https://github.com/laravel/installer /usr/local/src/laravel-installer \\\n && cd /usr/local/src/laravel-installer \\\n && git checkout v2.0.0 \\\n && chown -R ${MY_USER}:${MY_GROUP} /usr/local/src/laravel-installer \\\n && su - ${MY_USER} -c 'PATH=/usr/local/bin:$PATH; cd /usr/local/src/laravel-installer \\\n && composer install --no-interaction --no-progress --no-dev' \\\n && ln -s /usr/local/src/laravel-installer/laravel /usr/local/bin/laravel \\\n && rm -rf /usr/local/src/laravel-installer/laravel/.git \\\n && curl https://raw.githubusercontent.com/cytopia/linkcheck/master/linkcheck > /usr/local/bin/linkcheck \\\n && chmod +x /usr/local/bin/linkcheck \\\n && git clone https://github.com/Linuxbrew/brew.git /usr/local/src/linuxbrew \\\n && chown -R ${MY_USER}:${MY_GROUP} /usr/local/src/linuxbrew \\\n && v=\"${BASH_PROFILE}\" su ${MY_USER} -c -p 'echo \"PATH=/usr/local/src/linuxbrew/bin:/usr/local/src/linuxbrew/sbin:/usr/bin:/usr/sbin:/bin:/sbin\" >> /home/devilbox/${v}' \\\n && v=\"${BASH_PROFILE}\" su ${MY_USER} -c -p 'echo \"export MANPATH=/usr/local/src/linuxbrew/share/man:${MANPATH}\" >> /home/devilbox/${v}' \\\n && v=\"${BASH_PROFILE}\" su ${MY_USER} -c -p 'echo \"export INFOPATH=/usr/local/src/linuxbrew/share/man:${INFOPATH}\" >> /home/devilbox/${v}' \\\n && su - ${MY_USER} -c '/usr/local/src/linuxbrew/bin/brew config' \\\n && wget https://github.com/mailhog/mhsendmail/releases/download/v0.2.0/mhsendmail_linux_amd64 \\\n && chmod +x mhsendmail_linux_amd64 \\\n && mv mhsendmail_linux_amd64 /usr/local/bin/mhsendmail \\\n && git clone https://github.com/cytopia/mysqldump-secure.git /usr/local/src/mysqldump-secure \\\n && cd /usr/local/src/mysqldump-secure \\\n && git checkout $( git describe --abbrev=0 --tags ;) \\\n && cp /usr/local/src/mysqldump-secure/bin/mysqldump-secure /usr/local/bin \\\n && cp /usr/local/src/mysqldump-secure/etc/mysqldump-secure.conf /etc \\\n && cp /usr/local/src/mysqldump-secure/etc/mysqldump-secure.cnf /etc \\\n && touch /var/log/mysqldump-secure.log \\\n && chown ${MY_USER}:${MY_GROUP} /etc/mysqldump-secure.* \\\n && chown ${MY_USER}:${MY_GROUP} /var/log/mysqldump-secure.log \\\n && chmod 0400 /etc/mysqldump-secure.conf \\\n && chmod 0400 /etc/mysqldump-secure.cnf \\\n && chmod 0644 /var/log/mysqldump-secure.log \\\n && sed -i'' 's/^COMPRESS_ARG=.*/COMPRESS_ARG=\"-9 -c\"/g' /etc/mysqldump-secure.conf \\\n && sed -i'' 's/^DUMP_DIR=.*/DUMP_DIR=\"\\/shared\\/backups\\/mysql\"/g' /etc/mysqldump-secure.conf \\\n && sed -i'' 's/^DUMP_DIR_CHMOD=.*/DUMP_DIR_CHMOD=\"0755\"/g' /etc/mysqldump-secure.conf \\\n && sed -i'' 's/^DUMP_FILE_CHMOD=.*/DUMP_FILE_CHMOD=\"0644\"/g' /etc/mysqldump-secure.conf \\\n && sed -i'' 's/^LOG_CHMOD=.*/LOG_CHMOD=\"0644\"/g' /etc/mysqldump-secure.conf \\\n && sed -i'' 's/^NAGIOS_LOG=.*/NAGIOS_LOG=0/g' /etc/mysqldump-secure.conf \\\n && cd / \\\n && rm -rf /usr/local/src/mysqldump-secure \\\n && git clone https://github.com/phalcon/phalcon-devtools /usr/local/src/phalcon-devtools \\\n && cd /usr/local/src/phalcon-devtools \\\n && git checkout $( git describe --abbrev=0 --tags ;) \\\n && chown -R ${MY_USER}:${MY_GROUP} /usr/local/src/phalcon-devtools \\\n && su - ${MY_USER} -c 'cd /usr/local/src/phalcon-devtools \\\n && ./phalcon.sh' \\\n && ln -s /usr/local/src/phalcon-devtools/phalcon.php /usr/local/bin/phalcon \\\n && cd / \\\n && rm -rf /usr/local/src/phalcon-devtools/.git \\\n && curl -sS -L https://squizlabs.github.io/PHP_CodeSniffer/phpcs.phar > /usr/local/bin/phpcs 2> /dev/null \\\n && chmod +x /usr/local/bin/phpcs \\\n && curl -sS -L https://squizlabs.github.io/PHP_CodeSniffer/phpcbf.phar > /usr/local/bin/phpcbf 2> /dev/null \\\n && chmod +x /usr/local/bin/phpcbf \\\n && curl -sS -L https://cs.symfony.com/download/php-cs-fixer-v2.phar > /usr/local/bin/php-cs-fixer 2> /dev/null \\\n && chmod +x /usr/local/bin/php-cs-fixer \\\n && curl -qL https://phar.phpunit.de/phpunit-6.phar > /usr/local/bin/phpunit 2> /dev/null \\\n && chmod +x /usr/local/bin/phpunit \\\n && curl https://symfony.com/installer -L -o /usr/local/bin/symfony \\\n && chmod +x /usr/local/bin/symfony \\\n && VERSION=\"$( curl -sSL https://github.com/wkhtmltopdf/wkhtmltopdf/releases | grep -Eo '/wkhtmltopdf/.+stretch_amd64\\.deb' | head -1 ;)\" \\\n && DEBIAN_FRONTEND=noninteractive apt-get update -qq \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -qq -y --no-install-recommends --no-install-suggests libfontenc1 libxfont1 xfonts-75dpi xfonts-base xfonts-encodings xfonts-utils \\\n && curl -sS -L -o /tmp/wkhtmltopdf.deb https://github.com/${VERSION} \\\n && dpkg -i /tmp/wkhtmltopdf.deb \\\n && rm -f /tmp/wkhtmltopdf.deb \\\n && DEBIAN_FRONTEND=noninteractive apt-get purge -qq -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false apt-utils \\\n && rm -rf /var/lib/apt/lists/* \\\n && curl https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar -L -o /usr/local/bin/wp \\\n && chmod +x /usr/local/bin/wp \\\n && rm -rf /home/${MY_USER}/.*json \\\n && rm -rf /home/${MY_USER}/.cache \\\n && rm -rf /home/${MY_USER}/.composer \\\n && rm -rf /home/${MY_USER}/.config \\\n && rm -rf /home/${MY_USER}/.drush \\\n && rm -rf /home/${MY_USER}/.subversion \\\n && rm -rf /home/${MY_USER}/.v8* \\\n && rm -rf /root/.*json \\\n && rm -rf /root/.cache \\\n && rm -rf /root/.composer \\\n && rm -rf /root/.config \\\n && rm -rf /root/.drush \\\n && rm -rf /root/.subversion \\\n && rm -rf /root/.v8* \\\n && rm -rf /tmp/* \\\n && (rm -rf /tmp/.* || true ) \\\n && (rm -rf /root/.gem || true ) \\\n && (rm -rf /root/.cache || true ) \\\n && (rm -rf /root/.composer || true ) \\\n && (rm -rf /root/.config || true ) \\\n && (rm -rf /root/.npm || true ) \\\n && (rm -rf /home/devilbox/.cache || true ) \\\n && (rm -rf /home/devilbox/.composer || true ) \\\n && (rm -rf /home/devilbox/.config || true ) \\\n && (rm -rf /home/devilbox/.npm || true ) \\\n && (rm -rf /usr/local/src/composer/cache/* || true ) \\\n && rm -rf /tmp/* \\\n && (rm -rf /tmp/.* || true )\n# ##\n# ## Install Composer (PHP)\n# ##\nRUN set -x \\\n && COMPOSER_HOME=\"/usr/local/src/composer\" composer global require asgardcms/asgardcms-installer \\\n && ln -s /usr/local/src/composer/vendor/asgardcms/asgardcms-installer/asgardcms /usr/local/bin/ \\\n && COMPOSER_HOME=\"/usr/local/src/composer\" composer global require codeception/codeception \\\n && ln -s /usr/local/src/composer/vendor/codeception/codeception/codecept /usr/local/bin/ \\\n && COMPOSER_HOME=\"/usr/local/src/composer\" composer global require laravel/lumen-installer \\\n && ln -s /usr/local/src/composer/vendor/laravel/lumen-installer/lumen /usr/local/bin/ \\\n && COMPOSER_HOME=\"/usr/local/src/composer\" composer global require photoncms/installer \\\n && ln -s /usr/local/src/composer/vendor/photoncms/installer/photon /usr/local/bin/ \\\n && COMPOSER_HOME=\"/usr/local/src/composer\" composer global require hirak/prestissimo \\\n && rm -rf /tmp/* \\\n && (rm -rf /tmp/.* || true ) \\\n && (find /usr/local/bin -type f -print0 | xargs -n1 -0 strip --strip-all -p 2> /dev/null || true ) \\\n && (find /usr/local/lib -type f -print0 | xargs -n1 -0 strip --strip-all -p 2> /dev/null || true ) \\\n && (find /usr/local/sbin -type f -print0 | xargs -n1 -0 strip --strip-all -p 2> /dev/null || true )\n# ##\n# ## Install npm (Node)\n# ##\nRUN set -x \\\n && su -c '. /opt/nvm/nvm.sh; npm install -g @angular/cli' devilbox \\\n && su -c '. /opt/nvm/nvm.sh; npm install -g eslint' devilbox \\\n && su -c '. /opt/nvm/nvm.sh; npm install -g grunt' devilbox \\\n && su -c '. /opt/nvm/nvm.sh; npm install -g grunt-cli' devilbox \\\n && su -c '. /opt/nvm/nvm.sh; npm install -g gulp' devilbox \\\n && su -c '. /opt/nvm/nvm.sh; npm install -g jsonlint' devilbox \\\n && su -c '. /opt/nvm/nvm.sh; npm install -g pm2' devilbox \\\n && su -c '. /opt/nvm/nvm.sh; npm install -g mdlint' devilbox \\\n && su -c '. /opt/nvm/nvm.sh; npm install -g @vue/cli' devilbox \\\n && su -c '. /opt/nvm/nvm.sh; npm install -g @vue/cli-service-global' devilbox \\\n && su -c '. /opt/nvm/nvm.sh; npm install -g webpack' devilbox \\\n && su -c '. /opt/nvm/nvm.sh; npm install -g webpack-cli' devilbox \\\n && ln -sf $( dirname $( su -c '. /opt/nvm/nvm.sh; nvm which current' devilbox ;) ;)/* /usr/local/bin/ \\\n && su -c '. /opt/nvm/nvm.sh; npm cache clear --force' devilbox \\\n && su -c '. /opt/nvm/nvm.sh; nvm cache clear --force' devilbox \\\n && rm -rf /home/devilbox/.npm \\\n && rm -rf /home/devilbox/.config \\\n && rm -rf /tmp/* \\\n && (rm -rf /tmp/.* || true ) \\\n && (find /opt/nvm -type f -print0 | xargs -n1 -0 strip --strip-all -p 2> /dev/null || true )\n# ##\n# ## Install gem (Ruby)\n# ##\nRUN set -x \\\n && gem install mixlib-config --version 2.2.4 \\\n && gem install rb-inotify --version 0.9.10 \\\n && gem install mdl \\\n && gem install scss_lint --version 0.57.1 \\\n && gem install sass \\\n && rm -rf /root/.gem \\\n && rm -rf /tmp/* \\\n && (rm -rf /tmp/.* || true ) \\\n && (find /usr/local/bin -type f -print0 | xargs -n1 -0 strip --strip-all -p 2> /dev/null || true ) \\\n && (find /usr/local/lib -type f -print0 | xargs -n1 -0 strip --strip-all -p 2> /dev/null || true ) \\\n && (find /usr/local/sbin -type f -print0 | xargs -n1 -0 strip --strip-all -p 2> /dev/null || true )\n# ##\n# ## Install pip (Python) packages\n# ##\nRUN set -x \\\n && pip install ansible --no-cache-dir --force-reinstall \\\n && pip install yamllint --no-cache-dir --force-reinstall \\\n && pip install yq --no-cache-dir --force-reinstall \\\n && rm -rf /root/.cache/pip \\\n && rm -rf /tmp/* \\\n && (rm -rf /tmp/.* || true ) \\\n && (find /usr/local/bin -type f -print0 | xargs -n1 -0 strip --strip-all -p 2> /dev/null || true ) \\\n && (find /usr/local/lib -type f -print0 | xargs -n1 -0 strip --strip-all -p 2> /dev/null || true ) \\\n && (find /usr/local/sbin -type f -print0 | xargs -n1 -0 strip --strip-all -p 2> /dev/null || true )\n# ##\n# ## Configure Bash\n# ##\nRUN { echo \"PATH=${PATH}:/usr/local/bin:/usr/local/sbin:${HOME}/.yarn/bin:/opt/nvm/versions/node/$(nvm version default)/bin\" ;echo \"export PATH\" ;echo \". /etc/bash-devilbox\" ;echo \"if [ -d /etc/bashrc-devilbox.d/ ]; then\" ;echo \" for f in /etc/bashrc-devilbox.d/*.sh ; do\" ;echo \" if [ -r \\\"${f}\\\" ]; then\" ;echo \" . \\\"${f}\\\"\" ;echo \" fi\" ;echo \" done\" ;echo \" unset f\" ;echo \"fi\" ; } | tee -a /home/${MY_USER}/${BASH_PROFILE} /root/${BASH_PROFILE} \\\n && chown ${MY_USER}:${MY_GROUP} /home/${MY_USER}/${BASH_PROFILE}\n# ##\n# ## Verify\n# ##\nRUN set -x \\\n && echo \"date.timezone=UTC\" > /usr/local/etc/php/php.ini \\\n && php -v | grep -oE 'PHP\\s[.0-9]+' | grep -oE '[.0-9]+' | grep '^7.0' \\\n && /usr/local/sbin/php-fpm --test \\\n && PHP_ERROR=\"$( php -v 2>&1 1> /dev/null;)\" \\\n && if [ -n \"${PHP_ERROR}\" ] ; then echo \"${PHP_ERROR}\" ;false ; fi \\\n && PHP_ERROR=\"$( php -i 2>&1 1> /dev/null;)\" \\\n && if [ -n \"${PHP_ERROR}\" ] ; then echo \"${PHP_ERROR}\" ;false ; fi \\\n && PHP_FPM_ERROR=\"$( php-fpm -v 2>&1 1> /dev/null;)\" \\\n && if [ -n \"${PHP_FPM_ERROR}\" ] ; then echo \"${PHP_FPM_ERROR}\" ;false ; fi \\\n && PHP_FPM_ERROR=\"$( php-fpm -i 2>&1 1> /dev/null;)\" \\\n && if [ -n \"${PHP_FPM_ERROR}\" ] ; then echo \"${PHP_FPM_ERROR}\" ;false ; fi \\\n && rm -f /usr/local/etc/php/php.ini\nRUN set -x \\\n && composer --version 2> /dev/null | grep -E 'version\\s*[.0-9]+' \\\n && su -c '. /opt/nvm/nvm.sh; nvm --version' devilbox | grep -E '^[.0-9]+' \\\n && mdl --version | grep -E '[.0-9]+' \\\n && scss-lint --version | grep -E '[.0-9]+' \\\n && eslint -v | grep -E '[.0-9]+' \\\n && jsonlint --version | grep -E '[.0-9]+' \\\n && mdlint --version | grep -E '[.0-9]+' \\\n && gulp --version | grep -E '[.0-9]+' \\\n && dep --version 2> /dev/null | grep -Ei 'deployer\\s*(version\\s*)?[.0-9]+' \\\n && drush7 --version | grep -E '7[.0-9]+\\s*$' \\\n && drush8 --version | grep -E '8[.0-9]+\\s*$' \\\n && drush9 --version | grep -E '9[.0-9]+\\s*$' \\\n && drupal --version | grep -E 'Drupal Console Launcher\\s*[.0-9]' \\\n && git-flow version | grep -E '[.0-9]+' \\\n && laravel --version | grep -E '(Installer|version)\\s*[.0-9]+' \\\n && linkcheck --version | grep -E '^linkcheck\\sv[.0-9]+' \\\n && su - ${MY_USER} -c '/usr/local/src/linuxbrew/bin/brew --version' | grep -E 'Homebrew\\s*[.0-9]+' \\\n && mysqldump-secure --version | grep -E 'Version:\\s*[.0-9]+' \\\n && phalcon commands | grep -E '[.0-9]+' \\\n && phpcs --version | grep -E 'version [.0-9]+' \\\n && phpcbf --version | grep -E 'version [.0-9]+' \\\n && php-cs-fixer --version 2>&1 | grep -E 'Fixer\\s+(version\\s*)?[-_.0-9]+\\s+' \\\n && phpunit --version | grep -iE '^PHPUnit\\s[.0-9]+' \\\n && symfony --version | grep -E 'version\\s*[.0-9]+' \\\n && wkhtmltopdf --version | grep -E \"^wkhtmltopdf [.0-9]+\\s+\\(.+patched.+\\)\" \\\n && wp --allow-root --version | grep -E '[.0-9]+' \\\n && asgardcms --version 2> /dev/null | grep -Ei 'AsgardCMS\\sInstaller\\s[.0-9]+' \\\n && codecept --version 2> /dev/null | grep -E '^Codeception(\\sversion)?\\s[.0-9]+$' \\\n && lumen --version 2> /dev/null | grep -E '^Lumen Installer\\s[.0-9]+$' \\\n && photon --version | grep -E 'Installer [.0-9]+' \\\n && ansible --version | grep -E '^ansible [.0-9]+$' \\\n && yamllint --version 2>&1 | grep -E '[.0-9]+' \\\n && yq --version 2>&1 | grep -E '^yq\\s+[.0-9]+$' \\\n && ng version 2>&1 | grep -iE 'Angular CLI:\\s*[.0-9]+' \\\n && eslint -v | grep -E '[.0-9]+' \\\n && grunt --version | grep -E '[.0-9]+' \\\n && gulp --version | grep -E '[.0-9]+' \\\n && jsonlint --version | grep -E '[.0-9]+' \\\n && pm2 --no-daemon --version | grep -E '[.0-9]+' \\\n && mdlint --version | grep -E '[.0-9]+' \\\n && vue --version | grep -E '[.0-9]+' \\\n && webpack --version | grep -E '[.0-9]+' \\\n && mdl --version | grep -E '[.0-9]+' \\\n && sass --version | grep -E '[.0-9]+' \\\n && rm -rf /home/devilbox/.config/ \\\n && rm -rf /root/.ansible \\\n && rm -rf /root/.console \\\n && rm -rf /root/.composer \\\n && rm -rf /root/.drush \\\n && rm -rf /root/.pm2 \\\n && rm -rf /tmp/* \\\n && (rm -rf /tmp/.* || true )\n# ##\n# ## Copy files\n# ##\nCOPY ./data/php-ini.d/php-7.0.ini /usr/local/etc/php/conf.d/xxx-devilbox-default-php.ini\nCOPY ./data/php-fpm.conf/php-fpm-7.0.conf /usr/local/etc/php-fpm.conf\nCOPY ./data/docker-entrypoint.sh /docker-entrypoint.sh\nCOPY ./data/docker-entrypoint.d/*.sh /docker-entrypoint.d/\nCOPY ./data/bash-devilbox /etc/bash-devilbox\nCOPY ./data/sudo-devilbox /etc/sudoers.d/devilbox\n# ##\n# ## Volumes\n# ##\nVOLUME /shared/backups\nVOLUME /var/log/php\nVOLUME /var/mail\n# ##\n# ## Ports\n# ##\nEXPOSE 9000/tcp\n# ##\n# ## Where to start inside the container\n# ##\nWORKDIR /shared/httpd\n# ##\n# ## Entrypoint\n# ##\nENTRYPOINT [\"/docker-entrypoint.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"4b2441839eafcd4b4280d3361dfc6a08","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Auto-generated via Ansible: edit build/ansible/DOCKERFILES/Dockerfile-work.j2 instead.\nFROM devilbox/php-fpm:7.0-prod\nMAINTAINER \"cytopia\" <cytopia@everythingcli.org>\n#  ##\n#  ## Labels\n#  ##\nLABEL name=\"cytopia's PHP-FPM 7.0 Image\" \\\n      image=\"devilbox/php-fpm\" \\\n      tag=\"7.0-work\" \\\n      vendor=\"devilbox\" \\\n      license=\"MIT\"\n#  ##\n#  ## Envs\n#  ##\nENV BASH_PROFILE=\".bashrc\"\n#  ##\n#  ## Install Tools\n#  ##\nRUN set -x \\\n && DEBIAN_FRONTEND=noninteractive apt-get update -qq \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -qq -y --no-install-recommends --no-install-suggests apt-utils \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -qq -y --no-install-recommends --no-install-suggests curl dirmngr gnupg \\\n && echo \"deb http://ftp.debian.org/debian stretch-backports main\" > /etc/apt/sources.list.d/backports.list \\\n && curl -sS \"https://packages.blackfire.io/gpg.key\" 2> /dev/null | APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=1 apt-key add - \\\n && echo \"deb http://packages.blackfire.io/debian any main\" > /etc/apt/sources.list.d/blackfire.list \\\n && APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=1 apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv A1715D88E1DF1F24 \\\n && echo \"deb http://ppa.launchpad.net/git-core/ppa/ubuntu wily main\" > /etc/apt/sources.list.d/git.list \\\n && APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=1 apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 9DA31620334BD75D9DCB49F368818C72E52529D4 \\\n && echo \"deb http://repo.mongodb.org/apt/debian stretch/mongodb-org/4.0 main\" > /etc/apt/sources.list.d/mongo.list \\\n && curl -sS https://www.postgresql.org/media/keys/ACCC4CF8.asc 2> /dev/null | APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=1 apt-key add - \\\n && echo \"deb http://apt.postgresql.org/pub/repos/apt/ stretch-pgdg main\" > /etc/apt/sources.list.d/pgsql.list \\\n && curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg 2> /dev/null | APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=1 apt-key add - \\\n && echo \"deb http://dl.yarnpkg.com/debian/ stable main\" > /etc/apt/sources.list.d/yarn.list \\\n && DEBIAN_FRONTEND=noninteractive apt-get update -qq \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -qq -y --no-install-recommends --no-install-suggests ack-grep aspell autoconf automake bash-completion binutils blackfire-agent build-essential bzip2 coreutils dnsutils dos2unix file gawk gcc git git-flow git-svn graphviz hostname htop imagemagick iputils-ping jq less libc-dev libffi-dev libssl-dev libyaml-dev make mongodb-org-shell mongodb-org-tools moreutils mysql-client nano net-tools netcat openssh-client patch patchelf postgresql-client redis-tools rsync rubygems ruby-dev shellcheck silversearcher-ag subversion sudo tig tree unzip vim w3m wget whois xz-utils yarn zip zlib1g-dev zsh \\\n && DEBIAN_FRONTEND=noninteractive apt-get purge -qq -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false apt-utils \\\n && rm -rf /var/lib/apt/lists/* \\\n && (find /usr/local/bin -type f -print0 | xargs -n1 -0 strip --strip-all -p 2> /dev/null || true ) \\\n && (find /usr/local/lib -type f -print0 | xargs -n1 -0 strip --strip-all -p 2> /dev/null || true ) \\\n && (find /usr/local/sbin -type f -print0 | xargs -n1 -0 strip --strip-all -p 2> /dev/null || true )\n#  ##\n#  ## Install custom software\n#  ##\nRUN set -x \\\n && curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer \\\n && DEBIAN_FRONTEND=noninteractive apt-get update -qq \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -qq -y --no-install-recommends --no-install-suggests libpython-dev \\\n && DEBIAN_FRONTEND=noninteractive apt-get purge -qq -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false \\\n && rm -rf /var/lib/apt/lists/* \\\n && curl -sS https://bootstrap.pypa.io/get-pip.py | python \\\n && git clone https://github.com/creationix/nvm /opt/nvm \\\n && cd /opt/nvm \\\n && git checkout \"$( git describe --abbrev=0 --tags --match \"v[0-9]*\" $( git rev-list --tags --max-count=1 ;) ;)\" \\\n && { echo 'export NVM_DIR=\"/opt/nvm\"' ;echo '[ -s \"$NVM_DIR/nvm.sh\" ] \\\n && \\. \"$NVM_DIR/nvm.sh\" # This loads nvm' ;echo '[ -s \"$NVM_DIR/bash_completion\" ] \\\n && \\. \"$NVM_DIR/bash_completion\" # This loads nvm bash_completion' ; } >> /home/devilbox/.bashrc \\\n && chown -R devilbox:devilbox /opt/nvm \\\n && su -c '. /opt/nvm/nvm.sh; nvm install node' devilbox \\\n && su -c '. /opt/nvm/nvm.sh; nvm install --lts' devilbox \\\n && su -c '. /opt/nvm/nvm.sh; nvm use node' devilbox \\\n && git clone https://github.com/cytopia/awesome-ci.git /usr/local/src/awesome-ci \\\n && cd /usr/local/src/awesome-ci \\\n && git checkout $( git describe --abbrev=0 --tags ;) \\\n && ./configure --prefix=/usr/local \\\n && make install \\\n && cd / \\\n && rm -rf /usr/local/src/awesome-ci \\\n && curl -sS https://deployer.org/deployer.phar -L -o /usr/local/bin/dep \\\n && chmod +x /usr/local/bin/dep \\\n && git clone https://github.com/drush-ops/drush.git /usr/local/src/drush7 \\\n && cd /usr/local/src/drush7 \\\n && git checkout 7.4.0 \\\n && chown -R ${MY_USER}:${MY_GROUP} /usr/local/src/drush7 \\\n && su - ${MY_USER} -c 'PATH=/usr/local/bin:$PATH; cd /usr/local/src/drush7 \\\n && composer install --no-interaction --no-progress --no-dev' \\\n && ln -s /usr/local/src/drush7/drush /usr/local/bin/drush7 \\\n && rm -rf /usr/local/src/drush7/.git \\\n && rm -rf /usr/local/src/drush7/docs \\\n && rm -rf /usr/local/src/drush7/examples \\\n && rm -rf /usr/local/src/drush7/misc \\\n && git clone https://github.com/drush-ops/drush.git /usr/local/src/drush8 \\\n && cd /usr/local/src/drush8 \\\n && git checkout $( git for-each-ref --format='%(*creatordate:raw)%(creatordate:raw) %(refname)' refs/tags | sort -n | grep -E 'tags/8[.0-9]+$' | tail -1 | sed 's|.*/||g' ;) \\\n && chown -R ${MY_USER}:${MY_GROUP} /usr/local/src/drush8 \\\n && su - ${MY_USER} -c 'PATH=/usr/local/bin:$PATH; cd /usr/local/src/drush8 \\\n && composer install --no-interaction --no-progress --no-dev' \\\n && ln -s /usr/local/src/drush8/drush /usr/local/bin/drush8 \\\n && rm -rf /usr/local/src/drush8/.git \\\n && rm -rf /usr/local/src/drush8/docs \\\n && rm -rf /usr/local/src/drush8/examples \\\n && rm -rf /usr/local/src/drush8/misc \\\n && git clone https://github.com/drush-ops/drush.git /usr/local/src/drush9 \\\n && cd /usr/local/src/drush9 \\\n && git checkout $( git for-each-ref --format='%(*creatordate:raw)%(creatordate:raw) %(refname)' refs/tags | sort -n | grep -E 'tags/9[.0-9]+$' | tail -1 | sed 's|.*/||g' ;) \\\n && chown -R ${MY_USER}:${MY_GROUP} /usr/local/src/drush9 \\\n && su - ${MY_USER} -c 'PATH=/usr/local/bin:$PATH; cd /usr/local/src/drush9 \\\n && php -d memory_limit=-1 `which composer` install --no-interaction --no-progress' \\\n && ln -s /usr/local/src/drush9/drush /usr/local/bin/drush9 \\\n && rm -rf /usr/local/src/drush9/.git \\\n && rm -rf /usr/local/src/drush9/docs \\\n && rm -rf /usr/local/src/drush9/examples \\\n && rm -rf /usr/local/src/drush9/misc \\\n && curl https://drupalconsole.com/installer -L -o /usr/local/bin/drupal \\\n && chmod +x /usr/local/bin/drupal \\\n && git clone git://github.com/petervanderdoes/gitflow.git /tmp/gitflow \\\n && cd /tmp/gitflow \\\n && make install \\\n && cd / \\\n && rm -rf /tmp/gitflow \\\n && git clone https://github.com/laravel/installer /usr/local/src/laravel-installer \\\n && cd /usr/local/src/laravel-installer \\\n && git checkout v2.0.0 \\\n && chown -R ${MY_USER}:${MY_GROUP} /usr/local/src/laravel-installer \\\n && su - ${MY_USER} -c 'PATH=/usr/local/bin:$PATH; cd /usr/local/src/laravel-installer \\\n && composer install --no-interaction --no-progress --no-dev' \\\n && ln -s /usr/local/src/laravel-installer/laravel /usr/local/bin/laravel \\\n && rm -rf /usr/local/src/laravel-installer/laravel/.git \\\n && curl https://raw.githubusercontent.com/cytopia/linkcheck/master/linkcheck > /usr/local/bin/linkcheck \\\n && chmod +x /usr/local/bin/linkcheck \\\n && git clone https://github.com/Linuxbrew/brew.git /usr/local/src/linuxbrew \\\n && chown -R ${MY_USER}:${MY_GROUP} /usr/local/src/linuxbrew \\\n && v=\"${BASH_PROFILE}\" su ${MY_USER} -c -p 'echo \"PATH=/usr/local/src/linuxbrew/bin:/usr/local/src/linuxbrew/sbin:/usr/bin:/usr/sbin:/bin:/sbin\" >> /home/devilbox/${v}' \\\n && v=\"${BASH_PROFILE}\" su ${MY_USER} -c -p 'echo \"export MANPATH=/usr/local/src/linuxbrew/share/man:${MANPATH}\" >> /home/devilbox/${v}' \\\n && v=\"${BASH_PROFILE}\" su ${MY_USER} -c -p 'echo \"export INFOPATH=/usr/local/src/linuxbrew/share/man:${INFOPATH}\" >> /home/devilbox/${v}' \\\n && su - ${MY_USER} -c '/usr/local/src/linuxbrew/bin/brew config' \\\n && wget https://github.com/mailhog/mhsendmail/releases/download/v0.2.0/mhsendmail_linux_amd64 \\\n && chmod +x mhsendmail_linux_amd64 \\\n && mv mhsendmail_linux_amd64 /usr/local/bin/mhsendmail \\\n && git clone https://github.com/cytopia/mysqldump-secure.git /usr/local/src/mysqldump-secure \\\n && cd /usr/local/src/mysqldump-secure \\\n && git checkout $( git describe --abbrev=0 --tags ;) \\\n && cp /usr/local/src/mysqldump-secure/bin/mysqldump-secure /usr/local/bin \\\n && cp /usr/local/src/mysqldump-secure/etc/mysqldump-secure.conf /etc \\\n && cp /usr/local/src/mysqldump-secure/etc/mysqldump-secure.cnf /etc \\\n && touch /var/log/mysqldump-secure.log \\\n && chown ${MY_USER}:${MY_GROUP} /etc/mysqldump-secure.* \\\n && chown ${MY_USER}:${MY_GROUP} /var/log/mysqldump-secure.log \\\n && chmod 0400 /etc/mysqldump-secure.conf \\\n && chmod 0400 /etc/mysqldump-secure.cnf \\\n && chmod 0644 /var/log/mysqldump-secure.log \\\n && sed -i'' 's/^COMPRESS_ARG=.*/COMPRESS_ARG=\"-9 -c\"/g' /etc/mysqldump-secure.conf \\\n && sed -i'' 's/^DUMP_DIR=.*/DUMP_DIR=\"\\/shared\\/backups\\/mysql\"/g' /etc/mysqldump-secure.conf \\\n && sed -i'' 's/^DUMP_DIR_CHMOD=.*/DUMP_DIR_CHMOD=\"0755\"/g' /etc/mysqldump-secure.conf \\\n && sed -i'' 's/^DUMP_FILE_CHMOD=.*/DUMP_FILE_CHMOD=\"0644\"/g' /etc/mysqldump-secure.conf \\\n && sed -i'' 's/^LOG_CHMOD=.*/LOG_CHMOD=\"0644\"/g' /etc/mysqldump-secure.conf \\\n && sed -i'' 's/^NAGIOS_LOG=.*/NAGIOS_LOG=0/g' /etc/mysqldump-secure.conf \\\n && cd / \\\n && rm -rf /usr/local/src/mysqldump-secure \\\n && git clone https://github.com/phalcon/phalcon-devtools /usr/local/src/phalcon-devtools \\\n && cd /usr/local/src/phalcon-devtools \\\n && git checkout $( git describe --abbrev=0 --tags ;) \\\n && chown -R ${MY_USER}:${MY_GROUP} /usr/local/src/phalcon-devtools \\\n && su - ${MY_USER} -c 'cd /usr/local/src/phalcon-devtools \\\n && ./phalcon.sh' \\\n && ln -s /usr/local/src/phalcon-devtools/phalcon.php /usr/local/bin/phalcon \\\n && cd / \\\n && rm -rf /usr/local/src/phalcon-devtools/.git \\\n && curl -sS -L https://squizlabs.github.io/PHP_CodeSniffer/phpcs.phar > /usr/local/bin/phpcs 2> /dev/null \\\n && chmod +x /usr/local/bin/phpcs \\\n && curl -sS -L https://squizlabs.github.io/PHP_CodeSniffer/phpcbf.phar > /usr/local/bin/phpcbf 2> /dev/null \\\n && chmod +x /usr/local/bin/phpcbf \\\n && curl -sS -L https://cs.symfony.com/download/php-cs-fixer-v2.phar > /usr/local/bin/php-cs-fixer 2> /dev/null \\\n && chmod +x /usr/local/bin/php-cs-fixer \\\n && curl -qL https://phar.phpunit.de/phpunit-6.phar > /usr/local/bin/phpunit 2> /dev/null \\\n && chmod +x /usr/local/bin/phpunit \\\n && curl https://symfony.com/installer -L -o /usr/local/bin/symfony \\\n && chmod +x /usr/local/bin/symfony \\\n && VERSION=\"$( curl -sSL https://github.com/wkhtmltopdf/wkhtmltopdf/releases | grep -Eo '/wkhtmltopdf/.+stretch_amd64\\.deb' | head -1 ;)\" \\\n && DEBIAN_FRONTEND=noninteractive apt-get update -qq \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -qq -y --no-install-recommends --no-install-suggests libfontenc1 libxfont1 xfonts-75dpi xfonts-base xfonts-encodings xfonts-utils \\\n && curl -sS -L -o /tmp/wkhtmltopdf.deb https://github.com/${VERSION} \\\n && dpkg -i /tmp/wkhtmltopdf.deb \\\n && rm -f /tmp/wkhtmltopdf.deb \\\n && DEBIAN_FRONTEND=noninteractive apt-get purge -qq -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false apt-utils \\\n && rm -rf /var/lib/apt/lists/* \\\n && curl https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar -L -o /usr/local/bin/wp \\\n && chmod +x /usr/local/bin/wp \\\n && rm -rf /home/${MY_USER}/.*json \\\n && rm -rf /home/${MY_USER}/.cache \\\n && rm -rf /home/${MY_USER}/.composer \\\n && rm -rf /home/${MY_USER}/.config \\\n && rm -rf /home/${MY_USER}/.drush \\\n && rm -rf /home/${MY_USER}/.subversion \\\n && rm -rf /home/${MY_USER}/.v8* \\\n && rm -rf /root/.*json \\\n && rm -rf /root/.cache \\\n && rm -rf /root/.composer \\\n && rm -rf /root/.config \\\n && rm -rf /root/.drush \\\n && rm -rf /root/.subversion \\\n && rm -rf /root/.v8* \\\n && rm -rf /tmp/* \\\n && (rm -rf /tmp/.* || true ) \\\n && (rm -rf /root/.gem || true ) \\\n && (rm -rf /root/.cache || true ) \\\n && (rm -rf /root/.composer || true ) \\\n && (rm -rf /root/.config || true ) \\\n && (rm -rf /root/.npm || true ) \\\n && (rm -rf /home/devilbox/.cache || true ) \\\n && (rm -rf /home/devilbox/.composer || true ) \\\n && (rm -rf /home/devilbox/.config || true ) \\\n && (rm -rf /home/devilbox/.npm || true ) \\\n && (rm -rf /usr/local/src/composer/cache/* || true ) \\\n && rm -rf /tmp/* \\\n && (rm -rf /tmp/.* || true )\n#  ##\n#  ## Install Composer (PHP)\n#  ##\nRUN set -x \\\n && COMPOSER_HOME=\"/usr/local/src/composer\" composer global require asgardcms/asgardcms-installer \\\n && ln -s /usr/local/src/composer/vendor/asgardcms/asgardcms-installer/asgardcms /usr/local/bin/ \\\n && COMPOSER_HOME=\"/usr/local/src/composer\" composer global require codeception/codeception \\\n && ln -s /usr/local/src/composer/vendor/codeception/codeception/codecept /usr/local/bin/ \\\n && COMPOSER_HOME=\"/usr/local/src/composer\" composer global require laravel/lumen-installer \\\n && ln -s /usr/local/src/composer/vendor/laravel/lumen-installer/lumen /usr/local/bin/ \\\n && COMPOSER_HOME=\"/usr/local/src/composer\" composer global require photoncms/installer \\\n && ln -s /usr/local/src/composer/vendor/photoncms/installer/photon /usr/local/bin/ \\\n && COMPOSER_HOME=\"/usr/local/src/composer\" composer global require hirak/prestissimo \\\n && rm -rf /tmp/* \\\n && (rm -rf /tmp/.* || true ) \\\n && (find /usr/local/bin -type f -print0 | xargs -n1 -0 strip --strip-all -p 2> /dev/null || true ) \\\n && (find /usr/local/lib -type f -print0 | xargs -n1 -0 strip --strip-all -p 2> /dev/null || true ) \\\n && (find /usr/local/sbin -type f -print0 | xargs -n1 -0 strip --strip-all -p 2> /dev/null || true )\n#  ##\n#  ## Install npm (Node)\n#  ##\nRUN set -x \\\n && su -c '. /opt/nvm/nvm.sh; npm install -g @angular/cli' devilbox \\\n && su -c '. /opt/nvm/nvm.sh; npm install -g eslint' devilbox \\\n && su -c '. /opt/nvm/nvm.sh; npm install -g grunt' devilbox \\\n && su -c '. /opt/nvm/nvm.sh; npm install -g grunt-cli' devilbox \\\n && su -c '. /opt/nvm/nvm.sh; npm install -g gulp' devilbox \\\n && su -c '. /opt/nvm/nvm.sh; npm install -g jsonlint' devilbox \\\n && su -c '. /opt/nvm/nvm.sh; npm install -g pm2' devilbox \\\n && su -c '. /opt/nvm/nvm.sh; npm install -g mdlint' devilbox \\\n && su -c '. /opt/nvm/nvm.sh; npm install -g @vue/cli' devilbox \\\n && su -c '. /opt/nvm/nvm.sh; npm install -g @vue/cli-service-global' devilbox \\\n && su -c '. /opt/nvm/nvm.sh; npm install -g webpack' devilbox \\\n && su -c '. /opt/nvm/nvm.sh; npm install -g webpack-cli' devilbox \\\n && ln -sf $( dirname $( su -c '. /opt/nvm/nvm.sh; nvm which current' devilbox ;) ;)/* /usr/local/bin/ \\\n && su -c '. /opt/nvm/nvm.sh; npm cache clear --force' devilbox \\\n && su -c '. /opt/nvm/nvm.sh; nvm cache clear --force' devilbox \\\n && rm -rf /home/devilbox/.npm \\\n && rm -rf /home/devilbox/.config \\\n && rm -rf /tmp/* \\\n && (rm -rf /tmp/.* || true ) \\\n && (find /opt/nvm -type f -print0 | xargs -n1 -0 strip --strip-all -p 2> /dev/null || true )\n#  ##\n#  ## Install gem (Ruby)\n#  ##\nRUN set -x \\\n && gem install mixlib-config --version 2.2.4 \\\n && gem install rb-inotify --version 0.9.10 \\\n && gem install mdl \\\n && gem install scss_lint --version 0.57.1 \\\n && gem install sass \\\n && rm -rf /root/.gem \\\n && rm -rf /tmp/* \\\n && (rm -rf /tmp/.* || true ) \\\n && (find /usr/local/bin -type f -print0 | xargs -n1 -0 strip --strip-all -p 2> /dev/null || true ) \\\n && (find /usr/local/lib -type f -print0 | xargs -n1 -0 strip --strip-all -p 2> /dev/null || true ) \\\n && (find /usr/local/sbin -type f -print0 | xargs -n1 -0 strip --strip-all -p 2> /dev/null || true )\n#  ##\n#  ## Install pip (Python) packages\n#  ##\nRUN set -x \\\n && pip install ansible --no-cache-dir --force-reinstall \\\n && pip install yamllint --no-cache-dir --force-reinstall \\\n && pip install yq --no-cache-dir --force-reinstall \\\n && rm -rf /root/.cache/pip \\\n && rm -rf /tmp/* \\\n && (rm -rf /tmp/.* || true ) \\\n && (find /usr/local/bin -type f -print0 | xargs -n1 -0 strip --strip-all -p 2> /dev/null || true ) \\\n && (find /usr/local/lib -type f -print0 | xargs -n1 -0 strip --strip-all -p 2> /dev/null || true ) \\\n && (find /usr/local/sbin -type f -print0 | xargs -n1 -0 strip --strip-all -p 2> /dev/null || true )\n#  ##\n#  ## Configure Bash\n#  ##\nRUN { echo \"PATH=${PATH}:/usr/local/bin:/usr/local/sbin:${HOME}/.yarn/bin:/opt/nvm/versions/node/$( nvm version default ;)/bin\" ;echo \"export PATH\" ;echo \". /etc/bash-devilbox\" ;echo \"if [ -d /etc/bashrc-devilbox.d/ ]; then\" ;echo \" for f in /etc/bashrc-devilbox.d/*.sh ; do\" ;echo \" if [ -r \\\"${f}\\\" ]; then\" ;echo \" . \\\"${f}\\\"\" ;echo \" fi\" ;echo \" done\" ;echo \" unset f\" ;echo \"fi\" ; } | tee -a /home/${MY_USER}/${BASH_PROFILE} /root/${BASH_PROFILE} \\\n && chown ${MY_USER}:${MY_GROUP} /home/${MY_USER}/${BASH_PROFILE}\n#  ##\n#  ## Verify\n#  ##\nRUN set -x \\\n && echo \"date.timezone=UTC\" > /usr/local/etc/php/php.ini \\\n && php -v | grep -oE 'PHP\\s[.0-9]+' | grep -oE '[.0-9]+' | grep '^7.0' \\\n && /usr/local/sbin/php-fpm --test \\\n && PHP_ERROR=\"$( php -v 2>&1 1> /dev/null;)\" \\\n && if [ -n \"${PHP_ERROR}\" ] ; then echo \"${PHP_ERROR}\" ;false ; fi \\\n && PHP_ERROR=\"$( php -i 2>&1 1> /dev/null;)\" \\\n && if [ -n \"${PHP_ERROR}\" ] ; then echo \"${PHP_ERROR}\" ;false ; fi \\\n && PHP_FPM_ERROR=\"$( php-fpm -v 2>&1 1> /dev/null;)\" \\\n && if [ -n \"${PHP_FPM_ERROR}\" ] ; then echo \"${PHP_FPM_ERROR}\" ;false ; fi \\\n && PHP_FPM_ERROR=\"$( php-fpm -i 2>&1 1> /dev/null;)\" \\\n && if [ -n \"${PHP_FPM_ERROR}\" ] ; then echo \"${PHP_FPM_ERROR}\" ;false ; fi \\\n && rm -f /usr/local/etc/php/php.ini\nRUN set -x \\\n && composer --version 2> /dev/null | grep -E 'version\\s*[.0-9]+' \\\n && su -c '. /opt/nvm/nvm.sh; nvm --version' devilbox | grep -E '^[.0-9]+' \\\n && mdl --version | grep -E '[.0-9]+' \\\n && scss-lint --version | grep -E '[.0-9]+' \\\n && eslint -v | grep -E '[.0-9]+' \\\n && jsonlint --version | grep -E '[.0-9]+' \\\n && mdlint --version | grep -E '[.0-9]+' \\\n && gulp --version | grep -E '[.0-9]+' \\\n && dep --version 2> /dev/null | grep -Ei 'deployer\\s*(version\\s*)?[.0-9]+' \\\n && drush7 --version | grep -E '7[.0-9]+\\s*$' \\\n && drush8 --version | grep -E '8[.0-9]+\\s*$' \\\n && drush9 --version | grep -E '9[.0-9]+\\s*$' \\\n && drupal --version | grep -E 'Drupal Console Launcher\\s*[.0-9]' \\\n && git-flow version | grep -E '[.0-9]+' \\\n && laravel --version | grep -E '(Installer|version)\\s*[.0-9]+' \\\n && linkcheck --version | grep -E '^linkcheck\\sv[.0-9]+' \\\n && su - ${MY_USER} -c '/usr/local/src/linuxbrew/bin/brew --version' | grep -E 'Homebrew\\s*[.0-9]+' \\\n && mysqldump-secure --version | grep -E 'Version:\\s*[.0-9]+' \\\n && phalcon commands | grep -E '[.0-9]+' \\\n && phpcs --version | grep -E 'version [.0-9]+' \\\n && phpcbf --version | grep -E 'version [.0-9]+' \\\n && php-cs-fixer --version 2>&1 | grep -E 'Fixer\\s+(version\\s*)?[-_.0-9]+\\s+' \\\n && phpunit --version | grep -iE '^PHPUnit\\s[.0-9]+' \\\n && symfony --version | grep -E 'version\\s*[.0-9]+' \\\n && wkhtmltopdf --version | grep -E \"^wkhtmltopdf [.0-9]+\\s+\\(.+patched.+\\)\" \\\n && wp --allow-root --version | grep -E '[.0-9]+' \\\n && asgardcms --version 2> /dev/null | grep -Ei 'AsgardCMS\\sInstaller\\s[.0-9]+' \\\n && codecept --version 2> /dev/null | grep -E '^Codeception(\\sversion)?\\s[.0-9]+$' \\\n && lumen --version 2> /dev/null | grep -E '^Lumen Installer\\s[.0-9]+$' \\\n && photon --version | grep -E 'Installer [.0-9]+' \\\n && ansible --version | grep -E '^ansible [.0-9]+$' \\\n && yamllint --version 2>&1 | grep -E '[.0-9]+' \\\n && yq --version 2>&1 | grep -E '^yq\\s+[.0-9]+$' \\\n && ng version 2>&1 | grep -iE 'Angular CLI:\\s*[.0-9]+' \\\n && eslint -v | grep -E '[.0-9]+' \\\n && grunt --version | grep -E '[.0-9]+' \\\n && gulp --version | grep -E '[.0-9]+' \\\n && jsonlint --version | grep -E '[.0-9]+' \\\n && pm2 --no-daemon --version | grep -E '[.0-9]+' \\\n && mdlint --version | grep -E '[.0-9]+' \\\n && vue --version | grep -E '[.0-9]+' \\\n && webpack --version | grep -E '[.0-9]+' \\\n && mdl --version | grep -E '[.0-9]+' \\\n && sass --version | grep -E '[.0-9]+' \\\n && rm -rf /home/devilbox/.config/ \\\n && rm -rf /root/.ansible \\\n && rm -rf /root/.console \\\n && rm -rf /root/.composer \\\n && rm -rf /root/.drush \\\n && rm -rf /root/.pm2 \\\n && rm -rf /tmp/* \\\n && (rm -rf /tmp/.* || true )\n#  ##\n#  ## Copy files\n#  ##\nCOPY ./data/php-ini.d/php-7.0.ini /usr/local/etc/php/conf.d/xxx-devilbox-default-php.ini\nCOPY ./data/php-fpm.conf/php-fpm-7.0.conf /usr/local/etc/php-fpm.conf\nCOPY ./data/docker-entrypoint.sh /docker-entrypoint.sh\nCOPY ./data/docker-entrypoint.d/*.sh /docker-entrypoint.d/\nCOPY ./data/bash-devilbox /etc/bash-devilbox\nCOPY ./data/sudo-devilbox /etc/sudoers.d/devilbox\n#  ##\n#  ## Volumes\n#  ##\nVOLUME /shared/backups\nVOLUME /var/log/php\nVOLUME /var/mail\n#  ##\n#  ## Ports\n#  ##\nEXPOSE 9000/tcp\n#  ##\n#  ## Where to start inside the container\n#  ##\nWORKDIR /shared/httpd\n#  ##\n#  ## Entrypoint\n#  ##\nENTRYPOINT [\"/docker-entrypoint.sh\"]\n","originalDockerfileUglifiedHash":"502ef2b9508c271e495217655c1704aa","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/d68979a6b11bfd4c96d311a3ec96f6f856eb78fd.dockerfile"}