{"seed":3119715129,"processedDockerfileHash":"611023eefa51de79c3d6932cdd74015a","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apt-get","pin-package-manager-versions-apk","have-a-healthcheck"],"processedDockerfile":"#   ActiveMQ Artemis\n#  #########################################################\n#  # Build Image                                           #\n#  #########################################################\nFROM openjdk:8u171-jdk-stretch AS builder\nLABEL maintainer=\"Victor Romero <victor.romero@gmail.com>\"\nARG ACTIVEMQ_ARTEMIS_VERSION\nARG ACTIVEMQ_DISTRIBUTION_URL\nENV JMX_EXPORTER_VERSION=\"0.3.1\"\nENV JGROUPS_KUBERNETES_VERSION=\"0.9.3\"\n#   add user and group for artemis\nRUN groupadd -r artemis \\\n && useradd -r -s /bin/false -g artemis artemis\nRUN apt-get update -qq -o=Dpkg::Use-Pty=0 \\\n && apt-get install --no-install-recommends libaio1=0.3.110-3 xmlstarlet=1.6.1-2 jq=1.5+dfsg-1.3 ca-certificates=20161130+nmu1+deb9u1 wget=1.18-5+deb9u2 -qq -o=Dpkg::Use-Pty=0 -y \\\n && rm -rf /var/lib/apt/lists/*\n#   Make sure pipes are considered to detemine success, see: https://github.com/hadolint/hadolint/wiki/DL4006\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\n#   Uncompress and validate\nWORKDIR /opt\nRUN if (echo \"${ACTIVEMQ_DISTRIBUTION_URL}\" | grep -Eq \".zip$\" ) ; then mkdir tmp \\\n && wget \"${ACTIVEMQ_DISTRIBUTION_URL}\" -P tmp/ \\\n && unzip -d tmp -q \"tmp/*.zip\" \\\n && rm -f tmp/*.zip \\\n && ls -l tmp/ \\\n && mv tmp/* ./apache-artemis-${ACTIVEMQ_ARTEMIS_VERSION} \\\n && ln -s \"/opt/apache-artemis-${ACTIVEMQ_ARTEMIS_VERSION}\" \"/opt/apache-artemis\" \\\n && rmdir tmp ; elif test -n \"${ACTIVEMQ_DISTRIBUTION_URL}\" ; then echo \"Only .zip format is supported when using ACTIVEMQ_DISTRIBUTION_URL\" \\\n && exit 2 ; else wget \"https://repository.apache.org/content/repositories/releases/org/apache/activemq/apache-artemis/${ACTIVEMQ_ARTEMIS_VERSION}/apache-artemis-${ACTIVEMQ_ARTEMIS_VERSION}-bin.tar.gz\" \\\n && wget \"https://repository.apache.org/content/repositories/releases/org/apache/activemq/apache-artemis/${ACTIVEMQ_ARTEMIS_VERSION}/apache-artemis-${ACTIVEMQ_ARTEMIS_VERSION}-bin.tar.gz.asc\" \\\n && wget \"http://apache.org/dist/activemq/KEYS\" \\\n && gpg --no-tty --import \"KEYS\" \\\n && gpg --no-tty \"apache-artemis-${ACTIVEMQ_ARTEMIS_VERSION}-bin.tar.gz.asc\" \\\n && tar xfz \"apache-artemis-${ACTIVEMQ_ARTEMIS_VERSION}-bin.tar.gz\" \\\n && ln -s \"/opt/apache-artemis-${ACTIVEMQ_ARTEMIS_VERSION}\" \"/opt/apache-artemis\" \\\n && rm -f \"apache-artemis-${ACTIVEMQ_ARTEMIS_VERSION}-bin.tar.gz\" \"KEYS\" \"apache-artemis-${ACTIVEMQ_ARTEMIS_VERSION}-bin.tar.gz.asc\" ; fi\n#   Create broker instance\n#   Per recommendation of https://activemq.apache.org/artemis/docs/latest/perf-tuning.html : -XX:+AggressiveOpts -XX:+UseFastAccessorMethods -XX:+UseParallelOldGC \nWORKDIR /var/lib\nRUN if test \"${ACTIVEMQ_ARTEMIS_VERSION}\" = \"1.0.0\" ; then echo n | \"/opt/apache-artemis-${ACTIVEMQ_ARTEMIS_VERSION}/bin/artemis\" create artemis --home /opt/apache-artemis --user artemis --password simetraehcapa --cluster-user artemisCluster --cluster-password simetraehcaparetsulc ; else \"/opt/apache-artemis-${ACTIVEMQ_ARTEMIS_VERSION}/bin/artemis\" create artemis --home /opt/apache-artemis --user artemis --password simetraehcapa --role amq --require-login --cluster-user artemisCluster --cluster-password simetraehcaparetsulc ; fi\n#   Using KUBE_PING 0.9.3. Can't upgrade to 1.x.x as Artemis uses JGroups 3.3.x \n#   https://github.com/jgroups-extras/jgroups-kubernetes/issues/30\nWORKDIR /opt/jgroupskubernetes\nRUN wget -O ivy-2.4.0.jar http://search.maven.org/remotecontent?filepath=org/apache/ivy/ivy/2.4.0/ivy-2.4.0.jar \\\n && java -jar ivy-2.4.0.jar -dependency org.jgroups.kubernetes kubernetes \"${JGROUPS_KUBERNETES_VERSION}\" -retrieve \"[artifact]-[revision](-[classifier]).[ext]\" -types jar \\\n && java -jar ivy-2.4.0.jar -dependency org.jgroups.kubernetes dns \"${JGROUPS_KUBERNETES_VERSION}\" -retrieve \"[artifact]-[revision](-[classifier]).[ext]\" -types jar \\\n && rm ivy-2.4.0.jar\nWORKDIR /var/lib/artemis/etc\n#   --java-options doesn't seem to work across the board on all versions adding them manually\nRUN sed -i \"s/JAVA_ARGS=\\\"/JAVA_ARGS=\\\"-Djava.net.preferIPv4Addresses=true -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -XX:MaxRAMFraction=2 /g\" ../etc/artemis.profile\n#   Ports are only exposed with an explicit argument, there is no need to binding\n#   the web console to localhost\nRUN xmlstarlet ed -L -N amq=\"http://activemq.org/schema\" -u \"/amq:broker/amq:web/@bind\" -v \"http://0.0.0.0:8161\" bootstrap.xml\n#   In a similar fashion the jolokia access is restricted to localhost only. Disabling\n#   this as in the natural environmnets for the image like Kubernetes this is problematic.\nRUN if (echo \"${ACTIVEMQ_ARTEMIS_VERSION}\" | grep -Eq \"(2.[^0-3]\\.[0-9]|[^1-2]\\.[0-9]\\.[0-9]+)\" ) ; then xmlstarlet ed --inplace --subnode \"/restrict\" --type elem -n \"remote\" jolokia-access.xml \\\n && xmlstarlet ed --inplace --subnode \"/restrict/remote\" --type elem -n host -v \"0.0.0.0/0\" jolokia-access.xml ; fi\n#   Remove default values for memory in artemis profile in order to let the automatic\n#   Java ergonomics detection work https://docs.oracle.com/javase/8/docs/technotes/guides/vm/gctuning/ergonomics.html\nRUN sed -i \"s/-Xm[xs][^ \\\"]*//g\" ../etc/artemis.profile\n#   For the casual run of the image make the docker-entrypoint-sh think \n#   that the performance journal calibration is already completed\nRUN if (echo \"${ACTIVEMQ_ARTEMIS_VERSION}\" | grep -Eq \"(1.5\\.[3-5]|[^1]\\.[0-9]\\.[0-9]+)\" ) ; then touch /var/lib/artemis/data/.perf-journal-completed ; fi\nWORKDIR /opt/jmx-exporter\nRUN wget \"https://repo1.maven.org/maven2/io/prometheus/jmx/jmx_prometheus_javaagent/${JMX_EXPORTER_VERSION}/jmx_prometheus_javaagent-${JMX_EXPORTER_VERSION}.jar\" \\\n && wget \"https://repo1.maven.org/maven2/io/prometheus/jmx/jmx_prometheus_javaagent/${JMX_EXPORTER_VERSION}/jmx_prometheus_javaagent-${JMX_EXPORTER_VERSION}.jar.sha1\" \\\n && echo \"$( cat \"jmx_prometheus_javaagent-${JMX_EXPORTER_VERSION}.jar.sha1\" ;)\" \"jmx_prometheus_javaagent-${JMX_EXPORTER_VERSION}.jar\" | sha1sum -c - \\\n && rm \"jmx_prometheus_javaagent-${JMX_EXPORTER_VERSION}.jar.sha1\" \\\n && ln -s \"/opt/jmx-exporter/jmx_prometheus_javaagent-${JMX_EXPORTER_VERSION}.jar\" \"/opt/jmx-exporter/jmx_prometheus_javaagent.jar\"\nCOPY assets/jmx-exporter-config.yaml /opt/jmx-exporter/etc/\n#  #########################################################\n#  # Run Image                                             #\n#  #########################################################\nFROM openjdk:8-jre-alpine\nLABEL maintainer=\"Victor Romero <victor.romero@gmail.com>\"\nARG ACTIVEMQ_ARTEMIS_VERSION\nENV ACTIVEMQ_ARTEMIS_VERSION=\"$ACTIVEMQ_ARTEMIS_VERSION\"\n#   add user and group for artemis\nRUN addgroup -g 1000 -S artemis \\\n && adduser -u 1000 -S -G artemis artemis\n#   Sadly this line is likely to fail every so often, see: https://medium.com/@stschindler/the-problem-with-docker-and-alpines-package-pinning-18346593e891\n#   Still versions are pinned to maintain some small level of https://reproducible-builds.org/\nRUN apk add libaio=0.3.111-r0 xmlstarlet=1.6.1-r0 jq=1.6-r0 dumb-init=1.2.2-r1 sed=4.5-r0 gettext=0.19.8.1-r4 --no-cache\nCOPY --from=builder \"/opt/apache-artemis-${ACTIVEMQ_ARTEMIS_VERSION}\" \"/opt/apache-artemis-${ACTIVEMQ_ARTEMIS_VERSION}\"\nCOPY --from=builder \"/var/lib/artemis\" \"/var/lib/artemis\"\nCOPY --from=builder \"/opt/jmx-exporter\" \"/opt/jmx-exporter\"\n#   To enable RESTORE_CONFIGURATION\nCOPY --from=builder \"/var/lib/artemis/etc\" \"/var/lib/artemis/etc-backup\"\nRUN ln -s \"/opt/apache-artemis-${ACTIVEMQ_ARTEMIS_VERSION}\" /opt/apache-artemis\nRUN chown -R artemis.artemis /var/lib/artemis\nRUN chown -R artemis.artemis /opt/jmx-exporter\nRUN mkdir -p /opt/assets\nCOPY assets/merge.xslt /opt/assets\nCOPY assets/enable-jmx.xml /opt/assets\n#   Web Server\nEXPOSE 8161/tcp\n#   JMX Exporter\nEXPOSE 9404/tcp\n#   Port for CORE,MQTT,AMQP,HORNETQ,STOMP,OPENWIRE\nEXPOSE 61616/tcp\n#   Port for HORNETQ,STOMP\nEXPOSE 5445/tcp\n#   Port for AMQP\nEXPOSE 5672/tcp\n#   Port for MQTT\nEXPOSE 1883/tcp\n#  Port for STOMP\nEXPOSE 61613/tcp\nWORKDIR /var/lib/artemis/bin\nUSER artemis\nRUN mkdir /var/lib/artemis/lock\n#   Expose some outstanding folders\nVOLUME [\"/var/lib/artemis/data\"]\nVOLUME [\"/var/lib/artemis/tmp\"]\nVOLUME [\"/var/lib/artemis/etc\"]\nVOLUME [\"/var/lib/artemis/etc-override\"]\nVOLUME [\"/var/lib/artemis/lock\"]\nCOPY assets/docker-entrypoint.sh /\nENTRYPOINT [\"/docker-entrypoint.sh\"]\nCMD [\"artemis-server\"]\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  ActiveMQ Artemis\n# #########################################################\n# # Build Image                                           #\n# #########################################################\nFROM openjdk:8u171-jdk-stretch AS builder\nLABEL maintainer=\"Victor Romero <victor.romero@gmail.com>\"\nARG ACTIVEMQ_ARTEMIS_VERSION\nARG ACTIVEMQ_DISTRIBUTION_URL\nENV JMX_EXPORTER_VERSION=\"0.3.1\"\nENV JGROUPS_KUBERNETES_VERSION=\"0.9.3\"\n#  add user and group for artemis\nRUN groupadd -r artemis \\\n && useradd -r -s /bin/false -g artemis artemis\nRUN apt-get update -qq -o=Dpkg::Use-Pty=0 \\\n && apt-get install --no-install-recommends libaio1=0.3.110-3 xmlstarlet=1.6.1-2 jq=1.5+dfsg-1.3 ca-certificates=20161130+nmu1+deb9u1 wget=1.18-5+deb9u2 -qq -o=Dpkg::Use-Pty=0 -y \\\n && rm -rf /var/lib/apt/lists/*\n#  Make sure pipes are considered to detemine success, see: https://github.com/hadolint/hadolint/wiki/DL4006\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\n#  Uncompress and validate\nWORKDIR /opt\nRUN if (echo \"${ACTIVEMQ_DISTRIBUTION_URL}\" | grep -Eq \".zip$\" ) ; then mkdir tmp \\\n && wget \"${ACTIVEMQ_DISTRIBUTION_URL}\" -P tmp/ \\\n && unzip -d tmp -q \"tmp/*.zip\" \\\n && rm -f tmp/*.zip \\\n && ls -l tmp/ \\\n && mv tmp/* ./apache-artemis-${ACTIVEMQ_ARTEMIS_VERSION} \\\n && ln -s \"/opt/apache-artemis-${ACTIVEMQ_ARTEMIS_VERSION}\" \"/opt/apache-artemis\" \\\n && rmdir tmp ; elif test -n \"${ACTIVEMQ_DISTRIBUTION_URL}\" ; then echo \"Only .zip format is supported when using ACTIVEMQ_DISTRIBUTION_URL\" \\\n && exit 2 ; else wget \"https://repository.apache.org/content/repositories/releases/org/apache/activemq/apache-artemis/${ACTIVEMQ_ARTEMIS_VERSION}/apache-artemis-${ACTIVEMQ_ARTEMIS_VERSION}-bin.tar.gz\" \\\n && wget \"https://repository.apache.org/content/repositories/releases/org/apache/activemq/apache-artemis/${ACTIVEMQ_ARTEMIS_VERSION}/apache-artemis-${ACTIVEMQ_ARTEMIS_VERSION}-bin.tar.gz.asc\" \\\n && wget \"http://apache.org/dist/activemq/KEYS\" \\\n && gpg --no-tty --import \"KEYS\" \\\n && gpg --no-tty \"apache-artemis-${ACTIVEMQ_ARTEMIS_VERSION}-bin.tar.gz.asc\" \\\n && tar xfz \"apache-artemis-${ACTIVEMQ_ARTEMIS_VERSION}-bin.tar.gz\" \\\n && ln -s \"/opt/apache-artemis-${ACTIVEMQ_ARTEMIS_VERSION}\" \"/opt/apache-artemis\" \\\n && rm -f \"apache-artemis-${ACTIVEMQ_ARTEMIS_VERSION}-bin.tar.gz\" \"KEYS\" \"apache-artemis-${ACTIVEMQ_ARTEMIS_VERSION}-bin.tar.gz.asc\" ; fi\n#  Create broker instance\n#  Per recommendation of https://activemq.apache.org/artemis/docs/latest/perf-tuning.html : -XX:+AggressiveOpts -XX:+UseFastAccessorMethods -XX:+UseParallelOldGC \nWORKDIR /var/lib\nRUN if test \"${ACTIVEMQ_ARTEMIS_VERSION}\" = \"1.0.0\" ; then echo n | \"/opt/apache-artemis-${ACTIVEMQ_ARTEMIS_VERSION}/bin/artemis\" create artemis --home /opt/apache-artemis --user artemis --password simetraehcapa --cluster-user artemisCluster --cluster-password simetraehcaparetsulc ; else \"/opt/apache-artemis-${ACTIVEMQ_ARTEMIS_VERSION}/bin/artemis\" create artemis --home /opt/apache-artemis --user artemis --password simetraehcapa --role amq --require-login --cluster-user artemisCluster --cluster-password simetraehcaparetsulc ; fi\n#  Using KUBE_PING 0.9.3. Can't upgrade to 1.x.x as Artemis uses JGroups 3.3.x \n#  https://github.com/jgroups-extras/jgroups-kubernetes/issues/30\nWORKDIR /opt/jgroupskubernetes\nRUN wget -O ivy-2.4.0.jar http://search.maven.org/remotecontent?filepath=org/apache/ivy/ivy/2.4.0/ivy-2.4.0.jar \\\n && java -jar ivy-2.4.0.jar -dependency org.jgroups.kubernetes kubernetes \"${JGROUPS_KUBERNETES_VERSION}\" -retrieve \"[artifact]-[revision](-[classifier]).[ext]\" -types jar \\\n && java -jar ivy-2.4.0.jar -dependency org.jgroups.kubernetes dns \"${JGROUPS_KUBERNETES_VERSION}\" -retrieve \"[artifact]-[revision](-[classifier]).[ext]\" -types jar \\\n && rm ivy-2.4.0.jar\nWORKDIR /var/lib/artemis/etc\n#  --java-options doesn't seem to work across the board on all versions adding them manually\nRUN sed -i \"s/JAVA_ARGS=\\\"/JAVA_ARGS=\\\"-Djava.net.preferIPv4Addresses=true -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -XX:MaxRAMFraction=2 /g\" ../etc/artemis.profile\n#  Ports are only exposed with an explicit argument, there is no need to binding\n#  the web console to localhost\nRUN xmlstarlet ed -L -N amq=\"http://activemq.org/schema\" -u \"/amq:broker/amq:web/@bind\" -v \"http://0.0.0.0:8161\" bootstrap.xml\n#  In a similar fashion the jolokia access is restricted to localhost only. Disabling\n#  this as in the natural environmnets for the image like Kubernetes this is problematic.\nRUN if (echo \"${ACTIVEMQ_ARTEMIS_VERSION}\" | grep -Eq \"(2.[^0-3]\\.[0-9]|[^1-2]\\.[0-9]\\.[0-9]+)\" ) ; then xmlstarlet ed --inplace --subnode \"/restrict\" --type elem -n \"remote\" jolokia-access.xml \\\n && xmlstarlet ed --inplace --subnode \"/restrict/remote\" --type elem -n host -v \"0.0.0.0/0\" jolokia-access.xml ; fi\n#  Remove default values for memory in artemis profile in order to let the automatic\n#  Java ergonomics detection work https://docs.oracle.com/javase/8/docs/technotes/guides/vm/gctuning/ergonomics.html\nRUN sed -i \"s/-Xm[xs][^ \\\"]*//g\" ../etc/artemis.profile\n#  For the casual run of the image make the docker-entrypoint-sh think \n#  that the performance journal calibration is already completed\nRUN if (echo \"${ACTIVEMQ_ARTEMIS_VERSION}\" | grep -Eq \"(1.5\\.[3-5]|[^1]\\.[0-9]\\.[0-9]+)\" ) ; then touch /var/lib/artemis/data/.perf-journal-completed ; fi\nWORKDIR /opt/jmx-exporter\nRUN wget \"https://repo1.maven.org/maven2/io/prometheus/jmx/jmx_prometheus_javaagent/${JMX_EXPORTER_VERSION}/jmx_prometheus_javaagent-${JMX_EXPORTER_VERSION}.jar\" \\\n && wget \"https://repo1.maven.org/maven2/io/prometheus/jmx/jmx_prometheus_javaagent/${JMX_EXPORTER_VERSION}/jmx_prometheus_javaagent-${JMX_EXPORTER_VERSION}.jar.sha1\" \\\n && echo \"$( cat \"jmx_prometheus_javaagent-${JMX_EXPORTER_VERSION}.jar.sha1\" ;)\" \"jmx_prometheus_javaagent-${JMX_EXPORTER_VERSION}.jar\" | sha1sum -c - \\\n && rm \"jmx_prometheus_javaagent-${JMX_EXPORTER_VERSION}.jar.sha1\" \\\n && ln -s \"/opt/jmx-exporter/jmx_prometheus_javaagent-${JMX_EXPORTER_VERSION}.jar\" \"/opt/jmx-exporter/jmx_prometheus_javaagent.jar\"\nCOPY assets/jmx-exporter-config.yaml /opt/jmx-exporter/etc/\n# #########################################################\n# # Run Image                                             #\n# #########################################################\nFROM openjdk:8-jre-alpine\nLABEL maintainer=\"Victor Romero <victor.romero@gmail.com>\"\nARG ACTIVEMQ_ARTEMIS_VERSION\nENV ACTIVEMQ_ARTEMIS_VERSION=\"$ACTIVEMQ_ARTEMIS_VERSION\"\n#  add user and group for artemis\nRUN addgroup -g 1000 -S artemis \\\n && adduser -u 1000 -S -G artemis artemis\n#  Sadly this line is likely to fail every so often, see: https://medium.com/@stschindler/the-problem-with-docker-and-alpines-package-pinning-18346593e891\n#  Still versions are pinned to maintain some small level of https://reproducible-builds.org/\nRUN apk add --no-cache libaio=0.3.111-r0 xmlstarlet=1.6.1-r0 jq=1.6-r0 dumb-init=1.2.2-r1 sed=4.5-r0 gettext=0.19.8.1-r4\nCOPY --from=builder \"/opt/apache-artemis-${ACTIVEMQ_ARTEMIS_VERSION}\" \"/opt/apache-artemis-${ACTIVEMQ_ARTEMIS_VERSION}\"\nCOPY --from=builder \"/var/lib/artemis\" \"/var/lib/artemis\"\nCOPY --from=builder \"/opt/jmx-exporter\" \"/opt/jmx-exporter\"\n#  To enable RESTORE_CONFIGURATION\nCOPY --from=builder \"/var/lib/artemis/etc\" \"/var/lib/artemis/etc-backup\"\nRUN ln -s \"/opt/apache-artemis-${ACTIVEMQ_ARTEMIS_VERSION}\" /opt/apache-artemis\nRUN chown -R artemis.artemis /var/lib/artemis\nRUN chown -R artemis.artemis /opt/jmx-exporter\nRUN mkdir -p /opt/assets\nCOPY assets/merge.xslt /opt/assets\nCOPY assets/enable-jmx.xml /opt/assets\n#  Web Server\nEXPOSE 8161/tcp\n#  JMX Exporter\nEXPOSE 9404/tcp\n#  Port for CORE,MQTT,AMQP,HORNETQ,STOMP,OPENWIRE\nEXPOSE 61616/tcp\n#  Port for HORNETQ,STOMP\nEXPOSE 5445/tcp\n#  Port for AMQP\nEXPOSE 5672/tcp\n#  Port for MQTT\nEXPOSE 1883/tcp\n# Port for STOMP\nEXPOSE 61613/tcp\nWORKDIR /var/lib/artemis/bin\nUSER artemis\nRUN mkdir /var/lib/artemis/lock\n#  Expose some outstanding folders\nVOLUME [\"/var/lib/artemis/data\"]\nVOLUME [\"/var/lib/artemis/tmp\"]\nVOLUME [\"/var/lib/artemis/etc\"]\nVOLUME [\"/var/lib/artemis/etc-override\"]\nVOLUME [\"/var/lib/artemis/lock\"]\nCOPY assets/docker-entrypoint.sh /\nENTRYPOINT [\"/docker-entrypoint.sh\"]\nCMD [\"artemis-server\"]\n","injectedSmells":[],"originalDockerfileHash":"50d38bdeba6a30823610af28b9f31339","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   ActiveMQ Artemis\n#  #########################################################\n#  # Build Image                                           #\n#  #########################################################\nFROM openjdk:8u171-jdk-stretch AS builder\nLABEL maintainer=\"Victor Romero <victor.romero@gmail.com>\"\nARG ACTIVEMQ_ARTEMIS_VERSION\nARG ACTIVEMQ_DISTRIBUTION_URL\nENV JMX_EXPORTER_VERSION=\"0.3.1\"\nENV JGROUPS_KUBERNETES_VERSION=\"0.9.3\"\n#   add user and group for artemis\nRUN groupadd -r artemis \\\n && useradd -r -s /bin/false -g artemis artemis\nRUN apt-get update -qq -o=Dpkg::Use-Pty=0 \\\n && apt-get install --no-install-recommends libaio1=0.3.110-3 xmlstarlet=1.6.1-2 jq=1.5+dfsg-1.3 ca-certificates=20161130+nmu1+deb9u1 wget=1.18-5+deb9u2 -qq -o=Dpkg::Use-Pty=0 -y \\\n && rm -rf /var/lib/apt/lists/*\n#   Make sure pipes are considered to detemine success, see: https://github.com/hadolint/hadolint/wiki/DL4006\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\n#   Uncompress and validate\nWORKDIR /opt\nRUN if (echo \"${ACTIVEMQ_DISTRIBUTION_URL}\" | grep -Eq \".zip$\" ) ; then mkdir tmp \\\n && wget \"${ACTIVEMQ_DISTRIBUTION_URL}\" -P tmp/ \\\n && unzip -d tmp -q \"tmp/*.zip\" \\\n && rm -f tmp/*.zip \\\n && ls -l tmp/ \\\n && mv tmp/* ./apache-artemis-${ACTIVEMQ_ARTEMIS_VERSION} \\\n && ln -s \"/opt/apache-artemis-${ACTIVEMQ_ARTEMIS_VERSION}\" \"/opt/apache-artemis\" \\\n && rmdir tmp ; elif test -n \"${ACTIVEMQ_DISTRIBUTION_URL}\" ; then echo \"Only .zip format is supported when using ACTIVEMQ_DISTRIBUTION_URL\" \\\n && exit 2 ; else wget \"https://repository.apache.org/content/repositories/releases/org/apache/activemq/apache-artemis/${ACTIVEMQ_ARTEMIS_VERSION}/apache-artemis-${ACTIVEMQ_ARTEMIS_VERSION}-bin.tar.gz\" \\\n && wget \"https://repository.apache.org/content/repositories/releases/org/apache/activemq/apache-artemis/${ACTIVEMQ_ARTEMIS_VERSION}/apache-artemis-${ACTIVEMQ_ARTEMIS_VERSION}-bin.tar.gz.asc\" \\\n && wget \"http://apache.org/dist/activemq/KEYS\" \\\n && gpg --no-tty --import \"KEYS\" \\\n && gpg --no-tty \"apache-artemis-${ACTIVEMQ_ARTEMIS_VERSION}-bin.tar.gz.asc\" \\\n && tar xfz \"apache-artemis-${ACTIVEMQ_ARTEMIS_VERSION}-bin.tar.gz\" \\\n && ln -s \"/opt/apache-artemis-${ACTIVEMQ_ARTEMIS_VERSION}\" \"/opt/apache-artemis\" \\\n && rm -f \"apache-artemis-${ACTIVEMQ_ARTEMIS_VERSION}-bin.tar.gz\" \"KEYS\" \"apache-artemis-${ACTIVEMQ_ARTEMIS_VERSION}-bin.tar.gz.asc\" ; fi\n#   Create broker instance\n#   Per recommendation of https://activemq.apache.org/artemis/docs/latest/perf-tuning.html : -XX:+AggressiveOpts -XX:+UseFastAccessorMethods -XX:+UseParallelOldGC \nWORKDIR /var/lib\nRUN if test \"${ACTIVEMQ_ARTEMIS_VERSION}\" = \"1.0.0\" ; then echo n | \"/opt/apache-artemis-${ACTIVEMQ_ARTEMIS_VERSION}/bin/artemis\" create artemis --home /opt/apache-artemis --user artemis --password simetraehcapa --cluster-user artemisCluster --cluster-password simetraehcaparetsulc ; else \"/opt/apache-artemis-${ACTIVEMQ_ARTEMIS_VERSION}/bin/artemis\" create artemis --home /opt/apache-artemis --user artemis --password simetraehcapa --role amq --require-login --cluster-user artemisCluster --cluster-password simetraehcaparetsulc ; fi\n#   Using KUBE_PING 0.9.3. Can't upgrade to 1.x.x as Artemis uses JGroups 3.3.x \n#   https://github.com/jgroups-extras/jgroups-kubernetes/issues/30\nWORKDIR /opt/jgroupskubernetes\nRUN wget -O ivy-2.4.0.jar http://search.maven.org/remotecontent?filepath=org/apache/ivy/ivy/2.4.0/ivy-2.4.0.jar \\\n && java -jar ivy-2.4.0.jar -dependency org.jgroups.kubernetes kubernetes \"${JGROUPS_KUBERNETES_VERSION}\" -retrieve \"[artifact]-[revision](-[classifier]).[ext]\" -types jar \\\n && java -jar ivy-2.4.0.jar -dependency org.jgroups.kubernetes dns \"${JGROUPS_KUBERNETES_VERSION}\" -retrieve \"[artifact]-[revision](-[classifier]).[ext]\" -types jar \\\n && rm ivy-2.4.0.jar\nWORKDIR /var/lib/artemis/etc\n#   --java-options doesn't seem to work across the board on all versions adding them manually\nRUN sed -i \"s/JAVA_ARGS=\\\"/JAVA_ARGS=\\\"-Djava.net.preferIPv4Addresses=true -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -XX:MaxRAMFraction=2 /g\" ../etc/artemis.profile\n#   Ports are only exposed with an explicit argument, there is no need to binding\n#   the web console to localhost\nRUN xmlstarlet ed -L -N amq=\"http://activemq.org/schema\" -u \"/amq:broker/amq:web/@bind\" -v \"http://0.0.0.0:8161\" bootstrap.xml\n#   In a similar fashion the jolokia access is restricted to localhost only. Disabling\n#   this as in the natural environmnets for the image like Kubernetes this is problematic.\nRUN if (echo \"${ACTIVEMQ_ARTEMIS_VERSION}\" | grep -Eq \"(2.[^0-3]\\.[0-9]|[^1-2]\\.[0-9]\\.[0-9]+)\" ) ; then xmlstarlet ed --inplace --subnode \"/restrict\" --type elem -n \"remote\" jolokia-access.xml \\\n && xmlstarlet ed --inplace --subnode \"/restrict/remote\" --type elem -n host -v \"0.0.0.0/0\" jolokia-access.xml ; fi\n#   Remove default values for memory in artemis profile in order to let the automatic\n#   Java ergonomics detection work https://docs.oracle.com/javase/8/docs/technotes/guides/vm/gctuning/ergonomics.html\nRUN sed -i \"s/-Xm[xs][^ \\\"]*//g\" ../etc/artemis.profile\n#   For the casual run of the image make the docker-entrypoint-sh think \n#   that the performance journal calibration is already completed\nRUN if (echo \"${ACTIVEMQ_ARTEMIS_VERSION}\" | grep -Eq \"(1.5\\.[3-5]|[^1]\\.[0-9]\\.[0-9]+)\" ) ; then touch /var/lib/artemis/data/.perf-journal-completed ; fi\nWORKDIR /opt/jmx-exporter\nRUN wget \"https://repo1.maven.org/maven2/io/prometheus/jmx/jmx_prometheus_javaagent/${JMX_EXPORTER_VERSION}/jmx_prometheus_javaagent-${JMX_EXPORTER_VERSION}.jar\" \\\n && wget \"https://repo1.maven.org/maven2/io/prometheus/jmx/jmx_prometheus_javaagent/${JMX_EXPORTER_VERSION}/jmx_prometheus_javaagent-${JMX_EXPORTER_VERSION}.jar.sha1\" \\\n && echo \"$( cat \"jmx_prometheus_javaagent-${JMX_EXPORTER_VERSION}.jar.sha1\" ;)\" \"jmx_prometheus_javaagent-${JMX_EXPORTER_VERSION}.jar\" | sha1sum -c - \\\n && rm \"jmx_prometheus_javaagent-${JMX_EXPORTER_VERSION}.jar.sha1\" \\\n && ln -s \"/opt/jmx-exporter/jmx_prometheus_javaagent-${JMX_EXPORTER_VERSION}.jar\" \"/opt/jmx-exporter/jmx_prometheus_javaagent.jar\"\nCOPY assets/jmx-exporter-config.yaml /opt/jmx-exporter/etc/\n#  #########################################################\n#  # Run Image                                             #\n#  #########################################################\nFROM openjdk:8-jre-alpine\nLABEL maintainer=\"Victor Romero <victor.romero@gmail.com>\"\nARG ACTIVEMQ_ARTEMIS_VERSION\nENV ACTIVEMQ_ARTEMIS_VERSION=\"$ACTIVEMQ_ARTEMIS_VERSION\"\n#   add user and group for artemis\nRUN addgroup -g 1000 -S artemis \\\n && adduser -u 1000 -S -G artemis artemis\n#   Sadly this line is likely to fail every so often, see: https://medium.com/@stschindler/the-problem-with-docker-and-alpines-package-pinning-18346593e891\n#   Still versions are pinned to maintain some small level of https://reproducible-builds.org/\nRUN apk add --no-cache libaio=0.3.111-r0 xmlstarlet=1.6.1-r0 jq=1.6-r0 dumb-init=1.2.2-r1 sed=4.5-r0 gettext=0.19.8.1-r4\nCOPY --from=builder \"/opt/apache-artemis-${ACTIVEMQ_ARTEMIS_VERSION}\" \"/opt/apache-artemis-${ACTIVEMQ_ARTEMIS_VERSION}\"\nCOPY --from=builder \"/var/lib/artemis\" \"/var/lib/artemis\"\nCOPY --from=builder \"/opt/jmx-exporter\" \"/opt/jmx-exporter\"\n#   To enable RESTORE_CONFIGURATION\nCOPY --from=builder \"/var/lib/artemis/etc\" \"/var/lib/artemis/etc-backup\"\nRUN ln -s \"/opt/apache-artemis-${ACTIVEMQ_ARTEMIS_VERSION}\" /opt/apache-artemis\nRUN chown -R artemis.artemis /var/lib/artemis\nRUN chown -R artemis.artemis /opt/jmx-exporter\nRUN mkdir -p /opt/assets\nCOPY assets/merge.xslt /opt/assets\nCOPY assets/enable-jmx.xml /opt/assets\n#   Web Server\nEXPOSE 8161/tcp\n#   JMX Exporter\nEXPOSE 9404/tcp\n#   Port for CORE,MQTT,AMQP,HORNETQ,STOMP,OPENWIRE\nEXPOSE 61616/tcp\n#   Port for HORNETQ,STOMP\nEXPOSE 5445/tcp\n#   Port for AMQP\nEXPOSE 5672/tcp\n#   Port for MQTT\nEXPOSE 1883/tcp\n#  Port for STOMP\nEXPOSE 61613/tcp\nWORKDIR /var/lib/artemis/bin\nUSER artemis\nRUN mkdir /var/lib/artemis/lock\n#   Expose some outstanding folders\nVOLUME [\"/var/lib/artemis/data\"]\nVOLUME [\"/var/lib/artemis/tmp\"]\nVOLUME [\"/var/lib/artemis/etc\"]\nVOLUME [\"/var/lib/artemis/etc-override\"]\nVOLUME [\"/var/lib/artemis/lock\"]\nCOPY assets/docker-entrypoint.sh /\nENTRYPOINT [\"/docker-entrypoint.sh\"]\nCMD [\"artemis-server\"]\n","originalDockerfileUglifiedHash":"b16b300a6cf81b69c48832c26d6690a0","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/83e82bec0fa1b69e958f9fc7d0aef4514ed39454.dockerfile"}