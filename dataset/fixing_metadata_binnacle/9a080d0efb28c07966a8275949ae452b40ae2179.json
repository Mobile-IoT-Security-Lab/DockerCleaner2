{"seed":1986815382,"processedDockerfileHash":"4b665861e7790d916d21fe6000df90af","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Copyright 2015 gRPC authors.\n#\n#   Licensed under the Apache License, Version 2.0 (the \"License\");\n#   you may not use this file except in compliance with the License.\n#   You may obtain a copy of the License at\n#\n#       http://www.apache.org/licenses/LICENSE-2.0\n#\n#   Unless required by applicable law or agreed to in writing, software\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#   See the License for the specific language governing permissions and\n#   limitations under the License.\nFROM debian:stretch\n#   Install Git and basic packages.\nRUN apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends autoconf=2.69-10 autotools-dev=20161112.1 build-essential=12.3 bzip2=1.0.6-8.1 ccache=3.3.4-1 curl=7.52.1-5+deb9u16 dnsutils=1:9.10.3.dfsg.P4-12.3+deb9u12 gcc=4:6.3.0-4 gcc-multilib=4:6.3.0-4 git=1:2.11.0-3+deb9u7 golang=2:1.7~5 gyp=0.1+20150913git1f374df9-1 lcov=1.13-1 libc6=2.24-11+deb9u4 libc6-dbg=2.24-11+deb9u4 libc6-dev=2.24-11+deb9u4 libgtest-dev=1.8.0-6 libtool=2.4.6-2 make=4.1-9.1 perl=5.24.1-3+deb9u7 strace=4.15-2 python-dev=2.7.13-2 python-setuptools=33.1.1-1 python-yaml=3.12-1 telnet=0.17-41 unzip=6.0-21+deb9u2 wget=1.18-5+deb9u3 zip=3.0-11+b1 -y ) \\\n && apt-get clean\n#  ================\n#   Build profiling\nRUN apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends time=1.7-25.1+b1 -y ) \\\n && apt-get clean\n#   Google Cloud platform API libraries\nRUN apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends python-pip=9.0.1-2+deb9u2 -y ) \\\n && apt-get clean\nRUN pip install google-api-python-client==2.85.0 oauth2client==4.1.3 --upgrade\n#   Install Python 2.7\nRUN apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends python2.7=2.7.13-2+deb9u6 python-all-dev=2.7.13-2 -y )\nRUN curl https://bootstrap.pypa.io/get-pip.py | python2.7\n#   Add Debian 'testing' repository\nRUN echo 'deb http://ftp.de.debian.org/debian testing main' >> /etc/apt/sources.list\nRUN echo 'APT::Default-Release \"stable\";' | tee -a /etc/apt/apt.conf.d/00local\nRUN mkdir /var/local/jenkins\n#   Define the default command.\nCMD [\"bash\"]\n#  =================\n#   C++ dependencies\nRUN apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends libgflags-dev=2.1.2-4 libgtest-dev=1.8.0-6 libc++-dev=3.5-2 clang=1:3.8-36 -y ) \\\n && apt-get clean\n#  ========================\n#   Sanity test dependencies\nRUN : \\\n && apt-get -t testing install -y python3.7 python3-all-dev\nRUN curl https://bootstrap.pypa.io/get-pip.py | python3.7\n#   Make Python 3.7 the default Python 3 version\nRUN update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.7 1\nRUN apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends autoconf=2.69-10 automake=1:1.15-6 libtool=2.4.6-2 curl=7.52.1-5+deb9u16 shellcheck=0.4.4-4 -y )\nRUN python2 -m pip install simplejson mako virtualenv lxml\nRUN python3 -m pip install simplejson mako virtualenv lxml\nRUN apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends wget=1.18-5+deb9u3 xz-utils=5.2.2-1.2+deb9u1 -y )\nRUN wget http://releases.llvm.org/5.0.0/clang+llvm-5.0.0-linux-x86_64-ubuntu14.04.tar.xz\nRUN tar xf clang+llvm-5.0.0-linux-x86_64-ubuntu14.04.tar.xz\nRUN ln -s /clang+llvm-5.0.0-linux-x86_64-ubuntu14.04/bin/clang-format /usr/local/bin/clang-format\nENV CLANG_FORMAT=\"clang-format\"\nRUN ln -s /clang+llvm-5.0.0-linux-x86_64-ubuntu14.04/bin/clang-tidy /usr/local/bin/clang-tidy\nENV CLANG_TIDY=\"clang-tidy\"\n#  ========================\n#   Bazel installation\n#   Must be in sync with tools/bazel\nENV BAZEL_VERSION=\"0.26.0\"\n#   The correct bazel version is already preinstalled, no need to use //tools/bazel wrapper.\nENV DISABLE_BAZEL_WRAPPER=\"1\"\nRUN apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends wget=1.18-5+deb9u3 -y ) \\\n && apt-get clean\nRUN wget \"https://github.com/bazelbuild/bazel/releases/download/$BAZEL_VERSION/bazel-$BAZEL_VERSION-installer-linux-x86_64.sh\" \\\n && bash ./bazel-$BAZEL_VERSION-installer-linux-x86_64.sh \\\n && rm bazel-$BAZEL_VERSION-installer-linux-x86_64.sh\n#   Define the default command.\nCMD [\"bash\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Copyright 2015 gRPC authors.\n#\n#  Licensed under the Apache License, Version 2.0 (the \"License\");\n#  you may not use this file except in compliance with the License.\n#  You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n#  Unless required by applicable law or agreed to in writing, software\n#  distributed under the License is distributed on an \"AS IS\" BASIS,\n#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#  See the License for the specific language governing permissions and\n#  limitations under the License.\nFROM debian:stretch\n#  Install Git and basic packages.\nRUN apt-get update \\\n && apt-get install autoconf autotools-dev build-essential bzip2 ccache curl dnsutils gcc gcc-multilib git golang gyp lcov libc6 libc6-dbg libc6-dev libgtest-dev libtool make perl strace python-dev python-setuptools python-yaml telnet unzip wget zip -y \\\n && apt-get clean\n# ================\n#  Build profiling\nRUN apt-get update \\\n && apt-get install time -y \\\n && apt-get clean\n#  Google Cloud platform API libraries\nRUN apt-get update \\\n && apt-get install python-pip -y \\\n && apt-get clean\nRUN pip install google-api-python-client oauth2client --upgrade\n#  Install Python 2.7\nRUN apt-get update \\\n && apt-get install python2.7 python-all-dev -y\nRUN curl https://bootstrap.pypa.io/get-pip.py | python2.7\n#  Add Debian 'testing' repository\nRUN echo 'deb http://ftp.de.debian.org/debian testing main' >> /etc/apt/sources.list\nRUN echo 'APT::Default-Release \"stable\";' | tee -a /etc/apt/apt.conf.d/00local\nRUN mkdir /var/local/jenkins\n#  Define the default command.\nCMD [\"bash\"]\n# =================\n#  C++ dependencies\nRUN apt-get update \\\n && apt-get install libgflags-dev libgtest-dev libc++-dev clang -y \\\n && apt-get clean\n# ========================\n#  Sanity test dependencies\nRUN apt-get update \\\n && apt-get -t testing install -y python3.7 python3-all-dev\nRUN curl https://bootstrap.pypa.io/get-pip.py | python3.7\n#  Make Python 3.7 the default Python 3 version\nRUN update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.7 1\nRUN apt-get update \\\n && apt-get install autoconf automake libtool curl shellcheck -y\nRUN python2 -m pip install simplejson mako virtualenv lxml\nRUN python3 -m pip install simplejson mako virtualenv lxml\nRUN apt-get update \\\n && apt-get install wget xz-utils -y\nRUN wget http://releases.llvm.org/5.0.0/clang+llvm-5.0.0-linux-x86_64-ubuntu14.04.tar.xz\nRUN tar xf clang+llvm-5.0.0-linux-x86_64-ubuntu14.04.tar.xz\nRUN ln -s /clang+llvm-5.0.0-linux-x86_64-ubuntu14.04/bin/clang-format /usr/local/bin/clang-format\nENV CLANG_FORMAT=\"clang-format\"\nRUN ln -s /clang+llvm-5.0.0-linux-x86_64-ubuntu14.04/bin/clang-tidy /usr/local/bin/clang-tidy\nENV CLANG_TIDY=\"clang-tidy\"\n# ========================\n#  Bazel installation\n#  Must be in sync with tools/bazel\nENV BAZEL_VERSION=\"0.26.0\"\n#  The correct bazel version is already preinstalled, no need to use //tools/bazel wrapper.\nENV DISABLE_BAZEL_WRAPPER=\"1\"\nRUN apt-get update \\\n && apt-get install wget -y \\\n && apt-get clean\nRUN wget \"https://github.com/bazelbuild/bazel/releases/download/$BAZEL_VERSION/bazel-$BAZEL_VERSION-installer-linux-x86_64.sh\" \\\n && bash ./bazel-$BAZEL_VERSION-installer-linux-x86_64.sh \\\n && rm bazel-$BAZEL_VERSION-installer-linux-x86_64.sh\n#  Define the default command.\nCMD [\"bash\"]\n","injectedSmells":[],"originalDockerfileHash":"34b286ac557e3b95fb8efcb9766c6596","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Copyright 2015 gRPC authors.\n#\n#   Licensed under the Apache License, Version 2.0 (the \"License\");\n#   you may not use this file except in compliance with the License.\n#   You may obtain a copy of the License at\n#\n#       http://www.apache.org/licenses/LICENSE-2.0\n#\n#   Unless required by applicable law or agreed to in writing, software\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#   See the License for the specific language governing permissions and\n#   limitations under the License.\nFROM debian:stretch\n#   Install Git and basic packages.\nRUN apt-get update \\\n && apt-get install autoconf autotools-dev build-essential bzip2 ccache curl dnsutils gcc gcc-multilib git golang gyp lcov libc6 libc6-dbg libc6-dev libgtest-dev libtool make perl strace python-dev python-setuptools python-yaml telnet unzip wget zip -y \\\n && apt-get clean\n#  ================\n#   Build profiling\nRUN apt-get update \\\n && apt-get install time -y \\\n && apt-get clean\n#   Google Cloud platform API libraries\nRUN apt-get update \\\n && apt-get install python-pip -y \\\n && apt-get clean\nRUN pip install google-api-python-client oauth2client --upgrade\n#   Install Python 2.7\nRUN apt-get update \\\n && apt-get install python2.7 python-all-dev -y\nRUN curl https://bootstrap.pypa.io/get-pip.py | python2.7\n#   Add Debian 'testing' repository\nRUN echo 'deb http://ftp.de.debian.org/debian testing main' >> /etc/apt/sources.list\nRUN echo 'APT::Default-Release \"stable\";' | tee -a /etc/apt/apt.conf.d/00local\nRUN mkdir /var/local/jenkins\n#   Define the default command.\nCMD [\"bash\"]\n#  =================\n#   C++ dependencies\nRUN apt-get update \\\n && apt-get install libgflags-dev libgtest-dev libc++-dev clang -y \\\n && apt-get clean\n#  ========================\n#   Sanity test dependencies\nRUN apt-get update \\\n && apt-get -t testing install -y python3.7 python3-all-dev\nRUN curl https://bootstrap.pypa.io/get-pip.py | python3.7\n#   Make Python 3.7 the default Python 3 version\nRUN update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.7 1\nRUN apt-get update \\\n && apt-get install autoconf automake libtool curl shellcheck -y\nRUN python2 -m pip install simplejson mako virtualenv lxml\nRUN python3 -m pip install simplejson mako virtualenv lxml\nRUN apt-get update \\\n && apt-get install wget xz-utils -y\nRUN wget http://releases.llvm.org/5.0.0/clang+llvm-5.0.0-linux-x86_64-ubuntu14.04.tar.xz\nRUN tar xf clang+llvm-5.0.0-linux-x86_64-ubuntu14.04.tar.xz\nRUN ln -s /clang+llvm-5.0.0-linux-x86_64-ubuntu14.04/bin/clang-format /usr/local/bin/clang-format\nENV CLANG_FORMAT=\"clang-format\"\nRUN ln -s /clang+llvm-5.0.0-linux-x86_64-ubuntu14.04/bin/clang-tidy /usr/local/bin/clang-tidy\nENV CLANG_TIDY=\"clang-tidy\"\n#  ========================\n#   Bazel installation\n#   Must be in sync with tools/bazel\nENV BAZEL_VERSION=\"0.26.0\"\n#   The correct bazel version is already preinstalled, no need to use //tools/bazel wrapper.\nENV DISABLE_BAZEL_WRAPPER=\"1\"\nRUN apt-get update \\\n && apt-get install wget -y \\\n && apt-get clean\nRUN wget \"https://github.com/bazelbuild/bazel/releases/download/$BAZEL_VERSION/bazel-$BAZEL_VERSION-installer-linux-x86_64.sh\" \\\n && bash ./bazel-$BAZEL_VERSION-installer-linux-x86_64.sh \\\n && rm bazel-$BAZEL_VERSION-installer-linux-x86_64.sh\n#   Define the default command.\nCMD [\"bash\"]\n","originalDockerfileUglifiedHash":"2190f3f8d8b201277bd4dad1249800de","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/9a080d0efb28c07966a8275949ae452b40ae2179.dockerfile"}