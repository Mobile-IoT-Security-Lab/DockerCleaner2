{"seed":4154247581,"processedDockerfileHash":"45955b447cf8cd6b4562e6a92c4c50c5","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM ubuntu:14.04.5\nMAINTAINER Cloud9 IDE, inc. <info@c9.io>\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#   increment version to force flushing the cache\nRUN echo \"Version 1.13\"\n#   Set mirrors to automatic based off location\nRUN :\nRUN (apt-get update ;apt-get install --no-install-recommends curl=7.35.0-1ubuntu2.20 -y )\nCOPY files/auto-sources.sh /var/tmp/auto-sources.sh\n#  RUN bash /var/tmp/auto-sources.sh && rm /var/tmp/auto-sources.sh\n#   Install add-apt-repository script\nRUN (apt-get update ;apt-get install --no-install-recommends software-properties-common=0.92.37.8 apt-transport-https=1.0.1ubuntu2.24 -y )\n#   Add a recent version of git\nRUN add-apt-repository -y ppa:git-core/ppa\n#   32-bit support\nRUN dpkg --add-architecture i386 \\\n && apt-get update --fix-missing \\\n && (apt-get update ;apt-get install --no-install-recommends libc6:i386 libncurses5:i386 libstdc++6:i386 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends bash=4.3-7ubuntu1.7 console-setup=1.70ubuntu8 sudo=1.8.9p5-1ubuntu1.4 wget=1.15-1ubuntu1.14.04.5 curl=7.35.0-1ubuntu2.20 git=1:1.9.1-1ubuntu0.10 python=2.7.5-5ubuntu3 python-pip=1.5.4-1ubuntu4 python3=3.4.0-0ubuntu2 python3-pip=1.5.4-1ubuntu4 man-db=2.6.7.1-1ubuntu1 -y ) \\\n && echo \"install console-setup\" \\\n && echo \"console-setup console-setup/codeset47 select # Latin1 and Latin5 - western Europe and Turkic languages\" | debconf-set-selections \\\n && echo \"console-setup console-setup/fontface47 select Fixed\" | debconf-set-selections \\\n && echo \"console-setup console-setup/fontsize-text47 select 16\" | debconf-set-selections \\\n && echo \"console-setup console-setup/charmap47 select UTF-8\" | debconf-set-selections \\\n && echo \"keyboard-configuration console-setup/detect detect-keyboard\" | debconf-set-selections \\\n && echo \"keyboard-configuration console-setup/detected note\" | debconf-set-selections \\\n && echo \"console-setup console-setup/codesetcode string Lat15\" | debconf-set-selections \\\n && echo \"keyboard-configuration console-setup/ask_detect boolean false\" | debconf-set-selections \\\n && echo \"console-setup console-setup/store_defaults_in_debconf_db boolean true\" | debconf-set-selections \\\n && echo \"console-setup console-setup/fontsize-fb47 select 16\" | debconf-set-selections \\\n && echo \"console-setup console-setup/fontsize string 16\" | debconf-set-selections \\\n && echo \"Create user and enable root access\" \\\n && useradd --uid 1000 --shell /bin/bash -m --home-dir /home/ubuntu ubuntu \\\n && sed -i 's/%sudo\\s.*/%sudo ALL=NOPASSWD:ALL/' /etc/sudoers \\\n && usermod -a -G sudo ubuntu\n#   node.js and nvm\nUSER ubuntu\nRUN curl https://raw.githubusercontent.com/creationix/nvm/v0.31.0/install.sh | sh -e \\\n && echo '[ -s \"/home/ubuntu/.nvm/nvm.sh\" ] \\\n && . \"/home/ubuntu/.nvm/nvm.sh\" # This loads nvm' >> /home/ubuntu/.profile\nRUN bash -l -c \" nvm install 6 \\\n && nvm alias default 6 nvm use 6\"\n#   Disable progress bars by default: https://github.com/npm/npm/issues/11283\nRUN bash -l -c \"npm set progress=false\"\nUSER root\n#   Java\nRUN (apt-get update ;apt-get install --no-install-recommends openjdk-7-jre=7u211-2.6.17-0ubuntu0.1 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends ant=1.9.3-2ubuntu0.1 maven2=2.2.1-19 -y )\n#   editors\nRUN (apt-get update ;apt-get install --no-install-recommends nano=2.2.6-1ubuntu1 vim=2:7.4.052-1ubuntu3.1 vim-addon-manager=0.5.3 vim-vimoutliner=0.3.4+pristine-9.1 vim-doc=2:7.4.052-1ubuntu3.1 ctags indent=2.2.11-4 -y )\n#   servers\nRUN (apt-get update ;apt-get install --no-install-recommends redis-server=2:2.8.4-2ubuntu0.2 redis-tools=2:2.8.4-2ubuntu0.2 nginx=1.4.6-1ubuntu3.9 mysql-server=5.5.62-0ubuntu0.14.04.1 rabbitmq-server=3.2.4-1ubuntu0.1 couchdb=1.5.0-0ubuntu1 -y )\n#   Postgres\nRUN (apt-get update ;apt-get install --no-install-recommends postgresql-9.3=9.3.24-0ubuntu0.14.04 -y ) \\\n && /etc/init.d/postgresql start \\\n && sudo -u postgres createuser -srd ubuntu \\\n && sudo -u postgres psql -c \"create database ubuntu owner=ubuntu\"\n#   misc tools\nRUN (apt-get update ;apt-get install --no-install-recommends dnsutils=1:9.9.5.dfsg-3ubuntu0.19 bash-completion=1:2.1-4ubuntu0.2 xsltproc=1.1.28-2ubuntu0.2 build-essential=11.6ubuntu6 fakeroot=1.20-3ubuntu2 tmux=1.8-5 duplicity=0.6.23-1ubuntu4.1 lftp=4.4.13-1ubuntu0.1 htop=1.0.2-3 apt-file=2.5.2ubuntu1 parallel=20161222-1~ubuntu0.14.04.2 strace=4.8-1ubuntu5 ltrace=0.7.3-4ubuntu5.1 flex=2.5.35-10.1ubuntu2 jq=1.3-1.1ubuntu1.1 ack-grep=2.12-1 gdb=7.7.1-0ubuntu5~14.04.3 valgrind=1:3.10.1-1ubuntu3~14.5 locate=4.4.2-7 tree=1.6.0-1 time=1.7-24 zip=3.0-8 unp=2.0~pre7+nmu1 cmake=2.8.12.2-0ubuntu3 -y )\nRUN apt-file update\n#   Version control\nRUN (apt-get update ;apt-get install --no-install-recommends git-all=1:1.9.1-1ubuntu0.10 tig=1.2.1-1 subversion=1.8.8-1ubuntu3.3 subversion-tools=1.8.8-1ubuntu3.3 cvs=2:1.12.13+real-12ubuntu0.1 mercurial=2.8.2-1ubuntu1.4 bzr=2.6.0+bzr6593-1ubuntu1.6 bzrtools=2.6.0-1 git-svn=1:1.9.1-1ubuntu0.10 -y )\n#   libraries and headers\nRUN (apt-get update ;apt-get install --no-install-recommends libcairo2-dev=1.13.0~20140204-0ubuntu1.1 libjpeg62-dev=6b1-4ubuntu1 libgif-dev=4.1.6-11 libpq-dev=9.3.24-0ubuntu0.14.04 libboost-all-dev=1.54.0.1ubuntu1 libzmq-dev=2.2.0+dfsg-5 libwww-curl-perl=4.15-1build3 libbz2-dev=1.0.6-5 dpkg-dev=1.17.5ubuntu5.8 ruby1.9.1-dev=1.9.3.484-2ubuntu1.14 dialog=1.2-20130928-1 python-gtk2=2.24.0-3ubuntu3 libpango1.0 libpango1.0-dev=1.36.3-1ubuntu1.1 libmysqlclient-dev=5.5.62-0ubuntu0.14.04.1 -y )\n#   Enable repo for alternative python versions\nRUN yes | add-apt-repository ppa:fkrull/deadsnakes\n#   install ruby/rails/rvm\nCOPY ./files/etc/gemrc /etc/gemrc\nRUN (apt-get update ;apt-get install --no-install-recommends gawk=1:4.0.1+dfsg-2.1ubuntu2 libxml2-dev=2.9.1+dfsg1-3ubuntu4.13 libxslt-dev libgdbm-dev=1.8.3-12build1 libgmp-dev=2:5.1.3+dfsg-1ubuntu1 sqlite3=3.8.2-1ubuntu2.2 -y )\nRUN sudo -u ubuntu -i bash -l -c \" echo 'Installing rvm...' \\\n && gpg -q --keyserver hkp://pgp.mit.edu --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 \\\n && (curl -sSL https://get.rvm.io | sudo bash -s stable --autolibs=enabled) \" \\\n && usermod -a -G rvm ubuntu\nRUN sudo -u ubuntu -i bash -l -c \" echo 'Installing stable ruby version...' \\\n && rvm install ruby-2 \\\n && rvm use ruby-2 --default\"\n#   Deployment\n#   Can't include new npm since it makes \"npm install -g npm\" fail:\n#   sudo -u ubuntu -i bash -l -c \"npm install -g npm@3.3.6\" && \\\nRUN wget -qO- https://toolbelt.heroku.com/install-ubuntu.sh | sh -e\nRUN sudo -u ubuntu -i heroku --help\n#   /opt packages\nRUN curl https://storage.googleapis.com/golang/go1.8.3.linux-amd64.tar.gz | tar -C /opt -xz\nRUN git clone https://github.com/lennartcl/gitl.git /opt/gitl\n#   setup the system\nRUN echo -n \"\" > /etc/motd \\\n && echo \"export PATH=/bin:/usr/bin:/sbin:/usr/sbin:/usr/local/bin:/usr/local/sbin\" >> /root/.bashrc \\\n && sudo -i -u ubuntu HOME=/home/ubuntu bash -i /etc/bash_completion \\\n && HOME=/root bash -l /etc/bash_completion\n#   Install apache\nRUN (apt-get update ;apt-get install --no-install-recommends apache2=2.4.7-1ubuntu4.22 -y )\nCOPY ./files/etc /etc\nCOPY ./files/home /home\nCOPY ./files/gitignore /home/ubuntu/.gitignore\nRUN cp /home/ubuntu/.gitignore /home/ubuntu/.hgignore \\\n && mkdir -p /home/ubuntu/lib/apache2/lock /home/ubuntu/lib/apache2/log /home/ubuntu/lib/apache2/run \\\n && cd /home/ubuntu \\\n && mv ssh .ssh \\\n && chmod 700 .ssh \\\n && chown -R ubuntu: .bash* .gemrc lib .*ignore .ssh \\\n && chown ubuntu: .\nRUN echo \"Configure apache2\" \\\n && a2enmod rewrite \\\n && ln -s ../sites-available/001-cloud9.conf /etc/apache2/sites-enabled/001-cloud9.conf \\\n && sed -i 's/Listen 80\\b/Listen 8080/' /etc/apache2/ports.conf \\\n && sed -Ei 's/(.*)secure_path.*/\\1!secure_path/' /etc/sudoers \\\n && touch /etc/init.d/systemd-logind\nRUN echo \"Configure php\" \\\n && /etc/init.d/mysql start \\\n && /etc/init.d/postgresql start \\\n && (apt-get update ;apt-get install --no-install-recommends php5=5.5.9+dfsg-1ubuntu4.29 php5-cli=5.5.9+dfsg-1ubuntu4.29 php5-fpm=5.5.9+dfsg-1ubuntu4.29 php5-pgsql=5.5.9+dfsg-1ubuntu4.29 php5-mysql=5.5.9+dfsg-1ubuntu4.29 phpmyadmin=4:4.0.10-1ubuntu0.1 phppgadmin=5.1-1 -y ) \\\n && php5enmod c9 \\\n && chmod 777 /var/lib/phpmyadmin/tmp \\\n && cd /etc/php5/mods-available \\\n && ls *.ini | sed 's/\\.ini$//' | xargs php5enmod \\\n && curl -sS https://getcomposer.org/installer | php \\\n && mv composer.phar /usr/bin/composer\n#   Add additional repos for users\n#   MongoDB (Create the default data dir with correct permissions)\nRUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 7F0CEB10 \\\n && echo \"deb http://downloads-distro.mongodb.org/repo/ubuntu-upstart dist 10gen\" > /etc/apt/sources.list.d/mongodb.list \\\n && : \\\n && mkdir -p /data/db \\\n && chown -R ubuntu:ubuntu /data\n#   re-enable service startup. This line must come after all apt-get installs\nRUN rm -f /usr/sbin/policy-rc.d\n#   Set up /.check-environment folder\nRUN mkdir -p /.check-environment\nCOPY ./files/check-environment /.check-environment/workspace\nCMD /bin/bash -l\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:14.04.5\nMAINTAINER Cloud9 IDE, inc. <info@c9.io>\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#  increment version to force flushing the cache\nRUN echo \"Version 1.13\"\n#  Set mirrors to automatic based off location\nRUN apt-get update --fix-missing\nRUN apt-get install curl -y\nADD files/auto-sources.sh /var/tmp/auto-sources.sh\n# RUN bash /var/tmp/auto-sources.sh && rm /var/tmp/auto-sources.sh\n#  Install add-apt-repository script\nRUN apt-get install software-properties-common apt-transport-https -y\n#  Add a recent version of git\nRUN add-apt-repository -y ppa:git-core/ppa\n#  32-bit support\nRUN dpkg --add-architecture i386 \\\n && apt-get update --fix-missing \\\n && apt-get install libc6:i386 libncurses5:i386 libstdc++6:i386 -y\nRUN apt-get install bash console-setup sudo wget curl git python python-pip python3 python3-pip man-db -y \\\n && echo \"install console-setup\" \\\n && echo \"console-setup console-setup/codeset47 select # Latin1 and Latin5 - western Europe and Turkic languages\" | debconf-set-selections \\\n && echo \"console-setup console-setup/fontface47 select Fixed\" | debconf-set-selections \\\n && echo \"console-setup console-setup/fontsize-text47 select 16\" | debconf-set-selections \\\n && echo \"console-setup console-setup/charmap47 select UTF-8\" | debconf-set-selections \\\n && echo \"keyboard-configuration console-setup/detect detect-keyboard\" | debconf-set-selections \\\n && echo \"keyboard-configuration console-setup/detected note\" | debconf-set-selections \\\n && echo \"console-setup console-setup/codesetcode string Lat15\" | debconf-set-selections \\\n && echo \"keyboard-configuration console-setup/ask_detect boolean false\" | debconf-set-selections \\\n && echo \"console-setup console-setup/store_defaults_in_debconf_db boolean true\" | debconf-set-selections \\\n && echo \"console-setup console-setup/fontsize-fb47 select 16\" | debconf-set-selections \\\n && echo \"console-setup console-setup/fontsize string 16\" | debconf-set-selections \\\n && echo \"Create user and enable root access\" \\\n && useradd --uid 1000 --shell /bin/bash -m --home-dir /home/ubuntu ubuntu \\\n && sed -i 's/%sudo\\s.*/%sudo ALL=NOPASSWD:ALL/' /etc/sudoers \\\n && usermod -a -G sudo ubuntu\n#  node.js and nvm\nUSER ubuntu\nRUN curl https://raw.githubusercontent.com/creationix/nvm/v0.31.0/install.sh | sh -e \\\n && echo '[ -s \"/home/ubuntu/.nvm/nvm.sh\" ] \\\n && . \"/home/ubuntu/.nvm/nvm.sh\" # This loads nvm' >> /home/ubuntu/.profile\nRUN bash -l -c \" nvm install 6 \\\n && nvm alias default 6 nvm use 6\"\n#  Disable progress bars by default: https://github.com/npm/npm/issues/11283\nRUN bash -l -c \"npm set progress=false\"\nUSER root\n#  Java\nRUN apt-get install openjdk-7-jre -y\nRUN apt-get install ant maven2 -y\n#  editors\nRUN apt-get install nano vim vim-addon-manager vim-vimoutliner vim-doc ctags indent -y\n#  servers\nRUN apt-get install redis-server redis-tools nginx mysql-server rabbitmq-server couchdb -y\n#  Postgres\nRUN apt-get install postgresql-9.3 -y \\\n && /etc/init.d/postgresql start \\\n && sudo -u postgres createuser -srd ubuntu \\\n && sudo -u postgres psql -c \"create database ubuntu owner=ubuntu\"\n#  misc tools\nRUN apt-get install dnsutils bash-completion xsltproc build-essential fakeroot tmux duplicity lftp htop apt-file parallel strace ltrace flex jq ack-grep gdb valgrind locate tree time zip unp cmake -y\nRUN apt-file update\n#  Version control\nRUN apt-get install git-all tig subversion subversion-tools cvs mercurial bzr bzrtools git-svn -y\n#  libraries and headers\nRUN apt-get install libcairo2-dev libjpeg62-dev libgif-dev libpq-dev libboost-all-dev libzmq-dev libwww-curl-perl libbz2-dev dpkg-dev ruby1.9.1-dev dialog python-gtk2 libpango1.0 libpango1.0-dev libmysqlclient-dev -y\n#  Enable repo for alternative python versions\nRUN yes | add-apt-repository ppa:fkrull/deadsnakes\n#  install ruby/rails/rvm\nADD ./files/etc/gemrc /etc/gemrc\nRUN apt-get install gawk libxml2-dev libxslt-dev libgdbm-dev libgmp-dev sqlite3 -y\nRUN sudo -u ubuntu -i bash -l -c \" echo 'Installing rvm...' \\\n && gpg -q --keyserver hkp://pgp.mit.edu --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 \\\n && (curl -sSL https://get.rvm.io | sudo bash -s stable --autolibs=enabled) \" \\\n && usermod -a -G rvm ubuntu\nRUN sudo -u ubuntu -i bash -l -c \" echo 'Installing stable ruby version...' \\\n && rvm install ruby-2 \\\n && rvm use ruby-2 --default\"\n#  Deployment\n#  Can't include new npm since it makes \"npm install -g npm\" fail:\n#  sudo -u ubuntu -i bash -l -c \"npm install -g npm@3.3.6\" && \\\nRUN wget -qO- https://toolbelt.heroku.com/install-ubuntu.sh | sh -e\nRUN sudo -u ubuntu -i heroku --help\n#  /opt packages\nRUN curl https://storage.googleapis.com/golang/go1.8.3.linux-amd64.tar.gz | tar -C /opt -xz\nRUN git clone https://github.com/lennartcl/gitl.git /opt/gitl\n#  setup the system\nRUN echo -n \"\" > /etc/motd \\\n && echo \"export PATH=/bin:/usr/bin:/sbin:/usr/sbin:/usr/local/bin:/usr/local/sbin\" >> /root/.bashrc \\\n && sudo -i -u ubuntu HOME=/home/ubuntu bash -i /etc/bash_completion \\\n && HOME=/root bash -l /etc/bash_completion\n#  Install apache\nRUN apt-get install apache2 -y\nADD ./files/etc /etc\nADD ./files/home /home\nADD ./files/gitignore /home/ubuntu/.gitignore\nRUN cp /home/ubuntu/.gitignore /home/ubuntu/.hgignore \\\n && mkdir -p /home/ubuntu/lib/apache2/lock /home/ubuntu/lib/apache2/log /home/ubuntu/lib/apache2/run \\\n && cd /home/ubuntu \\\n && mv ssh .ssh \\\n && chmod 700 .ssh \\\n && chown -R ubuntu: .bash* .gemrc lib .*ignore .ssh \\\n && chown ubuntu: .\nRUN echo \"Configure apache2\" \\\n && a2enmod rewrite \\\n && ln -s ../sites-available/001-cloud9.conf /etc/apache2/sites-enabled/001-cloud9.conf \\\n && sed -i 's/Listen 80\\b/Listen 8080/' /etc/apache2/ports.conf \\\n && sed -Ei 's/(.*)secure_path.*/\\1!secure_path/' /etc/sudoers \\\n && touch /etc/init.d/systemd-logind\nRUN echo \"Configure php\" \\\n && /etc/init.d/mysql start \\\n && /etc/init.d/postgresql start \\\n && apt-get install php5 php5-cli php5-fpm php5-pgsql php5-mysql phpmyadmin phppgadmin -y \\\n && php5enmod c9 \\\n && chmod 777 /var/lib/phpmyadmin/tmp \\\n && cd /etc/php5/mods-available \\\n && ls *.ini | sed 's/\\.ini$//' | xargs php5enmod \\\n && curl -sS https://getcomposer.org/installer | php \\\n && mv composer.phar /usr/bin/composer\n#  Add additional repos for users\n#  MongoDB (Create the default data dir with correct permissions)\nRUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 7F0CEB10 \\\n && echo \"deb http://downloads-distro.mongodb.org/repo/ubuntu-upstart dist 10gen\" > /etc/apt/sources.list.d/mongodb.list \\\n && apt-get update \\\n && mkdir -p /data/db \\\n && chown -R ubuntu:ubuntu /data\n#  re-enable service startup. This line must come after all apt-get installs\nRUN rm -f /usr/sbin/policy-rc.d\n#  Set up /.check-environment folder\nRUN mkdir -p /.check-environment\nADD ./files/check-environment /.check-environment/workspace\nCMD /bin/bash -l\n","injectedSmells":[],"originalDockerfileHash":"52701b268f2c7e58f2b7264ff79cc99d","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:14.04.5\nMAINTAINER Cloud9 IDE, inc. <info@c9.io>\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#   increment version to force flushing the cache\nRUN echo \"Version 1.13\"\n#   Set mirrors to automatic based off location\nRUN apt-get update --fix-missing\nRUN apt-get install curl -y\nADD files/auto-sources.sh /var/tmp/auto-sources.sh\n#  RUN bash /var/tmp/auto-sources.sh && rm /var/tmp/auto-sources.sh\n#   Install add-apt-repository script\nRUN apt-get install software-properties-common apt-transport-https -y\n#   Add a recent version of git\nRUN add-apt-repository -y ppa:git-core/ppa\n#   32-bit support\nRUN dpkg --add-architecture i386 \\\n && apt-get update --fix-missing \\\n && apt-get install libc6:i386 libncurses5:i386 libstdc++6:i386 -y\nRUN apt-get install bash console-setup sudo wget curl git python python-pip python3 python3-pip man-db -y \\\n && echo \"install console-setup\" \\\n && echo \"console-setup console-setup/codeset47 select # Latin1 and Latin5 - western Europe and Turkic languages\" | debconf-set-selections \\\n && echo \"console-setup console-setup/fontface47 select Fixed\" | debconf-set-selections \\\n && echo \"console-setup console-setup/fontsize-text47 select 16\" | debconf-set-selections \\\n && echo \"console-setup console-setup/charmap47 select UTF-8\" | debconf-set-selections \\\n && echo \"keyboard-configuration console-setup/detect detect-keyboard\" | debconf-set-selections \\\n && echo \"keyboard-configuration console-setup/detected note\" | debconf-set-selections \\\n && echo \"console-setup console-setup/codesetcode string Lat15\" | debconf-set-selections \\\n && echo \"keyboard-configuration console-setup/ask_detect boolean false\" | debconf-set-selections \\\n && echo \"console-setup console-setup/store_defaults_in_debconf_db boolean true\" | debconf-set-selections \\\n && echo \"console-setup console-setup/fontsize-fb47 select 16\" | debconf-set-selections \\\n && echo \"console-setup console-setup/fontsize string 16\" | debconf-set-selections \\\n && echo \"Create user and enable root access\" \\\n && useradd --uid 1000 --shell /bin/bash -m --home-dir /home/ubuntu ubuntu \\\n && sed -i 's/%sudo\\s.*/%sudo ALL=NOPASSWD:ALL/' /etc/sudoers \\\n && usermod -a -G sudo ubuntu\n#   node.js and nvm\nUSER ubuntu\nRUN curl https://raw.githubusercontent.com/creationix/nvm/v0.31.0/install.sh | sh -e \\\n && echo '[ -s \"/home/ubuntu/.nvm/nvm.sh\" ] \\\n && . \"/home/ubuntu/.nvm/nvm.sh\" # This loads nvm' >> /home/ubuntu/.profile\nRUN bash -l -c \" nvm install 6 \\\n && nvm alias default 6 nvm use 6\"\n#   Disable progress bars by default: https://github.com/npm/npm/issues/11283\nRUN bash -l -c \"npm set progress=false\"\nUSER root\n#   Java\nRUN apt-get install openjdk-7-jre -y\nRUN apt-get install ant maven2 -y\n#   editors\nRUN apt-get install nano vim vim-addon-manager vim-vimoutliner vim-doc ctags indent -y\n#   servers\nRUN apt-get install redis-server redis-tools nginx mysql-server rabbitmq-server couchdb -y\n#   Postgres\nRUN apt-get install postgresql-9.3 -y \\\n && /etc/init.d/postgresql start \\\n && sudo -u postgres createuser -srd ubuntu \\\n && sudo -u postgres psql -c \"create database ubuntu owner=ubuntu\"\n#   misc tools\nRUN apt-get install dnsutils bash-completion xsltproc build-essential fakeroot tmux duplicity lftp htop apt-file parallel strace ltrace flex jq ack-grep gdb valgrind locate tree time zip unp cmake -y\nRUN apt-file update\n#   Version control\nRUN apt-get install git-all tig subversion subversion-tools cvs mercurial bzr bzrtools git-svn -y\n#   libraries and headers\nRUN apt-get install libcairo2-dev libjpeg62-dev libgif-dev libpq-dev libboost-all-dev libzmq-dev libwww-curl-perl libbz2-dev dpkg-dev ruby1.9.1-dev dialog python-gtk2 libpango1.0 libpango1.0-dev libmysqlclient-dev -y\n#   Enable repo for alternative python versions\nRUN yes | add-apt-repository ppa:fkrull/deadsnakes\n#   install ruby/rails/rvm\nADD ./files/etc/gemrc /etc/gemrc\nRUN apt-get install gawk libxml2-dev libxslt-dev libgdbm-dev libgmp-dev sqlite3 -y\nRUN sudo -u ubuntu -i bash -l -c \" echo 'Installing rvm...' \\\n && gpg -q --keyserver hkp://pgp.mit.edu --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 \\\n && (curl -sSL https://get.rvm.io | sudo bash -s stable --autolibs=enabled) \" \\\n && usermod -a -G rvm ubuntu\nRUN sudo -u ubuntu -i bash -l -c \" echo 'Installing stable ruby version...' \\\n && rvm install ruby-2 \\\n && rvm use ruby-2 --default\"\n#   Deployment\n#   Can't include new npm since it makes \"npm install -g npm\" fail:\n#   sudo -u ubuntu -i bash -l -c \"npm install -g npm@3.3.6\" && \\\nRUN wget -qO- https://toolbelt.heroku.com/install-ubuntu.sh | sh -e\nRUN sudo -u ubuntu -i heroku --help\n#   /opt packages\nRUN curl https://storage.googleapis.com/golang/go1.8.3.linux-amd64.tar.gz | tar -C /opt -xz\nRUN git clone https://github.com/lennartcl/gitl.git /opt/gitl\n#   setup the system\nRUN echo -n \"\" > /etc/motd \\\n && echo \"export PATH=/bin:/usr/bin:/sbin:/usr/sbin:/usr/local/bin:/usr/local/sbin\" >> /root/.bashrc \\\n && sudo -i -u ubuntu HOME=/home/ubuntu bash -i /etc/bash_completion \\\n && HOME=/root bash -l /etc/bash_completion\n#   Install apache\nRUN apt-get install apache2 -y\nADD ./files/etc /etc\nADD ./files/home /home\nADD ./files/gitignore /home/ubuntu/.gitignore\nRUN cp /home/ubuntu/.gitignore /home/ubuntu/.hgignore \\\n && mkdir -p /home/ubuntu/lib/apache2/lock /home/ubuntu/lib/apache2/log /home/ubuntu/lib/apache2/run \\\n && cd /home/ubuntu \\\n && mv ssh .ssh \\\n && chmod 700 .ssh \\\n && chown -R ubuntu: .bash* .gemrc lib .*ignore .ssh \\\n && chown ubuntu: .\nRUN echo \"Configure apache2\" \\\n && a2enmod rewrite \\\n && ln -s ../sites-available/001-cloud9.conf /etc/apache2/sites-enabled/001-cloud9.conf \\\n && sed -i 's/Listen 80\\b/Listen 8080/' /etc/apache2/ports.conf \\\n && sed -Ei 's/(.*)secure_path.*/\\1!secure_path/' /etc/sudoers \\\n && touch /etc/init.d/systemd-logind\nRUN echo \"Configure php\" \\\n && /etc/init.d/mysql start \\\n && /etc/init.d/postgresql start \\\n && apt-get install php5 php5-cli php5-fpm php5-pgsql php5-mysql phpmyadmin phppgadmin -y \\\n && php5enmod c9 \\\n && chmod 777 /var/lib/phpmyadmin/tmp \\\n && cd /etc/php5/mods-available \\\n && ls *.ini | sed 's/\\.ini$//' | xargs php5enmod \\\n && curl -sS https://getcomposer.org/installer | php \\\n && mv composer.phar /usr/bin/composer\n#   Add additional repos for users\n#   MongoDB (Create the default data dir with correct permissions)\nRUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 7F0CEB10 \\\n && echo \"deb http://downloads-distro.mongodb.org/repo/ubuntu-upstart dist 10gen\" > /etc/apt/sources.list.d/mongodb.list \\\n && apt-get update \\\n && mkdir -p /data/db \\\n && chown -R ubuntu:ubuntu /data\n#   re-enable service startup. This line must come after all apt-get installs\nRUN rm -f /usr/sbin/policy-rc.d\n#   Set up /.check-environment folder\nRUN mkdir -p /.check-environment\nADD ./files/check-environment /.check-environment/workspace\nCMD /bin/bash -l\n","originalDockerfileUglifiedHash":"8453f6629a8260976efc5f469a897bd2","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/24cd325df35973808775aeae11aaf9d1387eaf79.dockerfile"}