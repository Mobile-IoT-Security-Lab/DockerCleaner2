{"seed":4280396092,"processedDockerfileHash":"80f56434fa66519b55aeb534db5063b3","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   vim:set ft=dockerfile:\n#   upstream https://github.com/docker-library/mariadb\nFROM debian:jessie\nMAINTAINER 若虚 <slpcat@qq.com>\n#   Container variables\nENV TERM=\"xterm\" \\\n    LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US:en\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    TIMEZONE=\"Asia/Shanghai\"\n#   Set timezone and locales\nRUN echo \"${TIMEZONE}\" > /etc/timezone \\\n && echo \"$LANG UTF-8\" > /etc/locale.gen \\\n && : \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -yq apt-utils dialog locales \\\n && ln -sf /usr/share/zoneinfo/${TIMEZONE} /etc/localtime \\\n && update-locale LANG=$LANG \\\n && locale-gen $LANG \\\n && DEBIAN_FRONTEND=noninteractive dpkg-reconfigure locales\n#   Install required packages\nRUN apt-get dist-upgrade -y\n#   add our user and group first to make sure their IDs get assigned consistently, regardless of whatever dependencies get added\nRUN groupadd -r mysql \\\n && useradd -r -g mysql mysql\n#   add gosu for easy step-down from root\nENV GOSU_VERSION=\"1.7\"\nRUN set -x \\\n && apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends ca-certificates wget -y ) \\\n && rm -rf /var/lib/apt/lists/* \\\n && wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;)\" \\\n && wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;).asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 \\\n && gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \\\n && rm -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc \\\n && chmod +x /usr/local/bin/gosu \\\n && gosu nobody true \\\n && apt-get purge -y --auto-remove ca-certificates wget\nRUN mkdir /docker-entrypoint-initdb.d\n#   install \"pwgen\" for randomizing passwords\n#   install \"apt-transport-https\" for Percona's repo (switched to https-only)\nRUN apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends apt-transport-https ca-certificates pwgen -y ) \\\n && rm -rf /var/lib/apt/lists/*\n#   Key fingerprint = 1993 69E5 404B D5FC 7D2F  E43B CBCB 082A 1BB9 43DB\n#   MariaDB Package Signing Key <package-signing-key@mariadb.org>\n#   pub   1024D/CD2EFD2A 2009-12-15\n#         Key fingerprint = 430B DF5C 56E7 C94E 848E  E60C 1C4C BDCD CD2E FD2A\n#   uid                  Percona MySQL Development Team <mysql-dev@percona.com>\n#   sub   2048g/2D607DAF 2009-12-15\n#   pub   4096R/8507EFA5 2016-06-30\n#         Key fingerprint = 4D1B B29D 63D9 8E42 2B21  13B1 9334 A25F 8507 EFA5\n#   uid                  Percona MySQL Development Team (Packaging key) <mysql-dev@percona.com>\n#   sub   4096R/4CAC6D72 2016-06-30\nENV GPG_KEYS=\"199369E5404BD5FC7D2FE43BCBCB082A1BB943DB  430BDF5C56E7C94E848EE60C1C4CBDCDCD2EFD2A  4D1BB29D63D98E422B2113B19334A25F8507EFA5\"\nRUN set -ex ; export GNUPGHOME=\"$( mktemp -d ;)\" ; for key in $GPG_KEYS; do gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\" ; done ; gpg --export $GPG_KEYS > /etc/apt/trusted.gpg.d/mariadb.gpg; rm -r \"$GNUPGHOME\" ; apt-key list\n#   add Percona's repo for xtrabackup (which is useful for Galera)\nRUN echo \"deb https://repo.percona.com/apt jessie main\" > /etc/apt/sources.list.d/percona.list \\\n && { echo 'Package: *' ;echo 'Pin: release o=Percona Development Team' ;echo 'Pin-Priority: 998' ; } > /etc/apt/preferences.d/percona\nENV MARIADB_MAJOR=\"10.2\"\nENV MARIADB_VERSION=\"10.2.9+maria~jessie\"\nRUN echo \"deb http://ftp.osuosl.org/pub/mariadb/repo/$MARIADB_MAJOR/debian jessie main\" > /etc/apt/sources.list.d/mariadb.list \\\n && { echo 'Package: *' ;echo 'Pin: release o=MariaDB' ;echo 'Pin-Priority: 999' ; } > /etc/apt/preferences.d/mariadb\n#   add repository pinning to make sure dependencies from this MariaDB repo are preferred over Debian dependencies\n#    libmariadbclient18 : Depends: libmysqlclient18 (= 5.5.42+maria-1~wheezy) but 5.5.43-0+deb7u1 is to be installed\n#   the \"/var/lib/mysql\" stuff here is because the mysql-server postinst doesn't have an explicit way to disable the mysql_install_db codepath besides having a database already \"configured\" (ie, stuff in /var/lib/mysql/mysql)\n#   also, we set debconf keys to make APT a little quieter\n#   percona-xtrabackup is installed at the same time so that `mysql-common` is only installed once from just mariadb repos\n#   comment out any \"user\" entires in the MySQL config (\"docker-entrypoint.sh\" or \"--user\" will handle user switching)\n#   purge and re-create /var/lib/mysql with appropriate ownership\n#   ensure that /var/run/mysqld (used for socket and lock files) is writable regardless of the UID our mysqld instance ends up having at runtime\nRUN { echo \"mariadb-server-$MARIADB_MAJOR\" mysql-server/root_password password 'unused' ;echo \"mariadb-server-$MARIADB_MAJOR\" mysql-server/root_password_again password 'unused' ; } | debconf-set-selections \\\n && apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends percona-xtrabackup-24 socat \"mariadb-server=$MARIADB_VERSION\" -y ) \\\n && rm -rf /var/lib/apt/lists/* \\\n && sed -ri 's/^user\\s/#&/' /etc/mysql/my.cnf /etc/mysql/conf.d/* \\\n && rm -rf /var/lib/mysql \\\n && mkdir -p /var/lib/mysql /var/run/mysqld \\\n && chown -R mysql:mysql /var/lib/mysql /var/run/mysqld \\\n && chmod 777 /var/run/mysqld\n#   comment out a few problematic configuration values\n#   don't reverse lookup hostnames, they are usually another container\nRUN sed -Ei 's/^(bind-address|log)/#&/' /etc/mysql/my.cnf \\\n && echo '[mysqld]\\nskip-host-cache\\nskip-name-resolve' > /etc/mysql/conf.d/docker.cnf\nVOLUME /var/lib/mysql\nCOPY docker-entrypoint.sh /usr/local/bin/\nRUN ln -s usr/local/bin/docker-entrypoint.sh /\nENTRYPOINT [\"docker-entrypoint.sh\"]\nEXPOSE 3306/tcp\nCMD [\"mysqld\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  vim:set ft=dockerfile:\n#  upstream https://github.com/docker-library/mariadb\nFROM debian:jessie\nMAINTAINER 若虚 <slpcat@qq.com>\n#  Container variables\nENV TERM=\"xterm\" \\\n    LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US:en\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    TIMEZONE=\"Asia/Shanghai\"\n#  Set timezone and locales\nRUN echo \"${TIMEZONE}\" > /etc/timezone \\\n && echo \"$LANG UTF-8\" > /etc/locale.gen \\\n && apt-get update -q \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -yq apt-utils dialog locales \\\n && ln -sf /usr/share/zoneinfo/${TIMEZONE} /etc/localtime \\\n && update-locale LANG=$LANG \\\n && locale-gen $LANG \\\n && DEBIAN_FRONTEND=noninteractive dpkg-reconfigure locales\n#  Install required packages\nRUN apt-get dist-upgrade -y\n#  add our user and group first to make sure their IDs get assigned consistently, regardless of whatever dependencies get added\nRUN groupadd -r mysql \\\n && useradd -r -g mysql mysql\n#  add gosu for easy step-down from root\nENV GOSU_VERSION=\"1.7\"\nRUN set -x \\\n && apt-get update \\\n && apt-get install --no-install-recommends ca-certificates wget -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;)\" \\\n && wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;).asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 \\\n && gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \\\n && rm -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc \\\n && chmod +x /usr/local/bin/gosu \\\n && gosu nobody true \\\n && apt-get purge -y --auto-remove ca-certificates wget\nRUN mkdir /docker-entrypoint-initdb.d\n#  install \"pwgen\" for randomizing passwords\n#  install \"apt-transport-https\" for Percona's repo (switched to https-only)\nRUN apt-get update \\\n && apt-get install --no-install-recommends apt-transport-https ca-certificates pwgen -y \\\n && rm -rf /var/lib/apt/lists/*\n#  Key fingerprint = 1993 69E5 404B D5FC 7D2F  E43B CBCB 082A 1BB9 43DB\n#  MariaDB Package Signing Key <package-signing-key@mariadb.org>\n#  pub   1024D/CD2EFD2A 2009-12-15\n#        Key fingerprint = 430B DF5C 56E7 C94E 848E  E60C 1C4C BDCD CD2E FD2A\n#  uid                  Percona MySQL Development Team <mysql-dev@percona.com>\n#  sub   2048g/2D607DAF 2009-12-15\n#  pub   4096R/8507EFA5 2016-06-30\n#        Key fingerprint = 4D1B B29D 63D9 8E42 2B21  13B1 9334 A25F 8507 EFA5\n#  uid                  Percona MySQL Development Team (Packaging key) <mysql-dev@percona.com>\n#  sub   4096R/4CAC6D72 2016-06-30\nENV GPG_KEYS=\"199369E5404BD5FC7D2FE43BCBCB082A1BB943DB  430BDF5C56E7C94E848EE60C1C4CBDCDCD2EFD2A  4D1BB29D63D98E422B2113B19334A25F8507EFA5\"\nRUN set -ex ; export GNUPGHOME=\"$( mktemp -d ;)\" ; for key in $GPG_KEYS; do gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\" ; done ; gpg --export $GPG_KEYS > /etc/apt/trusted.gpg.d/mariadb.gpg; rm -r \"$GNUPGHOME\" ; apt-key list\n#  add Percona's repo for xtrabackup (which is useful for Galera)\nRUN echo \"deb https://repo.percona.com/apt jessie main\" > /etc/apt/sources.list.d/percona.list \\\n && { echo 'Package: *' ;echo 'Pin: release o=Percona Development Team' ;echo 'Pin-Priority: 998' ; } > /etc/apt/preferences.d/percona\nENV MARIADB_MAJOR=\"10.2\"\nENV MARIADB_VERSION=\"10.2.9+maria~jessie\"\nRUN echo \"deb http://ftp.osuosl.org/pub/mariadb/repo/$MARIADB_MAJOR/debian jessie main\" > /etc/apt/sources.list.d/mariadb.list \\\n && { echo 'Package: *' ;echo 'Pin: release o=MariaDB' ;echo 'Pin-Priority: 999' ; } > /etc/apt/preferences.d/mariadb\n#  add repository pinning to make sure dependencies from this MariaDB repo are preferred over Debian dependencies\n#   libmariadbclient18 : Depends: libmysqlclient18 (= 5.5.42+maria-1~wheezy) but 5.5.43-0+deb7u1 is to be installed\n#  the \"/var/lib/mysql\" stuff here is because the mysql-server postinst doesn't have an explicit way to disable the mysql_install_db codepath besides having a database already \"configured\" (ie, stuff in /var/lib/mysql/mysql)\n#  also, we set debconf keys to make APT a little quieter\n#  percona-xtrabackup is installed at the same time so that `mysql-common` is only installed once from just mariadb repos\n#  comment out any \"user\" entires in the MySQL config (\"docker-entrypoint.sh\" or \"--user\" will handle user switching)\n#  purge and re-create /var/lib/mysql with appropriate ownership\n#  ensure that /var/run/mysqld (used for socket and lock files) is writable regardless of the UID our mysqld instance ends up having at runtime\nRUN { echo \"mariadb-server-$MARIADB_MAJOR\" mysql-server/root_password password 'unused' ;echo \"mariadb-server-$MARIADB_MAJOR\" mysql-server/root_password_again password 'unused' ; } | debconf-set-selections \\\n && apt-get update \\\n && apt-get install percona-xtrabackup-24 socat \"mariadb-server=$MARIADB_VERSION\" -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && sed -ri 's/^user\\s/#&/' /etc/mysql/my.cnf /etc/mysql/conf.d/* \\\n && rm -rf /var/lib/mysql \\\n && mkdir -p /var/lib/mysql /var/run/mysqld \\\n && chown -R mysql:mysql /var/lib/mysql /var/run/mysqld \\\n && chmod 777 /var/run/mysqld\n#  comment out a few problematic configuration values\n#  don't reverse lookup hostnames, they are usually another container\nRUN sed -Ei 's/^(bind-address|log)/#&/' /etc/mysql/my.cnf \\\n && echo '[mysqld]\\nskip-host-cache\\nskip-name-resolve' > /etc/mysql/conf.d/docker.cnf\nVOLUME /var/lib/mysql\nCOPY docker-entrypoint.sh /usr/local/bin/\nRUN ln -s usr/local/bin/docker-entrypoint.sh /\nENTRYPOINT [\"docker-entrypoint.sh\"]\nEXPOSE 3306/tcp\nCMD [\"mysqld\"]\n","injectedSmells":[],"originalDockerfileHash":"cd36cfd4a82d66a94c32b98fff21a93c","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   vim:set ft=dockerfile:\n#   upstream https://github.com/docker-library/mariadb\nFROM debian:jessie\nMAINTAINER 若虚 <slpcat@qq.com>\n#   Container variables\nENV TERM=\"xterm\" \\\n    LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US:en\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    TIMEZONE=\"Asia/Shanghai\"\n#   Set timezone and locales\nRUN echo \"${TIMEZONE}\" > /etc/timezone \\\n && echo \"$LANG UTF-8\" > /etc/locale.gen \\\n && apt-get update -q \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -yq apt-utils dialog locales \\\n && ln -sf /usr/share/zoneinfo/${TIMEZONE} /etc/localtime \\\n && update-locale LANG=$LANG \\\n && locale-gen $LANG \\\n && DEBIAN_FRONTEND=noninteractive dpkg-reconfigure locales\n#   Install required packages\nRUN apt-get dist-upgrade -y\n#   add our user and group first to make sure their IDs get assigned consistently, regardless of whatever dependencies get added\nRUN groupadd -r mysql \\\n && useradd -r -g mysql mysql\n#   add gosu for easy step-down from root\nENV GOSU_VERSION=\"1.7\"\nRUN set -x \\\n && apt-get update \\\n && apt-get install --no-install-recommends ca-certificates wget -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;)\" \\\n && wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;).asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 \\\n && gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \\\n && rm -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc \\\n && chmod +x /usr/local/bin/gosu \\\n && gosu nobody true \\\n && apt-get purge -y --auto-remove ca-certificates wget\nRUN mkdir /docker-entrypoint-initdb.d\n#   install \"pwgen\" for randomizing passwords\n#   install \"apt-transport-https\" for Percona's repo (switched to https-only)\nRUN apt-get update \\\n && apt-get install --no-install-recommends apt-transport-https ca-certificates pwgen -y \\\n && rm -rf /var/lib/apt/lists/*\n#   Key fingerprint = 1993 69E5 404B D5FC 7D2F  E43B CBCB 082A 1BB9 43DB\n#   MariaDB Package Signing Key <package-signing-key@mariadb.org>\n#   pub   1024D/CD2EFD2A 2009-12-15\n#         Key fingerprint = 430B DF5C 56E7 C94E 848E  E60C 1C4C BDCD CD2E FD2A\n#   uid                  Percona MySQL Development Team <mysql-dev@percona.com>\n#   sub   2048g/2D607DAF 2009-12-15\n#   pub   4096R/8507EFA5 2016-06-30\n#         Key fingerprint = 4D1B B29D 63D9 8E42 2B21  13B1 9334 A25F 8507 EFA5\n#   uid                  Percona MySQL Development Team (Packaging key) <mysql-dev@percona.com>\n#   sub   4096R/4CAC6D72 2016-06-30\nENV GPG_KEYS=\"199369E5404BD5FC7D2FE43BCBCB082A1BB943DB  430BDF5C56E7C94E848EE60C1C4CBDCDCD2EFD2A  4D1BB29D63D98E422B2113B19334A25F8507EFA5\"\nRUN set -ex ; export GNUPGHOME=\"$( mktemp -d ;)\" ; for key in $GPG_KEYS; do gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\" ; done ; gpg --export $GPG_KEYS > /etc/apt/trusted.gpg.d/mariadb.gpg; rm -r \"$GNUPGHOME\" ; apt-key list\n#   add Percona's repo for xtrabackup (which is useful for Galera)\nRUN echo \"deb https://repo.percona.com/apt jessie main\" > /etc/apt/sources.list.d/percona.list \\\n && { echo 'Package: *' ;echo 'Pin: release o=Percona Development Team' ;echo 'Pin-Priority: 998' ; } > /etc/apt/preferences.d/percona\nENV MARIADB_MAJOR=\"10.2\"\nENV MARIADB_VERSION=\"10.2.9+maria~jessie\"\nRUN echo \"deb http://ftp.osuosl.org/pub/mariadb/repo/$MARIADB_MAJOR/debian jessie main\" > /etc/apt/sources.list.d/mariadb.list \\\n && { echo 'Package: *' ;echo 'Pin: release o=MariaDB' ;echo 'Pin-Priority: 999' ; } > /etc/apt/preferences.d/mariadb\n#   add repository pinning to make sure dependencies from this MariaDB repo are preferred over Debian dependencies\n#    libmariadbclient18 : Depends: libmysqlclient18 (= 5.5.42+maria-1~wheezy) but 5.5.43-0+deb7u1 is to be installed\n#   the \"/var/lib/mysql\" stuff here is because the mysql-server postinst doesn't have an explicit way to disable the mysql_install_db codepath besides having a database already \"configured\" (ie, stuff in /var/lib/mysql/mysql)\n#   also, we set debconf keys to make APT a little quieter\n#   percona-xtrabackup is installed at the same time so that `mysql-common` is only installed once from just mariadb repos\n#   comment out any \"user\" entires in the MySQL config (\"docker-entrypoint.sh\" or \"--user\" will handle user switching)\n#   purge and re-create /var/lib/mysql with appropriate ownership\n#   ensure that /var/run/mysqld (used for socket and lock files) is writable regardless of the UID our mysqld instance ends up having at runtime\nRUN { echo \"mariadb-server-$MARIADB_MAJOR\" mysql-server/root_password password 'unused' ;echo \"mariadb-server-$MARIADB_MAJOR\" mysql-server/root_password_again password 'unused' ; } | debconf-set-selections \\\n && apt-get update \\\n && apt-get install percona-xtrabackup-24 socat \"mariadb-server=$MARIADB_VERSION\" -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && sed -ri 's/^user\\s/#&/' /etc/mysql/my.cnf /etc/mysql/conf.d/* \\\n && rm -rf /var/lib/mysql \\\n && mkdir -p /var/lib/mysql /var/run/mysqld \\\n && chown -R mysql:mysql /var/lib/mysql /var/run/mysqld \\\n && chmod 777 /var/run/mysqld\n#   comment out a few problematic configuration values\n#   don't reverse lookup hostnames, they are usually another container\nRUN sed -Ei 's/^(bind-address|log)/#&/' /etc/mysql/my.cnf \\\n && echo '[mysqld]\\nskip-host-cache\\nskip-name-resolve' > /etc/mysql/conf.d/docker.cnf\nVOLUME /var/lib/mysql\nCOPY docker-entrypoint.sh /usr/local/bin/\nRUN ln -s usr/local/bin/docker-entrypoint.sh /\nENTRYPOINT [\"docker-entrypoint.sh\"]\nEXPOSE 3306/tcp\nCMD [\"mysqld\"]\n","originalDockerfileUglifiedHash":"afb6460c0fcc89217858ce8cf5f760ba","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/43338d0d8c98ffb2c5106792c6a0e52fd3d42e7d.dockerfile"}