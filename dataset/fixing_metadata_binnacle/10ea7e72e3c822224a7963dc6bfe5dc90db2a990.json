{"seed":4049993450,"processedDockerfileHash":"b5168f90cde6f1b4f48fb0921238424d","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-npm","do-not-have-secrets","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM centos/systemd\nWORKDIR /root/\n#   Timezone\nENV TZ=\"Asia/Shanghai\"\nENV GOPATH=\"/usr/local/go\"\n#   MySQL\nENV DBIP=\"127.0.0.1\"\nENV DBPort=\"3306\"\nENV DBUser=\"root\"\n# A secret has been removed here. Please do not provide secrets from the Dockerfile as these will leak into the metadata of the resulting docker image. To provide secrets the --secret flag of the docker build command can be used (https://docs.docker.com/develop/develop-images/build_enhancements/#new-docker-build-secret-information).\nENV DBTarsPass=\"tars2015\"\n#   Install\nRUN yum -y install https://repo.mysql.com/yum/mysql-8.0-community/el/7/x86_64/mysql80-community-release-el7-1.noarch.rpm \\\n && yum -y install https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm \\\n && yum -y install http://rpms.remirepo.net/enterprise/remi-release-7.rpm \\\n && yum -y install yum-utils \\\n && yum-config-manager --enable remi-php72 \\\n && yum -y install git gcc gcc-c++ go make wget cmake mysql mysql-devel unzip iproute which glibc-devel flex bison ncurses-devel protobuf-devel zlib-devel kde-l10n-Chinese glibc-common hiredis-devel rapidjson-devel boost boost-devel php php-cli php-devel php-mcrypt php-cli php-gd php-curl php-mysql php-zip php-fileinfo php-phpiredis php-seld-phar-utils tzdata \\\n && ln -snf /usr/share/zoneinfo/$TZ /etc/localtime \\\n && echo $TZ > /etc/timezone \\\n && localedef -c -f UTF-8 -i zh_CN zh_CN.utf8 \\\n && wget -c -t 0 https://dev.mysql.com/get/Downloads/Connector-C++/mysql-connector-c++-8.0.11-linux-el7-x86-64bit.tar.gz \\\n && tar zxf mysql-connector-c++-8.0.11-linux-el7-x86-64bit.tar.gz \\\n && cd mysql-connector-c++-8.0.11-linux-el7-x86-64bit \\\n && cp -Rf include/jdbc/* /usr/include/mysql/ \\\n && cp -Rf include/mysqlx/* /usr/include/mysql/ \\\n && cp -Rf lib64/* /usr/lib64/mysql/ \\\n && cd /root \\\n && rm -rf mysql-connector* \\\n && mkdir -p /usr/local/mysql \\\n && ln -s /usr/lib64/mysql /usr/local/mysql/lib \\\n && ln -s /usr/include/mysql /usr/local/mysql/include \\\n && echo \"/usr/local/mysql/lib/\" >> /etc/ld.so.conf \\\n && ldconfig \\\n && cd /usr/local/mysql/lib/ \\\n && rm -f libmysqlclient.a \\\n && ln -s libmysqlclient.so.*.*.* libmysqlclient.a \\\n && cd /root/ \\\n && git clone https://github.com/TarsCloud/Tars \\\n && cd /root/Tars/ \\\n && git submodule update --init --recursive framework \\\n && git submodule update --init --recursive php \\\n && git submodule update --init --recursive go \\\n && git submodule update --init --recursive java \\\n && mkdir -p /data \\\n && chmod u+x /root/Tars/framework/build/build.sh \\\n && sed -i '32s/rt/rt crypto ssl/' /root/Tars/framework/CMakeLists.txt \\\n && cd /root/Tars/framework/build/ \\\n && ./build.sh all \\\n && ./build.sh install \\\n && cd /root/Tars/framework/build/ \\\n && make framework-tar \\\n && mkdir -p /usr/local/app/tars/ \\\n && cp /root/Tars/framework/build/framework.tgz /usr/local/app/tars/ \\\n && cd /usr/local/app/tars/ \\\n && tar xzfv framework.tgz \\\n && rm -rf framework.tgz \\\n && mkdir -p /usr/local/app/patchs/tars.upload \\\n && cd /tmp \\\n && curl -fsSL https://getcomposer.org/installer | php \\\n && chmod +x composer.phar \\\n && mv composer.phar /usr/local/bin/composer \\\n && cd /root/Tars/php/tars-extension/ \\\n && phpize --clean \\\n && phpize \\\n && ./configure --enable-phptars --with-php-config=/usr/bin/php-config \\\n && make \\\n && make install \\\n && echo \"extension=phptars.so\" > /etc/php.d/phptars.ini \\\n && cd /root \\\n && wget -c -t 0 https://github.com/swoole/swoole-src/archive/v2.2.0.tar.gz \\\n && tar zxf v2.2.0.tar.gz \\\n && cd swoole-src-2.2.0 \\\n && phpize \\\n && ./configure \\\n && make \\\n && make install \\\n && echo \"extension=swoole.so\" > /etc/php.d/swoole.ini \\\n && cd /root \\\n && rm -rf v2.2.0.tar.gz swoole-src-2.2.0 \\\n && mkdir -p /root/phptars \\\n && cp -f /root/Tars/php/tars2php/src/tars2php.php /root/phptars \\\n && go get github.com/TarsCloud/TarsGo/tars \\\n && cd $GOPATH/src/github.com/TarsCloud/TarsGo/tars/tools/tars2go \\\n && go build . \\\n && wget -qO- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh | bash \\\n && source ~/.bashrc \\\n && nvm install v8.11.3 \\\n && npm install @tars/deploy @tars/stream @tars/rpc @tars/logs @tars/config @tars/monitor @tars/notify @tars/utils @tars/dyeing @tars/registry -g \\\n && mkdir -p /root/init \\\n && cd /root/init/ \\\n && wget https://mirror.its.sfu.ca/mirror/CentOS-Third-Party/NSG/common/x86_64/jdk-10.0.2_linux-x64_bin.rpm \\\n && rpm -ivh /root/init/jdk-10.0.2_linux-x64_bin.rpm \\\n && rm -rf /root/init/jdk-10.0.2_linux-x64_bin.rpm \\\n && echo \"export JAVA_HOME=/usr/java/jdk-10.0.2\" >> /etc/profile \\\n && echo \"CLASSPATH=$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar\" >> /etc/profile \\\n && echo \"PATH=$JAVA_HOME/bin:$PATH\" >> /etc/profile \\\n && echo \"export PATH JAVA_HOME CLASSPATH\" >> /etc/profile \\\n && echo \"export JAVA_HOME=/usr/java/jdk-10.0.2\" >> /root/.bashrc \\\n && echo \"CLASSPATH=$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar\" >> /root/.bashrc \\\n && echo \"PATH=$JAVA_HOME/bin:$PATH\" >> /root/.bashrc \\\n && echo \"export PATH JAVA_HOME CLASSPATH\" >> /root/.bashrc \\\n && cd /usr/local/ \\\n && wget -c -t 0 https://mirrors.tuna.tsinghua.edu.cn/apache/maven/maven-3/3.5.4/binaries/apache-maven-3.5.4-bin.tar.gz \\\n && tar zxvf apache-maven-3.5.4-bin.tar.gz \\\n && echo \"export MAVEN_HOME=/usr/local/apache-maven-3.5.4/\" >> /etc/profile \\\n && echo \"export PATH=$PATH:$MAVEN_HOME/bin\" >> /etc/profile \\\n && echo \"export PATH=$PATH:$MAVEN_HOME/bin\" >> /root/.bashrc \\\n && source /etc/profile \\\n && mvn -v \\\n && rm -rf apache-maven-3.5.4-bin.tar.gz \\\n && cd /root/Tars/java \\\n && source /etc/profile \\\n && mvn clean install \\\n && mvn clean install -f core/client.pom.xml \\\n && mvn clean install -f core/server.pom.xml \\\n && cd /root/init \\\n && mvn archetype:generate -DgroupId=com.tangramor -DartifactId=TestJava -DarchetypeArtifactId=maven-archetype-webapp -DinteractiveMode=false \\\n && cd /root/Tars/java/examples/quickstart-server/ \\\n && mvn tars:tars2java \\\n && mvn package \\\n && mkdir -p /root/sql \\\n && cp -rf /root/Tars/framework/sql/* /root/sql/ \\\n && cd /root/Tars/framework/build/ \\\n && ./build.sh cleanall \\\n && yum clean all \\\n && rm -rf /var/cache/yum\n#   Whether mount Tars process path to outside, false to support windows\nENV MOUNT_DATA=\"true\"\n#   Network interface (if use --net=host, maybe network interface does not named eth0)\nENV INET_NAME=\"eth0\"\nVOLUME [\"/data\"]\n#   copy source\nCOPY install.sh /root/init/\nCOPY entrypoint.sh /sbin/\nRUN chmod 755 /sbin/entrypoint.sh\nENTRYPOINT [\"/sbin/entrypoint.sh\", \"start\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM centos/systemd\nWORKDIR /root/\n#  Timezone\nENV TZ=\"Asia/Shanghai\"\nENV GOPATH=\"/usr/local/go\"\n#  MySQL\nENV DBIP=\"127.0.0.1\"\nENV DBPort=\"3306\"\nENV DBUser=\"root\"\nENV DBPassword=\"password\"\nENV DBTarsPass=\"tars2015\"\n#  Install\nRUN yum -y install https://repo.mysql.com/yum/mysql-8.0-community/el/7/x86_64/mysql80-community-release-el7-1.noarch.rpm \\\n && yum -y install https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm \\\n && yum -y install http://rpms.remirepo.net/enterprise/remi-release-7.rpm \\\n && yum -y install yum-utils \\\n && yum-config-manager --enable remi-php72 \\\n && yum -y install git gcc gcc-c++ go make wget cmake mysql mysql-devel unzip iproute which glibc-devel flex bison ncurses-devel protobuf-devel zlib-devel kde-l10n-Chinese glibc-common hiredis-devel rapidjson-devel boost boost-devel php php-cli php-devel php-mcrypt php-cli php-gd php-curl php-mysql php-zip php-fileinfo php-phpiredis php-seld-phar-utils tzdata \\\n && ln -snf /usr/share/zoneinfo/$TZ /etc/localtime \\\n && echo $TZ > /etc/timezone \\\n && localedef -c -f UTF-8 -i zh_CN zh_CN.utf8 \\\n && wget -c -t 0 https://dev.mysql.com/get/Downloads/Connector-C++/mysql-connector-c++-8.0.11-linux-el7-x86-64bit.tar.gz \\\n && tar zxf mysql-connector-c++-8.0.11-linux-el7-x86-64bit.tar.gz \\\n && cd mysql-connector-c++-8.0.11-linux-el7-x86-64bit \\\n && cp -Rf include/jdbc/* /usr/include/mysql/ \\\n && cp -Rf include/mysqlx/* /usr/include/mysql/ \\\n && cp -Rf lib64/* /usr/lib64/mysql/ \\\n && cd /root \\\n && rm -rf mysql-connector* \\\n && mkdir -p /usr/local/mysql \\\n && ln -s /usr/lib64/mysql /usr/local/mysql/lib \\\n && ln -s /usr/include/mysql /usr/local/mysql/include \\\n && echo \"/usr/local/mysql/lib/\" >> /etc/ld.so.conf \\\n && ldconfig \\\n && cd /usr/local/mysql/lib/ \\\n && rm -f libmysqlclient.a \\\n && ln -s libmysqlclient.so.*.*.* libmysqlclient.a \\\n && cd /root/ \\\n && git clone https://github.com/TarsCloud/Tars \\\n && cd /root/Tars/ \\\n && git submodule update --init --recursive framework \\\n && git submodule update --init --recursive php \\\n && git submodule update --init --recursive go \\\n && git submodule update --init --recursive java \\\n && mkdir -p /data \\\n && chmod u+x /root/Tars/framework/build/build.sh \\\n && sed -i '32s/rt/rt crypto ssl/' /root/Tars/framework/CMakeLists.txt \\\n && cd /root/Tars/framework/build/ \\\n && ./build.sh all \\\n && ./build.sh install \\\n && cd /root/Tars/framework/build/ \\\n && make framework-tar \\\n && mkdir -p /usr/local/app/tars/ \\\n && cp /root/Tars/framework/build/framework.tgz /usr/local/app/tars/ \\\n && cd /usr/local/app/tars/ \\\n && tar xzfv framework.tgz \\\n && rm -rf framework.tgz \\\n && mkdir -p /usr/local/app/patchs/tars.upload \\\n && cd /tmp \\\n && curl -fsSL https://getcomposer.org/installer | php \\\n && chmod +x composer.phar \\\n && mv composer.phar /usr/local/bin/composer \\\n && cd /root/Tars/php/tars-extension/ \\\n && phpize --clean \\\n && phpize \\\n && ./configure --enable-phptars --with-php-config=/usr/bin/php-config \\\n && make \\\n && make install \\\n && echo \"extension=phptars.so\" > /etc/php.d/phptars.ini \\\n && cd /root \\\n && wget -c -t 0 https://github.com/swoole/swoole-src/archive/v2.2.0.tar.gz \\\n && tar zxf v2.2.0.tar.gz \\\n && cd swoole-src-2.2.0 \\\n && phpize \\\n && ./configure \\\n && make \\\n && make install \\\n && echo \"extension=swoole.so\" > /etc/php.d/swoole.ini \\\n && cd /root \\\n && rm -rf v2.2.0.tar.gz swoole-src-2.2.0 \\\n && mkdir -p /root/phptars \\\n && cp -f /root/Tars/php/tars2php/src/tars2php.php /root/phptars \\\n && go get github.com/TarsCloud/TarsGo/tars \\\n && cd $GOPATH/src/github.com/TarsCloud/TarsGo/tars/tools/tars2go \\\n && go build . \\\n && wget -qO- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh | bash \\\n && source ~/.bashrc \\\n && nvm install v8.11.3 \\\n && npm install @tars/deploy @tars/stream @tars/rpc @tars/logs @tars/config @tars/monitor @tars/notify @tars/utils @tars/dyeing @tars/registry -g \\\n && mkdir -p /root/init \\\n && cd /root/init/ \\\n && wget https://mirror.its.sfu.ca/mirror/CentOS-Third-Party/NSG/common/x86_64/jdk-10.0.2_linux-x64_bin.rpm \\\n && rpm -ivh /root/init/jdk-10.0.2_linux-x64_bin.rpm \\\n && rm -rf /root/init/jdk-10.0.2_linux-x64_bin.rpm \\\n && echo \"export JAVA_HOME=/usr/java/jdk-10.0.2\" >> /etc/profile \\\n && echo \"CLASSPATH=$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar\" >> /etc/profile \\\n && echo \"PATH=$JAVA_HOME/bin:$PATH\" >> /etc/profile \\\n && echo \"export PATH JAVA_HOME CLASSPATH\" >> /etc/profile \\\n && echo \"export JAVA_HOME=/usr/java/jdk-10.0.2\" >> /root/.bashrc \\\n && echo \"CLASSPATH=$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar\" >> /root/.bashrc \\\n && echo \"PATH=$JAVA_HOME/bin:$PATH\" >> /root/.bashrc \\\n && echo \"export PATH JAVA_HOME CLASSPATH\" >> /root/.bashrc \\\n && cd /usr/local/ \\\n && wget -c -t 0 https://mirrors.tuna.tsinghua.edu.cn/apache/maven/maven-3/3.5.4/binaries/apache-maven-3.5.4-bin.tar.gz \\\n && tar zxvf apache-maven-3.5.4-bin.tar.gz \\\n && echo \"export MAVEN_HOME=/usr/local/apache-maven-3.5.4/\" >> /etc/profile \\\n && echo \"export PATH=$PATH:$MAVEN_HOME/bin\" >> /etc/profile \\\n && echo \"export PATH=$PATH:$MAVEN_HOME/bin\" >> /root/.bashrc \\\n && source /etc/profile \\\n && mvn -v \\\n && rm -rf apache-maven-3.5.4-bin.tar.gz \\\n && cd /root/Tars/java \\\n && source /etc/profile \\\n && mvn clean install \\\n && mvn clean install -f core/client.pom.xml \\\n && mvn clean install -f core/server.pom.xml \\\n && cd /root/init \\\n && mvn archetype:generate -DgroupId=com.tangramor -DartifactId=TestJava -DarchetypeArtifactId=maven-archetype-webapp -DinteractiveMode=false \\\n && cd /root/Tars/java/examples/quickstart-server/ \\\n && mvn tars:tars2java \\\n && mvn package \\\n && mkdir -p /root/sql \\\n && cp -rf /root/Tars/framework/sql/* /root/sql/ \\\n && cd /root/Tars/framework/build/ \\\n && ./build.sh cleanall \\\n && yum clean all \\\n && rm -rf /var/cache/yum\n#  Whether mount Tars process path to outside, false to support windows\nENV MOUNT_DATA=\"true\"\n#  Network interface (if use --net=host, maybe network interface does not named eth0)\nENV INET_NAME=\"eth0\"\nVOLUME [\"/data\"]\n#  copy source\nCOPY install.sh /root/init/\nCOPY entrypoint.sh /sbin/\nRUN chmod 755 /sbin/entrypoint.sh\nENTRYPOINT [\"/sbin/entrypoint.sh\", \"start\"]\n","injectedSmells":[],"originalDockerfileHash":"8236364bebdc81e693778a88f165feea","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM centos/systemd\nWORKDIR /root/\n#   Timezone\nENV TZ=\"Asia/Shanghai\"\nENV GOPATH=\"/usr/local/go\"\n#   MySQL\nENV DBIP=\"127.0.0.1\"\nENV DBPort=\"3306\"\nENV DBUser=\"root\"\nENV DBPassword=\"password\"\nENV DBTarsPass=\"tars2015\"\n#   Install\nRUN yum -y install https://repo.mysql.com/yum/mysql-8.0-community/el/7/x86_64/mysql80-community-release-el7-1.noarch.rpm \\\n && yum -y install https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm \\\n && yum -y install http://rpms.remirepo.net/enterprise/remi-release-7.rpm \\\n && yum -y install yum-utils \\\n && yum-config-manager --enable remi-php72 \\\n && yum -y install git gcc gcc-c++ go make wget cmake mysql mysql-devel unzip iproute which glibc-devel flex bison ncurses-devel protobuf-devel zlib-devel kde-l10n-Chinese glibc-common hiredis-devel rapidjson-devel boost boost-devel php php-cli php-devel php-mcrypt php-cli php-gd php-curl php-mysql php-zip php-fileinfo php-phpiredis php-seld-phar-utils tzdata \\\n && ln -snf /usr/share/zoneinfo/$TZ /etc/localtime \\\n && echo $TZ > /etc/timezone \\\n && localedef -c -f UTF-8 -i zh_CN zh_CN.utf8 \\\n && wget -c -t 0 https://dev.mysql.com/get/Downloads/Connector-C++/mysql-connector-c++-8.0.11-linux-el7-x86-64bit.tar.gz \\\n && tar zxf mysql-connector-c++-8.0.11-linux-el7-x86-64bit.tar.gz \\\n && cd mysql-connector-c++-8.0.11-linux-el7-x86-64bit \\\n && cp -Rf include/jdbc/* /usr/include/mysql/ \\\n && cp -Rf include/mysqlx/* /usr/include/mysql/ \\\n && cp -Rf lib64/* /usr/lib64/mysql/ \\\n && cd /root \\\n && rm -rf mysql-connector* \\\n && mkdir -p /usr/local/mysql \\\n && ln -s /usr/lib64/mysql /usr/local/mysql/lib \\\n && ln -s /usr/include/mysql /usr/local/mysql/include \\\n && echo \"/usr/local/mysql/lib/\" >> /etc/ld.so.conf \\\n && ldconfig \\\n && cd /usr/local/mysql/lib/ \\\n && rm -f libmysqlclient.a \\\n && ln -s libmysqlclient.so.*.*.* libmysqlclient.a \\\n && cd /root/ \\\n && git clone https://github.com/TarsCloud/Tars \\\n && cd /root/Tars/ \\\n && git submodule update --init --recursive framework \\\n && git submodule update --init --recursive php \\\n && git submodule update --init --recursive go \\\n && git submodule update --init --recursive java \\\n && mkdir -p /data \\\n && chmod u+x /root/Tars/framework/build/build.sh \\\n && sed -i '32s/rt/rt crypto ssl/' /root/Tars/framework/CMakeLists.txt \\\n && cd /root/Tars/framework/build/ \\\n && ./build.sh all \\\n && ./build.sh install \\\n && cd /root/Tars/framework/build/ \\\n && make framework-tar \\\n && mkdir -p /usr/local/app/tars/ \\\n && cp /root/Tars/framework/build/framework.tgz /usr/local/app/tars/ \\\n && cd /usr/local/app/tars/ \\\n && tar xzfv framework.tgz \\\n && rm -rf framework.tgz \\\n && mkdir -p /usr/local/app/patchs/tars.upload \\\n && cd /tmp \\\n && curl -fsSL https://getcomposer.org/installer | php \\\n && chmod +x composer.phar \\\n && mv composer.phar /usr/local/bin/composer \\\n && cd /root/Tars/php/tars-extension/ \\\n && phpize --clean \\\n && phpize \\\n && ./configure --enable-phptars --with-php-config=/usr/bin/php-config \\\n && make \\\n && make install \\\n && echo \"extension=phptars.so\" > /etc/php.d/phptars.ini \\\n && cd /root \\\n && wget -c -t 0 https://github.com/swoole/swoole-src/archive/v2.2.0.tar.gz \\\n && tar zxf v2.2.0.tar.gz \\\n && cd swoole-src-2.2.0 \\\n && phpize \\\n && ./configure \\\n && make \\\n && make install \\\n && echo \"extension=swoole.so\" > /etc/php.d/swoole.ini \\\n && cd /root \\\n && rm -rf v2.2.0.tar.gz swoole-src-2.2.0 \\\n && mkdir -p /root/phptars \\\n && cp -f /root/Tars/php/tars2php/src/tars2php.php /root/phptars \\\n && go get github.com/TarsCloud/TarsGo/tars \\\n && cd $GOPATH/src/github.com/TarsCloud/TarsGo/tars/tools/tars2go \\\n && go build . \\\n && wget -qO- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh | bash \\\n && source ~/.bashrc \\\n && nvm install v8.11.3 \\\n && npm install @tars/deploy @tars/stream @tars/rpc @tars/logs @tars/config @tars/monitor @tars/notify @tars/utils @tars/dyeing @tars/registry -g \\\n && mkdir -p /root/init \\\n && cd /root/init/ \\\n && wget https://mirror.its.sfu.ca/mirror/CentOS-Third-Party/NSG/common/x86_64/jdk-10.0.2_linux-x64_bin.rpm \\\n && rpm -ivh /root/init/jdk-10.0.2_linux-x64_bin.rpm \\\n && rm -rf /root/init/jdk-10.0.2_linux-x64_bin.rpm \\\n && echo \"export JAVA_HOME=/usr/java/jdk-10.0.2\" >> /etc/profile \\\n && echo \"CLASSPATH=$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar\" >> /etc/profile \\\n && echo \"PATH=$JAVA_HOME/bin:$PATH\" >> /etc/profile \\\n && echo \"export PATH JAVA_HOME CLASSPATH\" >> /etc/profile \\\n && echo \"export JAVA_HOME=/usr/java/jdk-10.0.2\" >> /root/.bashrc \\\n && echo \"CLASSPATH=$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar\" >> /root/.bashrc \\\n && echo \"PATH=$JAVA_HOME/bin:$PATH\" >> /root/.bashrc \\\n && echo \"export PATH JAVA_HOME CLASSPATH\" >> /root/.bashrc \\\n && cd /usr/local/ \\\n && wget -c -t 0 https://mirrors.tuna.tsinghua.edu.cn/apache/maven/maven-3/3.5.4/binaries/apache-maven-3.5.4-bin.tar.gz \\\n && tar zxvf apache-maven-3.5.4-bin.tar.gz \\\n && echo \"export MAVEN_HOME=/usr/local/apache-maven-3.5.4/\" >> /etc/profile \\\n && echo \"export PATH=$PATH:$MAVEN_HOME/bin\" >> /etc/profile \\\n && echo \"export PATH=$PATH:$MAVEN_HOME/bin\" >> /root/.bashrc \\\n && source /etc/profile \\\n && mvn -v \\\n && rm -rf apache-maven-3.5.4-bin.tar.gz \\\n && cd /root/Tars/java \\\n && source /etc/profile \\\n && mvn clean install \\\n && mvn clean install -f core/client.pom.xml \\\n && mvn clean install -f core/server.pom.xml \\\n && cd /root/init \\\n && mvn archetype:generate -DgroupId=com.tangramor -DartifactId=TestJava -DarchetypeArtifactId=maven-archetype-webapp -DinteractiveMode=false \\\n && cd /root/Tars/java/examples/quickstart-server/ \\\n && mvn tars:tars2java \\\n && mvn package \\\n && mkdir -p /root/sql \\\n && cp -rf /root/Tars/framework/sql/* /root/sql/ \\\n && cd /root/Tars/framework/build/ \\\n && ./build.sh cleanall \\\n && yum clean all \\\n && rm -rf /var/cache/yum\n#   Whether mount Tars process path to outside, false to support windows\nENV MOUNT_DATA=\"true\"\n#   Network interface (if use --net=host, maybe network interface does not named eth0)\nENV INET_NAME=\"eth0\"\nVOLUME [\"/data\"]\n#   copy source\nCOPY install.sh /root/init/\nCOPY entrypoint.sh /sbin/\nRUN chmod 755 /sbin/entrypoint.sh\nENTRYPOINT [\"/sbin/entrypoint.sh\", \"start\"]\n","originalDockerfileUglifiedHash":"7f712b7a7d4811ff3c5164da64309e78","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/10ea7e72e3c822224a7963dc6bfe5dc90db2a990.dockerfile"}