{"seed":3456457730,"processedDockerfileHash":"c5fb7cd74447be60575cda77860c5af5","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-apk","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM alpine\n#   ---------------- #\n#     Installation   #\n#   ---------------- #\n#   Install all prerequisites\nRUN apk add nginx=1.22.1-r0 nodejs=18.14.2-r0 nodejs-npm git=2.38.4-r1 curl=7.88.1-r1 wget=1.21.3-r2 gcc=12.2.1_git20220924-r4 ca-certificates=20220614-r4 python-dev py-pip musl-dev=1.2.3-r4 libffi-dev=3.4.4-r0 cairo=1.17.6-r3 supervisor=4.2.4-r0 bash=5.2.15-r0 py-pyldap py-rrd --update --no-cache \\\n && wget -q -O /etc/apk/keys/sgerrand.rsa.pub https://raw.githubusercontent.com/sgerrand/alpine-pkg-glibc/master/sgerrand.rsa.pub \\\n && wget https://github.com/sgerrand/alpine-pkg-glibc/releases/download/2.26-r0/glibc-2.26-r0.apk \\\n && apk add glibc-2.26-r0.apk --no-cache \\\n && rm glibc-2.26-r0.apk \\\n && adduser -D -u 1000 -g 'www' www \\\n && pip install pip==23.1 pytz==2023.3 gunicorn==20.1.0 six==1.16.0 -U --no-cache-dir \\\n && npm install wizzy@0.7.0 -g \\\n && npm cache clean --force\n#   Checkout the master branches of Graphite, Carbon and Whisper and install from there\nRUN mkdir /src \\\n && git clone --depth=1 --branch master https://github.com/graphite-project/whisper.git /src/whisper \\\n && cd /src/whisper \\\n && pip install . --no-cache-dir \\\n && python setup.py install\nRUN git clone --depth=1 --branch master https://github.com/graphite-project/carbon.git /src/carbon \\\n && cd /src/carbon \\\n && pip install . --no-cache-dir \\\n && python setup.py install\nRUN git clone --depth=1 --branch master https://github.com/graphite-project/graphite-web.git /src/graphite-web \\\n && cd /src/graphite-web \\\n && pip install . --no-cache-dir \\\n && python setup.py install \\\n && pip install -r requirements.txt --no-cache-dir \\\n && python check-dependencies.py\n#   Install StatsD\nRUN git clone --depth=1 --branch master https://github.com/etsy/statsd.git /src/statsd\n#   Install Grafana\nRUN mkdir /src/grafana \\\n && mkdir /opt/grafana \\\n && curl https://s3-us-west-2.amazonaws.com/grafana-releases/release/grafana-4.6.3.linux-x64.tar.gz -o /src/grafana.tar.gz \\\n && tar -xzf /src/grafana.tar.gz -C /opt/grafana --strip-components=1 \\\n && rm /src/grafana.tar.gz\n#   Cleanup Compile Dependencies\nRUN apk del --no-cache git curl wget gcc python-dev musl-dev libffi-dev\n#   ----------------- #\n#     Configuration   #\n#   ----------------- #\n#   Confiure StatsD\nCOPY ./statsd/config.js /src/statsd/config.js\n#   Configure Whisper, Carbon and Graphite-Web\nCOPY ./graphite/initial_data.json /opt/graphite/webapp/graphite/initial_data.json\nCOPY ./graphite/local_settings.py /opt/graphite/webapp/graphite/local_settings.py\nCOPY ./graphite/carbon.conf /opt/graphite/conf/carbon.conf\nCOPY ./graphite/storage-schemas.conf /opt/graphite/conf/storage-schemas.conf\nCOPY ./graphite/storage-aggregation.conf /opt/graphite/conf/storage-aggregation.conf\nRUN mkdir -p /opt/graphite/storage/whisper \\\n && mkdir -p /opt/graphite/storage/log/webapp \\\n && touch /opt/graphite/storage/graphite.db /opt/graphite/storage/index \\\n && chown -R www /opt/graphite/storage \\\n && chmod 0775 /opt/graphite/storage /opt/graphite/storage/whisper \\\n && chmod 0664 /opt/graphite/storage/graphite.db \\\n && cp /src/graphite-web/webapp/manage.py /opt/graphite/webapp \\\n && cd /opt/graphite/webapp/ \\\n && python manage.py migrate --run-syncdb --noinput\n#   Configure Grafana and wizzy\nCOPY ./grafana/custom.ini /opt/grafana/conf/custom.ini\nRUN cd /src \\\n && wizzy init \\\n && extract() { cat /opt/grafana/conf/custom.ini | grep $1 | awk '{print $NF}' ; } \\\n && wizzy set grafana url $( extract \";protocol\" ;)://$( extract \";domain\" ;):$( extract \";http_port\" ;) \\\n && wizzy set grafana username $( extract \";admin_user\" ;) \\\n && wizzy set grafana password $( extract \";admin_password\" ;)\n#   Add the default datasource and dashboards\nRUN mkdir /src/datasources \\\n && mkdir /src/dashboards\nCOPY ./grafana/datasources/* /src/datasources\nCOPY ./grafana/dashboards/* /src/dashboards/\nCOPY ./grafana/export-datasources-and-dashboards.sh /src/\n#   Configure nginx and supervisord\nCOPY ./nginx/nginx.conf /etc/nginx/nginx.conf\nRUN mkdir /var/log/supervisor\nCOPY ./supervisord.conf /etc/supervisor/conf.d/supervisord.conf\n#   ---------------- #\n#     Expose Ports   #\n#   ---------------- #\n#   Grafana\nEXPOSE 80/tcp\n#   StatsD UDP port\nEXPOSE 8125/udp\n#   StatsD Management port\nEXPOSE 8126/tcp\n#   Graphite web port\nEXPOSE 81/tcp\n#   Graphite Carbon port\nEXPOSE 2003/tcp\n#   -------- #\n#     Run!   #\n#   -------- #\nCMD [\"/usr/bin/supervisord\", \"--nodaemon\", \"--configuration\", \"/etc/supervisor/conf.d/supervisord.conf\"]\nRUN addgroup -S docker-user ; adduser -S -G docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM alpine\n#  ---------------- #\n#    Installation   #\n#  ---------------- #\n#  Install all prerequisites\nRUN apk add --update --no-cache nginx nodejs nodejs-npm git curl wget gcc ca-certificates python-dev py-pip musl-dev libffi-dev cairo supervisor bash py-pyldap py-rrd \\\n && wget -q -O /etc/apk/keys/sgerrand.rsa.pub https://raw.githubusercontent.com/sgerrand/alpine-pkg-glibc/master/sgerrand.rsa.pub \\\n && wget https://github.com/sgerrand/alpine-pkg-glibc/releases/download/2.26-r0/glibc-2.26-r0.apk \\\n && apk add --no-cache glibc-2.26-r0.apk \\\n && rm glibc-2.26-r0.apk \\\n && adduser -D -u 1000 -g 'www' www \\\n && pip install pip pytz gunicorn six -U --no-cache-dir \\\n && npm install wizzy -g \\\n && npm cache clean --force\n#  Checkout the master branches of Graphite, Carbon and Whisper and install from there\nRUN mkdir /src \\\n && git clone --depth=1 --branch master https://github.com/graphite-project/whisper.git /src/whisper \\\n && cd /src/whisper \\\n && pip install . --no-cache-dir \\\n && python setup.py install\nRUN git clone --depth=1 --branch master https://github.com/graphite-project/carbon.git /src/carbon \\\n && cd /src/carbon \\\n && pip install . --no-cache-dir \\\n && python setup.py install\nRUN git clone --depth=1 --branch master https://github.com/graphite-project/graphite-web.git /src/graphite-web \\\n && cd /src/graphite-web \\\n && pip install . --no-cache-dir \\\n && python setup.py install \\\n && pip install -r requirements.txt --no-cache-dir \\\n && python check-dependencies.py\n#  Install StatsD\nRUN git clone --depth=1 --branch master https://github.com/etsy/statsd.git /src/statsd\n#  Install Grafana\nRUN mkdir /src/grafana \\\n && mkdir /opt/grafana \\\n && curl https://s3-us-west-2.amazonaws.com/grafana-releases/release/grafana-4.6.3.linux-x64.tar.gz -o /src/grafana.tar.gz \\\n && tar -xzf /src/grafana.tar.gz -C /opt/grafana --strip-components=1 \\\n && rm /src/grafana.tar.gz\n#  Cleanup Compile Dependencies\nRUN apk del --no-cache git curl wget gcc python-dev musl-dev libffi-dev\n#  ----------------- #\n#    Configuration   #\n#  ----------------- #\n#  Confiure StatsD\nADD ./statsd/config.js /src/statsd/config.js\n#  Configure Whisper, Carbon and Graphite-Web\nADD ./graphite/initial_data.json /opt/graphite/webapp/graphite/initial_data.json\nADD ./graphite/local_settings.py /opt/graphite/webapp/graphite/local_settings.py\nADD ./graphite/carbon.conf /opt/graphite/conf/carbon.conf\nADD ./graphite/storage-schemas.conf /opt/graphite/conf/storage-schemas.conf\nADD ./graphite/storage-aggregation.conf /opt/graphite/conf/storage-aggregation.conf\nRUN mkdir -p /opt/graphite/storage/whisper \\\n && mkdir -p /opt/graphite/storage/log/webapp \\\n && touch /opt/graphite/storage/graphite.db /opt/graphite/storage/index \\\n && chown -R www /opt/graphite/storage \\\n && chmod 0775 /opt/graphite/storage /opt/graphite/storage/whisper \\\n && chmod 0664 /opt/graphite/storage/graphite.db \\\n && cp /src/graphite-web/webapp/manage.py /opt/graphite/webapp \\\n && cd /opt/graphite/webapp/ \\\n && python manage.py migrate --run-syncdb --noinput\n#  Configure Grafana and wizzy\nADD ./grafana/custom.ini /opt/grafana/conf/custom.ini\nRUN cd /src \\\n && wizzy init \\\n && extract() { cat /opt/grafana/conf/custom.ini | grep $1 | awk '{print $NF}' ; } \\\n && wizzy set grafana url $( extract \";protocol\" ;)://$( extract \";domain\" ;):$( extract \";http_port\" ;) \\\n && wizzy set grafana username $( extract \";admin_user\" ;) \\\n && wizzy set grafana password $( extract \";admin_password\" ;)\n#  Add the default datasource and dashboards\nRUN mkdir /src/datasources \\\n && mkdir /src/dashboards\nADD ./grafana/datasources/* /src/datasources\nADD ./grafana/dashboards/* /src/dashboards/\nADD ./grafana/export-datasources-and-dashboards.sh /src/\n#  Configure nginx and supervisord\nADD ./nginx/nginx.conf /etc/nginx/nginx.conf\nRUN mkdir /var/log/supervisor\nADD ./supervisord.conf /etc/supervisor/conf.d/supervisord.conf\n#  ---------------- #\n#    Expose Ports   #\n#  ---------------- #\n#  Grafana\nEXPOSE 80/tcp\n#  StatsD UDP port\nEXPOSE 8125/udp\n#  StatsD Management port\nEXPOSE 8126/tcp\n#  Graphite web port\nEXPOSE 81/tcp\n#  Graphite Carbon port\nEXPOSE 2003/tcp\n#  -------- #\n#    Run!   #\n#  -------- #\nCMD [\"/usr/bin/supervisord\", \"--nodaemon\", \"--configuration\", \"/etc/supervisor/conf.d/supervisord.conf\"]\n","injectedSmells":[],"originalDockerfileHash":"29627416374737555bf45e36ce055c02","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM alpine\n#   ---------------- #\n#     Installation   #\n#   ---------------- #\n#   Install all prerequisites\nRUN apk add --update --no-cache nginx nodejs nodejs-npm git curl wget gcc ca-certificates python-dev py-pip musl-dev libffi-dev cairo supervisor bash py-pyldap py-rrd \\\n && wget -q -O /etc/apk/keys/sgerrand.rsa.pub https://raw.githubusercontent.com/sgerrand/alpine-pkg-glibc/master/sgerrand.rsa.pub \\\n && wget https://github.com/sgerrand/alpine-pkg-glibc/releases/download/2.26-r0/glibc-2.26-r0.apk \\\n && apk add --no-cache glibc-2.26-r0.apk \\\n && rm glibc-2.26-r0.apk \\\n && adduser -D -u 1000 -g 'www' www \\\n && pip install pip pytz gunicorn six -U --no-cache-dir \\\n && npm install wizzy -g \\\n && npm cache clean --force\n#   Checkout the master branches of Graphite, Carbon and Whisper and install from there\nRUN mkdir /src \\\n && git clone --depth=1 --branch master https://github.com/graphite-project/whisper.git /src/whisper \\\n && cd /src/whisper \\\n && pip install . --no-cache-dir \\\n && python setup.py install\nRUN git clone --depth=1 --branch master https://github.com/graphite-project/carbon.git /src/carbon \\\n && cd /src/carbon \\\n && pip install . --no-cache-dir \\\n && python setup.py install\nRUN git clone --depth=1 --branch master https://github.com/graphite-project/graphite-web.git /src/graphite-web \\\n && cd /src/graphite-web \\\n && pip install . --no-cache-dir \\\n && python setup.py install \\\n && pip install -r requirements.txt --no-cache-dir \\\n && python check-dependencies.py\n#   Install StatsD\nRUN git clone --depth=1 --branch master https://github.com/etsy/statsd.git /src/statsd\n#   Install Grafana\nRUN mkdir /src/grafana \\\n && mkdir /opt/grafana \\\n && curl https://s3-us-west-2.amazonaws.com/grafana-releases/release/grafana-4.6.3.linux-x64.tar.gz -o /src/grafana.tar.gz \\\n && tar -xzf /src/grafana.tar.gz -C /opt/grafana --strip-components=1 \\\n && rm /src/grafana.tar.gz\n#   Cleanup Compile Dependencies\nRUN apk del --no-cache git curl wget gcc python-dev musl-dev libffi-dev\n#   ----------------- #\n#     Configuration   #\n#   ----------------- #\n#   Confiure StatsD\nADD ./statsd/config.js /src/statsd/config.js\n#   Configure Whisper, Carbon and Graphite-Web\nADD ./graphite/initial_data.json /opt/graphite/webapp/graphite/initial_data.json\nADD ./graphite/local_settings.py /opt/graphite/webapp/graphite/local_settings.py\nADD ./graphite/carbon.conf /opt/graphite/conf/carbon.conf\nADD ./graphite/storage-schemas.conf /opt/graphite/conf/storage-schemas.conf\nADD ./graphite/storage-aggregation.conf /opt/graphite/conf/storage-aggregation.conf\nRUN mkdir -p /opt/graphite/storage/whisper \\\n && mkdir -p /opt/graphite/storage/log/webapp \\\n && touch /opt/graphite/storage/graphite.db /opt/graphite/storage/index \\\n && chown -R www /opt/graphite/storage \\\n && chmod 0775 /opt/graphite/storage /opt/graphite/storage/whisper \\\n && chmod 0664 /opt/graphite/storage/graphite.db \\\n && cp /src/graphite-web/webapp/manage.py /opt/graphite/webapp \\\n && cd /opt/graphite/webapp/ \\\n && python manage.py migrate --run-syncdb --noinput\n#   Configure Grafana and wizzy\nADD ./grafana/custom.ini /opt/grafana/conf/custom.ini\nRUN cd /src \\\n && wizzy init \\\n && extract() { cat /opt/grafana/conf/custom.ini | grep $1 | awk '{print $NF}' ; } \\\n && wizzy set grafana url $( extract \";protocol\" ;)://$( extract \";domain\" ;):$( extract \";http_port\" ;) \\\n && wizzy set grafana username $( extract \";admin_user\" ;) \\\n && wizzy set grafana password $( extract \";admin_password\" ;)\n#   Add the default datasource and dashboards\nRUN mkdir /src/datasources \\\n && mkdir /src/dashboards\nADD ./grafana/datasources/* /src/datasources\nADD ./grafana/dashboards/* /src/dashboards/\nADD ./grafana/export-datasources-and-dashboards.sh /src/\n#   Configure nginx and supervisord\nADD ./nginx/nginx.conf /etc/nginx/nginx.conf\nRUN mkdir /var/log/supervisor\nADD ./supervisord.conf /etc/supervisor/conf.d/supervisord.conf\n#   ---------------- #\n#     Expose Ports   #\n#   ---------------- #\n#   Grafana\nEXPOSE 80/tcp\n#   StatsD UDP port\nEXPOSE 8125/udp\n#   StatsD Management port\nEXPOSE 8126/tcp\n#   Graphite web port\nEXPOSE 81/tcp\n#   Graphite Carbon port\nEXPOSE 2003/tcp\n#   -------- #\n#     Run!   #\n#   -------- #\nCMD [\"/usr/bin/supervisord\", \"--nodaemon\", \"--configuration\", \"/etc/supervisor/conf.d/supervisord.conf\"]\n","originalDockerfileUglifiedHash":"74892260687b2bd412ff4a5bdfeb72f1","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/097bcd446a61df649c4f38c91e7451f24b0190ef.dockerfile"}