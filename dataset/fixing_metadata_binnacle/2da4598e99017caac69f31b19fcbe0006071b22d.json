{"seed":3919105886,"processedDockerfileHash":"cdaa5355d6d74816932d0cef3a9e8a67","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM nutshells/base:centos\nLABEL maintainer=\"Chao QU <mail@quchao.com>\"\nARG SS_VERSION='3.2.0'\nARG SS_SHA256='5521cf623a07fd1e393528516a83acd2b66c5d4bb4535a52662806a6a060c606'\nARG OBFS_VERSION='0.0.5'\nARG OBFS_SHA256='0de9b551b67ec82d0af9d09bcb74c9e8d047f0082ae07db8e4f5f3defeb2ce4c'\nARG LIBSODIUM_VERSION='1.0.16'\nARG LIBSODIUM_SHA256='eeadc7e1e1bcef09680fb4837d448fbdf57224978f865ac1c16745868fbd0533'\nARG LIBMBEDTLS_VERSION='2.10.0'\nARG LIBMBEDTLS_SHA256='ca11a8809d6974ac0f76455b3df5bfd3b5fe973296b4038fdd7a5d7b8a3cd30d'\nARG LIBCORK_COMMIT='9a1917d'\nARG LIBCORK_SHA256='2193830fc67d946e89701d04d557e4b29bcb956f5cedfb90b727e23326045e78'\nENV WITH_OBFS=\"true\"\nWORKDIR /usr/local/src/\n#   Dev Tools & Deps\nRUN set -ex ; yum install -y gcc autoconf automake libtool make pcre-devel c-ares-devel libev-devel ; curl -sSLO \"https://github.com/jedisct1/libsodium/releases/download/${LIBSODIUM_VERSION}/libsodium-${LIBSODIUM_VERSION}.tar.gz\" ; echo \"${LIBSODIUM_SHA256} libsodium-${LIBSODIUM_VERSION}.tar.gz\" | sha256sum -c - ; tar xvf \"libsodium-${LIBSODIUM_VERSION}.tar.gz\" ; pushd \"libsodium-${LIBSODIUM_VERSION}\" ; env CFLAGS=-Ofast ./configure --disable-dependency-tracking --prefix=/usr ; make install ; popd ; rm -f \"libsodium-${LIBSODIUM_VERSION}.tar.gz\" ; rm -rf \"libsodium-${LIBSODIUM_VERSION}\" ; curl -sSLO \"https://github.com/ARMmbed/mbedtls/archive/mbedtls-${LIBMBEDTLS_VERSION}.tar.gz\" ; echo \"${LIBMBEDTLS_SHA256} mbedtls-${LIBMBEDTLS_VERSION}.tar.gz\" | sha256sum -c - ; tar xvf \"mbedtls-${LIBMBEDTLS_VERSION}.tar.gz\" ; pushd \"mbedtls-mbedtls-${LIBMBEDTLS_VERSION}\" ; make SHARED=1 CFLAGS=-fPIC ; make DESTDIR=/usr install ; popd ; rm -f \"mbedtls-${LIBMBEDTLS_VERSION}.tar.gz\" ; rm -rf \"mbedtls-mbedtls-${LIBMBEDTLS_VERSION}\" ; curl -sSLO \"https://github.com/shadowsocks/shadowsocks-libev/releases/download/v${SS_VERSION}/shadowsocks-libev-${SS_VERSION}.tar.gz\" ; echo \"${SS_SHA256} shadowsocks-libev-${SS_VERSION}.tar.gz\" | sha256sum -c - ; tar xvf \"shadowsocks-libev-${SS_VERSION}.tar.gz\" ; pushd \"shadowsocks-libev-${SS_VERSION}\" ; ./configure --disable-documentation ; make ; cp src/ss-server src/ss-local /usr/local/bin/ ; popd ; rm -f \"shadowsocks-libev-${SS_VERSION}.tar.gz\" ; rm -rf \"shadowsocks-libev-${SS_VERSION}\" ; if [ \"${WITH_OBFS}\" = 'true' ] ; then curl -sSLO \"https://github.com/shadowsocks/simple-obfs/archive/v${OBFS_VERSION}.tar.gz\" ;echo \"${OBFS_SHA256} v${OBFS_VERSION}.tar.gz\" | sha256sum -c ;tar xvf \"v${OBFS_VERSION}.tar.gz\" ;pushd \"simple-obfs-${OBFS_VERSION}\" ;curl -sSLO \"https://github.com/shadowsocks/libcork/archive/${LIBCORK_COMMIT}.tar.gz\" ;echo \"${LIBCORK_SHA256} ${LIBCORK_COMMIT}.tar.gz\" | sha256sum -c ;tar xvf \"${LIBCORK_COMMIT}.tar.gz\" ;rm -rf libcork ;mv libcork-* libcork ;./autogen.sh ;./configure --disable-documentation ;make ;cp src/obfs-server src/obfs-local /usr/local/bin/ ;popd ;rm -f \"v${OBFS_VERSION}.tar.gz\" ;rm -rf \"simple-obfs-${OBFS_VERSION}\" ; fi ; yum remove -y gcc autoconf automake libtool make ; yum clean all ; rm -rf /tmp/* /var/tmp/* /usr/local/src/*\nCOPY docker-entrypoint.sh /usr/local/bin/\nRUN set -ex ; sed -i 's/su-exec/gosu/' /usr/local/bin/docker-entrypoint.sh ; chmod +x /usr/local/bin/docker-entrypoint.sh ; chown \"${RUN_AS_USER}\":\"${RUN_AS_USER}\" /usr/local/bin/ss-* ; chown \"${RUN_AS_USER}\":\"${RUN_AS_USER}\" /usr/local/bin/obfs-*\nENV LISTEN_PORT=\"12345\" \\\n    SERVER_ADDRESS=\"\" \\\n    SERVER_PORT=\"\" \\\n    PASSWORD=\"\" \\\n    KEY_IN_BASE64=\"\" \\\n    ENCRYPT_METHOD=\"xchacha20-ietf-poly1305\" \\\n    TCP_RELAY=\"true\" \\\n    UDP_RELAY=\"true\" \\\n    REUSE_PORT=\"true\" \\\n    TCP_FAST_OPEN=\"true\" \\\n    OBFS_PLUGIN=\"http\" \\\n    OBFS_HOST=\"bing.com\"\n#  HEALTHCHECK --interval=1m --timeout=3s \\\n#      CMD [[ \"$(curl -f http://localhost:\"${LISTEN_PORT}\" 2>&1 | grep 'curl: (52)' | wc -l)\" -eq 1 ]] || exit 1\nEXPOSE ${LISTEN_PORT}/tcp ${LISTEN_PORT}/udp\nWORKDIR /usr/local/var/ss-obfs\nENTRYPOINT [\"docker-entrypoint.sh\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM nutshells/base:centos\nLABEL maintainer=\"Chao QU <mail@quchao.com>\"\nARG SS_VERSION='3.2.0'\nARG SS_SHA256='5521cf623a07fd1e393528516a83acd2b66c5d4bb4535a52662806a6a060c606'\nARG OBFS_VERSION='0.0.5'\nARG OBFS_SHA256='0de9b551b67ec82d0af9d09bcb74c9e8d047f0082ae07db8e4f5f3defeb2ce4c'\nARG LIBSODIUM_VERSION='1.0.16'\nARG LIBSODIUM_SHA256='eeadc7e1e1bcef09680fb4837d448fbdf57224978f865ac1c16745868fbd0533'\nARG LIBMBEDTLS_VERSION='2.10.0'\nARG LIBMBEDTLS_SHA256='ca11a8809d6974ac0f76455b3df5bfd3b5fe973296b4038fdd7a5d7b8a3cd30d'\nARG LIBCORK_COMMIT='9a1917d'\nARG LIBCORK_SHA256='2193830fc67d946e89701d04d557e4b29bcb956f5cedfb90b727e23326045e78'\nENV WITH_OBFS=\"true\"\nWORKDIR /usr/local/src/\n#  Dev Tools & Deps\nRUN set -ex ; yum install -y gcc autoconf automake libtool make pcre-devel c-ares-devel libev-devel ; curl -sSLO \"https://github.com/jedisct1/libsodium/releases/download/${LIBSODIUM_VERSION}/libsodium-${LIBSODIUM_VERSION}.tar.gz\" ; echo \"${LIBSODIUM_SHA256} libsodium-${LIBSODIUM_VERSION}.tar.gz\" | sha256sum -c - ; tar xvf \"libsodium-${LIBSODIUM_VERSION}.tar.gz\" ; pushd \"libsodium-${LIBSODIUM_VERSION}\" ; env CFLAGS=-Ofast ./configure --disable-dependency-tracking --prefix=/usr ; make install ; popd ; rm -f \"libsodium-${LIBSODIUM_VERSION}.tar.gz\" ; rm -rf \"libsodium-${LIBSODIUM_VERSION}\" ; curl -sSLO \"https://github.com/ARMmbed/mbedtls/archive/mbedtls-${LIBMBEDTLS_VERSION}.tar.gz\" ; echo \"${LIBMBEDTLS_SHA256} mbedtls-${LIBMBEDTLS_VERSION}.tar.gz\" | sha256sum -c - ; tar xvf \"mbedtls-${LIBMBEDTLS_VERSION}.tar.gz\" ; pushd \"mbedtls-mbedtls-${LIBMBEDTLS_VERSION}\" ; make SHARED=1 CFLAGS=-fPIC ; make DESTDIR=/usr install ; popd ; rm -f \"mbedtls-${LIBMBEDTLS_VERSION}.tar.gz\" ; rm -rf \"mbedtls-mbedtls-${LIBMBEDTLS_VERSION}\" ; curl -sSLO \"https://github.com/shadowsocks/shadowsocks-libev/releases/download/v${SS_VERSION}/shadowsocks-libev-${SS_VERSION}.tar.gz\" ; echo \"${SS_SHA256} shadowsocks-libev-${SS_VERSION}.tar.gz\" | sha256sum -c - ; tar xvf \"shadowsocks-libev-${SS_VERSION}.tar.gz\" ; pushd \"shadowsocks-libev-${SS_VERSION}\" ; ./configure --disable-documentation ; make ; cp src/ss-server src/ss-local /usr/local/bin/ ; popd ; rm -f \"shadowsocks-libev-${SS_VERSION}.tar.gz\" ; rm -rf \"shadowsocks-libev-${SS_VERSION}\" ; if [ \"${WITH_OBFS}\" = 'true' ] ; then curl -sSLO \"https://github.com/shadowsocks/simple-obfs/archive/v${OBFS_VERSION}.tar.gz\" ;echo \"${OBFS_SHA256} v${OBFS_VERSION}.tar.gz\" | sha256sum -c ;tar xvf \"v${OBFS_VERSION}.tar.gz\" ;pushd \"simple-obfs-${OBFS_VERSION}\" ;curl -sSLO \"https://github.com/shadowsocks/libcork/archive/${LIBCORK_COMMIT}.tar.gz\" ;echo \"${LIBCORK_SHA256} ${LIBCORK_COMMIT}.tar.gz\" | sha256sum -c ;tar xvf \"${LIBCORK_COMMIT}.tar.gz\" ;rm -rf libcork ;mv libcork-* libcork ;./autogen.sh ;./configure --disable-documentation ;make ;cp src/obfs-server src/obfs-local /usr/local/bin/ ;popd ;rm -f \"v${OBFS_VERSION}.tar.gz\" ;rm -rf \"simple-obfs-${OBFS_VERSION}\" ; fi ; yum remove -y gcc autoconf automake libtool make ; yum clean all ; rm -rf /tmp/* /var/tmp/* /usr/local/src/*\nCOPY docker-entrypoint.sh /usr/local/bin/\nRUN set -ex ; sed -i 's/su-exec/gosu/' /usr/local/bin/docker-entrypoint.sh ; chmod +x /usr/local/bin/docker-entrypoint.sh ; chown \"${RUN_AS_USER}\":\"${RUN_AS_USER}\" /usr/local/bin/ss-* ; chown \"${RUN_AS_USER}\":\"${RUN_AS_USER}\" /usr/local/bin/obfs-*\nENV LISTEN_PORT=\"12345\" \\\n    SERVER_ADDRESS=\"\" \\\n    SERVER_PORT=\"\" \\\n    PASSWORD=\"\" \\\n    KEY_IN_BASE64=\"\" \\\n    ENCRYPT_METHOD=\"xchacha20-ietf-poly1305\" \\\n    TCP_RELAY=\"true\" \\\n    UDP_RELAY=\"true\" \\\n    REUSE_PORT=\"true\" \\\n    TCP_FAST_OPEN=\"true\" \\\n    OBFS_PLUGIN=\"http\" \\\n    OBFS_HOST=\"bing.com\"\n# HEALTHCHECK --interval=1m --timeout=3s \\\n#     CMD [[ \"$(curl -f http://localhost:\"${LISTEN_PORT}\" 2>&1 | grep 'curl: (52)' | wc -l)\" -eq 1 ]] || exit 1\nEXPOSE ${LISTEN_PORT}/tcp ${LISTEN_PORT}/udp\nWORKDIR /usr/local/var/ss-obfs\nENTRYPOINT [\"docker-entrypoint.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"ff6d0c19b23f18a986526131e998cf5e","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM nutshells/base:centos\nLABEL maintainer=\"Chao QU <mail@quchao.com>\"\nARG SS_VERSION='3.2.0'\nARG SS_SHA256='5521cf623a07fd1e393528516a83acd2b66c5d4bb4535a52662806a6a060c606'\nARG OBFS_VERSION='0.0.5'\nARG OBFS_SHA256='0de9b551b67ec82d0af9d09bcb74c9e8d047f0082ae07db8e4f5f3defeb2ce4c'\nARG LIBSODIUM_VERSION='1.0.16'\nARG LIBSODIUM_SHA256='eeadc7e1e1bcef09680fb4837d448fbdf57224978f865ac1c16745868fbd0533'\nARG LIBMBEDTLS_VERSION='2.10.0'\nARG LIBMBEDTLS_SHA256='ca11a8809d6974ac0f76455b3df5bfd3b5fe973296b4038fdd7a5d7b8a3cd30d'\nARG LIBCORK_COMMIT='9a1917d'\nARG LIBCORK_SHA256='2193830fc67d946e89701d04d557e4b29bcb956f5cedfb90b727e23326045e78'\nENV WITH_OBFS=\"true\"\nWORKDIR /usr/local/src/\n#   Dev Tools & Deps\nRUN set -ex ; yum install -y gcc autoconf automake libtool make pcre-devel c-ares-devel libev-devel ; curl -sSLO \"https://github.com/jedisct1/libsodium/releases/download/${LIBSODIUM_VERSION}/libsodium-${LIBSODIUM_VERSION}.tar.gz\" ; echo \"${LIBSODIUM_SHA256} libsodium-${LIBSODIUM_VERSION}.tar.gz\" | sha256sum -c - ; tar xvf \"libsodium-${LIBSODIUM_VERSION}.tar.gz\" ; pushd \"libsodium-${LIBSODIUM_VERSION}\" ; env CFLAGS=-Ofast ./configure --disable-dependency-tracking --prefix=/usr ; make install ; popd ; rm -f \"libsodium-${LIBSODIUM_VERSION}.tar.gz\" ; rm -rf \"libsodium-${LIBSODIUM_VERSION}\" ; curl -sSLO \"https://github.com/ARMmbed/mbedtls/archive/mbedtls-${LIBMBEDTLS_VERSION}.tar.gz\" ; echo \"${LIBMBEDTLS_SHA256} mbedtls-${LIBMBEDTLS_VERSION}.tar.gz\" | sha256sum -c - ; tar xvf \"mbedtls-${LIBMBEDTLS_VERSION}.tar.gz\" ; pushd \"mbedtls-mbedtls-${LIBMBEDTLS_VERSION}\" ; make SHARED=1 CFLAGS=-fPIC ; make DESTDIR=/usr install ; popd ; rm -f \"mbedtls-${LIBMBEDTLS_VERSION}.tar.gz\" ; rm -rf \"mbedtls-mbedtls-${LIBMBEDTLS_VERSION}\" ; curl -sSLO \"https://github.com/shadowsocks/shadowsocks-libev/releases/download/v${SS_VERSION}/shadowsocks-libev-${SS_VERSION}.tar.gz\" ; echo \"${SS_SHA256} shadowsocks-libev-${SS_VERSION}.tar.gz\" | sha256sum -c - ; tar xvf \"shadowsocks-libev-${SS_VERSION}.tar.gz\" ; pushd \"shadowsocks-libev-${SS_VERSION}\" ; ./configure --disable-documentation ; make ; cp src/ss-server src/ss-local /usr/local/bin/ ; popd ; rm -f \"shadowsocks-libev-${SS_VERSION}.tar.gz\" ; rm -rf \"shadowsocks-libev-${SS_VERSION}\" ; if [ \"${WITH_OBFS}\" = 'true' ] ; then curl -sSLO \"https://github.com/shadowsocks/simple-obfs/archive/v${OBFS_VERSION}.tar.gz\" ;echo \"${OBFS_SHA256} v${OBFS_VERSION}.tar.gz\" | sha256sum -c ;tar xvf \"v${OBFS_VERSION}.tar.gz\" ;pushd \"simple-obfs-${OBFS_VERSION}\" ;curl -sSLO \"https://github.com/shadowsocks/libcork/archive/${LIBCORK_COMMIT}.tar.gz\" ;echo \"${LIBCORK_SHA256} ${LIBCORK_COMMIT}.tar.gz\" | sha256sum -c ;tar xvf \"${LIBCORK_COMMIT}.tar.gz\" ;rm -rf libcork ;mv libcork-* libcork ;./autogen.sh ;./configure --disable-documentation ;make ;cp src/obfs-server src/obfs-local /usr/local/bin/ ;popd ;rm -f \"v${OBFS_VERSION}.tar.gz\" ;rm -rf \"simple-obfs-${OBFS_VERSION}\" ; fi ; yum remove -y gcc autoconf automake libtool make ; yum clean all ; rm -rf /tmp/* /var/tmp/* /usr/local/src/*\nCOPY docker-entrypoint.sh /usr/local/bin/\nRUN set -ex ; sed -i 's/su-exec/gosu/' /usr/local/bin/docker-entrypoint.sh ; chmod +x /usr/local/bin/docker-entrypoint.sh ; chown \"${RUN_AS_USER}\":\"${RUN_AS_USER}\" /usr/local/bin/ss-* ; chown \"${RUN_AS_USER}\":\"${RUN_AS_USER}\" /usr/local/bin/obfs-*\nENV LISTEN_PORT=\"12345\" \\\n    SERVER_ADDRESS=\"\" \\\n    SERVER_PORT=\"\" \\\n    PASSWORD=\"\" \\\n    KEY_IN_BASE64=\"\" \\\n    ENCRYPT_METHOD=\"xchacha20-ietf-poly1305\" \\\n    TCP_RELAY=\"true\" \\\n    UDP_RELAY=\"true\" \\\n    REUSE_PORT=\"true\" \\\n    TCP_FAST_OPEN=\"true\" \\\n    OBFS_PLUGIN=\"http\" \\\n    OBFS_HOST=\"bing.com\"\n#  HEALTHCHECK --interval=1m --timeout=3s \\\n#      CMD [[ \"$(curl -f http://localhost:\"${LISTEN_PORT}\" 2>&1 | grep 'curl: (52)' | wc -l)\" -eq 1 ]] || exit 1\nEXPOSE ${LISTEN_PORT}/tcp ${LISTEN_PORT}/udp\nWORKDIR /usr/local/var/ss-obfs\nENTRYPOINT [\"docker-entrypoint.sh\"]\n","originalDockerfileUglifiedHash":"296f6c1bf1b68a849f51e32a6d68ef58","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/2da4598e99017caac69f31b19fcbe0006071b22d.dockerfile"}