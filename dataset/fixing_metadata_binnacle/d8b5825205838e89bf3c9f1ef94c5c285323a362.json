{"seed":50757565,"processedDockerfileHash":"947e480d987ac3f995e1a4d628947a87","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Copyright 2017 The Kubernetes Authors.\n#\n#   Licensed under the Apache License, Version 2.0 (the \"License\");\n#   you may not use this file except in compliance with the License.\n#   You may obtain a copy of the License at\n#\n#       http://www.apache.org/licenses/LICENSE-2.0\n#\n#   Unless required by applicable law or agreed to in writing, software\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#   See the License for the specific language governing permissions and\n#   limitations under the License.\n#   Includes basic workspace setup, with gcloud and a bootstrap runner\nFROM debian:stretch\nWORKDIR /workspace\nRUN mkdir -p /workspace\nENV WORKSPACE=\"/workspace\" \\\n    TERM=\"xterm\"\n#   add env we can debug with the image name:tag\nARG IMAGE_ARG\nENV IMAGE=\"${IMAGE_ARG}\"\n#   common util tools\n#   https://github.com/GoogleCloudPlatform/gsutil/issues/446 for python-openssl\nRUN apt-get update \\\n && apt-get install --no-install-recommends build-essential=12.3 ca-certificates=20200601~deb9u2 curl=7.52.1-5+deb9u16 file=1:5.30-1+deb9u3 git=1:2.11.0-3+deb9u7 jq=1.5+dfsg-1.3 mercurial=4.0-1+deb9u2 openssh-client=1:7.4p1-10+deb9u7 pkg-config=0.29-4+b1 procps=2:3.3.12-3+deb9u1 python=2.7.13-2 python-dev=2.7.13-2 python-openssl=16.2.0-1 python-pip=9.0.1-2+deb9u2 rsync=3.1.2-1+deb9u3 unzip=6.0-21+deb9u2 wget=1.18-5+deb9u3 xz-utils=5.2.2-1.2+deb9u1 zip=3.0-11+b1 zlib1g-dev=1:1.2.8.dfsg-5+deb9u1 -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && python -m pip install --upgrade pip setuptools wheel\n#   Install gcloud\nENV PATH=\"/google-cloud-sdk/bin:/workspace:${PATH}\" \\\n    CLOUDSDK_CORE_DISABLE_PROMPTS=\"1\"\nRUN wget -q https://dl.google.com/dl/cloudsdk/channels/rapid/google-cloud-sdk.tar.gz \\\n && tar xzf google-cloud-sdk.tar.gz -C / \\\n && rm google-cloud-sdk.tar.gz \\\n && /google-cloud-sdk/install.sh --disable-installation-options --bash-completion=false --path-update=false --usage-reporting=false \\\n && gcloud components install alpha beta kubectl \\\n && gcloud info | tee /workspace/gcloud-info.txt\n#\n#   BEGIN: DOCKER IN DOCKER SETUP\n#\n#   Install Docker deps, some of these are already installed in the image but\n#   that's fine since they won't re-install and we can reuse the code below\n#   for another image someday.\nRUN apt-get update \\\n && apt-get install --no-install-recommends apt-transport-https=1.4.11 ca-certificates=20200601~deb9u2 curl=7.52.1-5+deb9u16 gnupg2=2.1.18-8~deb9u4 software-properties-common=0.96.20.2-1+deb9u1 lsb-release=9.20161125 -y \\\n && rm -rf /var/lib/apt/lists/*\n#   Add the Docker apt-repository\nRUN curl -fsSL https://download.docker.com/linux/$( . /etc/os-release ;echo \"$ID\" ;)/gpg | apt-key add - \\\n && add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/$( . /etc/os-release ;echo \"$ID\" ;) $( lsb_release -cs ;) stable\"\n#   Install Docker\n#   TODO: the `sed` is a bit of a hack, look into alternatives.\n#   Why this exists: `docker service start` on debian runs a `cgroupfs_mount` method,\n#   We're already inside docker though so we can be sure these are already mounted.\n#   Trying to remount these makes for a very noisy error block in the beginning of\n#   the pod logs, so we just comment out the call to it... :shrug:\nRUN apt-get update \\\n && apt-get install --no-install-recommends docker-ce=5:18.09.* -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && sed -i 's/cgroupfs_mount$/#cgroupfs_mount\\n/' /etc/init.d/docker\n#   Move Docker's storage location\nRUN echo 'DOCKER_OPTS=\"${DOCKER_OPTS} --data-root=/docker-graph\"' | tee --append /etc/default/docker\n#   NOTE this should be mounted and persisted as a volume ideally (!)\n#   We will make a fallback one now just in case\nRUN mkdir /docker-graph\n#   add custom docker cleanup binary\nCOPY barnacle/barnacle /usr/local/bin/\n#\n#   END: DOCKER IN DOCKER SETUP\n#\n#   note the runner is also responsible for making docker in docker function if\n#   env DOCKER_IN_DOCKER_ENABLED is set and similarly responsible for generating\n#   .bazelrc files if bazel remote caching is enabled \nCOPY entrypoint.sh runner.sh create_bazel_cache_rcs.sh /usr/local/bin/\n#   TODO(krzyzacy): Move the scenario scripts to kubekins v2\n#   The bundled scenarios are for podutil jobs, bootstrap jobs will still use\n#   scenario scripts from cloned test-infra\nRUN mkdir /workspace/scenarios\nCOPY ./scenarios /workspace/scenarios\nENTRYPOINT [\"/usr/local/bin/entrypoint.sh\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Copyright 2017 The Kubernetes Authors.\n#\n#  Licensed under the Apache License, Version 2.0 (the \"License\");\n#  you may not use this file except in compliance with the License.\n#  You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n#  Unless required by applicable law or agreed to in writing, software\n#  distributed under the License is distributed on an \"AS IS\" BASIS,\n#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#  See the License for the specific language governing permissions and\n#  limitations under the License.\n#  Includes basic workspace setup, with gcloud and a bootstrap runner\nFROM debian:stretch\nWORKDIR /workspace\nRUN mkdir -p /workspace\nENV WORKSPACE=\"/workspace\" \\\n    TERM=\"xterm\"\n#  add env we can debug with the image name:tag\nARG IMAGE_ARG\nENV IMAGE=\"${IMAGE_ARG}\"\n#  common util tools\n#  https://github.com/GoogleCloudPlatform/gsutil/issues/446 for python-openssl\nRUN apt-get update \\\n && apt-get install --no-install-recommends build-essential ca-certificates curl file git jq mercurial openssh-client pkg-config procps python python-dev python-openssl python-pip rsync unzip wget xz-utils zip zlib1g-dev -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && python -m pip install --upgrade pip setuptools wheel\n#  Install gcloud\nENV PATH=\"/google-cloud-sdk/bin:/workspace:${PATH}\" \\\n    CLOUDSDK_CORE_DISABLE_PROMPTS=\"1\"\nRUN wget -q https://dl.google.com/dl/cloudsdk/channels/rapid/google-cloud-sdk.tar.gz \\\n && tar xzf google-cloud-sdk.tar.gz -C / \\\n && rm google-cloud-sdk.tar.gz \\\n && /google-cloud-sdk/install.sh --disable-installation-options --bash-completion=false --path-update=false --usage-reporting=false \\\n && gcloud components install alpha beta kubectl \\\n && gcloud info | tee /workspace/gcloud-info.txt\n#\n#  BEGIN: DOCKER IN DOCKER SETUP\n#\n#  Install Docker deps, some of these are already installed in the image but\n#  that's fine since they won't re-install and we can reuse the code below\n#  for another image someday.\nRUN apt-get update \\\n && apt-get install --no-install-recommends apt-transport-https ca-certificates curl gnupg2 software-properties-common lsb-release -y \\\n && rm -rf /var/lib/apt/lists/*\n#  Add the Docker apt-repository\nRUN curl -fsSL https://download.docker.com/linux/$( . /etc/os-release ;echo \"$ID\" ;)/gpg | apt-key add - \\\n && add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/$( . /etc/os-release ;echo \"$ID\" ;) $( lsb_release -cs ;) stable\"\n#  Install Docker\n#  TODO: the `sed` is a bit of a hack, look into alternatives.\n#  Why this exists: `docker service start` on debian runs a `cgroupfs_mount` method,\n#  We're already inside docker though so we can be sure these are already mounted.\n#  Trying to remount these makes for a very noisy error block in the beginning of\n#  the pod logs, so we just comment out the call to it... :shrug:\nRUN apt-get update \\\n && apt-get install --no-install-recommends docker-ce=5:18.09.* -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && sed -i 's/cgroupfs_mount$/#cgroupfs_mount\\n/' /etc/init.d/docker\n#  Move Docker's storage location\nRUN echo 'DOCKER_OPTS=\"${DOCKER_OPTS} --data-root=/docker-graph\"' | tee --append /etc/default/docker\n#  NOTE this should be mounted and persisted as a volume ideally (!)\n#  We will make a fallback one now just in case\nRUN mkdir /docker-graph\n#  add custom docker cleanup binary\nCOPY barnacle/barnacle /usr/local/bin/\n#\n#  END: DOCKER IN DOCKER SETUP\n#\n#  note the runner is also responsible for making docker in docker function if\n#  env DOCKER_IN_DOCKER_ENABLED is set and similarly responsible for generating\n#  .bazelrc files if bazel remote caching is enabled \nCOPY entrypoint.sh runner.sh create_bazel_cache_rcs.sh /usr/local/bin/\n#  TODO(krzyzacy): Move the scenario scripts to kubekins v2\n#  The bundled scenarios are for podutil jobs, bootstrap jobs will still use\n#  scenario scripts from cloned test-infra\nRUN mkdir /workspace/scenarios\nCOPY ./scenarios /workspace/scenarios\nENTRYPOINT [\"/usr/local/bin/entrypoint.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"a98434daba2030089471add703067fbd","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Copyright 2017 The Kubernetes Authors.\n#\n#   Licensed under the Apache License, Version 2.0 (the \"License\");\n#   you may not use this file except in compliance with the License.\n#   You may obtain a copy of the License at\n#\n#       http://www.apache.org/licenses/LICENSE-2.0\n#\n#   Unless required by applicable law or agreed to in writing, software\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#   See the License for the specific language governing permissions and\n#   limitations under the License.\n#   Includes basic workspace setup, with gcloud and a bootstrap runner\nFROM debian:stretch\nWORKDIR /workspace\nRUN mkdir -p /workspace\nENV WORKSPACE=\"/workspace\" \\\n    TERM=\"xterm\"\n#   add env we can debug with the image name:tag\nARG IMAGE_ARG\nENV IMAGE=\"${IMAGE_ARG}\"\n#   common util tools\n#   https://github.com/GoogleCloudPlatform/gsutil/issues/446 for python-openssl\nRUN apt-get update \\\n && apt-get install --no-install-recommends build-essential ca-certificates curl file git jq mercurial openssh-client pkg-config procps python python-dev python-openssl python-pip rsync unzip wget xz-utils zip zlib1g-dev -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && python -m pip install --upgrade pip setuptools wheel\n#   Install gcloud\nENV PATH=\"/google-cloud-sdk/bin:/workspace:${PATH}\" \\\n    CLOUDSDK_CORE_DISABLE_PROMPTS=\"1\"\nRUN wget -q https://dl.google.com/dl/cloudsdk/channels/rapid/google-cloud-sdk.tar.gz \\\n && tar xzf google-cloud-sdk.tar.gz -C / \\\n && rm google-cloud-sdk.tar.gz \\\n && /google-cloud-sdk/install.sh --disable-installation-options --bash-completion=false --path-update=false --usage-reporting=false \\\n && gcloud components install alpha beta kubectl \\\n && gcloud info | tee /workspace/gcloud-info.txt\n#\n#   BEGIN: DOCKER IN DOCKER SETUP\n#\n#   Install Docker deps, some of these are already installed in the image but\n#   that's fine since they won't re-install and we can reuse the code below\n#   for another image someday.\nRUN apt-get update \\\n && apt-get install --no-install-recommends apt-transport-https ca-certificates curl gnupg2 software-properties-common lsb-release -y \\\n && rm -rf /var/lib/apt/lists/*\n#   Add the Docker apt-repository\nRUN curl -fsSL https://download.docker.com/linux/$( . /etc/os-release ;echo \"$ID\" ;)/gpg | apt-key add - \\\n && add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/$( . /etc/os-release ;echo \"$ID\" ;) $( lsb_release -cs ;) stable\"\n#   Install Docker\n#   TODO: the `sed` is a bit of a hack, look into alternatives.\n#   Why this exists: `docker service start` on debian runs a `cgroupfs_mount` method,\n#   We're already inside docker though so we can be sure these are already mounted.\n#   Trying to remount these makes for a very noisy error block in the beginning of\n#   the pod logs, so we just comment out the call to it... :shrug:\nRUN apt-get update \\\n && apt-get install --no-install-recommends docker-ce=5:18.09.* -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && sed -i 's/cgroupfs_mount$/#cgroupfs_mount\\n/' /etc/init.d/docker\n#   Move Docker's storage location\nRUN echo 'DOCKER_OPTS=\"${DOCKER_OPTS} --data-root=/docker-graph\"' | tee --append /etc/default/docker\n#   NOTE this should be mounted and persisted as a volume ideally (!)\n#   We will make a fallback one now just in case\nRUN mkdir /docker-graph\n#   add custom docker cleanup binary\nCOPY barnacle/barnacle /usr/local/bin/\n#\n#   END: DOCKER IN DOCKER SETUP\n#\n#   note the runner is also responsible for making docker in docker function if\n#   env DOCKER_IN_DOCKER_ENABLED is set and similarly responsible for generating\n#   .bazelrc files if bazel remote caching is enabled \nCOPY entrypoint.sh runner.sh create_bazel_cache_rcs.sh /usr/local/bin/\n#   TODO(krzyzacy): Move the scenario scripts to kubekins v2\n#   The bundled scenarios are for podutil jobs, bootstrap jobs will still use\n#   scenario scripts from cloned test-infra\nRUN mkdir /workspace/scenarios\nCOPY ./scenarios /workspace/scenarios\nENTRYPOINT [\"/usr/local/bin/entrypoint.sh\"]\n","originalDockerfileUglifiedHash":"a98285c13e8d71e418b83b9f4a9ff849","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/d8b5825205838e89bf3c9f1ef94c5c285323a362.dockerfile"}