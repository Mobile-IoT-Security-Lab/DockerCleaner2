{"seed":3013922752,"processedDockerfileHash":"77cfbd9fbbd5d92ec1db29183bee77ab","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-pip","pin-package-manager-versions-gem","use-copy-instead-of-add","have-a-healthcheck"],"processedDockerfile":"#   Docker demo image, as used on try.jupyter.org and tmpnb.org\nFROM jupyter/datascience-notebook:db3ee82ad08a\nMAINTAINER Byung Chun Kim <wizardbc@gmail.com>\nUSER root\nRUN sed -i 's%archive.ubuntu.com%ftp.daumkakao.com%' /etc/apt/sources.list\n#   If git:// blocked by firewall, use https://\n#  RUN git config --global url.\"https://\".insteadOf git://\n#  USER $NB_USER\n#  RUN git config --global url.\"https://\".insteadOf git://\n#   IRuby\n#   From odk211/iruby-notebook\nUSER root\n#   install iruby https://github.com/SciRuby/iruby\nRUN apt-get update -qq \\\n && apt-get install --no-install-recommends libtool libffi-dev make automake libssl-dev libreadline-dev zlib1g-dev git libzmq-dev autoconf pkg-config -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\nRUN git clone https://github.com/zeromq/czmq --depth 1 \\\n && cd czmq \\\n && ./autogen.sh \\\n && ./configure \\\n && make \\\n && make install \\\n && cd .. \\\n && rm -rf ./czmq\n#   install ruby-build, ruby\nRUN git clone https://github.com/rbenv/ruby-build.git --depth 1 \\\n && cd ruby-build \\\n && ./install.sh \\\n && cd .. \\\n && rm -rf ./ruby-build\nENV RUBY_VERSION=\"2.4.1\" \\\n    RUBY_DIR=\"/opt/ruby\"\nENV PATH=\"$RUBY_DIR/bin:$PATH\"\nRUN mkdir -p $RUBY_DIR \\\n && chown $NB_USER $RUBY_DIR\nUSER $NB_USER\nRUN ruby-build $RUBY_VERSION $RUBY_DIR\nRUN gem install bundler --version 2.4.12 --no-document \\\n && iruby register --force \\\n && fix-permissions $RUBY_DIR\n#   brendan-rius/jupyter-c-kernel\nUSER root\nWORKDIR /opt/\nRUN mkdir -p jupyter-c-kernel \\\n && chown -R $NB_USER jupyter-c-kernel\nUSER $NB_USER\nRUN git clone https://github.com/brendan-rius/jupyter-c-kernel.git \\\n && pip install --no-cache-dir -e jupyter-c-kernel/ \\\n && cd jupyter-c-kernel \\\n && install_c_kernel --user \\\n && fix-permissions /opt/jupyter-c-kernel\nWORKDIR /home/$NB_USER/\n#   Tensorflow\nRUN conda install --quiet --yes 'tensorflow=1.3*' 'keras=2.0*' \\\n && conda clean -tipsy \\\n && fix-permissions $CONDA_DIR\n#   nbextensions\nRUN conda install --quiet --yes -c conda-forge 'jupyter_contrib_nbextensions' 'icu=58.*' \\\n && conda clean -tipsy \\\n && fix-permissions $CONDA_DIR\n#   Octave Kernel\n#   From arnau/docker-octave-notebook\nUSER root\nRUN apt-get update -qq \\\n && apt-get install --no-install-recommends octave liboctave-dev -y \\\n && apt-get autoclean \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\nUSER $NB_USER\n#  jupyter nbextension enable --py --sys-prefix widgetsnbextension\nRUN pip install octave_kernel==0.35.1 \\\n && python -m octave_kernel.install \\\n && conda install -y ipywidgets \\\n && conda clean -tipsy \\\n && fix-permissions $CONDA_DIR\n#  ## Install Sage\nUSER root\nENV SAGE_VER=\"8.0\"\nENV SAGE_BIN_FILE=\"sage-$SAGE_VER-Ubuntu_16.04-x86_64.tar.bz2\"\nENV SAGE_MIRROR=\"http://ftp.kaist.ac.kr/sage/linux/64bit/\"\nENV SAGE_ROOT=\"/opt/sage/$SAGE_VER\"\nRUN mkdir -p $SAGE_ROOT \\\n && chown $NB_USER:users $SAGE_ROOT\nRUN apt-get update -qq \\\n && apt-get install --no-install-recommends bsdtar -y \\\n && apt-get autoclean \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\nUSER $NB_USER\nWORKDIR $SAGE_ROOT\nRUN curl -v --user-agent \"\" -J -O $SAGE_MIRROR$SAGE_BIN_FILE \\\n && bsdtar -xjf $SAGE_BIN_FILE --strip-components=1 \\\n && fix-permissions $SAGE_ROOT \\\n && rm $SAGE_BIN_FILE\nUSER root\nRUN ln -sf $SAGE_ROOT/sage /usr/bin/sage \\\n && ln -sf $SAGE_ROOT/sage /usr/bin/sagemath\nCOPY ./add_sage/post.py $SAGE_ROOT/post.py\nRUN sudo -H -u $NB_USER sage post.py \\\n && rm post.py\nWORKDIR /usr/local/share/jupyter/kernels/\nRUN ln -s $SAGE_ROOT/local/share/jupyter/kernels/sagemath/ ./\nUSER $NB_USER\nWORKDIR /home/$NB_USER/work/\nRUN ln -s $SAGE_ROOT/local/share/jsmol /opt/conda/lib/python3.6/site-packages/notebook/static/\nCOPY ./add_sage/backend_ipython.py $SAGE_ROOT/local/lib/python2.7/site-packages/sage/repl/rich_output/backend_ipython.py\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Docker demo image, as used on try.jupyter.org and tmpnb.org\nFROM jupyter/datascience-notebook:db3ee82ad08a\nMAINTAINER Byung Chun Kim <wizardbc@gmail.com>\nUSER root\nRUN sed -i 's%archive.ubuntu.com%ftp.daumkakao.com%' /etc/apt/sources.list\n#  If git:// blocked by firewall, use https://\n# RUN git config --global url.\"https://\".insteadOf git://\n# USER $NB_USER\n# RUN git config --global url.\"https://\".insteadOf git://\n#  IRuby\n#  From odk211/iruby-notebook\nUSER root\n#  install iruby https://github.com/SciRuby/iruby\nRUN apt-get update -qq \\\n && apt-get install libtool libffi-dev make automake libssl-dev libreadline-dev zlib1g-dev git libzmq-dev autoconf pkg-config -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\nRUN git clone https://github.com/zeromq/czmq --depth 1 \\\n && cd czmq \\\n && ./autogen.sh \\\n && ./configure \\\n && make \\\n && make install \\\n && cd .. \\\n && rm -rf ./czmq\n#  install ruby-build, ruby\nRUN git clone https://github.com/rbenv/ruby-build.git --depth 1 \\\n && cd ruby-build \\\n && ./install.sh \\\n && cd .. \\\n && rm -rf ./ruby-build\nENV RUBY_VERSION=\"2.4.1\" \\\n    RUBY_DIR=\"/opt/ruby\"\nENV PATH=\"$RUBY_DIR/bin:$PATH\"\nRUN mkdir -p $RUBY_DIR \\\n && chown $NB_USER $RUBY_DIR\nUSER $NB_USER\nRUN ruby-build $RUBY_VERSION $RUBY_DIR\nRUN gem install bundler --no-document \\\n && iruby register --force \\\n && fix-permissions $RUBY_DIR\n#  brendan-rius/jupyter-c-kernel\nUSER root\nWORKDIR /opt/\nRUN mkdir -p jupyter-c-kernel \\\n && chown -R $NB_USER jupyter-c-kernel\nUSER $NB_USER\nRUN git clone https://github.com/brendan-rius/jupyter-c-kernel.git \\\n && pip install --no-cache-dir -e jupyter-c-kernel/ \\\n && cd jupyter-c-kernel \\\n && install_c_kernel --user \\\n && fix-permissions /opt/jupyter-c-kernel\nWORKDIR /home/$NB_USER/\n#  Tensorflow\nRUN conda install --quiet --yes 'tensorflow=1.3*' 'keras=2.0*' \\\n && conda clean -tipsy \\\n && fix-permissions $CONDA_DIR\n#  nbextensions\nRUN conda install --quiet --yes -c conda-forge 'jupyter_contrib_nbextensions' 'icu=58.*' \\\n && conda clean -tipsy \\\n && fix-permissions $CONDA_DIR\n#  Octave Kernel\n#  From arnau/docker-octave-notebook\nUSER root\nRUN apt-get update -qq \\\n && apt-get install octave liboctave-dev -y \\\n && apt-get autoclean \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\nUSER $NB_USER\n# jupyter nbextension enable --py --sys-prefix widgetsnbextension\nRUN pip install octave_kernel \\\n && python -m octave_kernel.install \\\n && conda install -y ipywidgets \\\n && conda clean -tipsy \\\n && fix-permissions $CONDA_DIR\n# ## Install Sage\nUSER root\nENV SAGE_VER=\"8.0\"\nENV SAGE_BIN_FILE=\"sage-$SAGE_VER-Ubuntu_16.04-x86_64.tar.bz2\"\nENV SAGE_MIRROR=\"http://ftp.kaist.ac.kr/sage/linux/64bit/\"\nENV SAGE_ROOT=\"/opt/sage/$SAGE_VER\"\nRUN mkdir -p $SAGE_ROOT \\\n && chown $NB_USER:users $SAGE_ROOT\nRUN apt-get update -qq \\\n && apt-get install --no-install-recommends bsdtar -y \\\n && apt-get autoclean \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\nUSER $NB_USER\nWORKDIR $SAGE_ROOT\nRUN curl -v --user-agent \"\" -J -O $SAGE_MIRROR$SAGE_BIN_FILE \\\n && bsdtar -xjf $SAGE_BIN_FILE --strip-components=1 \\\n && fix-permissions $SAGE_ROOT \\\n && rm $SAGE_BIN_FILE\nUSER root\nRUN ln -sf $SAGE_ROOT/sage /usr/bin/sage \\\n && ln -sf $SAGE_ROOT/sage /usr/bin/sagemath\nADD ./add_sage/post.py $SAGE_ROOT/post.py\nRUN sudo -H -u $NB_USER sage post.py \\\n && rm post.py\nWORKDIR /usr/local/share/jupyter/kernels/\nRUN ln -s $SAGE_ROOT/local/share/jupyter/kernels/sagemath/ ./\nUSER $NB_USER\nWORKDIR /home/$NB_USER/work/\nRUN ln -s $SAGE_ROOT/local/share/jsmol /opt/conda/lib/python3.6/site-packages/notebook/static/\nADD ./add_sage/backend_ipython.py $SAGE_ROOT/local/lib/python2.7/site-packages/sage/repl/rich_output/backend_ipython.py\n","injectedSmells":[],"originalDockerfileHash":"83629c0af7a9302c533383d5b3a4cfc0","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Docker demo image, as used on try.jupyter.org and tmpnb.org\nFROM jupyter/datascience-notebook:db3ee82ad08a\nMAINTAINER Byung Chun Kim <wizardbc@gmail.com>\nUSER root\nRUN sed -i 's%archive.ubuntu.com%ftp.daumkakao.com%' /etc/apt/sources.list\n#   If git:// blocked by firewall, use https://\n#  RUN git config --global url.\"https://\".insteadOf git://\n#  USER $NB_USER\n#  RUN git config --global url.\"https://\".insteadOf git://\n#   IRuby\n#   From odk211/iruby-notebook\nUSER root\n#   install iruby https://github.com/SciRuby/iruby\nRUN apt-get update -qq \\\n && apt-get install libtool libffi-dev make automake libssl-dev libreadline-dev zlib1g-dev git libzmq-dev autoconf pkg-config -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\nRUN git clone https://github.com/zeromq/czmq --depth 1 \\\n && cd czmq \\\n && ./autogen.sh \\\n && ./configure \\\n && make \\\n && make install \\\n && cd .. \\\n && rm -rf ./czmq\n#   install ruby-build, ruby\nRUN git clone https://github.com/rbenv/ruby-build.git --depth 1 \\\n && cd ruby-build \\\n && ./install.sh \\\n && cd .. \\\n && rm -rf ./ruby-build\nENV RUBY_VERSION=\"2.4.1\" \\\n    RUBY_DIR=\"/opt/ruby\"\nENV PATH=\"$RUBY_DIR/bin:$PATH\"\nRUN mkdir -p $RUBY_DIR \\\n && chown $NB_USER $RUBY_DIR\nUSER $NB_USER\nRUN ruby-build $RUBY_VERSION $RUBY_DIR\nRUN gem install bundler --no-document \\\n && iruby register --force \\\n && fix-permissions $RUBY_DIR\n#   brendan-rius/jupyter-c-kernel\nUSER root\nWORKDIR /opt/\nRUN mkdir -p jupyter-c-kernel \\\n && chown -R $NB_USER jupyter-c-kernel\nUSER $NB_USER\nRUN git clone https://github.com/brendan-rius/jupyter-c-kernel.git \\\n && pip install --no-cache-dir -e jupyter-c-kernel/ \\\n && cd jupyter-c-kernel \\\n && install_c_kernel --user \\\n && fix-permissions /opt/jupyter-c-kernel\nWORKDIR /home/$NB_USER/\n#   Tensorflow\nRUN conda install --quiet --yes 'tensorflow=1.3*' 'keras=2.0*' \\\n && conda clean -tipsy \\\n && fix-permissions $CONDA_DIR\n#   nbextensions\nRUN conda install --quiet --yes -c conda-forge 'jupyter_contrib_nbextensions' 'icu=58.*' \\\n && conda clean -tipsy \\\n && fix-permissions $CONDA_DIR\n#   Octave Kernel\n#   From arnau/docker-octave-notebook\nUSER root\nRUN apt-get update -qq \\\n && apt-get install octave liboctave-dev -y \\\n && apt-get autoclean \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\nUSER $NB_USER\n#  jupyter nbextension enable --py --sys-prefix widgetsnbextension\nRUN pip install octave_kernel \\\n && python -m octave_kernel.install \\\n && conda install -y ipywidgets \\\n && conda clean -tipsy \\\n && fix-permissions $CONDA_DIR\n#  ## Install Sage\nUSER root\nENV SAGE_VER=\"8.0\"\nENV SAGE_BIN_FILE=\"sage-$SAGE_VER-Ubuntu_16.04-x86_64.tar.bz2\"\nENV SAGE_MIRROR=\"http://ftp.kaist.ac.kr/sage/linux/64bit/\"\nENV SAGE_ROOT=\"/opt/sage/$SAGE_VER\"\nRUN mkdir -p $SAGE_ROOT \\\n && chown $NB_USER:users $SAGE_ROOT\nRUN apt-get update -qq \\\n && apt-get install --no-install-recommends bsdtar -y \\\n && apt-get autoclean \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\nUSER $NB_USER\nWORKDIR $SAGE_ROOT\nRUN curl -v --user-agent \"\" -J -O $SAGE_MIRROR$SAGE_BIN_FILE \\\n && bsdtar -xjf $SAGE_BIN_FILE --strip-components=1 \\\n && fix-permissions $SAGE_ROOT \\\n && rm $SAGE_BIN_FILE\nUSER root\nRUN ln -sf $SAGE_ROOT/sage /usr/bin/sage \\\n && ln -sf $SAGE_ROOT/sage /usr/bin/sagemath\nADD ./add_sage/post.py $SAGE_ROOT/post.py\nRUN sudo -H -u $NB_USER sage post.py \\\n && rm post.py\nWORKDIR /usr/local/share/jupyter/kernels/\nRUN ln -s $SAGE_ROOT/local/share/jupyter/kernels/sagemath/ ./\nUSER $NB_USER\nWORKDIR /home/$NB_USER/work/\nRUN ln -s $SAGE_ROOT/local/share/jsmol /opt/conda/lib/python3.6/site-packages/notebook/static/\nADD ./add_sage/backend_ipython.py $SAGE_ROOT/local/lib/python2.7/site-packages/sage/repl/rich_output/backend_ipython.py\n","originalDockerfileUglifiedHash":"213cfe08c13284929096865cf77302d5","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/b4feb5c608890df10c1822188459f239c33771c3.dockerfile"}