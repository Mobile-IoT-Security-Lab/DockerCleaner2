{"seed":4090244122,"processedDockerfileHash":"f5a8474a32ddb6e4117c58554ec7c24c","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"#  ####################################################################################################\n#   Pytorch image from: https://github.com/ufoym/deepo/blob/master/docker/Dockerfile.pytorch-py36-cu100\n#  ####################################################################################################\nFROM nvidia/cuda:10.0-cudnn7-devel-ubuntu18.04\nENV LANG=\"C.UTF-8\"\nRUN APT_INSTALL=\"apt-get install -y --no-install-recommends\" \\\n && PIP_INSTALL=\"python -m pip --no-cache-dir install --upgrade\" \\\n && GIT_CLONE=\"git clone --depth 10\" \\\n && rm -rf /var/lib/apt/lists/* /etc/apt/sources.list.d/cuda.list /etc/apt/sources.list.d/nvidia-ml.list \\\n && : \\\n && DEBIAN_FRONTEND=noninteractive $APT_INSTALL build-essential apt-utils ca-certificates wget git vim \\\n && $GIT_CLONE https://github.com/Kitware/CMake ~/cmake \\\n && cd ~/cmake \\\n && ./bootstrap \\\n && make -j\"$( nproc ;)\" install \\\n && DEBIAN_FRONTEND=noninteractive $APT_INSTALL software-properties-common \\\n && add-apt-repository ppa:deadsnakes/ppa \\\n && : \\\n && DEBIAN_FRONTEND=noninteractive $APT_INSTALL python3.6 python3.6-dev python3-distutils-extra \\\n && wget -O ~/get-pip.py https://bootstrap.pypa.io/get-pip.py \\\n && python3.6 ~/get-pip.py \\\n && ln -s /usr/bin/python3.6 /usr/local/bin/python3 \\\n && ln -s /usr/bin/python3.6 /usr/local/bin/python \\\n && $PIP_INSTALL setuptools \\\n && $PIP_INSTALL numpy scipy pandas cloudpickle scikit-learn matplotlib Cython \\\n && $PIP_INSTALL future numpy protobuf enum34 pyyaml typing torchvision_nightly \\\n && $PIP_INSTALL torch_nightly -f https://download.pytorch.org/whl/nightly/cu100/torch_nightly.html\n#  ####################################################################################################\n#   Install LASER\n#  ####################################################################################################\nRUN (apt-get update ;apt-get install --no-install-recommends unzip g++ wget cpio libgtest-dev swig3.0 libopenblas-dev -y )\n#   python modules\nRUN pip install transliterate==1.10.2 jieba==0.42.1\n#  install faiss\nRUN cd /opt \\\n && git clone https://github.com/facebookresearch/faiss.git \\\n && cd faiss \\\n && ./configure --with-cuda=/usr/local/cuda --with-swig=swig3.0 \\\n && make -j 8 \\\n && make -C python \\\n && make install \\\n && make -C python install\n#  install LASER\nRUN cd /opt \\\n && git clone https://github.com/facebookresearch/LASER.git \\\n && cd LASER \\\n && LASER=/opt/LASER bash ./install_models.sh\n#  install LASER tools-external\nRUN cd /opt/LASER \\\n && sed -i \"s#g++ -std=c++11 -pthread -O3 fast.cc -o fast#g++ -std=c++11 -pthread -O3 fastBPE/main.cc -IfastBPE -o fast#g\" install_external_tools.sh \\\n && LASER=/opt/LASER bash ./install_external_tools.sh\n#  install fastBPE\nRUN cd /opt/LASER/tools-external/fastBPE \\\n && python setup.py install\n#  install mecab\nRUN cd /tmp \\\n && wget -O mecab-0.996.tar.gz \"https://drive.google.com/uc?export=download&id=0B4y35FiV1wh7cENtOXlicTFaRUE\" \\\n && tar xvzf mecab-0.996.tar.gz \\\n && cd mecab-0.996 \\\n && ./configure --prefix /opt/LASER/tools-external/mecab --with-charset=utf8 \\\n && make install \\\n && rm -rf mecab-0.996.tar.gz mecab-0.996\nRUN cd /tmp \\\n && wget -O mecab-ipadic-2.7.0-XXXX.tar.gz \"https://drive.google.com/uc?export=download&id=0B4y35FiV1wh7MWVlSDBCSXZMTXM\" \\\n && tar xvzf mecab-ipadic-2.7.0-XXXX.tar.gz \\\n && cd mecab-ipadic-2.7.0-20070801/ \\\n && ./configure --prefix=/opt/LASER/tools-external/mecab --with-mecab-config=/opt/LASER/tools-external/mecab/bin/mecab-config --with-charset=utf8 \\\n && make install \\\n && rm -rf mecab-ipadic-2.7.0-XXXX.tar.gz mecab-ipadic-2.7.0-20070801\nRUN echo \"export LASER=/opt/LASER\" >> /etc/bash.bashrc \\\n && echo \"export LC_ALL=C.UTF-8\" >> /etc/bash.bashrc\n#  ####################################################################################################\n#   config & cleanup\n#  ####################################################################################################\nRUN ldconfig \\\n && apt-get clean \\\n && apt-get autoremove \\\n && rm -rf /var/lib/apt/lists/* /tmp/* ~/*\n#  ####################################################################################################\n#   nmt-wizard-docker\n#  ####################################################################################################\nCOPY nmtwizard /nmtwizard\nCOPY requirements.txt /\nRUN pip install --no-cache-dir -r /requirements.txt \\\n && rm /requirements.txt\nCOPY utilities/tuminer/entrypoint.py /\nENTRYPOINT [\"python3\", \"/entrypoint.py\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"# ####################################################################################################\n#  Pytorch image from: https://github.com/ufoym/deepo/blob/master/docker/Dockerfile.pytorch-py36-cu100\n# ####################################################################################################\nFROM nvidia/cuda:10.0-cudnn7-devel-ubuntu18.04\nENV LANG=\"C.UTF-8\"\nRUN APT_INSTALL=\"apt-get install -y --no-install-recommends\" \\\n && PIP_INSTALL=\"python -m pip --no-cache-dir install --upgrade\" \\\n && GIT_CLONE=\"git clone --depth 10\" \\\n && rm -rf /var/lib/apt/lists/* /etc/apt/sources.list.d/cuda.list /etc/apt/sources.list.d/nvidia-ml.list \\\n && apt-get update \\\n && DEBIAN_FRONTEND=noninteractive $APT_INSTALL build-essential apt-utils ca-certificates wget git vim \\\n && $GIT_CLONE https://github.com/Kitware/CMake ~/cmake \\\n && cd ~/cmake \\\n && ./bootstrap \\\n && make -j\"$( nproc ;)\" install \\\n && DEBIAN_FRONTEND=noninteractive $APT_INSTALL software-properties-common \\\n && add-apt-repository ppa:deadsnakes/ppa \\\n && apt-get update \\\n && DEBIAN_FRONTEND=noninteractive $APT_INSTALL python3.6 python3.6-dev python3-distutils-extra \\\n && wget -O ~/get-pip.py https://bootstrap.pypa.io/get-pip.py \\\n && python3.6 ~/get-pip.py \\\n && ln -s /usr/bin/python3.6 /usr/local/bin/python3 \\\n && ln -s /usr/bin/python3.6 /usr/local/bin/python \\\n && $PIP_INSTALL setuptools \\\n && $PIP_INSTALL numpy scipy pandas cloudpickle scikit-learn matplotlib Cython \\\n && $PIP_INSTALL future numpy protobuf enum34 pyyaml typing torchvision_nightly \\\n && $PIP_INSTALL torch_nightly -f https://download.pytorch.org/whl/nightly/cu100/torch_nightly.html\n# ####################################################################################################\n#  Install LASER\n# ####################################################################################################\nRUN apt-get install --no-install-recommends unzip g++ wget cpio libgtest-dev swig3.0 libopenblas-dev -y\n#  python modules\nRUN pip install transliterate jieba\n# install faiss\nRUN cd /opt \\\n && git clone https://github.com/facebookresearch/faiss.git \\\n && cd faiss \\\n && ./configure --with-cuda=/usr/local/cuda --with-swig=swig3.0 \\\n && make -j 8 \\\n && make -C python \\\n && make install \\\n && make -C python install\n# install LASER\nRUN cd /opt \\\n && git clone https://github.com/facebookresearch/LASER.git \\\n && cd LASER \\\n && LASER=/opt/LASER bash ./install_models.sh\n# install LASER tools-external\nRUN cd /opt/LASER \\\n && sed -i \"s#g++ -std=c++11 -pthread -O3 fast.cc -o fast#g++ -std=c++11 -pthread -O3 fastBPE/main.cc -IfastBPE -o fast#g\" install_external_tools.sh \\\n && LASER=/opt/LASER bash ./install_external_tools.sh\n# install fastBPE\nRUN cd /opt/LASER/tools-external/fastBPE \\\n && python setup.py install\n# install mecab\nRUN cd /tmp \\\n && wget -O mecab-0.996.tar.gz \"https://drive.google.com/uc?export=download&id=0B4y35FiV1wh7cENtOXlicTFaRUE\" \\\n && tar xvzf mecab-0.996.tar.gz \\\n && cd mecab-0.996 \\\n && ./configure --prefix /opt/LASER/tools-external/mecab --with-charset=utf8 \\\n && make install \\\n && rm -rf mecab-0.996.tar.gz mecab-0.996\nRUN cd /tmp \\\n && wget -O mecab-ipadic-2.7.0-XXXX.tar.gz \"https://drive.google.com/uc?export=download&id=0B4y35FiV1wh7MWVlSDBCSXZMTXM\" \\\n && tar xvzf mecab-ipadic-2.7.0-XXXX.tar.gz \\\n && cd mecab-ipadic-2.7.0-20070801/ \\\n && ./configure --prefix=/opt/LASER/tools-external/mecab --with-mecab-config=/opt/LASER/tools-external/mecab/bin/mecab-config --with-charset=utf8 \\\n && make install \\\n && rm -rf mecab-ipadic-2.7.0-XXXX.tar.gz mecab-ipadic-2.7.0-20070801\nRUN echo \"export LASER=/opt/LASER\" >> /etc/bash.bashrc \\\n && echo \"export LC_ALL=C.UTF-8\" >> /etc/bash.bashrc\n# ####################################################################################################\n#  config & cleanup\n# ####################################################################################################\nRUN ldconfig \\\n && apt-get clean \\\n && apt-get autoremove \\\n && rm -rf /var/lib/apt/lists/* /tmp/* ~/*\n# ####################################################################################################\n#  nmt-wizard-docker\n# ####################################################################################################\nADD nmtwizard /nmtwizard\nADD requirements.txt /\nRUN pip install --no-cache-dir -r /requirements.txt \\\n && rm /requirements.txt\nADD utilities/tuminer/entrypoint.py /\nENTRYPOINT [\"python3\", \"/entrypoint.py\"]\n","injectedSmells":[],"originalDockerfileHash":"02b0cfa92d69de6a9738624ff3cc2c1a","successfullyInjectedSmells":[],"originalDockerfileUglified":"#  ####################################################################################################\n#   Pytorch image from: https://github.com/ufoym/deepo/blob/master/docker/Dockerfile.pytorch-py36-cu100\n#  ####################################################################################################\nFROM nvidia/cuda:10.0-cudnn7-devel-ubuntu18.04\nENV LANG=\"C.UTF-8\"\nRUN APT_INSTALL=\"apt-get install -y --no-install-recommends\" \\\n && PIP_INSTALL=\"python -m pip --no-cache-dir install --upgrade\" \\\n && GIT_CLONE=\"git clone --depth 10\" \\\n && rm -rf /var/lib/apt/lists/* /etc/apt/sources.list.d/cuda.list /etc/apt/sources.list.d/nvidia-ml.list \\\n && apt-get update \\\n && DEBIAN_FRONTEND=noninteractive $APT_INSTALL build-essential apt-utils ca-certificates wget git vim \\\n && $GIT_CLONE https://github.com/Kitware/CMake ~/cmake \\\n && cd ~/cmake \\\n && ./bootstrap \\\n && make -j\"$( nproc ;)\" install \\\n && DEBIAN_FRONTEND=noninteractive $APT_INSTALL software-properties-common \\\n && add-apt-repository ppa:deadsnakes/ppa \\\n && apt-get update \\\n && DEBIAN_FRONTEND=noninteractive $APT_INSTALL python3.6 python3.6-dev python3-distutils-extra \\\n && wget -O ~/get-pip.py https://bootstrap.pypa.io/get-pip.py \\\n && python3.6 ~/get-pip.py \\\n && ln -s /usr/bin/python3.6 /usr/local/bin/python3 \\\n && ln -s /usr/bin/python3.6 /usr/local/bin/python \\\n && $PIP_INSTALL setuptools \\\n && $PIP_INSTALL numpy scipy pandas cloudpickle scikit-learn matplotlib Cython \\\n && $PIP_INSTALL future numpy protobuf enum34 pyyaml typing torchvision_nightly \\\n && $PIP_INSTALL torch_nightly -f https://download.pytorch.org/whl/nightly/cu100/torch_nightly.html\n#  ####################################################################################################\n#   Install LASER\n#  ####################################################################################################\nRUN apt-get install --no-install-recommends unzip g++ wget cpio libgtest-dev swig3.0 libopenblas-dev -y\n#   python modules\nRUN pip install transliterate jieba\n#  install faiss\nRUN cd /opt \\\n && git clone https://github.com/facebookresearch/faiss.git \\\n && cd faiss \\\n && ./configure --with-cuda=/usr/local/cuda --with-swig=swig3.0 \\\n && make -j 8 \\\n && make -C python \\\n && make install \\\n && make -C python install\n#  install LASER\nRUN cd /opt \\\n && git clone https://github.com/facebookresearch/LASER.git \\\n && cd LASER \\\n && LASER=/opt/LASER bash ./install_models.sh\n#  install LASER tools-external\nRUN cd /opt/LASER \\\n && sed -i \"s#g++ -std=c++11 -pthread -O3 fast.cc -o fast#g++ -std=c++11 -pthread -O3 fastBPE/main.cc -IfastBPE -o fast#g\" install_external_tools.sh \\\n && LASER=/opt/LASER bash ./install_external_tools.sh\n#  install fastBPE\nRUN cd /opt/LASER/tools-external/fastBPE \\\n && python setup.py install\n#  install mecab\nRUN cd /tmp \\\n && wget -O mecab-0.996.tar.gz \"https://drive.google.com/uc?export=download&id=0B4y35FiV1wh7cENtOXlicTFaRUE\" \\\n && tar xvzf mecab-0.996.tar.gz \\\n && cd mecab-0.996 \\\n && ./configure --prefix /opt/LASER/tools-external/mecab --with-charset=utf8 \\\n && make install \\\n && rm -rf mecab-0.996.tar.gz mecab-0.996\nRUN cd /tmp \\\n && wget -O mecab-ipadic-2.7.0-XXXX.tar.gz \"https://drive.google.com/uc?export=download&id=0B4y35FiV1wh7MWVlSDBCSXZMTXM\" \\\n && tar xvzf mecab-ipadic-2.7.0-XXXX.tar.gz \\\n && cd mecab-ipadic-2.7.0-20070801/ \\\n && ./configure --prefix=/opt/LASER/tools-external/mecab --with-mecab-config=/opt/LASER/tools-external/mecab/bin/mecab-config --with-charset=utf8 \\\n && make install \\\n && rm -rf mecab-ipadic-2.7.0-XXXX.tar.gz mecab-ipadic-2.7.0-20070801\nRUN echo \"export LASER=/opt/LASER\" >> /etc/bash.bashrc \\\n && echo \"export LC_ALL=C.UTF-8\" >> /etc/bash.bashrc\n#  ####################################################################################################\n#   config & cleanup\n#  ####################################################################################################\nRUN ldconfig \\\n && apt-get clean \\\n && apt-get autoremove \\\n && rm -rf /var/lib/apt/lists/* /tmp/* ~/*\n#  ####################################################################################################\n#   nmt-wizard-docker\n#  ####################################################################################################\nADD nmtwizard /nmtwizard\nADD requirements.txt /\nRUN pip install --no-cache-dir -r /requirements.txt \\\n && rm /requirements.txt\nADD utilities/tuminer/entrypoint.py /\nENTRYPOINT [\"python3\", \"/entrypoint.py\"]\n","originalDockerfileUglifiedHash":"87f54dcec44cf2bb43847c08eb6adf0c","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/4e98b22fd15c4c8f7a2984dd575628bd97e0cb61.dockerfile"}