{"seed":2617622118,"processedDockerfileHash":"173c30b68a823b32e557fdd7cbe24112","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","have-a-healthcheck","have-a-user"],"processedDockerfile":"#  ###############################################################################\n#  #  Dockerfile to build minimal OpenCV image with Python3.6 and Video support ##\n#  ###############################################################################\nFROM alpine:3.7\nMAINTAINER Janos Czentye <czentye@tmit.bme.hu>\nENV LANG=\"C.UTF-8\"\nRUN apk add build-base=0.5-r0 clang=5.0.0-r0 clang-dev=5.0.0-r0 cmake=3.9.5-r0 pkgconf=1.3.10-r0 wget=1.20.3-r0 openblas=0.2.19-r3 openblas-dev=0.2.19-r3 linux-headers=4.4.6-r2 libjpeg-turbo=1.5.3-r3 libjpeg-turbo-dev=1.5.3-r3 libpng=1.6.37-r0 libpng-dev=1.6.37-r0 libwebp=0.6.0-r1 libwebp-dev=0.6.0-r1 tiff=4.0.10-r2 tiff-dev=4.0.10-r2 jasper-libs=2.0.14-r0 jasper-dev=2.0.14-r0 openexr=2.2.0-r2 openexr-dev=2.2.0-r2 ffmpeg-libs=3.4-r1 ffmpeg-dev=3.4-r1 libavc1394=0.5.4-r1 libavc1394-dev=0.5.4-r1 gstreamer=1.12.3-r0 gstreamer-dev=1.12.3-r0 gst-plugins-base=1.12.3-r0 gst-plugins-base-dev=1.12.3-r0 libgphoto2=2.5.14-r0 libgphoto2-dev=2.5.14-r0 --update --no-cache \\\n && apk add libtbb libtbb-dev --repository http://dl-cdn.alpinelinux.org/alpine/edge/testing --update --no-cache \\\n && apk add python3=3.6.9-r1 python3-dev=3.6.9-r1 --repository http://dl-cdn.alpinelinux.org/alpine/edge/main --update --no-cache \\\n && apk add py-numpy=1.13.3-r0 py-numpy-dev=1.13.3-r0 --repository http://dl-cdn.alpinelinux.org/alpine/edge/community --update --no-cache \\\n && ln -vfs /usr/bin/python3 /usr/local/bin/python \\\n && ln -vfs /usr/bin/pip3 /usr/local/bin/pip \\\n && ln -vfs /usr/include/libpng16 /usr/include/libpng \\\n && ln -vfs /usr/include/locale.h /usr/include/xlocale.h \\\n && cd /tmp \\\n && wget https://github.com/opencv/opencv/archive/3.4.0.tar.gz \\\n && tar -xvzf 3.4.0.tar.gz \\\n && rm -vrf 3.4.0.tar.gz \\\n && mkdir -vp /tmp/opencv-3.4.0/build \\\n && cd /tmp/opencv-3.4.0/build \\\n && cmake -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_C_COMPILER=/usr/bin/clang -D CMAKE_CXX_COMPILER=/usr/bin/clang++ -D CMAKE_INSTALL_PREFIX=/usr -D INSTALL_PYTHON_EXAMPLES=NO -D INSTALL_C_EXAMPLES=NO -D WITH_IPP=NO -D WITH_1394=NO -D WITH_LIBV4L=NO -D WITH_V4l=YES -D WITH_TBB=YES -D WITH_FFMPEG=YES -D WITH_GPHOTO2=YES -D WITH_GSTREAMER=YES -D BUILD_DOCS=NO -D BUILD_TESTS=NO -D BUILD_PERF_TESTS=NO -D BUILD_EXAMPLES=NO -D BUILD_opencv_java=NO -D BUILD_opencv_python2=NO -D BUILD_ANDROID_EXAMPLES=NO -D PYTHON3_LIBRARY=`find /usr -name libpython3.so ` -D PYTHON_EXECUTABLE=`which python3 ` -D PYTHON3_EXECUTABLE=`which python3 ` -D BUILD_opencv_python3=YES .. \\\n && make -j`grep -c '^processor' /proc/cpuinfo ` \\\n && make install \\\n && cd / \\\n && rm -vrf /tmp/opencv-3.4.0 \\\n && apk del --purge build-base clang clang-dev cmake pkgconf wget openblas-dev openexr-dev gstreamer-dev gst-plugins-base-dev libgphoto2-dev libtbb-dev libjpeg-turbo-dev libpng-dev tiff-dev jasper-dev ffmpeg-dev libavc1394-dev python3-dev py-numpy-dev \\\n && rm -vrf /var/cache/apk/*\nRUN addgroup -S docker-user ; adduser -S -G docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"# ###############################################################################\n# #  Dockerfile to build minimal OpenCV image with Python3.6 and Video support ##\n# ###############################################################################\nFROM alpine:3.7\nMAINTAINER Janos Czentye <czentye@tmit.bme.hu>\nENV LANG=\"C.UTF-8\"\nRUN apk add --update --no-cache build-base clang clang-dev cmake pkgconf wget openblas openblas-dev linux-headers libjpeg-turbo libjpeg-turbo-dev libpng libpng-dev libwebp libwebp-dev tiff tiff-dev jasper-libs jasper-dev openexr openexr-dev ffmpeg-libs ffmpeg-dev libavc1394 libavc1394-dev gstreamer gstreamer-dev gst-plugins-base gst-plugins-base-dev libgphoto2 libgphoto2-dev \\\n && apk add --repository http://dl-cdn.alpinelinux.org/alpine/edge/testing --update --no-cache libtbb libtbb-dev \\\n && apk add --repository http://dl-cdn.alpinelinux.org/alpine/edge/main --update --no-cache python3 python3-dev \\\n && apk add --repository http://dl-cdn.alpinelinux.org/alpine/edge/community --update --no-cache py-numpy py-numpy-dev \\\n && ln -vfs /usr/bin/python3 /usr/local/bin/python \\\n && ln -vfs /usr/bin/pip3 /usr/local/bin/pip \\\n && ln -vfs /usr/include/libpng16 /usr/include/libpng \\\n && ln -vfs /usr/include/locale.h /usr/include/xlocale.h \\\n && cd /tmp \\\n && wget https://github.com/opencv/opencv/archive/3.4.0.tar.gz \\\n && tar -xvzf 3.4.0.tar.gz \\\n && rm -vrf 3.4.0.tar.gz \\\n && mkdir -vp /tmp/opencv-3.4.0/build \\\n && cd /tmp/opencv-3.4.0/build \\\n && cmake -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_C_COMPILER=/usr/bin/clang -D CMAKE_CXX_COMPILER=/usr/bin/clang++ -D CMAKE_INSTALL_PREFIX=/usr -D INSTALL_PYTHON_EXAMPLES=NO -D INSTALL_C_EXAMPLES=NO -D WITH_IPP=NO -D WITH_1394=NO -D WITH_LIBV4L=NO -D WITH_V4l=YES -D WITH_TBB=YES -D WITH_FFMPEG=YES -D WITH_GPHOTO2=YES -D WITH_GSTREAMER=YES -D BUILD_DOCS=NO -D BUILD_TESTS=NO -D BUILD_PERF_TESTS=NO -D BUILD_EXAMPLES=NO -D BUILD_opencv_java=NO -D BUILD_opencv_python2=NO -D BUILD_ANDROID_EXAMPLES=NO -D PYTHON3_LIBRARY=`find /usr -name libpython3.so ` -D PYTHON_EXECUTABLE=`which python3 ` -D PYTHON3_EXECUTABLE=`which python3 ` -D BUILD_opencv_python3=YES .. \\\n && make -j`grep -c '^processor' /proc/cpuinfo ` \\\n && make install \\\n && cd / \\\n && rm -vrf /tmp/opencv-3.4.0 \\\n && apk del --purge build-base clang clang-dev cmake pkgconf wget openblas-dev openexr-dev gstreamer-dev gst-plugins-base-dev libgphoto2-dev libtbb-dev libjpeg-turbo-dev libpng-dev tiff-dev jasper-dev ffmpeg-dev libavc1394-dev python3-dev py-numpy-dev \\\n && rm -vrf /var/cache/apk/*\n","injectedSmells":[],"originalDockerfileHash":"18df718ecfce6fa81d6473f79c05be66","successfullyInjectedSmells":[],"originalDockerfileUglified":"#  ###############################################################################\n#  #  Dockerfile to build minimal OpenCV image with Python3.6 and Video support ##\n#  ###############################################################################\nFROM alpine:3.7\nMAINTAINER Janos Czentye <czentye@tmit.bme.hu>\nENV LANG=\"C.UTF-8\"\nRUN apk add --update --no-cache build-base clang clang-dev cmake pkgconf wget openblas openblas-dev linux-headers libjpeg-turbo libjpeg-turbo-dev libpng libpng-dev libwebp libwebp-dev tiff tiff-dev jasper-libs jasper-dev openexr openexr-dev ffmpeg-libs ffmpeg-dev libavc1394 libavc1394-dev gstreamer gstreamer-dev gst-plugins-base gst-plugins-base-dev libgphoto2 libgphoto2-dev \\\n && apk add --repository http://dl-cdn.alpinelinux.org/alpine/edge/testing --update --no-cache libtbb libtbb-dev \\\n && apk add --repository http://dl-cdn.alpinelinux.org/alpine/edge/main --update --no-cache python3 python3-dev \\\n && apk add --repository http://dl-cdn.alpinelinux.org/alpine/edge/community --update --no-cache py-numpy py-numpy-dev \\\n && ln -vfs /usr/bin/python3 /usr/local/bin/python \\\n && ln -vfs /usr/bin/pip3 /usr/local/bin/pip \\\n && ln -vfs /usr/include/libpng16 /usr/include/libpng \\\n && ln -vfs /usr/include/locale.h /usr/include/xlocale.h \\\n && cd /tmp \\\n && wget https://github.com/opencv/opencv/archive/3.4.0.tar.gz \\\n && tar -xvzf 3.4.0.tar.gz \\\n && rm -vrf 3.4.0.tar.gz \\\n && mkdir -vp /tmp/opencv-3.4.0/build \\\n && cd /tmp/opencv-3.4.0/build \\\n && cmake -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_C_COMPILER=/usr/bin/clang -D CMAKE_CXX_COMPILER=/usr/bin/clang++ -D CMAKE_INSTALL_PREFIX=/usr -D INSTALL_PYTHON_EXAMPLES=NO -D INSTALL_C_EXAMPLES=NO -D WITH_IPP=NO -D WITH_1394=NO -D WITH_LIBV4L=NO -D WITH_V4l=YES -D WITH_TBB=YES -D WITH_FFMPEG=YES -D WITH_GPHOTO2=YES -D WITH_GSTREAMER=YES -D BUILD_DOCS=NO -D BUILD_TESTS=NO -D BUILD_PERF_TESTS=NO -D BUILD_EXAMPLES=NO -D BUILD_opencv_java=NO -D BUILD_opencv_python2=NO -D BUILD_ANDROID_EXAMPLES=NO -D PYTHON3_LIBRARY=`find /usr -name libpython3.so ` -D PYTHON_EXECUTABLE=`which python3 ` -D PYTHON3_EXECUTABLE=`which python3 ` -D BUILD_opencv_python3=YES .. \\\n && make -j`grep -c '^processor' /proc/cpuinfo ` \\\n && make install \\\n && cd / \\\n && rm -vrf /tmp/opencv-3.4.0 \\\n && apk del --purge build-base clang clang-dev cmake pkgconf wget openblas-dev openexr-dev gstreamer-dev gst-plugins-base-dev libgphoto2-dev libtbb-dev libjpeg-turbo-dev libpng-dev tiff-dev jasper-dev ffmpeg-dev libavc1394-dev python3-dev py-numpy-dev \\\n && rm -vrf /var/cache/apk/*\n","originalDockerfileUglifiedHash":"dacb9075fe58a4e662e5667b3954b367","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/06d40e96fcad58ade4d267367339f79224d6d2eb.dockerfile"}