{"seed":619153176,"processedDockerfileHash":"af9b3d693e6a1cd0f86a22d6f9be3d69","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-gem","use-copy-instead-of-add","have-a-healthcheck"],"processedDockerfile":"FROM ubuntu:19.04\nENV USER=\"cloud\"\nENV EDITOR=\"nano\"\nENV HOME=\"/home/$USER\"\nENV LANG=\"en_US.UTF-8\"\nENV LANGUAGE=\"$LANG\"\nENV LC_ALL=\"$LANG\"\nENV LC_CTYPE=\"$LANG\"\nENV SHELL=\"/bin/zsh\"\nENV TERM=\"xterm-256color\"\nENV TZ=\"Australia/Sydney\"\n#   Restore minimized distribution content e.g. man pages\nRUN yes | unminimize\n#   Install locales and timezone data\nRUN apt-get update -qq \\\n && (apt-get update ;apt-get install --no-install-recommends locales tzdata -qq )\n#   Generate locales\nRUN locale-gen $LANG \\\n && update-locale LC_ALL=$LC_ALL LANG=$LANG \\\n && dpkg-reconfigure --frontend=noninteractive locales\n#   Set timezone\nRUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime \\\n && echo $TZ > /etc/timezone\n#   Install cloud computer utilities\nRUN : \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -qq --fix-missing asciinema build-essential cmake cmatrix curl dnsutils docker.io figlet g++ gcc git gtk+3.0 gosu htop iftop iputils-ping jq libnss3-tools lsb-core make man-db nano ncdu net-tools netcat-openbsd nnn numlockx openbox openssl perl python ruby software-properties-common ssh sudo tmux tree vcsh vim weechat wmctrl x11vnc xauth xdotool xinput xsel xvfb zsh\n#   Install antigen\nRUN curl -fsSL git.io/antigen > /usr/local/bin/antigen.zsh\n#   Install bat\nRUN wget -O bat.deb -qnv https://github.com/sharkdp/bat/releases/download/v0.9.0/bat_0.9.0_amd64.deb \\\n && dpkg -i bat.deb \\\n && rm bat.deb\n#   Install code\nRUN curl -fsSL https://github.com/cdr/code-server/releases/download/1.1119-vsc1.33.1/code-server1.1119-vsc1.33.1-linux-x64.tar.gz | tar -C /tmp -xzf - \\\n && mv /tmp/code-server*/code-server /usr/local/bin \\\n && rm -rf /tmp/code-server*\n#   Install ctop\nRUN wget -O /usr/local/bin/ctop -qnv https://github.com/bcicen/ctop/releases/download/v0.7.2/ctop-0.7.2-linux-amd64 \\\n && chmod +x /usr/local/bin/ctop\n#   Install define\nRUN wget -O /usr/local/bin/define -qnv https://github.com/Rican7/define/releases/download/v0.1.2/define_linux_amd64 \\\n && chmod +x /usr/local/bin/define\n#   Install dive docker image explorer\nRUN wget -qnv -O dive.deb https://github.com/wagoodman/dive/releases/download/v0.6.0/dive_0.6.0_linux_amd64.deb \\\n && dpkg -i dive.deb \\\n && rm dive.deb\n#   Install docker-compose\nRUN curl -fsSL \"https://github.com/docker/compose/releases/download/1.23.1/docker-compose-$( uname -s ;)-$( uname -m ;)\" -o /usr/local/bin/docker-compose \\\n && chmod +x /usr/local/bin/docker-compose\n#   Install fzf\nRUN git clone --depth 1 https://github.com/junegunn/fzf.git /opt/fzf \\\n && /opt/fzf/install --bin\n#   Install git dashboard\nRUN curl -fsSL https://github.com/jesseduffield/lazygit/releases/download/v0.7.2/lazygit_0.7.2_Linux_x86_64.tar.gz | tar -C /usr/local/bin -xzf -\n#   Install git stats viewer\nRUN git clone --depth 1 https://github.com/arzzen/git-quick-stats.git \\\n && cd git-quick-stats \\\n && make install \\\n && rm -rf ../git-quick-stats\n#   Install gotop\nRUN wget -qnv -O gotop-deb https://github.com/cjbassi/gotop/releases/download/3.0.0/gotop_3.0.0_linux_amd64.deb \\\n && dpkg -i gotop-deb\n#   Install gotty\nRUN curl -fsSL https://github.com/yudai/gotty/releases/download/v2.0.0-alpha.3/gotty_2.0.0-alpha.3_linux_amd64.tar.gz | tar -C /usr/local/bin -xzf -\n#   Install jump directory navigator\nRUN wget -qnv -O jump.deb https://github.com/gsamokovarov/jump/releases/download/v0.22.0/jump_0.22.0_amd64.deb \\\n && dpkg -i jump.deb \\\n && rm jump.deb\n#   Install kind\nRUN wget -qnv -O kind https://github.com/kubernetes-sigs/kind/releases/download/v0.3.0/kind-linux-amd64 \\\n && chmod +x kind \\\n && mv kind /usr/local/bin\n#   Install node.js\nRUN curl -fsSL https://gist.githubusercontent.com/sabrehagen/b07846cdb0d373ad5e6a4c7567d5f390/raw/61b7273546d9b187c6ee77a902cd2d078de83fc7/install.sh | bash - \\\n && (apt-get update ;apt-get install --no-install-recommends nodejs -qq )\n#   Install novnc\nRUN git clone --depth 1 https://github.com/cloud-computer/noVNC.git /opt/noVNC\n#   Install packer\nRUN curl -fsSL https://releases.hashicorp.com/packer/1.3.3/packer_1.3.3_linux_amd64.zip > packer.zip \\\n && unzip packer.zip \\\n && mv packer /usr/local/bin \\\n && rm packer.zip\n#   Install terraform\nRUN wget --quiet https://releases.hashicorp.com/terraform/0.11.3/terraform_0.11.3_linux_amd64.zip \\\n && unzip terraform_0.11.3_linux_amd64.zip \\\n && mv terraform /usr/bin \\\n && rm terraform_0.11.3_linux_amd64.zip\n#   Install tmux plugin manager\nRUN git clone https://github.com/tmux-plugins/tpm /opt/tpm --depth 1 \\\n && ln -s /opt/tpm/tpm /usr/local/bin\n#   Install tmuxinator\nRUN gem install tmuxinator --version 3.0.5\n#   Install yarn\nRUN curl -fsSL https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \\\n && echo \"deb https://dl.yarnpkg.com/debian stable main\" | tee /etc/apt/sources.list.d/yarn.list \\\n && apt-get update -qq \\\n && (apt-get update ;apt-get install --no-install-recommends yarn -qq )\n#   Install yarn based utilities\nRUN yarn global add github-email rebase-editor tldr\n#   Enable password-less sudo for the sudo group\nRUN echo \"%sudo ALL=(ALL) NOPASSWD:ALL\" > /etc/sudoers\n#   Create the docker group with the host os group id\nENV DOCKER_GROUP=\"999\"\nRUN groupmod --gid $DOCKER_GROUP docker\n#   Create a non-root user for safe operation\nRUN useradd --create-home --groups $DOCKER_GROUP,sudo --password $USER --shell /bin/zsh $USER\n#   Clone dotfiles\nRUN vcsh clone https://github.com/cloud-computer/dotfiles\n#   Cache tmux plugins\nRUN /opt/tpm/bin/install_plugins\n#   Take ownership of user's home and applications directory\nRUN chown -R $USER:$USER $HOME /opt\n#   Cache zsh plugins\nRUN gosu $USER zsh -c \"source $HOME/.zshrc\"\n#   Ensure x server socket directory exists, owned by root, and world accessible\nRUN mkdir -p /tmp/.X11-unix \\\n && chmod 1777 /tmp/.X11-unix\n#   Record container build metadata\nARG CONTAINER_BUILD_DATE\nARG CONTAINER_GIT_SHA\nENV CONTAINER_BUILD_DATE=\"$CONTAINER_BUILD_DATE\"\nENV CONTAINER_GIT_SHA=\"$CONTAINER_GIT_SHA\"\nENV CONTAINER_IMAGE_NAME=\"cloud-computer/cloud-computer\"\n#   Become non-root user\nUSER $USER\nWORKDIR $HOME\n#   Add application launchers\nCOPY launcher-broadway.sh launcher-vnc.sh make-fullscreen.sh /cloud-computer/\n#   Run indefinitely\nCMD sleep infinity\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:19.04\nENV USER=\"cloud\"\nENV EDITOR=\"nano\"\nENV HOME=\"/home/$USER\"\nENV LANG=\"en_US.UTF-8\"\nENV LANGUAGE=\"$LANG\"\nENV LC_ALL=\"$LANG\"\nENV LC_CTYPE=\"$LANG\"\nENV SHELL=\"/bin/zsh\"\nENV TERM=\"xterm-256color\"\nENV TZ=\"Australia/Sydney\"\n#  Restore minimized distribution content e.g. man pages\nRUN yes | unminimize\n#  Install locales and timezone data\nRUN apt-get update -qq \\\n && apt-get install locales tzdata -qq\n#  Generate locales\nRUN locale-gen $LANG \\\n && update-locale LC_ALL=$LC_ALL LANG=$LANG \\\n && dpkg-reconfigure --frontend=noninteractive locales\n#  Set timezone\nRUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime \\\n && echo $TZ > /etc/timezone\n#  Install cloud computer utilities\nRUN apt-get update -qq \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -qq --fix-missing asciinema build-essential cmake cmatrix curl dnsutils docker.io figlet g++ gcc git gtk+3.0 gosu htop iftop iputils-ping jq libnss3-tools lsb-core make man-db nano ncdu net-tools netcat-openbsd nnn numlockx openbox openssl perl python ruby software-properties-common ssh sudo tmux tree vcsh vim weechat wmctrl x11vnc xauth xdotool xinput xsel xvfb zsh\n#  Install antigen\nRUN curl -fsSL git.io/antigen > /usr/local/bin/antigen.zsh\n#  Install bat\nRUN wget -O bat.deb -qnv https://github.com/sharkdp/bat/releases/download/v0.9.0/bat_0.9.0_amd64.deb \\\n && dpkg -i bat.deb \\\n && rm bat.deb\n#  Install code\nRUN curl -fsSL https://github.com/cdr/code-server/releases/download/1.1119-vsc1.33.1/code-server1.1119-vsc1.33.1-linux-x64.tar.gz | tar -C /tmp -xzf - \\\n && mv /tmp/code-server*/code-server /usr/local/bin \\\n && rm -rf /tmp/code-server*\n#  Install ctop\nRUN wget -O /usr/local/bin/ctop -qnv https://github.com/bcicen/ctop/releases/download/v0.7.2/ctop-0.7.2-linux-amd64 \\\n && chmod +x /usr/local/bin/ctop\n#  Install define\nRUN wget -O /usr/local/bin/define -qnv https://github.com/Rican7/define/releases/download/v0.1.2/define_linux_amd64 \\\n && chmod +x /usr/local/bin/define\n#  Install dive docker image explorer\nRUN wget -qnv -O dive.deb https://github.com/wagoodman/dive/releases/download/v0.6.0/dive_0.6.0_linux_amd64.deb \\\n && dpkg -i dive.deb \\\n && rm dive.deb\n#  Install docker-compose\nRUN curl -fsSL \"https://github.com/docker/compose/releases/download/1.23.1/docker-compose-$( uname -s ;)-$( uname -m ;)\" -o /usr/local/bin/docker-compose \\\n && chmod +x /usr/local/bin/docker-compose\n#  Install fzf\nRUN git clone --depth 1 https://github.com/junegunn/fzf.git /opt/fzf \\\n && /opt/fzf/install --bin\n#  Install git dashboard\nRUN curl -fsSL https://github.com/jesseduffield/lazygit/releases/download/v0.7.2/lazygit_0.7.2_Linux_x86_64.tar.gz | tar -C /usr/local/bin -xzf -\n#  Install git stats viewer\nRUN git clone --depth 1 https://github.com/arzzen/git-quick-stats.git \\\n && cd git-quick-stats \\\n && make install \\\n && rm -rf ../git-quick-stats\n#  Install gotop\nRUN wget -qnv -O gotop-deb https://github.com/cjbassi/gotop/releases/download/3.0.0/gotop_3.0.0_linux_amd64.deb \\\n && dpkg -i gotop-deb\n#  Install gotty\nRUN curl -fsSL https://github.com/yudai/gotty/releases/download/v2.0.0-alpha.3/gotty_2.0.0-alpha.3_linux_amd64.tar.gz | tar -C /usr/local/bin -xzf -\n#  Install jump directory navigator\nRUN wget -qnv -O jump.deb https://github.com/gsamokovarov/jump/releases/download/v0.22.0/jump_0.22.0_amd64.deb \\\n && dpkg -i jump.deb \\\n && rm jump.deb\n#  Install kind\nRUN wget -qnv -O kind https://github.com/kubernetes-sigs/kind/releases/download/v0.3.0/kind-linux-amd64 \\\n && chmod +x kind \\\n && mv kind /usr/local/bin\n#  Install node.js\nRUN curl -fsSL https://gist.githubusercontent.com/sabrehagen/b07846cdb0d373ad5e6a4c7567d5f390/raw/61b7273546d9b187c6ee77a902cd2d078de83fc7/install.sh | bash - \\\n && apt-get install nodejs -qq\n#  Install novnc\nRUN git clone --depth 1 https://github.com/cloud-computer/noVNC.git /opt/noVNC\n#  Install packer\nRUN curl -fsSL https://releases.hashicorp.com/packer/1.3.3/packer_1.3.3_linux_amd64.zip > packer.zip \\\n && unzip packer.zip \\\n && mv packer /usr/local/bin \\\n && rm packer.zip\n#  Install terraform\nRUN wget --quiet https://releases.hashicorp.com/terraform/0.11.3/terraform_0.11.3_linux_amd64.zip \\\n && unzip terraform_0.11.3_linux_amd64.zip \\\n && mv terraform /usr/bin \\\n && rm terraform_0.11.3_linux_amd64.zip\n#  Install tmux plugin manager\nRUN git clone https://github.com/tmux-plugins/tpm /opt/tpm --depth 1 \\\n && ln -s /opt/tpm/tpm /usr/local/bin\n#  Install tmuxinator\nRUN gem install tmuxinator\n#  Install yarn\nRUN curl -fsSL https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \\\n && echo \"deb https://dl.yarnpkg.com/debian stable main\" | tee /etc/apt/sources.list.d/yarn.list \\\n && apt-get update -qq \\\n && apt-get install yarn -qq\n#  Install yarn based utilities\nRUN yarn global add github-email rebase-editor tldr\n#  Enable password-less sudo for the sudo group\nRUN echo \"%sudo ALL=(ALL) NOPASSWD:ALL\" > /etc/sudoers\n#  Create the docker group with the host os group id\nENV DOCKER_GROUP=\"999\"\nRUN groupmod --gid $DOCKER_GROUP docker\n#  Create a non-root user for safe operation\nRUN useradd --create-home --groups $DOCKER_GROUP,sudo --password $USER --shell /bin/zsh $USER\n#  Clone dotfiles\nRUN vcsh clone https://github.com/cloud-computer/dotfiles\n#  Cache tmux plugins\nRUN /opt/tpm/bin/install_plugins\n#  Take ownership of user's home and applications directory\nRUN chown -R $USER:$USER $HOME /opt\n#  Cache zsh plugins\nRUN gosu $USER zsh -c \"source $HOME/.zshrc\"\n#  Ensure x server socket directory exists, owned by root, and world accessible\nRUN mkdir -p /tmp/.X11-unix \\\n && chmod 1777 /tmp/.X11-unix\n#  Record container build metadata\nARG CONTAINER_BUILD_DATE\nARG CONTAINER_GIT_SHA\nENV CONTAINER_BUILD_DATE=\"$CONTAINER_BUILD_DATE\"\nENV CONTAINER_GIT_SHA=\"$CONTAINER_GIT_SHA\"\nENV CONTAINER_IMAGE_NAME=\"cloud-computer/cloud-computer\"\n#  Become non-root user\nUSER $USER\nWORKDIR $HOME\n#  Add application launchers\nADD launcher-broadway.sh launcher-vnc.sh make-fullscreen.sh /cloud-computer/\n#  Run indefinitely\nCMD sleep infinity\n","injectedSmells":[],"originalDockerfileHash":"c31228d3e9882fe9ea4a1a8124e78718","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:19.04\nENV USER=\"cloud\"\nENV EDITOR=\"nano\"\nENV HOME=\"/home/$USER\"\nENV LANG=\"en_US.UTF-8\"\nENV LANGUAGE=\"$LANG\"\nENV LC_ALL=\"$LANG\"\nENV LC_CTYPE=\"$LANG\"\nENV SHELL=\"/bin/zsh\"\nENV TERM=\"xterm-256color\"\nENV TZ=\"Australia/Sydney\"\n#   Restore minimized distribution content e.g. man pages\nRUN yes | unminimize\n#   Install locales and timezone data\nRUN apt-get update -qq \\\n && apt-get install locales tzdata -qq\n#   Generate locales\nRUN locale-gen $LANG \\\n && update-locale LC_ALL=$LC_ALL LANG=$LANG \\\n && dpkg-reconfigure --frontend=noninteractive locales\n#   Set timezone\nRUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime \\\n && echo $TZ > /etc/timezone\n#   Install cloud computer utilities\nRUN apt-get update -qq \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -qq --fix-missing asciinema build-essential cmake cmatrix curl dnsutils docker.io figlet g++ gcc git gtk+3.0 gosu htop iftop iputils-ping jq libnss3-tools lsb-core make man-db nano ncdu net-tools netcat-openbsd nnn numlockx openbox openssl perl python ruby software-properties-common ssh sudo tmux tree vcsh vim weechat wmctrl x11vnc xauth xdotool xinput xsel xvfb zsh\n#   Install antigen\nRUN curl -fsSL git.io/antigen > /usr/local/bin/antigen.zsh\n#   Install bat\nRUN wget -O bat.deb -qnv https://github.com/sharkdp/bat/releases/download/v0.9.0/bat_0.9.0_amd64.deb \\\n && dpkg -i bat.deb \\\n && rm bat.deb\n#   Install code\nRUN curl -fsSL https://github.com/cdr/code-server/releases/download/1.1119-vsc1.33.1/code-server1.1119-vsc1.33.1-linux-x64.tar.gz | tar -C /tmp -xzf - \\\n && mv /tmp/code-server*/code-server /usr/local/bin \\\n && rm -rf /tmp/code-server*\n#   Install ctop\nRUN wget -O /usr/local/bin/ctop -qnv https://github.com/bcicen/ctop/releases/download/v0.7.2/ctop-0.7.2-linux-amd64 \\\n && chmod +x /usr/local/bin/ctop\n#   Install define\nRUN wget -O /usr/local/bin/define -qnv https://github.com/Rican7/define/releases/download/v0.1.2/define_linux_amd64 \\\n && chmod +x /usr/local/bin/define\n#   Install dive docker image explorer\nRUN wget -qnv -O dive.deb https://github.com/wagoodman/dive/releases/download/v0.6.0/dive_0.6.0_linux_amd64.deb \\\n && dpkg -i dive.deb \\\n && rm dive.deb\n#   Install docker-compose\nRUN curl -fsSL \"https://github.com/docker/compose/releases/download/1.23.1/docker-compose-$( uname -s ;)-$( uname -m ;)\" -o /usr/local/bin/docker-compose \\\n && chmod +x /usr/local/bin/docker-compose\n#   Install fzf\nRUN git clone --depth 1 https://github.com/junegunn/fzf.git /opt/fzf \\\n && /opt/fzf/install --bin\n#   Install git dashboard\nRUN curl -fsSL https://github.com/jesseduffield/lazygit/releases/download/v0.7.2/lazygit_0.7.2_Linux_x86_64.tar.gz | tar -C /usr/local/bin -xzf -\n#   Install git stats viewer\nRUN git clone --depth 1 https://github.com/arzzen/git-quick-stats.git \\\n && cd git-quick-stats \\\n && make install \\\n && rm -rf ../git-quick-stats\n#   Install gotop\nRUN wget -qnv -O gotop-deb https://github.com/cjbassi/gotop/releases/download/3.0.0/gotop_3.0.0_linux_amd64.deb \\\n && dpkg -i gotop-deb\n#   Install gotty\nRUN curl -fsSL https://github.com/yudai/gotty/releases/download/v2.0.0-alpha.3/gotty_2.0.0-alpha.3_linux_amd64.tar.gz | tar -C /usr/local/bin -xzf -\n#   Install jump directory navigator\nRUN wget -qnv -O jump.deb https://github.com/gsamokovarov/jump/releases/download/v0.22.0/jump_0.22.0_amd64.deb \\\n && dpkg -i jump.deb \\\n && rm jump.deb\n#   Install kind\nRUN wget -qnv -O kind https://github.com/kubernetes-sigs/kind/releases/download/v0.3.0/kind-linux-amd64 \\\n && chmod +x kind \\\n && mv kind /usr/local/bin\n#   Install node.js\nRUN curl -fsSL https://gist.githubusercontent.com/sabrehagen/b07846cdb0d373ad5e6a4c7567d5f390/raw/61b7273546d9b187c6ee77a902cd2d078de83fc7/install.sh | bash - \\\n && apt-get install nodejs -qq\n#   Install novnc\nRUN git clone --depth 1 https://github.com/cloud-computer/noVNC.git /opt/noVNC\n#   Install packer\nRUN curl -fsSL https://releases.hashicorp.com/packer/1.3.3/packer_1.3.3_linux_amd64.zip > packer.zip \\\n && unzip packer.zip \\\n && mv packer /usr/local/bin \\\n && rm packer.zip\n#   Install terraform\nRUN wget --quiet https://releases.hashicorp.com/terraform/0.11.3/terraform_0.11.3_linux_amd64.zip \\\n && unzip terraform_0.11.3_linux_amd64.zip \\\n && mv terraform /usr/bin \\\n && rm terraform_0.11.3_linux_amd64.zip\n#   Install tmux plugin manager\nRUN git clone https://github.com/tmux-plugins/tpm /opt/tpm --depth 1 \\\n && ln -s /opt/tpm/tpm /usr/local/bin\n#   Install tmuxinator\nRUN gem install tmuxinator\n#   Install yarn\nRUN curl -fsSL https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \\\n && echo \"deb https://dl.yarnpkg.com/debian stable main\" | tee /etc/apt/sources.list.d/yarn.list \\\n && apt-get update -qq \\\n && apt-get install yarn -qq\n#   Install yarn based utilities\nRUN yarn global add github-email rebase-editor tldr\n#   Enable password-less sudo for the sudo group\nRUN echo \"%sudo ALL=(ALL) NOPASSWD:ALL\" > /etc/sudoers\n#   Create the docker group with the host os group id\nENV DOCKER_GROUP=\"999\"\nRUN groupmod --gid $DOCKER_GROUP docker\n#   Create a non-root user for safe operation\nRUN useradd --create-home --groups $DOCKER_GROUP,sudo --password $USER --shell /bin/zsh $USER\n#   Clone dotfiles\nRUN vcsh clone https://github.com/cloud-computer/dotfiles\n#   Cache tmux plugins\nRUN /opt/tpm/bin/install_plugins\n#   Take ownership of user's home and applications directory\nRUN chown -R $USER:$USER $HOME /opt\n#   Cache zsh plugins\nRUN gosu $USER zsh -c \"source $HOME/.zshrc\"\n#   Ensure x server socket directory exists, owned by root, and world accessible\nRUN mkdir -p /tmp/.X11-unix \\\n && chmod 1777 /tmp/.X11-unix\n#   Record container build metadata\nARG CONTAINER_BUILD_DATE\nARG CONTAINER_GIT_SHA\nENV CONTAINER_BUILD_DATE=\"$CONTAINER_BUILD_DATE\"\nENV CONTAINER_GIT_SHA=\"$CONTAINER_GIT_SHA\"\nENV CONTAINER_IMAGE_NAME=\"cloud-computer/cloud-computer\"\n#   Become non-root user\nUSER $USER\nWORKDIR $HOME\n#   Add application launchers\nADD launcher-broadway.sh launcher-vnc.sh make-fullscreen.sh /cloud-computer/\n#   Run indefinitely\nCMD sleep infinity\n","originalDockerfileUglifiedHash":"8c0772f7ae91c8971f0fe55722554d0d","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/722650022baa070834361739277616147a918105.dockerfile"}