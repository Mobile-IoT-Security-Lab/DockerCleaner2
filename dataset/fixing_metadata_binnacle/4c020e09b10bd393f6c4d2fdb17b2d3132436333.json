{"seed":1501482018,"processedDockerfileHash":"a04b8e6507e64598e77b9142554acb84","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","have-a-healthcheck"],"processedDockerfile":"FROM php:7.2.0-apache-stretch AS builder\n#   The version and repository to clone koel from.\nARG KOEL_CLONE_SOURCE=https://github.com/phanan/koel.git\nARG KOEL_VERSION_REF=v3.7.2\n#   The version of php-composer to install.\nARG COMPOSER_VERSION=1.1.2\n#   The version of nodejs to install.\nARG NODE_VERSION=node_8.x\n#   Install dependencies to install dependencies.\nRUN apt-get update \\\n && apt-get install --no-install-recommends gnupg2=2.1.18-8~deb9u1 apt-transport-https=1.4.8 --yes\n#   Add node repository.\nRUN curl --silent https://deb.nodesource.com/gpgkey/nodesource.gpg.key | apt-key add - \\\n && echo \"deb https://deb.nodesource.com/${NODE_VERSION} stretch main\" | tee /etc/apt/sources.list.d/nodesource.list \\\n && echo \"deb-src https://deb.nodesource.com/${NODE_VERSION} stretch main\" | tee --append /etc/apt/sources.list.d/nodesource.list\n#   Add yarn repository.\nRUN curl --silent --show-error https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \\\n && echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list\n#   These are dependencies needed both at build time and at runtime.\nARG RUNTIME_DEPS=\" libxml2-dev  zlib1g-dev  libcurl4-openssl-dev\"\n#   Install dependencies.\nRUN apt-get update \\\n && apt-get install --no-install-recommends nodejs yarn git ${RUNTIME_DEPS} --yes\n#   Install composer from getcomposer.org. An apk package is only available in\n#   edge (> 3.7).\nRUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer --version=${COMPOSER_VERSION} \\\n && chmod +x /usr/local/bin/composer \\\n && composer --version\nARG PHP_BUILD_DEPS=\"zip mbstring curl xml\"\n#   The repo version wasn't working so using docker-php-ext-install instead. Not\n#   using docker-php-ext-install for every extension because it is badly\n#   documented.\nRUN docker-php-ext-install ${PHP_BUILD_DEPS}\n#   Change to a restricted user.\nUSER www-data\n#   Clone the koel repository.\nRUN git clone ${KOEL_CLONE_SOURCE} -b ${KOEL_VERSION_REF} /tmp/koel\n#   Place artifacts here.\nWORKDIR /tmp/koel\n#   Install runtime dependencies.\nRUN composer install\nRUN yarn install\n#   The runtime image.\nFROM php:7.2.0-apache-stretch\n#   These are dependencies needed both at build time and at runtime. This is\n#   repeated because docker doesn't seem to have a way to share args across build\n#   contexts.\nARG RUNTIME_DEPS=\" libcurl4-openssl-dev  zlib1g-dev  libxml2-dev  faad  ffmpeg\"\nARG PHP_RUNTIME_DEPS=\" mbstring  curl  xml  zip  pdo  pdo_mysql  exif\"\n#   Install dependencies.\nRUN apt-get update \\\n && apt-get install --no-install-recommends ${RUNTIME_DEPS} --yes \\\n && docker-php-ext-install ${PHP_RUNTIME_DEPS} \\\n && apt-get clean\n#   Copy artifacts from build stage.\nCOPY --from=builder /tmp/koel /var/www/html\n#   Remove configuration file. All configuration should be passed in as\n#   environment variables or a bind mounted file at runtime.\nRUN rm /var/www/html/.env\n#   Koel makes use of Larvel's pretty URLs. This requires some additional\n#   configuration: https://laravel.com/docs/4.2#pretty-urls\nCOPY ./.htaccess /var/www/html\n#   Fix permissions.\nRUN chown -R www-data:www-data /var/www/html\nRUN a2enmod rewrite\n#   Setup bootstrap script.\nCOPY koel-entrypoint /usr/local/bin/\nENTRYPOINT [\"koel-entrypoint\"]\nCMD [\"apache2-foreground\"]\nEXPOSE 80/tcp\nHEALTHCHECK CMD curl --fail http://127.0.0.1:80 || exit 1\n","originalDockerfile":"FROM php:7.2.0-apache-stretch AS builder\n#  The version and repository to clone koel from.\nARG KOEL_CLONE_SOURCE=https://github.com/phanan/koel.git\nARG KOEL_VERSION_REF=v3.7.2\n#  The version of php-composer to install.\nARG COMPOSER_VERSION=1.1.2\n#  The version of nodejs to install.\nARG NODE_VERSION=node_8.x\n#  Install dependencies to install dependencies.\nRUN apt-get update \\\n && apt-get install gnupg2=2.1.18-8~deb9u1 apt-transport-https=1.4.8 --yes\n#  Add node repository.\nRUN curl --silent https://deb.nodesource.com/gpgkey/nodesource.gpg.key | apt-key add - \\\n && echo \"deb https://deb.nodesource.com/${NODE_VERSION} stretch main\" | tee /etc/apt/sources.list.d/nodesource.list \\\n && echo \"deb-src https://deb.nodesource.com/${NODE_VERSION} stretch main\" | tee --append /etc/apt/sources.list.d/nodesource.list\n#  Add yarn repository.\nRUN curl --silent --show-error https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \\\n && echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list\n#  These are dependencies needed both at build time and at runtime.\nARG RUNTIME_DEPS=\" libxml2-dev  zlib1g-dev  libcurl4-openssl-dev\"\n#  Install dependencies.\nRUN apt-get update \\\n && apt-get install nodejs yarn git ${RUNTIME_DEPS} --yes\n#  Install composer from getcomposer.org. An apk package is only available in\n#  edge (> 3.7).\nRUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer --version=${COMPOSER_VERSION} \\\n && chmod +x /usr/local/bin/composer \\\n && composer --version\nARG PHP_BUILD_DEPS=\"zip mbstring curl xml\"\n#  The repo version wasn't working so using docker-php-ext-install instead. Not\n#  using docker-php-ext-install for every extension because it is badly\n#  documented.\nRUN docker-php-ext-install ${PHP_BUILD_DEPS}\n#  Change to a restricted user.\nUSER www-data\n#  Clone the koel repository.\nRUN git clone ${KOEL_CLONE_SOURCE} -b ${KOEL_VERSION_REF} /tmp/koel\n#  Place artifacts here.\nWORKDIR /tmp/koel\n#  Install runtime dependencies.\nRUN composer install\nRUN yarn install\n#  The runtime image.\nFROM php:7.2.0-apache-stretch\n#  These are dependencies needed both at build time and at runtime. This is\n#  repeated because docker doesn't seem to have a way to share args across build\n#  contexts.\nARG RUNTIME_DEPS=\" libcurl4-openssl-dev  zlib1g-dev  libxml2-dev  faad  ffmpeg\"\nARG PHP_RUNTIME_DEPS=\" mbstring  curl  xml  zip  pdo  pdo_mysql  exif\"\n#  Install dependencies.\nRUN apt-get update \\\n && apt-get install ${RUNTIME_DEPS} --yes \\\n && docker-php-ext-install ${PHP_RUNTIME_DEPS} \\\n && apt-get clean\n#  Copy artifacts from build stage.\nCOPY --from=builder /tmp/koel /var/www/html\n#  Remove configuration file. All configuration should be passed in as\n#  environment variables or a bind mounted file at runtime.\nRUN rm /var/www/html/.env\n#  Koel makes use of Larvel's pretty URLs. This requires some additional\n#  configuration: https://laravel.com/docs/4.2#pretty-urls\nCOPY ./.htaccess /var/www/html\n#  Fix permissions.\nRUN chown -R www-data:www-data /var/www/html\nRUN a2enmod rewrite\n#  Setup bootstrap script.\nCOPY koel-entrypoint /usr/local/bin/\nENTRYPOINT [\"koel-entrypoint\"]\nCMD [\"apache2-foreground\"]\nEXPOSE 80/tcp\n","injectedSmells":[],"originalDockerfileHash":"c72102ceaf93abe9ea1fcb60597ecc22","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM php:7.2.0-apache-stretch AS builder\n#   The version and repository to clone koel from.\nARG KOEL_CLONE_SOURCE=https://github.com/phanan/koel.git\nARG KOEL_VERSION_REF=v3.7.2\n#   The version of php-composer to install.\nARG COMPOSER_VERSION=1.1.2\n#   The version of nodejs to install.\nARG NODE_VERSION=node_8.x\n#   Install dependencies to install dependencies.\nRUN apt-get update \\\n && apt-get install gnupg2=2.1.18-8~deb9u1 apt-transport-https=1.4.8 --yes\n#   Add node repository.\nRUN curl --silent https://deb.nodesource.com/gpgkey/nodesource.gpg.key | apt-key add - \\\n && echo \"deb https://deb.nodesource.com/${NODE_VERSION} stretch main\" | tee /etc/apt/sources.list.d/nodesource.list \\\n && echo \"deb-src https://deb.nodesource.com/${NODE_VERSION} stretch main\" | tee --append /etc/apt/sources.list.d/nodesource.list\n#   Add yarn repository.\nRUN curl --silent --show-error https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \\\n && echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list\n#   These are dependencies needed both at build time and at runtime.\nARG RUNTIME_DEPS=\" libxml2-dev  zlib1g-dev  libcurl4-openssl-dev\"\n#   Install dependencies.\nRUN apt-get update \\\n && apt-get install nodejs yarn git ${RUNTIME_DEPS} --yes\n#   Install composer from getcomposer.org. An apk package is only available in\n#   edge (> 3.7).\nRUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer --version=${COMPOSER_VERSION} \\\n && chmod +x /usr/local/bin/composer \\\n && composer --version\nARG PHP_BUILD_DEPS=\"zip mbstring curl xml\"\n#   The repo version wasn't working so using docker-php-ext-install instead. Not\n#   using docker-php-ext-install for every extension because it is badly\n#   documented.\nRUN docker-php-ext-install ${PHP_BUILD_DEPS}\n#   Change to a restricted user.\nUSER www-data\n#   Clone the koel repository.\nRUN git clone ${KOEL_CLONE_SOURCE} -b ${KOEL_VERSION_REF} /tmp/koel\n#   Place artifacts here.\nWORKDIR /tmp/koel\n#   Install runtime dependencies.\nRUN composer install\nRUN yarn install\n#   The runtime image.\nFROM php:7.2.0-apache-stretch\n#   These are dependencies needed both at build time and at runtime. This is\n#   repeated because docker doesn't seem to have a way to share args across build\n#   contexts.\nARG RUNTIME_DEPS=\" libcurl4-openssl-dev  zlib1g-dev  libxml2-dev  faad  ffmpeg\"\nARG PHP_RUNTIME_DEPS=\" mbstring  curl  xml  zip  pdo  pdo_mysql  exif\"\n#   Install dependencies.\nRUN apt-get update \\\n && apt-get install ${RUNTIME_DEPS} --yes \\\n && docker-php-ext-install ${PHP_RUNTIME_DEPS} \\\n && apt-get clean\n#   Copy artifacts from build stage.\nCOPY --from=builder /tmp/koel /var/www/html\n#   Remove configuration file. All configuration should be passed in as\n#   environment variables or a bind mounted file at runtime.\nRUN rm /var/www/html/.env\n#   Koel makes use of Larvel's pretty URLs. This requires some additional\n#   configuration: https://laravel.com/docs/4.2#pretty-urls\nCOPY ./.htaccess /var/www/html\n#   Fix permissions.\nRUN chown -R www-data:www-data /var/www/html\nRUN a2enmod rewrite\n#   Setup bootstrap script.\nCOPY koel-entrypoint /usr/local/bin/\nENTRYPOINT [\"koel-entrypoint\"]\nCMD [\"apache2-foreground\"]\nEXPOSE 80/tcp\n","originalDockerfileUglifiedHash":"2d4d527f4a38a44f4896b2f8446d7b56","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/4c020e09b10bd393f6c4d2fdb17b2d3132436333.dockerfile"}