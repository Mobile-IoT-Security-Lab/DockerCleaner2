{"seed":1462768485,"processedDockerfileHash":"3196a701c407fe93c7d3df8abb9a2ec8","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"#\n#   ffmpeg - http://ffmpeg.org/\n#   Read Ubuntu https://trac.ffmpeg.org/wiki/CompilationGuide/Ubuntu\n#   hub https://hub.docker.com/r/sitkevij/ffmpeg/\n#   docker run --entrypoint \"apt-cache\" ffmpeg3 rdepends libass-dev\n#\nFROM ubuntu:16.04\n#   FROM        debian:stretch\n#   see https://hub.docker.com/r/blitznote/debootstrap-amd64/\n#   FROM        blitznote/debootstrap-amd64:16.04 \nCMD [\"--help\"]\nENTRYPOINT [\"ffmpeg\"]\nWORKDIR /tmp/ffmpeg-workdir\nENV SRC=\"/usr/local\" \\\n    LD_LIBRARY_PATH=\"${SRC}/lib\" \\\n    PKG_CONFIG_PATH=\"${SRC}/lib/pkgconfig\" \\\n    BIN=\"${SRC}/bin\" \\\n    NASM_VERSION=\"2.13.01\" \\\n    FFMPEG_VERSION=\"snapshot\" \\\n    VPX_VERSION=\"1.6.1\" \\\n    LIBASS_VERSION=\"0.13.7\" \\\n    GET=\"curl -Os -L\" \\\n    DEBIAN_FRONTEND=\"noninteractive\"\nRUN BUILD_DEP=\"autoconf automake cmake curl bzip2 libexpat1-dev g++ gcc gperf libtool make pkg-config libssl-dev yasm zlib1g-dev\" \\\n && export MAKEFLAGS=\"-j$(($( nproc ;) + 1))\" \\\n && apt-get update -yqq \\\n && apt-get install --no-install-recommends ca-certificates=20210119~16.04.1 expat=2.1.0-7ubuntu0.16.04.5 libgomp1=5.4.0-6ubuntu1~16.04.12 ${BUILD_DEP} -yq\nENV CD=\"cd(){ builtin cd \\\"${@:1:1}\\\"; }; cd \"\n#   nasm\nRUN cd $SRC \\\n && $GET http://www.nasm.us/pub/nasm/releasebuilds/2.13.01/nasm-$NASM_VERSION.tar.bz2 \\\n && tar xjvf nasm-$NASM_VERSION.tar.bz2 \\\n && cd nasm-$NASM_VERSION \\\n && ./autogen.sh \\\n && PATH=\"$BIN:$PATH\" ./configure --prefix=\"$SRC\" --bindir=\"$BIN\" \\\n && PATH=\"$BIN:$PATH\" make \\\n && make install\n#   freebidi\nRUN DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && $GET https://www.fribidi.org/download/fribidi-0.19.7.tar.bz2 \\\n && tar xvf fribidi-0.19.7.tar.bz2 \\\n && cd fribidi-0.19.7 \\\n && ./configure --prefix=\"$SRC\" \\\n && make \\\n && make install \\\n && make distclean \\\n && rm -rf ${DIR}\n#   freetype --without-harfbuzz\nRUN DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && $GET https://downloads.sourceforge.net/freetype/freetype-2.8.tar.bz2 \\\n && tar xvf freetype-2.8.tar.bz2 \\\n && cd freetype* \\\n && sed -ri \"s:.*(AUX_MODULES.*valid):\\1:\" modules.cfg \\\n && sed -r \"s:.*(#.*SUBPIXEL_RENDERING) .*:\\1:\" -i include/freetype/config/ftoption.h \\\n && ./configure --prefix=\"$SRC\" \\\n && make \\\n && make install \\\n && rm -rf ${DIR}\n#   fontconfig\n#  RUN DIR=$(mktemp -d) && cd ${DIR} && \\\n#    $GET https://www.freedesktop.org/software/fontconfig/release/fontconfig-2.12.4.tar.bz2 &&  \\\n#    tar xvf fontconfig-2.12.4.tar.bz2 &&  \\\n#    cd fontconfig* && \\\n#    rm -f src/fcobjshash.h && \\\n#    ./configure --prefix=\"$SRC\" --sysconfdir=/etc --localstatedir=/var \\\n#              --disable-docs       \\\n#              --docdir=/usr/share/doc/fontconfig-2.12.4 && \\\n#    make && \\\n#    make install && \\\n#    make distclean && \\\n#    rm -rf ${DIR}\n#   libass http://www.linuxfromscratch.org/blfs/view/svn/multimedia/libass.html\n#   https://github.com/libass/libass/releases/download/0.13.7/libass-0.13.7.tar.xz\nRUN DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && $GET https://github.com/libass/libass/releases/download/0.13.7/libass-$LIBASS_VERSION.tar.gz \\\n && tar xzvf libass-$LIBASS_VERSION.tar.gz \\\n && cd libass* \\\n && ./configure --prefix=\"$SRC\" --disable-require-system-font-provider \\\n && make \\\n && make install \\\n && rm -rf ${DIR}\n#   fdk-aac\nRUN DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -o fdk-aac.tar.gz https://codeload.github.com/mstorsjo/fdk-aac/legacy.tar.gz/master \\\n && tar xzvf fdk-aac.tar.gz \\\n && cd mstorsjo-fdk-aac* \\\n && autoreconf -fiv \\\n && ./configure --prefix=\"$SRC\" --disable-shared \\\n && make \\\n && make install \\\n && rm -rf ${DIR}\n#   x264\nRUN DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -Os -L ftp://ftp.videolan.org/pub/x264/snapshots/last_x264.tar.bz2 \\\n && tar xvf last_x264.tar.bz2 \\\n && cd x264* \\\n && ./configure --prefix=\"$SRC\" --bindir=\"$BIN\" --enable-static \\\n && make \\\n && make install \\\n && make distclean \\\n && rm -rf ${DIR}\n#   x265 https://bitbucket.org/multicoreware/x265/downloads/x265_2.5.tar.gz\nRUN DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && $GET https://bitbucket.org/multicoreware/x265/downloads/x265_2.5.tar.gz \\\n && tar xzvf x265_2.5.tar.gz \\\n && cd x265*/build/linux \\\n && PATH=\"$BIN:$PATH\" cmake -G \"Unix Makefiles\" -DCMAKE_INSTALL_PREFIX=\"$SRC\" -DENABLE_SHARED:bool=off ../../source \\\n && make \\\n && make install \\\n && rm -rf ${DIR}\n#   https://github.com/webmproject/libvpx/archive/v1.6.1.tar.gz\n#   curl -sL https://codeload.github.com/webmproject/libvpx/tar.gz/v${VPX_VERSION} && \\\nRUN DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && $GET https://github.com/webmproject/libvpx/archive/v1.6.1.tar.gz \\\n && tar xzvf v1.6.1.tar.gz \\\n && cd *1.6.1 \\\n && ./configure --prefix=\"$SRC\" --enable-vp8 --enable-vp9 --enable-pic --disable-debug --disable-examples --disable-docs --disable-install-bins --enable-shared \\\n && make \\\n && make install \\\n && make distclean \\\n && rm -rf ${DIR}\n#   snapshot http://ffmpeg.org/releases/ffmpeg-snapshot.tar.bz2\nRUN DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && $GET http://ffmpeg.org/releases/ffmpeg-${FFMPEG_VERSION}.tar.bz2 \\\n && tar xjvf ffmpeg-${FFMPEG_VERSION}.tar.bz2 \\\n && cd ffmpeg* \\\n && ./configure --prefix=\"${SRC}\" --extra-cflags=\"-I${SRC}/include\" --pkg-config-flags=\"--static\" --extra-ldflags=\"-L${SRC}/lib\" --bindir=\"${SRC}/bin\" --disable-debug --disable-doc --disable-ffplay --enable-avresample --enable-gpl --enable-libass --enable-libfdk_aac --enable-libvpx --enable-libx264 --enable-libx265 --enable-nonfree --enable-postproc --enable-small --enable-version3 \\\n && make \\\n && make install \\\n && make distclean \\\n && hash -r \\\n && rm -rf ${DIR}\n#   cleanup\nRUN cd \\\n && echo \"removing ${BUILD_DEP}\" \\\n && apt-get purge -y ${BUILD_DEP} \\\n && apt-get autoremove -y \\\n && apt-get clean -y \\\n && rm -rf /var/lib/apt/lists \\\n && ldconfig \\\n && ffmpeg -buildconf\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#\n#  ffmpeg - http://ffmpeg.org/\n#  Read Ubuntu https://trac.ffmpeg.org/wiki/CompilationGuide/Ubuntu\n#  hub https://hub.docker.com/r/sitkevij/ffmpeg/\n#  docker run --entrypoint \"apt-cache\" ffmpeg3 rdepends libass-dev\n#\nFROM ubuntu:16.04\n#  FROM        debian:stretch\n#  see https://hub.docker.com/r/blitznote/debootstrap-amd64/\n#  FROM        blitznote/debootstrap-amd64:16.04 \nCMD [\"--help\"]\nENTRYPOINT [\"ffmpeg\"]\nWORKDIR /tmp/ffmpeg-workdir\nENV SRC=\"/usr/local\" \\\n    LD_LIBRARY_PATH=\"${SRC}/lib\" \\\n    PKG_CONFIG_PATH=\"${SRC}/lib/pkgconfig\" \\\n    BIN=\"${SRC}/bin\" \\\n    NASM_VERSION=\"2.13.01\" \\\n    FFMPEG_VERSION=\"snapshot\" \\\n    VPX_VERSION=\"1.6.1\" \\\n    LIBASS_VERSION=\"0.13.7\" \\\n    GET=\"curl -Os -L\" \\\n    DEBIAN_FRONTEND=\"noninteractive\"\nRUN BUILD_DEP=\"autoconf automake cmake curl bzip2 libexpat1-dev g++ gcc gperf libtool make pkg-config libssl-dev yasm zlib1g-dev\" \\\n && export MAKEFLAGS=\"-j$(($( nproc ;) + 1))\" \\\n && apt-get update -yqq \\\n && apt-get install --no-install-recommends ca-certificates expat libgomp1 ${BUILD_DEP} -yq\nENV CD=\"cd(){ builtin cd \\\"${@:1:1}\\\"; }; cd \"\n#  nasm\nRUN cd $SRC \\\n && $GET http://www.nasm.us/pub/nasm/releasebuilds/2.13.01/nasm-$NASM_VERSION.tar.bz2 \\\n && tar xjvf nasm-$NASM_VERSION.tar.bz2 \\\n && cd nasm-$NASM_VERSION \\\n && ./autogen.sh \\\n && PATH=\"$BIN:$PATH\" ./configure --prefix=\"$SRC\" --bindir=\"$BIN\" \\\n && PATH=\"$BIN:$PATH\" make \\\n && make install\n#  freebidi\nRUN DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && $GET https://www.fribidi.org/download/fribidi-0.19.7.tar.bz2 \\\n && tar xvf fribidi-0.19.7.tar.bz2 \\\n && cd fribidi-0.19.7 \\\n && ./configure --prefix=\"$SRC\" \\\n && make \\\n && make install \\\n && make distclean \\\n && rm -rf ${DIR}\n#  freetype --without-harfbuzz\nRUN DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && $GET https://downloads.sourceforge.net/freetype/freetype-2.8.tar.bz2 \\\n && tar xvf freetype-2.8.tar.bz2 \\\n && cd freetype* \\\n && sed -ri \"s:.*(AUX_MODULES.*valid):\\1:\" modules.cfg \\\n && sed -r \"s:.*(#.*SUBPIXEL_RENDERING) .*:\\1:\" -i include/freetype/config/ftoption.h \\\n && ./configure --prefix=\"$SRC\" \\\n && make \\\n && make install \\\n && rm -rf ${DIR}\n#  fontconfig\n# RUN DIR=$(mktemp -d) && cd ${DIR} && \\\n#   $GET https://www.freedesktop.org/software/fontconfig/release/fontconfig-2.12.4.tar.bz2 &&  \\\n#   tar xvf fontconfig-2.12.4.tar.bz2 &&  \\\n#   cd fontconfig* && \\\n#   rm -f src/fcobjshash.h && \\\n#   ./configure --prefix=\"$SRC\" --sysconfdir=/etc --localstatedir=/var \\\n#             --disable-docs       \\\n#             --docdir=/usr/share/doc/fontconfig-2.12.4 && \\\n#   make && \\\n#   make install && \\\n#   make distclean && \\\n#   rm -rf ${DIR}\n#  libass http://www.linuxfromscratch.org/blfs/view/svn/multimedia/libass.html\n#  https://github.com/libass/libass/releases/download/0.13.7/libass-0.13.7.tar.xz\nRUN DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && $GET https://github.com/libass/libass/releases/download/0.13.7/libass-$LIBASS_VERSION.tar.gz \\\n && tar xzvf libass-$LIBASS_VERSION.tar.gz \\\n && cd libass* \\\n && ./configure --prefix=\"$SRC\" --disable-require-system-font-provider \\\n && make \\\n && make install \\\n && rm -rf ${DIR}\n#  fdk-aac\nRUN DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -o fdk-aac.tar.gz https://codeload.github.com/mstorsjo/fdk-aac/legacy.tar.gz/master \\\n && tar xzvf fdk-aac.tar.gz \\\n && cd mstorsjo-fdk-aac* \\\n && autoreconf -fiv \\\n && ./configure --prefix=\"$SRC\" --disable-shared \\\n && make \\\n && make install \\\n && rm -rf ${DIR}\n#  x264\nRUN DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -Os -L ftp://ftp.videolan.org/pub/x264/snapshots/last_x264.tar.bz2 \\\n && tar xvf last_x264.tar.bz2 \\\n && cd x264* \\\n && ./configure --prefix=\"$SRC\" --bindir=\"$BIN\" --enable-static \\\n && make \\\n && make install \\\n && make distclean \\\n && rm -rf ${DIR}\n#  x265 https://bitbucket.org/multicoreware/x265/downloads/x265_2.5.tar.gz\nRUN DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && $GET https://bitbucket.org/multicoreware/x265/downloads/x265_2.5.tar.gz \\\n && tar xzvf x265_2.5.tar.gz \\\n && cd x265*/build/linux \\\n && PATH=\"$BIN:$PATH\" cmake -G \"Unix Makefiles\" -DCMAKE_INSTALL_PREFIX=\"$SRC\" -DENABLE_SHARED:bool=off ../../source \\\n && make \\\n && make install \\\n && rm -rf ${DIR}\n#  https://github.com/webmproject/libvpx/archive/v1.6.1.tar.gz\n#  curl -sL https://codeload.github.com/webmproject/libvpx/tar.gz/v${VPX_VERSION} && \\\nRUN DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && $GET https://github.com/webmproject/libvpx/archive/v1.6.1.tar.gz \\\n && tar xzvf v1.6.1.tar.gz \\\n && cd *1.6.1 \\\n && ./configure --prefix=\"$SRC\" --enable-vp8 --enable-vp9 --enable-pic --disable-debug --disable-examples --disable-docs --disable-install-bins --enable-shared \\\n && make \\\n && make install \\\n && make distclean \\\n && rm -rf ${DIR}\n#  snapshot http://ffmpeg.org/releases/ffmpeg-snapshot.tar.bz2\nRUN DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && $GET http://ffmpeg.org/releases/ffmpeg-${FFMPEG_VERSION}.tar.bz2 \\\n && tar xjvf ffmpeg-${FFMPEG_VERSION}.tar.bz2 \\\n && cd ffmpeg* \\\n && ./configure --prefix=\"${SRC}\" --extra-cflags=\"-I${SRC}/include\" --pkg-config-flags=\"--static\" --extra-ldflags=\"-L${SRC}/lib\" --bindir=\"${SRC}/bin\" --disable-debug --disable-doc --disable-ffplay --enable-avresample --enable-gpl --enable-libass --enable-libfdk_aac --enable-libvpx --enable-libx264 --enable-libx265 --enable-nonfree --enable-postproc --enable-small --enable-version3 \\\n && make \\\n && make install \\\n && make distclean \\\n && hash -r \\\n && rm -rf ${DIR}\n#  cleanup\nRUN cd \\\n && echo \"removing ${BUILD_DEP}\" \\\n && apt-get purge -y ${BUILD_DEP} \\\n && apt-get autoremove -y \\\n && apt-get clean -y \\\n && rm -rf /var/lib/apt/lists \\\n && ldconfig \\\n && ffmpeg -buildconf\n","injectedSmells":[],"originalDockerfileHash":"a7d67a24097993903ab5f12757301365","successfullyInjectedSmells":[],"originalDockerfileUglified":"#\n#   ffmpeg - http://ffmpeg.org/\n#   Read Ubuntu https://trac.ffmpeg.org/wiki/CompilationGuide/Ubuntu\n#   hub https://hub.docker.com/r/sitkevij/ffmpeg/\n#   docker run --entrypoint \"apt-cache\" ffmpeg3 rdepends libass-dev\n#\nFROM ubuntu:16.04\n#   FROM        debian:stretch\n#   see https://hub.docker.com/r/blitznote/debootstrap-amd64/\n#   FROM        blitznote/debootstrap-amd64:16.04 \nCMD [\"--help\"]\nENTRYPOINT [\"ffmpeg\"]\nWORKDIR /tmp/ffmpeg-workdir\nENV SRC=\"/usr/local\" \\\n    LD_LIBRARY_PATH=\"${SRC}/lib\" \\\n    PKG_CONFIG_PATH=\"${SRC}/lib/pkgconfig\" \\\n    BIN=\"${SRC}/bin\" \\\n    NASM_VERSION=\"2.13.01\" \\\n    FFMPEG_VERSION=\"snapshot\" \\\n    VPX_VERSION=\"1.6.1\" \\\n    LIBASS_VERSION=\"0.13.7\" \\\n    GET=\"curl -Os -L\" \\\n    DEBIAN_FRONTEND=\"noninteractive\"\nRUN BUILD_DEP=\"autoconf automake cmake curl bzip2 libexpat1-dev g++ gcc gperf libtool make pkg-config libssl-dev yasm zlib1g-dev\" \\\n && export MAKEFLAGS=\"-j$(($( nproc ;) + 1))\" \\\n && apt-get update -yqq \\\n && apt-get install --no-install-recommends ca-certificates expat libgomp1 ${BUILD_DEP} -yq\nENV CD=\"cd(){ builtin cd \\\"${@:1:1}\\\"; }; cd \"\n#   nasm\nRUN cd $SRC \\\n && $GET http://www.nasm.us/pub/nasm/releasebuilds/2.13.01/nasm-$NASM_VERSION.tar.bz2 \\\n && tar xjvf nasm-$NASM_VERSION.tar.bz2 \\\n && cd nasm-$NASM_VERSION \\\n && ./autogen.sh \\\n && PATH=\"$BIN:$PATH\" ./configure --prefix=\"$SRC\" --bindir=\"$BIN\" \\\n && PATH=\"$BIN:$PATH\" make \\\n && make install\n#   freebidi\nRUN DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && $GET https://www.fribidi.org/download/fribidi-0.19.7.tar.bz2 \\\n && tar xvf fribidi-0.19.7.tar.bz2 \\\n && cd fribidi-0.19.7 \\\n && ./configure --prefix=\"$SRC\" \\\n && make \\\n && make install \\\n && make distclean \\\n && rm -rf ${DIR}\n#   freetype --without-harfbuzz\nRUN DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && $GET https://downloads.sourceforge.net/freetype/freetype-2.8.tar.bz2 \\\n && tar xvf freetype-2.8.tar.bz2 \\\n && cd freetype* \\\n && sed -ri \"s:.*(AUX_MODULES.*valid):\\1:\" modules.cfg \\\n && sed -r \"s:.*(#.*SUBPIXEL_RENDERING) .*:\\1:\" -i include/freetype/config/ftoption.h \\\n && ./configure --prefix=\"$SRC\" \\\n && make \\\n && make install \\\n && rm -rf ${DIR}\n#   fontconfig\n#  RUN DIR=$(mktemp -d) && cd ${DIR} && \\\n#    $GET https://www.freedesktop.org/software/fontconfig/release/fontconfig-2.12.4.tar.bz2 &&  \\\n#    tar xvf fontconfig-2.12.4.tar.bz2 &&  \\\n#    cd fontconfig* && \\\n#    rm -f src/fcobjshash.h && \\\n#    ./configure --prefix=\"$SRC\" --sysconfdir=/etc --localstatedir=/var \\\n#              --disable-docs       \\\n#              --docdir=/usr/share/doc/fontconfig-2.12.4 && \\\n#    make && \\\n#    make install && \\\n#    make distclean && \\\n#    rm -rf ${DIR}\n#   libass http://www.linuxfromscratch.org/blfs/view/svn/multimedia/libass.html\n#   https://github.com/libass/libass/releases/download/0.13.7/libass-0.13.7.tar.xz\nRUN DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && $GET https://github.com/libass/libass/releases/download/0.13.7/libass-$LIBASS_VERSION.tar.gz \\\n && tar xzvf libass-$LIBASS_VERSION.tar.gz \\\n && cd libass* \\\n && ./configure --prefix=\"$SRC\" --disable-require-system-font-provider \\\n && make \\\n && make install \\\n && rm -rf ${DIR}\n#   fdk-aac\nRUN DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -o fdk-aac.tar.gz https://codeload.github.com/mstorsjo/fdk-aac/legacy.tar.gz/master \\\n && tar xzvf fdk-aac.tar.gz \\\n && cd mstorsjo-fdk-aac* \\\n && autoreconf -fiv \\\n && ./configure --prefix=\"$SRC\" --disable-shared \\\n && make \\\n && make install \\\n && rm -rf ${DIR}\n#   x264\nRUN DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -Os -L ftp://ftp.videolan.org/pub/x264/snapshots/last_x264.tar.bz2 \\\n && tar xvf last_x264.tar.bz2 \\\n && cd x264* \\\n && ./configure --prefix=\"$SRC\" --bindir=\"$BIN\" --enable-static \\\n && make \\\n && make install \\\n && make distclean \\\n && rm -rf ${DIR}\n#   x265 https://bitbucket.org/multicoreware/x265/downloads/x265_2.5.tar.gz\nRUN DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && $GET https://bitbucket.org/multicoreware/x265/downloads/x265_2.5.tar.gz \\\n && tar xzvf x265_2.5.tar.gz \\\n && cd x265*/build/linux \\\n && PATH=\"$BIN:$PATH\" cmake -G \"Unix Makefiles\" -DCMAKE_INSTALL_PREFIX=\"$SRC\" -DENABLE_SHARED:bool=off ../../source \\\n && make \\\n && make install \\\n && rm -rf ${DIR}\n#   https://github.com/webmproject/libvpx/archive/v1.6.1.tar.gz\n#   curl -sL https://codeload.github.com/webmproject/libvpx/tar.gz/v${VPX_VERSION} && \\\nRUN DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && $GET https://github.com/webmproject/libvpx/archive/v1.6.1.tar.gz \\\n && tar xzvf v1.6.1.tar.gz \\\n && cd *1.6.1 \\\n && ./configure --prefix=\"$SRC\" --enable-vp8 --enable-vp9 --enable-pic --disable-debug --disable-examples --disable-docs --disable-install-bins --enable-shared \\\n && make \\\n && make install \\\n && make distclean \\\n && rm -rf ${DIR}\n#   snapshot http://ffmpeg.org/releases/ffmpeg-snapshot.tar.bz2\nRUN DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && $GET http://ffmpeg.org/releases/ffmpeg-${FFMPEG_VERSION}.tar.bz2 \\\n && tar xjvf ffmpeg-${FFMPEG_VERSION}.tar.bz2 \\\n && cd ffmpeg* \\\n && ./configure --prefix=\"${SRC}\" --extra-cflags=\"-I${SRC}/include\" --pkg-config-flags=\"--static\" --extra-ldflags=\"-L${SRC}/lib\" --bindir=\"${SRC}/bin\" --disable-debug --disable-doc --disable-ffplay --enable-avresample --enable-gpl --enable-libass --enable-libfdk_aac --enable-libvpx --enable-libx264 --enable-libx265 --enable-nonfree --enable-postproc --enable-small --enable-version3 \\\n && make \\\n && make install \\\n && make distclean \\\n && hash -r \\\n && rm -rf ${DIR}\n#   cleanup\nRUN cd \\\n && echo \"removing ${BUILD_DEP}\" \\\n && apt-get purge -y ${BUILD_DEP} \\\n && apt-get autoremove -y \\\n && apt-get clean -y \\\n && rm -rf /var/lib/apt/lists \\\n && ldconfig \\\n && ffmpeg -buildconf\n","originalDockerfileUglifiedHash":"c29aae4396a40b17c43bb8708795a2d9","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/647cbdaae55decf4b15adf56ec9f2f5cccd10996.dockerfile"}