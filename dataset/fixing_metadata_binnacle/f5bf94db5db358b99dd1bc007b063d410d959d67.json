{"seed":1879800150,"processedDockerfileHash":"93d876316e916908f5b2d348138dbad6","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","have-a-healthcheck","have-a-user"],"processedDockerfile":"#  ###########################################################\n#   Dockerfile for ENCODE DCC atac-seq-pipeline\n#   Based on Ubuntu 16.04\n#  ###########################################################\n#   IMPORTANT!\n#   If you install python2/3 packages using pip/pip3\n#    and not sure about math library dependencies like BLAS and numpy,\n#    then install with --no-dependencies\n#   Set the base image to Ubuntu 16.04\n#  FROM ubuntu:16.04\nFROM ubuntu@sha256:e4a134999bea4abb4a27bc437e6118fdddfb172e1b9d683129b74d254af51675\n#   File Author / Maintainer\nMAINTAINER Jin Lee\n#   Update the repository sources list\n#   Install base packages: git, python2/3, java, R\nRUN apt-get update \\\n && apt-get install --no-install-recommends libncurses5-dev=6.4-2 libncursesw5-dev=6.4-2 libcurl4-openssl-dev=7.88.1-7ubuntu1 libfreetype6-dev=2.12.1+dfsg-4 zlib1g-dev=1:1.2.13.dfsg-1ubuntu4 python python-setuptools python-pip python3=3.11.2-1 python3-setuptools=66.1.1-1 python3-pip=23.0.1+dfsg-1 git=1:2.39.2-1ubuntu1 wget=1.21.3-1ubuntu1 unzip=6.0-27ubuntu1 ghostscript=10.0.0~dfsg1-0ubuntu1 pkg-config=1.8.1-1ubuntu2 libboost-dev=1.74.0.3ubuntu7 r-base-core=4.2.2.20221110-2build1 default-jre=2:1.17-74 apt-transport-https=2.6.0 tabix=1.16+ds-3 -y \\\n && rm -rf /var/lib/apt/lists/*\n#   Install Intel MKL for BLAS\nRUN wget https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS-2019.PUB \\\n && apt-key add GPG-PUB-KEY-INTEL-SW-PRODUCTS-2019.PUB \\\n && rm -rf GPG-PUB-KEY-INTEL-SW-PRODUCTS-2019.PUB \\\n && sh -c 'echo deb https://apt.repos.intel.com/mkl all main > /etc/apt/sources.list.d/intel-mkl.list' \\\n && apt-get update \\\n && apt-get install --no-install-recommends intel-mkl-64bit-2018.0-033 -y \\\n && rm -rf /var/lib/apt/lists/*\nENV LD_LIBRARY_PATH=\"${LD_LIBRARY_PATH}:/opt/intel/compilers_and_libraries_2018.0.128/linux/mkl/lib/intel64_lin\"\n#   Install basic python2/3 packages\nRUN pip install common==0.1.2 python-dateutil==2.8.2 cython==0.27.3 --no-cache-dir \\\n && pip3 install --no-cache-dir common python-dateutil cython==0.27.3\n#   Make directory for all softwares\nRUN mkdir /software\nWORKDIR /software\nENV PATH=\"/software:${PATH}\"\n#   Install numpy 1.11.3 (python2/3, linked with MKL)\nRUN git clone --branch v1.11.3 https://github.com/numpy/numpy \\\n && cd numpy \\\n && /bin/bash -c 'echo -e \"[mkl]\\nlibrary_dirs = /opt/intel/compilers_and_libraries_2018/linux/mkl/lib/intel64\\ninclude_dirs = /opt/intel/compilers_and_libraries_2018/linux/mkl/include\\nmkl_libs = mkl_rt\\nlapack_libs =\" > site.cfg' \\\n && python setup.py install \\\n && python3 setup.py install \\\n && cd ../ \\\n && rm -rf numpy*\n#   Install scipy 1.0.0 (python2/3)\nRUN git clone --branch v1.0.0 --single-branch https://github.com/scipy/scipy \\\n && cd scipy \\\n && python setup.py install \\\n && python3 setup.py install \\\n && cd ../ \\\n && rm -rf scipy*\n#   Install matplotlib 1.5.1 (python2/3)\nRUN git clone --branch v1.5.1 --single-branch https://github.com/matplotlib/matplotlib \\\n && cd matplotlib \\\n && python setup.py install \\\n && python3 setup.py install \\\n && cd ../ \\\n && rm -rf matplotlib*\n#   Install MACS2 2.1.1.20160309 (python2)\nRUN pip install macs2==2.1.1.20160309 --no-cache-dir --no-dependencies\n#   Install IDR 2.0.4.2 (python3)\nRUN git clone --branch 2.0.4.2 --single-branch https://github.com/kundajelab/idr \\\n && cd idr \\\n && python3 setup.py install \\\n && cd ../ \\\n && rm -rf idr*\n#   Install samtools 1.2\nRUN git clone --branch 1.2 --single-branch https://github.com/samtools/samtools.git \\\n && git clone --branch 1.2 --single-branch https://github.com/samtools/htslib.git \\\n && cd samtools \\\n && make \\\n && make install \\\n && cd ../ \\\n && rm -rf samtools* htslib*\n#   Install bedtools 2.26.0\nRUN git clone --branch v2.26.0 --single-branch https://github.com/arq5x/bedtools2.git \\\n && cd bedtools2 \\\n && make \\\n && make install \\\n && cd ../ \\\n && rm -rf bedtools2*\n#   Install Picard 2.10.6\nRUN wget https://github.com/broadinstitute/picard/releases/download/2.10.6/picard.jar \\\n && chmod +x picard.jar\n#   Install sambamba 0.6.6\nRUN wget https://github.com/lomereiter/sambamba/releases/download/v0.6.6/sambamba_v0.6.6_linux.tar.bz2 \\\n && tar -xvjf sambamba_v0.6.6_linux.tar.bz2 \\\n && mv sambamba_v0.6.6 sambamba \\\n && rm -rf sambamba_*\n#   Install R packages\nRUN echo \"r <- getOption('repos'); r['CRAN'] <- 'http://cran.r-project.org'; options(repos = r);\" > ~/.Rprofile \\\n && Rscript -e \"install.packages('snow')\" \\\n && Rscript -e \"install.packages('snowfall')\" \\\n && Rscript -e \"install.packages('bitops')\" \\\n && Rscript -e \"install.packages('caTools')\" \\\n && Rscript -e \"source('http://bioconductor.org/biocLite.R'); biocLite('Rsamtools')\"\n#   Install R package spp 1.13 (required for phantompeakqualtools)\nRUN wget https://github.com/hms-dbmi/spp/archive/1.13.tar.gz \\\n && Rscript -e \"install.packages('./1.13.tar.gz')\" \\\n && rm -f 1.13.tar.gz\n#   Install phantompeakqualtools 1.2\nRUN wget https://github.com/kundajelab/phantompeakqualtools/archive/1.2.tar.gz \\\n && tar -xvf 1.2.tar.gz \\\n && rm -f 1.2.tar.gz\nENV PATH=\"/software/phantompeakqualtools-1.2:${PATH}\"\n#   Install cutadapt 1.9.1\nRUN pip install cutadapt==1.9.1 --no-cache-dir --no-dependencies\n#   Install Bowtie2 2.2.6\nRUN wget https://github.com/BenLangmead/bowtie2/releases/download/v2.2.6/bowtie2-2.2.6-linux-x86_64.zip \\\n && unzip bowtie2-2.2.6-linux-x86_64.zip \\\n && mv bowtie2*/bowtie2* . \\\n && rm -rf bowtie2-2.2.6*\n#   Install pyfaidx (for building genome data)\nRUN pip install pyfaidx==0.4.7.1 --no-cache-dir\n#   Install some apt packages (liblzo2, libgsl2) for ATAQC\nRUN apt-get update \\\n && apt-get install --no-install-recommends liblzo2-dev=2.10-2build3 -y \\\n && rm -rf /var/lib/apt/lists/*\n#   Install python packages for ATAQC (pysam, pybedtools, metaseq, pandas, jinja2)\nRUN pip install pysam==0.8.2.1 pybedtools==0.6.9 pandas==0.21.1 scikit-learn==0.20 metaseq==0.5.6 jinja2==2.10 --no-cache-dir\n#   Install gsl 1.16\nRUN wget http://gnu.mirror.vexxhost.com/gsl/gsl-1.16.tar.gz \\\n && tar -zxvf gsl-1.16.tar.gz \\\n && cd gsl-1.16 \\\n && ./configure \\\n && make \\\n && make install \\\n && cd .. \\\n && rm -rf gsl-1.16 gsl-1.16.tar.gz\nENV LD_LIBRARY_PATH=\"${LD_LIBRARY_PATH}:/usr/local/lib\"\n#   Install preseq 2.0.3 for ATAQC (build from source)\nRUN git clone --branch v2.0.3 --single-branch --recursive https://github.com/smithlabcode/preseq preseq_2.0.3 \\\n && cd preseq_2.0.3 \\\n && make \\\n && cd ../ \\\n && mv preseq_2.0.3/preseq . \\\n && rm -rf preseq_2.0.3\n#   Install bgzip/tabix for Wash U browser track (hammock type)\n#  RUN apt-get update && apt-get install -y tabix && rm -rf /var/lib/apt/lists/*\n#   Install python jsondiff\nRUN pip install jsondiff==1.1.1 --no-cache-dir\n#   Install UCSC tools (v377)\nRUN git clone https://github.com/ENCODE-DCC/kentUtils_bin_v377\nENV PATH=\"${PATH}:/software/kentUtils_bin_v377/bin\"\nENV LD_LIBRARY_PATH=\"${LD_LIBRARY_PATH}:/software/kentUtils_bin_v377/lib\"\n#   Prevent conflict with locally installed python outside of singularity container\nENV PYTHONNOUSERSITE=\"True\"\n#   Get ENCODE atac-seq-pipeline container repository\n#   This COPY assumes the build context is the root of the atac-seq-pipeline repo\n#   and it gets whatever is checked out plus local modifications\n#   so the buildling command should:\n#   cd [GIT_REPO_DIR] && docker build -f docker_images/pipeline/Dockerfile .\nRUN mkdir -p atac-seq-pipeline/src\nCOPY src atac-seq-pipeline/src/\nCOPY atac.wdl atac-seq-pipeline/\nENV PATH=\"/software/atac-seq-pipeline:/software/atac-seq-pipeline/src:${PATH}\"\n#   make some temporary directories\nRUN for i in $( seq 0 9 ;); do mkdir -p /mnt/ext_$i ; done\n#  ENTRYPOINT [\"/bin/bash\",\"-c\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"# ###########################################################\n#  Dockerfile for ENCODE DCC atac-seq-pipeline\n#  Based on Ubuntu 16.04\n# ###########################################################\n#  IMPORTANT!\n#  If you install python2/3 packages using pip/pip3\n#   and not sure about math library dependencies like BLAS and numpy,\n#   then install with --no-dependencies\n#  Set the base image to Ubuntu 16.04\n# FROM ubuntu:16.04\nFROM ubuntu@sha256:e4a134999bea4abb4a27bc437e6118fdddfb172e1b9d683129b74d254af51675\n#  File Author / Maintainer\nMAINTAINER Jin Lee\n#  Update the repository sources list\n#  Install base packages: git, python2/3, java, R\nRUN apt-get update \\\n && apt-get install libncurses5-dev libncursesw5-dev libcurl4-openssl-dev libfreetype6-dev zlib1g-dev python python-setuptools python-pip python3 python3-setuptools python3-pip git wget unzip ghostscript pkg-config libboost-dev r-base-core default-jre apt-transport-https tabix -y \\\n && rm -rf /var/lib/apt/lists/*\n#  Install Intel MKL for BLAS\nRUN wget https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS-2019.PUB \\\n && apt-key add GPG-PUB-KEY-INTEL-SW-PRODUCTS-2019.PUB \\\n && rm -rf GPG-PUB-KEY-INTEL-SW-PRODUCTS-2019.PUB \\\n && sh -c 'echo deb https://apt.repos.intel.com/mkl all main > /etc/apt/sources.list.d/intel-mkl.list' \\\n && apt-get update \\\n && apt-get install intel-mkl-64bit-2018.0-033 -y \\\n && rm -rf /var/lib/apt/lists/*\nENV LD_LIBRARY_PATH=\"${LD_LIBRARY_PATH}:/opt/intel/compilers_and_libraries_2018.0.128/linux/mkl/lib/intel64_lin\"\n#  Install basic python2/3 packages\nRUN pip install common python-dateutil cython==0.27.3 --no-cache-dir \\\n && pip3 install --no-cache-dir common python-dateutil cython==0.27.3\n#  Make directory for all softwares\nRUN mkdir /software\nWORKDIR /software\nENV PATH=\"/software:${PATH}\"\n#  Install numpy 1.11.3 (python2/3, linked with MKL)\nRUN git clone --branch v1.11.3 https://github.com/numpy/numpy \\\n && cd numpy \\\n && /bin/bash -c 'echo -e \"[mkl]\\nlibrary_dirs = /opt/intel/compilers_and_libraries_2018/linux/mkl/lib/intel64\\ninclude_dirs = /opt/intel/compilers_and_libraries_2018/linux/mkl/include\\nmkl_libs = mkl_rt\\nlapack_libs =\" > site.cfg' \\\n && python setup.py install \\\n && python3 setup.py install \\\n && cd ../ \\\n && rm -rf numpy*\n#  Install scipy 1.0.0 (python2/3)\nRUN git clone --branch v1.0.0 --single-branch https://github.com/scipy/scipy \\\n && cd scipy \\\n && python setup.py install \\\n && python3 setup.py install \\\n && cd ../ \\\n && rm -rf scipy*\n#  Install matplotlib 1.5.1 (python2/3)\nRUN git clone --branch v1.5.1 --single-branch https://github.com/matplotlib/matplotlib \\\n && cd matplotlib \\\n && python setup.py install \\\n && python3 setup.py install \\\n && cd ../ \\\n && rm -rf matplotlib*\n#  Install MACS2 2.1.1.20160309 (python2)\nRUN pip install macs2==2.1.1.20160309 --no-cache-dir --no-dependencies\n#  Install IDR 2.0.4.2 (python3)\nRUN git clone --branch 2.0.4.2 --single-branch https://github.com/kundajelab/idr \\\n && cd idr \\\n && python3 setup.py install \\\n && cd ../ \\\n && rm -rf idr*\n#  Install samtools 1.2\nRUN git clone --branch 1.2 --single-branch https://github.com/samtools/samtools.git \\\n && git clone --branch 1.2 --single-branch https://github.com/samtools/htslib.git \\\n && cd samtools \\\n && make \\\n && make install \\\n && cd ../ \\\n && rm -rf samtools* htslib*\n#  Install bedtools 2.26.0\nRUN git clone --branch v2.26.0 --single-branch https://github.com/arq5x/bedtools2.git \\\n && cd bedtools2 \\\n && make \\\n && make install \\\n && cd ../ \\\n && rm -rf bedtools2*\n#  Install Picard 2.10.6\nRUN wget https://github.com/broadinstitute/picard/releases/download/2.10.6/picard.jar \\\n && chmod +x picard.jar\n#  Install sambamba 0.6.6\nRUN wget https://github.com/lomereiter/sambamba/releases/download/v0.6.6/sambamba_v0.6.6_linux.tar.bz2 \\\n && tar -xvjf sambamba_v0.6.6_linux.tar.bz2 \\\n && mv sambamba_v0.6.6 sambamba \\\n && rm -rf sambamba_*\n#  Install R packages\nRUN echo \"r <- getOption('repos'); r['CRAN'] <- 'http://cran.r-project.org'; options(repos = r);\" > ~/.Rprofile \\\n && Rscript -e \"install.packages('snow')\" \\\n && Rscript -e \"install.packages('snowfall')\" \\\n && Rscript -e \"install.packages('bitops')\" \\\n && Rscript -e \"install.packages('caTools')\" \\\n && Rscript -e \"source('http://bioconductor.org/biocLite.R'); biocLite('Rsamtools')\"\n#  Install R package spp 1.13 (required for phantompeakqualtools)\nRUN wget https://github.com/hms-dbmi/spp/archive/1.13.tar.gz \\\n && Rscript -e \"install.packages('./1.13.tar.gz')\" \\\n && rm -f 1.13.tar.gz\n#  Install phantompeakqualtools 1.2\nRUN wget https://github.com/kundajelab/phantompeakqualtools/archive/1.2.tar.gz \\\n && tar -xvf 1.2.tar.gz \\\n && rm -f 1.2.tar.gz\nENV PATH=\"/software/phantompeakqualtools-1.2:${PATH}\"\n#  Install cutadapt 1.9.1\nRUN pip install cutadapt==1.9.1 --no-cache-dir --no-dependencies\n#  Install Bowtie2 2.2.6\nRUN wget https://github.com/BenLangmead/bowtie2/releases/download/v2.2.6/bowtie2-2.2.6-linux-x86_64.zip \\\n && unzip bowtie2-2.2.6-linux-x86_64.zip \\\n && mv bowtie2*/bowtie2* . \\\n && rm -rf bowtie2-2.2.6*\n#  Install pyfaidx (for building genome data)\nRUN pip install pyfaidx==0.4.7.1 --no-cache-dir\n#  Install some apt packages (liblzo2, libgsl2) for ATAQC\nRUN apt-get update \\\n && apt-get install liblzo2-dev -y \\\n && rm -rf /var/lib/apt/lists/*\n#  Install python packages for ATAQC (pysam, pybedtools, metaseq, pandas, jinja2)\nRUN pip install pysam==0.8.2.1 pybedtools==0.6.9 pandas==0.21.1 scikit-learn==0.20 metaseq==0.5.6 jinja2==2.10 --no-cache-dir\n#  Install gsl 1.16\nRUN wget http://gnu.mirror.vexxhost.com/gsl/gsl-1.16.tar.gz \\\n && tar -zxvf gsl-1.16.tar.gz \\\n && cd gsl-1.16 \\\n && ./configure \\\n && make \\\n && make install \\\n && cd .. \\\n && rm -rf gsl-1.16 gsl-1.16.tar.gz\nENV LD_LIBRARY_PATH=\"${LD_LIBRARY_PATH}:/usr/local/lib\"\n#  Install preseq 2.0.3 for ATAQC (build from source)\nRUN git clone --branch v2.0.3 --single-branch --recursive https://github.com/smithlabcode/preseq preseq_2.0.3 \\\n && cd preseq_2.0.3 \\\n && make \\\n && cd ../ \\\n && mv preseq_2.0.3/preseq . \\\n && rm -rf preseq_2.0.3\n#  Install bgzip/tabix for Wash U browser track (hammock type)\n# RUN apt-get update && apt-get install -y tabix && rm -rf /var/lib/apt/lists/*\n#  Install python jsondiff\nRUN pip install jsondiff==1.1.1 --no-cache-dir\n#  Install UCSC tools (v377)\nRUN git clone https://github.com/ENCODE-DCC/kentUtils_bin_v377\nENV PATH=\"${PATH}:/software/kentUtils_bin_v377/bin\"\nENV LD_LIBRARY_PATH=\"${LD_LIBRARY_PATH}:/software/kentUtils_bin_v377/lib\"\n#  Prevent conflict with locally installed python outside of singularity container\nENV PYTHONNOUSERSITE=\"True\"\n#  Get ENCODE atac-seq-pipeline container repository\n#  This COPY assumes the build context is the root of the atac-seq-pipeline repo\n#  and it gets whatever is checked out plus local modifications\n#  so the buildling command should:\n#  cd [GIT_REPO_DIR] && docker build -f docker_images/pipeline/Dockerfile .\nRUN mkdir -p atac-seq-pipeline/src\nCOPY src atac-seq-pipeline/src/\nCOPY atac.wdl atac-seq-pipeline/\nENV PATH=\"/software/atac-seq-pipeline:/software/atac-seq-pipeline/src:${PATH}\"\n#  make some temporary directories\nRUN for i in $( seq 0 9 ;); do mkdir -p /mnt/ext_$i ; done\n# ENTRYPOINT [\"/bin/bash\",\"-c\"]\n","injectedSmells":[],"originalDockerfileHash":"51c35a2aff9988249017dd2f700b7956","successfullyInjectedSmells":[],"originalDockerfileUglified":"#  ###########################################################\n#   Dockerfile for ENCODE DCC atac-seq-pipeline\n#   Based on Ubuntu 16.04\n#  ###########################################################\n#   IMPORTANT!\n#   If you install python2/3 packages using pip/pip3\n#    and not sure about math library dependencies like BLAS and numpy,\n#    then install with --no-dependencies\n#   Set the base image to Ubuntu 16.04\n#  FROM ubuntu:16.04\nFROM ubuntu@sha256:e4a134999bea4abb4a27bc437e6118fdddfb172e1b9d683129b74d254af51675\n#   File Author / Maintainer\nMAINTAINER Jin Lee\n#   Update the repository sources list\n#   Install base packages: git, python2/3, java, R\nRUN apt-get update \\\n && apt-get install libncurses5-dev libncursesw5-dev libcurl4-openssl-dev libfreetype6-dev zlib1g-dev python python-setuptools python-pip python3 python3-setuptools python3-pip git wget unzip ghostscript pkg-config libboost-dev r-base-core default-jre apt-transport-https tabix -y \\\n && rm -rf /var/lib/apt/lists/*\n#   Install Intel MKL for BLAS\nRUN wget https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS-2019.PUB \\\n && apt-key add GPG-PUB-KEY-INTEL-SW-PRODUCTS-2019.PUB \\\n && rm -rf GPG-PUB-KEY-INTEL-SW-PRODUCTS-2019.PUB \\\n && sh -c 'echo deb https://apt.repos.intel.com/mkl all main > /etc/apt/sources.list.d/intel-mkl.list' \\\n && apt-get update \\\n && apt-get install intel-mkl-64bit-2018.0-033 -y \\\n && rm -rf /var/lib/apt/lists/*\nENV LD_LIBRARY_PATH=\"${LD_LIBRARY_PATH}:/opt/intel/compilers_and_libraries_2018.0.128/linux/mkl/lib/intel64_lin\"\n#   Install basic python2/3 packages\nRUN pip install common python-dateutil cython==0.27.3 --no-cache-dir \\\n && pip3 install --no-cache-dir common python-dateutil cython==0.27.3\n#   Make directory for all softwares\nRUN mkdir /software\nWORKDIR /software\nENV PATH=\"/software:${PATH}\"\n#   Install numpy 1.11.3 (python2/3, linked with MKL)\nRUN git clone --branch v1.11.3 https://github.com/numpy/numpy \\\n && cd numpy \\\n && /bin/bash -c 'echo -e \"[mkl]\\nlibrary_dirs = /opt/intel/compilers_and_libraries_2018/linux/mkl/lib/intel64\\ninclude_dirs = /opt/intel/compilers_and_libraries_2018/linux/mkl/include\\nmkl_libs = mkl_rt\\nlapack_libs =\" > site.cfg' \\\n && python setup.py install \\\n && python3 setup.py install \\\n && cd ../ \\\n && rm -rf numpy*\n#   Install scipy 1.0.0 (python2/3)\nRUN git clone --branch v1.0.0 --single-branch https://github.com/scipy/scipy \\\n && cd scipy \\\n && python setup.py install \\\n && python3 setup.py install \\\n && cd ../ \\\n && rm -rf scipy*\n#   Install matplotlib 1.5.1 (python2/3)\nRUN git clone --branch v1.5.1 --single-branch https://github.com/matplotlib/matplotlib \\\n && cd matplotlib \\\n && python setup.py install \\\n && python3 setup.py install \\\n && cd ../ \\\n && rm -rf matplotlib*\n#   Install MACS2 2.1.1.20160309 (python2)\nRUN pip install macs2==2.1.1.20160309 --no-cache-dir --no-dependencies\n#   Install IDR 2.0.4.2 (python3)\nRUN git clone --branch 2.0.4.2 --single-branch https://github.com/kundajelab/idr \\\n && cd idr \\\n && python3 setup.py install \\\n && cd ../ \\\n && rm -rf idr*\n#   Install samtools 1.2\nRUN git clone --branch 1.2 --single-branch https://github.com/samtools/samtools.git \\\n && git clone --branch 1.2 --single-branch https://github.com/samtools/htslib.git \\\n && cd samtools \\\n && make \\\n && make install \\\n && cd ../ \\\n && rm -rf samtools* htslib*\n#   Install bedtools 2.26.0\nRUN git clone --branch v2.26.0 --single-branch https://github.com/arq5x/bedtools2.git \\\n && cd bedtools2 \\\n && make \\\n && make install \\\n && cd ../ \\\n && rm -rf bedtools2*\n#   Install Picard 2.10.6\nRUN wget https://github.com/broadinstitute/picard/releases/download/2.10.6/picard.jar \\\n && chmod +x picard.jar\n#   Install sambamba 0.6.6\nRUN wget https://github.com/lomereiter/sambamba/releases/download/v0.6.6/sambamba_v0.6.6_linux.tar.bz2 \\\n && tar -xvjf sambamba_v0.6.6_linux.tar.bz2 \\\n && mv sambamba_v0.6.6 sambamba \\\n && rm -rf sambamba_*\n#   Install R packages\nRUN echo \"r <- getOption('repos'); r['CRAN'] <- 'http://cran.r-project.org'; options(repos = r);\" > ~/.Rprofile \\\n && Rscript -e \"install.packages('snow')\" \\\n && Rscript -e \"install.packages('snowfall')\" \\\n && Rscript -e \"install.packages('bitops')\" \\\n && Rscript -e \"install.packages('caTools')\" \\\n && Rscript -e \"source('http://bioconductor.org/biocLite.R'); biocLite('Rsamtools')\"\n#   Install R package spp 1.13 (required for phantompeakqualtools)\nRUN wget https://github.com/hms-dbmi/spp/archive/1.13.tar.gz \\\n && Rscript -e \"install.packages('./1.13.tar.gz')\" \\\n && rm -f 1.13.tar.gz\n#   Install phantompeakqualtools 1.2\nRUN wget https://github.com/kundajelab/phantompeakqualtools/archive/1.2.tar.gz \\\n && tar -xvf 1.2.tar.gz \\\n && rm -f 1.2.tar.gz\nENV PATH=\"/software/phantompeakqualtools-1.2:${PATH}\"\n#   Install cutadapt 1.9.1\nRUN pip install cutadapt==1.9.1 --no-cache-dir --no-dependencies\n#   Install Bowtie2 2.2.6\nRUN wget https://github.com/BenLangmead/bowtie2/releases/download/v2.2.6/bowtie2-2.2.6-linux-x86_64.zip \\\n && unzip bowtie2-2.2.6-linux-x86_64.zip \\\n && mv bowtie2*/bowtie2* . \\\n && rm -rf bowtie2-2.2.6*\n#   Install pyfaidx (for building genome data)\nRUN pip install pyfaidx==0.4.7.1 --no-cache-dir\n#   Install some apt packages (liblzo2, libgsl2) for ATAQC\nRUN apt-get update \\\n && apt-get install liblzo2-dev -y \\\n && rm -rf /var/lib/apt/lists/*\n#   Install python packages for ATAQC (pysam, pybedtools, metaseq, pandas, jinja2)\nRUN pip install pysam==0.8.2.1 pybedtools==0.6.9 pandas==0.21.1 scikit-learn==0.20 metaseq==0.5.6 jinja2==2.10 --no-cache-dir\n#   Install gsl 1.16\nRUN wget http://gnu.mirror.vexxhost.com/gsl/gsl-1.16.tar.gz \\\n && tar -zxvf gsl-1.16.tar.gz \\\n && cd gsl-1.16 \\\n && ./configure \\\n && make \\\n && make install \\\n && cd .. \\\n && rm -rf gsl-1.16 gsl-1.16.tar.gz\nENV LD_LIBRARY_PATH=\"${LD_LIBRARY_PATH}:/usr/local/lib\"\n#   Install preseq 2.0.3 for ATAQC (build from source)\nRUN git clone --branch v2.0.3 --single-branch --recursive https://github.com/smithlabcode/preseq preseq_2.0.3 \\\n && cd preseq_2.0.3 \\\n && make \\\n && cd ../ \\\n && mv preseq_2.0.3/preseq . \\\n && rm -rf preseq_2.0.3\n#   Install bgzip/tabix for Wash U browser track (hammock type)\n#  RUN apt-get update && apt-get install -y tabix && rm -rf /var/lib/apt/lists/*\n#   Install python jsondiff\nRUN pip install jsondiff==1.1.1 --no-cache-dir\n#   Install UCSC tools (v377)\nRUN git clone https://github.com/ENCODE-DCC/kentUtils_bin_v377\nENV PATH=\"${PATH}:/software/kentUtils_bin_v377/bin\"\nENV LD_LIBRARY_PATH=\"${LD_LIBRARY_PATH}:/software/kentUtils_bin_v377/lib\"\n#   Prevent conflict with locally installed python outside of singularity container\nENV PYTHONNOUSERSITE=\"True\"\n#   Get ENCODE atac-seq-pipeline container repository\n#   This COPY assumes the build context is the root of the atac-seq-pipeline repo\n#   and it gets whatever is checked out plus local modifications\n#   so the buildling command should:\n#   cd [GIT_REPO_DIR] && docker build -f docker_images/pipeline/Dockerfile .\nRUN mkdir -p atac-seq-pipeline/src\nCOPY src atac-seq-pipeline/src/\nCOPY atac.wdl atac-seq-pipeline/\nENV PATH=\"/software/atac-seq-pipeline:/software/atac-seq-pipeline/src:${PATH}\"\n#   make some temporary directories\nRUN for i in $( seq 0 9 ;); do mkdir -p /mnt/ext_$i ; done\n#  ENTRYPOINT [\"/bin/bash\",\"-c\"]\n","originalDockerfileUglifiedHash":"ba01cf441ac323e8173619e9aae7b506","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/f5bf94db5db358b99dd1bc007b063d410d959d67.dockerfile"}