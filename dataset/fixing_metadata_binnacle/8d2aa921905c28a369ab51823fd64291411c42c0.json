{"seed":1382018556,"processedDockerfileHash":"1ee3016bd886d1bb25ddfe1a9f620207","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","use-copy-instead-of-add","have-a-healthcheck"],"processedDockerfile":"FROM ubuntu:16.04\n#   Install base packages that would be needed for any builder or runner\nRUN DEBIAN_FRONTEND=noninteractive apt-get update \\\n && apt-get install --no-install-recommends software-properties-common=0.96.20.10 -y \\\n && add-apt-repository -y ppa:george-edison55/cmake-3.x \\\n && apt-get update \\\n && apt-get install --no-install-recommends autoconf=2.69-9 automake=1:1.15-4ubuntu1 build-essential=12.1ubuntu2 cmake=3.5.1-1ubuntu3 curl=7.47.0-1ubuntu2.19 fontconfig=2.11.94-0ubuntu1.1 fonts-wqy-microhei=0.2.0-beta-2 gcc-4.8=4.8.5-4ubuntu2 gcc-4.8-multilib=4.8.5-4ubuntu2 g++-4.8=4.8.5-4ubuntu2 g++-4.8-multilib=4.8.5-4ubuntu2 gfortran=4:5.3.1-1ubuntu1 git-core=1:2.7.4-0ubuntu1.10 libatlas-base-dev=3.10.2-9 libblas-dev=3.6.0-2ubuntu2 libfreetype6-dev=2.6.1-0.1ubuntu2.5 libgdal-dev=1.11.3+dfsg-3build2 libjasper-dev=1.900.1-debian1-2.4ubuntu1.3 libjpeg-dev=8c-2ubuntu8 libjpeg8-dev=8c-2ubuntu8 liblapack-dev=3.6.0-2ubuntu2 libmagickwand-dev=8:6.8.9.9-7ubuntu5.16 libopenblas-dev=0.2.18-1ubuntu1 libpng-dev libssl-dev=1.0.2g-1ubuntu4.20 libtbb-dev=4.4~20151115-0ubuntu3 libtiff-dev libx11-dev=2:1.6.3-1ubuntu2.2 pandoc=1.16.0.2~dfsg-1 pkg-config=0.29.1-0ubuntu1 unzip=6.0-20ubuntu1.1 texlive=2015.20160320-1ubuntu0.1 wget=1.17.1-1ubuntu1.5 zip=3.0-11 -y \\\n && rm -rf /var/lib/apt/lists/*\n#   Set options that should be defined everywhere\nENV JAVA_TOOL_OPTIONS=\"-Dfile.encoding=UTF8\"\nENV LANG=\"C.UTF-8\"\nRUN adduser --disabled-password --gecos \"\" --uid 1001 algo\n#   --------\n#   Install gpu-driver\nCOPY libraries/gpu-driver/install.sh /opt/algorithmia/setup/gpu-driver/install.sh\nRUN /opt/algorithmia/setup/gpu-driver/install.sh \\\n && rm -rf /var/lib/apt/lists/*\nENV CUDA_ARCH=\"3.7\"\nENV LD_LIBRARY_PATH=\"/usr/local/cuda/lib64:$LD_LIBRARY_PATH\"\nENV PATH=\"/usr/local/cuda/bin:$PATH\"\n#   --------\n#   Install python2\nCOPY libraries/python2/install.sh /opt/algorithmia/setup/python2/install.sh\nRUN /opt/algorithmia/setup/python2/install.sh \\\n && rm -rf /var/lib/apt/lists/*\nENV PATH=\"/opt/anaconda2/bin:$PATH\"\nENV PYTHON_LIB_PATH=\"/opt/anaconda2/lib\"\nENV PYTHON_VERSION=\"python2.7\"\n#   --------\n#   Install caffe\nCOPY libraries/caffe/caffe-ld-so.conf /opt/algorithmia/setup/caffe/caffe-ld-so.conf\nCOPY libraries/caffe/install-deps.sh /opt/algorithmia/setup/caffe/install-deps.sh\nRUN /opt/algorithmia/setup/caffe/install-deps.sh \\\n && rm -rf /var/lib/apt/lists/*\nCOPY libraries/caffe/install-system.sh /opt/algorithmia/setup/caffe/install-system.sh\nRUN /opt/algorithmia/setup/caffe/install-system.sh \\\n && rm -rf /var/lib/apt/lists/*\nCOPY libraries/caffe/install.sh /opt/algorithmia/setup/caffe/install.sh\nRUN /opt/algorithmia/setup/caffe/install.sh \\\n && rm -rf /var/lib/apt/lists/*\nENV PYTHONPATH=\"/opt/caffe/python:$PYTHONPATH\"\n#   --------\n#   Install pycuda\nCOPY libraries/pycuda/install.sh /opt/algorithmia/setup/pycuda/install.sh\nRUN /opt/algorithmia/setup/pycuda/install.sh \\\n && rm -rf /var/lib/apt/lists/*\n#   --------\n#   Install torch\nCOPY libraries/torch/install-torch.sh /opt/algorithmia/setup/torch/install-torch.sh\nRUN /opt/algorithmia/setup/torch/install-torch.sh \\\n && rm -rf /var/lib/apt/lists/*\nCOPY libraries/torch/install-rocks.sh /opt/algorithmia/setup/torch/install-rocks.sh\nRUN /opt/algorithmia/setup/torch/install-rocks.sh \\\n && rm -rf /var/lib/apt/lists/*\nCOPY libraries/torch/install-cuda-rocks.sh /opt/algorithmia/setup/torch/install-cuda-rocks.sh\nRUN /opt/algorithmia/setup/torch/install-cuda-rocks.sh \\\n && rm -rf /var/lib/apt/lists/*\nENV PATH=\"/opt/torch/install/bin:$PATH\"\n#   --------\n#   Install xgboost\nCOPY libraries/xgboost/install.sh /opt/algorithmia/setup/xgboost/install.sh\nRUN /opt/algorithmia/setup/xgboost/install.sh \\\n && rm -rf /var/lib/apt/lists/*\n#   --------\n#   Install open-mpi\nCOPY libraries/open-mpi/install.sh /opt/algorithmia/setup/open-mpi/install.sh\nRUN /opt/algorithmia/setup/open-mpi/install.sh \\\n && rm -rf /var/lib/apt/lists/*\nENV PATH=\"/usr/local/mpi/bin:$PATH\"\n#   --------\n#   Install opencv-python2\nCOPY libraries/opencv-python2/install.sh /opt/algorithmia/setup/opencv-python2/install.sh\nRUN /opt/algorithmia/setup/opencv-python2/install.sh \\\n && rm -rf /var/lib/apt/lists/*\n#   --------\n#   Install ffmpeg\nCOPY libraries/ffmpeg/install.sh /opt/algorithmia/setup/ffmpeg/install.sh\nRUN /opt/algorithmia/setup/ffmpeg/install.sh \\\n && rm -rf /var/lib/apt/lists/*\n#   --------\n#   Add langserver binary and algorithm directory\nRUN mkdir /opt/algorithm \\\n && chown algo /opt/algorithm\nCOPY bin/init-langserver /bin/\nCOPY target/release/langserver /bin/\nUSER algo\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:16.04\n#  Install base packages that would be needed for any builder or runner\nRUN DEBIAN_FRONTEND=noninteractive apt-get update \\\n && apt-get install software-properties-common -y \\\n && add-apt-repository -y ppa:george-edison55/cmake-3.x \\\n && apt-get update \\\n && apt-get install autoconf automake build-essential cmake curl fontconfig fonts-wqy-microhei gcc-4.8 gcc-4.8-multilib g++-4.8 g++-4.8-multilib gfortran git-core libatlas-base-dev libblas-dev libfreetype6-dev libgdal-dev libjasper-dev libjpeg-dev libjpeg8-dev liblapack-dev libmagickwand-dev libopenblas-dev libpng-dev libssl-dev libtbb-dev libtiff-dev libx11-dev pandoc pkg-config unzip texlive wget zip -y \\\n && rm -rf /var/lib/apt/lists/*\n#  Set options that should be defined everywhere\nENV JAVA_TOOL_OPTIONS=\"-Dfile.encoding=UTF8\"\nENV LANG=\"C.UTF-8\"\nRUN adduser --disabled-password --gecos \"\" --uid 1001 algo\n#  --------\n#  Install gpu-driver\nADD libraries/gpu-driver/install.sh /opt/algorithmia/setup/gpu-driver/install.sh\nRUN /opt/algorithmia/setup/gpu-driver/install.sh \\\n && rm -rf /var/lib/apt/lists/*\nENV CUDA_ARCH=\"3.7\"\nENV LD_LIBRARY_PATH=\"/usr/local/cuda/lib64:$LD_LIBRARY_PATH\"\nENV PATH=\"/usr/local/cuda/bin:$PATH\"\n#  --------\n#  Install python2\nADD libraries/python2/install.sh /opt/algorithmia/setup/python2/install.sh\nRUN /opt/algorithmia/setup/python2/install.sh \\\n && rm -rf /var/lib/apt/lists/*\nENV PATH=\"/opt/anaconda2/bin:$PATH\"\nENV PYTHON_LIB_PATH=\"/opt/anaconda2/lib\"\nENV PYTHON_VERSION=\"python2.7\"\n#  --------\n#  Install caffe\nADD libraries/caffe/caffe-ld-so.conf /opt/algorithmia/setup/caffe/caffe-ld-so.conf\nADD libraries/caffe/install-deps.sh /opt/algorithmia/setup/caffe/install-deps.sh\nRUN /opt/algorithmia/setup/caffe/install-deps.sh \\\n && rm -rf /var/lib/apt/lists/*\nADD libraries/caffe/install-system.sh /opt/algorithmia/setup/caffe/install-system.sh\nRUN /opt/algorithmia/setup/caffe/install-system.sh \\\n && rm -rf /var/lib/apt/lists/*\nADD libraries/caffe/install.sh /opt/algorithmia/setup/caffe/install.sh\nRUN /opt/algorithmia/setup/caffe/install.sh \\\n && rm -rf /var/lib/apt/lists/*\nENV PYTHONPATH=\"/opt/caffe/python:$PYTHONPATH\"\n#  --------\n#  Install pycuda\nADD libraries/pycuda/install.sh /opt/algorithmia/setup/pycuda/install.sh\nRUN /opt/algorithmia/setup/pycuda/install.sh \\\n && rm -rf /var/lib/apt/lists/*\n#  --------\n#  Install torch\nADD libraries/torch/install-torch.sh /opt/algorithmia/setup/torch/install-torch.sh\nRUN /opt/algorithmia/setup/torch/install-torch.sh \\\n && rm -rf /var/lib/apt/lists/*\nADD libraries/torch/install-rocks.sh /opt/algorithmia/setup/torch/install-rocks.sh\nRUN /opt/algorithmia/setup/torch/install-rocks.sh \\\n && rm -rf /var/lib/apt/lists/*\nADD libraries/torch/install-cuda-rocks.sh /opt/algorithmia/setup/torch/install-cuda-rocks.sh\nRUN /opt/algorithmia/setup/torch/install-cuda-rocks.sh \\\n && rm -rf /var/lib/apt/lists/*\nENV PATH=\"/opt/torch/install/bin:$PATH\"\n#  --------\n#  Install xgboost\nADD libraries/xgboost/install.sh /opt/algorithmia/setup/xgboost/install.sh\nRUN /opt/algorithmia/setup/xgboost/install.sh \\\n && rm -rf /var/lib/apt/lists/*\n#  --------\n#  Install open-mpi\nADD libraries/open-mpi/install.sh /opt/algorithmia/setup/open-mpi/install.sh\nRUN /opt/algorithmia/setup/open-mpi/install.sh \\\n && rm -rf /var/lib/apt/lists/*\nENV PATH=\"/usr/local/mpi/bin:$PATH\"\n#  --------\n#  Install opencv-python2\nADD libraries/opencv-python2/install.sh /opt/algorithmia/setup/opencv-python2/install.sh\nRUN /opt/algorithmia/setup/opencv-python2/install.sh \\\n && rm -rf /var/lib/apt/lists/*\n#  --------\n#  Install ffmpeg\nADD libraries/ffmpeg/install.sh /opt/algorithmia/setup/ffmpeg/install.sh\nRUN /opt/algorithmia/setup/ffmpeg/install.sh \\\n && rm -rf /var/lib/apt/lists/*\n#  --------\n#  Add langserver binary and algorithm directory\nRUN mkdir /opt/algorithm \\\n && chown algo /opt/algorithm\nADD bin/init-langserver /bin/\nADD target/release/langserver /bin/\nUSER algo\n","injectedSmells":[],"originalDockerfileHash":"2ec16264855e0f23f393b0c1525fedfc","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:16.04\n#   Install base packages that would be needed for any builder or runner\nRUN DEBIAN_FRONTEND=noninteractive apt-get update \\\n && apt-get install software-properties-common -y \\\n && add-apt-repository -y ppa:george-edison55/cmake-3.x \\\n && apt-get update \\\n && apt-get install autoconf automake build-essential cmake curl fontconfig fonts-wqy-microhei gcc-4.8 gcc-4.8-multilib g++-4.8 g++-4.8-multilib gfortran git-core libatlas-base-dev libblas-dev libfreetype6-dev libgdal-dev libjasper-dev libjpeg-dev libjpeg8-dev liblapack-dev libmagickwand-dev libopenblas-dev libpng-dev libssl-dev libtbb-dev libtiff-dev libx11-dev pandoc pkg-config unzip texlive wget zip -y \\\n && rm -rf /var/lib/apt/lists/*\n#   Set options that should be defined everywhere\nENV JAVA_TOOL_OPTIONS=\"-Dfile.encoding=UTF8\"\nENV LANG=\"C.UTF-8\"\nRUN adduser --disabled-password --gecos \"\" --uid 1001 algo\n#   --------\n#   Install gpu-driver\nADD libraries/gpu-driver/install.sh /opt/algorithmia/setup/gpu-driver/install.sh\nRUN /opt/algorithmia/setup/gpu-driver/install.sh \\\n && rm -rf /var/lib/apt/lists/*\nENV CUDA_ARCH=\"3.7\"\nENV LD_LIBRARY_PATH=\"/usr/local/cuda/lib64:$LD_LIBRARY_PATH\"\nENV PATH=\"/usr/local/cuda/bin:$PATH\"\n#   --------\n#   Install python2\nADD libraries/python2/install.sh /opt/algorithmia/setup/python2/install.sh\nRUN /opt/algorithmia/setup/python2/install.sh \\\n && rm -rf /var/lib/apt/lists/*\nENV PATH=\"/opt/anaconda2/bin:$PATH\"\nENV PYTHON_LIB_PATH=\"/opt/anaconda2/lib\"\nENV PYTHON_VERSION=\"python2.7\"\n#   --------\n#   Install caffe\nADD libraries/caffe/caffe-ld-so.conf /opt/algorithmia/setup/caffe/caffe-ld-so.conf\nADD libraries/caffe/install-deps.sh /opt/algorithmia/setup/caffe/install-deps.sh\nRUN /opt/algorithmia/setup/caffe/install-deps.sh \\\n && rm -rf /var/lib/apt/lists/*\nADD libraries/caffe/install-system.sh /opt/algorithmia/setup/caffe/install-system.sh\nRUN /opt/algorithmia/setup/caffe/install-system.sh \\\n && rm -rf /var/lib/apt/lists/*\nADD libraries/caffe/install.sh /opt/algorithmia/setup/caffe/install.sh\nRUN /opt/algorithmia/setup/caffe/install.sh \\\n && rm -rf /var/lib/apt/lists/*\nENV PYTHONPATH=\"/opt/caffe/python:$PYTHONPATH\"\n#   --------\n#   Install pycuda\nADD libraries/pycuda/install.sh /opt/algorithmia/setup/pycuda/install.sh\nRUN /opt/algorithmia/setup/pycuda/install.sh \\\n && rm -rf /var/lib/apt/lists/*\n#   --------\n#   Install torch\nADD libraries/torch/install-torch.sh /opt/algorithmia/setup/torch/install-torch.sh\nRUN /opt/algorithmia/setup/torch/install-torch.sh \\\n && rm -rf /var/lib/apt/lists/*\nADD libraries/torch/install-rocks.sh /opt/algorithmia/setup/torch/install-rocks.sh\nRUN /opt/algorithmia/setup/torch/install-rocks.sh \\\n && rm -rf /var/lib/apt/lists/*\nADD libraries/torch/install-cuda-rocks.sh /opt/algorithmia/setup/torch/install-cuda-rocks.sh\nRUN /opt/algorithmia/setup/torch/install-cuda-rocks.sh \\\n && rm -rf /var/lib/apt/lists/*\nENV PATH=\"/opt/torch/install/bin:$PATH\"\n#   --------\n#   Install xgboost\nADD libraries/xgboost/install.sh /opt/algorithmia/setup/xgboost/install.sh\nRUN /opt/algorithmia/setup/xgboost/install.sh \\\n && rm -rf /var/lib/apt/lists/*\n#   --------\n#   Install open-mpi\nADD libraries/open-mpi/install.sh /opt/algorithmia/setup/open-mpi/install.sh\nRUN /opt/algorithmia/setup/open-mpi/install.sh \\\n && rm -rf /var/lib/apt/lists/*\nENV PATH=\"/usr/local/mpi/bin:$PATH\"\n#   --------\n#   Install opencv-python2\nADD libraries/opencv-python2/install.sh /opt/algorithmia/setup/opencv-python2/install.sh\nRUN /opt/algorithmia/setup/opencv-python2/install.sh \\\n && rm -rf /var/lib/apt/lists/*\n#   --------\n#   Install ffmpeg\nADD libraries/ffmpeg/install.sh /opt/algorithmia/setup/ffmpeg/install.sh\nRUN /opt/algorithmia/setup/ffmpeg/install.sh \\\n && rm -rf /var/lib/apt/lists/*\n#   --------\n#   Add langserver binary and algorithm directory\nRUN mkdir /opt/algorithm \\\n && chown algo /opt/algorithm\nADD bin/init-langserver /bin/\nADD target/release/langserver /bin/\nUSER algo\n","originalDockerfileUglifiedHash":"9cd56f15f4fe6ae62f50bf4a6c3f3d4e","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/8d2aa921905c28a369ab51823fd64291411c42c0.dockerfile"}