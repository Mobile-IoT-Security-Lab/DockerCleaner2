{"seed":1039707457,"processedDockerfileHash":"bbaa0943231017ef657cedf2472bd2b0","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-npm","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM buildpack-deps:jessie\n#   ############\n#   unprivileged\n#   ############\n#   explicitly set user/group IDs\nRUN groupadd -r unprivileged --gid=999 \\\n && useradd -m -r -g unprivileged --uid=999 unprivileged\n#   grab gosu for easy step-down from root\nENV GOSU_VERSION=\"1.7\"\nRUN set -x \\\n && apt-get update \\\n && apt-get install --no-install-recommends ca-certificates wget -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;)\" \\\n && wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;).asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 \\\n && gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \\\n && rm -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc \\\n && chmod +x /usr/local/bin/gosu \\\n && gosu nobody true\n#   ####\n#   NODE 6.2 at https://github.com/nodejs/docker-node/blob/dc9ceb77ad6d98258c825ee45aac219169bc3532/6.2/Dockerfile\n#   ####\n#   gpg keys listed at https://github.com/nodejs/node\nRUN set -ex \\\n && for key in 9554F04D7259F04124DE6B476D5A82AC7E37093B 94AE36675C464D64BAFA68DD7434390BDBE9B9C5 0034A06D9D9B0064CE8ADF6BF1747F4AD2306D93 FD3A5288F042B6850C66B31F09FE44734EB7990E 71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 DD8F2338BAE7501E3DD5AC78C273792F7D83545D B9AE9905FFD7803F25714661B63B535A4C206CA9 C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8; do gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\" ; done\nENV NPM_CONFIG_LOGLEVEL=\"info\"\nENV NODE_VERSION=\"6.2.2\"\nRUN curl -SLO \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.xz\" \\\n && curl -SLO \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\" \\\n && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc \\\n && grep \" node-v$NODE_VERSION-linux-x64.tar.xz$\" SHASUMS256.txt | sha256sum -c - \\\n && tar -xJf \"node-v$NODE_VERSION-linux-x64.tar.xz\" -C /usr/local --strip-components=1 \\\n && rm \"node-v$NODE_VERSION-linux-x64.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt\n#   ######\n#   PYTHON 3.5 at https://github.com/docker-library/python/blob/9383f7d4d2f96068e8957651aa3588fee8b48f71/3.5/Dockerfile\n#   ######\n#   remove several traces of debian python\n#  RUN apt-get purge -y python.*\n#   http://bugs.python.org/issue19846\n#   > At the moment, setting \"LANG=C\" on a Linux system *fundamentally breaks Python 3*, and that's not OK.\nENV LANG=\"C.UTF-8\"\n#   gpg: key F73C700D: public key \"Larry Hastings <larry@hastings.org>\" imported\nENV GPG_KEY=\"97FC712E4C024BBEA48A61ED3A5CA953F73C700D\"\nENV PYTHON_VERSION=\"3.5.1\"\n#   if this is called \"PIP_VERSION\", pip explodes with \"ValueError: invalid truth value '<VERSION>'\"\nENV PYTHON_PIP_VERSION=\"8.1.2\"\nRUN set -ex \\\n && curl -fSL \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\" -o python.tar.xz \\\n && curl -fSL \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\" -o python.tar.xz.asc \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$GPG_KEY\" \\\n && gpg --batch --verify python.tar.xz.asc python.tar.xz \\\n && rm -r \"$GNUPGHOME\" python.tar.xz.asc \\\n && mkdir -p /usr/src/python \\\n && tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \\\n && rm python.tar.xz \\\n && cd /usr/src/python \\\n && ./configure --enable-shared --enable-unicode=ucs4 \\\n && make -j$( nproc ;) \\\n && make install \\\n && ldconfig \\\n && pip3 install --no-cache-dir --upgrade --ignore-installed pip==$PYTHON_PIP_VERSION \\\n && find /usr/local -depth\n#  \t&& ln -s idle3 idle \\\n#  \t&& ln -s pydoc3 pydoc \\\n#  \t&& ln -s python3-config python-config\n#   ######\n#   DJANGO + PILLOW\n#   ######\n#   https://github.com/docker-library/django/blob/819c332058c3638ab8f4fa5b9f70518e9aaf6325/3.4/Dockerfile\n#   http://pillow.readthedocs.io/en/3.1.x/installation.html#building-on-linux\nRUN apt-get update \\\n && apt-get install --no-install-recommends gcc gettext mysql-client libmysqlclient-dev postgresql-client libpq-dev sqlite3 libtiff5-dev libjpeg62-turbo-dev zlib1g-dev libfreetype6-dev liblcms2-dev libwebp-dev tcl8.6-dev tk8.6-dev libxml2-dev libxslt-dev libffi-dev -y \\\n && rm -rf /var/lib/apt/lists/*\nRUN pip3 install --no-cache-dir --upgrade gunicorn psycopg2 mysqlclient virtualenv invoke Jinja2 Pillow\nRUN npm install bower@1.8.14 -g \\\n && npm install gulp@4.0.2 -g\n#   #######\n#   PROJECT\n#   #######\nENV PYTHONUNBUFFERED=\"1\"\nRUN mkdir -p /app /static /media /cache \\\n && chown -R unprivileged:unprivileged /media /cache\nWORKDIR /app\nCOPY requirements.txt /requirements.txt\nCOPY docker-entrypoint.sh /docker-entrypoint.sh\nRUN pip3 install --no-cache-dir -r /requirements.txt\nENV STATIC_ROOT=\"/static\"\nENV MEDIA_DIR=\"/media\"\nENV DATA_DIR=\"/cache\"\nCOPY . /app\nRUN /app/docker-prepare.sh\nEXPOSE 8000/tcp\nVOLUME [\"/static\", \"/media\", \"/cache\", \"/app\"]\nENTRYPOINT [\"/docker-entrypoint.sh\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM buildpack-deps:jessie\n#  ############\n#  unprivileged\n#  ############\n#  explicitly set user/group IDs\nRUN groupadd -r unprivileged --gid=999 \\\n && useradd -m -r -g unprivileged --uid=999 unprivileged\n#  grab gosu for easy step-down from root\nENV GOSU_VERSION=\"1.7\"\nRUN set -x \\\n && apt-get update \\\n && apt-get install --no-install-recommends ca-certificates wget -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;)\" \\\n && wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;).asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 \\\n && gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \\\n && rm -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc \\\n && chmod +x /usr/local/bin/gosu \\\n && gosu nobody true\n#  ####\n#  NODE 6.2 at https://github.com/nodejs/docker-node/blob/dc9ceb77ad6d98258c825ee45aac219169bc3532/6.2/Dockerfile\n#  ####\n#  gpg keys listed at https://github.com/nodejs/node\nRUN set -ex \\\n && for key in 9554F04D7259F04124DE6B476D5A82AC7E37093B 94AE36675C464D64BAFA68DD7434390BDBE9B9C5 0034A06D9D9B0064CE8ADF6BF1747F4AD2306D93 FD3A5288F042B6850C66B31F09FE44734EB7990E 71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 DD8F2338BAE7501E3DD5AC78C273792F7D83545D B9AE9905FFD7803F25714661B63B535A4C206CA9 C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8; do gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\" ; done\nENV NPM_CONFIG_LOGLEVEL=\"info\"\nENV NODE_VERSION=\"6.2.2\"\nRUN curl -SLO \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.xz\" \\\n && curl -SLO \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\" \\\n && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc \\\n && grep \" node-v$NODE_VERSION-linux-x64.tar.xz$\" SHASUMS256.txt | sha256sum -c - \\\n && tar -xJf \"node-v$NODE_VERSION-linux-x64.tar.xz\" -C /usr/local --strip-components=1 \\\n && rm \"node-v$NODE_VERSION-linux-x64.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt\n#  ######\n#  PYTHON 3.5 at https://github.com/docker-library/python/blob/9383f7d4d2f96068e8957651aa3588fee8b48f71/3.5/Dockerfile\n#  ######\n#  remove several traces of debian python\n# RUN apt-get purge -y python.*\n#  http://bugs.python.org/issue19846\n#  > At the moment, setting \"LANG=C\" on a Linux system *fundamentally breaks Python 3*, and that's not OK.\nENV LANG=\"C.UTF-8\"\n#  gpg: key F73C700D: public key \"Larry Hastings <larry@hastings.org>\" imported\nENV GPG_KEY=\"97FC712E4C024BBEA48A61ED3A5CA953F73C700D\"\nENV PYTHON_VERSION=\"3.5.1\"\n#  if this is called \"PIP_VERSION\", pip explodes with \"ValueError: invalid truth value '<VERSION>'\"\nENV PYTHON_PIP_VERSION=\"8.1.2\"\nRUN set -ex \\\n && curl -fSL \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\" -o python.tar.xz \\\n && curl -fSL \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\" -o python.tar.xz.asc \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$GPG_KEY\" \\\n && gpg --batch --verify python.tar.xz.asc python.tar.xz \\\n && rm -r \"$GNUPGHOME\" python.tar.xz.asc \\\n && mkdir -p /usr/src/python \\\n && tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \\\n && rm python.tar.xz \\\n && cd /usr/src/python \\\n && ./configure --enable-shared --enable-unicode=ucs4 \\\n && make -j$( nproc ;) \\\n && make install \\\n && ldconfig \\\n && pip3 install --no-cache-dir --upgrade --ignore-installed pip==$PYTHON_PIP_VERSION \\\n && find /usr/local -depth ( ( -type d -a -name test -o -name tests ) -o ( -type f -a -name '*.pyc' -o -name '*.pyo' ) ) -exec rm -rf '{}' + \\\n && rm -rf /usr/src/python ~/.cache \\\n && cd /usr/local/bin \\\n && ln -s easy_install-3.5 easy_install3 \\\n && ln -s python3 python\n# \t&& ln -s idle3 idle \\\n# \t&& ln -s pydoc3 pydoc \\\n# \t&& ln -s python3-config python-config\n#  ######\n#  DJANGO + PILLOW\n#  ######\n#  https://github.com/docker-library/django/blob/819c332058c3638ab8f4fa5b9f70518e9aaf6325/3.4/Dockerfile\n#  http://pillow.readthedocs.io/en/3.1.x/installation.html#building-on-linux\nRUN apt-get update \\\n && apt-get install --no-install-recommends gcc gettext mysql-client libmysqlclient-dev postgresql-client libpq-dev sqlite3 libtiff5-dev libjpeg62-turbo-dev zlib1g-dev libfreetype6-dev liblcms2-dev libwebp-dev tcl8.6-dev tk8.6-dev libxml2-dev libxslt-dev libffi-dev -y \\\n && rm -rf /var/lib/apt/lists/*\nRUN pip3 install --no-cache-dir --upgrade gunicorn psycopg2 mysqlclient virtualenv invoke Jinja2 Pillow\nRUN npm install bower -g \\\n && npm install gulp -g\n#  #######\n#  PROJECT\n#  #######\nENV PYTHONUNBUFFERED=\"1\"\nRUN mkdir -p /app /static /media /cache \\\n && chown -R unprivileged:unprivileged /media /cache\nWORKDIR /app\nCOPY requirements.txt /requirements.txt\nCOPY docker-entrypoint.sh /docker-entrypoint.sh\nRUN pip3 install --no-cache-dir -r /requirements.txt\nENV STATIC_ROOT=\"/static\"\nENV MEDIA_DIR=\"/media\"\nENV DATA_DIR=\"/cache\"\nCOPY . /app\nRUN /app/docker-prepare.sh\nEXPOSE 8000/tcp\nVOLUME [\"/static\", \"/media\", \"/cache\", \"/app\"]\nENTRYPOINT [\"/docker-entrypoint.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"da1b33f9739b4b48631da1bf3df8ad41","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM buildpack-deps:jessie\n#   ############\n#   unprivileged\n#   ############\n#   explicitly set user/group IDs\nRUN groupadd -r unprivileged --gid=999 \\\n && useradd -m -r -g unprivileged --uid=999 unprivileged\n#   grab gosu for easy step-down from root\nENV GOSU_VERSION=\"1.7\"\nRUN set -x \\\n && apt-get update \\\n && apt-get install --no-install-recommends ca-certificates wget -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;)\" \\\n && wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;).asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 \\\n && gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \\\n && rm -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc \\\n && chmod +x /usr/local/bin/gosu \\\n && gosu nobody true\n#   ####\n#   NODE 6.2 at https://github.com/nodejs/docker-node/blob/dc9ceb77ad6d98258c825ee45aac219169bc3532/6.2/Dockerfile\n#   ####\n#   gpg keys listed at https://github.com/nodejs/node\nRUN set -ex \\\n && for key in 9554F04D7259F04124DE6B476D5A82AC7E37093B 94AE36675C464D64BAFA68DD7434390BDBE9B9C5 0034A06D9D9B0064CE8ADF6BF1747F4AD2306D93 FD3A5288F042B6850C66B31F09FE44734EB7990E 71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 DD8F2338BAE7501E3DD5AC78C273792F7D83545D B9AE9905FFD7803F25714661B63B535A4C206CA9 C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8; do gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\" ; done\nENV NPM_CONFIG_LOGLEVEL=\"info\"\nENV NODE_VERSION=\"6.2.2\"\nRUN curl -SLO \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.xz\" \\\n && curl -SLO \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\" \\\n && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc \\\n && grep \" node-v$NODE_VERSION-linux-x64.tar.xz$\" SHASUMS256.txt | sha256sum -c - \\\n && tar -xJf \"node-v$NODE_VERSION-linux-x64.tar.xz\" -C /usr/local --strip-components=1 \\\n && rm \"node-v$NODE_VERSION-linux-x64.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt\n#   ######\n#   PYTHON 3.5 at https://github.com/docker-library/python/blob/9383f7d4d2f96068e8957651aa3588fee8b48f71/3.5/Dockerfile\n#   ######\n#   remove several traces of debian python\n#  RUN apt-get purge -y python.*\n#   http://bugs.python.org/issue19846\n#   > At the moment, setting \"LANG=C\" on a Linux system *fundamentally breaks Python 3*, and that's not OK.\nENV LANG=\"C.UTF-8\"\n#   gpg: key F73C700D: public key \"Larry Hastings <larry@hastings.org>\" imported\nENV GPG_KEY=\"97FC712E4C024BBEA48A61ED3A5CA953F73C700D\"\nENV PYTHON_VERSION=\"3.5.1\"\n#   if this is called \"PIP_VERSION\", pip explodes with \"ValueError: invalid truth value '<VERSION>'\"\nENV PYTHON_PIP_VERSION=\"8.1.2\"\nRUN set -ex \\\n && curl -fSL \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\" -o python.tar.xz \\\n && curl -fSL \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\" -o python.tar.xz.asc \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$GPG_KEY\" \\\n && gpg --batch --verify python.tar.xz.asc python.tar.xz \\\n && rm -r \"$GNUPGHOME\" python.tar.xz.asc \\\n && mkdir -p /usr/src/python \\\n && tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \\\n && rm python.tar.xz \\\n && cd /usr/src/python \\\n && ./configure --enable-shared --enable-unicode=ucs4 \\\n && make -j$( nproc ;) \\\n && make install \\\n && ldconfig \\\n && pip3 install --no-cache-dir --upgrade --ignore-installed pip==$PYTHON_PIP_VERSION \\\n && find /usr/local -depth\n#  \t&& ln -s idle3 idle \\\n#  \t&& ln -s pydoc3 pydoc \\\n#  \t&& ln -s python3-config python-config\n#   ######\n#   DJANGO + PILLOW\n#   ######\n#   https://github.com/docker-library/django/blob/819c332058c3638ab8f4fa5b9f70518e9aaf6325/3.4/Dockerfile\n#   http://pillow.readthedocs.io/en/3.1.x/installation.html#building-on-linux\nRUN apt-get update \\\n && apt-get install --no-install-recommends gcc gettext mysql-client libmysqlclient-dev postgresql-client libpq-dev sqlite3 libtiff5-dev libjpeg62-turbo-dev zlib1g-dev libfreetype6-dev liblcms2-dev libwebp-dev tcl8.6-dev tk8.6-dev libxml2-dev libxslt-dev libffi-dev -y \\\n && rm -rf /var/lib/apt/lists/*\nRUN pip3 install --no-cache-dir --upgrade gunicorn psycopg2 mysqlclient virtualenv invoke Jinja2 Pillow\nRUN npm install bower -g \\\n && npm install gulp -g\n#   #######\n#   PROJECT\n#   #######\nENV PYTHONUNBUFFERED=\"1\"\nRUN mkdir -p /app /static /media /cache \\\n && chown -R unprivileged:unprivileged /media /cache\nWORKDIR /app\nCOPY requirements.txt /requirements.txt\nCOPY docker-entrypoint.sh /docker-entrypoint.sh\nRUN pip3 install --no-cache-dir -r /requirements.txt\nENV STATIC_ROOT=\"/static\"\nENV MEDIA_DIR=\"/media\"\nENV DATA_DIR=\"/cache\"\nCOPY . /app\nRUN /app/docker-prepare.sh\nEXPOSE 8000/tcp\nVOLUME [\"/static\", \"/media\", \"/cache\", \"/app\"]\nENTRYPOINT [\"/docker-entrypoint.sh\"]\n","originalDockerfileUglifiedHash":"5e9e140ae152fb4421adaaecbbc69a4d","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/c0b2ecf7c0fcf056c40a0d15454480cfdba92fc9.dockerfile"}