{"seed":3576109921,"processedDockerfileHash":"17e73acc727e229748153711d7098c34","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","use-copy-instead-of-add","have-a-healthcheck"],"processedDockerfile":"#  #### START tomcat\n#   Copyright (c) 2012-2016 Codenvy, S.A.\n#   All rights reserved. This program and the accompanying materials\n#   are made available under the terms of the Eclipse Public License v1.0\n#   which accompanies this distribution, and is available at\n#   http://www.eclipse.org/legal/epl-v10.html\n#   Contributors:\n#   Codenvy, S.A. - initial API and implementation\nFROM debian:stretch\nEXPOSE 8080/tcp\nRUN apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends locales=2.24-11+deb9u4 sudo=1.8.19p1-2.1+deb9u3 procps=2:3.3.12-3+deb9u1 wget=1.18-5+deb9u3 unzip=6.0-21+deb9u2 gnupg=2.1.18-8~deb9u4 -y ) \\\n && (apt-get update ;apt-get install --no-install-recommends openjdk-8-jdk=8u332-ga-1~deb9u1 -y ) \\\n && echo \"%sudo ALL=(ALL) NOPASSWD: ALL\" >> /etc/sudoers \\\n && useradd -u 1000 -G users,sudo -d /home/user --shell /bin/bash -m user \\\n && apt-get -y autoremove \\\n && apt-get -y clean \\\n && rm -rf /var/lib/apt/lists/*\nUSER user\nLABEL che:server:8080:ref=\"tomcat8\" \\\n      che:server:8080:protocol=\"http\"\nENV TOMCAT_HOME=\"/home/user/tomcat\" \\\n    TOMCAT8_VERSION=\"8.0.33\"\nENV JAVA_HOME=\"/usr/lib/jvm/java-1.8.0-openjdk-amd64\"\nENV PATH=\"$JAVA_HOME/bin:$M2_HOME/bin:$PATH\"\nRUN mkdir $TOMCAT_HOME\nENV TERM=\"xterm\"\nRUN wget -qO- \"http://archive.apache.org/dist/tomcat/tomcat-8/v$TOMCAT8_VERSION/bin/apache-tomcat-$TOMCAT8_VERSION.tar.gz\" | tar -zx --strip-components=1 -C $TOMCAT_HOME \\\n && rm -rf $TOMCAT_HOME/webapps/*\nENV LANG=\"C.UTF-8\"\nRUN echo \"export JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-amd64\\nexport M2_HOME=/home/user/apache-maven-$MAVEN_VERSION\\nexport TOMCAT_HOME=$TOMCAT_HOME\\nexport PATH=$JAVA_HOME/bin:$M2_HOME/bin:$PATH\" >> /home/user/.bashrc \\\n && sudo localedef -i en_US -f UTF-8 en_US.UTF-8\nWORKDIR $TOMCAT_HOME\nCOPY conf/server.xml /home/user/tomcat/conf\n#  #### END tomcat\nCOPY zenboot.properties /etc/zenboot/zenboot.properties\nUSER root\nRUN echo \"deb http://ppa.launchpad.net/ansible/ansible/ubuntu trusty main\" > /etc/apt/sources.list.d/ansible.list \\\n && apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 93C4A3FD7BB9C367\nRUN sudo apt-get update \\\n && sudo apt-get install -y curl ansible openssh-client sshpass socat dnsutils jq less vim netcat-openbsd git \\\n && apt-get -y autoremove \\\n && apt-get -y clean \\\n && rm -rf /var/lib/apt/lists/*\nCOPY docker-provisioning/ansible.cfg /etc/ansible/ansible.cfg\n#  # Install docker in order to potentially use docker via socket at runtime\nRUN : \\\n && sudo apt-get install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common\nRUN curl -fsSL https://download.docker.com/linux/$( . /etc/os-release ;echo \"$ID\" ;)/gpg | sudo apt-key add -\nRUN apt-key fingerprint 0EBFCD88 | grep -q \"9DC8 5822 9FC7 DD38 854A E2D8 8D81 803C 0EBF CD88\"\nRUN add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/$( . /etc/os-release ;echo \"$ID\" ;) $( lsb_release -cs ;) stable\"\nRUN apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends docker-ce -y )\n#   Install kubectl\nRUN curl -o /usr/local/bin/kubectl -LO https://storage.googleapis.com/kubernetes-release/release/v1.8.0/bin/linux/amd64/kubectl \\\n && chmod +x /usr/local/bin/kubectl\n#   install Azure-cli\n#   workaround for https://github.com/Azure/azure-cli/issues/3863\nRUN wget ftp.de.debian.org/debian/pool/main/o/openssl/libssl1.0.0_1.0.2l-1~bpo8+1_amd64.deb \\\n && dpkg -i libssl1.0.0_1.0.2l-1~bpo8+1_amd64.deb\nRUN echo \"deb [arch=amd64] https://packages.microsoft.com/repos/azure-cli/ stretch main\" | sudo tee /etc/apt/sources.list.d/azure-cli.list\nRUN apt-key adv --keyserver packages.microsoft.com --recv-keys EB3E94ADBE1229CF\nRUN apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends azure-cli )\nUSER user\nARG VERSION\nRUN if [ -z \"$VERSION\" ] ; then echo \"the build argument 'VERSION' is mandatory\" ;exit 1 ; fi\nARG ZENBOOT_WAR=https://github.com/hybris/zenboot/releases/download/v$VERSION/zenboot.war\nARG ZENBOOT_CLI=https://github.com/hybris/zenboot/releases/download/v$VERSION/zenboot-linux-amd64\nRUN mkdir -p /home/user/zenboot\nCOPY $ZENBOOT_WAR $TOMCAT_HOME/webapps/zenboot.war\nCOPY $ZENBOOT_CLI /usr/local/bin/zenboot\nCOPY docker-provisioning/setenv.sh $TOMCAT_HOME/bin/setenv.sh\nRUN sudo chown user:user $TOMCAT_HOME/bin/setenv.sh\nRUN sudo chown user:user $TOMCAT_HOME/webapps/zenboot.war\nRUN sudo chmod +x /usr/local/bin/zenboot\nCMD bin/catalina.sh run 2>&1\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"# #### START tomcat\n#  Copyright (c) 2012-2016 Codenvy, S.A.\n#  All rights reserved. This program and the accompanying materials\n#  are made available under the terms of the Eclipse Public License v1.0\n#  which accompanies this distribution, and is available at\n#  http://www.eclipse.org/legal/epl-v10.html\n#  Contributors:\n#  Codenvy, S.A. - initial API and implementation\nFROM debian:stretch\nEXPOSE 8080/tcp\nRUN apt-get update \\\n && apt-get install locales sudo procps wget unzip gnupg -y \\\n && apt-get install openjdk-8-jdk -y \\\n && echo \"%sudo ALL=(ALL) NOPASSWD: ALL\" >> /etc/sudoers \\\n && useradd -u 1000 -G users,sudo -d /home/user --shell /bin/bash -m user \\\n && apt-get -y autoremove \\\n && apt-get -y clean \\\n && rm -rf /var/lib/apt/lists/*\nUSER user\nLABEL che:server:8080:ref=\"tomcat8\" \\\n      che:server:8080:protocol=\"http\"\nENV TOMCAT_HOME=\"/home/user/tomcat\" \\\n    TOMCAT8_VERSION=\"8.0.33\"\nENV JAVA_HOME=\"/usr/lib/jvm/java-1.8.0-openjdk-amd64\"\nENV PATH=\"$JAVA_HOME/bin:$M2_HOME/bin:$PATH\"\nRUN mkdir $TOMCAT_HOME\nENV TERM=\"xterm\"\nRUN wget -qO- \"http://archive.apache.org/dist/tomcat/tomcat-8/v$TOMCAT8_VERSION/bin/apache-tomcat-$TOMCAT8_VERSION.tar.gz\" | tar -zx --strip-components=1 -C $TOMCAT_HOME \\\n && rm -rf $TOMCAT_HOME/webapps/*\nENV LANG=\"C.UTF-8\"\nRUN echo \"export JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-amd64\\nexport M2_HOME=/home/user/apache-maven-$MAVEN_VERSION\\nexport TOMCAT_HOME=$TOMCAT_HOME\\nexport PATH=$JAVA_HOME/bin:$M2_HOME/bin:$PATH\" >> /home/user/.bashrc \\\n && sudo localedef -i en_US -f UTF-8 en_US.UTF-8\nWORKDIR $TOMCAT_HOME\nCOPY conf/server.xml /home/user/tomcat/conf\n# #### END tomcat\nADD zenboot.properties /etc/zenboot/zenboot.properties\nUSER root\nRUN echo \"deb http://ppa.launchpad.net/ansible/ansible/ubuntu trusty main\" > /etc/apt/sources.list.d/ansible.list \\\n && apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 93C4A3FD7BB9C367\nRUN sudo apt-get update \\\n && sudo apt-get install -y curl ansible openssh-client sshpass socat dnsutils jq less vim netcat-openbsd git \\\n && apt-get -y autoremove \\\n && apt-get -y clean \\\n && rm -rf /var/lib/apt/lists/*\nADD docker-provisioning/ansible.cfg /etc/ansible/ansible.cfg\n# # Install docker in order to potentially use docker via socket at runtime\nRUN apt-get update \\\n && sudo apt-get install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common\nRUN curl -fsSL https://download.docker.com/linux/$( . /etc/os-release ;echo \"$ID\" ;)/gpg | sudo apt-key add -\nRUN apt-key fingerprint 0EBFCD88 | grep -q \"9DC8 5822 9FC7 DD38 854A E2D8 8D81 803C 0EBF CD88\"\nRUN add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/$( . /etc/os-release ;echo \"$ID\" ;) $( lsb_release -cs ;) stable\"\nRUN apt-get update \\\n && apt-get install docker-ce -y\n#  Install kubectl\nRUN curl -o /usr/local/bin/kubectl -LO https://storage.googleapis.com/kubernetes-release/release/v1.8.0/bin/linux/amd64/kubectl \\\n && chmod +x /usr/local/bin/kubectl\n#  install Azure-cli\n#  workaround for https://github.com/Azure/azure-cli/issues/3863\nRUN wget ftp.de.debian.org/debian/pool/main/o/openssl/libssl1.0.0_1.0.2l-1~bpo8+1_amd64.deb \\\n && dpkg -i libssl1.0.0_1.0.2l-1~bpo8+1_amd64.deb\nRUN echo \"deb [arch=amd64] https://packages.microsoft.com/repos/azure-cli/ stretch main\" | sudo tee /etc/apt/sources.list.d/azure-cli.list\nRUN apt-key adv --keyserver packages.microsoft.com --recv-keys EB3E94ADBE1229CF\nRUN apt-get update \\\n && apt-get install azure-cli\nUSER user\nARG VERSION\nRUN if [ -z \"$VERSION\" ] ; then echo \"the build argument 'VERSION' is mandatory\" ;exit 1 ; fi\nARG ZENBOOT_WAR=https://github.com/hybris/zenboot/releases/download/v$VERSION/zenboot.war\nARG ZENBOOT_CLI=https://github.com/hybris/zenboot/releases/download/v$VERSION/zenboot-linux-amd64\nRUN mkdir -p /home/user/zenboot\nADD $ZENBOOT_WAR $TOMCAT_HOME/webapps/zenboot.war\nADD $ZENBOOT_CLI /usr/local/bin/zenboot\nADD docker-provisioning/setenv.sh $TOMCAT_HOME/bin/setenv.sh\nRUN sudo chown user:user $TOMCAT_HOME/bin/setenv.sh\nRUN sudo chown user:user $TOMCAT_HOME/webapps/zenboot.war\nRUN sudo chmod +x /usr/local/bin/zenboot\nCMD bin/catalina.sh run 2>&1\n","injectedSmells":[],"originalDockerfileHash":"acdebf6962e892dcd3cdf5e6d5271b61","successfullyInjectedSmells":[],"originalDockerfileUglified":"#  #### START tomcat\n#   Copyright (c) 2012-2016 Codenvy, S.A.\n#   All rights reserved. This program and the accompanying materials\n#   are made available under the terms of the Eclipse Public License v1.0\n#   which accompanies this distribution, and is available at\n#   http://www.eclipse.org/legal/epl-v10.html\n#   Contributors:\n#   Codenvy, S.A. - initial API and implementation\nFROM debian:stretch\nEXPOSE 8080/tcp\nRUN apt-get update \\\n && apt-get install locales sudo procps wget unzip gnupg -y \\\n && apt-get install openjdk-8-jdk -y \\\n && echo \"%sudo ALL=(ALL) NOPASSWD: ALL\" >> /etc/sudoers \\\n && useradd -u 1000 -G users,sudo -d /home/user --shell /bin/bash -m user \\\n && apt-get -y autoremove \\\n && apt-get -y clean \\\n && rm -rf /var/lib/apt/lists/*\nUSER user\nLABEL che:server:8080:ref=\"tomcat8\" \\\n      che:server:8080:protocol=\"http\"\nENV TOMCAT_HOME=\"/home/user/tomcat\" \\\n    TOMCAT8_VERSION=\"8.0.33\"\nENV JAVA_HOME=\"/usr/lib/jvm/java-1.8.0-openjdk-amd64\"\nENV PATH=\"$JAVA_HOME/bin:$M2_HOME/bin:$PATH\"\nRUN mkdir $TOMCAT_HOME\nENV TERM=\"xterm\"\nRUN wget -qO- \"http://archive.apache.org/dist/tomcat/tomcat-8/v$TOMCAT8_VERSION/bin/apache-tomcat-$TOMCAT8_VERSION.tar.gz\" | tar -zx --strip-components=1 -C $TOMCAT_HOME \\\n && rm -rf $TOMCAT_HOME/webapps/*\nENV LANG=\"C.UTF-8\"\nRUN echo \"export JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-amd64\\nexport M2_HOME=/home/user/apache-maven-$MAVEN_VERSION\\nexport TOMCAT_HOME=$TOMCAT_HOME\\nexport PATH=$JAVA_HOME/bin:$M2_HOME/bin:$PATH\" >> /home/user/.bashrc \\\n && sudo localedef -i en_US -f UTF-8 en_US.UTF-8\nWORKDIR $TOMCAT_HOME\nCOPY conf/server.xml /home/user/tomcat/conf\n#  #### END tomcat\nADD zenboot.properties /etc/zenboot/zenboot.properties\nUSER root\nRUN echo \"deb http://ppa.launchpad.net/ansible/ansible/ubuntu trusty main\" > /etc/apt/sources.list.d/ansible.list \\\n && apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 93C4A3FD7BB9C367\nRUN sudo apt-get update \\\n && sudo apt-get install -y curl ansible openssh-client sshpass socat dnsutils jq less vim netcat-openbsd git \\\n && apt-get -y autoremove \\\n && apt-get -y clean \\\n && rm -rf /var/lib/apt/lists/*\nADD docker-provisioning/ansible.cfg /etc/ansible/ansible.cfg\n#  # Install docker in order to potentially use docker via socket at runtime\nRUN apt-get update \\\n && sudo apt-get install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common\nRUN curl -fsSL https://download.docker.com/linux/$( . /etc/os-release ;echo \"$ID\" ;)/gpg | sudo apt-key add -\nRUN apt-key fingerprint 0EBFCD88 | grep -q \"9DC8 5822 9FC7 DD38 854A E2D8 8D81 803C 0EBF CD88\"\nRUN add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/$( . /etc/os-release ;echo \"$ID\" ;) $( lsb_release -cs ;) stable\"\nRUN apt-get update \\\n && apt-get install docker-ce -y\n#   Install kubectl\nRUN curl -o /usr/local/bin/kubectl -LO https://storage.googleapis.com/kubernetes-release/release/v1.8.0/bin/linux/amd64/kubectl \\\n && chmod +x /usr/local/bin/kubectl\n#   install Azure-cli\n#   workaround for https://github.com/Azure/azure-cli/issues/3863\nRUN wget ftp.de.debian.org/debian/pool/main/o/openssl/libssl1.0.0_1.0.2l-1~bpo8+1_amd64.deb \\\n && dpkg -i libssl1.0.0_1.0.2l-1~bpo8+1_amd64.deb\nRUN echo \"deb [arch=amd64] https://packages.microsoft.com/repos/azure-cli/ stretch main\" | sudo tee /etc/apt/sources.list.d/azure-cli.list\nRUN apt-key adv --keyserver packages.microsoft.com --recv-keys EB3E94ADBE1229CF\nRUN apt-get update \\\n && apt-get install azure-cli\nUSER user\nARG VERSION\nRUN if [ -z \"$VERSION\" ] ; then echo \"the build argument 'VERSION' is mandatory\" ;exit 1 ; fi\nARG ZENBOOT_WAR=https://github.com/hybris/zenboot/releases/download/v$VERSION/zenboot.war\nARG ZENBOOT_CLI=https://github.com/hybris/zenboot/releases/download/v$VERSION/zenboot-linux-amd64\nRUN mkdir -p /home/user/zenboot\nADD $ZENBOOT_WAR $TOMCAT_HOME/webapps/zenboot.war\nADD $ZENBOOT_CLI /usr/local/bin/zenboot\nADD docker-provisioning/setenv.sh $TOMCAT_HOME/bin/setenv.sh\nRUN sudo chown user:user $TOMCAT_HOME/bin/setenv.sh\nRUN sudo chown user:user $TOMCAT_HOME/webapps/zenboot.war\nRUN sudo chmod +x /usr/local/bin/zenboot\nCMD bin/catalina.sh run 2>&1\n","originalDockerfileUglifiedHash":"9bbbfbaae74ad38868522373fe010fcc","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/de2d70add7a27efc559c711d4f77503c46e502a9.dockerfile"}