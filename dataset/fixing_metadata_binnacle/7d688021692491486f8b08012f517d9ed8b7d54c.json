{"seed":3914123091,"processedDockerfileHash":"6c1ef7c1dc51d58d3e26fad2e17830e7","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Dockerfile for Conjure\n#\n#   Conjure requires Haskell, JRE, CMake, C++, etc.\n#   This is based on a merge of the two main parents\n#   https://github.com/freebroccolo/docker-haskell/blob/master/8.4/Dockerfile\n#   https://github.com/docker-library/openjdk/blob/master/11/jre/slim/Dockerfile\n#   with the other components on top of a slim Debian base image.\nFROM debian:sid-slim\nENV LANG=\"C.UTF-8\"\nENV WORK=\"/conjure\"\n#   create a JAVA_HOME that's cross-architecture-safe\nENV JAVA_HOME=\"/docker-java-home\"\nRUN ln -svT \"/usr/lib/jvm/java-11-openjdk-$( dpkg --print-architecture ;)\" $JAVA_HOME\nENV JAVA_VERSION=\"11\"\nRUN set -ex ; if [ ! -d /usr/share/man/man1 ] ; then mkdir -p /usr/share/man/man1 ; fi ; apt-get update ; apt-get install --no-install-recommends openjdk-11-jre-headless -y ; update-alternatives --get-selections | awk -v home=\"$( readlink -f \"$JAVA_HOME\" ;)\" 'index($3, home) == 1 { $2 = \"manual\"; print | \"update-alternatives --set-selections\" }' ; update-alternatives --query java | grep -q 'Status: manual'\nRUN apt-get install --no-install-recommends ca-certificates dirmngr git gnupg -y \\\n && echo 'deb http://downloads.haskell.org/debian stretch main' > /etc/apt/sources.list.d/ghc.list \\\n && apt-key adv --keyserver keyserver.ubuntu.com --recv-keys BA3CBA3FFE22B574 \\\n && apt-get update \\\n && apt-get install --no-install-recommends bison cabal-install-2.2 cmake flex g++ ghc-8.4.3 libsqlite3-dev libtinfo-dev make netbase wget zlib1g-dev -y\nWORKDIR $WORK\n#   default Haskell stack build usually fails on Docker, instead\n#   install a known-to-work binary build, see:\n#   https://github.com/commercialhaskell/stack/issues/3510#issuecomment-386266579\nRUN apt-get install --no-install-recommends curl -y \\\n && curl -fSL https://github.com/commercialhaskell/stack/releases/download/v1.7.1/stack-1.7.1-linux-x86_64.tar.gz -o stack.tar.gz \\\n && curl -fSL https://github.com/commercialhaskell/stack/releases/download/v1.7.1/stack-1.7.1-linux-x86_64.tar.gz.asc -o stack.tar.gz.asc \\\n && apt-get purge -y --auto-remove curl \\\n && export GNUPGHOME=$WORK \\\n && gpg --keyserver ha.pool.sks-keyservers.net --recv-keys C5705533DA4F78D8664B5DC0575159689BEFB442 \\\n && gpg --batch --verify stack.tar.gz.asc stack.tar.gz \\\n && tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \\\n && /usr/local/bin/stack config set system-ghc --global true \\\n && /usr/local/bin/stack config set install-ghc --global false \\\n && rm -f stack.tar.gz.asc stack.tar.gz\nENV PATH=\"/root/.cabal/bin:/root/.local/bin:/opt/cabal/2.2/bin:/opt/ghc/8.4.3/bin:$PATH\"\nENV BIN_DIR=\"/root/.local/bin\"\nRUN git clone https://github.com/conjure-cp/conjure.git\nWORKDIR $WORK/conjure\nRUN git pull\nRUN git checkout v2.3.0\nRUN make\nRUN make solvers\nRUN apt-get purge -y --auto-remove bison cabal-install-2.2 cmake dirmngr flex g++ ghc-8.4.3 git gnupg libsqlite3-dev libtinfo-dev make netbase wget zlib1g-dev \\\n && rm -rf /var/lib/apt/lists/*\nWORKDIR $WORK\nRUN rm -f pubring.kbx* trustdb.gpg /root/.wget-hsts \\\n && rm -rf crls.d private-keys-v1.d \\\n && rm -rf conjure \\\n && rm -rf /root/.stack \\\n && rm -rf /usr/local/bin/*\nENV PATH=\"/root/.local/bin:$PATH\"\n#   do a test-run of the pipeline, unless command is specified\nCOPY sudoku.essence sudoku.param $WORK/\nCMD conjure solve -ac --solutions-in-one-file --number-of-solutions=all --solver=minion --limit-time=90 sudoku.essence sudoku.param \\\n && mv conjure-output/model000001-sudoku.solutions /tmp/result.txt \\\n && cat /tmp/result.txt \\\n && rm /tmp/result.txt \\\n && rm -rf conjure-output\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Dockerfile for Conjure\n#\n#  Conjure requires Haskell, JRE, CMake, C++, etc.\n#  This is based on a merge of the two main parents\n#  https://github.com/freebroccolo/docker-haskell/blob/master/8.4/Dockerfile\n#  https://github.com/docker-library/openjdk/blob/master/11/jre/slim/Dockerfile\n#  with the other components on top of a slim Debian base image.\nFROM debian:sid-slim\nENV LANG=\"C.UTF-8\"\nENV WORK=\"/conjure\"\n#  create a JAVA_HOME that's cross-architecture-safe\nENV JAVA_HOME=\"/docker-java-home\"\nRUN ln -svT \"/usr/lib/jvm/java-11-openjdk-$( dpkg --print-architecture ;)\" $JAVA_HOME\nENV JAVA_VERSION=\"11\"\nRUN set -ex ; if [ ! -d /usr/share/man/man1 ] ; then mkdir -p /usr/share/man/man1 ; fi ; apt-get update ; apt-get install --no-install-recommends openjdk-11-jre-headless -y ; update-alternatives --get-selections | awk -v home=\"$( readlink -f \"$JAVA_HOME\" ;)\" 'index($3, home) == 1 { $2 = \"manual\"; print | \"update-alternatives --set-selections\" }' ; update-alternatives --query java | grep -q 'Status: manual'\nRUN apt-get install --no-install-recommends ca-certificates dirmngr git gnupg -y \\\n && echo 'deb http://downloads.haskell.org/debian stretch main' > /etc/apt/sources.list.d/ghc.list \\\n && apt-key adv --keyserver keyserver.ubuntu.com --recv-keys BA3CBA3FFE22B574 \\\n && apt-get update \\\n && apt-get install --no-install-recommends bison cabal-install-2.2 cmake flex g++ ghc-8.4.3 libsqlite3-dev libtinfo-dev make netbase wget zlib1g-dev -y\nWORKDIR $WORK\n#  default Haskell stack build usually fails on Docker, instead\n#  install a known-to-work binary build, see:\n#  https://github.com/commercialhaskell/stack/issues/3510#issuecomment-386266579\nRUN apt-get install --no-install-recommends curl -y \\\n && curl -fSL https://github.com/commercialhaskell/stack/releases/download/v1.7.1/stack-1.7.1-linux-x86_64.tar.gz -o stack.tar.gz \\\n && curl -fSL https://github.com/commercialhaskell/stack/releases/download/v1.7.1/stack-1.7.1-linux-x86_64.tar.gz.asc -o stack.tar.gz.asc \\\n && apt-get purge -y --auto-remove curl \\\n && export GNUPGHOME=$WORK \\\n && gpg --keyserver ha.pool.sks-keyservers.net --recv-keys C5705533DA4F78D8664B5DC0575159689BEFB442 \\\n && gpg --batch --verify stack.tar.gz.asc stack.tar.gz \\\n && tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \\\n && /usr/local/bin/stack config set system-ghc --global true \\\n && /usr/local/bin/stack config set install-ghc --global false \\\n && rm -f stack.tar.gz.asc stack.tar.gz\nENV PATH=\"/root/.cabal/bin:/root/.local/bin:/opt/cabal/2.2/bin:/opt/ghc/8.4.3/bin:$PATH\"\nENV BIN_DIR=\"/root/.local/bin\"\nRUN git clone https://github.com/conjure-cp/conjure.git\nWORKDIR $WORK/conjure\nRUN git pull\nRUN git checkout v2.3.0\nRUN make\nRUN make solvers\nRUN apt-get purge -y --auto-remove bison cabal-install-2.2 cmake dirmngr flex g++ ghc-8.4.3 git gnupg libsqlite3-dev libtinfo-dev make netbase wget zlib1g-dev \\\n && rm -rf /var/lib/apt/lists/*\nWORKDIR $WORK\nRUN rm -f pubring.kbx* trustdb.gpg /root/.wget-hsts \\\n && rm -rf crls.d private-keys-v1.d \\\n && rm -rf conjure \\\n && rm -rf /root/.stack \\\n && rm -rf /usr/local/bin/*\nENV PATH=\"/root/.local/bin:$PATH\"\n#  do a test-run of the pipeline, unless command is specified\nCOPY sudoku.essence sudoku.param $WORK/\nCMD conjure solve -ac --solutions-in-one-file --number-of-solutions=all --solver=minion --limit-time=90 sudoku.essence sudoku.param \\\n && mv conjure-output/model000001-sudoku.solutions /tmp/result.txt \\\n && cat /tmp/result.txt \\\n && rm /tmp/result.txt \\\n && rm -rf conjure-output\n","injectedSmells":[],"originalDockerfileHash":"d9c16d936bf97ea028fef71de94cc753","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Dockerfile for Conjure\n#\n#   Conjure requires Haskell, JRE, CMake, C++, etc.\n#   This is based on a merge of the two main parents\n#   https://github.com/freebroccolo/docker-haskell/blob/master/8.4/Dockerfile\n#   https://github.com/docker-library/openjdk/blob/master/11/jre/slim/Dockerfile\n#   with the other components on top of a slim Debian base image.\nFROM debian:sid-slim\nENV LANG=\"C.UTF-8\"\nENV WORK=\"/conjure\"\n#   create a JAVA_HOME that's cross-architecture-safe\nENV JAVA_HOME=\"/docker-java-home\"\nRUN ln -svT \"/usr/lib/jvm/java-11-openjdk-$( dpkg --print-architecture ;)\" $JAVA_HOME\nENV JAVA_VERSION=\"11\"\nRUN set -ex ; if [ ! -d /usr/share/man/man1 ] ; then mkdir -p /usr/share/man/man1 ; fi ; apt-get update ; apt-get install --no-install-recommends openjdk-11-jre-headless -y ; update-alternatives --get-selections | awk -v home=\"$( readlink -f \"$JAVA_HOME\" ;)\" 'index($3, home) == 1 { $2 = \"manual\"; print | \"update-alternatives --set-selections\" }' ; update-alternatives --query java | grep -q 'Status: manual'\nRUN apt-get install --no-install-recommends ca-certificates dirmngr git gnupg -y \\\n && echo 'deb http://downloads.haskell.org/debian stretch main' > /etc/apt/sources.list.d/ghc.list \\\n && apt-key adv --keyserver keyserver.ubuntu.com --recv-keys BA3CBA3FFE22B574 \\\n && apt-get update \\\n && apt-get install --no-install-recommends bison cabal-install-2.2 cmake flex g++ ghc-8.4.3 libsqlite3-dev libtinfo-dev make netbase wget zlib1g-dev -y\nWORKDIR $WORK\n#   default Haskell stack build usually fails on Docker, instead\n#   install a known-to-work binary build, see:\n#   https://github.com/commercialhaskell/stack/issues/3510#issuecomment-386266579\nRUN apt-get install --no-install-recommends curl -y \\\n && curl -fSL https://github.com/commercialhaskell/stack/releases/download/v1.7.1/stack-1.7.1-linux-x86_64.tar.gz -o stack.tar.gz \\\n && curl -fSL https://github.com/commercialhaskell/stack/releases/download/v1.7.1/stack-1.7.1-linux-x86_64.tar.gz.asc -o stack.tar.gz.asc \\\n && apt-get purge -y --auto-remove curl \\\n && export GNUPGHOME=$WORK \\\n && gpg --keyserver ha.pool.sks-keyservers.net --recv-keys C5705533DA4F78D8664B5DC0575159689BEFB442 \\\n && gpg --batch --verify stack.tar.gz.asc stack.tar.gz \\\n && tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \\\n && /usr/local/bin/stack config set system-ghc --global true \\\n && /usr/local/bin/stack config set install-ghc --global false \\\n && rm -f stack.tar.gz.asc stack.tar.gz\nENV PATH=\"/root/.cabal/bin:/root/.local/bin:/opt/cabal/2.2/bin:/opt/ghc/8.4.3/bin:$PATH\"\nENV BIN_DIR=\"/root/.local/bin\"\nRUN git clone https://github.com/conjure-cp/conjure.git\nWORKDIR $WORK/conjure\nRUN git pull\nRUN git checkout v2.3.0\nRUN make\nRUN make solvers\nRUN apt-get purge -y --auto-remove bison cabal-install-2.2 cmake dirmngr flex g++ ghc-8.4.3 git gnupg libsqlite3-dev libtinfo-dev make netbase wget zlib1g-dev \\\n && rm -rf /var/lib/apt/lists/*\nWORKDIR $WORK\nRUN rm -f pubring.kbx* trustdb.gpg /root/.wget-hsts \\\n && rm -rf crls.d private-keys-v1.d \\\n && rm -rf conjure \\\n && rm -rf /root/.stack \\\n && rm -rf /usr/local/bin/*\nENV PATH=\"/root/.local/bin:$PATH\"\n#   do a test-run of the pipeline, unless command is specified\nCOPY sudoku.essence sudoku.param $WORK/\nCMD conjure solve -ac --solutions-in-one-file --number-of-solutions=all --solver=minion --limit-time=90 sudoku.essence sudoku.param \\\n && mv conjure-output/model000001-sudoku.solutions /tmp/result.txt \\\n && cat /tmp/result.txt \\\n && rm /tmp/result.txt \\\n && rm -rf conjure-output\n","originalDockerfileUglifiedHash":"3950ab4f87c17d07862a244961f8cd31","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/7d688021692491486f8b08012f517d9ed8b7d54c.dockerfile"}