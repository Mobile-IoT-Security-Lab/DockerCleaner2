{"seed":1904508466,"processedDockerfileHash":"7dcfcb04e55f52692778f89482a4062b","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM ampervue/python27\n#   https://github.com/ampervue/docker-python27-opencv\nMAINTAINER David Karchmer <dkarchmer@gmail.com>\n#  #######################################\n#\n#   Image based on Ubuntu:trusty\n#\n#     with Python 2.7\n#     and OpenCV 3 (built)\n#     plus a bunch of build essencials\n#  ######################################\nENV OPENCV_VERSION=\"2.4.10\"\nWORKDIR /usr/local/src\nRUN git clone --depth 1 https://github.com/l-smash/l-smash \\\n && git clone --depth 1 git://git.videolan.org/x264.git \\\n && hg clone https://bitbucket.org/multicoreware/x265 \\\n && git clone --depth 1 git://source.ffmpeg.org/ffmpeg \\\n && git clone https://github.com/Itseez/opencv.git \\\n && git clone https://github.com/Itseez/opencv_contrib.git \\\n && git clone --depth 1 git://github.com/mstorsjo/fdk-aac.git \\\n && git clone --depth 1 https://chromium.googlesource.com/webm/libvpx \\\n && git clone https://git.xiph.org/opus.git \\\n && git clone --depth 1 https://github.com/mulx/aacgain.git\n#   Build L-SMASH\n#   =================================\nWORKDIR /usr/local/src/l-smash\nRUN ./configure\nRUN make -j 4\nRUN make install\n#   =================================\n#   Build libx264\n#   =================================\nWORKDIR /usr/local/src/x264\nRUN ./configure --enable-static\nRUN make -j 4\nRUN make install\n#   =================================\n#   Build libx265\n#   =================================\nWORKDIR /usr/local/src/x265/build/linux\nRUN cmake -DCMAKE_INSTALL_PREFIX:PATH=/usr ../../source\nRUN make -j 4\nRUN make install\n#   =================================\n#   Build libfdk-aac\n#   =================================\nWORKDIR /usr/local/src/fdk-aac\nRUN autoreconf -fiv\nRUN ./configure --disable-shared\nRUN make -j 4\nRUN make install\n#   =================================\n#   Build libvpx\n#   =================================\nWORKDIR /usr/local/src/libvpx\nRUN ./configure --disable-examples\nRUN make -j 4\nRUN make install\n#   =================================\n#   Build libopus\n#   =================================\nWORKDIR /usr/local/src/opus\nRUN ./autogen.sh\nRUN ./configure --disable-shared\nRUN make -j 4\nRUN make install\n#   =================================\n#   Build OpenCV 3.x\n#   =================================\nRUN apt-get update -qq \\\n && apt-get install --no-install-recommends libopencv-dev=4.6.0+dfsg-11 -y --force-yes\nRUN pip install numpy==1.24.2 --no-cache-dir --upgrade\nWORKDIR /usr/local/src\nRUN mkdir -p opencv/release\nWORKDIR /usr/local/src/opencv/release\nRUN cmake -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_INSTALL_PREFIX=/usr/local -D WITH_TBB=ON -D BUILD_PYTHON_SUPPORT=ON -D WITH_V4L=ON -D OPENCV_EXTRA_MODULES_PATH=../../opencv_contrib/modules ..\nRUN make -j4\nRUN make install\nRUN sh -c 'echo \"/usr/local/lib\" > /etc/ld.so.conf.d/opencv.conf'\nRUN ldconfig\n#   =================================\n#   Build ffmpeg.\n#   =================================\nRUN apt-get update -qq \\\n && apt-get install --no-install-recommends libass-dev=1:0.17.0-2 -y --force-yes\n#              --enable-libx265 - Remove until we can debug compile error\nWORKDIR /usr/local/src/ffmpeg\nRUN ./configure --extra-libs=\"-ldl\" --enable-gpl --enable-libass --enable-libfdk-aac --enable-libfontconfig --enable-libfreetype --enable-libfribidi --enable-libmp3lame --enable-libopus --enable-libtheora --enable-libvorbis --enable-libvpx --enable-libx264 --enable-nonfree\nRUN make -j 4\nRUN make install\n#   =================================\n#   Remove all tmpfile\n#   =================================\nWORKDIR /usr/local/\nRUN rm -rf /usr/local/src\n#   =================================\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ampervue/python27\n#  https://github.com/ampervue/docker-python27-opencv\nMAINTAINER David Karchmer <dkarchmer@gmail.com>\n# #######################################\n#\n#  Image based on Ubuntu:trusty\n#\n#    with Python 2.7\n#    and OpenCV 3 (built)\n#    plus a bunch of build essencials\n# ######################################\nENV OPENCV_VERSION=\"2.4.10\"\nWORKDIR /usr/local/src\nRUN git clone --depth 1 https://github.com/l-smash/l-smash \\\n && git clone --depth 1 git://git.videolan.org/x264.git \\\n && hg clone https://bitbucket.org/multicoreware/x265 \\\n && git clone --depth 1 git://source.ffmpeg.org/ffmpeg \\\n && git clone https://github.com/Itseez/opencv.git \\\n && git clone https://github.com/Itseez/opencv_contrib.git \\\n && git clone --depth 1 git://github.com/mstorsjo/fdk-aac.git \\\n && git clone --depth 1 https://chromium.googlesource.com/webm/libvpx \\\n && git clone https://git.xiph.org/opus.git \\\n && git clone --depth 1 https://github.com/mulx/aacgain.git\n#  Build L-SMASH\n#  =================================\nWORKDIR /usr/local/src/l-smash\nRUN ./configure\nRUN make -j 4\nRUN make install\n#  =================================\n#  Build libx264\n#  =================================\nWORKDIR /usr/local/src/x264\nRUN ./configure --enable-static\nRUN make -j 4\nRUN make install\n#  =================================\n#  Build libx265\n#  =================================\nWORKDIR /usr/local/src/x265/build/linux\nRUN cmake -DCMAKE_INSTALL_PREFIX:PATH=/usr ../../source\nRUN make -j 4\nRUN make install\n#  =================================\n#  Build libfdk-aac\n#  =================================\nWORKDIR /usr/local/src/fdk-aac\nRUN autoreconf -fiv\nRUN ./configure --disable-shared\nRUN make -j 4\nRUN make install\n#  =================================\n#  Build libvpx\n#  =================================\nWORKDIR /usr/local/src/libvpx\nRUN ./configure --disable-examples\nRUN make -j 4\nRUN make install\n#  =================================\n#  Build libopus\n#  =================================\nWORKDIR /usr/local/src/opus\nRUN ./autogen.sh\nRUN ./configure --disable-shared\nRUN make -j 4\nRUN make install\n#  =================================\n#  Build OpenCV 3.x\n#  =================================\nRUN apt-get update -qq \\\n && apt-get install libopencv-dev -y --force-yes\nRUN pip install numpy --no-cache-dir --upgrade\nWORKDIR /usr/local/src\nRUN mkdir -p opencv/release\nWORKDIR /usr/local/src/opencv/release\nRUN cmake -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_INSTALL_PREFIX=/usr/local -D WITH_TBB=ON -D BUILD_PYTHON_SUPPORT=ON -D WITH_V4L=ON -D OPENCV_EXTRA_MODULES_PATH=../../opencv_contrib/modules ..\nRUN make -j4\nRUN make install\nRUN sh -c 'echo \"/usr/local/lib\" > /etc/ld.so.conf.d/opencv.conf'\nRUN ldconfig\n#  =================================\n#  Build ffmpeg.\n#  =================================\nRUN apt-get update -qq \\\n && apt-get install libass-dev -y --force-yes\n#             --enable-libx265 - Remove until we can debug compile error\nWORKDIR /usr/local/src/ffmpeg\nRUN ./configure --extra-libs=\"-ldl\" --enable-gpl --enable-libass --enable-libfdk-aac --enable-libfontconfig --enable-libfreetype --enable-libfribidi --enable-libmp3lame --enable-libopus --enable-libtheora --enable-libvorbis --enable-libvpx --enable-libx264 --enable-nonfree\nRUN make -j 4\nRUN make install\n#  =================================\n#  Remove all tmpfile\n#  =================================\nWORKDIR /usr/local/\nRUN rm -rf /usr/local/src\n#  =================================\n","injectedSmells":[],"originalDockerfileHash":"8541e1fd8620f1d7c894e1f171847e32","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ampervue/python27\n#   https://github.com/ampervue/docker-python27-opencv\nMAINTAINER David Karchmer <dkarchmer@gmail.com>\n#  #######################################\n#\n#   Image based on Ubuntu:trusty\n#\n#     with Python 2.7\n#     and OpenCV 3 (built)\n#     plus a bunch of build essencials\n#  ######################################\nENV OPENCV_VERSION=\"2.4.10\"\nWORKDIR /usr/local/src\nRUN git clone --depth 1 https://github.com/l-smash/l-smash \\\n && git clone --depth 1 git://git.videolan.org/x264.git \\\n && hg clone https://bitbucket.org/multicoreware/x265 \\\n && git clone --depth 1 git://source.ffmpeg.org/ffmpeg \\\n && git clone https://github.com/Itseez/opencv.git \\\n && git clone https://github.com/Itseez/opencv_contrib.git \\\n && git clone --depth 1 git://github.com/mstorsjo/fdk-aac.git \\\n && git clone --depth 1 https://chromium.googlesource.com/webm/libvpx \\\n && git clone https://git.xiph.org/opus.git \\\n && git clone --depth 1 https://github.com/mulx/aacgain.git\n#   Build L-SMASH\n#   =================================\nWORKDIR /usr/local/src/l-smash\nRUN ./configure\nRUN make -j 4\nRUN make install\n#   =================================\n#   Build libx264\n#   =================================\nWORKDIR /usr/local/src/x264\nRUN ./configure --enable-static\nRUN make -j 4\nRUN make install\n#   =================================\n#   Build libx265\n#   =================================\nWORKDIR /usr/local/src/x265/build/linux\nRUN cmake -DCMAKE_INSTALL_PREFIX:PATH=/usr ../../source\nRUN make -j 4\nRUN make install\n#   =================================\n#   Build libfdk-aac\n#   =================================\nWORKDIR /usr/local/src/fdk-aac\nRUN autoreconf -fiv\nRUN ./configure --disable-shared\nRUN make -j 4\nRUN make install\n#   =================================\n#   Build libvpx\n#   =================================\nWORKDIR /usr/local/src/libvpx\nRUN ./configure --disable-examples\nRUN make -j 4\nRUN make install\n#   =================================\n#   Build libopus\n#   =================================\nWORKDIR /usr/local/src/opus\nRUN ./autogen.sh\nRUN ./configure --disable-shared\nRUN make -j 4\nRUN make install\n#   =================================\n#   Build OpenCV 3.x\n#   =================================\nRUN apt-get update -qq \\\n && apt-get install libopencv-dev -y --force-yes\nRUN pip install numpy --no-cache-dir --upgrade\nWORKDIR /usr/local/src\nRUN mkdir -p opencv/release\nWORKDIR /usr/local/src/opencv/release\nRUN cmake -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_INSTALL_PREFIX=/usr/local -D WITH_TBB=ON -D BUILD_PYTHON_SUPPORT=ON -D WITH_V4L=ON -D OPENCV_EXTRA_MODULES_PATH=../../opencv_contrib/modules ..\nRUN make -j4\nRUN make install\nRUN sh -c 'echo \"/usr/local/lib\" > /etc/ld.so.conf.d/opencv.conf'\nRUN ldconfig\n#   =================================\n#   Build ffmpeg.\n#   =================================\nRUN apt-get update -qq \\\n && apt-get install libass-dev -y --force-yes\n#              --enable-libx265 - Remove until we can debug compile error\nWORKDIR /usr/local/src/ffmpeg\nRUN ./configure --extra-libs=\"-ldl\" --enable-gpl --enable-libass --enable-libfdk-aac --enable-libfontconfig --enable-libfreetype --enable-libfribidi --enable-libmp3lame --enable-libopus --enable-libtheora --enable-libvorbis --enable-libvpx --enable-libx264 --enable-nonfree\nRUN make -j 4\nRUN make install\n#   =================================\n#   Remove all tmpfile\n#   =================================\nWORKDIR /usr/local/\nRUN rm -rf /usr/local/src\n#   =================================\n","originalDockerfileUglifiedHash":"291e59c23d5dab0ff87c92896714b04b","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/a862bc0555ee6b7dd8928de069b9ce56be3b0af9.dockerfile"}