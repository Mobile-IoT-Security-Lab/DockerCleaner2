{"seed":928399539,"processedDockerfileHash":"efe8588409b74dc5a39b9f6ffb4584fe","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   NGSeasy Base Image\n#   base image\nFROM debian:jessie\n#   Maintainer \nMAINTAINER Stephen Newhouse stephen.j.newhouse@gmail.com\n#   Set correct environment variables.\nENV HOME=\"/root\"\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#   Remain current\nRUN : \\\n && apt-get dist-upgrade -y\n#   Basic dependencies\nRUN apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends apt-utils automake ant bash binutils perl bioperl build-essential bzip2 c++11 cdbs cmake cron curl dkms dpkg-dev g++ gpp gcc gfortran git git-core libblas-dev libatlas-dev libbz2-dev liblzma-dev libpcre3-dev libreadline-dev make mercurial php5-curl python python-dev python-yaml ncurses-dev zlib1g-dev python-numpy python-pip sudo subversion tabix tree unzip vim wget python-software-properties libc-bin llvm libconfig-dev ncurses-dev zlib1g-dev yum libX11-dev libXpm-dev libXft-dev libXext-dev asciidoc -y )\n#  ---------------------------------JAVA-------------------------------------------------------------------------------------#  \n#   upgrade java\nRUN (apt-get update ;apt-get install --no-install-recommends openjdk-7-jdk openjdk-7-doc openjdk-7-jre-lib -y )\n#  set java\nENV JAVA_HOME=\"/usr/lib/jvm/java-7-openjdk-amd64/jre/bin/java\"\nRUN sed -i 'aPATH=$PATH:/usr/lib/jvm/java-7-openjdk-amd64/jre/bin' /root/.bashrc\n#  -------------------------------Add user----------------------------------------------------------------------------------#\n#   Create a pipeline user:pipeman and group:ngsgroup\nRUN useradd -m -s /bin/bash pipeman \\\n && cd /home/pipeman \\\n && echo \"#bash config file for user pipeman\" >> /home/pipeman/.bashrc\nRUN groupadd ngsgroup \\\n && usermod -aG ngsgroup pipeman \\\n && usermod -aG sudo pipeman\n#  -----------------------------NGS TOOLS DIRECTORY------------------------------------------------------------------------#  \n#  make pipeline install dirs\nRUN mkdir /usr/local/pipeline \\\n && chown pipeman:ngsgroup /usr/local/pipeline \\\n && chmod 775 /usr/local/pipeline\n#  -------------------------------PERMISSIONS--------------------------\nRUN chmod -R 777 /usr/local/pipeline\nRUN chown -R pipeman:ngsgroup /usr/local/pipeline\n#  ---------------------------------------------------------------------\n#  Cleanup the temp dir\nRUN rm -rvf /tmp/*\n#  open ports private only\nEXPOSE 8080/tcp\n#   Use baseimage-docker's bash.\nCMD [\"/bin/bash\"]\n#  Clean up APT when done.\nRUN apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \\\n && apt-get autoclean \\\n && apt-get autoremove -y \\\n && rm -rf /var/lib/{apt,dpkg,cache,log}/\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  NGSeasy Base Image\n#  base image\nFROM debian:jessie\n#  Maintainer \nMAINTAINER Stephen Newhouse stephen.j.newhouse@gmail.com\n#  Set correct environment variables.\nENV HOME=\"/root\"\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#  Remain current\nRUN apt-get update \\\n && apt-get dist-upgrade -y\n#  Basic dependencies\nRUN apt-get update \\\n && apt-get install --no-install-recommends apt-utils automake ant bash binutils perl bioperl build-essential bzip2 c++11 cdbs cmake cron curl dkms dpkg-dev g++ gpp gcc gfortran git git-core libblas-dev libatlas-dev libbz2-dev liblzma-dev libpcre3-dev libreadline-dev make mercurial php5-curl python python-dev python-yaml ncurses-dev zlib1g-dev python-numpy python-pip sudo subversion tabix tree unzip vim wget python-software-properties libc-bin llvm libconfig-dev ncurses-dev zlib1g-dev yum libX11-dev libXpm-dev libXft-dev libXext-dev asciidoc -y\n# ---------------------------------JAVA-------------------------------------------------------------------------------------#  \n#  upgrade java\nRUN apt-get install openjdk-7-jdk openjdk-7-doc openjdk-7-jre-lib -y\n# set java\nENV JAVA_HOME=\"/usr/lib/jvm/java-7-openjdk-amd64/jre/bin/java\"\nRUN sed -i 'aPATH=$PATH:/usr/lib/jvm/java-7-openjdk-amd64/jre/bin' /root/.bashrc\n# -------------------------------Add user----------------------------------------------------------------------------------#\n#  Create a pipeline user:pipeman and group:ngsgroup\nRUN useradd -m -s /bin/bash pipeman \\\n && cd /home/pipeman \\\n && echo \"#bash config file for user pipeman\" >> /home/pipeman/.bashrc\nRUN groupadd ngsgroup \\\n && usermod -aG ngsgroup pipeman \\\n && usermod -aG sudo pipeman\n# -----------------------------NGS TOOLS DIRECTORY------------------------------------------------------------------------#  \n# make pipeline install dirs\nRUN mkdir /usr/local/pipeline \\\n && chown pipeman:ngsgroup /usr/local/pipeline \\\n && chmod 775 /usr/local/pipeline\n# -------------------------------PERMISSIONS--------------------------\nRUN chmod -R 777 /usr/local/pipeline\nRUN chown -R pipeman:ngsgroup /usr/local/pipeline\n# ---------------------------------------------------------------------\n# Cleanup the temp dir\nRUN rm -rvf /tmp/*\n# open ports private only\nEXPOSE 8080/tcp\n#  Use baseimage-docker's bash.\nCMD [\"/bin/bash\"]\n# Clean up APT when done.\nRUN apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \\\n && apt-get autoclean \\\n && apt-get autoremove -y \\\n && rm -rf /var/lib/{apt,dpkg,cache,log}/\n","injectedSmells":[],"originalDockerfileHash":"f65fcb3882db54902b414a70375640b3","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   NGSeasy Base Image\n#   base image\nFROM debian:jessie\n#   Maintainer \nMAINTAINER Stephen Newhouse stephen.j.newhouse@gmail.com\n#   Set correct environment variables.\nENV HOME=\"/root\"\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#   Remain current\nRUN apt-get update \\\n && apt-get dist-upgrade -y\n#   Basic dependencies\nRUN apt-get update \\\n && apt-get install --no-install-recommends apt-utils automake ant bash binutils perl bioperl build-essential bzip2 c++11 cdbs cmake cron curl dkms dpkg-dev g++ gpp gcc gfortran git git-core libblas-dev libatlas-dev libbz2-dev liblzma-dev libpcre3-dev libreadline-dev make mercurial php5-curl python python-dev python-yaml ncurses-dev zlib1g-dev python-numpy python-pip sudo subversion tabix tree unzip vim wget python-software-properties libc-bin llvm libconfig-dev ncurses-dev zlib1g-dev yum libX11-dev libXpm-dev libXft-dev libXext-dev asciidoc -y\n#  ---------------------------------JAVA-------------------------------------------------------------------------------------#  \n#   upgrade java\nRUN apt-get install openjdk-7-jdk openjdk-7-doc openjdk-7-jre-lib -y\n#  set java\nENV JAVA_HOME=\"/usr/lib/jvm/java-7-openjdk-amd64/jre/bin/java\"\nRUN sed -i 'aPATH=$PATH:/usr/lib/jvm/java-7-openjdk-amd64/jre/bin' /root/.bashrc\n#  -------------------------------Add user----------------------------------------------------------------------------------#\n#   Create a pipeline user:pipeman and group:ngsgroup\nRUN useradd -m -s /bin/bash pipeman \\\n && cd /home/pipeman \\\n && echo \"#bash config file for user pipeman\" >> /home/pipeman/.bashrc\nRUN groupadd ngsgroup \\\n && usermod -aG ngsgroup pipeman \\\n && usermod -aG sudo pipeman\n#  -----------------------------NGS TOOLS DIRECTORY------------------------------------------------------------------------#  \n#  make pipeline install dirs\nRUN mkdir /usr/local/pipeline \\\n && chown pipeman:ngsgroup /usr/local/pipeline \\\n && chmod 775 /usr/local/pipeline\n#  -------------------------------PERMISSIONS--------------------------\nRUN chmod -R 777 /usr/local/pipeline\nRUN chown -R pipeman:ngsgroup /usr/local/pipeline\n#  ---------------------------------------------------------------------\n#  Cleanup the temp dir\nRUN rm -rvf /tmp/*\n#  open ports private only\nEXPOSE 8080/tcp\n#   Use baseimage-docker's bash.\nCMD [\"/bin/bash\"]\n#  Clean up APT when done.\nRUN apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \\\n && apt-get autoclean \\\n && apt-get autoremove -y \\\n && rm -rf /var/lib/{apt,dpkg,cache,log}/\n","originalDockerfileUglifiedHash":"476f8ef0d86da2d6ea87a3caed7c5815","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/d9773c1a68fa49c033870cdfe3136f69b6abf438.dockerfile"}