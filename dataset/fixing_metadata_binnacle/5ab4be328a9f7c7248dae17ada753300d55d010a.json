{"seed":4085350135,"processedDockerfileHash":"52f95051e1cbabd4b22fc84d442f017a","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM ubuntu:16.04\nRUN apt-get update \\\n && apt-get install --no-install-recommends g++=4:5.3.1-1ubuntu1 make=4.1-6 file=1:5.25-2ubuntu1.4 curl=7.47.0-1ubuntu2.19 ca-certificates=20210119~16.04.1 python2.7=2.7.12-1ubuntu0~16.04.18 git=1:2.7.4-0ubuntu1.10 cmake=3.5.1-1ubuntu3 sudo=1.8.16-0ubuntu1.10 xz-utils=5.1.1alpha+20120614-2ubuntu2 zlib1g-dev=1:1.2.8.dfsg-2ubuntu4.3 g++-arm-linux-gnueabi=4:5.3.1-1ubuntu1 g++-arm-linux-gnueabihf=4:5.3.1-1ubuntu1 g++-aarch64-linux-gnu=4:5.3.1-1ubuntu1 gcc-sparc64-linux-gnu=4:5.3.1-1ubuntu1 libc6-dev-sparc64-cross=2.23-0ubuntu3cross1 bzip2=1.0.6-8ubuntu0.2 patch=2.7.5-1ubuntu0.16.04.2 libssl-dev=1.0.2g-1ubuntu4.20 pkg-config=0.29.1-0ubuntu1 libnewlib-arm-none-eabi=2.2.0+git20150830.5a3d536-1 qemu-system-arm=1:2.5+dfsg-5ubuntu10.51 software-properties-common=0.96.20.10 -y\nWORKDIR /build\n#   Use the team-gcc-arm-embedded PPA for a newer version of Arm GCC\nRUN add-apt-repository ppa:team-gcc-arm-embedded/ppa \\\n && apt-get update \\\n && apt-get install --no-install-recommends gcc-arm-embedded -y\nCOPY dist-various-1/build-rumprun.sh /build\nRUN ./build-rumprun.sh\nCOPY dist-various-1/install-x86_64-redox.sh /build\nRUN ./install-x86_64-redox.sh\nCOPY dist-various-1/install-mips-musl.sh /build\nRUN ./install-mips-musl.sh\nCOPY dist-various-1/install-mipsel-musl.sh /build\nRUN ./install-mipsel-musl.sh\n#   Suppress some warnings in the openwrt toolchains we downloaded\nENV STAGING_DIR=\"/tmp\"\nCOPY scripts/musl.sh /build\nRUN env CC=arm-linux-gnueabi-gcc CFLAGS=\"-march=armv5te -marm -mfloat-abi=soft\" CXX=arm-linux-gnueabi-g++ CXXFLAGS=\"-march=armv5te -marm -mfloat-abi=soft\" bash musl.sh armv5te \\\n && env CC=arm-linux-gnueabi-gcc CFLAGS=\"-march=armv6 -marm\" CXX=arm-linux-gnueabi-g++ CXXFLAGS=\"-march=armv6 -marm\" bash musl.sh arm \\\n && env CC=arm-linux-gnueabihf-gcc CFLAGS=\"-march=armv6 -marm -mfpu=vfp\" CXX=arm-linux-gnueabihf-g++ CXXFLAGS=\"-march=armv6 -marm -mfpu=vfp\" bash musl.sh armhf \\\n && env CC=arm-linux-gnueabihf-gcc CFLAGS=\"-march=armv7-a\" CXX=arm-linux-gnueabihf-g++ CXXFLAGS=\"-march=armv7-a\" bash musl.sh armv7 \\\n && env CC=aarch64-linux-gnu-gcc CXX=aarch64-linux-gnu-g++ bash musl.sh aarch64 \\\n && env CC=mips-openwrt-linux-gcc CXX=mips-openwrt-linux-g++ bash musl.sh mips \\\n && env CC=mipsel-openwrt-linux-gcc CXX=mipsel-openwrt-linux-g++ bash musl.sh mipsel \\\n && rm -rf /build/*\n#   FIXME(mozilla/sccache#235) this shouldn't be necessary but is currently\n#   necessary to disambiguate the mips compiler with the mipsel compiler. We want\n#   to give these two wrapper scripts (currently identical ones) different hashes\n#   to ensure that sccache understands that they're different compilers.\nRUN echo \"# a\" >> /usr/local/mips-linux-musl/bin/mips-openwrt-linux-musl-wrapper.sh \\\n && echo \"# b\" >> /usr/local/mipsel-linux-musl/bin/mipsel-openwrt-linux-musl-wrapper.sh\nENV RUN_MAKE_TARGETS=\"thumbv6m-none-eabi\"\nENV RUN_MAKE_TARGETS=\"$RUN_MAKE_TARGETS,thumbv7m-none-eabi\"\nENV RUN_MAKE_TARGETS=\"$RUN_MAKE_TARGETS,thumbv7em-none-eabi\"\nENV RUN_MAKE_TARGETS=\"$RUN_MAKE_TARGETS,thumbv7em-none-eabihf\"\nENV TARGETS=\"asmjs-unknown-emscripten\"\nENV TARGETS=\"$TARGETS,wasm32-unknown-emscripten\"\nENV TARGETS=\"$TARGETS,x86_64-rumprun-netbsd\"\nENV TARGETS=\"$TARGETS,mips-unknown-linux-musl\"\nENV TARGETS=\"$TARGETS,mipsel-unknown-linux-musl\"\nENV TARGETS=\"$TARGETS,arm-unknown-linux-musleabi\"\nENV TARGETS=\"$TARGETS,arm-unknown-linux-musleabihf\"\nENV TARGETS=\"$TARGETS,armv5te-unknown-linux-gnueabi\"\nENV TARGETS=\"$TARGETS,armv5te-unknown-linux-musleabi\"\nENV TARGETS=\"$TARGETS,armv7-unknown-linux-musleabihf\"\nENV TARGETS=\"$TARGETS,aarch64-unknown-linux-musl\"\nENV TARGETS=\"$TARGETS,sparc64-unknown-linux-gnu\"\nENV TARGETS=\"$TARGETS,x86_64-unknown-redox\"\nENV TARGETS=\"$TARGETS,thumbv6m-none-eabi\"\nENV TARGETS=\"$TARGETS,thumbv7m-none-eabi\"\nENV TARGETS=\"$TARGETS,thumbv7em-none-eabi\"\nENV TARGETS=\"$TARGETS,thumbv7em-none-eabihf\"\nENV TARGETS=\"$TARGETS,thumbv8m.base-none-eabi\"\nENV TARGETS=\"$TARGETS,thumbv8m.main-none-eabi\"\nENV TARGETS=\"$TARGETS,thumbv8m.main-none-eabihf\"\nENV TARGETS=\"$TARGETS,riscv32imc-unknown-none-elf\"\nENV TARGETS=\"$TARGETS,riscv32imac-unknown-none-elf\"\nENV TARGETS=\"$TARGETS,riscv64imac-unknown-none-elf\"\nENV TARGETS=\"$TARGETS,riscv64gc-unknown-none-elf\"\nENV TARGETS=\"$TARGETS,armebv7r-none-eabi\"\nENV TARGETS=\"$TARGETS,armebv7r-none-eabihf\"\nENV TARGETS=\"$TARGETS,armv7r-none-eabi\"\nENV TARGETS=\"$TARGETS,armv7r-none-eabihf\"\nENV TARGETS=\"$TARGETS,thumbv7neon-unknown-linux-gnueabihf\"\nENV CC_mipsel_unknown_linux_musl=\"mipsel-openwrt-linux-gcc\" \\\n    CC_mips_unknown_linux_musl=\"mips-openwrt-linux-gcc\" \\\n    CC_sparc64_unknown_linux_gnu=\"sparc64-linux-gnu-gcc\" \\\n    CC_x86_64_unknown_redox=\"x86_64-unknown-redox-gcc\" \\\n    CC_thumbv7neon_unknown_linux_gnueabihf=\"arm-linux-gnueabihf-gcc\" \\\n    AR_thumbv7neon_unknown_linux_gnueabihf=\"arm-linux-gnueabihf-ar\" \\\n    CXX_thumbv7neon_unknown_linux_gnueabihf=\"arm-linux-gnueabihf-g++\"\nENV RUST_CONFIGURE_ARGS=\"--musl-root-armv5te=/musl-armv5te  --musl-root-arm=/musl-arm  --musl-root-armhf=/musl-armhf  --musl-root-armv7=/musl-armv7  --musl-root-aarch64=/musl-aarch64  --musl-root-mips=/musl-mips  --musl-root-mipsel=/musl-mipsel  --enable-emscripten  --disable-docs\"\nENV SCRIPT=\"python2.7 ../x.py test --target $RUN_MAKE_TARGETS src/test/run-make &&  python2.7 ../x.py dist --target $TARGETS\"\n#   sccache\nCOPY scripts/sccache.sh /scripts/\nRUN sh /scripts/sccache.sh\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:16.04\nRUN apt-get update \\\n && apt-get install --no-install-recommends g++ make file curl ca-certificates python2.7 git cmake sudo xz-utils zlib1g-dev g++-arm-linux-gnueabi g++-arm-linux-gnueabihf g++-aarch64-linux-gnu gcc-sparc64-linux-gnu libc6-dev-sparc64-cross bzip2 patch libssl-dev pkg-config libnewlib-arm-none-eabi qemu-system-arm software-properties-common -y\nWORKDIR /build\n#  Use the team-gcc-arm-embedded PPA for a newer version of Arm GCC\nRUN add-apt-repository ppa:team-gcc-arm-embedded/ppa \\\n && apt-get update \\\n && apt-get install --no-install-recommends gcc-arm-embedded -y\nCOPY dist-various-1/build-rumprun.sh /build\nRUN ./build-rumprun.sh\nCOPY dist-various-1/install-x86_64-redox.sh /build\nRUN ./install-x86_64-redox.sh\nCOPY dist-various-1/install-mips-musl.sh /build\nRUN ./install-mips-musl.sh\nCOPY dist-various-1/install-mipsel-musl.sh /build\nRUN ./install-mipsel-musl.sh\n#  Suppress some warnings in the openwrt toolchains we downloaded\nENV STAGING_DIR=\"/tmp\"\nCOPY scripts/musl.sh /build\nRUN env CC=arm-linux-gnueabi-gcc CFLAGS=\"-march=armv5te -marm -mfloat-abi=soft\" CXX=arm-linux-gnueabi-g++ CXXFLAGS=\"-march=armv5te -marm -mfloat-abi=soft\" bash musl.sh armv5te \\\n && env CC=arm-linux-gnueabi-gcc CFLAGS=\"-march=armv6 -marm\" CXX=arm-linux-gnueabi-g++ CXXFLAGS=\"-march=armv6 -marm\" bash musl.sh arm \\\n && env CC=arm-linux-gnueabihf-gcc CFLAGS=\"-march=armv6 -marm -mfpu=vfp\" CXX=arm-linux-gnueabihf-g++ CXXFLAGS=\"-march=armv6 -marm -mfpu=vfp\" bash musl.sh armhf \\\n && env CC=arm-linux-gnueabihf-gcc CFLAGS=\"-march=armv7-a\" CXX=arm-linux-gnueabihf-g++ CXXFLAGS=\"-march=armv7-a\" bash musl.sh armv7 \\\n && env CC=aarch64-linux-gnu-gcc CXX=aarch64-linux-gnu-g++ bash musl.sh aarch64 \\\n && env CC=mips-openwrt-linux-gcc CXX=mips-openwrt-linux-g++ bash musl.sh mips \\\n && env CC=mipsel-openwrt-linux-gcc CXX=mipsel-openwrt-linux-g++ bash musl.sh mipsel \\\n && rm -rf /build/*\n#  FIXME(mozilla/sccache#235) this shouldn't be necessary but is currently\n#  necessary to disambiguate the mips compiler with the mipsel compiler. We want\n#  to give these two wrapper scripts (currently identical ones) different hashes\n#  to ensure that sccache understands that they're different compilers.\nRUN echo \"# a\" >> /usr/local/mips-linux-musl/bin/mips-openwrt-linux-musl-wrapper.sh \\\n && echo \"# b\" >> /usr/local/mipsel-linux-musl/bin/mipsel-openwrt-linux-musl-wrapper.sh\nENV RUN_MAKE_TARGETS=\"thumbv6m-none-eabi\"\nENV RUN_MAKE_TARGETS=\"$RUN_MAKE_TARGETS,thumbv7m-none-eabi\"\nENV RUN_MAKE_TARGETS=\"$RUN_MAKE_TARGETS,thumbv7em-none-eabi\"\nENV RUN_MAKE_TARGETS=\"$RUN_MAKE_TARGETS,thumbv7em-none-eabihf\"\nENV TARGETS=\"asmjs-unknown-emscripten\"\nENV TARGETS=\"$TARGETS,wasm32-unknown-emscripten\"\nENV TARGETS=\"$TARGETS,x86_64-rumprun-netbsd\"\nENV TARGETS=\"$TARGETS,mips-unknown-linux-musl\"\nENV TARGETS=\"$TARGETS,mipsel-unknown-linux-musl\"\nENV TARGETS=\"$TARGETS,arm-unknown-linux-musleabi\"\nENV TARGETS=\"$TARGETS,arm-unknown-linux-musleabihf\"\nENV TARGETS=\"$TARGETS,armv5te-unknown-linux-gnueabi\"\nENV TARGETS=\"$TARGETS,armv5te-unknown-linux-musleabi\"\nENV TARGETS=\"$TARGETS,armv7-unknown-linux-musleabihf\"\nENV TARGETS=\"$TARGETS,aarch64-unknown-linux-musl\"\nENV TARGETS=\"$TARGETS,sparc64-unknown-linux-gnu\"\nENV TARGETS=\"$TARGETS,x86_64-unknown-redox\"\nENV TARGETS=\"$TARGETS,thumbv6m-none-eabi\"\nENV TARGETS=\"$TARGETS,thumbv7m-none-eabi\"\nENV TARGETS=\"$TARGETS,thumbv7em-none-eabi\"\nENV TARGETS=\"$TARGETS,thumbv7em-none-eabihf\"\nENV TARGETS=\"$TARGETS,thumbv8m.base-none-eabi\"\nENV TARGETS=\"$TARGETS,thumbv8m.main-none-eabi\"\nENV TARGETS=\"$TARGETS,thumbv8m.main-none-eabihf\"\nENV TARGETS=\"$TARGETS,riscv32imc-unknown-none-elf\"\nENV TARGETS=\"$TARGETS,riscv32imac-unknown-none-elf\"\nENV TARGETS=\"$TARGETS,riscv64imac-unknown-none-elf\"\nENV TARGETS=\"$TARGETS,riscv64gc-unknown-none-elf\"\nENV TARGETS=\"$TARGETS,armebv7r-none-eabi\"\nENV TARGETS=\"$TARGETS,armebv7r-none-eabihf\"\nENV TARGETS=\"$TARGETS,armv7r-none-eabi\"\nENV TARGETS=\"$TARGETS,armv7r-none-eabihf\"\nENV TARGETS=\"$TARGETS,thumbv7neon-unknown-linux-gnueabihf\"\nENV CC_mipsel_unknown_linux_musl=\"mipsel-openwrt-linux-gcc\" \\\n    CC_mips_unknown_linux_musl=\"mips-openwrt-linux-gcc\" \\\n    CC_sparc64_unknown_linux_gnu=\"sparc64-linux-gnu-gcc\" \\\n    CC_x86_64_unknown_redox=\"x86_64-unknown-redox-gcc\" \\\n    CC_thumbv7neon_unknown_linux_gnueabihf=\"arm-linux-gnueabihf-gcc\" \\\n    AR_thumbv7neon_unknown_linux_gnueabihf=\"arm-linux-gnueabihf-ar\" \\\n    CXX_thumbv7neon_unknown_linux_gnueabihf=\"arm-linux-gnueabihf-g++\"\nENV RUST_CONFIGURE_ARGS=\"--musl-root-armv5te=/musl-armv5te  --musl-root-arm=/musl-arm  --musl-root-armhf=/musl-armhf  --musl-root-armv7=/musl-armv7  --musl-root-aarch64=/musl-aarch64  --musl-root-mips=/musl-mips  --musl-root-mipsel=/musl-mipsel  --enable-emscripten  --disable-docs\"\nENV SCRIPT=\"python2.7 ../x.py test --target $RUN_MAKE_TARGETS src/test/run-make &&  python2.7 ../x.py dist --target $TARGETS\"\n#  sccache\nCOPY scripts/sccache.sh /scripts/\nRUN sh /scripts/sccache.sh\n","injectedSmells":[],"originalDockerfileHash":"cc62baa890409ac178f859def3817ef7","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:16.04\nRUN apt-get update \\\n && apt-get install --no-install-recommends g++ make file curl ca-certificates python2.7 git cmake sudo xz-utils zlib1g-dev g++-arm-linux-gnueabi g++-arm-linux-gnueabihf g++-aarch64-linux-gnu gcc-sparc64-linux-gnu libc6-dev-sparc64-cross bzip2 patch libssl-dev pkg-config libnewlib-arm-none-eabi qemu-system-arm software-properties-common -y\nWORKDIR /build\n#   Use the team-gcc-arm-embedded PPA for a newer version of Arm GCC\nRUN add-apt-repository ppa:team-gcc-arm-embedded/ppa \\\n && apt-get update \\\n && apt-get install --no-install-recommends gcc-arm-embedded -y\nCOPY dist-various-1/build-rumprun.sh /build\nRUN ./build-rumprun.sh\nCOPY dist-various-1/install-x86_64-redox.sh /build\nRUN ./install-x86_64-redox.sh\nCOPY dist-various-1/install-mips-musl.sh /build\nRUN ./install-mips-musl.sh\nCOPY dist-various-1/install-mipsel-musl.sh /build\nRUN ./install-mipsel-musl.sh\n#   Suppress some warnings in the openwrt toolchains we downloaded\nENV STAGING_DIR=\"/tmp\"\nCOPY scripts/musl.sh /build\nRUN env CC=arm-linux-gnueabi-gcc CFLAGS=\"-march=armv5te -marm -mfloat-abi=soft\" CXX=arm-linux-gnueabi-g++ CXXFLAGS=\"-march=armv5te -marm -mfloat-abi=soft\" bash musl.sh armv5te \\\n && env CC=arm-linux-gnueabi-gcc CFLAGS=\"-march=armv6 -marm\" CXX=arm-linux-gnueabi-g++ CXXFLAGS=\"-march=armv6 -marm\" bash musl.sh arm \\\n && env CC=arm-linux-gnueabihf-gcc CFLAGS=\"-march=armv6 -marm -mfpu=vfp\" CXX=arm-linux-gnueabihf-g++ CXXFLAGS=\"-march=armv6 -marm -mfpu=vfp\" bash musl.sh armhf \\\n && env CC=arm-linux-gnueabihf-gcc CFLAGS=\"-march=armv7-a\" CXX=arm-linux-gnueabihf-g++ CXXFLAGS=\"-march=armv7-a\" bash musl.sh armv7 \\\n && env CC=aarch64-linux-gnu-gcc CXX=aarch64-linux-gnu-g++ bash musl.sh aarch64 \\\n && env CC=mips-openwrt-linux-gcc CXX=mips-openwrt-linux-g++ bash musl.sh mips \\\n && env CC=mipsel-openwrt-linux-gcc CXX=mipsel-openwrt-linux-g++ bash musl.sh mipsel \\\n && rm -rf /build/*\n#   FIXME(mozilla/sccache#235) this shouldn't be necessary but is currently\n#   necessary to disambiguate the mips compiler with the mipsel compiler. We want\n#   to give these two wrapper scripts (currently identical ones) different hashes\n#   to ensure that sccache understands that they're different compilers.\nRUN echo \"# a\" >> /usr/local/mips-linux-musl/bin/mips-openwrt-linux-musl-wrapper.sh \\\n && echo \"# b\" >> /usr/local/mipsel-linux-musl/bin/mipsel-openwrt-linux-musl-wrapper.sh\nENV RUN_MAKE_TARGETS=\"thumbv6m-none-eabi\"\nENV RUN_MAKE_TARGETS=\"$RUN_MAKE_TARGETS,thumbv7m-none-eabi\"\nENV RUN_MAKE_TARGETS=\"$RUN_MAKE_TARGETS,thumbv7em-none-eabi\"\nENV RUN_MAKE_TARGETS=\"$RUN_MAKE_TARGETS,thumbv7em-none-eabihf\"\nENV TARGETS=\"asmjs-unknown-emscripten\"\nENV TARGETS=\"$TARGETS,wasm32-unknown-emscripten\"\nENV TARGETS=\"$TARGETS,x86_64-rumprun-netbsd\"\nENV TARGETS=\"$TARGETS,mips-unknown-linux-musl\"\nENV TARGETS=\"$TARGETS,mipsel-unknown-linux-musl\"\nENV TARGETS=\"$TARGETS,arm-unknown-linux-musleabi\"\nENV TARGETS=\"$TARGETS,arm-unknown-linux-musleabihf\"\nENV TARGETS=\"$TARGETS,armv5te-unknown-linux-gnueabi\"\nENV TARGETS=\"$TARGETS,armv5te-unknown-linux-musleabi\"\nENV TARGETS=\"$TARGETS,armv7-unknown-linux-musleabihf\"\nENV TARGETS=\"$TARGETS,aarch64-unknown-linux-musl\"\nENV TARGETS=\"$TARGETS,sparc64-unknown-linux-gnu\"\nENV TARGETS=\"$TARGETS,x86_64-unknown-redox\"\nENV TARGETS=\"$TARGETS,thumbv6m-none-eabi\"\nENV TARGETS=\"$TARGETS,thumbv7m-none-eabi\"\nENV TARGETS=\"$TARGETS,thumbv7em-none-eabi\"\nENV TARGETS=\"$TARGETS,thumbv7em-none-eabihf\"\nENV TARGETS=\"$TARGETS,thumbv8m.base-none-eabi\"\nENV TARGETS=\"$TARGETS,thumbv8m.main-none-eabi\"\nENV TARGETS=\"$TARGETS,thumbv8m.main-none-eabihf\"\nENV TARGETS=\"$TARGETS,riscv32imc-unknown-none-elf\"\nENV TARGETS=\"$TARGETS,riscv32imac-unknown-none-elf\"\nENV TARGETS=\"$TARGETS,riscv64imac-unknown-none-elf\"\nENV TARGETS=\"$TARGETS,riscv64gc-unknown-none-elf\"\nENV TARGETS=\"$TARGETS,armebv7r-none-eabi\"\nENV TARGETS=\"$TARGETS,armebv7r-none-eabihf\"\nENV TARGETS=\"$TARGETS,armv7r-none-eabi\"\nENV TARGETS=\"$TARGETS,armv7r-none-eabihf\"\nENV TARGETS=\"$TARGETS,thumbv7neon-unknown-linux-gnueabihf\"\nENV CC_mipsel_unknown_linux_musl=\"mipsel-openwrt-linux-gcc\" \\\n    CC_mips_unknown_linux_musl=\"mips-openwrt-linux-gcc\" \\\n    CC_sparc64_unknown_linux_gnu=\"sparc64-linux-gnu-gcc\" \\\n    CC_x86_64_unknown_redox=\"x86_64-unknown-redox-gcc\" \\\n    CC_thumbv7neon_unknown_linux_gnueabihf=\"arm-linux-gnueabihf-gcc\" \\\n    AR_thumbv7neon_unknown_linux_gnueabihf=\"arm-linux-gnueabihf-ar\" \\\n    CXX_thumbv7neon_unknown_linux_gnueabihf=\"arm-linux-gnueabihf-g++\"\nENV RUST_CONFIGURE_ARGS=\"--musl-root-armv5te=/musl-armv5te  --musl-root-arm=/musl-arm  --musl-root-armhf=/musl-armhf  --musl-root-armv7=/musl-armv7  --musl-root-aarch64=/musl-aarch64  --musl-root-mips=/musl-mips  --musl-root-mipsel=/musl-mipsel  --enable-emscripten  --disable-docs\"\nENV SCRIPT=\"python2.7 ../x.py test --target $RUN_MAKE_TARGETS src/test/run-make &&  python2.7 ../x.py dist --target $TARGETS\"\n#   sccache\nCOPY scripts/sccache.sh /scripts/\nRUN sh /scripts/sccache.sh\n","originalDockerfileUglifiedHash":"da7eea88731f069733d130f63d66ce3e","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/5ab4be328a9f7c7248dae17ada753300d55d010a.dockerfile"}