{"seed":2528430983,"processedDockerfileHash":"3b054516a1fa0fc361cde6c2efece8a4","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM debian:stretch-slim\n#  ###############################################################################\nARG PHP_VERSION=7.3.6\nARG PHP_NUM=73\nARG PHP_PREFIX=/usr/local/php73\nARG PHP_INI_DIR=/usr/local/etc/php73\nARG COMPOSER_VERSION=1.8.5\nENV COMPOSER_ALLOW_SUPERUSER=\"1\"\nENV COMPOSER_HOME=\"/tmp\"\nENV TZ=\"Asia/Shanghai\"\n#  ###############################################################################\nARG DEB_URL=deb.debian.org\n#   mirrors.ustc.edu.cn\nARG DEB_SECURITY_URL=security.debian.org\n#   mirrors.ustc.edu.cn/debian-security/\nCOPY --from=php /usr/local/bin/docker-php-source /usr/local/bin/\nCOPY --from=php /usr/local/bin/docker-php-ext-* /usr/local/bin/docker-php-entrypoint /usr/local/bin/\nCOPY wsl-php-ext-enable.sh /usr/local/bin/wsl-php-ext-enable.sh\nENV PHP_CFLAGS=\"-fstack-protector-strong -fpic -fpie -O2\"\nENV PHP_CPPFLAGS=\"$PHP_CFLAGS\"\nENV PHP_LDFLAGS=\"-Wl,-O1 -Wl,--hash-style=both -pie\"\nENV PHP_URL=\"https://secure.php.net/get/php-${PHP_VERSION}.tar.xz/from/this/mirror\"\nENV PHPIZE_DEPS=\"autoconf  dpkg-dev  file  g++  gcc  libc-dev  make  pkg-config  re2c\"\nRUN sed -i \"s!deb.debian.org!${DEB_URL}!g\" /etc/apt/sources.list \\\n && sed -i \"s!security.debian.org!${DEB_SECURITY_URL}!g\" /etc/apt/sources.list \\\n && set -eux ; { echo 'Package: php*' ;echo 'Pin: release *' ;echo 'Pin-Priority: -1' ; } > /etc/apt/preferences.d/no-debian-php \\\n && apt-get update \\\n && apt-get install --no-install-recommends libargon2-0 libargon2-0-dev libbz2-1.0 libbz2-dev libc-client2007e libc-client2007e-dev libcurl4-openssl-dev libedit2 libedit-dev libenchant1c2a libenchant-dev libsodium18 libsodium-dev libsqlite3-0 libsqlite3-dev libssl1.1 libssl-dev libxml2 libxml2-dev zlib1g zlib1g-dev libxslt1.1 libxslt1-dev libfreetype6 libfreetype6-dev libjpeg62-turbo libjpeg62-turbo-dev libpng16-16 libpng-dev libsasl2-2 libsasl2-dev libmemcached11 libmemcachedutil2 libmemcached-dev libpq5 libpq-dev libzip4 libzip-dev libyaml-0-2 libyaml-dev ca-certificates curl tar wget xz-utils libtidy5 libtidy-dev libxmlrpc-epi0 libxmlrpc-epi-dev libexif12 libexif-dev libgmp10 libgmp-dev libc-client2007e-dev libc-client2007e libkrb5-3 libkrb5-dev libxpm4 libxpm-dev libwebp6 libwebp-dev libldap-2.4-2 libldap2-dev libpspell-dev libmhash2 libmhash-dev libpcre3 libpcre3-dev libicu57 libicu-dev ${PHP_EXTRA_BUILD_DEPS:-} $PHPIZE_DEPS -y \\\n && mkdir -p $PHP_INI_DIR/conf.d ; mkdir -p /usr/src ; cd /usr/src ; wget -O php.tar.xz \"$PHP_URL\" \\\n && set -eux ; savedAptMark=\"$( apt-mark showmanual ;)\" ; export CFLAGS=\"$PHP_CFLAGS\" CPPFLAGS=\"$PHP_CPPFLAGS\" LDFLAGS=\"$PHP_LDFLAGS\" \\\n && docker-php-source extract ; cd /usr/src/php ; gnuArch=\"$( dpkg-architecture --query DEB_BUILD_GNU_TYPE ;)\" ; debMultiarch=\"$( dpkg-architecture --query DEB_BUILD_MULTIARCH ;)\" ; if [ ! -d /usr/include/curl ] ; then ln -sT \"/usr/include/$debMultiarch/curl\" /usr/local/include/curl ; fi ; ln -sf /usr/lib/libc-client.so.2007e.0 /usr/lib/x86_64-linux-gnu/libc-client.a ; ./configure --prefix=${PHP_PREFIX} --sysconfdir=${PHP_INI_DIR} --build=\"$gnuArch\" --with-config-file-path=\"$PHP_INI_DIR\" --with-config-file-scan-dir=\"$PHP_INI_DIR/conf.d\" --enable-fpm --with-fpm-user=nginx --with-fpm-group=nginx --disable-cgi --enable-ftp --enable-mbstring --enable-mysqlnd --with-password-argon2 --with-sodium=shared --with-curl --with-gettext --with-gd --with-freetype-dir=/usr/lib --disable-gd-jis-conv --with-jpeg-dir=/usr/lib --with-png-dir=/usr/lib --with-webp-dir=/usr/lib --with-xpm-dir=/usr/lib --with-libedit --with-openssl --with-system-ciphers --with-pcre-regex --with-pdo-mysql --with-pdo-pgsql=shared --with-xsl=shared --with-zlib --with-mhash --enable-bcmath --enable-libxml --enable-inline-optimization --enable-mbregex --enable-pcntl=shared --enable-shmop=shared --enable-soap=shared --enable-sockets=shared --enable-sysvmsg=shared --enable-sysvsem=shared --enable-sysvshm=shared --enable-xml --enable-zip --with-libzip --enable-calendar=shared --enable-intl=shared --enable-exif --with-bz2 --with-tidy --with-gmp --with-imap=shared --with-imap-ssl --with-kerberos --with-xmlrpc --with-pic --with-enchant=shared --enable-fileinfo=shared --with-ldap=shared --with-ldap-sasl --enable-phar --enable-posix=shared --with-pspell=shared --enable-shmop=shared --enable-embed=shared --with-mysqli=shared --with-pgsql=shared $( test \"$gnuArch\" = 's390x-linux-gnu' \\\n && echo '--without-pcre-jit' ;) --with-libdir=\"lib/$debMultiarch\" ${PHP_EXTRA_CONFIGURE_ARGS:-} ; make -j \"$( nproc ;)\" ; make install \\\n && rm -rf /usr/local/sbin \\\n && for file in $( ls ${PHP_PREFIX}/bin ;); do ln -sf ${PHP_PREFIX}/bin/$file /usr/local/bin/ ; done \\\n && pecl update-channels \\\n && rm -rf /tmp/pear ~/.pearrc \\\n && set -ex \\\n && cd ${PHP_INI_DIR} \\\n && if [ -d php-fpm.d ] ; then sed 's!=NONE/!=!g' php-fpm.conf.default | tee php-fpm.conf > /dev/null;cp php-fpm.d/www.conf.default php-fpm.d/www.conf ; else mkdir php-fpm.d ;cp php-fpm.conf.default php-fpm.d/www.conf ;{ echo '[global]' ;echo 'include=${PHP_INI_DIR}/php-fpm.d/*.conf' ; } | tee php-fpm.conf ; fi \\\n && cp /usr/src/php/php.ini-* ${PHP_INI_DIR} \\\n && cp ${PHP_INI_DIR}/php.ini-development ${PHP_INI_DIR}/php.ini \\\n && pecl install mongodb igbinary redis memcached xdebug yaml swoole \\\n && mkdir -p /usr/local/etc/php \\\n && ln -s ${PHP_INI_DIR}/conf.d /usr/local/etc/php/conf.d \\\n && chmod +x /usr/local/bin/wsl-php-ext-enable.sh \\\n && docker-php-ext-enable mongodb redis memcached xdebug yaml igbinary opcache swoole pdo_pgsql xsl pcntl shmop soap sockets sysvmsg sysvsem sysvshm calendar intl imap enchant fileinfo ldap posix pspell mysqli pgsql \\\n && curl -fsSL https://raw.githubusercontent.com/khs1994-docker/lnmp/master/wsl/config/php.fpm.zz-wsl.conf.example > ${PHP_INI_DIR}/php-fpm.d/zz-debian.conf \\\n && curl -s -f -L -o /tmp/installer.php https://raw.githubusercontent.com/composer/getcomposer.org/cb19f2aa3aeaa2006c0cd69a7ef011eb31463067/web/installer \\\n && php -r \" $signature = '48e3236262b34d30969dca3c37281b3b4bbe3221bda826ac6a9a62d6444cdb0dcd0615698a5cbe587c3f0fe57a54d8f5'; $hash = hash('sha384', file_get_contents('/tmp/installer.php')); if (!hash_equals($signature, $hash)) { unlink('/tmp/installer.php'); echo 'Integrity check failed, installer is either corrupt or worse.' . PHP_EOL; exit(1); }\" \\\n && php /tmp/installer.php --no-ansi --install-dir=${PHP_PREFIX}/bin --filename=composer --version=${COMPOSER_VERSION} \\\n && ${PHP_PREFIX}/bin/composer --ansi --version --no-interaction \\\n && rm -rf /tmp/* \\\n && echo 'opcache.file_cache=/tmp' >> ${PHP_INI_DIR}/conf.d/wsl-php-ext-opcache.ini \\\n && echo \"date.timezone=${PHP_TIMEZONE:-PRC}\" | tee ${PHP_INI_DIR}/conf.d/date_timezone.ini \\\n && echo \"error_log=/var/log/php${PHP_NUM}.error.log\" | tee ${PHP_INI_DIR}/conf.d/error_log.ini\n#   nginx apt\n#   apache other\n#   mysql apt\n#   mariadb apt\n#   redis\nCOPY --from=redis:5.0.5 /usr/local/bin/redis-* ${PHP_PREFIX}/bin/\n#   memcached\nCOPY --from=memcached:1.5.6 /usr/local/bin/memcached ${PHP_PREFIX}/bin/\n#   rabbitmq apt\n#   postgresql apt\n#   mongodb\n#   phpmyadmin\nRUN cd /usr/local ; tar -zcvf php73.tar.gz php73 ; cd etc ; tar -zcvf php73-etc.tar.gz php73 \\\n && for ext in $( ls /usr/src/php/ext ;); do echo '*' $( php -r \"if(extension_loaded('$ext')){echo '[x] $ext';}else{echo '[ ] $ext';}\" ;) ; done \\\n && php -v \\\n && php -i | grep \".ini\" \\\n && ${PHP_PREFIX}/sbin/php-fpm -v\nFROM hello-world:latest\n#   scratch\nLABEL maintainer=\"khs1994-docker/lnmp <khs1994@khs1994.com>\"\nCOPY --from=0 /usr/local/php73.tar.gz /\nCOPY --from=0 /usr/local/etc/php73-etc.tar.gz /\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM debian:stretch-slim\n# ###############################################################################\nARG PHP_VERSION=7.3.6\nARG PHP_NUM=73\nARG PHP_PREFIX=/usr/local/php73\nARG PHP_INI_DIR=/usr/local/etc/php73\nARG COMPOSER_VERSION=1.8.5\nENV COMPOSER_ALLOW_SUPERUSER=\"1\"\nENV COMPOSER_HOME=\"/tmp\"\nENV TZ=\"Asia/Shanghai\"\n# ###############################################################################\nARG DEB_URL=deb.debian.org\n#  mirrors.ustc.edu.cn\nARG DEB_SECURITY_URL=security.debian.org\n#  mirrors.ustc.edu.cn/debian-security/\nCOPY --from=php /usr/local/bin/docker-php-source /usr/local/bin/\nCOPY --from=php /usr/local/bin/docker-php-ext-* /usr/local/bin/docker-php-entrypoint /usr/local/bin/\nCOPY wsl-php-ext-enable.sh /usr/local/bin/wsl-php-ext-enable.sh\nENV PHP_CFLAGS=\"-fstack-protector-strong -fpic -fpie -O2\"\nENV PHP_CPPFLAGS=\"$PHP_CFLAGS\"\nENV PHP_LDFLAGS=\"-Wl,-O1 -Wl,--hash-style=both -pie\"\nENV PHP_URL=\"https://secure.php.net/get/php-${PHP_VERSION}.tar.xz/from/this/mirror\"\nENV PHPIZE_DEPS=\"autoconf  dpkg-dev  file  g++  gcc  libc-dev  make  pkg-config  re2c\"\nRUN sed -i \"s!deb.debian.org!${DEB_URL}!g\" /etc/apt/sources.list \\\n && sed -i \"s!security.debian.org!${DEB_SECURITY_URL}!g\" /etc/apt/sources.list \\\n && set -eux ; { echo 'Package: php*' ;echo 'Pin: release *' ;echo 'Pin-Priority: -1' ; } > /etc/apt/preferences.d/no-debian-php \\\n && apt-get update \\\n && apt-get install --no-install-recommends libargon2-0 libargon2-0-dev libbz2-1.0 libbz2-dev libc-client2007e libc-client2007e-dev libcurl4-openssl-dev libedit2 libedit-dev libenchant1c2a libenchant-dev libsodium18 libsodium-dev libsqlite3-0 libsqlite3-dev libssl1.1 libssl-dev libxml2 libxml2-dev zlib1g zlib1g-dev libxslt1.1 libxslt1-dev libfreetype6 libfreetype6-dev libjpeg62-turbo libjpeg62-turbo-dev libpng16-16 libpng-dev libsasl2-2 libsasl2-dev libmemcached11 libmemcachedutil2 libmemcached-dev libpq5 libpq-dev libzip4 libzip-dev libyaml-0-2 libyaml-dev ca-certificates curl tar wget xz-utils libtidy5 libtidy-dev libxmlrpc-epi0 libxmlrpc-epi-dev libexif12 libexif-dev libgmp10 libgmp-dev libc-client2007e-dev libc-client2007e libkrb5-3 libkrb5-dev libxpm4 libxpm-dev libwebp6 libwebp-dev libldap-2.4-2 libldap2-dev libpspell-dev libmhash2 libmhash-dev libpcre3 libpcre3-dev libicu57 libicu-dev ${PHP_EXTRA_BUILD_DEPS:-} $PHPIZE_DEPS -y \\\n && mkdir -p $PHP_INI_DIR/conf.d ; mkdir -p /usr/src ; cd /usr/src ; wget -O php.tar.xz \"$PHP_URL\" \\\n && set -eux ; savedAptMark=\"$( apt-mark showmanual ;)\" ; export CFLAGS=\"$PHP_CFLAGS\" CPPFLAGS=\"$PHP_CPPFLAGS\" LDFLAGS=\"$PHP_LDFLAGS\" \\\n && docker-php-source extract ; cd /usr/src/php ; gnuArch=\"$( dpkg-architecture --query DEB_BUILD_GNU_TYPE ;)\" ; debMultiarch=\"$( dpkg-architecture --query DEB_BUILD_MULTIARCH ;)\" ; if [ ! -d /usr/include/curl ] ; then ln -sT \"/usr/include/$debMultiarch/curl\" /usr/local/include/curl ; fi ; ln -sf /usr/lib/libc-client.so.2007e.0 /usr/lib/x86_64-linux-gnu/libc-client.a ; ./configure --prefix=${PHP_PREFIX} --sysconfdir=${PHP_INI_DIR} --build=\"$gnuArch\" --with-config-file-path=\"$PHP_INI_DIR\" --with-config-file-scan-dir=\"$PHP_INI_DIR/conf.d\" --enable-fpm --with-fpm-user=nginx --with-fpm-group=nginx --disable-cgi --enable-ftp --enable-mbstring --enable-mysqlnd --with-password-argon2 --with-sodium=shared --with-curl --with-gettext --with-gd --with-freetype-dir=/usr/lib --disable-gd-jis-conv --with-jpeg-dir=/usr/lib --with-png-dir=/usr/lib --with-webp-dir=/usr/lib --with-xpm-dir=/usr/lib --with-libedit --with-openssl --with-system-ciphers --with-pcre-regex --with-pdo-mysql --with-pdo-pgsql=shared --with-xsl=shared --with-zlib --with-mhash --enable-bcmath --enable-libxml --enable-inline-optimization --enable-mbregex --enable-pcntl=shared --enable-shmop=shared --enable-soap=shared --enable-sockets=shared --enable-sysvmsg=shared --enable-sysvsem=shared --enable-sysvshm=shared --enable-xml --enable-zip --with-libzip --enable-calendar=shared --enable-intl=shared --enable-exif --with-bz2 --with-tidy --with-gmp --with-imap=shared --with-imap-ssl --with-kerberos --with-xmlrpc --with-pic --with-enchant=shared --enable-fileinfo=shared --with-ldap=shared --with-ldap-sasl --enable-phar --enable-posix=shared --with-pspell=shared --enable-shmop=shared --enable-embed=shared --with-mysqli=shared --with-pgsql=shared $( test \"$gnuArch\" = 's390x-linux-gnu' \\\n && echo '--without-pcre-jit' ;) --with-libdir=\"lib/$debMultiarch\" ${PHP_EXTRA_CONFIGURE_ARGS:-} ; make -j \"$( nproc ;)\" ; make install \\\n && rm -rf /usr/local/sbin \\\n && for file in $( ls ${PHP_PREFIX}/bin ;); do ln -sf ${PHP_PREFIX}/bin/$file /usr/local/bin/ ; done \\\n && pecl update-channels \\\n && rm -rf /tmp/pear ~/.pearrc \\\n && set -ex \\\n && cd ${PHP_INI_DIR} \\\n && if [ -d php-fpm.d ] ; then sed 's!=NONE/!=!g' php-fpm.conf.default | tee php-fpm.conf > /dev/null;cp php-fpm.d/www.conf.default php-fpm.d/www.conf ; else mkdir php-fpm.d ;cp php-fpm.conf.default php-fpm.d/www.conf ;{ echo '[global]' ;echo 'include=${PHP_INI_DIR}/php-fpm.d/*.conf' ; } | tee php-fpm.conf ; fi \\\n && cp /usr/src/php/php.ini-* ${PHP_INI_DIR} \\\n && cp ${PHP_INI_DIR}/php.ini-development ${PHP_INI_DIR}/php.ini \\\n && pecl install mongodb igbinary redis memcached xdebug yaml swoole \\\n && mkdir -p /usr/local/etc/php \\\n && ln -s ${PHP_INI_DIR}/conf.d /usr/local/etc/php/conf.d \\\n && chmod +x /usr/local/bin/wsl-php-ext-enable.sh \\\n && docker-php-ext-enable mongodb redis memcached xdebug yaml igbinary opcache swoole pdo_pgsql xsl pcntl shmop soap sockets sysvmsg sysvsem sysvshm calendar intl imap enchant fileinfo ldap posix pspell mysqli pgsql \\\n && curl -fsSL https://raw.githubusercontent.com/khs1994-docker/lnmp/master/wsl/config/php.fpm.zz-wsl.conf.example > ${PHP_INI_DIR}/php-fpm.d/zz-debian.conf \\\n && curl -s -f -L -o /tmp/installer.php https://raw.githubusercontent.com/composer/getcomposer.org/cb19f2aa3aeaa2006c0cd69a7ef011eb31463067/web/installer \\\n && php -r \" $signature = '48e3236262b34d30969dca3c37281b3b4bbe3221bda826ac6a9a62d6444cdb0dcd0615698a5cbe587c3f0fe57a54d8f5'; $hash = hash('sha384', file_get_contents('/tmp/installer.php')); if (!hash_equals($signature, $hash)) { unlink('/tmp/installer.php'); echo 'Integrity check failed, installer is either corrupt or worse.' . PHP_EOL; exit(1); }\" \\\n && php /tmp/installer.php --no-ansi --install-dir=${PHP_PREFIX}/bin --filename=composer --version=${COMPOSER_VERSION} \\\n && ${PHP_PREFIX}/bin/composer --ansi --version --no-interaction \\\n && rm -rf /tmp/* \\\n && echo 'opcache.file_cache=/tmp' >> ${PHP_INI_DIR}/conf.d/wsl-php-ext-opcache.ini \\\n && echo \"date.timezone=${PHP_TIMEZONE:-PRC}\" | tee ${PHP_INI_DIR}/conf.d/date_timezone.ini \\\n && echo \"error_log=/var/log/php${PHP_NUM}.error.log\" | tee ${PHP_INI_DIR}/conf.d/error_log.ini\n#  nginx apt\n#  apache other\n#  mysql apt\n#  mariadb apt\n#  redis\nCOPY --from=redis:5.0.5 /usr/local/bin/redis-* ${PHP_PREFIX}/bin/\n#  memcached\nCOPY --from=memcached:1.5.6 /usr/local/bin/memcached ${PHP_PREFIX}/bin/\n#  rabbitmq apt\n#  postgresql apt\n#  mongodb\n#  phpmyadmin\nRUN cd /usr/local ; tar -zcvf php73.tar.gz php73 ; cd etc ; tar -zcvf php73-etc.tar.gz php73 \\\n && for ext in $( ls /usr/src/php/ext ;); do echo '*' $( php -r \"if(extension_loaded('$ext')){echo '[x] $ext';}else{echo '[ ] $ext';}\" ;) ; done \\\n && php -v \\\n && php -i | grep \".ini\" \\\n && ${PHP_PREFIX}/sbin/php-fpm -v\nFROM hello-world:latest\n#  scratch\nLABEL maintainer=\"khs1994-docker/lnmp <khs1994@khs1994.com>\"\nCOPY --from=0 /usr/local/php73.tar.gz /\nCOPY --from=0 /usr/local/etc/php73-etc.tar.gz /\n","injectedSmells":[],"originalDockerfileHash":"540e79a5b1533019a0e6915096b4cb87","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM debian:stretch-slim\n#  ###############################################################################\nARG PHP_VERSION=7.3.6\nARG PHP_NUM=73\nARG PHP_PREFIX=/usr/local/php73\nARG PHP_INI_DIR=/usr/local/etc/php73\nARG COMPOSER_VERSION=1.8.5\nENV COMPOSER_ALLOW_SUPERUSER=\"1\"\nENV COMPOSER_HOME=\"/tmp\"\nENV TZ=\"Asia/Shanghai\"\n#  ###############################################################################\nARG DEB_URL=deb.debian.org\n#   mirrors.ustc.edu.cn\nARG DEB_SECURITY_URL=security.debian.org\n#   mirrors.ustc.edu.cn/debian-security/\nCOPY --from=php /usr/local/bin/docker-php-source /usr/local/bin/\nCOPY --from=php /usr/local/bin/docker-php-ext-* /usr/local/bin/docker-php-entrypoint /usr/local/bin/\nCOPY wsl-php-ext-enable.sh /usr/local/bin/wsl-php-ext-enable.sh\nENV PHP_CFLAGS=\"-fstack-protector-strong -fpic -fpie -O2\"\nENV PHP_CPPFLAGS=\"$PHP_CFLAGS\"\nENV PHP_LDFLAGS=\"-Wl,-O1 -Wl,--hash-style=both -pie\"\nENV PHP_URL=\"https://secure.php.net/get/php-${PHP_VERSION}.tar.xz/from/this/mirror\"\nENV PHPIZE_DEPS=\"autoconf  dpkg-dev  file  g++  gcc  libc-dev  make  pkg-config  re2c\"\nRUN sed -i \"s!deb.debian.org!${DEB_URL}!g\" /etc/apt/sources.list \\\n && sed -i \"s!security.debian.org!${DEB_SECURITY_URL}!g\" /etc/apt/sources.list \\\n && set -eux ; { echo 'Package: php*' ;echo 'Pin: release *' ;echo 'Pin-Priority: -1' ; } > /etc/apt/preferences.d/no-debian-php \\\n && apt-get update \\\n && apt-get install --no-install-recommends libargon2-0 libargon2-0-dev libbz2-1.0 libbz2-dev libc-client2007e libc-client2007e-dev libcurl4-openssl-dev libedit2 libedit-dev libenchant1c2a libenchant-dev libsodium18 libsodium-dev libsqlite3-0 libsqlite3-dev libssl1.1 libssl-dev libxml2 libxml2-dev zlib1g zlib1g-dev libxslt1.1 libxslt1-dev libfreetype6 libfreetype6-dev libjpeg62-turbo libjpeg62-turbo-dev libpng16-16 libpng-dev libsasl2-2 libsasl2-dev libmemcached11 libmemcachedutil2 libmemcached-dev libpq5 libpq-dev libzip4 libzip-dev libyaml-0-2 libyaml-dev ca-certificates curl tar wget xz-utils libtidy5 libtidy-dev libxmlrpc-epi0 libxmlrpc-epi-dev libexif12 libexif-dev libgmp10 libgmp-dev libc-client2007e-dev libc-client2007e libkrb5-3 libkrb5-dev libxpm4 libxpm-dev libwebp6 libwebp-dev libldap-2.4-2 libldap2-dev libpspell-dev libmhash2 libmhash-dev libpcre3 libpcre3-dev libicu57 libicu-dev ${PHP_EXTRA_BUILD_DEPS:-} $PHPIZE_DEPS -y \\\n && mkdir -p $PHP_INI_DIR/conf.d ; mkdir -p /usr/src ; cd /usr/src ; wget -O php.tar.xz \"$PHP_URL\" \\\n && set -eux ; savedAptMark=\"$( apt-mark showmanual ;)\" ; export CFLAGS=\"$PHP_CFLAGS\" CPPFLAGS=\"$PHP_CPPFLAGS\" LDFLAGS=\"$PHP_LDFLAGS\" \\\n && docker-php-source extract ; cd /usr/src/php ; gnuArch=\"$( dpkg-architecture --query DEB_BUILD_GNU_TYPE ;)\" ; debMultiarch=\"$( dpkg-architecture --query DEB_BUILD_MULTIARCH ;)\" ; if [ ! -d /usr/include/curl ] ; then ln -sT \"/usr/include/$debMultiarch/curl\" /usr/local/include/curl ; fi ; ln -sf /usr/lib/libc-client.so.2007e.0 /usr/lib/x86_64-linux-gnu/libc-client.a ; ./configure --prefix=${PHP_PREFIX} --sysconfdir=${PHP_INI_DIR} --build=\"$gnuArch\" --with-config-file-path=\"$PHP_INI_DIR\" --with-config-file-scan-dir=\"$PHP_INI_DIR/conf.d\" --enable-fpm --with-fpm-user=nginx --with-fpm-group=nginx --disable-cgi --enable-ftp --enable-mbstring --enable-mysqlnd --with-password-argon2 --with-sodium=shared --with-curl --with-gettext --with-gd --with-freetype-dir=/usr/lib --disable-gd-jis-conv --with-jpeg-dir=/usr/lib --with-png-dir=/usr/lib --with-webp-dir=/usr/lib --with-xpm-dir=/usr/lib --with-libedit --with-openssl --with-system-ciphers --with-pcre-regex --with-pdo-mysql --with-pdo-pgsql=shared --with-xsl=shared --with-zlib --with-mhash --enable-bcmath --enable-libxml --enable-inline-optimization --enable-mbregex --enable-pcntl=shared --enable-shmop=shared --enable-soap=shared --enable-sockets=shared --enable-sysvmsg=shared --enable-sysvsem=shared --enable-sysvshm=shared --enable-xml --enable-zip --with-libzip --enable-calendar=shared --enable-intl=shared --enable-exif --with-bz2 --with-tidy --with-gmp --with-imap=shared --with-imap-ssl --with-kerberos --with-xmlrpc --with-pic --with-enchant=shared --enable-fileinfo=shared --with-ldap=shared --with-ldap-sasl --enable-phar --enable-posix=shared --with-pspell=shared --enable-shmop=shared --enable-embed=shared --with-mysqli=shared --with-pgsql=shared $( test \"$gnuArch\" = 's390x-linux-gnu' \\\n && echo '--without-pcre-jit' ;) --with-libdir=\"lib/$debMultiarch\" ${PHP_EXTRA_CONFIGURE_ARGS:-} ; make -j \"$( nproc ;)\" ; make install \\\n && rm -rf /usr/local/sbin \\\n && for file in $( ls ${PHP_PREFIX}/bin ;); do ln -sf ${PHP_PREFIX}/bin/$file /usr/local/bin/ ; done \\\n && pecl update-channels \\\n && rm -rf /tmp/pear ~/.pearrc \\\n && set -ex \\\n && cd ${PHP_INI_DIR} \\\n && if [ -d php-fpm.d ] ; then sed 's!=NONE/!=!g' php-fpm.conf.default | tee php-fpm.conf > /dev/null;cp php-fpm.d/www.conf.default php-fpm.d/www.conf ; else mkdir php-fpm.d ;cp php-fpm.conf.default php-fpm.d/www.conf ;{ echo '[global]' ;echo 'include=${PHP_INI_DIR}/php-fpm.d/*.conf' ; } | tee php-fpm.conf ; fi \\\n && cp /usr/src/php/php.ini-* ${PHP_INI_DIR} \\\n && cp ${PHP_INI_DIR}/php.ini-development ${PHP_INI_DIR}/php.ini \\\n && pecl install mongodb igbinary redis memcached xdebug yaml swoole \\\n && mkdir -p /usr/local/etc/php \\\n && ln -s ${PHP_INI_DIR}/conf.d /usr/local/etc/php/conf.d \\\n && chmod +x /usr/local/bin/wsl-php-ext-enable.sh \\\n && docker-php-ext-enable mongodb redis memcached xdebug yaml igbinary opcache swoole pdo_pgsql xsl pcntl shmop soap sockets sysvmsg sysvsem sysvshm calendar intl imap enchant fileinfo ldap posix pspell mysqli pgsql \\\n && curl -fsSL https://raw.githubusercontent.com/khs1994-docker/lnmp/master/wsl/config/php.fpm.zz-wsl.conf.example > ${PHP_INI_DIR}/php-fpm.d/zz-debian.conf \\\n && curl -s -f -L -o /tmp/installer.php https://raw.githubusercontent.com/composer/getcomposer.org/cb19f2aa3aeaa2006c0cd69a7ef011eb31463067/web/installer \\\n && php -r \" $signature = '48e3236262b34d30969dca3c37281b3b4bbe3221bda826ac6a9a62d6444cdb0dcd0615698a5cbe587c3f0fe57a54d8f5'; $hash = hash('sha384', file_get_contents('/tmp/installer.php')); if (!hash_equals($signature, $hash)) { unlink('/tmp/installer.php'); echo 'Integrity check failed, installer is either corrupt or worse.' . PHP_EOL; exit(1); }\" \\\n && php /tmp/installer.php --no-ansi --install-dir=${PHP_PREFIX}/bin --filename=composer --version=${COMPOSER_VERSION} \\\n && ${PHP_PREFIX}/bin/composer --ansi --version --no-interaction \\\n && rm -rf /tmp/* \\\n && echo 'opcache.file_cache=/tmp' >> ${PHP_INI_DIR}/conf.d/wsl-php-ext-opcache.ini \\\n && echo \"date.timezone=${PHP_TIMEZONE:-PRC}\" | tee ${PHP_INI_DIR}/conf.d/date_timezone.ini \\\n && echo \"error_log=/var/log/php${PHP_NUM}.error.log\" | tee ${PHP_INI_DIR}/conf.d/error_log.ini\n#   nginx apt\n#   apache other\n#   mysql apt\n#   mariadb apt\n#   redis\nCOPY --from=redis:5.0.5 /usr/local/bin/redis-* ${PHP_PREFIX}/bin/\n#   memcached\nCOPY --from=memcached:1.5.6 /usr/local/bin/memcached ${PHP_PREFIX}/bin/\n#   rabbitmq apt\n#   postgresql apt\n#   mongodb\n#   phpmyadmin\nRUN cd /usr/local ; tar -zcvf php73.tar.gz php73 ; cd etc ; tar -zcvf php73-etc.tar.gz php73 \\\n && for ext in $( ls /usr/src/php/ext ;); do echo '*' $( php -r \"if(extension_loaded('$ext')){echo '[x] $ext';}else{echo '[ ] $ext';}\" ;) ; done \\\n && php -v \\\n && php -i | grep \".ini\" \\\n && ${PHP_PREFIX}/sbin/php-fpm -v\nFROM hello-world:latest\n#   scratch\nLABEL maintainer=\"khs1994-docker/lnmp <khs1994@khs1994.com>\"\nCOPY --from=0 /usr/local/php73.tar.gz /\nCOPY --from=0 /usr/local/etc/php73-etc.tar.gz /\n","originalDockerfileUglifiedHash":"7ea4ebc90f31f51ba96662ba2e761e30","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/881bad61437e636ead7204bf7f5b1640fbc58523.dockerfile"}