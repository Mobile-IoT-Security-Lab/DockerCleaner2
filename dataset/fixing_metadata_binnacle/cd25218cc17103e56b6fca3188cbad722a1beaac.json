{"seed":1641165423,"processedDockerfileHash":"8f89aacba635279940963c7ca9842609","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["have-a-healthcheck","have-a-user"],"processedDockerfile":"#  ###\n#   Dockerfile for nshmp-haz.\n#\n#   Usage:\n#     docker run \\\n#         -e PROGRAM=<deagg | deagg-epsilon | deagg-iml | hazard | hazard-2018 | rate> \\\n#         -e MODEL=<WUS-20[08|14|18] | CEUS-20[08|14|18] | COUS-20[08|14|18] | AK-2007> \\\n#         -e ACCESS_VISUALVM=<true | false> \\\n#         -e VISUALVM_PORT=<port> \\\n#         -e VISUALVM_HOSTNAME=<hostname> \\\n#         -v /absolute/path/to/sites/file:/app/sites.<geojson | csv> \\\n#         -v /absolute/path/to/config/file:/app/config.json \\\n#         -v /absolute/path/to/output:/app/output \\\n#         usgs/nshmp-haz\n#\n#   Usage with custom model:\n#     docker run \\\n#         -e PROGRAM=<deagg | deagg-epsilon | deagg-iml | hazard | hazard-2018 | rate> \\\n#         -e ACCESS_VISUALVM=<true | false> \\\n#         -e VISUALVM_PORT=<port> \\\n#         -e VISUALVM_HOSTNAME=<hostname> \\\n#         -e MOUNT_MODEL=true \\\n#         -v /absolute/path/to/model:/app/model \\\n#         -v /absolute/path/to/sites/file:/app/sites.<geojson | csv> \\\n#         -v /absolute/path/to/config/file:/app/config.json \\\n#         -v /absolute/path/to/output:/app/output \\\n#         usgs/nshmp-haz\n#\n#   Note: Models load as requested. While all supported models are\n#   available, requesting them all will eventually result in an\n#   OutOfMemoryError. Increase -Xmx to -Xmx16g or -Xmx24g, if available.\n#  ###\n#   Project\nARG project=nshmp-haz\n#   Builder image working directory\nARG builder_workdir=/app/${project}\n#   Path to JAR file in builder image\nARG jar_path=${builder_workdir}/build/libs/${project}.jar\n#  ###\n#   Builder Image: Java 8 in usgsnshmp/centos image\n#     - Install git\n#     - Build nshmp-haz\n#  ###\nFROM usgsnshmp/openjdk:jdk8 AS builder\n#   Get builder workdir\nARG builder_workdir\n#   Set working directory\nWORKDIR ${builder_workdir} \n#   Copy project over to container\nCOPY . ${builder_workdir}/.\n#   Install git\nRUN yum install -y git\n#   Build nshmp-haz\nRUN ./gradlew assemble\n#  ###\n#   Application Image: Java 8 in usgsnshmp/centos image\n#     - Install jq\n#     - Copy JAR file from builder image\n#     - Download model\n#     - Run nshmp-haz (docker-entrypoint.sh)\n#  ###\nFROM usgsnshmp/openjdk:jdk8\n#   Set author\nLABEL maintainer=\"Peter Powers <pmpowers@usgs.gov>\"\n#   Set working directory\nWORKDIR /app\n#   Install file and jq\nRUN yum install -y add file epel-release\nRUN yum install -y jq\n#   Get JAR path\nARG jar_path\n#   Get builder working directory\nARG builder_workdir\n#   Copy JAR file from builder image\nCOPY --from=builder ${jar_path} .\n#   Copy entrypoint script\nCOPY docker-entrypoint.sh .\n#   NSHM repository version\nENV NSHM_VERSION=\"master\"\n#   Set Java memory\nENV JAVA_XMS=\"8g\"\nENV JAVA_XMX=\"8g\"\n#   NSHM\nENV MODEL=\"\\\"\n#   Whether to mount the model instead of selecting a model\nENV MOUNT_MODEL=\"false\"\n#   Program to run: deagg | deagg-epsilon | hazard | rate\nENV PROGRAM=\"hazard\"\n#   Return period for deagg\nENV RETURN_PERIOD=\"\\\"\n#   Intensity measure level (in units of g) for deagg-iml\nENV IML=\"\\\"\n#   Optional config file\nENV CONFIG_FILE=\"\\\"config.json\\\"\"\n#   Whether to have access to Java VisualVM\nENV ACCESS_VISUALVM=\"false\"\n#   Port for Java VisualVM\nENV VISUALVM_PORT=\"9090\"\n#   Java VisualVM hostname\nENV VISUALVM_HOSTNAME=\"localhost\"\n#   Set volume for output\nVOLUME [ \"/app/output\" ]\n#   Create empty config file\nRUN echo \"{}\" > ${CONFIG_FILE}\n#   Run nshmp-haz\nENTRYPOINT [\"bash\", \"docker-entrypoint.sh\"]\n#   Expose Java VisualVM port\nEXPOSE ${VISUALVM_PORT}\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"# ###\n#  Dockerfile for nshmp-haz.\n#\n#  Usage:\n#    docker run \\\n#        -e PROGRAM=<deagg | deagg-epsilon | deagg-iml | hazard | hazard-2018 | rate> \\\n#        -e MODEL=<WUS-20[08|14|18] | CEUS-20[08|14|18] | COUS-20[08|14|18] | AK-2007> \\\n#        -e ACCESS_VISUALVM=<true | false> \\\n#        -e VISUALVM_PORT=<port> \\\n#        -e VISUALVM_HOSTNAME=<hostname> \\\n#        -v /absolute/path/to/sites/file:/app/sites.<geojson | csv> \\\n#        -v /absolute/path/to/config/file:/app/config.json \\\n#        -v /absolute/path/to/output:/app/output \\\n#        usgs/nshmp-haz\n#\n#  Usage with custom model:\n#    docker run \\\n#        -e PROGRAM=<deagg | deagg-epsilon | deagg-iml | hazard | hazard-2018 | rate> \\\n#        -e ACCESS_VISUALVM=<true | false> \\\n#        -e VISUALVM_PORT=<port> \\\n#        -e VISUALVM_HOSTNAME=<hostname> \\\n#        -e MOUNT_MODEL=true \\\n#        -v /absolute/path/to/model:/app/model \\\n#        -v /absolute/path/to/sites/file:/app/sites.<geojson | csv> \\\n#        -v /absolute/path/to/config/file:/app/config.json \\\n#        -v /absolute/path/to/output:/app/output \\\n#        usgs/nshmp-haz\n#\n#  Note: Models load as requested. While all supported models are\n#  available, requesting them all will eventually result in an\n#  OutOfMemoryError. Increase -Xmx to -Xmx16g or -Xmx24g, if available.\n# ###\n#  Project\nARG project=nshmp-haz\n#  Builder image working directory\nARG builder_workdir=/app/${project}\n#  Path to JAR file in builder image\nARG jar_path=${builder_workdir}/build/libs/${project}.jar\n# ###\n#  Builder Image: Java 8 in usgsnshmp/centos image\n#    - Install git\n#    - Build nshmp-haz\n# ###\nFROM usgsnshmp/openjdk:jdk8 AS builder\n#  Get builder workdir\nARG builder_workdir\n#  Set working directory\nWORKDIR ${builder_workdir} \n#  Copy project over to container\nCOPY . ${builder_workdir}/.\n#  Install git\nRUN yum install -y git\n#  Build nshmp-haz\nRUN ./gradlew assemble\n# ###\n#  Application Image: Java 8 in usgsnshmp/centos image\n#    - Install jq\n#    - Copy JAR file from builder image\n#    - Download model\n#    - Run nshmp-haz (docker-entrypoint.sh)\n# ###\nFROM usgsnshmp/openjdk:jdk8\n#  Set author\nLABEL maintainer=\"Peter Powers <pmpowers@usgs.gov>\"\n#  Set working directory\nWORKDIR /app\n#  Install file and jq\nRUN yum install -y add file epel-release\nRUN yum install -y jq\n#  Get JAR path\nARG jar_path\n#  Get builder working directory\nARG builder_workdir\n#  Copy JAR file from builder image\nCOPY --from=builder ${jar_path} .\n#  Copy entrypoint script\nCOPY docker-entrypoint.sh .\n#  NSHM repository version\nENV NSHM_VERSION=\"master\"\n#  Set Java memory\nENV JAVA_XMS=\"8g\"\nENV JAVA_XMX=\"8g\"\n#  NSHM\nENV MODEL=\"\"\\\"\"\n#  Whether to mount the model instead of selecting a model\nENV MOUNT_MODEL=\"false\"\n#  Program to run: deagg | deagg-epsilon | hazard | rate\nENV PROGRAM=\"hazard\"\n#  Return period for deagg\nENV RETURN_PERIOD=\"\"\\\"\"\n#  Intensity measure level (in units of g) for deagg-iml\nENV IML=\"\"\\\"\"\n#  Optional config file\nENV CONFIG_FILE=\"\\\"config.json\\\"\"\n#  Whether to have access to Java VisualVM\nENV ACCESS_VISUALVM=\"false\"\n#  Port for Java VisualVM\nENV VISUALVM_PORT=\"9090\"\n#  Java VisualVM hostname\nENV VISUALVM_HOSTNAME=\"localhost\"\n#  Set volume for output\nVOLUME [ \"/app/output\" ]\n#  Create empty config file\nRUN echo \"{}\" > ${CONFIG_FILE}\n#  Run nshmp-haz\nENTRYPOINT [\"bash\", \"docker-entrypoint.sh\"]\n#  Expose Java VisualVM port\nEXPOSE ${VISUALVM_PORT}\n","injectedSmells":[],"originalDockerfileHash":"0886102d03a1a18f20e4efcc61d2326f","successfullyInjectedSmells":[],"originalDockerfileUglified":"#  ###\n#   Dockerfile for nshmp-haz.\n#\n#   Usage:\n#     docker run \\\n#         -e PROGRAM=<deagg | deagg-epsilon | deagg-iml | hazard | hazard-2018 | rate> \\\n#         -e MODEL=<WUS-20[08|14|18] | CEUS-20[08|14|18] | COUS-20[08|14|18] | AK-2007> \\\n#         -e ACCESS_VISUALVM=<true | false> \\\n#         -e VISUALVM_PORT=<port> \\\n#         -e VISUALVM_HOSTNAME=<hostname> \\\n#         -v /absolute/path/to/sites/file:/app/sites.<geojson | csv> \\\n#         -v /absolute/path/to/config/file:/app/config.json \\\n#         -v /absolute/path/to/output:/app/output \\\n#         usgs/nshmp-haz\n#\n#   Usage with custom model:\n#     docker run \\\n#         -e PROGRAM=<deagg | deagg-epsilon | deagg-iml | hazard | hazard-2018 | rate> \\\n#         -e ACCESS_VISUALVM=<true | false> \\\n#         -e VISUALVM_PORT=<port> \\\n#         -e VISUALVM_HOSTNAME=<hostname> \\\n#         -e MOUNT_MODEL=true \\\n#         -v /absolute/path/to/model:/app/model \\\n#         -v /absolute/path/to/sites/file:/app/sites.<geojson | csv> \\\n#         -v /absolute/path/to/config/file:/app/config.json \\\n#         -v /absolute/path/to/output:/app/output \\\n#         usgs/nshmp-haz\n#\n#   Note: Models load as requested. While all supported models are\n#   available, requesting them all will eventually result in an\n#   OutOfMemoryError. Increase -Xmx to -Xmx16g or -Xmx24g, if available.\n#  ###\n#   Project\nARG project=nshmp-haz\n#   Builder image working directory\nARG builder_workdir=/app/${project}\n#   Path to JAR file in builder image\nARG jar_path=${builder_workdir}/build/libs/${project}.jar\n#  ###\n#   Builder Image: Java 8 in usgsnshmp/centos image\n#     - Install git\n#     - Build nshmp-haz\n#  ###\nFROM usgsnshmp/openjdk:jdk8 AS builder\n#   Get builder workdir\nARG builder_workdir\n#   Set working directory\nWORKDIR ${builder_workdir} \n#   Copy project over to container\nCOPY . ${builder_workdir}/.\n#   Install git\nRUN yum install -y git\n#   Build nshmp-haz\nRUN ./gradlew assemble\n#  ###\n#   Application Image: Java 8 in usgsnshmp/centos image\n#     - Install jq\n#     - Copy JAR file from builder image\n#     - Download model\n#     - Run nshmp-haz (docker-entrypoint.sh)\n#  ###\nFROM usgsnshmp/openjdk:jdk8\n#   Set author\nLABEL maintainer=\"Peter Powers <pmpowers@usgs.gov>\"\n#   Set working directory\nWORKDIR /app\n#   Install file and jq\nRUN yum install -y add file epel-release\nRUN yum install -y jq\n#   Get JAR path\nARG jar_path\n#   Get builder working directory\nARG builder_workdir\n#   Copy JAR file from builder image\nCOPY --from=builder ${jar_path} .\n#   Copy entrypoint script\nCOPY docker-entrypoint.sh .\n#   NSHM repository version\nENV NSHM_VERSION=\"master\"\n#   Set Java memory\nENV JAVA_XMS=\"8g\"\nENV JAVA_XMX=\"8g\"\n#   NSHM\nENV MODEL=\"\\\"\n#   Whether to mount the model instead of selecting a model\nENV MOUNT_MODEL=\"false\"\n#   Program to run: deagg | deagg-epsilon | hazard | rate\nENV PROGRAM=\"hazard\"\n#   Return period for deagg\nENV RETURN_PERIOD=\"\\\"\n#   Intensity measure level (in units of g) for deagg-iml\nENV IML=\"\\\"\n#   Optional config file\nENV CONFIG_FILE=\"\\\"config.json\\\"\"\n#   Whether to have access to Java VisualVM\nENV ACCESS_VISUALVM=\"false\"\n#   Port for Java VisualVM\nENV VISUALVM_PORT=\"9090\"\n#   Java VisualVM hostname\nENV VISUALVM_HOSTNAME=\"localhost\"\n#   Set volume for output\nVOLUME [ \"/app/output\" ]\n#   Create empty config file\nRUN echo \"{}\" > ${CONFIG_FILE}\n#   Run nshmp-haz\nENTRYPOINT [\"bash\", \"docker-entrypoint.sh\"]\n#   Expose Java VisualVM port\nEXPOSE ${VISUALVM_PORT}\n","originalDockerfileUglifiedHash":"90df47bffcae9ec0a935d188cd7c9795","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/cd25218cc17103e56b6fca3188cbad722a1beaac.dockerfile"}