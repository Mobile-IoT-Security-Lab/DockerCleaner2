{"seed":3897531507,"processedDockerfileHash":"f1f6fcbf55cb284b64493df165a5ec90","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","use-copy-instead-of-add","have-a-healthcheck"],"processedDockerfile":"#   This Dockerfile is used to build an headles vnc image based on Ubuntu\nFROM ubuntu:16.04\nMAINTAINER 若虚 <slpcat@qq.com>\n#   Container variables\nENV TERM=\"xterm\" \\\n    LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US.UTF-8\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    TIMEZONE=\"Asia/Shanghai\"\nRUN sed -i 's/archive.ubuntu.com/mirrors.aliyun.com/' /etc/apt/sources.list \\\n && sed -i 's/security.ubuntu.com/mirrors.aliyun.com/' /etc/apt/sources.list\nRUN apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends locales=2.23-0ubuntu11.3 wget=1.17.1-1ubuntu1.5 -y ) \\\n && rm -rf /var/lib/apt/lists/* \\\n && localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8\n#   Set timezone and locales\nRUN echo \"${TIMEZONE}\" > /etc/timezone \\\n && echo \"$LANG UTF-8\" > /etc/locale.gen \\\n && : \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -yq apt-utils dialog tzdata \\\n && ln -sf /usr/share/zoneinfo/${TIMEZONE} /etc/localtime \\\n && update-locale LANG=$LANG \\\n && locale-gen $LANG \\\n && DEBIAN_FRONTEND=noninteractive dpkg-reconfigure locales\n#   Install required packages\nRUN apt-get dist-upgrade -y\nENV REFRESHED_AT=\"2018-03-27\"\nLABEL io.k8s.description=\"Headless VNC Container with IceWM window manager, firefox and chromium\" \\\n      io.k8s.display-name=\"Headless VNC Container based on Ubuntu\" \\\n      io.openshift.expose-services=\"6901:http,5901:xvnc\" \\\n      io.openshift.tags=\"vnc, ubuntu, icewm\" \\\n      io.openshift.non-scalable=\"true\"\nARG KUBECTL_VERSION=v1.12.2\n#   Install kubectl\nRUN wget -O /usr/local/bin/kubectl \"https://storage.googleapis.com/kubernetes-release/release/${KUBECTL_VERSION}/bin/linux/amd64/kubectl\" \\\n && chmod +x /usr/local/bin/kubectl\n#  # Connection ports for controlling the UI:\n#   VNC port:5901\n#   noVNC webport, connect via http://IP:6901/?password=vncpassword\nENV DISPLAY=\":1\" \\\n    VNC_PORT=\"5901\" \\\n    NO_VNC_PORT=\"6901\"\nEXPOSE $VNC_PORT $NO_VNC_PORT\n#  ## Envrionment config\nENV HOME=\"/headless\" \\\n    TERM=\"xterm\" \\\n    STARTUPDIR=\"/dockerstartup\" \\\n    INST_SCRIPTS=\"/headless/install\" \\\n    NO_VNC_HOME=\"/headless/noVNC\" \\\n    DEBIAN_FRONTEND=\"noninteractive\" \\\n    VNC_COL_DEPTH=\"24\" \\\n    VNC_RESOLUTION=\"1280x1024\" \\\n    VNC_PW=\"vncpassword\" \\\n    VNC_VIEW_ONLY=\"false\"\nWORKDIR $HOME\n#  ## Add all install scripts for further steps\nCOPY ./src/common/install/ $INST_SCRIPTS/\nCOPY ./src/ubuntu/install/ $INST_SCRIPTS/\nRUN find $INST_SCRIPTS -name '*.sh' -exec chmod a+x {} +\n#  ## Install some common tools\nRUN $INST_SCRIPTS/tools.sh\nENV LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US:en\" \\\n    LC_ALL=\"en_US.UTF-8\"\n#  ## Install xvnc-server & noVNC - HTML5 based VNC viewer\nRUN $INST_SCRIPTS/tigervnc.sh\nRUN $INST_SCRIPTS/no_vnc.sh\n#  ## Install firefox and chrome browser\nRUN $INST_SCRIPTS/firefox.sh\nRUN $INST_SCRIPTS/chrome.sh\n#  ## Install IceWM UI\nRUN $INST_SCRIPTS/icewm_ui.sh\nCOPY ./src/ubuntu/icewm/ $HOME/\n#  ## configure startup\nRUN $INST_SCRIPTS/libnss_wrapper.sh\nCOPY ./src/common/scripts $STARTUPDIR\nRUN $INST_SCRIPTS/set_user_permission.sh $STARTUPDIR $HOME\nUSER 1000\nENTRYPOINT [\"/dockerstartup/vnc_startup.sh\"]\nCMD [\"--wait\"]\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  This Dockerfile is used to build an headles vnc image based on Ubuntu\nFROM ubuntu:16.04\nMAINTAINER 若虚 <slpcat@qq.com>\n#  Container variables\nENV TERM=\"xterm\" \\\n    LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US.UTF-8\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    TIMEZONE=\"Asia/Shanghai\"\nRUN sed -i 's/archive.ubuntu.com/mirrors.aliyun.com/' /etc/apt/sources.list \\\n && sed -i 's/security.ubuntu.com/mirrors.aliyun.com/' /etc/apt/sources.list\nRUN apt-get update \\\n && apt-get install locales wget -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8\n#  Set timezone and locales\nRUN echo \"${TIMEZONE}\" > /etc/timezone \\\n && echo \"$LANG UTF-8\" > /etc/locale.gen \\\n && apt-get update -q \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -yq apt-utils dialog tzdata \\\n && ln -sf /usr/share/zoneinfo/${TIMEZONE} /etc/localtime \\\n && update-locale LANG=$LANG \\\n && locale-gen $LANG \\\n && DEBIAN_FRONTEND=noninteractive dpkg-reconfigure locales\n#  Install required packages\nRUN apt-get dist-upgrade -y\nENV REFRESHED_AT=\"2018-03-27\"\nLABEL io.k8s.description=\"Headless VNC Container with IceWM window manager, firefox and chromium\" \\\n      io.k8s.display-name=\"Headless VNC Container based on Ubuntu\" \\\n      io.openshift.expose-services=\"6901:http,5901:xvnc\" \\\n      io.openshift.tags=\"vnc, ubuntu, icewm\" \\\n      io.openshift.non-scalable=\"true\"\nARG KUBECTL_VERSION=v1.12.2\n#  Install kubectl\nRUN wget -O /usr/local/bin/kubectl \"https://storage.googleapis.com/kubernetes-release/release/${KUBECTL_VERSION}/bin/linux/amd64/kubectl\" \\\n && chmod +x /usr/local/bin/kubectl\n# # Connection ports for controlling the UI:\n#  VNC port:5901\n#  noVNC webport, connect via http://IP:6901/?password=vncpassword\nENV DISPLAY=\":1\" \\\n    VNC_PORT=\"5901\" \\\n    NO_VNC_PORT=\"6901\"\nEXPOSE $VNC_PORT $NO_VNC_PORT\n# ## Envrionment config\nENV HOME=\"/headless\" \\\n    TERM=\"xterm\" \\\n    STARTUPDIR=\"/dockerstartup\" \\\n    INST_SCRIPTS=\"/headless/install\" \\\n    NO_VNC_HOME=\"/headless/noVNC\" \\\n    DEBIAN_FRONTEND=\"noninteractive\" \\\n    VNC_COL_DEPTH=\"24\" \\\n    VNC_RESOLUTION=\"1280x1024\" \\\n    VNC_PW=\"vncpassword\" \\\n    VNC_VIEW_ONLY=\"false\"\nWORKDIR $HOME\n# ## Add all install scripts for further steps\nADD ./src/common/install/ $INST_SCRIPTS/\nADD ./src/ubuntu/install/ $INST_SCRIPTS/\nRUN find $INST_SCRIPTS -name '*.sh' -exec chmod a+x {} +\n# ## Install some common tools\nRUN $INST_SCRIPTS/tools.sh\nENV LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US:en\" \\\n    LC_ALL=\"en_US.UTF-8\"\n# ## Install xvnc-server & noVNC - HTML5 based VNC viewer\nRUN $INST_SCRIPTS/tigervnc.sh\nRUN $INST_SCRIPTS/no_vnc.sh\n# ## Install firefox and chrome browser\nRUN $INST_SCRIPTS/firefox.sh\nRUN $INST_SCRIPTS/chrome.sh\n# ## Install IceWM UI\nRUN $INST_SCRIPTS/icewm_ui.sh\nADD ./src/ubuntu/icewm/ $HOME/\n# ## configure startup\nRUN $INST_SCRIPTS/libnss_wrapper.sh\nADD ./src/common/scripts $STARTUPDIR\nRUN $INST_SCRIPTS/set_user_permission.sh $STARTUPDIR $HOME\nUSER 1000\nENTRYPOINT [\"/dockerstartup/vnc_startup.sh\"]\nCMD [\"--wait\"]\n","injectedSmells":[],"originalDockerfileHash":"2f97b2db685baa97b9d561f7e84f9c73","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   This Dockerfile is used to build an headles vnc image based on Ubuntu\nFROM ubuntu:16.04\nMAINTAINER 若虚 <slpcat@qq.com>\n#   Container variables\nENV TERM=\"xterm\" \\\n    LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US.UTF-8\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    TIMEZONE=\"Asia/Shanghai\"\nRUN sed -i 's/archive.ubuntu.com/mirrors.aliyun.com/' /etc/apt/sources.list \\\n && sed -i 's/security.ubuntu.com/mirrors.aliyun.com/' /etc/apt/sources.list\nRUN apt-get update \\\n && apt-get install locales wget -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8\n#   Set timezone and locales\nRUN echo \"${TIMEZONE}\" > /etc/timezone \\\n && echo \"$LANG UTF-8\" > /etc/locale.gen \\\n && apt-get update -q \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -yq apt-utils dialog tzdata \\\n && ln -sf /usr/share/zoneinfo/${TIMEZONE} /etc/localtime \\\n && update-locale LANG=$LANG \\\n && locale-gen $LANG \\\n && DEBIAN_FRONTEND=noninteractive dpkg-reconfigure locales\n#   Install required packages\nRUN apt-get dist-upgrade -y\nENV REFRESHED_AT=\"2018-03-27\"\nLABEL io.k8s.description=\"Headless VNC Container with IceWM window manager, firefox and chromium\" \\\n      io.k8s.display-name=\"Headless VNC Container based on Ubuntu\" \\\n      io.openshift.expose-services=\"6901:http,5901:xvnc\" \\\n      io.openshift.tags=\"vnc, ubuntu, icewm\" \\\n      io.openshift.non-scalable=\"true\"\nARG KUBECTL_VERSION=v1.12.2\n#   Install kubectl\nRUN wget -O /usr/local/bin/kubectl \"https://storage.googleapis.com/kubernetes-release/release/${KUBECTL_VERSION}/bin/linux/amd64/kubectl\" \\\n && chmod +x /usr/local/bin/kubectl\n#  # Connection ports for controlling the UI:\n#   VNC port:5901\n#   noVNC webport, connect via http://IP:6901/?password=vncpassword\nENV DISPLAY=\":1\" \\\n    VNC_PORT=\"5901\" \\\n    NO_VNC_PORT=\"6901\"\nEXPOSE $VNC_PORT $NO_VNC_PORT\n#  ## Envrionment config\nENV HOME=\"/headless\" \\\n    TERM=\"xterm\" \\\n    STARTUPDIR=\"/dockerstartup\" \\\n    INST_SCRIPTS=\"/headless/install\" \\\n    NO_VNC_HOME=\"/headless/noVNC\" \\\n    DEBIAN_FRONTEND=\"noninteractive\" \\\n    VNC_COL_DEPTH=\"24\" \\\n    VNC_RESOLUTION=\"1280x1024\" \\\n    VNC_PW=\"vncpassword\" \\\n    VNC_VIEW_ONLY=\"false\"\nWORKDIR $HOME\n#  ## Add all install scripts for further steps\nADD ./src/common/install/ $INST_SCRIPTS/\nADD ./src/ubuntu/install/ $INST_SCRIPTS/\nRUN find $INST_SCRIPTS -name '*.sh' -exec chmod a+x {} +\n#  ## Install some common tools\nRUN $INST_SCRIPTS/tools.sh\nENV LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US:en\" \\\n    LC_ALL=\"en_US.UTF-8\"\n#  ## Install xvnc-server & noVNC - HTML5 based VNC viewer\nRUN $INST_SCRIPTS/tigervnc.sh\nRUN $INST_SCRIPTS/no_vnc.sh\n#  ## Install firefox and chrome browser\nRUN $INST_SCRIPTS/firefox.sh\nRUN $INST_SCRIPTS/chrome.sh\n#  ## Install IceWM UI\nRUN $INST_SCRIPTS/icewm_ui.sh\nADD ./src/ubuntu/icewm/ $HOME/\n#  ## configure startup\nRUN $INST_SCRIPTS/libnss_wrapper.sh\nADD ./src/common/scripts $STARTUPDIR\nRUN $INST_SCRIPTS/set_user_permission.sh $STARTUPDIR $HOME\nUSER 1000\nENTRYPOINT [\"/dockerstartup/vnc_startup.sh\"]\nCMD [\"--wait\"]\n","originalDockerfileUglifiedHash":"0f0cb45847113e9849eccf2a45261c26","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/cd5202f10d93f87a8488513f4da7527ddc4157aa.dockerfile"}