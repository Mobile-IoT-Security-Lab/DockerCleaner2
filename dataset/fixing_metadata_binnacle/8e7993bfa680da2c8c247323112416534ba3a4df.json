{"seed":3756127551,"processedDockerfileHash":"37de488406d1e2f28403015e9080f3a9","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM alpine:3.9\nMAINTAINER Thomas Spicer (thomas@openbridge.com)\nARG NGINX_VERSION\nENV VAR_PREFIX=\"/var/run\" \\\n    LOG_PREFIX=\"/var/log/nginx\" \\\n    TEMP_PREFIX=\"/tmp\" \\\n    CACHE_PREFIX=\"/var/cache\" \\\n    CONF_PREFIX=\"/etc/nginx\" \\\n    CERTS_PREFIX=\"/etc/pki/tls\"\nRUN set -x \\\n && CONFIG=\" --prefix=/usr/share/nginx/ --sbin-path=/usr/sbin/nginx --add-module=/tmp/naxsi/naxsi_src --modules-path=/usr/lib/nginx/modules --conf-path=${CONF_PREFIX}/nginx.conf --error-log-path=${LOG_PREFIX}/error.log --http-log-path=${LOG_PREFIX}/access.log --pid-path=${VAR_PREFIX}/nginx.pid --lock-path=${VAR_PREFIX}/nginx.lock --http-client-body-temp-path=${TEMP_PREFIX}/client_temp --http-proxy-temp-path=${TEMP_PREFIX}/proxy_temp --http-fastcgi-temp-path=${TEMP_PREFIX}/fastcgi_temp --http-uwsgi-temp-path=${TEMP_PREFIX}/uwsgi_temp --http-scgi-temp-path=${TEMP_PREFIX}/scgi_temp --user=www-data --group=www-data --with-http_ssl_module --with-pcre-jit --with-http_realip_module --with-http_addition_module --with-http_sub_module --with-http_dav_module --with-http_flv_module --with-http_mp4_module --with-http_gunzip_module --with-http_gzip_static_module --with-http_random_index_module --with-http_secure_link_module --with-http_stub_status_module --with-http_auth_request_module --with-http_xslt_module=dynamic --with-http_image_filter_module=dynamic --with-http_geoip_module=dynamic --with-threads --with-stream --with-stream_ssl_module --with-stream_ssl_preread_module --with-stream_realip_module --with-stream_geoip_module=dynamic --with-http_slice_module --with-mail --with-mail_ssl_module --with-compat --with-file-aio --with-http_v2_module --add-module=/tmp/ngx_cache_purge-2.3 --add-module=/tmp/ngx_http_redis-0.3.8 --add-module=/tmp/redis2-nginx-module-0.15 --add-module=/tmp/srcache-nginx-module-0.31 --add-module=/tmp/echo-nginx-module --add-module=/tmp/ngx_devel_kit-0.3.0 --add-module=/tmp/set-misc-nginx-module-0.32 --add-module=/tmp/ngx_brotli --with-cc-opt=-Wno-error \" \\\n && addgroup -g 82 -S www-data \\\n && adduser -u 82 -D -S -h /var/cache/nginx -s /sbin/nologin -G www-data www-data \\\n && apk add build-base=0.5-r1 ca-certificates=20191127-r2 automake=1.16.1-r0 autoconf=2.69-r2 git=2.20.4-r0 libtool=2.4.6-r5 binutils=2.31.1-r2 gnupg=2.2.19-r0 cmake=3.13.0-r0 go=1.11.5-r0 gcc=8.3.0-r0 build-base=0.5-r1 libc-dev=0.7.1-r0 make=4.2.1-r2 wget=1.20.3-r0 gzip=1.10-r0 openssl-dev=1.1.1k-r0 musl-dev=1.1.20-r6 pcre-dev=8.42-r2 zlib-dev=1.2.11-r1 geoip-dev=1.6.12-r1 git=2.20.4-r0 linux-headers=4.18.13-r1 gnupg=2.2.19-r0 libxslt-dev=1.1.33-r3 gd-dev=2.2.5-r4 unzip=6.0-r6 --no-cache --virtual .build-deps \\\n && apk add curl=7.64.0-r5 monit=5.25.2-r1 wget=1.20.3-r0 bash=4.4.19-r1 bind-tools=9.12.4_p2-r0 rsync=3.1.3-r1 geoip=1.6.12-r1 openssl=1.1.1k-r0 tini=0.18.0-r0 tar=1.32-r0 --no-cache --update \\\n && cd /tmp \\\n && git clone https://github.com/google/ngx_brotli --depth=1 \\\n && cd ngx_brotli \\\n && git submodule update --init \\\n && export NGX_BROTLI_STATIC_MODULE_ONLY=1 \\\n && cd /tmp \\\n && git clone https://github.com/nbs-system/naxsi.git \\\n && echo 'adding /usr/local/share/GeoIP/GeoIP.dat database' \\\n && wget -N https://raw.githubusercontent.com/openbridge/nginx/master/geoip/GeoLiteCity.dat.gz \\\n && wget -N https://raw.githubusercontent.com/openbridge/nginx/master/geoip/GeoIP.dat.gz \\\n && gzip -d GeoIP.dat.gz \\\n && gzip -d GeoLiteCity.dat.gz \\\n && mkdir /usr/local/share/GeoIP/ \\\n && mv GeoIP.dat /usr/local/share/GeoIP/ \\\n && mv GeoLiteCity.dat /usr/local/share/GeoIP/ \\\n && chown -R www-data:www-data /usr/local/share/GeoIP/ \\\n && curl -fSL http://nginx.org/download/nginx-$NGINX_VERSION.tar.gz -o nginx.tar.gz \\\n && mkdir -p /usr/src \\\n && tar -zxC /usr/src -f nginx.tar.gz \\\n && rm nginx.tar.gz \\\n && cd /tmp \\\n && git clone https://github.com/openresty/echo-nginx-module.git \\\n && wget https://github.com/simpl/ngx_devel_kit/archive/v0.3.0.zip -O dev.zip \\\n && wget https://github.com/openresty/set-misc-nginx-module/archive/v0.32.zip -O setmisc.zip \\\n && wget https://people.freebsd.org/~osa/ngx_http_redis-0.3.8.tar.gz \\\n && wget https://github.com/openresty/redis2-nginx-module/archive/v0.15.zip -O redis.zip \\\n && wget https://github.com/openresty/srcache-nginx-module/archive/v0.31.zip -O cache.zip \\\n && wget https://github.com/FRiCKLE/ngx_cache_purge/archive/2.3.zip -O purge.zip \\\n && tar -zx -f ngx_http_redis-0.3.8.tar.gz \\\n && unzip dev.zip \\\n && unzip setmisc.zip \\\n && unzip redis.zip \\\n && unzip cache.zip \\\n && unzip purge.zip \\\n && cd /usr/src/nginx-$NGINX_VERSION \\\n && ./configure $CONFIG --with-debug \\\n && make -j$( getconf _NPROCESSORS_ONLN ;) \\\n && mv objs/nginx objs/nginx-debug \\\n && mv objs/ngx_http_xslt_filter_module.so objs/ngx_http_xslt_filter_module-debug.so \\\n && mv objs/ngx_http_image_filter_module.so objs/ngx_http_image_filter_module-debug.so \\\n && mv objs/ngx_stream_geoip_module.so objs/ngx_stream_geoip_module-debug.so \\\n && ./configure $CONFIG \\\n && make -j$( getconf _NPROCESSORS_ONLN ;) \\\n && make install \\\n && rm -rf /etc/nginx/html/ \\\n && mkdir /etc/nginx/conf.d/ \\\n && mkdir -p /usr/share/nginx/html/ \\\n && install -m644 html/index.html /usr/share/nginx/html/ \\\n && install -m644 html/50x.html /usr/share/nginx/html/ \\\n && install -m755 objs/nginx-debug /usr/sbin/nginx-debug \\\n && install -m755 objs/ngx_http_xslt_filter_module-debug.so /usr/lib/nginx/modules/ngx_http_xslt_filter_module-debug.so \\\n && install -m755 objs/ngx_http_image_filter_module-debug.so /usr/lib/nginx/modules/ngx_http_image_filter_module-debug.so \\\n && install -m755 objs/ngx_stream_geoip_module-debug.so /usr/lib/nginx/modules/ngx_stream_geoip_module-debug.so \\\n && ln -s ../../usr/lib/nginx/modules /etc/nginx/modules \\\n && strip /usr/sbin/nginx* \\\n && strip /usr/lib/nginx/modules/*.so \\\n && mkdir -p /usr/local/bin/ \\\n && mkdir -p ${CACHE_PREFIX} \\\n && mkdir -p ${CERTS_PREFIX} \\\n && cd /etc/pki/tls/ \\\n && nice -n +5 openssl dhparam -out /etc/pki/tls/dhparam.pem.default 2048 \\\n && apk add gettext=0.19.8.1-r4 --no-cache --virtual .gettext \\\n && mv /usr/bin/envsubst /tmp/ \\\n && runDeps=\"$( scanelf --needed --nobanner /usr/sbin/nginx /usr/lib/nginx/modules/*.so /tmp/envsubst | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }' | sort -u | xargs -r apk info --installed | sort -u ;)\" \\\n && apk add $runDeps --no-cache --virtual .nginx-rundeps \\\n && apk del .build-deps \\\n && apk del .gettext \\\n && cd /tmp/naxsi \\\n && mv naxsi_config/naxsi_core.rules /etc/nginx/naxsi_core.rules \\\n && mv /tmp/envsubst /usr/local/bin/ \\\n && rm -rf /tmp/* \\\n && rm -rf /usr/src/* \\\n && ln -sf /dev/stdout ${LOG_PREFIX}/access.log \\\n && ln -sf /dev/stderr ${LOG_PREFIX}/error.log \\\n && ln -sf /dev/stdout ${LOG_PREFIX}/blocked.log\nCOPY conf/ /conf\nCOPY test/ /tmp/test\nCOPY error/ /tmp/error/\nCOPY check_wwwdata.sh /usr/bin/check_wwwdata\nCOPY check_folder.sh /usr/bin/check_folder\nCOPY check_host.sh /usr/bin/check_host\nCOPY docker-entrypoint.sh /docker-entrypoint.sh\nRUN chmod +x /docker-entrypoint.sh /usr/bin/check_wwwdata /usr/bin/check_folder /usr/bin/check_host\nSTOPSIGNAL SIGQUIT\nENTRYPOINT [\"/docker-entrypoint.sh\"]\nCMD [\"/usr/sbin/nginx\", \"-g\", \"daemon\", \"off\"]\nRUN addgroup -S docker-user ; adduser -S -G docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM alpine:3.9\nMAINTAINER Thomas Spicer (thomas@openbridge.com)\nARG NGINX_VERSION\nENV VAR_PREFIX=\"/var/run\" \\\n    LOG_PREFIX=\"/var/log/nginx\" \\\n    TEMP_PREFIX=\"/tmp\" \\\n    CACHE_PREFIX=\"/var/cache\" \\\n    CONF_PREFIX=\"/etc/nginx\" \\\n    CERTS_PREFIX=\"/etc/pki/tls\"\nRUN set -x \\\n && CONFIG=\" --prefix=/usr/share/nginx/ --sbin-path=/usr/sbin/nginx --add-module=/tmp/naxsi/naxsi_src --modules-path=/usr/lib/nginx/modules --conf-path=${CONF_PREFIX}/nginx.conf --error-log-path=${LOG_PREFIX}/error.log --http-log-path=${LOG_PREFIX}/access.log --pid-path=${VAR_PREFIX}/nginx.pid --lock-path=${VAR_PREFIX}/nginx.lock --http-client-body-temp-path=${TEMP_PREFIX}/client_temp --http-proxy-temp-path=${TEMP_PREFIX}/proxy_temp --http-fastcgi-temp-path=${TEMP_PREFIX}/fastcgi_temp --http-uwsgi-temp-path=${TEMP_PREFIX}/uwsgi_temp --http-scgi-temp-path=${TEMP_PREFIX}/scgi_temp --user=www-data --group=www-data --with-http_ssl_module --with-pcre-jit --with-http_realip_module --with-http_addition_module --with-http_sub_module --with-http_dav_module --with-http_flv_module --with-http_mp4_module --with-http_gunzip_module --with-http_gzip_static_module --with-http_random_index_module --with-http_secure_link_module --with-http_stub_status_module --with-http_auth_request_module --with-http_xslt_module=dynamic --with-http_image_filter_module=dynamic --with-http_geoip_module=dynamic --with-threads --with-stream --with-stream_ssl_module --with-stream_ssl_preread_module --with-stream_realip_module --with-stream_geoip_module=dynamic --with-http_slice_module --with-mail --with-mail_ssl_module --with-compat --with-file-aio --with-http_v2_module --add-module=/tmp/ngx_cache_purge-2.3 --add-module=/tmp/ngx_http_redis-0.3.8 --add-module=/tmp/redis2-nginx-module-0.15 --add-module=/tmp/srcache-nginx-module-0.31 --add-module=/tmp/echo-nginx-module --add-module=/tmp/ngx_devel_kit-0.3.0 --add-module=/tmp/set-misc-nginx-module-0.32 --add-module=/tmp/ngx_brotli --with-cc-opt=-Wno-error \" \\\n && addgroup -g 82 -S www-data \\\n && adduser -u 82 -D -S -h /var/cache/nginx -s /sbin/nologin -G www-data www-data \\\n && apk add --no-cache --virtual .build-deps build-base ca-certificates automake autoconf git libtool binutils gnupg cmake go gcc build-base libc-dev make wget gzip openssl-dev musl-dev pcre-dev zlib-dev geoip-dev git linux-headers gnupg libxslt-dev gd-dev unzip \\\n && apk add --no-cache --update curl monit wget bash bind-tools rsync geoip openssl tini tar \\\n && cd /tmp \\\n && git clone https://github.com/google/ngx_brotli --depth=1 \\\n && cd ngx_brotli \\\n && git submodule update --init \\\n && export NGX_BROTLI_STATIC_MODULE_ONLY=1 \\\n && cd /tmp \\\n && git clone https://github.com/nbs-system/naxsi.git \\\n && echo 'adding /usr/local/share/GeoIP/GeoIP.dat database' \\\n && wget -N https://raw.githubusercontent.com/openbridge/nginx/master/geoip/GeoLiteCity.dat.gz \\\n && wget -N https://raw.githubusercontent.com/openbridge/nginx/master/geoip/GeoIP.dat.gz \\\n && gzip -d GeoIP.dat.gz \\\n && gzip -d GeoLiteCity.dat.gz \\\n && mkdir /usr/local/share/GeoIP/ \\\n && mv GeoIP.dat /usr/local/share/GeoIP/ \\\n && mv GeoLiteCity.dat /usr/local/share/GeoIP/ \\\n && chown -R www-data:www-data /usr/local/share/GeoIP/ \\\n && curl -fSL http://nginx.org/download/nginx-$NGINX_VERSION.tar.gz -o nginx.tar.gz \\\n && mkdir -p /usr/src \\\n && tar -zxC /usr/src -f nginx.tar.gz \\\n && rm nginx.tar.gz \\\n && cd /tmp \\\n && git clone https://github.com/openresty/echo-nginx-module.git \\\n && wget https://github.com/simpl/ngx_devel_kit/archive/v0.3.0.zip -O dev.zip \\\n && wget https://github.com/openresty/set-misc-nginx-module/archive/v0.32.zip -O setmisc.zip \\\n && wget https://people.freebsd.org/~osa/ngx_http_redis-0.3.8.tar.gz \\\n && wget https://github.com/openresty/redis2-nginx-module/archive/v0.15.zip -O redis.zip \\\n && wget https://github.com/openresty/srcache-nginx-module/archive/v0.31.zip -O cache.zip \\\n && wget https://github.com/FRiCKLE/ngx_cache_purge/archive/2.3.zip -O purge.zip \\\n && tar -zx -f ngx_http_redis-0.3.8.tar.gz \\\n && unzip dev.zip \\\n && unzip setmisc.zip \\\n && unzip redis.zip \\\n && unzip cache.zip \\\n && unzip purge.zip \\\n && cd /usr/src/nginx-$NGINX_VERSION \\\n && ./configure $CONFIG --with-debug \\\n && make -j$( getconf _NPROCESSORS_ONLN ;) \\\n && mv objs/nginx objs/nginx-debug \\\n && mv objs/ngx_http_xslt_filter_module.so objs/ngx_http_xslt_filter_module-debug.so \\\n && mv objs/ngx_http_image_filter_module.so objs/ngx_http_image_filter_module-debug.so \\\n && mv objs/ngx_stream_geoip_module.so objs/ngx_stream_geoip_module-debug.so \\\n && ./configure $CONFIG \\\n && make -j$( getconf _NPROCESSORS_ONLN ;) \\\n && make install \\\n && rm -rf /etc/nginx/html/ \\\n && mkdir /etc/nginx/conf.d/ \\\n && mkdir -p /usr/share/nginx/html/ \\\n && install -m644 html/index.html /usr/share/nginx/html/ \\\n && install -m644 html/50x.html /usr/share/nginx/html/ \\\n && install -m755 objs/nginx-debug /usr/sbin/nginx-debug \\\n && install -m755 objs/ngx_http_xslt_filter_module-debug.so /usr/lib/nginx/modules/ngx_http_xslt_filter_module-debug.so \\\n && install -m755 objs/ngx_http_image_filter_module-debug.so /usr/lib/nginx/modules/ngx_http_image_filter_module-debug.so \\\n && install -m755 objs/ngx_stream_geoip_module-debug.so /usr/lib/nginx/modules/ngx_stream_geoip_module-debug.so \\\n && ln -s ../../usr/lib/nginx/modules /etc/nginx/modules \\\n && strip /usr/sbin/nginx* \\\n && strip /usr/lib/nginx/modules/*.so \\\n && mkdir -p /usr/local/bin/ \\\n && mkdir -p ${CACHE_PREFIX} \\\n && mkdir -p ${CERTS_PREFIX} \\\n && cd /etc/pki/tls/ \\\n && nice -n +5 openssl dhparam -out /etc/pki/tls/dhparam.pem.default 2048 \\\n && apk add --no-cache --virtual .gettext gettext \\\n && mv /usr/bin/envsubst /tmp/ \\\n && runDeps=\"$( scanelf --needed --nobanner /usr/sbin/nginx /usr/lib/nginx/modules/*.so /tmp/envsubst | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }' | sort -u | xargs -r apk info --installed | sort -u ;)\" \\\n && apk add --no-cache --virtual .nginx-rundeps $runDeps \\\n && apk del .build-deps \\\n && apk del .gettext \\\n && cd /tmp/naxsi \\\n && mv naxsi_config/naxsi_core.rules /etc/nginx/naxsi_core.rules \\\n && mv /tmp/envsubst /usr/local/bin/ \\\n && rm -rf /tmp/* \\\n && rm -rf /usr/src/* \\\n && ln -sf /dev/stdout ${LOG_PREFIX}/access.log \\\n && ln -sf /dev/stderr ${LOG_PREFIX}/error.log \\\n && ln -sf /dev/stdout ${LOG_PREFIX}/blocked.log\nCOPY conf/ /conf\nCOPY test/ /tmp/test\nCOPY error/ /tmp/error/\nCOPY check_wwwdata.sh /usr/bin/check_wwwdata\nCOPY check_folder.sh /usr/bin/check_folder\nCOPY check_host.sh /usr/bin/check_host\nCOPY docker-entrypoint.sh /docker-entrypoint.sh\nRUN chmod +x /docker-entrypoint.sh /usr/bin/check_wwwdata /usr/bin/check_folder /usr/bin/check_host\nSTOPSIGNAL SIGQUIT\nENTRYPOINT [\"/docker-entrypoint.sh\"]\nCMD [\"/usr/sbin/nginx\", \"-g\", \"daemon\", \"off\"]\n","injectedSmells":[],"originalDockerfileHash":"756f30d24f1a8977100ab9e8dfe1f53f","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM alpine:3.9\nMAINTAINER Thomas Spicer (thomas@openbridge.com)\nARG NGINX_VERSION\nENV VAR_PREFIX=\"/var/run\" \\\n    LOG_PREFIX=\"/var/log/nginx\" \\\n    TEMP_PREFIX=\"/tmp\" \\\n    CACHE_PREFIX=\"/var/cache\" \\\n    CONF_PREFIX=\"/etc/nginx\" \\\n    CERTS_PREFIX=\"/etc/pki/tls\"\nRUN set -x \\\n && CONFIG=\" --prefix=/usr/share/nginx/ --sbin-path=/usr/sbin/nginx --add-module=/tmp/naxsi/naxsi_src --modules-path=/usr/lib/nginx/modules --conf-path=${CONF_PREFIX}/nginx.conf --error-log-path=${LOG_PREFIX}/error.log --http-log-path=${LOG_PREFIX}/access.log --pid-path=${VAR_PREFIX}/nginx.pid --lock-path=${VAR_PREFIX}/nginx.lock --http-client-body-temp-path=${TEMP_PREFIX}/client_temp --http-proxy-temp-path=${TEMP_PREFIX}/proxy_temp --http-fastcgi-temp-path=${TEMP_PREFIX}/fastcgi_temp --http-uwsgi-temp-path=${TEMP_PREFIX}/uwsgi_temp --http-scgi-temp-path=${TEMP_PREFIX}/scgi_temp --user=www-data --group=www-data --with-http_ssl_module --with-pcre-jit --with-http_realip_module --with-http_addition_module --with-http_sub_module --with-http_dav_module --with-http_flv_module --with-http_mp4_module --with-http_gunzip_module --with-http_gzip_static_module --with-http_random_index_module --with-http_secure_link_module --with-http_stub_status_module --with-http_auth_request_module --with-http_xslt_module=dynamic --with-http_image_filter_module=dynamic --with-http_geoip_module=dynamic --with-threads --with-stream --with-stream_ssl_module --with-stream_ssl_preread_module --with-stream_realip_module --with-stream_geoip_module=dynamic --with-http_slice_module --with-mail --with-mail_ssl_module --with-compat --with-file-aio --with-http_v2_module --add-module=/tmp/ngx_cache_purge-2.3 --add-module=/tmp/ngx_http_redis-0.3.8 --add-module=/tmp/redis2-nginx-module-0.15 --add-module=/tmp/srcache-nginx-module-0.31 --add-module=/tmp/echo-nginx-module --add-module=/tmp/ngx_devel_kit-0.3.0 --add-module=/tmp/set-misc-nginx-module-0.32 --add-module=/tmp/ngx_brotli --with-cc-opt=-Wno-error \" \\\n && addgroup -g 82 -S www-data \\\n && adduser -u 82 -D -S -h /var/cache/nginx -s /sbin/nologin -G www-data www-data \\\n && apk add --no-cache --virtual .build-deps build-base ca-certificates automake autoconf git libtool binutils gnupg cmake go gcc build-base libc-dev make wget gzip openssl-dev musl-dev pcre-dev zlib-dev geoip-dev git linux-headers gnupg libxslt-dev gd-dev unzip \\\n && apk add --no-cache --update curl monit wget bash bind-tools rsync geoip openssl tini tar \\\n && cd /tmp \\\n && git clone https://github.com/google/ngx_brotli --depth=1 \\\n && cd ngx_brotli \\\n && git submodule update --init \\\n && export NGX_BROTLI_STATIC_MODULE_ONLY=1 \\\n && cd /tmp \\\n && git clone https://github.com/nbs-system/naxsi.git \\\n && echo 'adding /usr/local/share/GeoIP/GeoIP.dat database' \\\n && wget -N https://raw.githubusercontent.com/openbridge/nginx/master/geoip/GeoLiteCity.dat.gz \\\n && wget -N https://raw.githubusercontent.com/openbridge/nginx/master/geoip/GeoIP.dat.gz \\\n && gzip -d GeoIP.dat.gz \\\n && gzip -d GeoLiteCity.dat.gz \\\n && mkdir /usr/local/share/GeoIP/ \\\n && mv GeoIP.dat /usr/local/share/GeoIP/ \\\n && mv GeoLiteCity.dat /usr/local/share/GeoIP/ \\\n && chown -R www-data:www-data /usr/local/share/GeoIP/ \\\n && curl -fSL http://nginx.org/download/nginx-$NGINX_VERSION.tar.gz -o nginx.tar.gz \\\n && mkdir -p /usr/src \\\n && tar -zxC /usr/src -f nginx.tar.gz \\\n && rm nginx.tar.gz \\\n && cd /tmp \\\n && git clone https://github.com/openresty/echo-nginx-module.git \\\n && wget https://github.com/simpl/ngx_devel_kit/archive/v0.3.0.zip -O dev.zip \\\n && wget https://github.com/openresty/set-misc-nginx-module/archive/v0.32.zip -O setmisc.zip \\\n && wget https://people.freebsd.org/~osa/ngx_http_redis-0.3.8.tar.gz \\\n && wget https://github.com/openresty/redis2-nginx-module/archive/v0.15.zip -O redis.zip \\\n && wget https://github.com/openresty/srcache-nginx-module/archive/v0.31.zip -O cache.zip \\\n && wget https://github.com/FRiCKLE/ngx_cache_purge/archive/2.3.zip -O purge.zip \\\n && tar -zx -f ngx_http_redis-0.3.8.tar.gz \\\n && unzip dev.zip \\\n && unzip setmisc.zip \\\n && unzip redis.zip \\\n && unzip cache.zip \\\n && unzip purge.zip \\\n && cd /usr/src/nginx-$NGINX_VERSION \\\n && ./configure $CONFIG --with-debug \\\n && make -j$( getconf _NPROCESSORS_ONLN ;) \\\n && mv objs/nginx objs/nginx-debug \\\n && mv objs/ngx_http_xslt_filter_module.so objs/ngx_http_xslt_filter_module-debug.so \\\n && mv objs/ngx_http_image_filter_module.so objs/ngx_http_image_filter_module-debug.so \\\n && mv objs/ngx_stream_geoip_module.so objs/ngx_stream_geoip_module-debug.so \\\n && ./configure $CONFIG \\\n && make -j$( getconf _NPROCESSORS_ONLN ;) \\\n && make install \\\n && rm -rf /etc/nginx/html/ \\\n && mkdir /etc/nginx/conf.d/ \\\n && mkdir -p /usr/share/nginx/html/ \\\n && install -m644 html/index.html /usr/share/nginx/html/ \\\n && install -m644 html/50x.html /usr/share/nginx/html/ \\\n && install -m755 objs/nginx-debug /usr/sbin/nginx-debug \\\n && install -m755 objs/ngx_http_xslt_filter_module-debug.so /usr/lib/nginx/modules/ngx_http_xslt_filter_module-debug.so \\\n && install -m755 objs/ngx_http_image_filter_module-debug.so /usr/lib/nginx/modules/ngx_http_image_filter_module-debug.so \\\n && install -m755 objs/ngx_stream_geoip_module-debug.so /usr/lib/nginx/modules/ngx_stream_geoip_module-debug.so \\\n && ln -s ../../usr/lib/nginx/modules /etc/nginx/modules \\\n && strip /usr/sbin/nginx* \\\n && strip /usr/lib/nginx/modules/*.so \\\n && mkdir -p /usr/local/bin/ \\\n && mkdir -p ${CACHE_PREFIX} \\\n && mkdir -p ${CERTS_PREFIX} \\\n && cd /etc/pki/tls/ \\\n && nice -n +5 openssl dhparam -out /etc/pki/tls/dhparam.pem.default 2048 \\\n && apk add --no-cache --virtual .gettext gettext \\\n && mv /usr/bin/envsubst /tmp/ \\\n && runDeps=\"$( scanelf --needed --nobanner /usr/sbin/nginx /usr/lib/nginx/modules/*.so /tmp/envsubst | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }' | sort -u | xargs -r apk info --installed | sort -u ;)\" \\\n && apk add --no-cache --virtual .nginx-rundeps $runDeps \\\n && apk del .build-deps \\\n && apk del .gettext \\\n && cd /tmp/naxsi \\\n && mv naxsi_config/naxsi_core.rules /etc/nginx/naxsi_core.rules \\\n && mv /tmp/envsubst /usr/local/bin/ \\\n && rm -rf /tmp/* \\\n && rm -rf /usr/src/* \\\n && ln -sf /dev/stdout ${LOG_PREFIX}/access.log \\\n && ln -sf /dev/stderr ${LOG_PREFIX}/error.log \\\n && ln -sf /dev/stdout ${LOG_PREFIX}/blocked.log\nCOPY conf/ /conf\nCOPY test/ /tmp/test\nCOPY error/ /tmp/error/\nCOPY check_wwwdata.sh /usr/bin/check_wwwdata\nCOPY check_folder.sh /usr/bin/check_folder\nCOPY check_host.sh /usr/bin/check_host\nCOPY docker-entrypoint.sh /docker-entrypoint.sh\nRUN chmod +x /docker-entrypoint.sh /usr/bin/check_wwwdata /usr/bin/check_folder /usr/bin/check_host\nSTOPSIGNAL SIGQUIT\nENTRYPOINT [\"/docker-entrypoint.sh\"]\nCMD [\"/usr/sbin/nginx\", \"-g\", \"daemon\", \"off\"]\n","originalDockerfileUglifiedHash":"756f30d24f1a8977100ab9e8dfe1f53f","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/8e7993bfa680da2c8c247323112416534ba3a4df.dockerfile"}