{"seed":1663198338,"processedDockerfileHash":"cc3ba426029447cd2c90af5536d10003","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-gem","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM buildpack-deps:jessie\n#  # CircleCI dependencies\nRUN apt-get update ; apt-get install --no-install-recommends git ssh tar gzip ca-certificates zip unzip -y\nRUN groupadd --gid 1000 node \\\n && useradd --uid 1000 --gid node --shell /bin/bash --create-home node\n#  # NODE\n#   gpg keys listed at https://github.com/nodejs/node#release-team\nRUN set -ex \\\n && for key in 94AE36675C464D64BAFA68DD7434390BDBE9B9C5 FD3A5288F042B6850C66B31F09FE44734EB7990E 71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 DD8F2338BAE7501E3DD5AC78C273792F7D83545D C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 B9AE9905FFD7803F25714661B63B535A4C206CA9 56730D5401028683275BD23C23EFEFE93C4CFFFE 77984A986EBC2AA786BC0F66B01FBB92821C587A 8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600; do gpg --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys \"$key\" || gpg --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys \"$key\" || gpg --keyserver hkp://pgp.mit.edu:80 --recv-keys \"$key\" ; done\nENV NODE_VERSION=\"8.9.0\"\nRUN ARCH= \\\n && dpkgArch=\"$( dpkg --print-architecture ;)\" \\\n && case \"${dpkgArch##*-}\" in (amd64) ARCH='x64' ;;(ppc64el) ARCH='ppc64le' ;;(s390x) ARCH='s390x' ;;(arm64) ARCH='arm64' ;;(armhf) ARCH='armv7l' ;;(i386) ARCH='x86' ;;(*) echo \"unsupported architecture\" ; exit 1 ;; esac \\\n && curl -fsSLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-$ARCH.tar.xz\" \\\n && curl -fsSLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\" \\\n && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc \\\n && grep \" node-v$NODE_VERSION-linux-$ARCH.tar.xz$\" SHASUMS256.txt | sha256sum -c - \\\n && tar -xJf \"node-v$NODE_VERSION-linux-$ARCH.tar.xz\" -C /usr/local --strip-components=1 --no-same-owner \\\n && rm \"node-v$NODE_VERSION-linux-$ARCH.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt \\\n && ln -s /usr/local/bin/node /usr/local/bin/nodejs\n#  # YARN\nENV YARN_VERSION=\"1.9.2\"\nRUN set -ex \\\n && for key in 6A010C5166006599AA17F08146C2130DFD2497F5; do gpg --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys \"$key\" || gpg --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys \"$key\" || gpg --keyserver hkp://pgp.mit.edu:80 --recv-keys \"$key\" ; done \\\n && curl -fsSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz\" \\\n && curl -fsSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz.asc\" \\\n && gpg --batch --verify yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz \\\n && mkdir -p /opt \\\n && tar -xzf yarn-v$YARN_VERSION.tar.gz -C /opt/ \\\n && ln -s /opt/yarn-v$YARN_VERSION/bin/yarn /usr/local/bin/yarn \\\n && ln -s /opt/yarn-v$YARN_VERSION/bin/yarnpkg /usr/local/bin/yarnpkg \\\n && rm yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz\n#  # PUPPETEER DEPENDENCIES\n#   See https://crbug.com/795759\nRUN apt-get update \\\n && apt-get install --no-install-recommends libgconf-2-4 -yq\n#   Install latest chrome dev package and fonts to support major charsets (Chinese, Japanese, Arabic, Hebrew, Thai and a few others)\n#   Note: this installs the necessary libs to make the bundled version of Chromium that Puppeteer\n#   installs, work.\nRUN apt-get update \\\n && apt-get install --no-install-recommends wget -y \\\n && wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \\\n && sh -c 'echo \"deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main\" >> /etc/apt/sources.list.d/google.list' \\\n && apt-get update \\\n && apt-get install --no-install-recommends google-chrome-unstable fonts-ipafont-gothic fonts-wqy-zenhei fonts-thai-tlwg fonts-kacst ttf-freefont -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && apt-get purge --auto-remove -y curl \\\n && rm -rf /src/*.deb\n#  # RUBY\n#   skip installing gem documentation\nRUN mkdir -p /usr/local/etc \\\n && { echo 'install: --no-document' ;echo 'update: --no-document' ; } >> /usr/local/etc/gemrc\nENV RUBY_MAJOR=\"2.3\"\nENV RUBY_VERSION=\"2.3.4\"\nENV RUBY_DOWNLOAD_SHA256=\"341cd9032e9fd17c452ed8562a8d43f7e45bfe05e411d0d7d627751dd82c578c\"\nENV RUBYGEMS_VERSION=\"2.6.3\"\nENV BUNDLER_VERSION=\"1.16.3\"\n#   some of ruby's build scripts are written in ruby\n#     we purge system ruby later to make sure our final image uses what we just built\nRUN set -ex \\\n && buildDeps=' bison dpkg-dev libgdbm-dev ruby ' \\\n && apt-get update \\\n && apt-get install --no-install-recommends $buildDeps -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && wget -O ruby.tar.xz \"https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz\" \\\n && echo \"$RUBY_DOWNLOAD_SHA256 *ruby.tar.xz\" | sha256sum -c - \\\n && mkdir -p /usr/src/ruby \\\n && tar -xJf ruby.tar.xz -C /usr/src/ruby --strip-components=1 \\\n && rm ruby.tar.xz \\\n && cd /usr/src/ruby \\\n && { echo '#define ENABLE_PATH_CHECK 0' ;echo ;cat file.c ; } > file.c.new \\\n && mv file.c.new file.c \\\n && autoconf \\\n && gnuArch=\"$( dpkg-architecture --query DEB_BUILD_GNU_TYPE ;)\" \\\n && ./configure --build=\"$gnuArch\" --disable-install-doc --enable-shared \\\n && make -j \"$( nproc ;)\" \\\n && make install \\\n && apt-get purge -y --auto-remove $buildDeps \\\n && cd / \\\n && rm -r /usr/src/ruby \\\n && gem update --system \"$RUBYGEMS_VERSION\" \\\n && gem install bundler --version 2.4.12 --force \\\n && rm -r /root/.gem/\n#   install things globally, for great justice\n#   and don't create \".bundle\" in all our apps\nENV GEM_HOME=\"/usr/local/bundle\"\nENV BUNDLE_PATH=\"$GEM_HOME\" \\\n    BUNDLE_SILENCE_ROOT_WARNING=\"1\" \\\n    BUNDLE_APP_CONFIG=\"$GEM_HOME\"\n#   path recommendation: https://github.com/bundler/bundler/pull/6469#issuecomment-383235438\nENV PATH=\"$GEM_HOME/bin:$BUNDLE_PATH/gems/bin:$PATH\"\n#   adjust permissions of a few directories for running \"gem install\" as an arbitrary user\nRUN mkdir -p \"$GEM_HOME\" \\\n && chmod 777 \"$GEM_HOME\"\n#   (BUNDLE_PATH = GEM_HOME, no need to mkdir/chown both)\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM buildpack-deps:jessie\n# # CircleCI dependencies\nRUN apt-get update ; apt-get install --no-install-recommends git ssh tar gzip ca-certificates zip unzip -y\nRUN groupadd --gid 1000 node \\\n && useradd --uid 1000 --gid node --shell /bin/bash --create-home node\n# # NODE\n#  gpg keys listed at https://github.com/nodejs/node#release-team\nRUN set -ex \\\n && for key in 94AE36675C464D64BAFA68DD7434390BDBE9B9C5 FD3A5288F042B6850C66B31F09FE44734EB7990E 71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 DD8F2338BAE7501E3DD5AC78C273792F7D83545D C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 B9AE9905FFD7803F25714661B63B535A4C206CA9 56730D5401028683275BD23C23EFEFE93C4CFFFE 77984A986EBC2AA786BC0F66B01FBB92821C587A 8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600; do gpg --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys \"$key\" || gpg --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys \"$key\" || gpg --keyserver hkp://pgp.mit.edu:80 --recv-keys \"$key\" ; done\nENV NODE_VERSION=\"8.9.0\"\nRUN ARCH= \\\n && dpkgArch=\"$( dpkg --print-architecture ;)\" \\\n && case \"${dpkgArch##*-}\" in (amd64) ARCH='x64' ;;(ppc64el) ARCH='ppc64le' ;;(s390x) ARCH='s390x' ;;(arm64) ARCH='arm64' ;;(armhf) ARCH='armv7l' ;;(i386) ARCH='x86' ;;(*) echo \"unsupported architecture\" ; exit 1 ;; esac \\\n && curl -fsSLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-$ARCH.tar.xz\" \\\n && curl -fsSLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\" \\\n && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc \\\n && grep \" node-v$NODE_VERSION-linux-$ARCH.tar.xz$\" SHASUMS256.txt | sha256sum -c - \\\n && tar -xJf \"node-v$NODE_VERSION-linux-$ARCH.tar.xz\" -C /usr/local --strip-components=1 --no-same-owner \\\n && rm \"node-v$NODE_VERSION-linux-$ARCH.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt \\\n && ln -s /usr/local/bin/node /usr/local/bin/nodejs\n# # YARN\nENV YARN_VERSION=\"1.9.2\"\nRUN set -ex \\\n && for key in 6A010C5166006599AA17F08146C2130DFD2497F5; do gpg --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys \"$key\" || gpg --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys \"$key\" || gpg --keyserver hkp://pgp.mit.edu:80 --recv-keys \"$key\" ; done \\\n && curl -fsSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz\" \\\n && curl -fsSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz.asc\" \\\n && gpg --batch --verify yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz \\\n && mkdir -p /opt \\\n && tar -xzf yarn-v$YARN_VERSION.tar.gz -C /opt/ \\\n && ln -s /opt/yarn-v$YARN_VERSION/bin/yarn /usr/local/bin/yarn \\\n && ln -s /opt/yarn-v$YARN_VERSION/bin/yarnpkg /usr/local/bin/yarnpkg \\\n && rm yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz\n# # PUPPETEER DEPENDENCIES\n#  See https://crbug.com/795759\nRUN apt-get update \\\n && apt-get install libgconf-2-4 -yq\n#  Install latest chrome dev package and fonts to support major charsets (Chinese, Japanese, Arabic, Hebrew, Thai and a few others)\n#  Note: this installs the necessary libs to make the bundled version of Chromium that Puppeteer\n#  installs, work.\nRUN apt-get update \\\n && apt-get install --no-install-recommends wget -y \\\n && wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \\\n && sh -c 'echo \"deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main\" >> /etc/apt/sources.list.d/google.list' \\\n && apt-get update \\\n && apt-get install --no-install-recommends google-chrome-unstable fonts-ipafont-gothic fonts-wqy-zenhei fonts-thai-tlwg fonts-kacst ttf-freefont -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && apt-get purge --auto-remove -y curl \\\n && rm -rf /src/*.deb\n# # RUBY\n#  skip installing gem documentation\nRUN mkdir -p /usr/local/etc \\\n && { echo 'install: --no-document' ;echo 'update: --no-document' ; } >> /usr/local/etc/gemrc\nENV RUBY_MAJOR=\"2.3\"\nENV RUBY_VERSION=\"2.3.4\"\nENV RUBY_DOWNLOAD_SHA256=\"341cd9032e9fd17c452ed8562a8d43f7e45bfe05e411d0d7d627751dd82c578c\"\nENV RUBYGEMS_VERSION=\"2.6.3\"\nENV BUNDLER_VERSION=\"1.16.3\"\n#  some of ruby's build scripts are written in ruby\n#    we purge system ruby later to make sure our final image uses what we just built\nRUN set -ex \\\n && buildDeps=' bison dpkg-dev libgdbm-dev ruby ' \\\n && apt-get update \\\n && apt-get install --no-install-recommends $buildDeps -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && wget -O ruby.tar.xz \"https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz\" \\\n && echo \"$RUBY_DOWNLOAD_SHA256 *ruby.tar.xz\" | sha256sum -c - \\\n && mkdir -p /usr/src/ruby \\\n && tar -xJf ruby.tar.xz -C /usr/src/ruby --strip-components=1 \\\n && rm ruby.tar.xz \\\n && cd /usr/src/ruby \\\n && { echo '#define ENABLE_PATH_CHECK 0' ;echo ;cat file.c ; } > file.c.new \\\n && mv file.c.new file.c \\\n && autoconf \\\n && gnuArch=\"$( dpkg-architecture --query DEB_BUILD_GNU_TYPE ;)\" \\\n && ./configure --build=\"$gnuArch\" --disable-install-doc --enable-shared \\\n && make -j \"$( nproc ;)\" \\\n && make install \\\n && apt-get purge -y --auto-remove $buildDeps \\\n && cd / \\\n && rm -r /usr/src/ruby \\\n && gem update --system \"$RUBYGEMS_VERSION\" \\\n && gem install bundler --force \\\n && rm -r /root/.gem/\n#  install things globally, for great justice\n#  and don't create \".bundle\" in all our apps\nENV GEM_HOME=\"/usr/local/bundle\"\nENV BUNDLE_PATH=\"$GEM_HOME\" \\\n    BUNDLE_SILENCE_ROOT_WARNING=\"1\" \\\n    BUNDLE_APP_CONFIG=\"$GEM_HOME\"\n#  path recommendation: https://github.com/bundler/bundler/pull/6469#issuecomment-383235438\nENV PATH=\"$GEM_HOME/bin:$BUNDLE_PATH/gems/bin:$PATH\"\n#  adjust permissions of a few directories for running \"gem install\" as an arbitrary user\nRUN mkdir -p \"$GEM_HOME\" \\\n && chmod 777 \"$GEM_HOME\"\n#  (BUNDLE_PATH = GEM_HOME, no need to mkdir/chown both)\n","injectedSmells":[],"originalDockerfileHash":"8c4468ec9ccb4390fa3e973263226482","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM buildpack-deps:jessie\n#  # CircleCI dependencies\nRUN apt-get update ; apt-get install --no-install-recommends git ssh tar gzip ca-certificates zip unzip -y\nRUN groupadd --gid 1000 node \\\n && useradd --uid 1000 --gid node --shell /bin/bash --create-home node\n#  # NODE\n#   gpg keys listed at https://github.com/nodejs/node#release-team\nRUN set -ex \\\n && for key in 94AE36675C464D64BAFA68DD7434390BDBE9B9C5 FD3A5288F042B6850C66B31F09FE44734EB7990E 71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 DD8F2338BAE7501E3DD5AC78C273792F7D83545D C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 B9AE9905FFD7803F25714661B63B535A4C206CA9 56730D5401028683275BD23C23EFEFE93C4CFFFE 77984A986EBC2AA786BC0F66B01FBB92821C587A 8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600; do gpg --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys \"$key\" || gpg --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys \"$key\" || gpg --keyserver hkp://pgp.mit.edu:80 --recv-keys \"$key\" ; done\nENV NODE_VERSION=\"8.9.0\"\nRUN ARCH= \\\n && dpkgArch=\"$( dpkg --print-architecture ;)\" \\\n && case \"${dpkgArch##*-}\" in (amd64) ARCH='x64' ;;(ppc64el) ARCH='ppc64le' ;;(s390x) ARCH='s390x' ;;(arm64) ARCH='arm64' ;;(armhf) ARCH='armv7l' ;;(i386) ARCH='x86' ;;(*) echo \"unsupported architecture\" ; exit 1 ;; esac \\\n && curl -fsSLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-$ARCH.tar.xz\" \\\n && curl -fsSLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\" \\\n && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc \\\n && grep \" node-v$NODE_VERSION-linux-$ARCH.tar.xz$\" SHASUMS256.txt | sha256sum -c - \\\n && tar -xJf \"node-v$NODE_VERSION-linux-$ARCH.tar.xz\" -C /usr/local --strip-components=1 --no-same-owner \\\n && rm \"node-v$NODE_VERSION-linux-$ARCH.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt \\\n && ln -s /usr/local/bin/node /usr/local/bin/nodejs\n#  # YARN\nENV YARN_VERSION=\"1.9.2\"\nRUN set -ex \\\n && for key in 6A010C5166006599AA17F08146C2130DFD2497F5; do gpg --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys \"$key\" || gpg --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys \"$key\" || gpg --keyserver hkp://pgp.mit.edu:80 --recv-keys \"$key\" ; done \\\n && curl -fsSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz\" \\\n && curl -fsSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz.asc\" \\\n && gpg --batch --verify yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz \\\n && mkdir -p /opt \\\n && tar -xzf yarn-v$YARN_VERSION.tar.gz -C /opt/ \\\n && ln -s /opt/yarn-v$YARN_VERSION/bin/yarn /usr/local/bin/yarn \\\n && ln -s /opt/yarn-v$YARN_VERSION/bin/yarnpkg /usr/local/bin/yarnpkg \\\n && rm yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz\n#  # PUPPETEER DEPENDENCIES\n#   See https://crbug.com/795759\nRUN apt-get update \\\n && apt-get install libgconf-2-4 -yq\n#   Install latest chrome dev package and fonts to support major charsets (Chinese, Japanese, Arabic, Hebrew, Thai and a few others)\n#   Note: this installs the necessary libs to make the bundled version of Chromium that Puppeteer\n#   installs, work.\nRUN apt-get update \\\n && apt-get install --no-install-recommends wget -y \\\n && wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \\\n && sh -c 'echo \"deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main\" >> /etc/apt/sources.list.d/google.list' \\\n && apt-get update \\\n && apt-get install --no-install-recommends google-chrome-unstable fonts-ipafont-gothic fonts-wqy-zenhei fonts-thai-tlwg fonts-kacst ttf-freefont -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && apt-get purge --auto-remove -y curl \\\n && rm -rf /src/*.deb\n#  # RUBY\n#   skip installing gem documentation\nRUN mkdir -p /usr/local/etc \\\n && { echo 'install: --no-document' ;echo 'update: --no-document' ; } >> /usr/local/etc/gemrc\nENV RUBY_MAJOR=\"2.3\"\nENV RUBY_VERSION=\"2.3.4\"\nENV RUBY_DOWNLOAD_SHA256=\"341cd9032e9fd17c452ed8562a8d43f7e45bfe05e411d0d7d627751dd82c578c\"\nENV RUBYGEMS_VERSION=\"2.6.3\"\nENV BUNDLER_VERSION=\"1.16.3\"\n#   some of ruby's build scripts are written in ruby\n#     we purge system ruby later to make sure our final image uses what we just built\nRUN set -ex \\\n && buildDeps=' bison dpkg-dev libgdbm-dev ruby ' \\\n && apt-get update \\\n && apt-get install --no-install-recommends $buildDeps -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && wget -O ruby.tar.xz \"https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz\" \\\n && echo \"$RUBY_DOWNLOAD_SHA256 *ruby.tar.xz\" | sha256sum -c - \\\n && mkdir -p /usr/src/ruby \\\n && tar -xJf ruby.tar.xz -C /usr/src/ruby --strip-components=1 \\\n && rm ruby.tar.xz \\\n && cd /usr/src/ruby \\\n && { echo '#define ENABLE_PATH_CHECK 0' ;echo ;cat file.c ; } > file.c.new \\\n && mv file.c.new file.c \\\n && autoconf \\\n && gnuArch=\"$( dpkg-architecture --query DEB_BUILD_GNU_TYPE ;)\" \\\n && ./configure --build=\"$gnuArch\" --disable-install-doc --enable-shared \\\n && make -j \"$( nproc ;)\" \\\n && make install \\\n && apt-get purge -y --auto-remove $buildDeps \\\n && cd / \\\n && rm -r /usr/src/ruby \\\n && gem update --system \"$RUBYGEMS_VERSION\" \\\n && gem install bundler --force \\\n && rm -r /root/.gem/\n#   install things globally, for great justice\n#   and don't create \".bundle\" in all our apps\nENV GEM_HOME=\"/usr/local/bundle\"\nENV BUNDLE_PATH=\"$GEM_HOME\" \\\n    BUNDLE_SILENCE_ROOT_WARNING=\"1\" \\\n    BUNDLE_APP_CONFIG=\"$GEM_HOME\"\n#   path recommendation: https://github.com/bundler/bundler/pull/6469#issuecomment-383235438\nENV PATH=\"$GEM_HOME/bin:$BUNDLE_PATH/gems/bin:$PATH\"\n#   adjust permissions of a few directories for running \"gem install\" as an arbitrary user\nRUN mkdir -p \"$GEM_HOME\" \\\n && chmod 777 \"$GEM_HOME\"\n#   (BUNDLE_PATH = GEM_HOME, no need to mkdir/chown both)\n","originalDockerfileUglifiedHash":"b0479e090b4709fbef4ec815dcd124f3","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/73576e33a987322bc39ef262a32e753541135be5.dockerfile"}