{"seed":1481342120,"processedDockerfileHash":"5628376a767ad9128669440a76e06e27","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","have-a-healthcheck","have-a-user"],"processedDockerfile":"#  ##\n#   Dockerfile for Unidata Tomcat.\n#  ##\nFROM tomcat:8.5-jre8\n#  ##\n#   Usual maintenance\n#  ##\nRUN apt-get update \\\n && apt-get install --no-install-recommends zip -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \\\n && rm -rf ${CATALINA_HOME}/webapps/* \\\n && rm -rf ${CATALINA_HOME}/server/webapps/* \\\n && cd ${CATALINA_HOME}/lib \\\n && mkdir -p org/apache/catalina/util/ \\\n && unzip -j catalina.jar org/apache/catalina/util/ServerInfo.properties -d org/apache/catalina/util/ \\\n && sed -i 's/server.info=.*/server.info=Apache Tomcat/g' org/apache/catalina/util/ServerInfo.properties \\\n && zip -ur catalina.jar org/apache/catalina/util/ServerInfo.properties \\\n && rm -rf org \\\n && cd ${CATALINA_HOME} \\\n && sed -i 's/<Connector/<Connector server=\"Apache\" secure=\"true\"/g' ${CATALINA_HOME}/conf/server.xml \\\n && sed -i 's/resourceName=\"UserDatabase\"\\/>/resourceName=\"UserDatabase\"><CredentialHandler className=\"org.apache.catalina.realm.MessageDigestCredentialHandler\" algorithm=\"SHA\" \\/><\\/Realm>/g' ${CATALINA_HOME}/conf/server.xml \\\n && echo \"session optional pam_umask.so\" >> /etc/pam.d/common-session \\\n && sed -i 's/UMASK.*022/UMASK 007/g' /etc/login.defs\n#  ##\n#   gosu is a non-optimal way to deal with the mismatches between Unix user and\n#   group IDs inside versus outside the container resulting in permission\n#   headaches when writing to directory outside the container.\n#  ##\n#   Installation instructions copy/pasted from\n#   https://github.com/tianon/gosu/blob/master/INSTALL.md\n#   minus ca-certificates which we are inheriting from parent container\nENV GOSU_VERSION=\"1.11\"\nRUN set -ex ; fetchDeps=' wget ' ; apt-get update ; apt-get install --no-install-recommends $fetchDeps -y ; rm -rf /var/lib/apt/lists/* ; dpkgArch=\"$( dpkg --print-architecture | awk -F- '{ print $NF }' ;)\" ; wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\" ; wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\" ; export GNUPGHOME=\"$( mktemp -d ;)\" ; export KEY=B42F6819007F00F88E364FD4036A9C25BF357DD4 ; for server in $( shuf -e ha.pool.sks-keyservers.net hkp://p80.pool.sks-keyservers.net:80 keyserver.ubuntu.com hkp://keyserver.ubuntu.com:80 keyserver.pgp.com pgp.mit.edu ;); do gpg --batch --keyserver \"$server\" --recv-keys $KEY \\\n && break || : ; done ; gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu ; rm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc ; chmod +x /usr/local/bin/gosu ; gosu nobody true ; apt-get purge -y --auto-remove $fetchDeps\n#  ##\n#   Capture stack traces to non-existent file\n#  ##\nCOPY error-page.xml.snippet ${CATALINA_HOME}\nRUN sed -i '$d' ${CATALINA_HOME}/conf/web.xml \\\n && cat error-page.xml.snippet >> ${CATALINA_HOME}/conf/web.xml \\\n && rm error-page.xml.snippet\n#  ##\n#   Tomcat start script\n#  ##\nCOPY start-tomcat.sh ${CATALINA_HOME}/bin\nCOPY entrypoint.sh /\n#  ##\n#   Start container\n#  ##\nENTRYPOINT [\"/entrypoint.sh\"]\nCMD [\"start-tomcat.sh\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\nHEALTHCHECK CMD curl --fail http://127.0.0.1:8080 || exit 1\n","originalDockerfile":"# ##\n#  Dockerfile for Unidata Tomcat.\n# ##\nFROM tomcat:8.5-jre8\n# ##\n#  Usual maintenance\n# ##\nRUN apt-get update \\\n && apt-get install zip -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \\\n && rm -rf ${CATALINA_HOME}/webapps/* \\\n && rm -rf ${CATALINA_HOME}/server/webapps/* \\\n && cd ${CATALINA_HOME}/lib \\\n && mkdir -p org/apache/catalina/util/ \\\n && unzip -j catalina.jar org/apache/catalina/util/ServerInfo.properties -d org/apache/catalina/util/ \\\n && sed -i 's/server.info=.*/server.info=Apache Tomcat/g' org/apache/catalina/util/ServerInfo.properties \\\n && zip -ur catalina.jar org/apache/catalina/util/ServerInfo.properties \\\n && rm -rf org \\\n && cd ${CATALINA_HOME} \\\n && sed -i 's/<Connector/<Connector server=\"Apache\" secure=\"true\"/g' ${CATALINA_HOME}/conf/server.xml \\\n && sed -i 's/resourceName=\"UserDatabase\"\\/>/resourceName=\"UserDatabase\"><CredentialHandler className=\"org.apache.catalina.realm.MessageDigestCredentialHandler\" algorithm=\"SHA\" \\/><\\/Realm>/g' ${CATALINA_HOME}/conf/server.xml \\\n && echo \"session optional pam_umask.so\" >> /etc/pam.d/common-session \\\n && sed -i 's/UMASK.*022/UMASK 007/g' /etc/login.defs\n# ##\n#  gosu is a non-optimal way to deal with the mismatches between Unix user and\n#  group IDs inside versus outside the container resulting in permission\n#  headaches when writing to directory outside the container.\n# ##\n#  Installation instructions copy/pasted from\n#  https://github.com/tianon/gosu/blob/master/INSTALL.md\n#  minus ca-certificates which we are inheriting from parent container\nENV GOSU_VERSION=\"1.11\"\nRUN set -ex ; fetchDeps=' wget ' ; apt-get update ; apt-get install --no-install-recommends $fetchDeps -y ; rm -rf /var/lib/apt/lists/* ; dpkgArch=\"$( dpkg --print-architecture | awk -F- '{ print $NF }' ;)\" ; wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\" ; wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\" ; export GNUPGHOME=\"$( mktemp -d ;)\" ; export KEY=B42F6819007F00F88E364FD4036A9C25BF357DD4 ; for server in $( shuf -e ha.pool.sks-keyservers.net hkp://p80.pool.sks-keyservers.net:80 keyserver.ubuntu.com hkp://keyserver.ubuntu.com:80 keyserver.pgp.com pgp.mit.edu ;); do gpg --batch --keyserver \"$server\" --recv-keys $KEY \\\n && break || : ; done ; gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu ; rm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc ; chmod +x /usr/local/bin/gosu ; gosu nobody true ; apt-get purge -y --auto-remove $fetchDeps\n# ##\n#  Capture stack traces to non-existent file\n# ##\nCOPY error-page.xml.snippet ${CATALINA_HOME}\nRUN sed -i '$d' ${CATALINA_HOME}/conf/web.xml \\\n && cat error-page.xml.snippet >> ${CATALINA_HOME}/conf/web.xml \\\n && rm error-page.xml.snippet\n# ##\n#  Tomcat start script\n# ##\nCOPY start-tomcat.sh ${CATALINA_HOME}/bin\nCOPY entrypoint.sh /\n# ##\n#  Start container\n# ##\nENTRYPOINT [\"/entrypoint.sh\"]\nCMD [\"start-tomcat.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"441d6dddea59c1a3aaa73dd2584b7ca8","successfullyInjectedSmells":[],"originalDockerfileUglified":"#  ##\n#   Dockerfile for Unidata Tomcat.\n#  ##\nFROM tomcat:8.5-jre8\n#  ##\n#   Usual maintenance\n#  ##\nRUN apt-get update \\\n && apt-get install zip -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \\\n && rm -rf ${CATALINA_HOME}/webapps/* \\\n && rm -rf ${CATALINA_HOME}/server/webapps/* \\\n && cd ${CATALINA_HOME}/lib \\\n && mkdir -p org/apache/catalina/util/ \\\n && unzip -j catalina.jar org/apache/catalina/util/ServerInfo.properties -d org/apache/catalina/util/ \\\n && sed -i 's/server.info=.*/server.info=Apache Tomcat/g' org/apache/catalina/util/ServerInfo.properties \\\n && zip -ur catalina.jar org/apache/catalina/util/ServerInfo.properties \\\n && rm -rf org \\\n && cd ${CATALINA_HOME} \\\n && sed -i 's/<Connector/<Connector server=\"Apache\" secure=\"true\"/g' ${CATALINA_HOME}/conf/server.xml \\\n && sed -i 's/resourceName=\"UserDatabase\"\\/>/resourceName=\"UserDatabase\"><CredentialHandler className=\"org.apache.catalina.realm.MessageDigestCredentialHandler\" algorithm=\"SHA\" \\/><\\/Realm>/g' ${CATALINA_HOME}/conf/server.xml \\\n && echo \"session optional pam_umask.so\" >> /etc/pam.d/common-session \\\n && sed -i 's/UMASK.*022/UMASK 007/g' /etc/login.defs\n#  ##\n#   gosu is a non-optimal way to deal with the mismatches between Unix user and\n#   group IDs inside versus outside the container resulting in permission\n#   headaches when writing to directory outside the container.\n#  ##\n#   Installation instructions copy/pasted from\n#   https://github.com/tianon/gosu/blob/master/INSTALL.md\n#   minus ca-certificates which we are inheriting from parent container\nENV GOSU_VERSION=\"1.11\"\nRUN set -ex ; fetchDeps=' wget ' ; apt-get update ; apt-get install --no-install-recommends $fetchDeps -y ; rm -rf /var/lib/apt/lists/* ; dpkgArch=\"$( dpkg --print-architecture | awk -F- '{ print $NF }' ;)\" ; wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\" ; wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\" ; export GNUPGHOME=\"$( mktemp -d ;)\" ; export KEY=B42F6819007F00F88E364FD4036A9C25BF357DD4 ; for server in $( shuf -e ha.pool.sks-keyservers.net hkp://p80.pool.sks-keyservers.net:80 keyserver.ubuntu.com hkp://keyserver.ubuntu.com:80 keyserver.pgp.com pgp.mit.edu ;); do gpg --batch --keyserver \"$server\" --recv-keys $KEY \\\n && break || : ; done ; gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu ; rm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc ; chmod +x /usr/local/bin/gosu ; gosu nobody true ; apt-get purge -y --auto-remove $fetchDeps\n#  ##\n#   Capture stack traces to non-existent file\n#  ##\nCOPY error-page.xml.snippet ${CATALINA_HOME}\nRUN sed -i '$d' ${CATALINA_HOME}/conf/web.xml \\\n && cat error-page.xml.snippet >> ${CATALINA_HOME}/conf/web.xml \\\n && rm error-page.xml.snippet\n#  ##\n#   Tomcat start script\n#  ##\nCOPY start-tomcat.sh ${CATALINA_HOME}/bin\nCOPY entrypoint.sh /\n#  ##\n#   Start container\n#  ##\nENTRYPOINT [\"/entrypoint.sh\"]\nCMD [\"start-tomcat.sh\"]\n","originalDockerfileUglifiedHash":"4ee847072ef9cb6b7474027355a70942","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/5c1e27a6d8954a168b5dd6653967d8ba4c3a77d5.dockerfile"}