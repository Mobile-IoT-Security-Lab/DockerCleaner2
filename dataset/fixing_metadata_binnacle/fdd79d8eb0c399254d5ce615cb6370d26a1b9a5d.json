{"seed":2935727742,"processedDockerfileHash":"99d8d033a8b75276f052354ee4e67cc8","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM gcr.io/google-appengine/debian9\n#   Get the list of packages from the base image.\n#   add our user and group first to make sure their IDs get assigned consistently, regardless of whatever dependencies get added\nRUN groupadd -r redis \\\n && useradd -r -g redis redis\nRUN set -ex ; if ! command -v gpg > /dev/null; then apt-get update ;apt-get install --no-install-recommends gnupg=2.2.40-1ubuntu2 dirmngr=2.2.40-1ubuntu2 -y ;rm -rf /var/lib/apt/lists/* ; fi\nRUN apt-get update \\\n && apt-get install --no-install-recommends ca-certificates=20230311 wget=1.21.3-1ubuntu1 -y \\\n && rm -rf /var/lib/apt/lists/*\n#   add gosu for easy step-down from root\nENV GOSU_VERSION=\"1.10\"\nENV GOSU_GPG=\"B42F6819007F00F88E364FD4036A9C25BF357DD4\"\nRUN set -x \\\n && wget -q -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;)\" \\\n && wget -q -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;).asc\" \\\n && wget -q -O /usr/local/src/gosu.tar.gz \"https://github.com/tianon/gosu/archive/$GOSU_VERSION.tar.gz\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && found='' \\\n && for server in pool.sks-keyservers.net na.pool.sks-keyservers.net eu.pool.sks-keyservers.net oc.pool.sks-keyservers.net ha.pool.sks-keyservers.net hkp://p80.pool.sks-keyservers.net:80 hkp://keyserver.ubuntu.com:80 pgp.mit.edu; do gpg --no-tty --keyserver $server --recv-keys $GOSU_GPG \\\n && found=yes \\\n && break ; done ; test -n \"$found\" \\\n && gpg --no-tty --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \\\n && rm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc \\\n && chmod +x /usr/local/bin/gosu \\\n && gosu nobody true\n#   Install Redis Search\nENV REDIS_VERSION=\"5.0.5\"\nENV REDIS_DOWNLOAD_URL=\"http://download.redis.io/releases/redis-5.0.5.tar.gz\"\nENV REDIS_DOWNLOAD_SHA=\"2139009799d21d8ff94fc40b7f36ac46699b9e1254086299f8d3b223ca54a375\"\n#   for redis-sentinel see: http://redis.io/topics/sentinel\nRUN set -ex \\\n && buildDeps=' gcc libc6-dev make ' \\\n && apt-get update \\\n && apt-get install --no-install-recommends $buildDeps -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && wget -q -O redis.tar.gz \"$REDIS_DOWNLOAD_URL\" \\\n && echo \"$REDIS_DOWNLOAD_SHA *redis.tar.gz\" | sha256sum -c - \\\n && mkdir -p /usr/local/src/redis \\\n && tar -xzf redis.tar.gz -C /usr/local/src/redis --strip-components=1 \\\n && rm redis.tar.gz \\\n && grep -q '^#define CONFIG_DEFAULT_PROTECTED_MODE 1$' /usr/local/src/redis/src/server.h \\\n && sed -ri 's!^(#define CONFIG_DEFAULT_PROTECTED_MODE) 1$!\\1 0!' /usr/local/src/redis/src/server.h \\\n && grep -q '^#define CONFIG_DEFAULT_PROTECTED_MODE 0$' /usr/local/src/redis/src/server.h \\\n && make -C /usr/local/src/redis \\\n && make -C /usr/local/src/redis install \\\n && rm -r /usr/local/src/redis \\\n && apt-get purge -y --auto-remove $buildDeps\nRUN mkdir /data \\\n && chown redis:redis /data\nVOLUME /data\nWORKDIR /data\n#   Copy BSD License\nRUN mkdir -p /usr/share/redis\nCOPY LICENSE /usr/share/redis/\nCOPY docker-entrypoint.sh /usr/local/bin/\nENTRYPOINT [\"docker-entrypoint.sh\"]\nEXPOSE 6379/tcp\nCMD [\"redis-server\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM gcr.io/google-appengine/debian9\n#  Get the list of packages from the base image.\n#  add our user and group first to make sure their IDs get assigned consistently, regardless of whatever dependencies get added\nRUN groupadd -r redis \\\n && useradd -r -g redis redis\nRUN set -ex ; if ! command -v gpg > /dev/null; then apt-get update ;apt-get install --no-install-recommends gnupg dirmngr -y ;rm -rf /var/lib/apt/lists/* ; fi\nRUN apt-get update \\\n && apt-get install --no-install-recommends ca-certificates wget -y \\\n && rm -rf /var/lib/apt/lists/*\n#  add gosu for easy step-down from root\nENV GOSU_VERSION=\"1.10\"\nENV GOSU_GPG=\"B42F6819007F00F88E364FD4036A9C25BF357DD4\"\nRUN set -x \\\n && wget -q -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;)\" \\\n && wget -q -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;).asc\" \\\n && wget -q -O /usr/local/src/gosu.tar.gz \"https://github.com/tianon/gosu/archive/$GOSU_VERSION.tar.gz\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && found='' \\\n && for server in pool.sks-keyservers.net na.pool.sks-keyservers.net eu.pool.sks-keyservers.net oc.pool.sks-keyservers.net ha.pool.sks-keyservers.net hkp://p80.pool.sks-keyservers.net:80 hkp://keyserver.ubuntu.com:80 pgp.mit.edu; do gpg --no-tty --keyserver $server --recv-keys $GOSU_GPG \\\n && found=yes \\\n && break ; done ; test -n \"$found\" \\\n && gpg --no-tty --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \\\n && rm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc \\\n && chmod +x /usr/local/bin/gosu \\\n && gosu nobody true\n#  Install Redis Search\nENV REDIS_VERSION=\"5.0.5\"\nENV REDIS_DOWNLOAD_URL=\"http://download.redis.io/releases/redis-5.0.5.tar.gz\"\nENV REDIS_DOWNLOAD_SHA=\"2139009799d21d8ff94fc40b7f36ac46699b9e1254086299f8d3b223ca54a375\"\n#  for redis-sentinel see: http://redis.io/topics/sentinel\nRUN set -ex \\\n && buildDeps=' gcc libc6-dev make ' \\\n && apt-get update \\\n && apt-get install --no-install-recommends $buildDeps -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && wget -q -O redis.tar.gz \"$REDIS_DOWNLOAD_URL\" \\\n && echo \"$REDIS_DOWNLOAD_SHA *redis.tar.gz\" | sha256sum -c - \\\n && mkdir -p /usr/local/src/redis \\\n && tar -xzf redis.tar.gz -C /usr/local/src/redis --strip-components=1 \\\n && rm redis.tar.gz \\\n && grep -q '^#define CONFIG_DEFAULT_PROTECTED_MODE 1$' /usr/local/src/redis/src/server.h \\\n && sed -ri 's!^(#define CONFIG_DEFAULT_PROTECTED_MODE) 1$!\\1 0!' /usr/local/src/redis/src/server.h \\\n && grep -q '^#define CONFIG_DEFAULT_PROTECTED_MODE 0$' /usr/local/src/redis/src/server.h \\\n && make -C /usr/local/src/redis \\\n && make -C /usr/local/src/redis install \\\n && rm -r /usr/local/src/redis \\\n && apt-get purge -y --auto-remove $buildDeps\nRUN mkdir /data \\\n && chown redis:redis /data\nVOLUME /data\nWORKDIR /data\n#  Copy BSD License\nRUN mkdir -p /usr/share/redis\nCOPY LICENSE /usr/share/redis/\nCOPY docker-entrypoint.sh /usr/local/bin/\nENTRYPOINT [\"docker-entrypoint.sh\"]\nEXPOSE 6379/tcp\nCMD [\"redis-server\"]\n","injectedSmells":[],"originalDockerfileHash":"ede96eaabb5686480769186daefba67e","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM gcr.io/google-appengine/debian9\n#   Get the list of packages from the base image.\n#   add our user and group first to make sure their IDs get assigned consistently, regardless of whatever dependencies get added\nRUN groupadd -r redis \\\n && useradd -r -g redis redis\nRUN set -ex ; if ! command -v gpg > /dev/null; then apt-get update ;apt-get install --no-install-recommends gnupg dirmngr -y ;rm -rf /var/lib/apt/lists/* ; fi\nRUN apt-get update \\\n && apt-get install --no-install-recommends ca-certificates wget -y \\\n && rm -rf /var/lib/apt/lists/*\n#   add gosu for easy step-down from root\nENV GOSU_VERSION=\"1.10\"\nENV GOSU_GPG=\"B42F6819007F00F88E364FD4036A9C25BF357DD4\"\nRUN set -x \\\n && wget -q -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;)\" \\\n && wget -q -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;).asc\" \\\n && wget -q -O /usr/local/src/gosu.tar.gz \"https://github.com/tianon/gosu/archive/$GOSU_VERSION.tar.gz\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && found='' \\\n && for server in pool.sks-keyservers.net na.pool.sks-keyservers.net eu.pool.sks-keyservers.net oc.pool.sks-keyservers.net ha.pool.sks-keyservers.net hkp://p80.pool.sks-keyservers.net:80 hkp://keyserver.ubuntu.com:80 pgp.mit.edu; do gpg --no-tty --keyserver $server --recv-keys $GOSU_GPG \\\n && found=yes \\\n && break ; done ; test -n \"$found\" \\\n && gpg --no-tty --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \\\n && rm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc \\\n && chmod +x /usr/local/bin/gosu \\\n && gosu nobody true\n#   Install Redis Search\nENV REDIS_VERSION=\"5.0.5\"\nENV REDIS_DOWNLOAD_URL=\"http://download.redis.io/releases/redis-5.0.5.tar.gz\"\nENV REDIS_DOWNLOAD_SHA=\"2139009799d21d8ff94fc40b7f36ac46699b9e1254086299f8d3b223ca54a375\"\n#   for redis-sentinel see: http://redis.io/topics/sentinel\nRUN set -ex \\\n && buildDeps=' gcc libc6-dev make ' \\\n && apt-get update \\\n && apt-get install --no-install-recommends $buildDeps -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && wget -q -O redis.tar.gz \"$REDIS_DOWNLOAD_URL\" \\\n && echo \"$REDIS_DOWNLOAD_SHA *redis.tar.gz\" | sha256sum -c - \\\n && mkdir -p /usr/local/src/redis \\\n && tar -xzf redis.tar.gz -C /usr/local/src/redis --strip-components=1 \\\n && rm redis.tar.gz \\\n && grep -q '^#define CONFIG_DEFAULT_PROTECTED_MODE 1$' /usr/local/src/redis/src/server.h \\\n && sed -ri 's!^(#define CONFIG_DEFAULT_PROTECTED_MODE) 1$!\\1 0!' /usr/local/src/redis/src/server.h \\\n && grep -q '^#define CONFIG_DEFAULT_PROTECTED_MODE 0$' /usr/local/src/redis/src/server.h \\\n && make -C /usr/local/src/redis \\\n && make -C /usr/local/src/redis install \\\n && rm -r /usr/local/src/redis \\\n && apt-get purge -y --auto-remove $buildDeps\nRUN mkdir /data \\\n && chown redis:redis /data\nVOLUME /data\nWORKDIR /data\n#   Copy BSD License\nRUN mkdir -p /usr/share/redis\nCOPY LICENSE /usr/share/redis/\nCOPY docker-entrypoint.sh /usr/local/bin/\nENTRYPOINT [\"docker-entrypoint.sh\"]\nEXPOSE 6379/tcp\nCMD [\"redis-server\"]\n","originalDockerfileUglifiedHash":"bd4f183c2900181110e1e6e950c6a0bf","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/fdd79d8eb0c399254d5ce615cb6370d26a1b9a5d.dockerfile"}