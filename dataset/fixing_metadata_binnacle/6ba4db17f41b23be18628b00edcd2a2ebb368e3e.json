{"seed":3009105731,"processedDockerfileHash":"9a058bd03e2c999b17b7b81d6fbdcd7b","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM tensorflow/tensorflow:1.4.1-py3\nLABEL maintainer=\"Alexis Kofman <alexis.kofman@gmail.com>\"\nENV PKG_CONFIG_PATH=\"/usr/local/lib/pkgconfig\" \\\n    LD_LIBRARY_PATH=\"/usr/local/lib\" \\\n    SRC=\"/usr/local\" \\\n    OPENCV_VERSION=\"3.3.1\" \\\n    FFMPEG_VERSION=\"3.4\" \\\n    FDKAAC_VERSION=\"0.1.5\" \\\n    LAME_VERSION=\"3.99.5\" \\\n    OGG_VERSION=\"1.3.3\" \\\n    OPENCOREAMR_VERSION=\"0.1.5\" \\\n    OPUS_VERSION=\"1.2.1\" \\\n    THEORA_VERSION=\"1.1.1\" \\\n    VORBIS_VERSION=\"1.3.5\" \\\n    VPX_VERSION=\"1.6.1\" \\\n    X264_VERSION=\"20171204-2245-stable\" \\\n    X265_VERSION=\"2.6\" \\\n    XVID_VERSION=\"1.3.4\" \\\n    FREETYPE_VERSION=\"2.8.1\" \\\n    LIBVIDSTAB_VERSION=\"1.1.0\" \\\n    OPENCV_SHA256SUM=\"5dca3bb0d661af311e25a72b04a7e4c22c47c1aa86eb73e70063cd378a2aa6ee  3.3.1.tar.gz\" \\\n    FFMPEG_SHA256SUM=\"6ed03b00404a3923e3c2f560248a9c9ad79fbaaee26d723f74aae6b31fe2bae6  ffmpeg-3.4.tar.gz\" \\\n    FDKAAC_SHA256SUM=\"ff53d1d01cacc29c071e23192dfefa93bdbeaf775fc5d296259b4859d0306b79  v0.1.5.tar.gz\" \\\n    LAME_SHA256SUM=\"24346b4158e4af3bd9f2e194bb23eb473c75fb7377011523353196b19b9a23ff  lame-3.99.5.tar.gz\" \\\n    OGG_SHA256SUM=\"c2e8a485110b97550f453226ec644ebac6cb29d1caef2902c007edab4308d985  libogg-1.3.3.tar.gz\" \\\n    OPENCOREAMR_SHA256SUM=\"2c006cb9d5f651bfb5e60156dbff6af3c9d35c7bbcc9015308c0aff1e14cd341  opencore-amr-0.1.5.tar.gz\" \\\n    OPUS_SHA256SUM=\"cfafd339ccd9c5ef8d6ab15d7e1a412c054bf4cb4ecbbbcc78c12ef2def70732  opus-1.2.1.tar.gz\" \\\n    THEORA_SHA256SUM=\"40952956c47811928d1e7922cda3bc1f427eb75680c3c37249c91e949054916b  libtheora-1.1.1.tar.gz\" \\\n    VORBIS_SHA256SUM=\"6efbcecdd3e5dfbf090341b485da9d176eb250d893e3eb378c428a2db38301ce  libvorbis-1.3.5.tar.gz\" \\\n    VPX_SHA256SUM=\"cda8bb6f0e4848c018177d3a576fa83ed96d762554d7010fe4cfb9d70c22e588  v1.6.1\" \\\n    X264_SHA256SUM=\"73eeeed30b5c5dd2ac677383f123cf03ed05a38ef12cfcf78559fe468fdec46f  x264-snapshot-20171204-2245-stable.tar.bz2\" \\\n    X265_SHA256SUM=\"1bf0036415996af841884802161065b9e6be74f5f6808ac04831363e2549cdbf  x265_2.6.tar.gz\" \\\n    XVID_SHA256SUM=\"4e9fd62728885855bc5007fe1be58df42e5e274497591fec37249e1052ae316f  xvidcore-1.3.4.tar.gz\" \\\n    FREETYPE_SHA256SUM=\"876711d064a6a1bd74beb18dd37f219af26100f72daaebd2d86cb493d7cd7ec6  freetype-2.8.1.tar.gz\" \\\n    LIBVIDSTAB_SHA256SUM=\"14d2a053e56edad4f397be0cb3ef8eb1ec3150404ce99a426c4eb641861dc0bb  v1.1.0.tar.gz\"\n#  # INSTALL FFMPEG https://ffmpeg.org\nRUN apt-get update -yqq \\\n && apt-get install --no-install-recommends ca-certificates expat libgomp1 -yq \\\n && buildDeps=\"autoconf automake cmake curl bzip2 libexpat1-dev g++ gcc git gperf libtool make nasm perl pkg-config python libssl-dev yasm zlib1g-dev\" \\\n && apt-get install --no-install-recommends ${buildDeps} -yq \\\n && export MAKEFLAGS=\"-j$(($( grep -c ^processor /proc/cpuinfo ;) + 1))\" \\\n && DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -sLO https://downloads.sf.net/project/opencore-amr/opencore-amr/opencore-amr-${OPENCOREAMR_VERSION}.tar.gz \\\n && echo ${OPENCOREAMR_SHA256SUM} | sha256sum --check \\\n && tar -zx --strip-components=1 -f opencore-amr-${OPENCOREAMR_VERSION}.tar.gz \\\n && ./configure --prefix=\"${SRC}\" --bindir=\"${SRC}/bin\" --enable-shared --datadir=${DIR} \\\n && make \\\n && make install \\\n && rm -rf ${DIR} \\\n && DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -sLO ftp://ftp.videolan.org/pub/videolan/x264/snapshots/x264-snapshot-${X264_VERSION}.tar.bz2 \\\n && echo ${X264_SHA256SUM} | sha256sum --check \\\n && tar -jx --strip-components=1 -f x264-snapshot-${X264_VERSION}.tar.bz2 \\\n && ./configure --prefix=\"${SRC}\" --bindir=\"${SRC}/bin\" --enable-pic --enable-shared --disable-cli \\\n && make \\\n && make install \\\n && rm -rf ${DIR} \\\n && DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -sLO https://download.videolan.org/pub/videolan/x265/x265_${X265_VERSION}.tar.gz \\\n && echo ${X265_SHA256SUM} | sha256sum --check \\\n && tar -zx -f x265_${X265_VERSION}.tar.gz \\\n && cd x265_v${X265_VERSION}/build/linux \\\n && ./multilib.sh \\\n && make -C 8bit install \\\n && rm -rf ${DIR} \\\n && DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -sLO http://downloads.xiph.org/releases/ogg/libogg-${OGG_VERSION}.tar.gz \\\n && echo ${OGG_SHA256SUM} | sha256sum --check \\\n && tar -zx --strip-components=1 -f libogg-${OGG_VERSION}.tar.gz \\\n && ./configure --prefix=\"${SRC}\" --bindir=\"${SRC}/bin\" --disable-static --datarootdir=${DIR} \\\n && make \\\n && make install \\\n && rm -rf ${DIR} \\\n && DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -sLO https://archive.mozilla.org/pub/opus/opus-${OPUS_VERSION}.tar.gz \\\n && echo ${OPUS_SHA256SUM} | sha256sum --check \\\n && tar -zx --strip-components=1 -f opus-${OPUS_VERSION}.tar.gz \\\n && autoreconf -fiv \\\n && ./configure --prefix=\"${SRC}\" --disable-static --datadir=\"${DIR}\" \\\n && make \\\n && make install \\\n && rm -rf ${DIR} \\\n && DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -sLO http://downloads.xiph.org/releases/vorbis/libvorbis-${VORBIS_VERSION}.tar.gz \\\n && echo ${VORBIS_SHA256SUM} | sha256sum --check \\\n && tar -zx --strip-components=1 -f libvorbis-${VORBIS_VERSION}.tar.gz \\\n && ./configure --prefix=\"${SRC}\" --with-ogg=\"${SRC}\" --bindir=\"${SRC}/bin\" --disable-static --datadir=\"${DIR}\" \\\n && make \\\n && make install \\\n && rm -rf ${DIR} \\\n && DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -sLO http://downloads.xiph.org/releases/theora/libtheora-${THEORA_VERSION}.tar.gz \\\n && echo ${THEORA_SHA256SUM} | sha256sum --check \\\n && tar -zx --strip-components=1 -f libtheora-${THEORA_VERSION}.tar.gz \\\n && ./configure --prefix=\"${SRC}\" --with-ogg=\"${SRC}\" --bindir=\"${SRC}/bin\" --disable-static --datadir=\"${DIR}\" \\\n && make \\\n && make install \\\n && rm -rf ${DIR} \\\n && DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -sLO https://codeload.github.com/webmproject/libvpx/tar.gz/v${VPX_VERSION} \\\n && echo ${VPX_SHA256SUM} | sha256sum --check \\\n && tar -zx --strip-components=1 -f v${VPX_VERSION} \\\n && ./configure --prefix=\"${SRC}\" --enable-vp8 --enable-vp9 --enable-pic --disable-debug --disable-examples --disable-docs --disable-install-bins --enable-shared \\\n && make \\\n && make install \\\n && rm -rf ${DIR} \\\n && DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -sLO https://downloads.sf.net/project/lame/lame/${LAME_VERSION%.*}/lame-${LAME_VERSION}.tar.gz \\\n && echo ${LAME_SHA256SUM} | sha256sum --check \\\n && tar -zx --strip-components=1 -f lame-${LAME_VERSION}.tar.gz \\\n && ./configure --prefix=\"${SRC}\" --bindir=\"${SRC}/bin\" --disable-static --enable-nasm --datarootdir=\"${DIR}\" \\\n && make \\\n && make install \\\n && rm -rf ${DIR} \\\n && DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -sLO http://downloads.xvid.org/downloads/xvidcore-${XVID_VERSION}.tar.gz \\\n && echo ${XVID_SHA256SUM} | sha256sum --check \\\n && tar -zx -f xvidcore-${XVID_VERSION}.tar.gz \\\n && cd xvidcore/build/generic \\\n && ./configure --prefix=\"${SRC}\" --bindir=\"${SRC}/bin\" --datadir=\"${DIR}\" --disable-static --enable-shared \\\n && make \\\n && make install \\\n && rm -rf ${DIR} \\\n && DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -sLO https://github.com/mstorsjo/fdk-aac/archive/v${FDKAAC_VERSION}.tar.gz \\\n && echo ${FDKAAC_SHA256SUM} | sha256sum --check \\\n && tar -zx --strip-components=1 -f v${FDKAAC_VERSION}.tar.gz \\\n && autoreconf -fiv \\\n && ./configure --prefix=\"${SRC}\" --disable-static --datadir=\"${DIR}\" \\\n && make \\\n && make install \\\n && make distclean \\\n && rm -rf ${DIR} \\\n && DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -sLO http://download.savannah.gnu.org/releases/freetype/freetype-${FREETYPE_VERSION}.tar.gz \\\n && echo ${FREETYPE_SHA256SUM} | sha256sum --check \\\n && tar -zx --strip-components=1 -f freetype-${FREETYPE_VERSION}.tar.gz \\\n && ./configure --disable-static --enable-shared \\\n && make \\\n && make install \\\n && make distclean \\\n && rm -rf ${DIR} \\\n && DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -sLO https://github.com/georgmartius/vid.stab/archive/v${LIBVIDSTAB_VERSION}.tar.gz \\\n && echo ${LIBVIDSTAB_SHA256SUM} | sha256sum --check \\\n && tar -zx --strip-components=1 -f v${LIBVIDSTAB_VERSION}.tar.gz \\\n && cmake . \\\n && make \\\n && make install \\\n && rm -rf ${DIR} \\\n && DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -sLO https://ffmpeg.org/releases/ffmpeg-${FFMPEG_VERSION}.tar.gz \\\n && echo ${FFMPEG_SHA256SUM} | sha256sum --check \\\n && tar -zx --strip-components=1 -f ffmpeg-${FFMPEG_VERSION}.tar.gz \\\n && ./configure --bindir=\"${SRC}/bin\" --disable-debug --disable-doc --disable-ffplay --disable-static --enable-avresample --enable-gpl --enable-libopencore-amrnb --enable-libopencore-amrwb --enable-libfdk_aac --enable-libfreetype --enable-libvidstab --enable-libmp3lame --enable-libopus --enable-libtheora --enable-libvorbis --enable-libvpx --enable-libx264 --enable-libx265 --enable-libxvid --enable-nonfree --enable-openssl --enable-postproc --enable-shared --enable-small --enable-version3 --extra-cflags=\"-I${SRC}/include\" --extra-ldflags=\"-L${SRC}/lib\" --extra-libs=-ldl --prefix=\"${SRC}\" \\\n && make \\\n && make install \\\n && make distclean \\\n && hash -r \\\n && cd tools \\\n && make qt-faststart \\\n && cp qt-faststart ${SRC}/bin \\\n && rm -rf ${DIR} \\\n && opencvDeps=\"libopencv-dev qtbase5-dev\" \\\n && apt-get install --no-install-recommends ${opencvDeps} -yqq \\\n && DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -sLO https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.tar.gz \\\n && echo ${OPENCV_SHA256SUM} | sha256sum --check \\\n && tar xzvf ${OPENCV_VERSION}.tar.gz \\\n && cd opencv-${OPENCV_VERSION} \\\n && mkdir build \\\n && cd build \\\n && cmake -D CMAKE_INSTALL_PREFIX=/usr/local -D CMAKE_BUILD_TYPE=RELEASE -D FORCE_VTK=ON -D WITH_TBB=ON -D WITH_V4L=ON -D WITH_QT=ON -D WITH_OPENGL=ON -D WITH_CUBLAS=ON -D CUDA_NVCC_FLAGS=\"-D_FORCE_INLINES --expt-relaxed-constexpr\" -D WITH_GDAL=ON -D WITH_XINE=ON -D INSTALL_C_EXAMPLES=OFF -D INSTALL_PYTHON_EXAMPLES=OFF -D BUILD_EXAMPLES=OFF .. \\\n && make -j $(($( nproc ;) + 1)) \\\n && make install \\\n && /bin/bash -c 'echo \"/usr/local/lib\" > /etc/ld.so.conf.d/opencv.conf' \\\n && ldconfig \\\n && rm -rf ${DIR} \\\n && cd \\\n && apt-get autoremove -y \\\n && apt-get clean -y\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM tensorflow/tensorflow:1.4.1-py3\nLABEL maintainer=\"Alexis Kofman <alexis.kofman@gmail.com>\"\nENV PKG_CONFIG_PATH=\"/usr/local/lib/pkgconfig\" \\\n    LD_LIBRARY_PATH=\"/usr/local/lib\" \\\n    SRC=\"/usr/local\" \\\n    OPENCV_VERSION=\"3.3.1\" \\\n    FFMPEG_VERSION=\"3.4\" \\\n    FDKAAC_VERSION=\"0.1.5\" \\\n    LAME_VERSION=\"3.99.5\" \\\n    OGG_VERSION=\"1.3.3\" \\\n    OPENCOREAMR_VERSION=\"0.1.5\" \\\n    OPUS_VERSION=\"1.2.1\" \\\n    THEORA_VERSION=\"1.1.1\" \\\n    VORBIS_VERSION=\"1.3.5\" \\\n    VPX_VERSION=\"1.6.1\" \\\n    X264_VERSION=\"20171204-2245-stable\" \\\n    X265_VERSION=\"2.6\" \\\n    XVID_VERSION=\"1.3.4\" \\\n    FREETYPE_VERSION=\"2.8.1\" \\\n    LIBVIDSTAB_VERSION=\"1.1.0\" \\\n    OPENCV_SHA256SUM=\"5dca3bb0d661af311e25a72b04a7e4c22c47c1aa86eb73e70063cd378a2aa6ee  3.3.1.tar.gz\" \\\n    FFMPEG_SHA256SUM=\"6ed03b00404a3923e3c2f560248a9c9ad79fbaaee26d723f74aae6b31fe2bae6  ffmpeg-3.4.tar.gz\" \\\n    FDKAAC_SHA256SUM=\"ff53d1d01cacc29c071e23192dfefa93bdbeaf775fc5d296259b4859d0306b79  v0.1.5.tar.gz\" \\\n    LAME_SHA256SUM=\"24346b4158e4af3bd9f2e194bb23eb473c75fb7377011523353196b19b9a23ff  lame-3.99.5.tar.gz\" \\\n    OGG_SHA256SUM=\"c2e8a485110b97550f453226ec644ebac6cb29d1caef2902c007edab4308d985  libogg-1.3.3.tar.gz\" \\\n    OPENCOREAMR_SHA256SUM=\"2c006cb9d5f651bfb5e60156dbff6af3c9d35c7bbcc9015308c0aff1e14cd341  opencore-amr-0.1.5.tar.gz\" \\\n    OPUS_SHA256SUM=\"cfafd339ccd9c5ef8d6ab15d7e1a412c054bf4cb4ecbbbcc78c12ef2def70732  opus-1.2.1.tar.gz\" \\\n    THEORA_SHA256SUM=\"40952956c47811928d1e7922cda3bc1f427eb75680c3c37249c91e949054916b  libtheora-1.1.1.tar.gz\" \\\n    VORBIS_SHA256SUM=\"6efbcecdd3e5dfbf090341b485da9d176eb250d893e3eb378c428a2db38301ce  libvorbis-1.3.5.tar.gz\" \\\n    VPX_SHA256SUM=\"cda8bb6f0e4848c018177d3a576fa83ed96d762554d7010fe4cfb9d70c22e588  v1.6.1\" \\\n    X264_SHA256SUM=\"73eeeed30b5c5dd2ac677383f123cf03ed05a38ef12cfcf78559fe468fdec46f  x264-snapshot-20171204-2245-stable.tar.bz2\" \\\n    X265_SHA256SUM=\"1bf0036415996af841884802161065b9e6be74f5f6808ac04831363e2549cdbf  x265_2.6.tar.gz\" \\\n    XVID_SHA256SUM=\"4e9fd62728885855bc5007fe1be58df42e5e274497591fec37249e1052ae316f  xvidcore-1.3.4.tar.gz\" \\\n    FREETYPE_SHA256SUM=\"876711d064a6a1bd74beb18dd37f219af26100f72daaebd2d86cb493d7cd7ec6  freetype-2.8.1.tar.gz\" \\\n    LIBVIDSTAB_SHA256SUM=\"14d2a053e56edad4f397be0cb3ef8eb1ec3150404ce99a426c4eb641861dc0bb  v1.1.0.tar.gz\"\n# # INSTALL FFMPEG https://ffmpeg.org\nRUN apt-get update -yqq \\\n && apt-get install --no-install-recommends ca-certificates expat libgomp1 -yq \\\n && buildDeps=\"autoconf automake cmake curl bzip2 libexpat1-dev g++ gcc git gperf libtool make nasm perl pkg-config python libssl-dev yasm zlib1g-dev\" \\\n && apt-get install --no-install-recommends ${buildDeps} -yq \\\n && export MAKEFLAGS=\"-j$(($( grep -c ^processor /proc/cpuinfo ;) + 1))\" \\\n && DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -sLO https://downloads.sf.net/project/opencore-amr/opencore-amr/opencore-amr-${OPENCOREAMR_VERSION}.tar.gz \\\n && echo ${OPENCOREAMR_SHA256SUM} | sha256sum --check \\\n && tar -zx --strip-components=1 -f opencore-amr-${OPENCOREAMR_VERSION}.tar.gz \\\n && ./configure --prefix=\"${SRC}\" --bindir=\"${SRC}/bin\" --enable-shared --datadir=${DIR} \\\n && make \\\n && make install \\\n && rm -rf ${DIR} \\\n && DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -sLO ftp://ftp.videolan.org/pub/videolan/x264/snapshots/x264-snapshot-${X264_VERSION}.tar.bz2 \\\n && echo ${X264_SHA256SUM} | sha256sum --check \\\n && tar -jx --strip-components=1 -f x264-snapshot-${X264_VERSION}.tar.bz2 \\\n && ./configure --prefix=\"${SRC}\" --bindir=\"${SRC}/bin\" --enable-pic --enable-shared --disable-cli \\\n && make \\\n && make install \\\n && rm -rf ${DIR} \\\n && DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -sLO https://download.videolan.org/pub/videolan/x265/x265_${X265_VERSION}.tar.gz \\\n && echo ${X265_SHA256SUM} | sha256sum --check \\\n && tar -zx -f x265_${X265_VERSION}.tar.gz \\\n && cd x265_v${X265_VERSION}/build/linux \\\n && ./multilib.sh \\\n && make -C 8bit install \\\n && rm -rf ${DIR} \\\n && DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -sLO http://downloads.xiph.org/releases/ogg/libogg-${OGG_VERSION}.tar.gz \\\n && echo ${OGG_SHA256SUM} | sha256sum --check \\\n && tar -zx --strip-components=1 -f libogg-${OGG_VERSION}.tar.gz \\\n && ./configure --prefix=\"${SRC}\" --bindir=\"${SRC}/bin\" --disable-static --datarootdir=${DIR} \\\n && make \\\n && make install \\\n && rm -rf ${DIR} \\\n && DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -sLO https://archive.mozilla.org/pub/opus/opus-${OPUS_VERSION}.tar.gz \\\n && echo ${OPUS_SHA256SUM} | sha256sum --check \\\n && tar -zx --strip-components=1 -f opus-${OPUS_VERSION}.tar.gz \\\n && autoreconf -fiv \\\n && ./configure --prefix=\"${SRC}\" --disable-static --datadir=\"${DIR}\" \\\n && make \\\n && make install \\\n && rm -rf ${DIR} \\\n && DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -sLO http://downloads.xiph.org/releases/vorbis/libvorbis-${VORBIS_VERSION}.tar.gz \\\n && echo ${VORBIS_SHA256SUM} | sha256sum --check \\\n && tar -zx --strip-components=1 -f libvorbis-${VORBIS_VERSION}.tar.gz \\\n && ./configure --prefix=\"${SRC}\" --with-ogg=\"${SRC}\" --bindir=\"${SRC}/bin\" --disable-static --datadir=\"${DIR}\" \\\n && make \\\n && make install \\\n && rm -rf ${DIR} \\\n && DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -sLO http://downloads.xiph.org/releases/theora/libtheora-${THEORA_VERSION}.tar.gz \\\n && echo ${THEORA_SHA256SUM} | sha256sum --check \\\n && tar -zx --strip-components=1 -f libtheora-${THEORA_VERSION}.tar.gz \\\n && ./configure --prefix=\"${SRC}\" --with-ogg=\"${SRC}\" --bindir=\"${SRC}/bin\" --disable-static --datadir=\"${DIR}\" \\\n && make \\\n && make install \\\n && rm -rf ${DIR} \\\n && DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -sLO https://codeload.github.com/webmproject/libvpx/tar.gz/v${VPX_VERSION} \\\n && echo ${VPX_SHA256SUM} | sha256sum --check \\\n && tar -zx --strip-components=1 -f v${VPX_VERSION} \\\n && ./configure --prefix=\"${SRC}\" --enable-vp8 --enable-vp9 --enable-pic --disable-debug --disable-examples --disable-docs --disable-install-bins --enable-shared \\\n && make \\\n && make install \\\n && rm -rf ${DIR} \\\n && DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -sLO https://downloads.sf.net/project/lame/lame/${LAME_VERSION%.*}/lame-${LAME_VERSION}.tar.gz \\\n && echo ${LAME_SHA256SUM} | sha256sum --check \\\n && tar -zx --strip-components=1 -f lame-${LAME_VERSION}.tar.gz \\\n && ./configure --prefix=\"${SRC}\" --bindir=\"${SRC}/bin\" --disable-static --enable-nasm --datarootdir=\"${DIR}\" \\\n && make \\\n && make install \\\n && rm -rf ${DIR} \\\n && DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -sLO http://downloads.xvid.org/downloads/xvidcore-${XVID_VERSION}.tar.gz \\\n && echo ${XVID_SHA256SUM} | sha256sum --check \\\n && tar -zx -f xvidcore-${XVID_VERSION}.tar.gz \\\n && cd xvidcore/build/generic \\\n && ./configure --prefix=\"${SRC}\" --bindir=\"${SRC}/bin\" --datadir=\"${DIR}\" --disable-static --enable-shared \\\n && make \\\n && make install \\\n && rm -rf ${DIR} \\\n && DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -sLO https://github.com/mstorsjo/fdk-aac/archive/v${FDKAAC_VERSION}.tar.gz \\\n && echo ${FDKAAC_SHA256SUM} | sha256sum --check \\\n && tar -zx --strip-components=1 -f v${FDKAAC_VERSION}.tar.gz \\\n && autoreconf -fiv \\\n && ./configure --prefix=\"${SRC}\" --disable-static --datadir=\"${DIR}\" \\\n && make \\\n && make install \\\n && make distclean \\\n && rm -rf ${DIR} \\\n && DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -sLO http://download.savannah.gnu.org/releases/freetype/freetype-${FREETYPE_VERSION}.tar.gz \\\n && echo ${FREETYPE_SHA256SUM} | sha256sum --check \\\n && tar -zx --strip-components=1 -f freetype-${FREETYPE_VERSION}.tar.gz \\\n && ./configure --disable-static --enable-shared \\\n && make \\\n && make install \\\n && make distclean \\\n && rm -rf ${DIR} \\\n && DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -sLO https://github.com/georgmartius/vid.stab/archive/v${LIBVIDSTAB_VERSION}.tar.gz \\\n && echo ${LIBVIDSTAB_SHA256SUM} | sha256sum --check \\\n && tar -zx --strip-components=1 -f v${LIBVIDSTAB_VERSION}.tar.gz \\\n && cmake . \\\n && make \\\n && make install \\\n && rm -rf ${DIR} \\\n && DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -sLO https://ffmpeg.org/releases/ffmpeg-${FFMPEG_VERSION}.tar.gz \\\n && echo ${FFMPEG_SHA256SUM} | sha256sum --check \\\n && tar -zx --strip-components=1 -f ffmpeg-${FFMPEG_VERSION}.tar.gz \\\n && ./configure --bindir=\"${SRC}/bin\" --disable-debug --disable-doc --disable-ffplay --disable-static --enable-avresample --enable-gpl --enable-libopencore-amrnb --enable-libopencore-amrwb --enable-libfdk_aac --enable-libfreetype --enable-libvidstab --enable-libmp3lame --enable-libopus --enable-libtheora --enable-libvorbis --enable-libvpx --enable-libx264 --enable-libx265 --enable-libxvid --enable-nonfree --enable-openssl --enable-postproc --enable-shared --enable-small --enable-version3 --extra-cflags=\"-I${SRC}/include\" --extra-ldflags=\"-L${SRC}/lib\" --extra-libs=-ldl --prefix=\"${SRC}\" \\\n && make \\\n && make install \\\n && make distclean \\\n && hash -r \\\n && cd tools \\\n && make qt-faststart \\\n && cp qt-faststart ${SRC}/bin \\\n && rm -rf ${DIR} \\\n && opencvDeps=\"libopencv-dev qtbase5-dev\" \\\n && apt-get install ${opencvDeps} -yqq \\\n && DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -sLO https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.tar.gz \\\n && echo ${OPENCV_SHA256SUM} | sha256sum --check \\\n && tar xzvf ${OPENCV_VERSION}.tar.gz \\\n && cd opencv-${OPENCV_VERSION} \\\n && mkdir build \\\n && cd build \\\n && cmake -D CMAKE_INSTALL_PREFIX=/usr/local -D CMAKE_BUILD_TYPE=RELEASE -D FORCE_VTK=ON -D WITH_TBB=ON -D WITH_V4L=ON -D WITH_QT=ON -D WITH_OPENGL=ON -D WITH_CUBLAS=ON -D CUDA_NVCC_FLAGS=\"-D_FORCE_INLINES --expt-relaxed-constexpr\" -D WITH_GDAL=ON -D WITH_XINE=ON -D INSTALL_C_EXAMPLES=OFF -D INSTALL_PYTHON_EXAMPLES=OFF -D BUILD_EXAMPLES=OFF .. \\\n && make -j $(($( nproc ;) + 1)) \\\n && make install \\\n && /bin/bash -c 'echo \"/usr/local/lib\" > /etc/ld.so.conf.d/opencv.conf' \\\n && ldconfig \\\n && rm -rf ${DIR} \\\n && cd \\\n && apt-get autoremove -y \\\n && apt-get clean -y\n","injectedSmells":[],"originalDockerfileHash":"8a120597b7ed9dbd5e30bd6cb35b4f43","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM tensorflow/tensorflow:1.4.1-py3\nLABEL maintainer=\"Alexis Kofman <alexis.kofman@gmail.com>\"\nENV PKG_CONFIG_PATH=\"/usr/local/lib/pkgconfig\" \\\n    LD_LIBRARY_PATH=\"/usr/local/lib\" \\\n    SRC=\"/usr/local\" \\\n    OPENCV_VERSION=\"3.3.1\" \\\n    FFMPEG_VERSION=\"3.4\" \\\n    FDKAAC_VERSION=\"0.1.5\" \\\n    LAME_VERSION=\"3.99.5\" \\\n    OGG_VERSION=\"1.3.3\" \\\n    OPENCOREAMR_VERSION=\"0.1.5\" \\\n    OPUS_VERSION=\"1.2.1\" \\\n    THEORA_VERSION=\"1.1.1\" \\\n    VORBIS_VERSION=\"1.3.5\" \\\n    VPX_VERSION=\"1.6.1\" \\\n    X264_VERSION=\"20171204-2245-stable\" \\\n    X265_VERSION=\"2.6\" \\\n    XVID_VERSION=\"1.3.4\" \\\n    FREETYPE_VERSION=\"2.8.1\" \\\n    LIBVIDSTAB_VERSION=\"1.1.0\" \\\n    OPENCV_SHA256SUM=\"5dca3bb0d661af311e25a72b04a7e4c22c47c1aa86eb73e70063cd378a2aa6ee  3.3.1.tar.gz\" \\\n    FFMPEG_SHA256SUM=\"6ed03b00404a3923e3c2f560248a9c9ad79fbaaee26d723f74aae6b31fe2bae6  ffmpeg-3.4.tar.gz\" \\\n    FDKAAC_SHA256SUM=\"ff53d1d01cacc29c071e23192dfefa93bdbeaf775fc5d296259b4859d0306b79  v0.1.5.tar.gz\" \\\n    LAME_SHA256SUM=\"24346b4158e4af3bd9f2e194bb23eb473c75fb7377011523353196b19b9a23ff  lame-3.99.5.tar.gz\" \\\n    OGG_SHA256SUM=\"c2e8a485110b97550f453226ec644ebac6cb29d1caef2902c007edab4308d985  libogg-1.3.3.tar.gz\" \\\n    OPENCOREAMR_SHA256SUM=\"2c006cb9d5f651bfb5e60156dbff6af3c9d35c7bbcc9015308c0aff1e14cd341  opencore-amr-0.1.5.tar.gz\" \\\n    OPUS_SHA256SUM=\"cfafd339ccd9c5ef8d6ab15d7e1a412c054bf4cb4ecbbbcc78c12ef2def70732  opus-1.2.1.tar.gz\" \\\n    THEORA_SHA256SUM=\"40952956c47811928d1e7922cda3bc1f427eb75680c3c37249c91e949054916b  libtheora-1.1.1.tar.gz\" \\\n    VORBIS_SHA256SUM=\"6efbcecdd3e5dfbf090341b485da9d176eb250d893e3eb378c428a2db38301ce  libvorbis-1.3.5.tar.gz\" \\\n    VPX_SHA256SUM=\"cda8bb6f0e4848c018177d3a576fa83ed96d762554d7010fe4cfb9d70c22e588  v1.6.1\" \\\n    X264_SHA256SUM=\"73eeeed30b5c5dd2ac677383f123cf03ed05a38ef12cfcf78559fe468fdec46f  x264-snapshot-20171204-2245-stable.tar.bz2\" \\\n    X265_SHA256SUM=\"1bf0036415996af841884802161065b9e6be74f5f6808ac04831363e2549cdbf  x265_2.6.tar.gz\" \\\n    XVID_SHA256SUM=\"4e9fd62728885855bc5007fe1be58df42e5e274497591fec37249e1052ae316f  xvidcore-1.3.4.tar.gz\" \\\n    FREETYPE_SHA256SUM=\"876711d064a6a1bd74beb18dd37f219af26100f72daaebd2d86cb493d7cd7ec6  freetype-2.8.1.tar.gz\" \\\n    LIBVIDSTAB_SHA256SUM=\"14d2a053e56edad4f397be0cb3ef8eb1ec3150404ce99a426c4eb641861dc0bb  v1.1.0.tar.gz\"\n#  # INSTALL FFMPEG https://ffmpeg.org\nRUN apt-get update -yqq \\\n && apt-get install --no-install-recommends ca-certificates expat libgomp1 -yq \\\n && buildDeps=\"autoconf automake cmake curl bzip2 libexpat1-dev g++ gcc git gperf libtool make nasm perl pkg-config python libssl-dev yasm zlib1g-dev\" \\\n && apt-get install --no-install-recommends ${buildDeps} -yq \\\n && export MAKEFLAGS=\"-j$(($( grep -c ^processor /proc/cpuinfo ;) + 1))\" \\\n && DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -sLO https://downloads.sf.net/project/opencore-amr/opencore-amr/opencore-amr-${OPENCOREAMR_VERSION}.tar.gz \\\n && echo ${OPENCOREAMR_SHA256SUM} | sha256sum --check \\\n && tar -zx --strip-components=1 -f opencore-amr-${OPENCOREAMR_VERSION}.tar.gz \\\n && ./configure --prefix=\"${SRC}\" --bindir=\"${SRC}/bin\" --enable-shared --datadir=${DIR} \\\n && make \\\n && make install \\\n && rm -rf ${DIR} \\\n && DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -sLO ftp://ftp.videolan.org/pub/videolan/x264/snapshots/x264-snapshot-${X264_VERSION}.tar.bz2 \\\n && echo ${X264_SHA256SUM} | sha256sum --check \\\n && tar -jx --strip-components=1 -f x264-snapshot-${X264_VERSION}.tar.bz2 \\\n && ./configure --prefix=\"${SRC}\" --bindir=\"${SRC}/bin\" --enable-pic --enable-shared --disable-cli \\\n && make \\\n && make install \\\n && rm -rf ${DIR} \\\n && DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -sLO https://download.videolan.org/pub/videolan/x265/x265_${X265_VERSION}.tar.gz \\\n && echo ${X265_SHA256SUM} | sha256sum --check \\\n && tar -zx -f x265_${X265_VERSION}.tar.gz \\\n && cd x265_v${X265_VERSION}/build/linux \\\n && ./multilib.sh \\\n && make -C 8bit install \\\n && rm -rf ${DIR} \\\n && DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -sLO http://downloads.xiph.org/releases/ogg/libogg-${OGG_VERSION}.tar.gz \\\n && echo ${OGG_SHA256SUM} | sha256sum --check \\\n && tar -zx --strip-components=1 -f libogg-${OGG_VERSION}.tar.gz \\\n && ./configure --prefix=\"${SRC}\" --bindir=\"${SRC}/bin\" --disable-static --datarootdir=${DIR} \\\n && make \\\n && make install \\\n && rm -rf ${DIR} \\\n && DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -sLO https://archive.mozilla.org/pub/opus/opus-${OPUS_VERSION}.tar.gz \\\n && echo ${OPUS_SHA256SUM} | sha256sum --check \\\n && tar -zx --strip-components=1 -f opus-${OPUS_VERSION}.tar.gz \\\n && autoreconf -fiv \\\n && ./configure --prefix=\"${SRC}\" --disable-static --datadir=\"${DIR}\" \\\n && make \\\n && make install \\\n && rm -rf ${DIR} \\\n && DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -sLO http://downloads.xiph.org/releases/vorbis/libvorbis-${VORBIS_VERSION}.tar.gz \\\n && echo ${VORBIS_SHA256SUM} | sha256sum --check \\\n && tar -zx --strip-components=1 -f libvorbis-${VORBIS_VERSION}.tar.gz \\\n && ./configure --prefix=\"${SRC}\" --with-ogg=\"${SRC}\" --bindir=\"${SRC}/bin\" --disable-static --datadir=\"${DIR}\" \\\n && make \\\n && make install \\\n && rm -rf ${DIR} \\\n && DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -sLO http://downloads.xiph.org/releases/theora/libtheora-${THEORA_VERSION}.tar.gz \\\n && echo ${THEORA_SHA256SUM} | sha256sum --check \\\n && tar -zx --strip-components=1 -f libtheora-${THEORA_VERSION}.tar.gz \\\n && ./configure --prefix=\"${SRC}\" --with-ogg=\"${SRC}\" --bindir=\"${SRC}/bin\" --disable-static --datadir=\"${DIR}\" \\\n && make \\\n && make install \\\n && rm -rf ${DIR} \\\n && DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -sLO https://codeload.github.com/webmproject/libvpx/tar.gz/v${VPX_VERSION} \\\n && echo ${VPX_SHA256SUM} | sha256sum --check \\\n && tar -zx --strip-components=1 -f v${VPX_VERSION} \\\n && ./configure --prefix=\"${SRC}\" --enable-vp8 --enable-vp9 --enable-pic --disable-debug --disable-examples --disable-docs --disable-install-bins --enable-shared \\\n && make \\\n && make install \\\n && rm -rf ${DIR} \\\n && DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -sLO https://downloads.sf.net/project/lame/lame/${LAME_VERSION%.*}/lame-${LAME_VERSION}.tar.gz \\\n && echo ${LAME_SHA256SUM} | sha256sum --check \\\n && tar -zx --strip-components=1 -f lame-${LAME_VERSION}.tar.gz \\\n && ./configure --prefix=\"${SRC}\" --bindir=\"${SRC}/bin\" --disable-static --enable-nasm --datarootdir=\"${DIR}\" \\\n && make \\\n && make install \\\n && rm -rf ${DIR} \\\n && DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -sLO http://downloads.xvid.org/downloads/xvidcore-${XVID_VERSION}.tar.gz \\\n && echo ${XVID_SHA256SUM} | sha256sum --check \\\n && tar -zx -f xvidcore-${XVID_VERSION}.tar.gz \\\n && cd xvidcore/build/generic \\\n && ./configure --prefix=\"${SRC}\" --bindir=\"${SRC}/bin\" --datadir=\"${DIR}\" --disable-static --enable-shared \\\n && make \\\n && make install \\\n && rm -rf ${DIR} \\\n && DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -sLO https://github.com/mstorsjo/fdk-aac/archive/v${FDKAAC_VERSION}.tar.gz \\\n && echo ${FDKAAC_SHA256SUM} | sha256sum --check \\\n && tar -zx --strip-components=1 -f v${FDKAAC_VERSION}.tar.gz \\\n && autoreconf -fiv \\\n && ./configure --prefix=\"${SRC}\" --disable-static --datadir=\"${DIR}\" \\\n && make \\\n && make install \\\n && make distclean \\\n && rm -rf ${DIR} \\\n && DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -sLO http://download.savannah.gnu.org/releases/freetype/freetype-${FREETYPE_VERSION}.tar.gz \\\n && echo ${FREETYPE_SHA256SUM} | sha256sum --check \\\n && tar -zx --strip-components=1 -f freetype-${FREETYPE_VERSION}.tar.gz \\\n && ./configure --disable-static --enable-shared \\\n && make \\\n && make install \\\n && make distclean \\\n && rm -rf ${DIR} \\\n && DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -sLO https://github.com/georgmartius/vid.stab/archive/v${LIBVIDSTAB_VERSION}.tar.gz \\\n && echo ${LIBVIDSTAB_SHA256SUM} | sha256sum --check \\\n && tar -zx --strip-components=1 -f v${LIBVIDSTAB_VERSION}.tar.gz \\\n && cmake . \\\n && make \\\n && make install \\\n && rm -rf ${DIR} \\\n && DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -sLO https://ffmpeg.org/releases/ffmpeg-${FFMPEG_VERSION}.tar.gz \\\n && echo ${FFMPEG_SHA256SUM} | sha256sum --check \\\n && tar -zx --strip-components=1 -f ffmpeg-${FFMPEG_VERSION}.tar.gz \\\n && ./configure --bindir=\"${SRC}/bin\" --disable-debug --disable-doc --disable-ffplay --disable-static --enable-avresample --enable-gpl --enable-libopencore-amrnb --enable-libopencore-amrwb --enable-libfdk_aac --enable-libfreetype --enable-libvidstab --enable-libmp3lame --enable-libopus --enable-libtheora --enable-libvorbis --enable-libvpx --enable-libx264 --enable-libx265 --enable-libxvid --enable-nonfree --enable-openssl --enable-postproc --enable-shared --enable-small --enable-version3 --extra-cflags=\"-I${SRC}/include\" --extra-ldflags=\"-L${SRC}/lib\" --extra-libs=-ldl --prefix=\"${SRC}\" \\\n && make \\\n && make install \\\n && make distclean \\\n && hash -r \\\n && cd tools \\\n && make qt-faststart \\\n && cp qt-faststart ${SRC}/bin \\\n && rm -rf ${DIR} \\\n && opencvDeps=\"libopencv-dev qtbase5-dev\" \\\n && apt-get install ${opencvDeps} -yqq \\\n && DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -sLO https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.tar.gz \\\n && echo ${OPENCV_SHA256SUM} | sha256sum --check \\\n && tar xzvf ${OPENCV_VERSION}.tar.gz \\\n && cd opencv-${OPENCV_VERSION} \\\n && mkdir build \\\n && cd build \\\n && cmake -D CMAKE_INSTALL_PREFIX=/usr/local -D CMAKE_BUILD_TYPE=RELEASE -D FORCE_VTK=ON -D WITH_TBB=ON -D WITH_V4L=ON -D WITH_QT=ON -D WITH_OPENGL=ON -D WITH_CUBLAS=ON -D CUDA_NVCC_FLAGS=\"-D_FORCE_INLINES --expt-relaxed-constexpr\" -D WITH_GDAL=ON -D WITH_XINE=ON -D INSTALL_C_EXAMPLES=OFF -D INSTALL_PYTHON_EXAMPLES=OFF -D BUILD_EXAMPLES=OFF .. \\\n && make -j $(($( nproc ;) + 1)) \\\n && make install \\\n && /bin/bash -c 'echo \"/usr/local/lib\" > /etc/ld.so.conf.d/opencv.conf' \\\n && ldconfig \\\n && rm -rf ${DIR} \\\n && cd \\\n && apt-get autoremove -y \\\n && apt-get clean -y\n","originalDockerfileUglifiedHash":"488662d7ceab75f182b2e49b8cf15119","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/6ba4db17f41b23be18628b00edcd2a2ebb368e3e.dockerfile"}