{"seed":4184771130,"processedDockerfileHash":"65e887c2bf6e6047eeb2828e53ead919","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM ubuntu:16.04\n#   minimal docker file to get sp and sf running on ubunty 16.04 image,\n#   using gdal/geos/proj from ppa:ubuntugis/ubuntugis-unstable\nMAINTAINER \"edzerpebesma\" edzer.pebesma@uni-muenster.de\nRUN apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends software-properties-common=0.96.20.10 -y )\nRUN add-apt-repository ppa:ubuntugis/ubuntugis-unstable\nRUN echo \"deb http://cran.rstudio.com/bin/linux/ubuntu xenial/ \" >> /etc/apt/sources.list\nRUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E084DAB9\nRUN :\nRUN apt-get upgrade -y\nRUN export DEBIAN_FRONTEND=noninteractive ; apt-get update -y \\\n && (apt-get update ;apt-get install --no-install-recommends libcurl4-openssl-dev=7.47.0-1ubuntu2.19 qpdf=8.0.2-3~16.04.1 pandoc=1.16.0.2~dfsg-1 make=4.1-6 wget=1.17.1-1ubuntu1.5 git=1:2.7.4-0ubuntu1.10 libgdal-dev=1.11.3+dfsg-3build2 libgeos-dev=3.5.0-1ubuntu2 libproj-dev=4.9.2-2 libudunits2-dev=2.2.20-1 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends texinfo=6.1.0.dfsg.1-5 texlive-base=2015.20160320-1ubuntu0.1 texlive-extra-utils=2015.20160320-1 texlive-fonts-extra=2015.20160320-1 texlive-fonts-recommended=2015.20160320-1ubuntu0.1 texlive-generic-recommended=2015.20160320-1ubuntu0.1 texlive-latex-base=2015.20160320-1ubuntu0.1 texlive-latex-extra=2015.20160320-1 texlive-latex-recommended=2015.20160320-1ubuntu0.1 -y )\n#   stuff for the tmaptools/rmapshaper/geojsonio etc stack:\nRUN (apt-get update ;apt-get install --no-install-recommends libv8-3.14-dev=3.14.5.8-5ubuntu2 libprotobuf-dev=2.6.1-1.3 protobuf-compiler=2.6.1-1.3 libcairo2-dev=1.14.6-1 pandoc=1.16.0.2~dfsg-1 pandoc-citeproc=0.9-1 -y )\nRUN add-apt-repository -y ppa:opencpu/jq\nRUN :\nRUN (apt-get update ;apt-get install --no-install-recommends libjq-dev -y )\n#  # Check out & build R-devel:\nRUN (apt-get update ;apt-get install --no-install-recommends subversion=1.9.3-2ubuntu1.3 -y )\nRUN cd /tmp \\\n && svn co https://svn.r-project.org/R/trunk R-devel\nRUN /tmp/R-devel/tools/rsync-recommended\n#  # Build and install according the standard 'recipe' I emailed/posted years ago\nRUN (apt-get update ;apt-get install --no-install-recommends libreadline-dev=6.3-8ubuntu2 libbz2-dev=1.0.6-8ubuntu0.2 -y )\nRUN cd /tmp/R-devel \\\n && R_PAPERSIZE=letter R_BATCHSAVE=\"--no-save --no-restore\" R_BROWSER=xdg-open PAGER=/usr/bin/pager PERL=/usr/bin/perl R_UNZIPCMD=/usr/bin/unzip R_ZIPCMD=/usr/bin/zip R_PRINTCMD=/usr/bin/lpr LIBnn=lib AWK=/usr/bin/awk CFLAGS=$( R CMD config CFLAGS ;) CXXFLAGS=$( R CMD config CXXFLAGS ;) ./configure --enable-R-shlib --without-blas --without-lapack --with-readline --with-recommended-packages --program-suffix=dev --with-x=no \\\n && make \\\n && make install \\\n && rm -rf /tmp/R-devel\n#  # Set default CRAN repo\nRUN echo 'options(repos = c(CRAN = \"https://cran.rstudio.com/\"), download.file.method = \"libcurl\")' >> /usr/local/lib/R/etc/Rprofile.site\nRUN Rscript -e 'install.packages(c(\"sf\", \"lwgeom\", \"covr\", \"raster\"), dependencies = TRUE, repos = \"https://cloud.r-project.org\")'\nRUN rm -fr sf\nRUN git clone https://github.com/r-spatial/sf.git\nRUN R CMD build sf\n#  ENV PROJ_VERSION 5.0.1\n#  ENV LD_LIBRARY_PATH=/usr/local/lib:$LD_LIBRARY_PATH\n#  RUN wget http://download.osgeo.org/proj/proj-${PROJ_VERSION}.tar.gz \\\n#    && tar zxf proj-*tar.gz \\\n#    && cd proj* \\\n#    && ./configure \\\n#    && make \\\n#    && make install \\\n#    && cd .. \\\n#    && ldconfig\nRUN Rscript -e 'install.packages(c(\"rgdal\"), dependencies = FALSE, repos = \"https://cloud.r-project.org\")'\nRUN Rscript -e 'install.packages(c(\"RPostgres\"), dependencies = FALSE, repos = \"https://cloud.r-project.org\")'\nRUN cd sf \\\n && git pull\nRUN PROJ_LIB=/usr/share/proj R CMD INSTALL sf_*tar.gz\nRUN PROJ_LIB=/usr/share/proj R CMD check --as-cran sf_*tar.gz\nCMD [\"/bin/bash\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:16.04\n#  minimal docker file to get sp and sf running on ubunty 16.04 image,\n#  using gdal/geos/proj from ppa:ubuntugis/ubuntugis-unstable\nMAINTAINER \"edzerpebesma\" edzer.pebesma@uni-muenster.de\nRUN apt-get update \\\n && apt-get install software-properties-common -y\nRUN add-apt-repository ppa:ubuntugis/ubuntugis-unstable\nRUN echo \"deb http://cran.rstudio.com/bin/linux/ubuntu xenial/ \" >> /etc/apt/sources.list\nRUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E084DAB9\nRUN apt-get update\nRUN apt-get upgrade -y\nRUN export DEBIAN_FRONTEND=noninteractive ; apt-get update -y \\\n && apt-get install libcurl4-openssl-dev qpdf pandoc make wget git libgdal-dev libgeos-dev libproj-dev libudunits2-dev -y\nRUN apt-get install texinfo texlive-base texlive-extra-utils texlive-fonts-extra texlive-fonts-recommended texlive-generic-recommended texlive-latex-base texlive-latex-extra texlive-latex-recommended -y\n#  stuff for the tmaptools/rmapshaper/geojsonio etc stack:\nRUN apt-get install libv8-3.14-dev libprotobuf-dev protobuf-compiler libcairo2-dev pandoc pandoc-citeproc -y\nRUN add-apt-repository -y ppa:opencpu/jq\nRUN apt-get update\nRUN apt-get install libjq-dev -y\n# # Check out & build R-devel:\nRUN apt-get install subversion -y\nRUN cd /tmp \\\n && svn co https://svn.r-project.org/R/trunk R-devel\nRUN /tmp/R-devel/tools/rsync-recommended\n# # Build and install according the standard 'recipe' I emailed/posted years ago\nRUN apt-get install libreadline-dev libbz2-dev -y\nRUN cd /tmp/R-devel \\\n && R_PAPERSIZE=letter R_BATCHSAVE=\"--no-save --no-restore\" R_BROWSER=xdg-open PAGER=/usr/bin/pager PERL=/usr/bin/perl R_UNZIPCMD=/usr/bin/unzip R_ZIPCMD=/usr/bin/zip R_PRINTCMD=/usr/bin/lpr LIBnn=lib AWK=/usr/bin/awk CFLAGS=$( R CMD config CFLAGS ;) CXXFLAGS=$( R CMD config CXXFLAGS ;) ./configure --enable-R-shlib --without-blas --without-lapack --with-readline --with-recommended-packages --program-suffix=dev --with-x=no \\\n && make \\\n && make install \\\n && rm -rf /tmp/R-devel\n# # Set default CRAN repo\nRUN echo 'options(repos = c(CRAN = \"https://cran.rstudio.com/\"), download.file.method = \"libcurl\")' >> /usr/local/lib/R/etc/Rprofile.site\nRUN Rscript -e 'install.packages(c(\"sf\", \"lwgeom\", \"covr\", \"raster\"), dependencies = TRUE, repos = \"https://cloud.r-project.org\")'\nRUN rm -fr sf\nRUN git clone https://github.com/r-spatial/sf.git\nRUN R CMD build sf\n# ENV PROJ_VERSION 5.0.1\n# ENV LD_LIBRARY_PATH=/usr/local/lib:$LD_LIBRARY_PATH\n# RUN wget http://download.osgeo.org/proj/proj-${PROJ_VERSION}.tar.gz \\\n#   && tar zxf proj-*tar.gz \\\n#   && cd proj* \\\n#   && ./configure \\\n#   && make \\\n#   && make install \\\n#   && cd .. \\\n#   && ldconfig\nRUN Rscript -e 'install.packages(c(\"rgdal\"), dependencies = FALSE, repos = \"https://cloud.r-project.org\")'\nRUN Rscript -e 'install.packages(c(\"RPostgres\"), dependencies = FALSE, repos = \"https://cloud.r-project.org\")'\nRUN cd sf \\\n && git pull\nRUN PROJ_LIB=/usr/share/proj R CMD INSTALL sf_*tar.gz\nRUN PROJ_LIB=/usr/share/proj R CMD check --as-cran sf_*tar.gz\nCMD [\"/bin/bash\"]\n","injectedSmells":[],"originalDockerfileHash":"6d7e9752a692f6cf910306f7f96e8a3a","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:16.04\n#   minimal docker file to get sp and sf running on ubunty 16.04 image,\n#   using gdal/geos/proj from ppa:ubuntugis/ubuntugis-unstable\nMAINTAINER \"edzerpebesma\" edzer.pebesma@uni-muenster.de\nRUN apt-get update \\\n && apt-get install software-properties-common -y\nRUN add-apt-repository ppa:ubuntugis/ubuntugis-unstable\nRUN echo \"deb http://cran.rstudio.com/bin/linux/ubuntu xenial/ \" >> /etc/apt/sources.list\nRUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E084DAB9\nRUN apt-get update\nRUN apt-get upgrade -y\nRUN export DEBIAN_FRONTEND=noninteractive ; apt-get update -y \\\n && apt-get install libcurl4-openssl-dev qpdf pandoc make wget git libgdal-dev libgeos-dev libproj-dev libudunits2-dev -y\nRUN apt-get install texinfo texlive-base texlive-extra-utils texlive-fonts-extra texlive-fonts-recommended texlive-generic-recommended texlive-latex-base texlive-latex-extra texlive-latex-recommended -y\n#   stuff for the tmaptools/rmapshaper/geojsonio etc stack:\nRUN apt-get install libv8-3.14-dev libprotobuf-dev protobuf-compiler libcairo2-dev pandoc pandoc-citeproc -y\nRUN add-apt-repository -y ppa:opencpu/jq\nRUN apt-get update\nRUN apt-get install libjq-dev -y\n#  # Check out & build R-devel:\nRUN apt-get install subversion -y\nRUN cd /tmp \\\n && svn co https://svn.r-project.org/R/trunk R-devel\nRUN /tmp/R-devel/tools/rsync-recommended\n#  # Build and install according the standard 'recipe' I emailed/posted years ago\nRUN apt-get install libreadline-dev libbz2-dev -y\nRUN cd /tmp/R-devel \\\n && R_PAPERSIZE=letter R_BATCHSAVE=\"--no-save --no-restore\" R_BROWSER=xdg-open PAGER=/usr/bin/pager PERL=/usr/bin/perl R_UNZIPCMD=/usr/bin/unzip R_ZIPCMD=/usr/bin/zip R_PRINTCMD=/usr/bin/lpr LIBnn=lib AWK=/usr/bin/awk CFLAGS=$( R CMD config CFLAGS ;) CXXFLAGS=$( R CMD config CXXFLAGS ;) ./configure --enable-R-shlib --without-blas --without-lapack --with-readline --with-recommended-packages --program-suffix=dev --with-x=no \\\n && make \\\n && make install \\\n && rm -rf /tmp/R-devel\n#  # Set default CRAN repo\nRUN echo 'options(repos = c(CRAN = \"https://cran.rstudio.com/\"), download.file.method = \"libcurl\")' >> /usr/local/lib/R/etc/Rprofile.site\nRUN Rscript -e 'install.packages(c(\"sf\", \"lwgeom\", \"covr\", \"raster\"), dependencies = TRUE, repos = \"https://cloud.r-project.org\")'\nRUN rm -fr sf\nRUN git clone https://github.com/r-spatial/sf.git\nRUN R CMD build sf\n#  ENV PROJ_VERSION 5.0.1\n#  ENV LD_LIBRARY_PATH=/usr/local/lib:$LD_LIBRARY_PATH\n#  RUN wget http://download.osgeo.org/proj/proj-${PROJ_VERSION}.tar.gz \\\n#    && tar zxf proj-*tar.gz \\\n#    && cd proj* \\\n#    && ./configure \\\n#    && make \\\n#    && make install \\\n#    && cd .. \\\n#    && ldconfig\nRUN Rscript -e 'install.packages(c(\"rgdal\"), dependencies = FALSE, repos = \"https://cloud.r-project.org\")'\nRUN Rscript -e 'install.packages(c(\"RPostgres\"), dependencies = FALSE, repos = \"https://cloud.r-project.org\")'\nRUN cd sf \\\n && git pull\nRUN PROJ_LIB=/usr/share/proj R CMD INSTALL sf_*tar.gz\nRUN PROJ_LIB=/usr/share/proj R CMD check --as-cran sf_*tar.gz\nCMD [\"/bin/bash\"]\n","originalDockerfileUglifiedHash":"9c3cae23b75121431e472d769199cea1","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/75002c371fc3a63f7bc92807fa27bfcf4e5ebcc2.dockerfile"}