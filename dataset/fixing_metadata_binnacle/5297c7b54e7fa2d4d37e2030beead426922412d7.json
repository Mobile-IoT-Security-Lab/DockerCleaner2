{"seed":3386240542,"processedDockerfileHash":"e2d0862b4f12b27932e1d870c031aeb1","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","have-a-healthcheck","have-a-user"],"processedDockerfile":"#\n#  --------------------------------------------------------------------------\n#   Image Setup\n#  --------------------------------------------------------------------------\n#\nARG PHP_VERSION=${PHP_VERSION}\nFROM php:${PHP_VERSION}-alpine\nLABEL maintainer=\"Mahmoud Zalt <mahmoud@zalt.me>\"\nRUN apk add wget curl git build-base libmemcached-dev libmcrypt-dev libxml2-dev pcre-dev zlib-dev autoconf cyrus-sasl-dev libgsasl-dev supervisor --update\nRUN docker-php-ext-install mysqli mbstring pdo pdo_mysql tokenizer xml pcntl\nRUN pecl channel-update pecl.php.net \\\n && pecl install memcached mcrypt-1.0.1 \\\n && docker-php-ext-enable memcached\n#   Add a non-root user:\nARG PUID=1000\nENV PUID=\"${PUID}\"\nARG PGID=1000\nENV PGID=\"${PGID}\"\nRUN addgroup -g ${PGID} laradock \\\n && adduser -D -G laradock -u ${PUID} laradock\n#  Install SOAP package:\nARG INSTALL_SOAP=false\nRUN if [ ${INSTALL_SOAP} = true ] ; then docker-php-ext-install soap ; fi\n#  Install BCMath package:\nARG INSTALL_BCMATH=false\nRUN if [ ${INSTALL_BCMATH} = true ] ; then docker-php-ext-install bcmath ; fi\n#   Install PostgreSQL drivers:\nARG INSTALL_PGSQL=false\nRUN if [ ${INSTALL_PGSQL} = true ] ; then apk add postgresql-dev --update \\\n && docker-php-ext-install pdo_pgsql ; fi\n#   Install ZipArchive:\nARG INSTALL_ZIP_ARCHIVE=false\nRUN if [ ${INSTALL_ZIP_ARCHIVE} = true ] ; then apk add libzip-dev --update \\\n && docker-php-ext-configure zip --with-libzip \\\n && docker-php-ext-install zip ; fi\n#   Install MySQL Client:\nARG INSTALL_MYSQL_CLIENT=false\nRUN if [ ${INSTALL_MYSQL_CLIENT} = true ] ; then apk add mysql-client --update ; fi\n#   Install FFMPEG:\nARG INSTALL_FFMPEG=false\nRUN if [ ${INSTALL_FFMPEG} = true ] ; then apk add ffmpeg --update ; fi\n#   Install AMQP:\nARG INSTALL_AMQP=false\nRUN if [ ${INSTALL_AMQP} = true ] ; then apk add rabbitmq-c rabbitmq-c-dev --update \\\n && pecl install amqp \\\n && docker-php-ext-enable amqp \\\n && docker-php-ext-install sockets ; fi\n#   Install Phalcon ext\nARG INSTALL_PHALCON=false\nARG PHALCON_VERSION\nENV PHALCON_VERSION=\"${PHALCON_VERSION}\"\nRUN if [ $INSTALL_PHALCON = true ] ; then apk add unzip gcc make re2c bash --update \\\n && curl -L -o /tmp/cphalcon.zip https://github.com/phalcon/cphalcon/archive/v${PHALCON_VERSION}.zip \\\n && unzip -d /tmp/ /tmp/cphalcon.zip \\\n && cd /tmp/cphalcon-${PHALCON_VERSION}/build \\\n && ./install \\\n && rm -rf /tmp/cphalcon* ; fi\nRUN if [ $INSTALL_GHOSTSCRIPT = true ] ; then apk add ghostscript --update ; fi\n#  Install GMP package:\nARG INSTALL_GMP=false\nRUN if [ ${INSTALL_GMP} = true ] ; then apk add gmp gmp-dev --update --no-cache \\\n && docker-php-ext-install gmp ; fi\nRUN rm /var/cache/apk/* \\\n && mkdir -p /var/www\n#  ##########################################################################\n#   Swoole EXTENSION\n#  ##########################################################################\nARG INSTALL_SWOOLE=false\nRUN if [ ${INSTALL_SWOOLE} = true ] ; then if [ $( php -r \"echo PHP_MAJOR_VERSION;\" ;) = \"5\" ] ; then pecl -q install swoole-2.0.10 ; else if [ $( php -r \"echo PHP_MINOR_VERSION;\" ;) = \"0\" ] ; then pecl install swoole-2.2.0 ; else pecl install swoole ; fi ; fi \\\n && docker-php-ext-enable swoole ; fi\n#  ##########################################################################\n#   Taint EXTENSION\n#  ##########################################################################\nARG INSTALL_TAINT=false\nRUN if [ ${INSTALL_TAINT} = true ] ; then if [ $( php -r \"echo PHP_MAJOR_VERSION;\" ;) = \"7\" ] ; then pecl install taint ; fi \\\n && docker-php-ext-enable taint ; fi\n#\n#  --------------------------------------------------------------------------\n#   Optional Supervisord Configuration\n#  --------------------------------------------------------------------------\n#\n#   Modify the ./supervisor.conf file to match your App's requirements.\n#   Make sure you rebuild your container with every change.\n#\nCOPY supervisord.conf /etc/supervisord.conf\nENTRYPOINT [\"/usr/bin/supervisord\", \"-n\", \"-c\", \"/etc/supervisord.conf\"]\n#\n#  --------------------------------------------------------------------------\n#   Optional Software's Installation\n#  --------------------------------------------------------------------------\n#\n#   If you need to modify this image, feel free to do it right here.\n#\n#   -- Your awesome modifications go here -- #\n#\n#  --------------------------------------------------------------------------\n#   Check PHP version\n#  --------------------------------------------------------------------------\n#\nRUN php -v | head -n 1 | grep -q \"PHP ${PHP_VERSION}.\"\n#\n#  --------------------------------------------------------------------------\n#   Final Touch\n#  --------------------------------------------------------------------------\n#\nWORKDIR /etc/supervisor/conf.d/\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\nHEALTHCHECK CMD curl --fail http://127.0.0.1:80 || exit 1\n","originalDockerfile":"#\n# --------------------------------------------------------------------------\n#  Image Setup\n# --------------------------------------------------------------------------\n#\nARG PHP_VERSION=${PHP_VERSION}\nFROM php:${PHP_VERSION}-alpine\nLABEL maintainer=\"Mahmoud Zalt <mahmoud@zalt.me>\"\nRUN apk --update add wget curl git build-base libmemcached-dev libmcrypt-dev libxml2-dev pcre-dev zlib-dev autoconf cyrus-sasl-dev libgsasl-dev supervisor\nRUN docker-php-ext-install mysqli mbstring pdo pdo_mysql tokenizer xml pcntl\nRUN pecl channel-update pecl.php.net \\\n && pecl install memcached mcrypt-1.0.1 \\\n && docker-php-ext-enable memcached\n#  Add a non-root user:\nARG PUID=1000\nENV PUID=\"${PUID}\"\nARG PGID=1000\nENV PGID=\"${PGID}\"\nRUN addgroup -g ${PGID} laradock \\\n && adduser -D -G laradock -u ${PUID} laradock\n# Install SOAP package:\nARG INSTALL_SOAP=false\nRUN if [ ${INSTALL_SOAP} = true ] ; then docker-php-ext-install soap ; fi\n# Install BCMath package:\nARG INSTALL_BCMATH=false\nRUN if [ ${INSTALL_BCMATH} = true ] ; then docker-php-ext-install bcmath ; fi\n#  Install PostgreSQL drivers:\nARG INSTALL_PGSQL=false\nRUN if [ ${INSTALL_PGSQL} = true ] ; then apk --update add postgresql-dev \\\n && docker-php-ext-install pdo_pgsql ; fi\n#  Install ZipArchive:\nARG INSTALL_ZIP_ARCHIVE=false\nRUN if [ ${INSTALL_ZIP_ARCHIVE} = true ] ; then apk --update add libzip-dev \\\n && docker-php-ext-configure zip --with-libzip \\\n && docker-php-ext-install zip ; fi\n#  Install MySQL Client:\nARG INSTALL_MYSQL_CLIENT=false\nRUN if [ ${INSTALL_MYSQL_CLIENT} = true ] ; then apk --update add mysql-client ; fi\n#  Install FFMPEG:\nARG INSTALL_FFMPEG=false\nRUN if [ ${INSTALL_FFMPEG} = true ] ; then apk --update add ffmpeg ; fi\n#  Install AMQP:\nARG INSTALL_AMQP=false\nRUN if [ ${INSTALL_AMQP} = true ] ; then apk --update add rabbitmq-c rabbitmq-c-dev \\\n && pecl install amqp \\\n && docker-php-ext-enable amqp \\\n && docker-php-ext-install sockets ; fi\n#  Install Phalcon ext\nARG INSTALL_PHALCON=false\nARG PHALCON_VERSION\nENV PHALCON_VERSION=\"${PHALCON_VERSION}\"\nRUN if [ $INSTALL_PHALCON = true ] ; then apk --update add unzip gcc make re2c bash \\\n && curl -L -o /tmp/cphalcon.zip https://github.com/phalcon/cphalcon/archive/v${PHALCON_VERSION}.zip \\\n && unzip -d /tmp/ /tmp/cphalcon.zip \\\n && cd /tmp/cphalcon-${PHALCON_VERSION}/build \\\n && ./install \\\n && rm -rf /tmp/cphalcon* ; fi\nRUN if [ $INSTALL_GHOSTSCRIPT = true ] ; then apk --update add ghostscript ; fi\n# Install GMP package:\nARG INSTALL_GMP=false\nRUN if [ ${INSTALL_GMP} = true ] ; then apk add --update --no-cache gmp gmp-dev \\\n && docker-php-ext-install gmp ; fi\nRUN rm /var/cache/apk/* \\\n && mkdir -p /var/www\n# ##########################################################################\n#  Swoole EXTENSION\n# ##########################################################################\nARG INSTALL_SWOOLE=false\nRUN if [ ${INSTALL_SWOOLE} = true ] ; then if [ $( php -r \"echo PHP_MAJOR_VERSION;\" ;) = \"5\" ] ; then pecl -q install swoole-2.0.10 ; else if [ $( php -r \"echo PHP_MINOR_VERSION;\" ;) = \"0\" ] ; then pecl install swoole-2.2.0 ; else pecl install swoole ; fi ; fi \\\n && docker-php-ext-enable swoole ; fi\n# ##########################################################################\n#  Taint EXTENSION\n# ##########################################################################\nARG INSTALL_TAINT=false\nRUN if [ ${INSTALL_TAINT} = true ] ; then if [ $( php -r \"echo PHP_MAJOR_VERSION;\" ;) = \"7\" ] ; then pecl install taint ; fi \\\n && docker-php-ext-enable taint ; fi\n#\n# --------------------------------------------------------------------------\n#  Optional Supervisord Configuration\n# --------------------------------------------------------------------------\n#\n#  Modify the ./supervisor.conf file to match your App's requirements.\n#  Make sure you rebuild your container with every change.\n#\nCOPY supervisord.conf /etc/supervisord.conf\nENTRYPOINT [\"/usr/bin/supervisord\", \"-n\", \"-c\", \"/etc/supervisord.conf\"]\n#\n# --------------------------------------------------------------------------\n#  Optional Software's Installation\n# --------------------------------------------------------------------------\n#\n#  If you need to modify this image, feel free to do it right here.\n#\n#  -- Your awesome modifications go here -- #\n#\n# --------------------------------------------------------------------------\n#  Check PHP version\n# --------------------------------------------------------------------------\n#\nRUN php -v | head -n 1 | grep -q \"PHP ${PHP_VERSION}.\"\n#\n# --------------------------------------------------------------------------\n#  Final Touch\n# --------------------------------------------------------------------------\n#\nWORKDIR /etc/supervisor/conf.d/\n","injectedSmells":[],"originalDockerfileHash":"773809bd3e9ca00ceb89ccc1c9d5ee1e","successfullyInjectedSmells":[],"originalDockerfileUglified":"#\n#  --------------------------------------------------------------------------\n#   Image Setup\n#  --------------------------------------------------------------------------\n#\nARG PHP_VERSION=${PHP_VERSION}\nFROM php:${PHP_VERSION}-alpine\nLABEL maintainer=\"Mahmoud Zalt <mahmoud@zalt.me>\"\nRUN apk --update add wget curl git build-base libmemcached-dev libmcrypt-dev libxml2-dev pcre-dev zlib-dev autoconf cyrus-sasl-dev libgsasl-dev supervisor\nRUN docker-php-ext-install mysqli mbstring pdo pdo_mysql tokenizer xml pcntl\nRUN pecl channel-update pecl.php.net \\\n && pecl install memcached mcrypt-1.0.1 \\\n && docker-php-ext-enable memcached\n#   Add a non-root user:\nARG PUID=1000\nENV PUID=\"${PUID}\"\nARG PGID=1000\nENV PGID=\"${PGID}\"\nRUN addgroup -g ${PGID} laradock \\\n && adduser -D -G laradock -u ${PUID} laradock\n#  Install SOAP package:\nARG INSTALL_SOAP=false\nRUN if [ ${INSTALL_SOAP} = true ] ; then docker-php-ext-install soap ; fi\n#  Install BCMath package:\nARG INSTALL_BCMATH=false\nRUN if [ ${INSTALL_BCMATH} = true ] ; then docker-php-ext-install bcmath ; fi\n#   Install PostgreSQL drivers:\nARG INSTALL_PGSQL=false\nRUN if [ ${INSTALL_PGSQL} = true ] ; then apk --update add postgresql-dev \\\n && docker-php-ext-install pdo_pgsql ; fi\n#   Install ZipArchive:\nARG INSTALL_ZIP_ARCHIVE=false\nRUN if [ ${INSTALL_ZIP_ARCHIVE} = true ] ; then apk --update add libzip-dev \\\n && docker-php-ext-configure zip --with-libzip \\\n && docker-php-ext-install zip ; fi\n#   Install MySQL Client:\nARG INSTALL_MYSQL_CLIENT=false\nRUN if [ ${INSTALL_MYSQL_CLIENT} = true ] ; then apk --update add mysql-client ; fi\n#   Install FFMPEG:\nARG INSTALL_FFMPEG=false\nRUN if [ ${INSTALL_FFMPEG} = true ] ; then apk --update add ffmpeg ; fi\n#   Install AMQP:\nARG INSTALL_AMQP=false\nRUN if [ ${INSTALL_AMQP} = true ] ; then apk --update add rabbitmq-c rabbitmq-c-dev \\\n && pecl install amqp \\\n && docker-php-ext-enable amqp \\\n && docker-php-ext-install sockets ; fi\n#   Install Phalcon ext\nARG INSTALL_PHALCON=false\nARG PHALCON_VERSION\nENV PHALCON_VERSION=\"${PHALCON_VERSION}\"\nRUN if [ $INSTALL_PHALCON = true ] ; then apk --update add unzip gcc make re2c bash \\\n && curl -L -o /tmp/cphalcon.zip https://github.com/phalcon/cphalcon/archive/v${PHALCON_VERSION}.zip \\\n && unzip -d /tmp/ /tmp/cphalcon.zip \\\n && cd /tmp/cphalcon-${PHALCON_VERSION}/build \\\n && ./install \\\n && rm -rf /tmp/cphalcon* ; fi\nRUN if [ $INSTALL_GHOSTSCRIPT = true ] ; then apk --update add ghostscript ; fi\n#  Install GMP package:\nARG INSTALL_GMP=false\nRUN if [ ${INSTALL_GMP} = true ] ; then apk add --update --no-cache gmp gmp-dev \\\n && docker-php-ext-install gmp ; fi\nRUN rm /var/cache/apk/* \\\n && mkdir -p /var/www\n#  ##########################################################################\n#   Swoole EXTENSION\n#  ##########################################################################\nARG INSTALL_SWOOLE=false\nRUN if [ ${INSTALL_SWOOLE} = true ] ; then if [ $( php -r \"echo PHP_MAJOR_VERSION;\" ;) = \"5\" ] ; then pecl -q install swoole-2.0.10 ; else if [ $( php -r \"echo PHP_MINOR_VERSION;\" ;) = \"0\" ] ; then pecl install swoole-2.2.0 ; else pecl install swoole ; fi ; fi \\\n && docker-php-ext-enable swoole ; fi\n#  ##########################################################################\n#   Taint EXTENSION\n#  ##########################################################################\nARG INSTALL_TAINT=false\nRUN if [ ${INSTALL_TAINT} = true ] ; then if [ $( php -r \"echo PHP_MAJOR_VERSION;\" ;) = \"7\" ] ; then pecl install taint ; fi \\\n && docker-php-ext-enable taint ; fi\n#\n#  --------------------------------------------------------------------------\n#   Optional Supervisord Configuration\n#  --------------------------------------------------------------------------\n#\n#   Modify the ./supervisor.conf file to match your App's requirements.\n#   Make sure you rebuild your container with every change.\n#\nCOPY supervisord.conf /etc/supervisord.conf\nENTRYPOINT [\"/usr/bin/supervisord\", \"-n\", \"-c\", \"/etc/supervisord.conf\"]\n#\n#  --------------------------------------------------------------------------\n#   Optional Software's Installation\n#  --------------------------------------------------------------------------\n#\n#   If you need to modify this image, feel free to do it right here.\n#\n#   -- Your awesome modifications go here -- #\n#\n#  --------------------------------------------------------------------------\n#   Check PHP version\n#  --------------------------------------------------------------------------\n#\nRUN php -v | head -n 1 | grep -q \"PHP ${PHP_VERSION}.\"\n#\n#  --------------------------------------------------------------------------\n#   Final Touch\n#  --------------------------------------------------------------------------\n#\nWORKDIR /etc/supervisor/conf.d/\n","originalDockerfileUglifiedHash":"e19162c1788164abbf889f9bbda19ac2","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/5297c7b54e7fa2d4d37e2030beead426922412d7.dockerfile"}