{"seed":834678451,"processedDockerfileHash":"7d2448f540f72209ec7e9c65ffa139e8","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","have-a-healthcheck"],"processedDockerfile":"#   This dockerfile defines the expected runtime environment before the project is installed\nFROM ubuntu:bionic AS builder\nLABEL maintainer=\"Balázs Dukai <b.dukai@tudelft.nl>\"\nLABEL description=\"Build environment for 3dfier, includes PostgreSQL\"\n#   required repositories\nRUN set -x ; apt-get clean \\\n && apt-get update ; apt-get install --no-install-recommends software-properties-common=0.96.24.32.20 -y ; apt-get install --no-install-recommends tzdata=2022g-0ubuntu0.18.04 -y ; echo \"Europe/Amsterdam\" > /etc/timezone \\\n && dpkg-reconfigure -f noninteractive tzdata ; apt-get update\n#   C++ packages\nRUN set -x \\\n && apt-get install --no-install-recommends gcc=4:7.4.0-1ubuntu2.3 g++=4:7.4.0-1ubuntu2.3 cmake=3.10.2-1ubuntu2.18.04.2 libboost-dev=1.65.1.0ubuntu1 libboost-filesystem-dev=1.65.1.0ubuntu1 libboost-locale-dev=1.65.1.0ubuntu1 libboost-thread-dev=1.65.1.0ubuntu1 libboost-iostreams-dev=1.65.1.0ubuntu1 libboost-program-options-dev=1.65.1.0ubuntu1 libyaml-cpp-dev=0.5.2-4ubuntu1 libgmp-dev=2:6.1.2+dfsg-2ubuntu0.1 libmpfr-dev=4.0.1-1 gdbserver=8.1.1-0ubuntu1 unzip=6.0-21ubuntu1.2 wget=1.19.4-1ubuntu2.2 -y --no-install-suggests \\\n && apt-get update \\\n && apt-get upgrade -y\n#   PostgreSQL\nRUN set -x \\\n && apt-get install --no-install-recommends postgresql=10+190ubuntu0.1 -y\n#   GIS packages\nRUN set -x \\\n && apt-get install --no-install-recommends libgdal-dev=2.2.3+dfsg-2 libproj-dev=4.9.3-2 -y \\\n && apt-get update \\\n && apt-get upgrade -y \\\n && apt-get autoremove --purge -y \\\n && apt-get autoclean -y \\\n && rm -rf /var/cache/apt/* /tmp/*\n#  RUN export CC=gcc-8 && export CXX=g++-8\nENV IN_DIR=\"\\\"/opt\\\"\"\n#   get LASzip\nRUN set -ex ; cd $IN_DIR ; wget https://github.com/LASzip/LASzip/releases/download/v2.2.0/laszip-src-2.2.0.tar.gz ; wget https://github.com/LASzip/LASzip/releases/download/v2.2.0/laszip-src-2.2.0.tar.gz.md5 ; md5sum -c laszip-src-2.2.0.tar.gz.md5 ; rm laszip-src-2.2.0.tar.gz.md5 ; tar -xf laszip-src-2.2.0.tar.gz ; rm laszip-src-2.2.0.tar.gz\n#   The Makefile need to be modified in order to be compliant to what libLAS\n#   is looking for. https://github.com/libLAS/libLAS/issues/9\nRUN set -x ; cd $IN_DIR/laszip-src-2.2.0 ; sed -i 's/laszipdir = $(includedir)\\//laszipdir = $(includedir)\\/laszip/' ./include/laszip/Makefile.am ; sed -i 's/laszipdir = $(includedir)\\//laszipdir = $(includedir)\\/laszip/' ./include/laszip/Makefile.in ; mkdir build ; ./configure --prefix=$IN_DIR/laszip-src-2.2.0/build ; make \\\n && make install \\\n && make clean\n#  Libraries have been installed in:\n#     /home/bdukai/Desktop/laszip-src-2.2.0/build/lib\n#\n#  If you ever happen to want to link against installed libraries\n#  in a given directory, LIBDIR, you must either use libtool, and\n#  specify the full pathname of the library, or use the `-LLIBDIR'\n#  flag during linking and do at least one of the following:\n#     - add LIBDIR to the `LD_LIBRARY_PATH' environment variable\n#       during execution\n#     - add LIBDIR to the `LD_RUN_PATH' environment variable\n#       during linking\n#     - use the `-Wl,-rpath -Wl,LIBDIR' linker flag\n#     - have your system administrator add LIBDIR to `/etc/ld.so.conf'\n#\n#  See any operating system documentation about shared libraries for\n#  more information, such as the ld(1) and ld.so(8) manual pages.\nRUN set -x ; cd $IN_DIR ; wget http://download.osgeo.org/liblas/libLAS-1.8.1.tar.bz2 ; tar -xf libLAS-1.8.1.tar.bz2 ; rm libLAS-1.8.1.tar.bz2 ; cd libLAS-1.8.1 ; mkdir build ; mkdir cmake_build ; cd cmake_build ; cmake .. -DCMAKE_INSTALL_PREFIX=$IN_DIR/libLAS-1.8.1/build -DWITH_GDAL=ON -DWITH_LASZIP=ON -DLASZIP_INCLUDE_DIR=$IN_DIR/laszip-src-2.2.0/build/include -DLASZIP_LIBRARY=$IN_DIR/laszip-src-2.2.0/build/lib/liblaszip.so ; make \\\n && make install \\\n && make clean\nWORKDIR /opt/\nRUN set -x ; wget https://github.com/CGAL/cgal/archive/releases/CGAL-4.12.tar.gz ; wget https://github.com/CGAL/cgal/releases/download/releases%2FCGAL-4.12/md5sum.txt ; md5sum -c md5sum.txt ; rm md5sum.txt ; tar -xf CGAL-4.12.tar.gz ; rm CGAL-4.12.tar.gz ; cd cgal-releases-CGAL-4.12 ; mkdir build ; cd build ; cmake .. ; make\nRUN useradd -ms /bin/bash 3dfier\nUSER 3dfier\nWORKDIR /home/3dfier\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  This dockerfile defines the expected runtime environment before the project is installed\nFROM ubuntu:bionic AS builder\nLABEL maintainer=\"Balázs Dukai <b.dukai@tudelft.nl>\"\nLABEL description=\"Build environment for 3dfier, includes PostgreSQL\"\n#  required repositories\nRUN set -x ; apt-get clean \\\n && apt-get update ; apt-get install software-properties-common -y ; apt-get install tzdata -y ; echo \"Europe/Amsterdam\" > /etc/timezone \\\n && dpkg-reconfigure -f noninteractive tzdata ; apt-get update\n#  C++ packages\nRUN set -x \\\n && apt-get install --no-install-recommends gcc g++ cmake libboost-dev libboost-filesystem-dev libboost-locale-dev libboost-thread-dev libboost-iostreams-dev libboost-program-options-dev libyaml-cpp-dev libgmp-dev libmpfr-dev gdbserver unzip wget -y --no-install-suggests \\\n && apt-get update \\\n && apt-get upgrade -y\n#  PostgreSQL\nRUN set -x \\\n && apt-get install postgresql -y\n#  GIS packages\nRUN set -x \\\n && apt-get install libgdal-dev libproj-dev -y \\\n && apt-get update \\\n && apt-get upgrade -y \\\n && apt-get autoremove --purge -y \\\n && apt-get autoclean -y \\\n && rm -rf /var/cache/apt/* /tmp/*\n# RUN export CC=gcc-8 && export CXX=g++-8\nENV IN_DIR=\"\\\"/opt\\\"\"\n#  get LASzip\nRUN set -ex ; cd $IN_DIR ; wget https://github.com/LASzip/LASzip/releases/download/v2.2.0/laszip-src-2.2.0.tar.gz ; wget https://github.com/LASzip/LASzip/releases/download/v2.2.0/laszip-src-2.2.0.tar.gz.md5 ; md5sum -c laszip-src-2.2.0.tar.gz.md5 ; rm laszip-src-2.2.0.tar.gz.md5 ; tar -xf laszip-src-2.2.0.tar.gz ; rm laszip-src-2.2.0.tar.gz\n#  The Makefile need to be modified in order to be compliant to what libLAS\n#  is looking for. https://github.com/libLAS/libLAS/issues/9\nRUN set -x ; cd $IN_DIR/laszip-src-2.2.0 ; sed -i 's/laszipdir = $(includedir)\\//laszipdir = $(includedir)\\/laszip/' ./include/laszip/Makefile.am ; sed -i 's/laszipdir = $(includedir)\\//laszipdir = $(includedir)\\/laszip/' ./include/laszip/Makefile.in ; mkdir build ; ./configure --prefix=$IN_DIR/laszip-src-2.2.0/build ; make \\\n && make install \\\n && make clean\n# Libraries have been installed in:\n#    /home/bdukai/Desktop/laszip-src-2.2.0/build/lib\n#\n# If you ever happen to want to link against installed libraries\n# in a given directory, LIBDIR, you must either use libtool, and\n# specify the full pathname of the library, or use the `-LLIBDIR'\n# flag during linking and do at least one of the following:\n#    - add LIBDIR to the `LD_LIBRARY_PATH' environment variable\n#      during execution\n#    - add LIBDIR to the `LD_RUN_PATH' environment variable\n#      during linking\n#    - use the `-Wl,-rpath -Wl,LIBDIR' linker flag\n#    - have your system administrator add LIBDIR to `/etc/ld.so.conf'\n#\n# See any operating system documentation about shared libraries for\n# more information, such as the ld(1) and ld.so(8) manual pages.\nRUN set -x ; cd $IN_DIR ; wget http://download.osgeo.org/liblas/libLAS-1.8.1.tar.bz2 ; tar -xf libLAS-1.8.1.tar.bz2 ; rm libLAS-1.8.1.tar.bz2 ; cd libLAS-1.8.1 ; mkdir build ; mkdir cmake_build ; cd cmake_build ; cmake .. -DCMAKE_INSTALL_PREFIX=$IN_DIR/libLAS-1.8.1/build -DWITH_GDAL=ON -DWITH_LASZIP=ON -DLASZIP_INCLUDE_DIR=$IN_DIR/laszip-src-2.2.0/build/include -DLASZIP_LIBRARY=$IN_DIR/laszip-src-2.2.0/build/lib/liblaszip.so ; make \\\n && make install \\\n && make clean\nWORKDIR /opt/\nRUN set -x ; wget https://github.com/CGAL/cgal/archive/releases/CGAL-4.12.tar.gz ; wget https://github.com/CGAL/cgal/releases/download/releases%2FCGAL-4.12/md5sum.txt ; md5sum -c md5sum.txt ; rm md5sum.txt ; tar -xf CGAL-4.12.tar.gz ; rm CGAL-4.12.tar.gz ; cd cgal-releases-CGAL-4.12 ; mkdir build ; cd build ; cmake .. ; make\nRUN useradd -ms /bin/bash 3dfier\nUSER 3dfier\nWORKDIR /home/3dfier\n","injectedSmells":[],"originalDockerfileHash":"84817d10d2d9c7fa618ca70c31c02eb3","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   This dockerfile defines the expected runtime environment before the project is installed\nFROM ubuntu:bionic AS builder\nLABEL maintainer=\"Balázs Dukai <b.dukai@tudelft.nl>\"\nLABEL description=\"Build environment for 3dfier, includes PostgreSQL\"\n#   required repositories\nRUN set -x ; apt-get clean \\\n && apt-get update ; apt-get install software-properties-common -y ; apt-get install tzdata -y ; echo \"Europe/Amsterdam\" > /etc/timezone \\\n && dpkg-reconfigure -f noninteractive tzdata ; apt-get update\n#   C++ packages\nRUN set -x \\\n && apt-get install --no-install-recommends gcc g++ cmake libboost-dev libboost-filesystem-dev libboost-locale-dev libboost-thread-dev libboost-iostreams-dev libboost-program-options-dev libyaml-cpp-dev libgmp-dev libmpfr-dev gdbserver unzip wget -y --no-install-suggests \\\n && apt-get update \\\n && apt-get upgrade -y\n#   PostgreSQL\nRUN set -x \\\n && apt-get install postgresql -y\n#   GIS packages\nRUN set -x \\\n && apt-get install libgdal-dev libproj-dev -y \\\n && apt-get update \\\n && apt-get upgrade -y \\\n && apt-get autoremove --purge -y \\\n && apt-get autoclean -y \\\n && rm -rf /var/cache/apt/* /tmp/*\n#  RUN export CC=gcc-8 && export CXX=g++-8\nENV IN_DIR=\"\\\"/opt\\\"\"\n#   get LASzip\nRUN set -ex ; cd $IN_DIR ; wget https://github.com/LASzip/LASzip/releases/download/v2.2.0/laszip-src-2.2.0.tar.gz ; wget https://github.com/LASzip/LASzip/releases/download/v2.2.0/laszip-src-2.2.0.tar.gz.md5 ; md5sum -c laszip-src-2.2.0.tar.gz.md5 ; rm laszip-src-2.2.0.tar.gz.md5 ; tar -xf laszip-src-2.2.0.tar.gz ; rm laszip-src-2.2.0.tar.gz\n#   The Makefile need to be modified in order to be compliant to what libLAS\n#   is looking for. https://github.com/libLAS/libLAS/issues/9\nRUN set -x ; cd $IN_DIR/laszip-src-2.2.0 ; sed -i 's/laszipdir = $(includedir)\\//laszipdir = $(includedir)\\/laszip/' ./include/laszip/Makefile.am ; sed -i 's/laszipdir = $(includedir)\\//laszipdir = $(includedir)\\/laszip/' ./include/laszip/Makefile.in ; mkdir build ; ./configure --prefix=$IN_DIR/laszip-src-2.2.0/build ; make \\\n && make install \\\n && make clean\n#  Libraries have been installed in:\n#     /home/bdukai/Desktop/laszip-src-2.2.0/build/lib\n#\n#  If you ever happen to want to link against installed libraries\n#  in a given directory, LIBDIR, you must either use libtool, and\n#  specify the full pathname of the library, or use the `-LLIBDIR'\n#  flag during linking and do at least one of the following:\n#     - add LIBDIR to the `LD_LIBRARY_PATH' environment variable\n#       during execution\n#     - add LIBDIR to the `LD_RUN_PATH' environment variable\n#       during linking\n#     - use the `-Wl,-rpath -Wl,LIBDIR' linker flag\n#     - have your system administrator add LIBDIR to `/etc/ld.so.conf'\n#\n#  See any operating system documentation about shared libraries for\n#  more information, such as the ld(1) and ld.so(8) manual pages.\nRUN set -x ; cd $IN_DIR ; wget http://download.osgeo.org/liblas/libLAS-1.8.1.tar.bz2 ; tar -xf libLAS-1.8.1.tar.bz2 ; rm libLAS-1.8.1.tar.bz2 ; cd libLAS-1.8.1 ; mkdir build ; mkdir cmake_build ; cd cmake_build ; cmake .. -DCMAKE_INSTALL_PREFIX=$IN_DIR/libLAS-1.8.1/build -DWITH_GDAL=ON -DWITH_LASZIP=ON -DLASZIP_INCLUDE_DIR=$IN_DIR/laszip-src-2.2.0/build/include -DLASZIP_LIBRARY=$IN_DIR/laszip-src-2.2.0/build/lib/liblaszip.so ; make \\\n && make install \\\n && make clean\nWORKDIR /opt/\nRUN set -x ; wget https://github.com/CGAL/cgal/archive/releases/CGAL-4.12.tar.gz ; wget https://github.com/CGAL/cgal/releases/download/releases%2FCGAL-4.12/md5sum.txt ; md5sum -c md5sum.txt ; rm md5sum.txt ; tar -xf CGAL-4.12.tar.gz ; rm CGAL-4.12.tar.gz ; cd cgal-releases-CGAL-4.12 ; mkdir build ; cd build ; cmake .. ; make\nRUN useradd -ms /bin/bash 3dfier\nUSER 3dfier\nWORKDIR /home/3dfier\n","originalDockerfileUglifiedHash":"d6a45732c02ce6d7bf6b54f837236e71","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/2b23b2e1b6728aaeb1a56c32494ad7b381a64a99.dockerfile"}