{"seed":1412995532,"processedDockerfileHash":"c4cc9590628474925c479fb3ca6335ab","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM nginx\nMAINTAINER Azure App Service Container Images <appsvc-images@microsoft.com>\n#   ========\n#   ENV vars\n#   ========\n#   ssh\nENV SSH_PASSWD=\"\\\"root:Docker!\\\"\"\n#   Composer\n#   Updation: https://getcomposer.org/download/\nENV COMPOSER_DOWNLOAD_URL=\"\\\"https://getcomposer.org/installer\\\"\"\nENV COMPOSER_ALLOW_SUPERUSER=\"1\"\nENV COMPOSER_HOME=\"/home/.composer\"\nENV COMPOSER_VERSION=\"\\\"1.6.1\\\"\"\n#   SHA384SUM https://composer.github.io/installer.sha384sum\nENV COMPOSER_SETUP_SHA=\"544e09ee996cdf60ece3804abc52599c22b1f40f4323403c44d44fdfdd586475ca9813a858088ffbc1f233e9b180f061\"\n#  Web Site Home\nENV HOME_SITE=\"\\\"/home/site/wwwroot\\\"\"\n#\nENV DOCKER_BUILD_HOME=\"\\\"/dockerbuild\\\"\"\n#   ====================\n#   Download and Install\n#   ~. essentials\n#   1. php7.0-common/php7.0-fpm/php-pear/php7.0-apcu\n#   2. ssh\n#   3. drush\n#   4. composer\n#   ====================\nCOPY * /tmp/\n#   -------------\n#   ~. essentials\n#   -------------\nWORKDIR $DOCKER_BUILD_HOME\nRUN set -ex \\\n && essentials=\" ca-certificates \" \\\n && apt-get update \\\n && apt-get install --no-install-recommends $essentials -y -V \\\n && rm -r /var/lib/apt/lists/*\n#   ------------------\n#   1. php7.0-common/php7.0-fpm/php-pear/php7.0-apcu\n#   ------------------\nRUN set -ex \\\n && phps=\" php7.0-common php7.0-fpm php-pear php7.0-apcu php7.0-gd php7.0-dba php7.0-mysql \" \\\n && apt-get update \\\n && apt-get install --no-install-recommends $phps -y -V \\\n && rm -r /var/lib/apt/lists/*\n#   ------\n#   2. ssh\n#   ------\nRUN set -ex \\\n && apt-get update \\\n && apt-get install --no-install-recommends openssh-server=1:8.4p1-5+deb11u1 -y \\\n && echo \"$SSH_PASSWD\" | chpasswd\n#   ------\n#   3. drush\n#   ------\nRUN set -ex \\\n && php -r \"readfile('http://files.drush.org/drush.phar');\" > /usr/local/bin/drush \\\n && chmod +x /usr/local/bin/drush\n#   ------\n#   4. composer\n#   ------\nRUN set -ex \\\n && php -r \"readfile('https://getcomposer.org/installer');\" > /tmp/composer-setup.php \\\n && php -r \"if (hash('SHA384', file_get_contents('/tmp/composer-setup.php')) === getenv('COMPOSER_SETUP_SHA')) { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('/tmp/composer-setup.php'); echo PHP_EOL; exit(1); } echo PHP_EOL;\" \\\n && mkdir -p /composer/bin \\\n && php /tmp/composer-setup.php --install-dir=/usr/local/bin/ --filename=composer --version=${COMPOSER_VERSION} \\\n && rm /tmp/composer-setup.php\n#   ----------\n#   ~. clean up\n#   ----------\nRUN set -ex \\\n && apt-get autoremove -y\n#   =========\n#   Configure\n#   =========\nRUN test -d /home/LogFiles/ || mkdir -p /home/LogFiles \\\n && test -d /home/site/wwwroot/ || mkdir -p /home/site/wwwroot \\\n && rm -rf /var/www/html\nWORKDIR /home/site/wwwroot\n#   ssh\nCOPY sshd_config /etc/ssh/\n#   php\nCOPY php.ini /etc/php/7.0/cli/php.ini\nCOPY www.conf /etc/php/7.0/fpm/pool.d/www.conf\n#   nginx\nCOPY nginx.conf /etc/nginx/nginx.conf\nCOPY hostingstart.html /home/site/wwwroot/index.html\nRUN echo \"<?php\" >> index.php \\\n && echo \"phpinfo();\" >> index.php\n#   =====\n#   final\n#   =====\nCOPY init_container.sh /usr/local/bin/\nRUN chmod +x /usr/local/bin/init_container.sh\nEXPOSE 2222/tcp 80/tcp\nENTRYPOINT [\"init_container.sh\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\nHEALTHCHECK CMD curl --fail http://127.0.0.1:80 || exit 1\n","originalDockerfile":"FROM nginx\nMAINTAINER Azure App Service Container Images <appsvc-images@microsoft.com>\n#  ========\n#  ENV vars\n#  ========\n#  ssh\nENV SSH_PASSWD=\"\\\"root:Docker!\\\"\"\n#  Composer\n#  Updation: https://getcomposer.org/download/\nENV COMPOSER_DOWNLOAD_URL=\"\\\"https://getcomposer.org/installer\\\"\"\nENV COMPOSER_ALLOW_SUPERUSER=\"1\"\nENV COMPOSER_HOME=\"/home/.composer\"\nENV COMPOSER_VERSION=\"\\\"1.6.1\\\"\"\n#  SHA384SUM https://composer.github.io/installer.sha384sum\nENV COMPOSER_SETUP_SHA=\"544e09ee996cdf60ece3804abc52599c22b1f40f4323403c44d44fdfdd586475ca9813a858088ffbc1f233e9b180f061\"\n# Web Site Home\nENV HOME_SITE=\"\\\"/home/site/wwwroot\\\"\"\n#\nENV DOCKER_BUILD_HOME=\"\\\"/dockerbuild\\\"\"\n#  ====================\n#  Download and Install\n#  ~. essentials\n#  1. php7.0-common/php7.0-fpm/php-pear/php7.0-apcu\n#  2. ssh\n#  3. drush\n#  4. composer\n#  ====================\nCOPY * /tmp/\n#  -------------\n#  ~. essentials\n#  -------------\nWORKDIR $DOCKER_BUILD_HOME\nRUN set -ex \\\n && essentials=\" ca-certificates \" \\\n && apt-get update \\\n && apt-get install --no-install-recommends $essentials -y -V \\\n && rm -r /var/lib/apt/lists/*\n#  ------------------\n#  1. php7.0-common/php7.0-fpm/php-pear/php7.0-apcu\n#  ------------------\nRUN set -ex \\\n && phps=\" php7.0-common php7.0-fpm php-pear php7.0-apcu php7.0-gd php7.0-dba php7.0-mysql \" \\\n && apt-get update \\\n && apt-get install --no-install-recommends $phps -y -V \\\n && rm -r /var/lib/apt/lists/*\n#  ------\n#  2. ssh\n#  ------\nRUN set -ex \\\n && apt-get update \\\n && apt-get install --no-install-recommends openssh-server -y \\\n && echo \"$SSH_PASSWD\" | chpasswd\n#  ------\n#  3. drush\n#  ------\nRUN set -ex \\\n && php -r \"readfile('http://files.drush.org/drush.phar');\" > /usr/local/bin/drush \\\n && chmod +x /usr/local/bin/drush\n#  ------\n#  4. composer\n#  ------\nRUN set -ex \\\n && php -r \"readfile('https://getcomposer.org/installer');\" > /tmp/composer-setup.php \\\n && php -r \"if (hash('SHA384', file_get_contents('/tmp/composer-setup.php')) === getenv('COMPOSER_SETUP_SHA')) { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('/tmp/composer-setup.php'); echo PHP_EOL; exit(1); } echo PHP_EOL;\" \\\n && mkdir -p /composer/bin \\\n && php /tmp/composer-setup.php --install-dir=/usr/local/bin/ --filename=composer --version=${COMPOSER_VERSION} \\\n && rm /tmp/composer-setup.php\n#  ----------\n#  ~. clean up\n#  ----------\nRUN set -ex \\\n && apt-get autoremove -y\n#  =========\n#  Configure\n#  =========\nRUN test -d /home/LogFiles/ || mkdir -p /home/LogFiles \\\n && test -d /home/site/wwwroot/ || mkdir -p /home/site/wwwroot \\\n && rm -rf /var/www/html\nWORKDIR /home/site/wwwroot\n#  ssh\nCOPY sshd_config /etc/ssh/\n#  php\nCOPY php.ini /etc/php/7.0/cli/php.ini\nCOPY www.conf /etc/php/7.0/fpm/pool.d/www.conf\n#  nginx\nCOPY nginx.conf /etc/nginx/nginx.conf\nCOPY hostingstart.html /home/site/wwwroot/index.html\nRUN echo \"<?php\" >> index.php \\\n && echo \"phpinfo();\" >> index.php\n#  =====\n#  final\n#  =====\nCOPY init_container.sh /usr/local/bin/\nRUN chmod +x /usr/local/bin/init_container.sh\nEXPOSE 2222/tcp 80/tcp\nENTRYPOINT [\"init_container.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"59bf4309fa0fa1e5e0f5064b543899cc","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM nginx\nMAINTAINER Azure App Service Container Images <appsvc-images@microsoft.com>\n#   ========\n#   ENV vars\n#   ========\n#   ssh\nENV SSH_PASSWD=\"\\\"root:Docker!\\\"\"\n#   Composer\n#   Updation: https://getcomposer.org/download/\nENV COMPOSER_DOWNLOAD_URL=\"\\\"https://getcomposer.org/installer\\\"\"\nENV COMPOSER_ALLOW_SUPERUSER=\"1\"\nENV COMPOSER_HOME=\"/home/.composer\"\nENV COMPOSER_VERSION=\"\\\"1.6.1\\\"\"\n#   SHA384SUM https://composer.github.io/installer.sha384sum\nENV COMPOSER_SETUP_SHA=\"544e09ee996cdf60ece3804abc52599c22b1f40f4323403c44d44fdfdd586475ca9813a858088ffbc1f233e9b180f061\"\n#  Web Site Home\nENV HOME_SITE=\"\\\"/home/site/wwwroot\\\"\"\n#\nENV DOCKER_BUILD_HOME=\"\\\"/dockerbuild\\\"\"\n#   ====================\n#   Download and Install\n#   ~. essentials\n#   1. php7.0-common/php7.0-fpm/php-pear/php7.0-apcu\n#   2. ssh\n#   3. drush\n#   4. composer\n#   ====================\nCOPY * /tmp/\n#   -------------\n#   ~. essentials\n#   -------------\nWORKDIR $DOCKER_BUILD_HOME\nRUN set -ex \\\n && essentials=\" ca-certificates \" \\\n && apt-get update \\\n && apt-get install --no-install-recommends $essentials -y -V \\\n && rm -r /var/lib/apt/lists/*\n#   ------------------\n#   1. php7.0-common/php7.0-fpm/php-pear/php7.0-apcu\n#   ------------------\nRUN set -ex \\\n && phps=\" php7.0-common php7.0-fpm php-pear php7.0-apcu php7.0-gd php7.0-dba php7.0-mysql \" \\\n && apt-get update \\\n && apt-get install --no-install-recommends $phps -y -V \\\n && rm -r /var/lib/apt/lists/*\n#   ------\n#   2. ssh\n#   ------\nRUN set -ex \\\n && apt-get update \\\n && apt-get install --no-install-recommends openssh-server -y \\\n && echo \"$SSH_PASSWD\" | chpasswd\n#   ------\n#   3. drush\n#   ------\nRUN set -ex \\\n && php -r \"readfile('http://files.drush.org/drush.phar');\" > /usr/local/bin/drush \\\n && chmod +x /usr/local/bin/drush\n#   ------\n#   4. composer\n#   ------\nRUN set -ex \\\n && php -r \"readfile('https://getcomposer.org/installer');\" > /tmp/composer-setup.php \\\n && php -r \"if (hash('SHA384', file_get_contents('/tmp/composer-setup.php')) === getenv('COMPOSER_SETUP_SHA')) { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('/tmp/composer-setup.php'); echo PHP_EOL; exit(1); } echo PHP_EOL;\" \\\n && mkdir -p /composer/bin \\\n && php /tmp/composer-setup.php --install-dir=/usr/local/bin/ --filename=composer --version=${COMPOSER_VERSION} \\\n && rm /tmp/composer-setup.php\n#   ----------\n#   ~. clean up\n#   ----------\nRUN set -ex \\\n && apt-get autoremove -y\n#   =========\n#   Configure\n#   =========\nRUN test -d /home/LogFiles/ || mkdir -p /home/LogFiles \\\n && test -d /home/site/wwwroot/ || mkdir -p /home/site/wwwroot \\\n && rm -rf /var/www/html\nWORKDIR /home/site/wwwroot\n#   ssh\nCOPY sshd_config /etc/ssh/\n#   php\nCOPY php.ini /etc/php/7.0/cli/php.ini\nCOPY www.conf /etc/php/7.0/fpm/pool.d/www.conf\n#   nginx\nCOPY nginx.conf /etc/nginx/nginx.conf\nCOPY hostingstart.html /home/site/wwwroot/index.html\nRUN echo \"<?php\" >> index.php \\\n && echo \"phpinfo();\" >> index.php\n#   =====\n#   final\n#   =====\nCOPY init_container.sh /usr/local/bin/\nRUN chmod +x /usr/local/bin/init_container.sh\nEXPOSE 2222/tcp 80/tcp\nENTRYPOINT [\"init_container.sh\"]\n","originalDockerfileUglifiedHash":"922e8201c2b9842d59425a5c32a0f5db","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/d9abfeaac3258930b840759fc664bdd0860e62e9.dockerfile"}