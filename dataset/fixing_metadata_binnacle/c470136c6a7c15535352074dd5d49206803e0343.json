{"seed":816414140,"processedDockerfileHash":"b206e88d9c61a12eb23a272752282f17","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-pip","have-a-healthcheck","have-a-user"],"processedDockerfile":"ARG AWS_REGION\nFROM 520713654638.dkr.ecr.${AWS_REGION}.amazonaws.com/sagemaker-rl-tensorflow:coach0.11.0-cpu-py3\nRUN buildDeps=\" wget build-essential \" \\\n && apt-get update \\\n && apt-get install --no-install-recommends $buildDeps -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n#  #############################################################\n#   MPI & its dependencies\n#  #############################################################\n#   Install Open MPI\nRUN mkdir /tmp/openmpi \\\n && cd /tmp/openmpi \\\n && wget https://www.open-mpi.org/software/ompi/v3.0/downloads/openmpi-3.0.0.tar.gz \\\n && tar zxf openmpi-3.0.0.tar.gz \\\n && cd openmpi-3.0.0 \\\n && ./configure --enable-orterun-prefix-by-default \\\n && make -j $( nproc ;) all \\\n && make install \\\n && ldconfig \\\n && rm -rf /tmp/openmpi\n#   Install Horovod, temporarily using CUDA stubs\nRUN ldconfig /usr/local/cuda-9.0/targets/x86_64-linux/lib/stubs \\\n && HOROVOD_CPU_ALLREDUCE=MPI HOROVOD_WITH_TENSORFLOW=1 pip install --no-cache-dir horovod \\\n && ldconfig\n#   Create a wrapper for OpenMPI to allow running as root by default\nRUN mv /usr/local/bin/mpirun /usr/local/bin/mpirun.real \\\n && echo '#!/bin/bash' > /usr/local/bin/mpirun \\\n && echo 'mpirun.real --allow-run-as-root \"$@\"' >> /usr/local/bin/mpirun \\\n && chmod a+x /usr/local/bin/mpirun\n#   Configure OpenMPI to run good defaults:\n#     --bind-to none --map-by slot --mca btl_tcp_if_exclude lo,docker0\nRUN echo \"hwloc_base_binding_policy = none\" >> /usr/local/etc/openmpi-mca-params.conf \\\n && echo \"rmaps_base_mapping_policy = slot\" >> /usr/local/etc/openmpi-mca-params.conf\nENV LD_LIBRARY_PATH=\"/usr/local/openmpi/lib:$LD_LIBRARY_PATH\"\nENV PATH=\"/usr/local/openmpi/bin/:$PATH\"\nENV PATH=\"/usr/local/nvidia/bin:$PATH\"\nENV PYTHONDONTWRITEBYTECODE=\"1\" \\\n    PYTHONUNBUFFERED=\"1\"\n#   SSH. Partially taken from https://docs.docker.com/engine/examples/running_ssh_service/\nRUN apt-get update \\\n && apt-get install --no-install-recommends openssh-server -y \\\n && mkdir -p /var/run/sshd\n#   SSH login fix. Otherwise user is kicked off after login\nRUN sed 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd\n#   Create SSH key.\nRUN mkdir -p /root/.ssh/ \\\n && ssh-keygen -q -t rsa -N '' -f /root/.ssh/id_rsa \\\n && cp /root/.ssh/id_rsa.pub /root/.ssh/authorized_keys \\\n && printf \"Host *\\n StrictHostKeyChecking no\\n\" >> /root/.ssh/config\n#   Hostname Fix\nCOPY resources/changehostname.c /\nCOPY resources/change-hostname.sh /\nCOPY resources/change-hostname.sh /usr/local/bin/change-hostname.sh\nRUN chmod +x /usr/local/bin/change-hostname.sh\nRUN chmod +x /change-hostname.sh\nRUN pip install keras==2.12.0\nRUN pip install retrying==1.3.4\n#  #############################################################\nWORKDIR /opt\n#  ###########################################\n#   Roboschool\n#  ###########################################\nRUN apt-get update \\\n && apt-get install --no-install-recommends git cmake ffmpeg pkg-config qtbase5-dev libqt5opengl5-dev libassimp-dev libtinyxml-dev libgl1-mesa-dev -y \\\n && cd /opt \\\n && apt-get clean \\\n && rm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*\nRUN apt-get update \\\n && apt-get install --no-install-recommends libboost-python-dev -y\nRUN apt-get update \\\n && apt-get install --no-install-recommends python3.6-dev -y \\\n && ln -s -f /usr/bin/python3.6 /usr/bin/python \\\n && apt-get clean \\\n && rm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*\nRUN curl -fSsL -O https://bootstrap.pypa.io/get-pip.py \\\n && python get-pip.py \\\n && rm get-pip.py\nRUN pip install pip==23.1 setuptools==67.6.1 --upgrade\nRUN pip install roboschool==1.0.48\nENV PYTHONUNBUFFERED=\"1\"\n#  ###########################################\n#   Baselines\n#  ###########################################\nRUN apt-get update \\\n && apt-get install --no-install-recommends cmake libopenmpi-dev python3-dev zlib1g-dev wget -y\nENV BASELINES_PATH=\"/opt/baselines/\"\nRUN git clone https://github.com/openai/baselines.git\nRUN pip install -e ${BASELINES_PATH}\n#  ###########################################\n#   Stable Baselines\n#  ###########################################\nRUN pip install stable-baselines==2.10.2\n#  ###########################################\n#   Test Installation\n#  ###########################################\n#   Test to verify if all required dependencies installed successfully or not.\nRUN python -c \"import gym; import roboschool;\"\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"ARG AWS_REGION\nFROM 520713654638.dkr.ecr.${AWS_REGION}.amazonaws.com/sagemaker-rl-tensorflow:coach0.11.0-cpu-py3\nRUN buildDeps=\" wget build-essential \" \\\n && apt-get update \\\n && apt-get install --no-install-recommends $buildDeps -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n# #############################################################\n#  MPI & its dependencies\n# #############################################################\n#  Install Open MPI\nRUN mkdir /tmp/openmpi \\\n && cd /tmp/openmpi \\\n && wget https://www.open-mpi.org/software/ompi/v3.0/downloads/openmpi-3.0.0.tar.gz \\\n && tar zxf openmpi-3.0.0.tar.gz \\\n && cd openmpi-3.0.0 \\\n && ./configure --enable-orterun-prefix-by-default \\\n && make -j $( nproc ;) all \\\n && make install \\\n && ldconfig \\\n && rm -rf /tmp/openmpi\n#  Install Horovod, temporarily using CUDA stubs\nRUN ldconfig /usr/local/cuda-9.0/targets/x86_64-linux/lib/stubs \\\n && HOROVOD_CPU_ALLREDUCE=MPI HOROVOD_WITH_TENSORFLOW=1 pip install --no-cache-dir horovod \\\n && ldconfig\n#  Create a wrapper for OpenMPI to allow running as root by default\nRUN mv /usr/local/bin/mpirun /usr/local/bin/mpirun.real \\\n && echo '#!/bin/bash' > /usr/local/bin/mpirun \\\n && echo 'mpirun.real --allow-run-as-root \"$@\"' >> /usr/local/bin/mpirun \\\n && chmod a+x /usr/local/bin/mpirun\n#  Configure OpenMPI to run good defaults:\n#    --bind-to none --map-by slot --mca btl_tcp_if_exclude lo,docker0\nRUN echo \"hwloc_base_binding_policy = none\" >> /usr/local/etc/openmpi-mca-params.conf \\\n && echo \"rmaps_base_mapping_policy = slot\" >> /usr/local/etc/openmpi-mca-params.conf\nENV LD_LIBRARY_PATH=\"/usr/local/openmpi/lib:$LD_LIBRARY_PATH\"\nENV PATH=\"/usr/local/openmpi/bin/:$PATH\"\nENV PATH=\"/usr/local/nvidia/bin:$PATH\"\nENV PYTHONDONTWRITEBYTECODE=\"1\" \\\n    PYTHONUNBUFFERED=\"1\"\n#  SSH. Partially taken from https://docs.docker.com/engine/examples/running_ssh_service/\nRUN apt-get update \\\n && apt-get install --no-install-recommends openssh-server -y \\\n && mkdir -p /var/run/sshd\n#  SSH login fix. Otherwise user is kicked off after login\nRUN sed 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd\n#  Create SSH key.\nRUN mkdir -p /root/.ssh/ \\\n && ssh-keygen -q -t rsa -N '' -f /root/.ssh/id_rsa \\\n && cp /root/.ssh/id_rsa.pub /root/.ssh/authorized_keys \\\n && printf \"Host *\\n StrictHostKeyChecking no\\n\" >> /root/.ssh/config\n#  Hostname Fix\nCOPY resources/changehostname.c /\nCOPY resources/change-hostname.sh /\nCOPY resources/change-hostname.sh /usr/local/bin/change-hostname.sh\nRUN chmod +x /usr/local/bin/change-hostname.sh\nRUN chmod +x /change-hostname.sh\nRUN pip install keras\nRUN pip install retrying\n# #############################################################\nWORKDIR /opt\n# ###########################################\n#  Roboschool\n# ###########################################\nRUN apt-get update \\\n && apt-get install git cmake ffmpeg pkg-config qtbase5-dev libqt5opengl5-dev libassimp-dev libtinyxml-dev libgl1-mesa-dev -y \\\n && cd /opt \\\n && apt-get clean \\\n && rm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*\nRUN apt-get update \\\n && apt-get install libboost-python-dev -y\nRUN apt-get update \\\n && apt-get install --no-install-recommends python3.6-dev -y \\\n && ln -s -f /usr/bin/python3.6 /usr/bin/python \\\n && apt-get clean \\\n && rm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*\nRUN curl -fSsL -O https://bootstrap.pypa.io/get-pip.py \\\n && python get-pip.py \\\n && rm get-pip.py\nRUN pip install pip setuptools --upgrade\nRUN pip install roboschool==1.0.48\nENV PYTHONUNBUFFERED=\"1\"\n# ###########################################\n#  Baselines\n# ###########################################\nRUN apt-get update \\\n && apt-get install cmake libopenmpi-dev python3-dev zlib1g-dev wget -y\nENV BASELINES_PATH=\"/opt/baselines/\"\nRUN git clone https://github.com/openai/baselines.git\nRUN pip install -e ${BASELINES_PATH}\n# ###########################################\n#  Stable Baselines\n# ###########################################\nRUN pip install stable-baselines\n# ###########################################\n#  Test Installation\n# ###########################################\n#  Test to verify if all required dependencies installed successfully or not.\nRUN python -c \"import gym; import roboschool;\"\n","injectedSmells":[],"originalDockerfileHash":"e5203d16d82e0087a4b0f34a30a97dbc","successfullyInjectedSmells":[],"originalDockerfileUglified":"ARG AWS_REGION\nFROM 520713654638.dkr.ecr.${AWS_REGION}.amazonaws.com/sagemaker-rl-tensorflow:coach0.11.0-cpu-py3\nRUN buildDeps=\" wget build-essential \" \\\n && apt-get update \\\n && apt-get install --no-install-recommends $buildDeps -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n#  #############################################################\n#   MPI & its dependencies\n#  #############################################################\n#   Install Open MPI\nRUN mkdir /tmp/openmpi \\\n && cd /tmp/openmpi \\\n && wget https://www.open-mpi.org/software/ompi/v3.0/downloads/openmpi-3.0.0.tar.gz \\\n && tar zxf openmpi-3.0.0.tar.gz \\\n && cd openmpi-3.0.0 \\\n && ./configure --enable-orterun-prefix-by-default \\\n && make -j $( nproc ;) all \\\n && make install \\\n && ldconfig \\\n && rm -rf /tmp/openmpi\n#   Install Horovod, temporarily using CUDA stubs\nRUN ldconfig /usr/local/cuda-9.0/targets/x86_64-linux/lib/stubs \\\n && HOROVOD_CPU_ALLREDUCE=MPI HOROVOD_WITH_TENSORFLOW=1 pip install --no-cache-dir horovod \\\n && ldconfig\n#   Create a wrapper for OpenMPI to allow running as root by default\nRUN mv /usr/local/bin/mpirun /usr/local/bin/mpirun.real \\\n && echo '#!/bin/bash' > /usr/local/bin/mpirun \\\n && echo 'mpirun.real --allow-run-as-root \"$@\"' >> /usr/local/bin/mpirun \\\n && chmod a+x /usr/local/bin/mpirun\n#   Configure OpenMPI to run good defaults:\n#     --bind-to none --map-by slot --mca btl_tcp_if_exclude lo,docker0\nRUN echo \"hwloc_base_binding_policy = none\" >> /usr/local/etc/openmpi-mca-params.conf \\\n && echo \"rmaps_base_mapping_policy = slot\" >> /usr/local/etc/openmpi-mca-params.conf\nENV LD_LIBRARY_PATH=\"/usr/local/openmpi/lib:$LD_LIBRARY_PATH\"\nENV PATH=\"/usr/local/openmpi/bin/:$PATH\"\nENV PATH=\"/usr/local/nvidia/bin:$PATH\"\nENV PYTHONDONTWRITEBYTECODE=\"1\" \\\n    PYTHONUNBUFFERED=\"1\"\n#   SSH. Partially taken from https://docs.docker.com/engine/examples/running_ssh_service/\nRUN apt-get update \\\n && apt-get install --no-install-recommends openssh-server -y \\\n && mkdir -p /var/run/sshd\n#   SSH login fix. Otherwise user is kicked off after login\nRUN sed 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd\n#   Create SSH key.\nRUN mkdir -p /root/.ssh/ \\\n && ssh-keygen -q -t rsa -N '' -f /root/.ssh/id_rsa \\\n && cp /root/.ssh/id_rsa.pub /root/.ssh/authorized_keys \\\n && printf \"Host *\\n StrictHostKeyChecking no\\n\" >> /root/.ssh/config\n#   Hostname Fix\nCOPY resources/changehostname.c /\nCOPY resources/change-hostname.sh /\nCOPY resources/change-hostname.sh /usr/local/bin/change-hostname.sh\nRUN chmod +x /usr/local/bin/change-hostname.sh\nRUN chmod +x /change-hostname.sh\nRUN pip install keras\nRUN pip install retrying\n#  #############################################################\nWORKDIR /opt\n#  ###########################################\n#   Roboschool\n#  ###########################################\nRUN apt-get update \\\n && apt-get install git cmake ffmpeg pkg-config qtbase5-dev libqt5opengl5-dev libassimp-dev libtinyxml-dev libgl1-mesa-dev -y \\\n && cd /opt \\\n && apt-get clean \\\n && rm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*\nRUN apt-get update \\\n && apt-get install libboost-python-dev -y\nRUN apt-get update \\\n && apt-get install --no-install-recommends python3.6-dev -y \\\n && ln -s -f /usr/bin/python3.6 /usr/bin/python \\\n && apt-get clean \\\n && rm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*\nRUN curl -fSsL -O https://bootstrap.pypa.io/get-pip.py \\\n && python get-pip.py \\\n && rm get-pip.py\nRUN pip install pip setuptools --upgrade\nRUN pip install roboschool==1.0.48\nENV PYTHONUNBUFFERED=\"1\"\n#  ###########################################\n#   Baselines\n#  ###########################################\nRUN apt-get update \\\n && apt-get install cmake libopenmpi-dev python3-dev zlib1g-dev wget -y\nENV BASELINES_PATH=\"/opt/baselines/\"\nRUN git clone https://github.com/openai/baselines.git\nRUN pip install -e ${BASELINES_PATH}\n#  ###########################################\n#   Stable Baselines\n#  ###########################################\nRUN pip install stable-baselines\n#  ###########################################\n#   Test Installation\n#  ###########################################\n#   Test to verify if all required dependencies installed successfully or not.\nRUN python -c \"import gym; import roboschool;\"\n","originalDockerfileUglifiedHash":"a47040b58b3b7b5e562975f042492ec2","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/c470136c6a7c15535352074dd5d49206803e0343.dockerfile"}