{"seed":1438569408,"processedDockerfileHash":"b3e11a0c0c88e4eb9d9936f0ad9ed769","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","use-copy-instead-of-add","have-a-healthcheck"],"processedDockerfile":"FROM sseefried/debian-wheezy-ghc-android\nMAINTAINER sean.seefried@gmail.com\nUSER androidbuilder\nENV BASE=\"/home/androidbuilder/build\"\nRUN mkdir -p $BASE\nWORKDIR $BASE\n#\n#   Install ant\n#\nUSER root\n#\n#   I live in Australia so change the mirror to one more appropriate\n#   to where you live.\n#\nRUN echo \"deb http://mirror.aarnet.edu.au/debian wheezy main\" > /etc/apt/sources.list\nRUN echo \"deb-src http://mirror.aarnet.edu.au/debian wheezy main\" >> /etc/apt/sources.list\nRUN :\nRUN (apt-get update ;apt-get install --no-install-recommends ant=1.10.13-1 openjdk-6-jdk -y )\nRUN wget http://dl.google.com/android/android-sdk_r24.2-linux.tgz\nRUN cd .. \\\n && tar xzf build/android-sdk_r24.2-linux.tgz\nRUN chown -R androidbuilder:androidbuilder /home/androidbuilder/android-sdk-linux\n#   Switch back to androidbuilder user\nUSER androidbuilder\n#\n#   Add environment script\n#\nCOPY scripts/set-env.sh $BASE/\n#\n#   Install Android SDK platform tools, build tools and API\n#\nCOPY scripts/install-android-sdk-platform-tools.sh $BASE/\nRUN ./install-android-sdk-platform-tools.sh\nCOPY scripts/install-android-sdk-build-tools.sh $BASE/\nRUN ./install-android-sdk-build-tools.sh\nCOPY scripts/install-android-api-12.sh $BASE/\nRUN ./install-android-api-12.sh\n#\n#   Build cpufeatures library\n#\nCOPY scripts/build-cpufeatures.sh $BASE/\nRUN ./build-cpufeatures.sh\n#\n#   Build libpng\n#\nCOPY scripts/download-libpng.sh $BASE/\nRUN ./download-libpng.sh\nCOPY scripts/build-libpng.sh $BASE/\nRUN ./build-libpng.sh\n#\n#   Build pixman\n#\nCOPY scripts/download-pixman.sh $BASE/\nRUN ./download-pixman.sh\nCOPY scripts/build-pixman.sh $BASE/\nRUN ./build-pixman.sh\n#\n#   Build freetype\n#\nCOPY scripts/download-freetype.sh $BASE/\nRUN ./download-freetype.sh\nCOPY scripts/build-freetype.sh $BASE/\nRUN ./build-freetype.sh\n#\n#   Build cairo\n#\nCOPY scripts/download-cairo.sh $BASE/\nRUN ./download-cairo.sh\nCOPY scripts/build-cairo.sh $BASE/\nCOPY scripts/locale.h.android $BASE/\nRUN ./build-cairo.sh\n#\n#   Build libogg\n#\nCOPY scripts/download-libogg.sh $BASE/\nRUN ./download-libogg.sh\nCOPY scripts/build-libogg.sh $BASE/\nRUN ./build-libogg.sh\n#\n#   Build libvorbis\n#\nCOPY scripts/download-libvorbis.sh $BASE/\nRUN ./download-libvorbis.sh\nCOPY scripts/build-libvorbis.sh $BASE/\nRUN ./build-libvorbis.sh\n#\n#   Download SDL2 and SDL2_mixer\n#\nCOPY scripts/clone-SDL2-mobile.sh $BASE/\nRUN ./clone-SDL2-mobile.sh\nCOPY scripts/clone-SDL2_mixer-mobile.sh $BASE/\nRUN ./clone-SDL2_mixer-mobile.sh\n#\n#   Build SDL2\n#\nCOPY scripts/build-SDL2-mobile.sh $BASE/\nRUN ./build-SDL2-mobile.sh\n#\n#   Build SDL2_mixer\n#\nCOPY scripts/build-SDL2_mixer-mobile.sh $BASE/\nRUN ./build-SDL2_mixer-mobile.sh\n#\n#   Cabal install text-1.2.0.0\n#\nCOPY scripts/cabal-install-text.sh $BASE/\nRUN ./cabal-install-text.sh\n#\n#   Cabal install vector-0.10.12.1\n#\nCOPY scripts/cabal-install-vector.sh $BASE/\nCOPY scripts/vector-0.10.12.1.patch $BASE/\nRUN ./cabal-install-vector.sh\n#\n#   Add cabal setup wrapper\n#\nCOPY scripts/arm-linux-androideabi-cabal-setup.sh /home/androidbuilder/.ghc/android-14/arm-linux-androideabi-4.8/bin/\n#\n#   Clone & build hsSDL2\n#\nCOPY scripts/clone-hsSDL2.sh $BASE/\nRUN ./clone-hsSDL2.sh\nCOPY scripts/build-hsSDL2.sh $BASE/\nRUN ./build-hsSDL2.sh\n#\n#   Clone & build hs-sdl2-mixer\n#\nCOPY scripts/clone-hs-sdl2-mixer.sh $BASE/\nRUN ./clone-hs-sdl2-mixer.sh\nCOPY scripts/build-hs-sdl2-mixer.sh $BASE/\nRUN ./build-hs-sdl2-mixer.sh\n#\n#   cabal install gtk2hs-buildtoosa (for host compiler)\n#\nCOPY scripts/cabal-install-gtk2hs-buildtools.sh $BASE/\nRUN ./cabal-install-gtk2hs-buildtools.sh\n#\n#   Build all epidemic dependencies\n#\nCOPY scripts/cabal-install-hs-cairo-dependencies.sh $BASE/\nRUN ./cabal-install-hs-cairo-dependencies.sh\n#\n#   Build Cairo Haskell binding\n#\nCOPY scripts/clone-hs-cairo.sh $BASE/\nRUN ./clone-hs-cairo.sh\nCOPY scripts/build-hs-cairo.sh $BASE/\nRUN ./build-hs-cairo.sh\n#\n#   Build Haskell Chipmunk binding, Hipmunk\n#\nCOPY scripts/clone-Hipmunk.sh $BASE/\nRUN ./clone-Hipmunk.sh\nCOPY scripts/build-Hipmunk.sh $BASE/\nRUN ./build-Hipmunk.sh\n#\n#   Build OpenGLRaw\n#\nCOPY scripts/clone-OpenGLRaw.sh $BASE/\nRUN ./clone-OpenGLRaw.sh\nCOPY scripts/build-OpenGLRaw.sh $BASE/\nRUN ./build-OpenGLRaw.sh\n#\n#   Clone Epidemic\n#\nCOPY scripts/clone-epidemic-game.sh $BASE/\nRUN ./clone-epidemic-game.sh\n#\n#   Clone android-build-epidemic-apk\n#\nCOPY scripts/clone-android-build-epidemic-apk.sh $BASE/\nRUN ./clone-android-build-epidemic-apk.sh\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM sseefried/debian-wheezy-ghc-android\nMAINTAINER sean.seefried@gmail.com\nUSER androidbuilder\nENV BASE=\"/home/androidbuilder/build\"\nRUN mkdir -p $BASE\nWORKDIR $BASE\n#\n#  Install ant\n#\nUSER root\n#\n#  I live in Australia so change the mirror to one more appropriate\n#  to where you live.\n#\nRUN echo \"deb http://mirror.aarnet.edu.au/debian wheezy main\" > /etc/apt/sources.list\nRUN echo \"deb-src http://mirror.aarnet.edu.au/debian wheezy main\" >> /etc/apt/sources.list\nRUN apt-get update\nRUN apt-get install ant openjdk-6-jdk -y\nRUN wget http://dl.google.com/android/android-sdk_r24.2-linux.tgz\nRUN cd .. \\\n && tar xzf build/android-sdk_r24.2-linux.tgz\nRUN chown -R androidbuilder:androidbuilder /home/androidbuilder/android-sdk-linux\n#  Switch back to androidbuilder user\nUSER androidbuilder\n#\n#  Add environment script\n#\nADD scripts/set-env.sh $BASE/\n#\n#  Install Android SDK platform tools, build tools and API\n#\nADD scripts/install-android-sdk-platform-tools.sh $BASE/\nRUN ./install-android-sdk-platform-tools.sh\nADD scripts/install-android-sdk-build-tools.sh $BASE/\nRUN ./install-android-sdk-build-tools.sh\nADD scripts/install-android-api-12.sh $BASE/\nRUN ./install-android-api-12.sh\n#\n#  Build cpufeatures library\n#\nADD scripts/build-cpufeatures.sh $BASE/\nRUN ./build-cpufeatures.sh\n#\n#  Build libpng\n#\nADD scripts/download-libpng.sh $BASE/\nRUN ./download-libpng.sh\nADD scripts/build-libpng.sh $BASE/\nRUN ./build-libpng.sh\n#\n#  Build pixman\n#\nADD scripts/download-pixman.sh $BASE/\nRUN ./download-pixman.sh\nADD scripts/build-pixman.sh $BASE/\nRUN ./build-pixman.sh\n#\n#  Build freetype\n#\nADD scripts/download-freetype.sh $BASE/\nRUN ./download-freetype.sh\nADD scripts/build-freetype.sh $BASE/\nRUN ./build-freetype.sh\n#\n#  Build cairo\n#\nADD scripts/download-cairo.sh $BASE/\nRUN ./download-cairo.sh\nADD scripts/build-cairo.sh $BASE/\nADD scripts/locale.h.android $BASE/\nRUN ./build-cairo.sh\n#\n#  Build libogg\n#\nADD scripts/download-libogg.sh $BASE/\nRUN ./download-libogg.sh\nADD scripts/build-libogg.sh $BASE/\nRUN ./build-libogg.sh\n#\n#  Build libvorbis\n#\nADD scripts/download-libvorbis.sh $BASE/\nRUN ./download-libvorbis.sh\nADD scripts/build-libvorbis.sh $BASE/\nRUN ./build-libvorbis.sh\n#\n#  Download SDL2 and SDL2_mixer\n#\nADD scripts/clone-SDL2-mobile.sh $BASE/\nRUN ./clone-SDL2-mobile.sh\nADD scripts/clone-SDL2_mixer-mobile.sh $BASE/\nRUN ./clone-SDL2_mixer-mobile.sh\n#\n#  Build SDL2\n#\nADD scripts/build-SDL2-mobile.sh $BASE/\nRUN ./build-SDL2-mobile.sh\n#\n#  Build SDL2_mixer\n#\nADD scripts/build-SDL2_mixer-mobile.sh $BASE/\nRUN ./build-SDL2_mixer-mobile.sh\n#\n#  Cabal install text-1.2.0.0\n#\nADD scripts/cabal-install-text.sh $BASE/\nRUN ./cabal-install-text.sh\n#\n#  Cabal install vector-0.10.12.1\n#\nADD scripts/cabal-install-vector.sh $BASE/\nADD scripts/vector-0.10.12.1.patch $BASE/\nRUN ./cabal-install-vector.sh\n#\n#  Add cabal setup wrapper\n#\nADD scripts/arm-linux-androideabi-cabal-setup.sh /home/androidbuilder/.ghc/android-14/arm-linux-androideabi-4.8/bin/\n#\n#  Clone & build hsSDL2\n#\nADD scripts/clone-hsSDL2.sh $BASE/\nRUN ./clone-hsSDL2.sh\nADD scripts/build-hsSDL2.sh $BASE/\nRUN ./build-hsSDL2.sh\n#\n#  Clone & build hs-sdl2-mixer\n#\nADD scripts/clone-hs-sdl2-mixer.sh $BASE/\nRUN ./clone-hs-sdl2-mixer.sh\nADD scripts/build-hs-sdl2-mixer.sh $BASE/\nRUN ./build-hs-sdl2-mixer.sh\n#\n#  cabal install gtk2hs-buildtoosa (for host compiler)\n#\nADD scripts/cabal-install-gtk2hs-buildtools.sh $BASE/\nRUN ./cabal-install-gtk2hs-buildtools.sh\n#\n#  Build all epidemic dependencies\n#\nADD scripts/cabal-install-hs-cairo-dependencies.sh $BASE/\nRUN ./cabal-install-hs-cairo-dependencies.sh\n#\n#  Build Cairo Haskell binding\n#\nADD scripts/clone-hs-cairo.sh $BASE/\nRUN ./clone-hs-cairo.sh\nADD scripts/build-hs-cairo.sh $BASE/\nRUN ./build-hs-cairo.sh\n#\n#  Build Haskell Chipmunk binding, Hipmunk\n#\nADD scripts/clone-Hipmunk.sh $BASE/\nRUN ./clone-Hipmunk.sh\nADD scripts/build-Hipmunk.sh $BASE/\nRUN ./build-Hipmunk.sh\n#\n#  Build OpenGLRaw\n#\nADD scripts/clone-OpenGLRaw.sh $BASE/\nRUN ./clone-OpenGLRaw.sh\nADD scripts/build-OpenGLRaw.sh $BASE/\nRUN ./build-OpenGLRaw.sh\n#\n#  Clone Epidemic\n#\nADD scripts/clone-epidemic-game.sh $BASE/\nRUN ./clone-epidemic-game.sh\n#\n#  Clone android-build-epidemic-apk\n#\nADD scripts/clone-android-build-epidemic-apk.sh $BASE/\nRUN ./clone-android-build-epidemic-apk.sh\n","injectedSmells":[],"originalDockerfileHash":"c64389533cd0c51c58d5203655bed3c0","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM sseefried/debian-wheezy-ghc-android\nMAINTAINER sean.seefried@gmail.com\nUSER androidbuilder\nENV BASE=\"/home/androidbuilder/build\"\nRUN mkdir -p $BASE\nWORKDIR $BASE\n#\n#   Install ant\n#\nUSER root\n#\n#   I live in Australia so change the mirror to one more appropriate\n#   to where you live.\n#\nRUN echo \"deb http://mirror.aarnet.edu.au/debian wheezy main\" > /etc/apt/sources.list\nRUN echo \"deb-src http://mirror.aarnet.edu.au/debian wheezy main\" >> /etc/apt/sources.list\nRUN apt-get update\nRUN apt-get install ant openjdk-6-jdk -y\nRUN wget http://dl.google.com/android/android-sdk_r24.2-linux.tgz\nRUN cd .. \\\n && tar xzf build/android-sdk_r24.2-linux.tgz\nRUN chown -R androidbuilder:androidbuilder /home/androidbuilder/android-sdk-linux\n#   Switch back to androidbuilder user\nUSER androidbuilder\n#\n#   Add environment script\n#\nADD scripts/set-env.sh $BASE/\n#\n#   Install Android SDK platform tools, build tools and API\n#\nADD scripts/install-android-sdk-platform-tools.sh $BASE/\nRUN ./install-android-sdk-platform-tools.sh\nADD scripts/install-android-sdk-build-tools.sh $BASE/\nRUN ./install-android-sdk-build-tools.sh\nADD scripts/install-android-api-12.sh $BASE/\nRUN ./install-android-api-12.sh\n#\n#   Build cpufeatures library\n#\nADD scripts/build-cpufeatures.sh $BASE/\nRUN ./build-cpufeatures.sh\n#\n#   Build libpng\n#\nADD scripts/download-libpng.sh $BASE/\nRUN ./download-libpng.sh\nADD scripts/build-libpng.sh $BASE/\nRUN ./build-libpng.sh\n#\n#   Build pixman\n#\nADD scripts/download-pixman.sh $BASE/\nRUN ./download-pixman.sh\nADD scripts/build-pixman.sh $BASE/\nRUN ./build-pixman.sh\n#\n#   Build freetype\n#\nADD scripts/download-freetype.sh $BASE/\nRUN ./download-freetype.sh\nADD scripts/build-freetype.sh $BASE/\nRUN ./build-freetype.sh\n#\n#   Build cairo\n#\nADD scripts/download-cairo.sh $BASE/\nRUN ./download-cairo.sh\nADD scripts/build-cairo.sh $BASE/\nADD scripts/locale.h.android $BASE/\nRUN ./build-cairo.sh\n#\n#   Build libogg\n#\nADD scripts/download-libogg.sh $BASE/\nRUN ./download-libogg.sh\nADD scripts/build-libogg.sh $BASE/\nRUN ./build-libogg.sh\n#\n#   Build libvorbis\n#\nADD scripts/download-libvorbis.sh $BASE/\nRUN ./download-libvorbis.sh\nADD scripts/build-libvorbis.sh $BASE/\nRUN ./build-libvorbis.sh\n#\n#   Download SDL2 and SDL2_mixer\n#\nADD scripts/clone-SDL2-mobile.sh $BASE/\nRUN ./clone-SDL2-mobile.sh\nADD scripts/clone-SDL2_mixer-mobile.sh $BASE/\nRUN ./clone-SDL2_mixer-mobile.sh\n#\n#   Build SDL2\n#\nADD scripts/build-SDL2-mobile.sh $BASE/\nRUN ./build-SDL2-mobile.sh\n#\n#   Build SDL2_mixer\n#\nADD scripts/build-SDL2_mixer-mobile.sh $BASE/\nRUN ./build-SDL2_mixer-mobile.sh\n#\n#   Cabal install text-1.2.0.0\n#\nADD scripts/cabal-install-text.sh $BASE/\nRUN ./cabal-install-text.sh\n#\n#   Cabal install vector-0.10.12.1\n#\nADD scripts/cabal-install-vector.sh $BASE/\nADD scripts/vector-0.10.12.1.patch $BASE/\nRUN ./cabal-install-vector.sh\n#\n#   Add cabal setup wrapper\n#\nADD scripts/arm-linux-androideabi-cabal-setup.sh /home/androidbuilder/.ghc/android-14/arm-linux-androideabi-4.8/bin/\n#\n#   Clone & build hsSDL2\n#\nADD scripts/clone-hsSDL2.sh $BASE/\nRUN ./clone-hsSDL2.sh\nADD scripts/build-hsSDL2.sh $BASE/\nRUN ./build-hsSDL2.sh\n#\n#   Clone & build hs-sdl2-mixer\n#\nADD scripts/clone-hs-sdl2-mixer.sh $BASE/\nRUN ./clone-hs-sdl2-mixer.sh\nADD scripts/build-hs-sdl2-mixer.sh $BASE/\nRUN ./build-hs-sdl2-mixer.sh\n#\n#   cabal install gtk2hs-buildtoosa (for host compiler)\n#\nADD scripts/cabal-install-gtk2hs-buildtools.sh $BASE/\nRUN ./cabal-install-gtk2hs-buildtools.sh\n#\n#   Build all epidemic dependencies\n#\nADD scripts/cabal-install-hs-cairo-dependencies.sh $BASE/\nRUN ./cabal-install-hs-cairo-dependencies.sh\n#\n#   Build Cairo Haskell binding\n#\nADD scripts/clone-hs-cairo.sh $BASE/\nRUN ./clone-hs-cairo.sh\nADD scripts/build-hs-cairo.sh $BASE/\nRUN ./build-hs-cairo.sh\n#\n#   Build Haskell Chipmunk binding, Hipmunk\n#\nADD scripts/clone-Hipmunk.sh $BASE/\nRUN ./clone-Hipmunk.sh\nADD scripts/build-Hipmunk.sh $BASE/\nRUN ./build-Hipmunk.sh\n#\n#   Build OpenGLRaw\n#\nADD scripts/clone-OpenGLRaw.sh $BASE/\nRUN ./clone-OpenGLRaw.sh\nADD scripts/build-OpenGLRaw.sh $BASE/\nRUN ./build-OpenGLRaw.sh\n#\n#   Clone Epidemic\n#\nADD scripts/clone-epidemic-game.sh $BASE/\nRUN ./clone-epidemic-game.sh\n#\n#   Clone android-build-epidemic-apk\n#\nADD scripts/clone-android-build-epidemic-apk.sh $BASE/\nRUN ./clone-android-build-epidemic-apk.sh\n","originalDockerfileUglifiedHash":"5dec6f01c0b1359e6085b7a7dca181f2","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/70daaa992c1f4a25c366d8bee5200bcdb7c0d443.dockerfile"}