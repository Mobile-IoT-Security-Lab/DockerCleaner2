{"seed":123366870,"processedDockerfileHash":"ce2b1bdf9cee6bb676d9cdc75812197c","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-pip","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM nvidia/cuda:8.0-cudnn6-devel-ubuntu16.04\nCOPY . /root\nWORKDIR /root\nENV LD_LIBRARY_PATH=\"/usr/local/cuda/lib64:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:$LD_LIBRARY_PATH\" \\\n    PATH=\"/usr/local/cuda-8.0/bin:$PATH\"\nRUN sed -i 's/archive.ubuntu.com/mirrors.ustc.edu.cn/g' /etc/apt/sources.list \\\n && apt-get update \\\n && apt-get install --no-install-recommends build-essential git unzip wget libatlas-base-dev libboost-all-dev libgflags-dev libgoogle-glog-dev libhdf5-serial-dev libleveldb-dev liblmdb-dev libopencv-dev libprotobuf-dev libsnappy-dev protobuf-compiler python-dev python-numpy python-pip python-setuptools python-scipy nano libopenblas-dev liblapack-dev python-tk openssh-client openssh-server autossh expect -y \\\n && apt-get install --no-install-recommends libboost-all-dev \\\n && apt-get install --no-install-recommends libopenblas-dev liblapack-dev libatlas-base-dev libgflags-dev libgoogle-glog-dev liblmdb-dev gfortran\nRUN unzip hice.zip\n#   cmake : 3.11\nRUN wget https://cmake.org/files/v3.11/cmake-3.11.0-rc4-Linux-x86_64.tar.gz \\\n && tar zxvf cmake-3.11.0-rc4-Linux-x86_64.tar.gz \\\n && mv cmake-3.11.0-rc4-Linux-x86_64 /opt/cmake-3.11 \\\n && ln -sf /opt/cmake-3.11/bin/* /usr/bin/\nRUN pip install pip==23.1 --upgrade \\\n && hash -r\nRUN pip install -i https://pypi.tuna.tsinghua.edu.cn/simple -r requirements.txt\nRUN mkdir ~/.pip \\\n && echo \"[global]\" > ~/.pip/pip.conf \\\n && echo \"index-url=https://mirrors.ustc.edu.cn/pypi/web/simple\" >> ~/.pip/pip.conf \\\n && echo \"format = columns\" >> ~/.pip/pip.conf\nRUN pip install opencv-python==4.7.0.72 easydict==1.10 \\\n && apt-get install --no-install-recommends python-tk liblmdb-dev \\\n && pip install protobuf==4.22.3 pyyaml==6.0 lmdb==1.4.1 \\\n && apt-get install --no-install-recommends build-essential git libprotobuf-dev libleveldb-dev libsnappy-dev libopencv-dev libboost-all-dev libhdf5-serial-dev libgflags-dev libgoogle-glog-dev liblmdb-dev protobuf-compiler protobuf-c-compiler libyaml-dev libffi-dev libssl-dev python-dev python-pip python3-pip python3-tk time vim screen tmux -y \\\n && pip install numpy==1.24.2 scipy==1.10.1 sklearn==0.0.post4 matplotlib==3.7.1 scikit-image==0.20.0 opencv-python==4.7.0.72 h5py==3.8.0 leveldb==0.201 lmdb==1.4.1 protobuf==4.22.3 pandas==2.0.0 imageio==2.27.0 cython==0.29.34 packaging==23.1 SimpleITK==2.2.1 pydicom==2.3.1 tqdm==4.65.0 cffi==1.15.1 tensorboardX==2.6 tensorflow-gpu==1.4.0 \\\n && pip install torch==0.4.0 torchvision==0.15.1 cython==0.29.34 \\\n && pip3 install torch==0.4.1 torchvision datetime scipy matplotlib opencv-python \\\n && git clone https://github.com/NVIDIA/nccl.git \\\n && cd nccl \\\n && make -j src.build\nRUN cd hice \\\n && mkdir build \\\n && cd build \\\n && cmake -DCMAKE_INSTALL_PREFIX=/usr/local/hice/ .. \\\n && make \\\n && make install\nRUN rm -rf /root/hice\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM nvidia/cuda:8.0-cudnn6-devel-ubuntu16.04\nCOPY . /root\nWORKDIR /root\nENV LD_LIBRARY_PATH=\"/usr/local/cuda/lib64:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:$LD_LIBRARY_PATH\" \\\n    PATH=\"/usr/local/cuda-8.0/bin:$PATH\"\nRUN sed -i 's/archive.ubuntu.com/mirrors.ustc.edu.cn/g' /etc/apt/sources.list \\\n && apt-get update \\\n && apt-get install --no-install-recommends build-essential git unzip wget libatlas-base-dev libboost-all-dev libgflags-dev libgoogle-glog-dev libhdf5-serial-dev libleveldb-dev liblmdb-dev libopencv-dev libprotobuf-dev libsnappy-dev protobuf-compiler python-dev python-numpy python-pip python-setuptools python-scipy nano libopenblas-dev liblapack-dev python-tk openssh-client openssh-server autossh expect -y \\\n && apt-get install --no-install-recommends libboost-all-dev \\\n && apt-get install libopenblas-dev liblapack-dev libatlas-base-dev libgflags-dev libgoogle-glog-dev liblmdb-dev gfortran\nRUN unzip hice.zip\n#  cmake : 3.11\nRUN wget https://cmake.org/files/v3.11/cmake-3.11.0-rc4-Linux-x86_64.tar.gz \\\n && tar zxvf cmake-3.11.0-rc4-Linux-x86_64.tar.gz \\\n && mv cmake-3.11.0-rc4-Linux-x86_64 /opt/cmake-3.11 \\\n && ln -sf /opt/cmake-3.11/bin/* /usr/bin/\nRUN pip install pip --upgrade \\\n && hash -r\nRUN pip install -i https://pypi.tuna.tsinghua.edu.cn/simple -r requirements.txt\nRUN mkdir ~/.pip \\\n && echo \"[global]\" > ~/.pip/pip.conf \\\n && echo \"index-url=https://mirrors.ustc.edu.cn/pypi/web/simple\" >> ~/.pip/pip.conf \\\n && echo \"format = columns\" >> ~/.pip/pip.conf\nRUN pip install opencv-python easydict \\\n && apt-get install python-tk liblmdb-dev \\\n && pip install protobuf pyyaml lmdb \\\n && apt-get install build-essential git libprotobuf-dev libleveldb-dev libsnappy-dev libopencv-dev libboost-all-dev libhdf5-serial-dev libgflags-dev libgoogle-glog-dev liblmdb-dev protobuf-compiler protobuf-c-compiler libyaml-dev libffi-dev libssl-dev python-dev python-pip python3-pip python3-tk time vim screen tmux -y \\\n && pip install numpy scipy sklearn matplotlib scikit-image opencv-python h5py leveldb lmdb protobuf pandas imageio cython packaging SimpleITK pydicom tqdm cffi tensorboardX tensorflow-gpu==1.4.0 \\\n && pip install torch==0.4.0 torchvision cython \\\n && pip3 install torch==0.4.1 torchvision datetime scipy matplotlib opencv-python \\\n && git clone https://github.com/NVIDIA/nccl.git \\\n && cd nccl \\\n && make -j src.build\nRUN cd hice \\\n && mkdir build \\\n && cd build \\\n && cmake -DCMAKE_INSTALL_PREFIX=/usr/local/hice/ .. \\\n && make \\\n && make install\nRUN rm -rf /root/hice\n","injectedSmells":[],"originalDockerfileHash":"5e5293d082dc0bd5ae489e5f075a6dd6","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM nvidia/cuda:8.0-cudnn6-devel-ubuntu16.04\nCOPY . /root\nWORKDIR /root\nENV LD_LIBRARY_PATH=\"/usr/local/cuda/lib64:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:$LD_LIBRARY_PATH\" \\\n    PATH=\"/usr/local/cuda-8.0/bin:$PATH\"\nRUN sed -i 's/archive.ubuntu.com/mirrors.ustc.edu.cn/g' /etc/apt/sources.list \\\n && apt-get update \\\n && apt-get install --no-install-recommends build-essential git unzip wget libatlas-base-dev libboost-all-dev libgflags-dev libgoogle-glog-dev libhdf5-serial-dev libleveldb-dev liblmdb-dev libopencv-dev libprotobuf-dev libsnappy-dev protobuf-compiler python-dev python-numpy python-pip python-setuptools python-scipy nano libopenblas-dev liblapack-dev python-tk openssh-client openssh-server autossh expect -y \\\n && apt-get install --no-install-recommends libboost-all-dev \\\n && apt-get install libopenblas-dev liblapack-dev libatlas-base-dev libgflags-dev libgoogle-glog-dev liblmdb-dev gfortran\nRUN unzip hice.zip\n#   cmake : 3.11\nRUN wget https://cmake.org/files/v3.11/cmake-3.11.0-rc4-Linux-x86_64.tar.gz \\\n && tar zxvf cmake-3.11.0-rc4-Linux-x86_64.tar.gz \\\n && mv cmake-3.11.0-rc4-Linux-x86_64 /opt/cmake-3.11 \\\n && ln -sf /opt/cmake-3.11/bin/* /usr/bin/\nRUN pip install pip --upgrade \\\n && hash -r\nRUN pip install -i https://pypi.tuna.tsinghua.edu.cn/simple -r requirements.txt\nRUN mkdir ~/.pip \\\n && echo \"[global]\" > ~/.pip/pip.conf \\\n && echo \"index-url=https://mirrors.ustc.edu.cn/pypi/web/simple\" >> ~/.pip/pip.conf \\\n && echo \"format = columns\" >> ~/.pip/pip.conf\nRUN pip install opencv-python easydict \\\n && apt-get install python-tk liblmdb-dev \\\n && pip install protobuf pyyaml lmdb \\\n && apt-get install build-essential git libprotobuf-dev libleveldb-dev libsnappy-dev libopencv-dev libboost-all-dev libhdf5-serial-dev libgflags-dev libgoogle-glog-dev liblmdb-dev protobuf-compiler protobuf-c-compiler libyaml-dev libffi-dev libssl-dev python-dev python-pip python3-pip python3-tk time vim screen tmux -y \\\n && pip install numpy scipy sklearn matplotlib scikit-image opencv-python h5py leveldb lmdb protobuf pandas imageio cython packaging SimpleITK pydicom tqdm cffi tensorboardX tensorflow-gpu==1.4.0 \\\n && pip install torch==0.4.0 torchvision cython \\\n && pip3 install torch==0.4.1 torchvision datetime scipy matplotlib opencv-python \\\n && git clone https://github.com/NVIDIA/nccl.git \\\n && cd nccl \\\n && make -j src.build\nRUN cd hice \\\n && mkdir build \\\n && cd build \\\n && cmake -DCMAKE_INSTALL_PREFIX=/usr/local/hice/ .. \\\n && make \\\n && make install\nRUN rm -rf /root/hice\n","originalDockerfileUglifiedHash":"54eb4ecf7d81e660c0f0ce9c6a999d22","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/fe55fdaaad4ba6a4760552fcddacdd42e7f429d4.dockerfile"}