{"seed":1767167447,"processedDockerfileHash":"52f2a600c226fa35798c6388739792d8","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-pip","pin-package-manager-versions-apk","have-a-healthcheck","have-a-user"],"processedDockerfile":"#  #############################################################################\n#   Source: https://github.com/linuxserver/docker-baseimage-alpine-python3/blob/master/Dockerfile\n#   Simply using it as a baseimage fails:\n#   - installing g++ fails (baseimage already installs it and purges it afterwards, so let's keep it)\n#   - installing python 3.7.3 because that is what py3-libtorrent-rasterbar requires (doesn't work with 3.6.8)\nFROM lsiobase/alpine:3.9\n#   Add edge/testing repositories.\nRUN printf \"@edge http://nl.alpinelinux.org/alpine/edge/main\\n@testing http://nl.alpinelinux.org/alpine/edge/testing\\n@community http://nl.alpinelinux.org/alpine/edge/community\\n\" >> /etc/apk/repositories\nRUN apk add python3@edge python3-dev@edge py3-lxml@edge boost-python3@edge bash@edge\nRUN echo \"**** install build packages ****\" \\\n && apk add autoconf automake freetype-dev g++ gcc jpeg-dev lcms2-dev libffi-dev libpng-dev libwebp-dev linux-headers make openjpeg-dev openssl-dev tiff-dev zlib-dev --no-cache \\\n && echo \"**** install runtime packages ****\" \\\n && apk add curl freetype git lcms2 libjpeg-turbo libwebp openjpeg openssl p7zip tar tiff unrar unzip vnstat wget xz zlib --no-cache \\\n && echo \"**** use ensure to check for pip and link /usr/bin/pip3 to /usr/bin/pip ****\" \\\n && python3 -m ensurepip \\\n && rm -r /usr/lib/python*/ensurepip \\\n && if [ ! -e /usr/bin/pip ] ; then ln -s /usr/bin/pip3 /usr/bin/pip ; fi \\\n && echo \"**** install pip packages ****\" \\\n && pip install pip==23.1 setuptools==67.6.1 --no-cache-dir -U \\\n && pip install configparser==5.3.0 ndg-httpsclient==0.5.1 notify==0.3.1 paramiko==3.1.0 pillow==9.5.0 psutil==5.9.4 pyopenssl==23.1.1 requests==2.28.2 setuptools==67.6.1 urllib3==1.26.15 virtualenv==20.21.0 -U \\\n && echo \"**** clean up ****\" \\\n && rm -rf /root/.cache /tmp/*\n#  #############################################################################\n#   Here starts the usual changes compared to baseimage.\nENV S6_BEHAVIOUR_IF_STAGE2_FAILS=\"2\"\n#   Set python to use utf-8 rather than ascii.\n#   Also, for python3: https://bugs.python.org/issue19846\nENV LANG=\"C.UTF-8\"\n#   Copy local files.\nCOPY etc/ /etc\nRUN chmod -v +x /etc/cont-init.d/* /etc/services.d/*/run\n#   Ports and volumes.\nEXPOSE 5050/tcp\nVOLUME /config\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"# #############################################################################\n#  Source: https://github.com/linuxserver/docker-baseimage-alpine-python3/blob/master/Dockerfile\n#  Simply using it as a baseimage fails:\n#  - installing g++ fails (baseimage already installs it and purges it afterwards, so let's keep it)\n#  - installing python 3.7.3 because that is what py3-libtorrent-rasterbar requires (doesn't work with 3.6.8)\nFROM lsiobase/alpine:3.9\n#  Add edge/testing repositories.\nRUN printf \"@edge http://nl.alpinelinux.org/alpine/edge/main\\n@testing http://nl.alpinelinux.org/alpine/edge/testing\\n@community http://nl.alpinelinux.org/alpine/edge/community\\n\" >> /etc/apk/repositories\nRUN apk add python3@edge python3-dev@edge py3-lxml@edge boost-python3@edge bash@edge\nRUN echo \"**** install build packages ****\" \\\n && apk add --no-cache autoconf automake freetype-dev g++ gcc jpeg-dev lcms2-dev libffi-dev libpng-dev libwebp-dev linux-headers make openjpeg-dev openssl-dev tiff-dev zlib-dev \\\n && echo \"**** install runtime packages ****\" \\\n && apk add --no-cache curl freetype git lcms2 libjpeg-turbo libwebp openjpeg openssl p7zip tar tiff unrar unzip vnstat wget xz zlib \\\n && echo \"**** use ensure to check for pip and link /usr/bin/pip3 to /usr/bin/pip ****\" \\\n && python3 -m ensurepip \\\n && rm -r /usr/lib/python*/ensurepip \\\n && if [ ! -e /usr/bin/pip ] ; then ln -s /usr/bin/pip3 /usr/bin/pip ; fi \\\n && echo \"**** install pip packages ****\" \\\n && pip install pip setuptools --no-cache-dir -U \\\n && pip install configparser ndg-httpsclient notify paramiko pillow psutil pyopenssl requests setuptools urllib3 virtualenv -U \\\n && echo \"**** clean up ****\" \\\n && rm -rf /root/.cache /tmp/*\n# #############################################################################\n#  Here starts the usual changes compared to baseimage.\nENV S6_BEHAVIOUR_IF_STAGE2_FAILS=\"2\"\n#  Set python to use utf-8 rather than ascii.\n#  Also, for python3: https://bugs.python.org/issue19846\nENV LANG=\"C.UTF-8\"\n#  Copy local files.\nCOPY etc/ /etc\nRUN chmod -v +x /etc/cont-init.d/* /etc/services.d/*/run\n#  Ports and volumes.\nEXPOSE 5050/tcp\nVOLUME /config\n","injectedSmells":[],"originalDockerfileHash":"5eb6044838b87b745d9f014c6954d5d7","successfullyInjectedSmells":[],"originalDockerfileUglified":"#  #############################################################################\n#   Source: https://github.com/linuxserver/docker-baseimage-alpine-python3/blob/master/Dockerfile\n#   Simply using it as a baseimage fails:\n#   - installing g++ fails (baseimage already installs it and purges it afterwards, so let's keep it)\n#   - installing python 3.7.3 because that is what py3-libtorrent-rasterbar requires (doesn't work with 3.6.8)\nFROM lsiobase/alpine:3.9\n#   Add edge/testing repositories.\nRUN printf \"@edge http://nl.alpinelinux.org/alpine/edge/main\\n@testing http://nl.alpinelinux.org/alpine/edge/testing\\n@community http://nl.alpinelinux.org/alpine/edge/community\\n\" >> /etc/apk/repositories\nRUN apk add python3@edge python3-dev@edge py3-lxml@edge boost-python3@edge bash@edge\nRUN echo \"**** install build packages ****\" \\\n && apk add --no-cache autoconf automake freetype-dev g++ gcc jpeg-dev lcms2-dev libffi-dev libpng-dev libwebp-dev linux-headers make openjpeg-dev openssl-dev tiff-dev zlib-dev \\\n && echo \"**** install runtime packages ****\" \\\n && apk add --no-cache curl freetype git lcms2 libjpeg-turbo libwebp openjpeg openssl p7zip tar tiff unrar unzip vnstat wget xz zlib \\\n && echo \"**** use ensure to check for pip and link /usr/bin/pip3 to /usr/bin/pip ****\" \\\n && python3 -m ensurepip \\\n && rm -r /usr/lib/python*/ensurepip \\\n && if [ ! -e /usr/bin/pip ] ; then ln -s /usr/bin/pip3 /usr/bin/pip ; fi \\\n && echo \"**** install pip packages ****\" \\\n && pip install pip setuptools --no-cache-dir -U \\\n && pip install configparser ndg-httpsclient notify paramiko pillow psutil pyopenssl requests setuptools urllib3 virtualenv -U \\\n && echo \"**** clean up ****\" \\\n && rm -rf /root/.cache /tmp/*\n#  #############################################################################\n#   Here starts the usual changes compared to baseimage.\nENV S6_BEHAVIOUR_IF_STAGE2_FAILS=\"2\"\n#   Set python to use utf-8 rather than ascii.\n#   Also, for python3: https://bugs.python.org/issue19846\nENV LANG=\"C.UTF-8\"\n#   Copy local files.\nCOPY etc/ /etc\nRUN chmod -v +x /etc/cont-init.d/* /etc/services.d/*/run\n#   Ports and volumes.\nEXPOSE 5050/tcp\nVOLUME /config\n","originalDockerfileUglifiedHash":"4681f214700ba984b4c78d04e19928c9","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/6bb91db2ec02b3e008b51d0aee3e18f6d210d57b.dockerfile"}