{"seed":853146417,"processedDockerfileHash":"f6f4593470f71fc162329dcca4f5fb80","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","have-a-user"],"processedDockerfile":"FROM alpine:3.5\nMAINTAINER mail@racktear.com\nRUN addgroup -S tarantool \\\n && adduser -S -G tarantool tarantool \\\n && apk add 'su-exec>=0.2' --no-cache\nENV TARANTOOL_VERSION=\"2.2.0-128-g7b56f1fef\" \\\n    TARANTOOL_DOWNLOAD_URL=\"https://github.com/tarantool/tarantool.git\" \\\n    TARANTOOL_INSTALL_LUADIR=\"/usr/local/share/tarantool\" \\\n    CURL_REPO=\"https://github.com/curl/curl.git\" \\\n    CURL_TAG=\"curl-7_59_0\" \\\n    GPERFTOOLS_REPO=\"https://github.com/gperftools/gperftools.git\" \\\n    GPERFTOOLS_TAG=\"gperftools-2.5\" \\\n    LUAROCKS_URL=\"https://github.com/tarantool/luarocks/archive/6e6fe62d9409fe2103c0fd091cccb3da0451faf5.tar.gz\" \\\n    LUAROCK_SHARD_REPO=\"https://github.com/tarantool/shard.git\" \\\n    LUAROCK_SHARD_TAG=\"8f8c5a7\" \\\n    LUAROCK_AVRO_SCHEMA_VERSION=\"2.0.1\" \\\n    LUAROCK_EXPERATIOND_VERSION=\"1.0.1\" \\\n    LUAROCK_QUEUE_VERSION=\"1.0.2\" \\\n    LUAROCK_CONNPOOL_VERSION=\"1.1.1\" \\\n    LUAROCK_HTTP_VERSION=\"1.0.1\" \\\n    LUAROCK_MEMCACHED_VERSION=\"1.0.0\" \\\n    LUAROCK_TARANTOOL_PG_VERSION=\"2.0.1\" \\\n    LUAROCK_TARANTOOL_MYSQL_VERSION=\"2.0.1\" \\\n    LUAROCK_TARANTOOL_CURL_VERSION=\"2.3.1\" \\\n    LUAROCK_TARANTOOL_MQTT_VERSION=\"1.2.1\" \\\n    LUAROCK_TARANTOOL_GIS_VERSION=\"1.0.0\" \\\n    LUAROCK_TARANTOOL_PROMETHEUS_VERSION=\"1.0.0\" \\\n    LUAROCK_TARANTOOL_GPERFTOOLS_VERSION=\"1.0.1\"\nCOPY gperftools_alpine.diff /\nRUN set -x \\\n && apk add libstdc++=6.2.1-r1 readline=6.3.008-r4 libressl=2.4.4-r0 yaml=0.1.7-r0 lz4=131-r0 binutils=2.27-r1 ncurses=6.0_p20171125-r1 libgomp=6.2.1-r1 lua=5.1.5-r4 tar=1.29-r1 zip=3.0-r4 libunwind=1.2_rc1-r0 icu=57.1-r3 ca-certificates=20161130-r1 --no-cache --virtual .run-deps \\\n && apk add perl=5.24.4-r1 gcc=6.2.1-r1 g++=6.2.1-r1 cmake=3.6.3-r0 readline-dev=6.3.008-r4 libressl-dev=2.4.4-r0 yaml-dev=0.1.7-r0 lz4-dev=131-r0 binutils-dev=2.27-r1 ncurses-dev=6.0_p20171125-r1 lua-dev=5.1.5-r4 musl-dev=1.1.15-r8 make=4.2.1-r0 git=2.11.3-r2 libunwind-dev=1.2_rc1-r0 autoconf=2.69-r0 automake=1.15-r0 libtool=2.4.6-r1 linux-headers=4.4.6-r1 go=1.7.3-r0 tcl=8.6.6-r0 icu-dev=57.1-r3 wget=1.18-r4 --no-cache --virtual .build-deps \\\n && : \"---------- curl ----------\" \\\n && mkdir -p /usr/src/curl \\\n && git clone \"$CURL_REPO\" /usr/src/curl \\\n && git -C /usr/src/curl checkout \"$CURL_TAG\" \\\n && (cd /usr/src/curl \\\n && ./buildconf \\\n && ./configure --prefix \"/usr/local\" \\\n && make -j \\\n && make install ) \\\n && : \"---------- gperftools ----------\" \\\n && mkdir -p /usr/src/gperftools \\\n && git clone \"$GPERFTOOLS_REPO\" /usr/src/gperftools \\\n && git -C /usr/src/gperftools checkout \"$GPERFTOOLS_TAG\" \\\n && (cd /usr/src/gperftools ;patch -p1 < /gperftools_alpine.diff;rm /gperftools_alpine.diff ;./autogen.sh ;./configure ;make ;cp .libs/libprofiler.so* /usr/local/lib ) \\\n && (GOPATH=/usr/src/go go get github.com/google/pprof ;cp /usr/src/go/bin/pprof /usr/local/bin ) \\\n && : \"---------- tarantool ----------\" \\\n && mkdir -p /usr/src/tarantool \\\n && git clone \"$TARANTOOL_DOWNLOAD_URL\" /usr/src/tarantool \\\n && git -C /usr/src/tarantool checkout \"$TARANTOOL_VERSION\" \\\n && git -C /usr/src/tarantool submodule update --init --recursive \\\n && (cd /usr/src/tarantool ;cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo -DENABLE_BUNDLED_LIBYAML:BOOL=OFF -DENABLE_BACKTRACE:BOOL=ON -DENABLE_DIST:BOOL=ON . ) \\\n && make -C /usr/src/tarantool -j \\\n && make -C /usr/src/tarantool install \\\n && make -C /usr/src/tarantool clean \\\n && : \"---------- small ----------\" \\\n && (cd /usr/src/tarantool/src/lib/small ;cmake -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_INSTALL_LIBDIR=lib -DCMAKE_BUILD_TYPE=RelWithDebInfo . ) \\\n && make -C /usr/src/tarantool/src/lib/small \\\n && make -C /usr/src/tarantool/src/lib/small install \\\n && make -C /usr/src/tarantool/src/lib/small clean \\\n && : \"---------- msgpuck ----------\" \\\n && (cd /usr/src/tarantool/src/lib/msgpuck ;cmake -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_INSTALL_LIBDIR=lib -DCMAKE_BUILD_TYPE=RelWithDebInfo . ) \\\n && make -C /usr/src/tarantool/src/lib/msgpuck \\\n && make -C /usr/src/tarantool/src/lib/msgpuck install \\\n && make -C /usr/src/tarantool/src/lib/msgpuck clean \\\n && : \"---------- luarocks ----------\" \\\n && wget -O luarocks.tar.gz \"$LUAROCKS_URL\" \\\n && mkdir -p /usr/src/luarocks \\\n && tar -xzf luarocks.tar.gz -C /usr/src/luarocks --strip-components=1 \\\n && (cd /usr/src/luarocks ;./configure ;make build ;make install ) \\\n && rm -r /usr/src/luarocks \\\n && rm -rf /usr/src/tarantool \\\n && rm -rf /usr/src/gperftools \\\n && rm -rf /usr/src/go \\\n && : \"---------- remove build deps ----------\" \\\n && apk del .build-deps\nCOPY luarocks-config.lua /usr/local/etc/luarocks/config-5.1.lua\nRUN set -x \\\n && apk add mariadb-client-libs=10.1.32-r0 libpq=9.6.10-r0 cyrus-sasl=2.1.26-r8 mosquitto-libs=1.4.15-r0 libev=4.22-r0 --no-cache --virtual .run-deps \\\n && apk add git=2.11.3-r2 cmake=3.6.3-r0 make=4.2.1-r0 coreutils=8.26-r0 gcc=6.2.1-r1 g++=6.2.1-r1 postgresql-dev=9.6.10-r0 lua-dev=5.1.5-r4 musl-dev=1.1.15-r8 cyrus-sasl-dev=2.1.26-r8 mosquitto-dev=1.4.15-r0 libev-dev=4.22-r0 libressl-dev=2.4.4-r0 --no-cache --virtual .build-deps \\\n && mkdir -p /rocks \\\n && : \"---------- proj (for gis module) ----------\" \\\n && wget -O proj.tar.gz http://download.osgeo.org/proj/proj-4.9.3.tar.gz \\\n && mkdir -p /usr/src/proj \\\n && tar -xzf proj.tar.gz -C /usr/src/proj --strip-components=1 \\\n && (cd /usr/src/proj ;./configure ;make ;make install ) \\\n && rm -r /usr/src/proj \\\n && rm -rf /usr/src/proj \\\n && : \"---------- geos (for gis module) ----------\" \\\n && wget -O geos.tar.bz2 http://download.osgeo.org/geos/geos-3.6.0.tar.bz2 \\\n && mkdir -p /usr/src/geos \\\n && tar -xjf geos.tar.bz2 -C /usr/src/geos --strip-components=1 \\\n && (cd /usr/src/geos ;./configure ;make ;make install ) \\\n && rm -r /usr/src/geos \\\n && rm -rf /usr/src/geos \\\n && : \"---------- luarocks ----------\" \\\n && luarocks install lua-term \\\n && luarocks install ldoc \\\n && : \"avro\" \\\n && luarocks install avro-schema $LUAROCK_AVRO_SCHEMA_VERSION \\\n && : \"expirationd\" \\\n && luarocks install expirationd $LUAROCK_EXPERATIOND_VERSION \\\n && : \"queue\" \\\n && luarocks install queue $LUAROCK_QUEUE_VERSION \\\n && : \"connpool\" \\\n && luarocks install connpool $LUAROCK_CONNPOOL_VERSION \\\n && : \"shard\" \\\n && git clone $LUAROCK_SHARD_REPO /rocks/shard \\\n && git -C /rocks/shard checkout $LUAROCK_SHARD_TAG \\\n && (cd /rocks/shard \\\n && luarocks make *rockspec ) \\\n && : \"http\" \\\n && luarocks install http $LUAROCK_HTTP_VERSION \\\n && : \"pg\" \\\n && luarocks install pg $LUAROCK_TARANTOOL_PG_VERSION \\\n && : \"mysql\" \\\n && luarocks install mysql $LUAROCK_TARANTOOL_MYSQL_VERSION \\\n && : \"memcached\" \\\n && luarocks install memcached $LUAROCK_MEMCACHED_VERSION \\\n && : \"prometheus\" \\\n && luarocks install prometheus $LUAROCK_TARANTOOL_PROMETHEUS_VERSION \\\n && : \"curl\" \\\n && luarocks install tarantool-curl $LUAROCK_TARANTOOL_CURL_VERSION \\\n && : \"mqtt\" \\\n && luarocks install mqtt $LUAROCK_TARANTOOL_MQTT_VERSION \\\n && : \"gis\" \\\n && luarocks install gis $LUAROCK_TARANTOOL_GIS_VERSION \\\n && : \"gperftools\" \\\n && luarocks install gperftools $LUAROCK_TARANTOOL_GPERFTOOLS_VERSION \\\n && : \"---------- remove build deps ----------\" \\\n && apk del .build-deps \\\n && rm -rf /rocks\nRUN mkdir -p /var/lib/tarantool \\\n && chown tarantool:tarantool /var/lib/tarantool \\\n && mkdir -p /opt/tarantool \\\n && chown tarantool:tarantool /opt/tarantool \\\n && mkdir -p /var/run/tarantool \\\n && chown tarantool:tarantool /var/run/tarantool \\\n && mkdir /etc/tarantool \\\n && chown tarantool:tarantool /etc/tarantool\nVOLUME /var/lib/tarantool\nWORKDIR /opt/tarantool\nCOPY tarantool-entrypoint.lua /usr/local/bin/\nCOPY tarantool_set_config.lua /usr/local/bin/\nCOPY docker-entrypoint.sh /usr/local/bin/\nCOPY console /usr/local/bin/\nCOPY tarantool_is_up /usr/local/bin/\nCOPY tarantool.default /usr/local/etc/default/tarantool\nRUN ln -s usr/local/bin/docker-entrypoint.sh /entrypoint.sh\nENTRYPOINT [\"docker-entrypoint.sh\"]\nHEALTHCHECK CMD tarantool_is_up\nEXPOSE 3301/tcp\nCMD [\"tarantool\"]\nRUN addgroup -S docker-user ; adduser -S -G docker-user docker-user\nUSER docker-user\n","originalDockerfile":"FROM alpine:3.5\nMAINTAINER mail@racktear.com\nRUN addgroup -S tarantool \\\n && adduser -S -G tarantool tarantool \\\n && apk add --no-cache 'su-exec>=0.2'\nENV TARANTOOL_VERSION=\"2.2.0-128-g7b56f1fef\" \\\n    TARANTOOL_DOWNLOAD_URL=\"https://github.com/tarantool/tarantool.git\" \\\n    TARANTOOL_INSTALL_LUADIR=\"/usr/local/share/tarantool\" \\\n    CURL_REPO=\"https://github.com/curl/curl.git\" \\\n    CURL_TAG=\"curl-7_59_0\" \\\n    GPERFTOOLS_REPO=\"https://github.com/gperftools/gperftools.git\" \\\n    GPERFTOOLS_TAG=\"gperftools-2.5\" \\\n    LUAROCKS_URL=\"https://github.com/tarantool/luarocks/archive/6e6fe62d9409fe2103c0fd091cccb3da0451faf5.tar.gz\" \\\n    LUAROCK_SHARD_REPO=\"https://github.com/tarantool/shard.git\" \\\n    LUAROCK_SHARD_TAG=\"8f8c5a7\" \\\n    LUAROCK_AVRO_SCHEMA_VERSION=\"2.0.1\" \\\n    LUAROCK_EXPERATIOND_VERSION=\"1.0.1\" \\\n    LUAROCK_QUEUE_VERSION=\"1.0.2\" \\\n    LUAROCK_CONNPOOL_VERSION=\"1.1.1\" \\\n    LUAROCK_HTTP_VERSION=\"1.0.1\" \\\n    LUAROCK_MEMCACHED_VERSION=\"1.0.0\" \\\n    LUAROCK_TARANTOOL_PG_VERSION=\"2.0.1\" \\\n    LUAROCK_TARANTOOL_MYSQL_VERSION=\"2.0.1\" \\\n    LUAROCK_TARANTOOL_CURL_VERSION=\"2.3.1\" \\\n    LUAROCK_TARANTOOL_MQTT_VERSION=\"1.2.1\" \\\n    LUAROCK_TARANTOOL_GIS_VERSION=\"1.0.0\" \\\n    LUAROCK_TARANTOOL_PROMETHEUS_VERSION=\"1.0.0\" \\\n    LUAROCK_TARANTOOL_GPERFTOOLS_VERSION=\"1.0.1\"\nCOPY gperftools_alpine.diff /\nRUN set -x \\\n && apk add --no-cache --virtual .run-deps libstdc++ readline libressl yaml lz4 binutils ncurses libgomp lua tar zip libunwind icu ca-certificates \\\n && apk add --no-cache --virtual .build-deps perl gcc g++ cmake readline-dev libressl-dev yaml-dev lz4-dev binutils-dev ncurses-dev lua-dev musl-dev make git libunwind-dev autoconf automake libtool linux-headers go tcl icu-dev wget \\\n && : \"---------- curl ----------\" \\\n && mkdir -p /usr/src/curl \\\n && git clone \"$CURL_REPO\" /usr/src/curl \\\n && git -C /usr/src/curl checkout \"$CURL_TAG\" \\\n && (cd /usr/src/curl \\\n && ./buildconf \\\n && ./configure --prefix \"/usr/local\" \\\n && make -j \\\n && make install ) \\\n && : \"---------- gperftools ----------\" \\\n && mkdir -p /usr/src/gperftools \\\n && git clone \"$GPERFTOOLS_REPO\" /usr/src/gperftools \\\n && git -C /usr/src/gperftools checkout \"$GPERFTOOLS_TAG\" \\\n && (cd /usr/src/gperftools ;patch -p1 < /gperftools_alpine.diff;rm /gperftools_alpine.diff ;./autogen.sh ;./configure ;make ;cp .libs/libprofiler.so* /usr/local/lib ) \\\n && (GOPATH=/usr/src/go go get github.com/google/pprof ;cp /usr/src/go/bin/pprof /usr/local/bin ) \\\n && : \"---------- tarantool ----------\" \\\n && mkdir -p /usr/src/tarantool \\\n && git clone \"$TARANTOOL_DOWNLOAD_URL\" /usr/src/tarantool \\\n && git -C /usr/src/tarantool checkout \"$TARANTOOL_VERSION\" \\\n && git -C /usr/src/tarantool submodule update --init --recursive \\\n && (cd /usr/src/tarantool ;cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo -DENABLE_BUNDLED_LIBYAML:BOOL=OFF -DENABLE_BACKTRACE:BOOL=ON -DENABLE_DIST:BOOL=ON . ) \\\n && make -C /usr/src/tarantool -j \\\n && make -C /usr/src/tarantool install \\\n && make -C /usr/src/tarantool clean \\\n && : \"---------- small ----------\" \\\n && (cd /usr/src/tarantool/src/lib/small ;cmake -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_INSTALL_LIBDIR=lib -DCMAKE_BUILD_TYPE=RelWithDebInfo . ) \\\n && make -C /usr/src/tarantool/src/lib/small \\\n && make -C /usr/src/tarantool/src/lib/small install \\\n && make -C /usr/src/tarantool/src/lib/small clean \\\n && : \"---------- msgpuck ----------\" \\\n && (cd /usr/src/tarantool/src/lib/msgpuck ;cmake -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_INSTALL_LIBDIR=lib -DCMAKE_BUILD_TYPE=RelWithDebInfo . ) \\\n && make -C /usr/src/tarantool/src/lib/msgpuck \\\n && make -C /usr/src/tarantool/src/lib/msgpuck install \\\n && make -C /usr/src/tarantool/src/lib/msgpuck clean \\\n && : \"---------- luarocks ----------\" \\\n && wget -O luarocks.tar.gz \"$LUAROCKS_URL\" \\\n && mkdir -p /usr/src/luarocks \\\n && tar -xzf luarocks.tar.gz -C /usr/src/luarocks --strip-components=1 \\\n && (cd /usr/src/luarocks ;./configure ;make build ;make install ) \\\n && rm -r /usr/src/luarocks \\\n && rm -rf /usr/src/tarantool \\\n && rm -rf /usr/src/gperftools \\\n && rm -rf /usr/src/go \\\n && : \"---------- remove build deps ----------\" \\\n && apk del .build-deps\nCOPY luarocks-config.lua /usr/local/etc/luarocks/config-5.1.lua\nRUN set -x \\\n && apk add --no-cache --virtual .run-deps mariadb-client-libs libpq cyrus-sasl mosquitto-libs libev \\\n && apk add --no-cache --virtual .build-deps git cmake make coreutils gcc g++ postgresql-dev lua-dev musl-dev cyrus-sasl-dev mosquitto-dev libev-dev libressl-dev \\\n && mkdir -p /rocks \\\n && : \"---------- proj (for gis module) ----------\" \\\n && wget -O proj.tar.gz http://download.osgeo.org/proj/proj-4.9.3.tar.gz \\\n && mkdir -p /usr/src/proj \\\n && tar -xzf proj.tar.gz -C /usr/src/proj --strip-components=1 \\\n && (cd /usr/src/proj ;./configure ;make ;make install ) \\\n && rm -r /usr/src/proj \\\n && rm -rf /usr/src/proj \\\n && : \"---------- geos (for gis module) ----------\" \\\n && wget -O geos.tar.bz2 http://download.osgeo.org/geos/geos-3.6.0.tar.bz2 \\\n && mkdir -p /usr/src/geos \\\n && tar -xjf geos.tar.bz2 -C /usr/src/geos --strip-components=1 \\\n && (cd /usr/src/geos ;./configure ;make ;make install ) \\\n && rm -r /usr/src/geos \\\n && rm -rf /usr/src/geos \\\n && : \"---------- luarocks ----------\" \\\n && luarocks install lua-term \\\n && luarocks install ldoc \\\n && : \"avro\" \\\n && luarocks install avro-schema $LUAROCK_AVRO_SCHEMA_VERSION \\\n && : \"expirationd\" \\\n && luarocks install expirationd $LUAROCK_EXPERATIOND_VERSION \\\n && : \"queue\" \\\n && luarocks install queue $LUAROCK_QUEUE_VERSION \\\n && : \"connpool\" \\\n && luarocks install connpool $LUAROCK_CONNPOOL_VERSION \\\n && : \"shard\" \\\n && git clone $LUAROCK_SHARD_REPO /rocks/shard \\\n && git -C /rocks/shard checkout $LUAROCK_SHARD_TAG \\\n && (cd /rocks/shard \\\n && luarocks make *rockspec ) \\\n && : \"http\" \\\n && luarocks install http $LUAROCK_HTTP_VERSION \\\n && : \"pg\" \\\n && luarocks install pg $LUAROCK_TARANTOOL_PG_VERSION \\\n && : \"mysql\" \\\n && luarocks install mysql $LUAROCK_TARANTOOL_MYSQL_VERSION \\\n && : \"memcached\" \\\n && luarocks install memcached $LUAROCK_MEMCACHED_VERSION \\\n && : \"prometheus\" \\\n && luarocks install prometheus $LUAROCK_TARANTOOL_PROMETHEUS_VERSION \\\n && : \"curl\" \\\n && luarocks install tarantool-curl $LUAROCK_TARANTOOL_CURL_VERSION \\\n && : \"mqtt\" \\\n && luarocks install mqtt $LUAROCK_TARANTOOL_MQTT_VERSION \\\n && : \"gis\" \\\n && luarocks install gis $LUAROCK_TARANTOOL_GIS_VERSION \\\n && : \"gperftools\" \\\n && luarocks install gperftools $LUAROCK_TARANTOOL_GPERFTOOLS_VERSION \\\n && : \"---------- remove build deps ----------\" \\\n && apk del .build-deps \\\n && rm -rf /rocks\nRUN mkdir -p /var/lib/tarantool \\\n && chown tarantool:tarantool /var/lib/tarantool \\\n && mkdir -p /opt/tarantool \\\n && chown tarantool:tarantool /opt/tarantool \\\n && mkdir -p /var/run/tarantool \\\n && chown tarantool:tarantool /var/run/tarantool \\\n && mkdir /etc/tarantool \\\n && chown tarantool:tarantool /etc/tarantool\nVOLUME /var/lib/tarantool\nWORKDIR /opt/tarantool\nCOPY tarantool-entrypoint.lua /usr/local/bin/\nCOPY tarantool_set_config.lua /usr/local/bin/\nCOPY docker-entrypoint.sh /usr/local/bin/\nCOPY console /usr/local/bin/\nCOPY tarantool_is_up /usr/local/bin/\nCOPY tarantool.default /usr/local/etc/default/tarantool\nRUN ln -s usr/local/bin/docker-entrypoint.sh /entrypoint.sh\nENTRYPOINT [\"docker-entrypoint.sh\"]\nHEALTHCHECK CMD tarantool_is_up\nEXPOSE 3301/tcp\nCMD [\"tarantool\"]\n","injectedSmells":[],"originalDockerfileHash":"220f20643832e59f0db4950d32d9fb31","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM alpine:3.5\nMAINTAINER mail@racktear.com\nRUN addgroup -S tarantool \\\n && adduser -S -G tarantool tarantool \\\n && apk add --no-cache 'su-exec>=0.2'\nENV TARANTOOL_VERSION=\"2.2.0-128-g7b56f1fef\" \\\n    TARANTOOL_DOWNLOAD_URL=\"https://github.com/tarantool/tarantool.git\" \\\n    TARANTOOL_INSTALL_LUADIR=\"/usr/local/share/tarantool\" \\\n    CURL_REPO=\"https://github.com/curl/curl.git\" \\\n    CURL_TAG=\"curl-7_59_0\" \\\n    GPERFTOOLS_REPO=\"https://github.com/gperftools/gperftools.git\" \\\n    GPERFTOOLS_TAG=\"gperftools-2.5\" \\\n    LUAROCKS_URL=\"https://github.com/tarantool/luarocks/archive/6e6fe62d9409fe2103c0fd091cccb3da0451faf5.tar.gz\" \\\n    LUAROCK_SHARD_REPO=\"https://github.com/tarantool/shard.git\" \\\n    LUAROCK_SHARD_TAG=\"8f8c5a7\" \\\n    LUAROCK_AVRO_SCHEMA_VERSION=\"2.0.1\" \\\n    LUAROCK_EXPERATIOND_VERSION=\"1.0.1\" \\\n    LUAROCK_QUEUE_VERSION=\"1.0.2\" \\\n    LUAROCK_CONNPOOL_VERSION=\"1.1.1\" \\\n    LUAROCK_HTTP_VERSION=\"1.0.1\" \\\n    LUAROCK_MEMCACHED_VERSION=\"1.0.0\" \\\n    LUAROCK_TARANTOOL_PG_VERSION=\"2.0.1\" \\\n    LUAROCK_TARANTOOL_MYSQL_VERSION=\"2.0.1\" \\\n    LUAROCK_TARANTOOL_CURL_VERSION=\"2.3.1\" \\\n    LUAROCK_TARANTOOL_MQTT_VERSION=\"1.2.1\" \\\n    LUAROCK_TARANTOOL_GIS_VERSION=\"1.0.0\" \\\n    LUAROCK_TARANTOOL_PROMETHEUS_VERSION=\"1.0.0\" \\\n    LUAROCK_TARANTOOL_GPERFTOOLS_VERSION=\"1.0.1\"\nCOPY gperftools_alpine.diff /\nRUN set -x \\\n && apk add --no-cache --virtual .run-deps libstdc++ readline libressl yaml lz4 binutils ncurses libgomp lua tar zip libunwind icu ca-certificates \\\n && apk add --no-cache --virtual .build-deps perl gcc g++ cmake readline-dev libressl-dev yaml-dev lz4-dev binutils-dev ncurses-dev lua-dev musl-dev make git libunwind-dev autoconf automake libtool linux-headers go tcl icu-dev wget \\\n && : \"---------- curl ----------\" \\\n && mkdir -p /usr/src/curl \\\n && git clone \"$CURL_REPO\" /usr/src/curl \\\n && git -C /usr/src/curl checkout \"$CURL_TAG\" \\\n && (cd /usr/src/curl \\\n && ./buildconf \\\n && ./configure --prefix \"/usr/local\" \\\n && make -j \\\n && make install ) \\\n && : \"---------- gperftools ----------\" \\\n && mkdir -p /usr/src/gperftools \\\n && git clone \"$GPERFTOOLS_REPO\" /usr/src/gperftools \\\n && git -C /usr/src/gperftools checkout \"$GPERFTOOLS_TAG\" \\\n && (cd /usr/src/gperftools ;patch -p1 < /gperftools_alpine.diff;rm /gperftools_alpine.diff ;./autogen.sh ;./configure ;make ;cp .libs/libprofiler.so* /usr/local/lib ) \\\n && (GOPATH=/usr/src/go go get github.com/google/pprof ;cp /usr/src/go/bin/pprof /usr/local/bin ) \\\n && : \"---------- tarantool ----------\" \\\n && mkdir -p /usr/src/tarantool \\\n && git clone \"$TARANTOOL_DOWNLOAD_URL\" /usr/src/tarantool \\\n && git -C /usr/src/tarantool checkout \"$TARANTOOL_VERSION\" \\\n && git -C /usr/src/tarantool submodule update --init --recursive \\\n && (cd /usr/src/tarantool ;cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo -DENABLE_BUNDLED_LIBYAML:BOOL=OFF -DENABLE_BACKTRACE:BOOL=ON -DENABLE_DIST:BOOL=ON . ) \\\n && make -C /usr/src/tarantool -j \\\n && make -C /usr/src/tarantool install \\\n && make -C /usr/src/tarantool clean \\\n && : \"---------- small ----------\" \\\n && (cd /usr/src/tarantool/src/lib/small ;cmake -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_INSTALL_LIBDIR=lib -DCMAKE_BUILD_TYPE=RelWithDebInfo . ) \\\n && make -C /usr/src/tarantool/src/lib/small \\\n && make -C /usr/src/tarantool/src/lib/small install \\\n && make -C /usr/src/tarantool/src/lib/small clean \\\n && : \"---------- msgpuck ----------\" \\\n && (cd /usr/src/tarantool/src/lib/msgpuck ;cmake -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_INSTALL_LIBDIR=lib -DCMAKE_BUILD_TYPE=RelWithDebInfo . ) \\\n && make -C /usr/src/tarantool/src/lib/msgpuck \\\n && make -C /usr/src/tarantool/src/lib/msgpuck install \\\n && make -C /usr/src/tarantool/src/lib/msgpuck clean \\\n && : \"---------- luarocks ----------\" \\\n && wget -O luarocks.tar.gz \"$LUAROCKS_URL\" \\\n && mkdir -p /usr/src/luarocks \\\n && tar -xzf luarocks.tar.gz -C /usr/src/luarocks --strip-components=1 \\\n && (cd /usr/src/luarocks ;./configure ;make build ;make install ) \\\n && rm -r /usr/src/luarocks \\\n && rm -rf /usr/src/tarantool \\\n && rm -rf /usr/src/gperftools \\\n && rm -rf /usr/src/go \\\n && : \"---------- remove build deps ----------\" \\\n && apk del .build-deps\nCOPY luarocks-config.lua /usr/local/etc/luarocks/config-5.1.lua\nRUN set -x \\\n && apk add --no-cache --virtual .run-deps mariadb-client-libs libpq cyrus-sasl mosquitto-libs libev \\\n && apk add --no-cache --virtual .build-deps git cmake make coreutils gcc g++ postgresql-dev lua-dev musl-dev cyrus-sasl-dev mosquitto-dev libev-dev libressl-dev \\\n && mkdir -p /rocks \\\n && : \"---------- proj (for gis module) ----------\" \\\n && wget -O proj.tar.gz http://download.osgeo.org/proj/proj-4.9.3.tar.gz \\\n && mkdir -p /usr/src/proj \\\n && tar -xzf proj.tar.gz -C /usr/src/proj --strip-components=1 \\\n && (cd /usr/src/proj ;./configure ;make ;make install ) \\\n && rm -r /usr/src/proj \\\n && rm -rf /usr/src/proj \\\n && : \"---------- geos (for gis module) ----------\" \\\n && wget -O geos.tar.bz2 http://download.osgeo.org/geos/geos-3.6.0.tar.bz2 \\\n && mkdir -p /usr/src/geos \\\n && tar -xjf geos.tar.bz2 -C /usr/src/geos --strip-components=1 \\\n && (cd /usr/src/geos ;./configure ;make ;make install ) \\\n && rm -r /usr/src/geos \\\n && rm -rf /usr/src/geos \\\n && : \"---------- luarocks ----------\" \\\n && luarocks install lua-term \\\n && luarocks install ldoc \\\n && : \"avro\" \\\n && luarocks install avro-schema $LUAROCK_AVRO_SCHEMA_VERSION \\\n && : \"expirationd\" \\\n && luarocks install expirationd $LUAROCK_EXPERATIOND_VERSION \\\n && : \"queue\" \\\n && luarocks install queue $LUAROCK_QUEUE_VERSION \\\n && : \"connpool\" \\\n && luarocks install connpool $LUAROCK_CONNPOOL_VERSION \\\n && : \"shard\" \\\n && git clone $LUAROCK_SHARD_REPO /rocks/shard \\\n && git -C /rocks/shard checkout $LUAROCK_SHARD_TAG \\\n && (cd /rocks/shard \\\n && luarocks make *rockspec ) \\\n && : \"http\" \\\n && luarocks install http $LUAROCK_HTTP_VERSION \\\n && : \"pg\" \\\n && luarocks install pg $LUAROCK_TARANTOOL_PG_VERSION \\\n && : \"mysql\" \\\n && luarocks install mysql $LUAROCK_TARANTOOL_MYSQL_VERSION \\\n && : \"memcached\" \\\n && luarocks install memcached $LUAROCK_MEMCACHED_VERSION \\\n && : \"prometheus\" \\\n && luarocks install prometheus $LUAROCK_TARANTOOL_PROMETHEUS_VERSION \\\n && : \"curl\" \\\n && luarocks install tarantool-curl $LUAROCK_TARANTOOL_CURL_VERSION \\\n && : \"mqtt\" \\\n && luarocks install mqtt $LUAROCK_TARANTOOL_MQTT_VERSION \\\n && : \"gis\" \\\n && luarocks install gis $LUAROCK_TARANTOOL_GIS_VERSION \\\n && : \"gperftools\" \\\n && luarocks install gperftools $LUAROCK_TARANTOOL_GPERFTOOLS_VERSION \\\n && : \"---------- remove build deps ----------\" \\\n && apk del .build-deps \\\n && rm -rf /rocks\nRUN mkdir -p /var/lib/tarantool \\\n && chown tarantool:tarantool /var/lib/tarantool \\\n && mkdir -p /opt/tarantool \\\n && chown tarantool:tarantool /opt/tarantool \\\n && mkdir -p /var/run/tarantool \\\n && chown tarantool:tarantool /var/run/tarantool \\\n && mkdir /etc/tarantool \\\n && chown tarantool:tarantool /etc/tarantool\nVOLUME /var/lib/tarantool\nWORKDIR /opt/tarantool\nCOPY tarantool-entrypoint.lua /usr/local/bin/\nCOPY tarantool_set_config.lua /usr/local/bin/\nCOPY docker-entrypoint.sh /usr/local/bin/\nCOPY console /usr/local/bin/\nCOPY tarantool_is_up /usr/local/bin/\nCOPY tarantool.default /usr/local/etc/default/tarantool\nRUN ln -s usr/local/bin/docker-entrypoint.sh /entrypoint.sh\nENTRYPOINT [\"docker-entrypoint.sh\"]\nHEALTHCHECK CMD tarantool_is_up\nEXPOSE 3301/tcp\nCMD [\"tarantool\"]\n","originalDockerfileUglifiedHash":"220f20643832e59f0db4950d32d9fb31","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/7c19ea33b04a88c6f172d008ebee32dd713c0c81.dockerfile"}