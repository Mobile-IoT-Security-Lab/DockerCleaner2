{"seed":2035019461,"processedDockerfileHash":"551fcb9850cc6b8a0a019d6626345d14","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["have-a-healthcheck","have-a-user"],"processedDockerfile":"#\n#   mkvtoolnix Dockerfile\n#\n#   https://github.com/jlesage/docker-mkvtoolnix\n#\n#   Pull base image.\nFROM jlesage/baseimage-gui:alpine-3.9-v3.5.2\n#   Define software versions.\nARG MKVTOOLNIX_VERSION=35.0.0\nARG MEDIAINFO_VERSION=19.04\n#   Define software download URLs.\nARG MKVTOOLNIX_URL=https://mkvtoolnix.download/sources/mkvtoolnix-${MKVTOOLNIX_VERSION}.tar.xz\nARG MEDIAINFO_URL=https://github.com/MediaArea/MediaInfo/archive/v${MEDIAINFO_VERSION}.tar.gz\n#   Define working directory.\nWORKDIR /tmp\n#   Install dependencies.\nRUN add-pkg boost-system boost-regex boost-filesystem libmagic libmatroska libebml flac qt5-qtmultimedia mesa-dri-swrast libmediainfo qt5-qtsvg \\\n && add-pkg cmark-dev --repository http://dl-cdn.alpinelinux.org/alpine/edge/community\n#   Install MKVToolNix.\nRUN add-pkg --virtual build-dependencies curl patch imagemagick build-base ruby-rake ruby-json qt5-qtbase-dev qt5-qtmultimedia-dev boost-dev file-dev zlib-dev libmatroska-dev flac-dev libogg-dev libvorbis-dev docbook-xsl gettext-dev \\\n && echo \"Downloading MKVToolNix package...\" \\\n && curl -# -L ${MKVTOOLNIX_URL} | tar xJ \\\n && find mkvtoolnix-${MKVTOOLNIX_VERSION} -name \"*.png\" -exec convert -strip {} {}\n#   Compile and install MediaInfo.\nRUN add-pkg --virtual build-dependencies build-base curl qt5-qtbase-dev libmediainfo-dev \\\n && echo \"Downloading MediaInfo package...\" \\\n && mkdir mediainfo \\\n && curl -# -L ${MEDIAINFO_URL} | tar xz --strip 1 -C mediainfo \\\n && cd mediainfo/Project/QMake/GUI \\\n && /usr/lib/qt5/bin/qmake \\\n && make -j$( nproc ;) install \\\n && cd ../../../../ \\\n && strip -v /usr/bin/mediainfo-gui \\\n && cd ../ \\\n && del-pkg build-dependencies \\\n && rm -rf /tmp/* /tmp/.[!.]*\n#   Adjust the openbox config.\nRUN sed-patch 's/<application type=\"normal\">/<application type=\"normal\" name=\"mkvtoolnix-gui\">/' /etc/xdg/openbox/rc.xml \\\n && sed-patch '/<application type=\"normal\" name=\"mkvtoolnix-gui\">/a \\ <layer>below</layer>' /etc/xdg/openbox/rc.xml\n#   Misc adjustments.\nRUN echo > /etc/fstab\n#   Generate and install favicons.\nRUN APP_ICON_URL=https://github.com/jlesage/docker-templates/raw/master/jlesage/images/mkvtoolnix-icon.png \\\n && install_app_icon.sh \"$APP_ICON_URL\"\n#   Add files.\nCOPY rootfs/ /\n#   Set environment variables.\nENV APP_NAME=\"MKVToolNix\"\n#   Define mountable directories.\nVOLUME [\"/config\"]\nVOLUME [\"/storage\"]\n#   Metadata.\nLABEL org.label-schema.name=\"mkvtoolnix\" \\\n      org.label-schema.description=\"Docker container for MKVToolNix\" \\\n      org.label-schema.version=\"unknown\" \\\n      org.label-schema.vcs-url=\"https://github.com/jlesage/docker-mkvtoolnix\" \\\n      org.label-schema.schema-version=\"1.0\"\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#\n#  mkvtoolnix Dockerfile\n#\n#  https://github.com/jlesage/docker-mkvtoolnix\n#\n#  Pull base image.\nFROM jlesage/baseimage-gui:alpine-3.9-v3.5.2\n#  Define software versions.\nARG MKVTOOLNIX_VERSION=35.0.0\nARG MEDIAINFO_VERSION=19.04\n#  Define software download URLs.\nARG MKVTOOLNIX_URL=https://mkvtoolnix.download/sources/mkvtoolnix-${MKVTOOLNIX_VERSION}.tar.xz\nARG MEDIAINFO_URL=https://github.com/MediaArea/MediaInfo/archive/v${MEDIAINFO_VERSION}.tar.gz\n#  Define working directory.\nWORKDIR /tmp\n#  Install dependencies.\nRUN add-pkg boost-system boost-regex boost-filesystem libmagic libmatroska libebml flac qt5-qtmultimedia mesa-dri-swrast libmediainfo qt5-qtsvg \\\n && add-pkg cmark-dev --repository http://dl-cdn.alpinelinux.org/alpine/edge/community\n#  Install MKVToolNix.\nRUN add-pkg --virtual build-dependencies curl patch imagemagick build-base ruby-rake ruby-json qt5-qtbase-dev qt5-qtmultimedia-dev boost-dev file-dev zlib-dev libmatroska-dev flac-dev libogg-dev libvorbis-dev docbook-xsl gettext-dev \\\n && echo \"Downloading MKVToolNix package...\" \\\n && curl -# -L ${MKVTOOLNIX_URL} | tar xJ \\\n && find mkvtoolnix-${MKVTOOLNIX_VERSION} -name \"*.png\" -exec convert -strip {} {} ; \\\n && cd mkvtoolnix-${MKVTOOLNIX_VERSION} \\\n && curl -# -L https://raw.githubusercontent.com/jlesage/docker-mkvtoolnix/master/disable-high-dpi-scaling-override.patch | patch -p1 \\\n && env LIBINTL_LIBS=-lintl ./configure --prefix=/usr --mandir=/tmp/mkvtoolnix-man --disable-update-check \\\n && rake -j8 \\\n && rake install \\\n && strip /usr/bin/mkv* \\\n && cd .. \\\n && del-pkg build-dependencies \\\n && rm -rf /tmp/* /tmp/.[!.]*\n#  Compile and install MediaInfo.\nRUN add-pkg --virtual build-dependencies build-base curl qt5-qtbase-dev libmediainfo-dev \\\n && echo \"Downloading MediaInfo package...\" \\\n && mkdir mediainfo \\\n && curl -# -L ${MEDIAINFO_URL} | tar xz --strip 1 -C mediainfo \\\n && cd mediainfo/Project/QMake/GUI \\\n && /usr/lib/qt5/bin/qmake \\\n && make -j$( nproc ;) install \\\n && cd ../../../../ \\\n && strip -v /usr/bin/mediainfo-gui \\\n && cd ../ \\\n && del-pkg build-dependencies \\\n && rm -rf /tmp/* /tmp/.[!.]*\n#  Adjust the openbox config.\nRUN sed-patch 's/<application type=\"normal\">/<application type=\"normal\" name=\"mkvtoolnix-gui\">/' /etc/xdg/openbox/rc.xml \\\n && sed-patch '/<application type=\"normal\" name=\"mkvtoolnix-gui\">/a \\ <layer>below</layer>' /etc/xdg/openbox/rc.xml\n#  Misc adjustments.\nRUN echo > /etc/fstab\n#  Generate and install favicons.\nRUN APP_ICON_URL=https://github.com/jlesage/docker-templates/raw/master/jlesage/images/mkvtoolnix-icon.png \\\n && install_app_icon.sh \"$APP_ICON_URL\"\n#  Add files.\nCOPY rootfs/ /\n#  Set environment variables.\nENV APP_NAME=\"MKVToolNix\"\n#  Define mountable directories.\nVOLUME [\"/config\"]\nVOLUME [\"/storage\"]\n#  Metadata.\nLABEL org.label-schema.name=\"mkvtoolnix\" \\\n      org.label-schema.description=\"Docker container for MKVToolNix\" \\\n      org.label-schema.version=\"unknown\" \\\n      org.label-schema.vcs-url=\"https://github.com/jlesage/docker-mkvtoolnix\" \\\n      org.label-schema.schema-version=\"1.0\"\n","injectedSmells":[],"originalDockerfileHash":"0c071f4452fe2d59a8fc2347794beec5","successfullyInjectedSmells":[],"originalDockerfileUglified":"#\n#   mkvtoolnix Dockerfile\n#\n#   https://github.com/jlesage/docker-mkvtoolnix\n#\n#   Pull base image.\nFROM jlesage/baseimage-gui:alpine-3.9-v3.5.2\n#   Define software versions.\nARG MKVTOOLNIX_VERSION=35.0.0\nARG MEDIAINFO_VERSION=19.04\n#   Define software download URLs.\nARG MKVTOOLNIX_URL=https://mkvtoolnix.download/sources/mkvtoolnix-${MKVTOOLNIX_VERSION}.tar.xz\nARG MEDIAINFO_URL=https://github.com/MediaArea/MediaInfo/archive/v${MEDIAINFO_VERSION}.tar.gz\n#   Define working directory.\nWORKDIR /tmp\n#   Install dependencies.\nRUN add-pkg boost-system boost-regex boost-filesystem libmagic libmatroska libebml flac qt5-qtmultimedia mesa-dri-swrast libmediainfo qt5-qtsvg \\\n && add-pkg cmark-dev --repository http://dl-cdn.alpinelinux.org/alpine/edge/community\n#   Install MKVToolNix.\nRUN add-pkg --virtual build-dependencies curl patch imagemagick build-base ruby-rake ruby-json qt5-qtbase-dev qt5-qtmultimedia-dev boost-dev file-dev zlib-dev libmatroska-dev flac-dev libogg-dev libvorbis-dev docbook-xsl gettext-dev \\\n && echo \"Downloading MKVToolNix package...\" \\\n && curl -# -L ${MKVTOOLNIX_URL} | tar xJ \\\n && find mkvtoolnix-${MKVTOOLNIX_VERSION} -name \"*.png\" -exec convert -strip {} {}\n#   Compile and install MediaInfo.\nRUN add-pkg --virtual build-dependencies build-base curl qt5-qtbase-dev libmediainfo-dev \\\n && echo \"Downloading MediaInfo package...\" \\\n && mkdir mediainfo \\\n && curl -# -L ${MEDIAINFO_URL} | tar xz --strip 1 -C mediainfo \\\n && cd mediainfo/Project/QMake/GUI \\\n && /usr/lib/qt5/bin/qmake \\\n && make -j$( nproc ;) install \\\n && cd ../../../../ \\\n && strip -v /usr/bin/mediainfo-gui \\\n && cd ../ \\\n && del-pkg build-dependencies \\\n && rm -rf /tmp/* /tmp/.[!.]*\n#   Adjust the openbox config.\nRUN sed-patch 's/<application type=\"normal\">/<application type=\"normal\" name=\"mkvtoolnix-gui\">/' /etc/xdg/openbox/rc.xml \\\n && sed-patch '/<application type=\"normal\" name=\"mkvtoolnix-gui\">/a \\ <layer>below</layer>' /etc/xdg/openbox/rc.xml\n#   Misc adjustments.\nRUN echo > /etc/fstab\n#   Generate and install favicons.\nRUN APP_ICON_URL=https://github.com/jlesage/docker-templates/raw/master/jlesage/images/mkvtoolnix-icon.png \\\n && install_app_icon.sh \"$APP_ICON_URL\"\n#   Add files.\nCOPY rootfs/ /\n#   Set environment variables.\nENV APP_NAME=\"MKVToolNix\"\n#   Define mountable directories.\nVOLUME [\"/config\"]\nVOLUME [\"/storage\"]\n#   Metadata.\nLABEL org.label-schema.name=\"mkvtoolnix\" \\\n      org.label-schema.description=\"Docker container for MKVToolNix\" \\\n      org.label-schema.version=\"unknown\" \\\n      org.label-schema.vcs-url=\"https://github.com/jlesage/docker-mkvtoolnix\" \\\n      org.label-schema.schema-version=\"1.0\"\n","originalDockerfileUglifiedHash":"48629173a5c56136ae44cd5eb8d77622","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/0e3505460817aa144d2c13ac78991afa634829f9.dockerfile"}