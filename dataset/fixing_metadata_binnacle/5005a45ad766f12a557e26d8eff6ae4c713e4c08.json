{"seed":2858823427,"processedDockerfileHash":"33336c204e7e6f1f1b1bbbc2d74f6667","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["have-a-healthcheck","have-a-user"],"processedDockerfile":"ARG BASE_IMAGE\n#   ================\n#   Build virtualenv\n#   ================\nFROM ${BASE_IMAGE} AS python-environment\nENV TMPDIR=\"/var/tmp\"\nENV PIP_EXTRA_INDEX_URL=\"https://packages.hiveeyes.org/hiveeyes/python/eggs/\"\nARG venv=/venv\nARG pip=${venv}/bin/pip\nARG python=${venv}/bin/python\n#   Create Python virtualenv\nRUN virtualenv --system-site-packages --always-copy --python=python ${venv}\n#   Remove superfluous \"local\" folder inside virtualenv\n#   See also:\n#   - http://stackoverflow.com/questions/8227120/strange-local-folder-inside-virtualenv-folder\n#   - https://github.com/pypa/virtualenv/pull/166\n#   - https://github.com/pypa/virtualenv/commit/5cb7cd652953441a6696c15bdac3c4f9746dfaa1\nRUN rm -rf ${venv}/local\n#  RUN $pip install setuptools --upgrade --force-reinstall\n#  RUN $pip install setuptools==18.8.1 --upgrade --force-reinstall\n#  RUN $pip install setuptools==22.0.5 --upgrade --force-reinstall\n#   Downgrade pip due to \"BackendUnavailable\" error with pip >= 19.0.0\nRUN $pip install pip==18.1 --upgrade --force-reinstall\n#   Install \"virtualenv-tools\" for relocating the virtualenv\nRUN $pip install virtualenv-tools==1.0\nRUN $pip install pandas==0.18.1\nRUN $pip install 'https://github.com/jjmalina/pyinfluxql/tarball/d92db4ab8c#egg=pyinfluxql-0.0.1'\n#   ===============\n#   Acquire sources\n#   ===============\nFROM python-environment AS acquire-sources\nARG SOURCES=/sources\nRUN mkdir -p $SOURCES \\\n && git clone --depth=1 https://github.com/daq-tools/kotori.git $SOURCES\n#   ======================\n#   Install Python package\n#   ======================\nFROM acquire-sources AS install-kotori\nENV TMPDIR=\"/var/tmp\"\nENV PIP_EXTRA_INDEX_URL=\"https://packages.hiveeyes.org/hiveeyes/python/eggs/\"\nARG VERSION\nARG FEATURES\nARG SOURCES=/sources\nARG venv=/venv\nARG pip=${venv}/bin/pip\nARG python=${venv}/bin/python\n#   TODO: Make this optionally.\n#  COPY Makefile $SOURCES/Makefile\n#  COPY setup.py $SOURCES/setup.py\n#  COPY pyproject.toml $SOURCES/pyproject.toml\n#  COPY MANIFEST.in $SOURCES/MANIFEST.in\nWORKDIR $SOURCES\nRUN $python setup.py sdist\n#   Install Kotori and its dependencies\nRUN $pip install kotori[${FEATURES}]==${VERSION} --find-links=./dist --upgrade\n#   ----\n#   3.a Install from local sdist egg, enabling extra features\n#   TODO: Maybe use \"--editable\" for installing in development mode\n#   TODO: Build Wheels: https://pip.pypa.io/en/stable/reference/pip_wheel/\n#  @#TMPDIR=/var/tmp $(buildpath)/bin/pip install kotori[$(features)]==$(version) --download-cache=./build/pip-cache --find-links=./dist --process-dependency-links\n#   3.b Install from egg on package server\n#   https://pip.pypa.io/en/stable/reference/pip_wheel/#cmdoption--extra-index-url\n#  TMPDIR=/var/tmp $(buildpath)/bin/pip install kotori[$(features)]==$(version) --process-dependency-links --extra-index-url=https://packages.elmyra.de/elmyra/foss/python/\n#   ----\n#   ===========================\n#   Create distribution package\n#   ===========================\n#   Todo: Decouple this task from the repository.\n#         Q: Where to place the resources from the \"packaging\" folder then?\n#         A: TBD.\nFROM install-kotori AS package-kotori\nENV TMPDIR=\"/var/tmp\"\nARG NAME\nARG VERSION\nARG FEATURES\nARG SOURCES=/sources\nARG venv=/venv\nARG pip=${venv}/bin/pip\nARG python=${venv}/bin/python\nCOPY packaging/builder/fpm-package $SOURCES/fpm-package\nWORKDIR $SOURCES\n#   Counter \"ValueError: bad marshal data (unknown type code)\"\n#   coming from manipulation through \"virtualenv-tools\"\".\nRUN find ${venv} -name '*.pyc' -delete\n#   Relocate the virtualenv by updating the python interpreter in the shebang of installed scripts.\nRUN ${venv}/bin/virtualenv-tools --update-path=/opt/kotori ${venv}\n#   Build package.\nRUN ./fpm-package \"${NAME}\" \"${VERSION}\"\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"ARG BASE_IMAGE\n#  ================\n#  Build virtualenv\n#  ================\nFROM ${BASE_IMAGE} AS python-environment\nENV TMPDIR=\"/var/tmp\"\nENV PIP_EXTRA_INDEX_URL=\"https://packages.hiveeyes.org/hiveeyes/python/eggs/\"\nARG venv=/venv\nARG pip=${venv}/bin/pip\nARG python=${venv}/bin/python\n#  Create Python virtualenv\nRUN virtualenv --system-site-packages --always-copy --python=python ${venv}\n#  Remove superfluous \"local\" folder inside virtualenv\n#  See also:\n#  - http://stackoverflow.com/questions/8227120/strange-local-folder-inside-virtualenv-folder\n#  - https://github.com/pypa/virtualenv/pull/166\n#  - https://github.com/pypa/virtualenv/commit/5cb7cd652953441a6696c15bdac3c4f9746dfaa1\nRUN rm -rf ${venv}/local\n# RUN $pip install setuptools --upgrade --force-reinstall\n# RUN $pip install setuptools==18.8.1 --upgrade --force-reinstall\n# RUN $pip install setuptools==22.0.5 --upgrade --force-reinstall\n#  Downgrade pip due to \"BackendUnavailable\" error with pip >= 19.0.0\nRUN $pip install pip==18.1 --upgrade --force-reinstall\n#  Install \"virtualenv-tools\" for relocating the virtualenv\nRUN $pip install virtualenv-tools==1.0\nRUN $pip install pandas==0.18.1\nRUN $pip install 'https://github.com/jjmalina/pyinfluxql/tarball/d92db4ab8c#egg=pyinfluxql-0.0.1'\n#  ===============\n#  Acquire sources\n#  ===============\nFROM python-environment AS acquire-sources\nARG SOURCES=/sources\nRUN mkdir -p $SOURCES \\\n && git clone --depth=1 https://github.com/daq-tools/kotori.git $SOURCES\n#  ======================\n#  Install Python package\n#  ======================\nFROM acquire-sources AS install-kotori\nENV TMPDIR=\"/var/tmp\"\nENV PIP_EXTRA_INDEX_URL=\"https://packages.hiveeyes.org/hiveeyes/python/eggs/\"\nARG VERSION\nARG FEATURES\nARG SOURCES=/sources\nARG venv=/venv\nARG pip=${venv}/bin/pip\nARG python=${venv}/bin/python\n#  TODO: Make this optionally.\n# COPY Makefile $SOURCES/Makefile\n# COPY setup.py $SOURCES/setup.py\n# COPY pyproject.toml $SOURCES/pyproject.toml\n# COPY MANIFEST.in $SOURCES/MANIFEST.in\nWORKDIR $SOURCES\nRUN $python setup.py sdist\n#  Install Kotori and its dependencies\nRUN $pip install kotori[${FEATURES}]==${VERSION} --find-links=./dist --upgrade\n#  ----\n#  3.a Install from local sdist egg, enabling extra features\n#  TODO: Maybe use \"--editable\" for installing in development mode\n#  TODO: Build Wheels: https://pip.pypa.io/en/stable/reference/pip_wheel/\n# @#TMPDIR=/var/tmp $(buildpath)/bin/pip install kotori[$(features)]==$(version) --download-cache=./build/pip-cache --find-links=./dist --process-dependency-links\n#  3.b Install from egg on package server\n#  https://pip.pypa.io/en/stable/reference/pip_wheel/#cmdoption--extra-index-url\n# TMPDIR=/var/tmp $(buildpath)/bin/pip install kotori[$(features)]==$(version) --process-dependency-links --extra-index-url=https://packages.elmyra.de/elmyra/foss/python/\n#  ----\n#  ===========================\n#  Create distribution package\n#  ===========================\n#  Todo: Decouple this task from the repository.\n#        Q: Where to place the resources from the \"packaging\" folder then?\n#        A: TBD.\nFROM install-kotori AS package-kotori\nENV TMPDIR=\"/var/tmp\"\nARG NAME\nARG VERSION\nARG FEATURES\nARG SOURCES=/sources\nARG venv=/venv\nARG pip=${venv}/bin/pip\nARG python=${venv}/bin/python\nCOPY packaging/builder/fpm-package $SOURCES/fpm-package\nWORKDIR $SOURCES\n#  Counter \"ValueError: bad marshal data (unknown type code)\"\n#  coming from manipulation through \"virtualenv-tools\"\".\nRUN find ${venv} -name '*.pyc' -delete\n#  Relocate the virtualenv by updating the python interpreter in the shebang of installed scripts.\nRUN ${venv}/bin/virtualenv-tools --update-path=/opt/kotori ${venv}\n#  Build package.\nRUN ./fpm-package \"${NAME}\" \"${VERSION}\"\n","injectedSmells":[],"originalDockerfileHash":"b37e1e3deb7c3cfe10acfef3aa662f03","successfullyInjectedSmells":[],"originalDockerfileUglified":"ARG BASE_IMAGE\n#   ================\n#   Build virtualenv\n#   ================\nFROM ${BASE_IMAGE} AS python-environment\nENV TMPDIR=\"/var/tmp\"\nENV PIP_EXTRA_INDEX_URL=\"https://packages.hiveeyes.org/hiveeyes/python/eggs/\"\nARG venv=/venv\nARG pip=${venv}/bin/pip\nARG python=${venv}/bin/python\n#   Create Python virtualenv\nRUN virtualenv --system-site-packages --always-copy --python=python ${venv}\n#   Remove superfluous \"local\" folder inside virtualenv\n#   See also:\n#   - http://stackoverflow.com/questions/8227120/strange-local-folder-inside-virtualenv-folder\n#   - https://github.com/pypa/virtualenv/pull/166\n#   - https://github.com/pypa/virtualenv/commit/5cb7cd652953441a6696c15bdac3c4f9746dfaa1\nRUN rm -rf ${venv}/local\n#  RUN $pip install setuptools --upgrade --force-reinstall\n#  RUN $pip install setuptools==18.8.1 --upgrade --force-reinstall\n#  RUN $pip install setuptools==22.0.5 --upgrade --force-reinstall\n#   Downgrade pip due to \"BackendUnavailable\" error with pip >= 19.0.0\nRUN $pip install pip==18.1 --upgrade --force-reinstall\n#   Install \"virtualenv-tools\" for relocating the virtualenv\nRUN $pip install virtualenv-tools==1.0\nRUN $pip install pandas==0.18.1\nRUN $pip install 'https://github.com/jjmalina/pyinfluxql/tarball/d92db4ab8c#egg=pyinfluxql-0.0.1'\n#   ===============\n#   Acquire sources\n#   ===============\nFROM python-environment AS acquire-sources\nARG SOURCES=/sources\nRUN mkdir -p $SOURCES \\\n && git clone --depth=1 https://github.com/daq-tools/kotori.git $SOURCES\n#   ======================\n#   Install Python package\n#   ======================\nFROM acquire-sources AS install-kotori\nENV TMPDIR=\"/var/tmp\"\nENV PIP_EXTRA_INDEX_URL=\"https://packages.hiveeyes.org/hiveeyes/python/eggs/\"\nARG VERSION\nARG FEATURES\nARG SOURCES=/sources\nARG venv=/venv\nARG pip=${venv}/bin/pip\nARG python=${venv}/bin/python\n#   TODO: Make this optionally.\n#  COPY Makefile $SOURCES/Makefile\n#  COPY setup.py $SOURCES/setup.py\n#  COPY pyproject.toml $SOURCES/pyproject.toml\n#  COPY MANIFEST.in $SOURCES/MANIFEST.in\nWORKDIR $SOURCES\nRUN $python setup.py sdist\n#   Install Kotori and its dependencies\nRUN $pip install kotori[${FEATURES}]==${VERSION} --find-links=./dist --upgrade\n#   ----\n#   3.a Install from local sdist egg, enabling extra features\n#   TODO: Maybe use \"--editable\" for installing in development mode\n#   TODO: Build Wheels: https://pip.pypa.io/en/stable/reference/pip_wheel/\n#  @#TMPDIR=/var/tmp $(buildpath)/bin/pip install kotori[$(features)]==$(version) --download-cache=./build/pip-cache --find-links=./dist --process-dependency-links\n#   3.b Install from egg on package server\n#   https://pip.pypa.io/en/stable/reference/pip_wheel/#cmdoption--extra-index-url\n#  TMPDIR=/var/tmp $(buildpath)/bin/pip install kotori[$(features)]==$(version) --process-dependency-links --extra-index-url=https://packages.elmyra.de/elmyra/foss/python/\n#   ----\n#   ===========================\n#   Create distribution package\n#   ===========================\n#   Todo: Decouple this task from the repository.\n#         Q: Where to place the resources from the \"packaging\" folder then?\n#         A: TBD.\nFROM install-kotori AS package-kotori\nENV TMPDIR=\"/var/tmp\"\nARG NAME\nARG VERSION\nARG FEATURES\nARG SOURCES=/sources\nARG venv=/venv\nARG pip=${venv}/bin/pip\nARG python=${venv}/bin/python\nCOPY packaging/builder/fpm-package $SOURCES/fpm-package\nWORKDIR $SOURCES\n#   Counter \"ValueError: bad marshal data (unknown type code)\"\n#   coming from manipulation through \"virtualenv-tools\"\".\nRUN find ${venv} -name '*.pyc' -delete\n#   Relocate the virtualenv by updating the python interpreter in the shebang of installed scripts.\nRUN ${venv}/bin/virtualenv-tools --update-path=/opt/kotori ${venv}\n#   Build package.\nRUN ./fpm-package \"${NAME}\" \"${VERSION}\"\n","originalDockerfileUglifiedHash":"f2d6f06465c05b8a798b778ba8d9be53","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/5005a45ad766f12a557e26d8eff6ae4c713e4c08.dockerfile"}