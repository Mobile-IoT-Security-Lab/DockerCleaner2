{"seed":3621115488,"processedDockerfileHash":"00df382e829fc5690e26914a4e1067f4","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   © Copyright IBM Corporation 2017, 2019\n#   LICENSE: Apache License, Version 2.0 (http://www.apache.org/licenses/LICENSE-2.0)\n#  ######### Dockerfile for TensorFlow version 1.12.0 #########\n#\n#   This Dockerfile builds a basic installation of TensorFlow.\n#\n#   TensorFlow provides multiple APIs. The lowest level API--TensorFlow Core-- provides you with complete programming control.\n#   The higher level APIs are built on top of TensorFlow Core. These higher level APIs are typically easier to learn and use than TensorFlow Core.\n#   In addition, the higher level APIs make repetitive tasks easier and more consistent between different users.\n#   A high-level API like tf.estimator helps you manage data sets, estimators, training and inference.\n#\n#   To build this image, from the directory containing this Dockerfile\n#   (assuming that the file is named Dockerfile):\n#   docker build -t <image_name> .\n#\n#   To start container from image & start an application in production mode\n#   docker run --name <container_name> -d <image>\n#   docker run --name <container_name> -it -p 8888:8888 <image>\n#   To copy TensorFlow wheel file :\n#   docker cp <container_id>:/tensorflow_wheel <path_on_host>\n#\n#   You can install TensorFlow wheel file using pip install\n#\n#   Reference:\n#   https://www.tensorflow.org/\n#   http://bazel.io/\n#   https://github.com/tensorflow/tensorflow\n#\n#  #################################################################################\n#   Base Image\nFROM s390x/ubuntu:16.04\n#   The author\nMAINTAINER LoZ Open Source Ecosystem (https://www.ibm.com/developerworks/community/groups/community/lozopensource)\nENV SOURCE_DIR=\"/tmp/source\"\nENV PATH=\"$PATH:$SOURCE_DIR/bazel/output/\" \\\n    TF_NEED_IGNITE=\"0\" \\\n    TF_NEED_GCP=\"0\" \\\n    TF_NEED_CUDA=\"0\" \\\n    TF_ENABLE_XLA=\"0\" \\\n    TF_NEED_GDR=\"0\" \\\n    TF_NEED_VERBS=\"0\" \\\n    TF_NEED_MPI=\"0\" \\\n    TF_NEED_OPENCL_SYCL=\"0\" \\\n    TF_SET_ANDROID_WORKSPACE=\"0\" \\\n    TF_NEED_GCP=\"0\" \\\n    TF_CUDA_CLANG=\"0\" \\\n    TF_NEED_ROCM=\"0\" \\\n    PYTHON_BIN_PATH=\"/usr/bin/python2\" \\\n    GRPC_PYTHON_BUILD_SYSTEM_OPENSSL=\"True\"\n#   Install dependencies\nRUN apt-get update \\\n && apt-get install --no-install-recommends pkg-config zip g++ zlib1g-dev unzip git vim tar wget automake autoconf libtool make curl maven openjdk-8-jdk python-pip python-virtualenv swig python-dev libcurl3-dev python-mock python-scipy bzip2 python-sklearn python-numpy patch libhdf5-dev libssl-dev glibc* -y \\\n && pip install wheel==0.40.0 backports.weakref==1.0.post1 portpicker==1.5.2 futures==3.4.0 grpc==1.0.0 enum34==1.1.10 \\\n && pip install numpy==1.13.3 \\\n && pip install keras_applications==1.0.5 --no-deps \\\n && pip install keras_preprocessing==1.0.3 --no-deps \\\n && pip install keras==2.12.0 \\\n && pip install grpcio==1.53.0 \\\n && mkdir -p $SOURCE_DIR \\\n && cd $SOURCE_DIR \\\n && mkdir bazel \\\n && cd bazel \\\n && wget https://github.com/bazelbuild/bazel/releases/download/0.15.0/bazel-0.15.0-dist.zip \\\n && unzip bazel-0.15.0-dist.zip \\\n && chmod -R +w . \\\n && sed -i '117d' scripts/bootstrap/compile.sh \\\n && sed -i '117 i run \"${JAVAC}\" -J-Xms1g -J-Xmx1g -classpath \"${classpath}\" -sourcepath \"${sourcepath}\" \\\\' scripts/bootstrap/compile.sh \\\n && bash ./compile.sh \\\n && cd $SOURCE_DIR \\\n && git clone https://github.com/linux-on-ibm-z/tensorflow \\\n && cd tensorflow \\\n && git checkout v1.12.0-s390x \\\n && yes \"\" | ./configure \\\n && bazel --host_jvm_args=\"-Xms512m\" --host_jvm_args=\"-Xmx1024m\" build -c opt //tensorflow/tools/pip_package:build_pip_package \\\n && cd $SOURCE_DIR/tensorflow \\\n && mkdir -p /tensorflow_wheel \\\n && bazel-bin/tensorflow/tools/pip_package/build_pip_package /tensorflow_wheel \\\n && apt-get -y remove bzip2 git make maven unzip wget zip \\\n && apt-get autoremove -y \\\n && apt-get autoremove -y \\\n && rm -rf $SOURCE_DIR \\\n && rm -rf /root/.cache/ \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\nVOLUME /tensorflow_wheel\n#   End of Dockerfile \nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  © Copyright IBM Corporation 2017, 2019\n#  LICENSE: Apache License, Version 2.0 (http://www.apache.org/licenses/LICENSE-2.0)\n# ######### Dockerfile for TensorFlow version 1.12.0 #########\n#\n#  This Dockerfile builds a basic installation of TensorFlow.\n#\n#  TensorFlow provides multiple APIs. The lowest level API--TensorFlow Core-- provides you with complete programming control.\n#  The higher level APIs are built on top of TensorFlow Core. These higher level APIs are typically easier to learn and use than TensorFlow Core.\n#  In addition, the higher level APIs make repetitive tasks easier and more consistent between different users.\n#  A high-level API like tf.estimator helps you manage data sets, estimators, training and inference.\n#\n#  To build this image, from the directory containing this Dockerfile\n#  (assuming that the file is named Dockerfile):\n#  docker build -t <image_name> .\n#\n#  To start container from image & start an application in production mode\n#  docker run --name <container_name> -d <image>\n#  docker run --name <container_name> -it -p 8888:8888 <image>\n#  To copy TensorFlow wheel file :\n#  docker cp <container_id>:/tensorflow_wheel <path_on_host>\n#\n#  You can install TensorFlow wheel file using pip install\n#\n#  Reference:\n#  https://www.tensorflow.org/\n#  http://bazel.io/\n#  https://github.com/tensorflow/tensorflow\n#\n# #################################################################################\n#  Base Image\nFROM s390x/ubuntu:16.04\n#  The author\nMAINTAINER LoZ Open Source Ecosystem (https://www.ibm.com/developerworks/community/groups/community/lozopensource)\nENV SOURCE_DIR=\"/tmp/source\"\nENV PATH=\"$PATH:$SOURCE_DIR/bazel/output/\" \\\n    TF_NEED_IGNITE=\"0\" \\\n    TF_NEED_GCP=\"0\" \\\n    TF_NEED_CUDA=\"0\" \\\n    TF_ENABLE_XLA=\"0\" \\\n    TF_NEED_GDR=\"0\" \\\n    TF_NEED_VERBS=\"0\" \\\n    TF_NEED_MPI=\"0\" \\\n    TF_NEED_OPENCL_SYCL=\"0\" \\\n    TF_SET_ANDROID_WORKSPACE=\"0\" \\\n    TF_NEED_GCP=\"0\" \\\n    TF_CUDA_CLANG=\"0\" \\\n    TF_NEED_ROCM=\"0\" \\\n    PYTHON_BIN_PATH=\"/usr/bin/python2\" \\\n    GRPC_PYTHON_BUILD_SYSTEM_OPENSSL=\"True\"\n#  Install dependencies\nRUN apt-get update \\\n && apt-get install pkg-config zip g++ zlib1g-dev unzip git vim tar wget automake autoconf libtool make curl maven openjdk-8-jdk python-pip python-virtualenv swig python-dev libcurl3-dev python-mock python-scipy bzip2 python-sklearn python-numpy patch libhdf5-dev libssl-dev glibc* -y \\\n && pip install wheel backports.weakref portpicker futures grpc enum34 \\\n && pip install numpy==1.13.3 \\\n && pip install keras_applications==1.0.5 --no-deps \\\n && pip install keras_preprocessing==1.0.3 --no-deps \\\n && pip install keras \\\n && pip install grpcio \\\n && mkdir -p $SOURCE_DIR \\\n && cd $SOURCE_DIR \\\n && mkdir bazel \\\n && cd bazel \\\n && wget https://github.com/bazelbuild/bazel/releases/download/0.15.0/bazel-0.15.0-dist.zip \\\n && unzip bazel-0.15.0-dist.zip \\\n && chmod -R +w . \\\n && sed -i '117d' scripts/bootstrap/compile.sh \\\n && sed -i '117 i run \"${JAVAC}\" -J-Xms1g -J-Xmx1g -classpath \"${classpath}\" -sourcepath \"${sourcepath}\" \\\\' scripts/bootstrap/compile.sh \\\n && bash ./compile.sh \\\n && cd $SOURCE_DIR \\\n && git clone https://github.com/linux-on-ibm-z/tensorflow \\\n && cd tensorflow \\\n && git checkout v1.12.0-s390x \\\n && yes \"\" | ./configure \\\n && bazel --host_jvm_args=\"-Xms512m\" --host_jvm_args=\"-Xmx1024m\" build -c opt //tensorflow/tools/pip_package:build_pip_package \\\n && cd $SOURCE_DIR/tensorflow \\\n && mkdir -p /tensorflow_wheel \\\n && bazel-bin/tensorflow/tools/pip_package/build_pip_package /tensorflow_wheel \\\n && apt-get -y remove bzip2 git make maven unzip wget zip \\\n && apt-get autoremove -y \\\n && apt-get autoremove -y \\\n && rm -rf $SOURCE_DIR \\\n && rm -rf /root/.cache/ \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\nVOLUME /tensorflow_wheel\n#  End of Dockerfile \n","injectedSmells":[],"originalDockerfileHash":"7d8c5b6fdf725d0da6902796d7d5d660","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   © Copyright IBM Corporation 2017, 2019\n#   LICENSE: Apache License, Version 2.0 (http://www.apache.org/licenses/LICENSE-2.0)\n#  ######### Dockerfile for TensorFlow version 1.12.0 #########\n#\n#   This Dockerfile builds a basic installation of TensorFlow.\n#\n#   TensorFlow provides multiple APIs. The lowest level API--TensorFlow Core-- provides you with complete programming control.\n#   The higher level APIs are built on top of TensorFlow Core. These higher level APIs are typically easier to learn and use than TensorFlow Core.\n#   In addition, the higher level APIs make repetitive tasks easier and more consistent between different users.\n#   A high-level API like tf.estimator helps you manage data sets, estimators, training and inference.\n#\n#   To build this image, from the directory containing this Dockerfile\n#   (assuming that the file is named Dockerfile):\n#   docker build -t <image_name> .\n#\n#   To start container from image & start an application in production mode\n#   docker run --name <container_name> -d <image>\n#   docker run --name <container_name> -it -p 8888:8888 <image>\n#   To copy TensorFlow wheel file :\n#   docker cp <container_id>:/tensorflow_wheel <path_on_host>\n#\n#   You can install TensorFlow wheel file using pip install\n#\n#   Reference:\n#   https://www.tensorflow.org/\n#   http://bazel.io/\n#   https://github.com/tensorflow/tensorflow\n#\n#  #################################################################################\n#   Base Image\nFROM s390x/ubuntu:16.04\n#   The author\nMAINTAINER LoZ Open Source Ecosystem (https://www.ibm.com/developerworks/community/groups/community/lozopensource)\nENV SOURCE_DIR=\"/tmp/source\"\nENV PATH=\"$PATH:$SOURCE_DIR/bazel/output/\" \\\n    TF_NEED_IGNITE=\"0\" \\\n    TF_NEED_GCP=\"0\" \\\n    TF_NEED_CUDA=\"0\" \\\n    TF_ENABLE_XLA=\"0\" \\\n    TF_NEED_GDR=\"0\" \\\n    TF_NEED_VERBS=\"0\" \\\n    TF_NEED_MPI=\"0\" \\\n    TF_NEED_OPENCL_SYCL=\"0\" \\\n    TF_SET_ANDROID_WORKSPACE=\"0\" \\\n    TF_NEED_GCP=\"0\" \\\n    TF_CUDA_CLANG=\"0\" \\\n    TF_NEED_ROCM=\"0\" \\\n    PYTHON_BIN_PATH=\"/usr/bin/python2\" \\\n    GRPC_PYTHON_BUILD_SYSTEM_OPENSSL=\"True\"\n#   Install dependencies\nRUN apt-get update \\\n && apt-get install pkg-config zip g++ zlib1g-dev unzip git vim tar wget automake autoconf libtool make curl maven openjdk-8-jdk python-pip python-virtualenv swig python-dev libcurl3-dev python-mock python-scipy bzip2 python-sklearn python-numpy patch libhdf5-dev libssl-dev glibc* -y \\\n && pip install wheel backports.weakref portpicker futures grpc enum34 \\\n && pip install numpy==1.13.3 \\\n && pip install keras_applications==1.0.5 --no-deps \\\n && pip install keras_preprocessing==1.0.3 --no-deps \\\n && pip install keras \\\n && pip install grpcio \\\n && mkdir -p $SOURCE_DIR \\\n && cd $SOURCE_DIR \\\n && mkdir bazel \\\n && cd bazel \\\n && wget https://github.com/bazelbuild/bazel/releases/download/0.15.0/bazel-0.15.0-dist.zip \\\n && unzip bazel-0.15.0-dist.zip \\\n && chmod -R +w . \\\n && sed -i '117d' scripts/bootstrap/compile.sh \\\n && sed -i '117 i run \"${JAVAC}\" -J-Xms1g -J-Xmx1g -classpath \"${classpath}\" -sourcepath \"${sourcepath}\" \\\\' scripts/bootstrap/compile.sh \\\n && bash ./compile.sh \\\n && cd $SOURCE_DIR \\\n && git clone https://github.com/linux-on-ibm-z/tensorflow \\\n && cd tensorflow \\\n && git checkout v1.12.0-s390x \\\n && yes \"\" | ./configure \\\n && bazel --host_jvm_args=\"-Xms512m\" --host_jvm_args=\"-Xmx1024m\" build -c opt //tensorflow/tools/pip_package:build_pip_package \\\n && cd $SOURCE_DIR/tensorflow \\\n && mkdir -p /tensorflow_wheel \\\n && bazel-bin/tensorflow/tools/pip_package/build_pip_package /tensorflow_wheel \\\n && apt-get -y remove bzip2 git make maven unzip wget zip \\\n && apt-get autoremove -y \\\n && apt-get autoremove -y \\\n && rm -rf $SOURCE_DIR \\\n && rm -rf /root/.cache/ \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\nVOLUME /tensorflow_wheel\n#   End of Dockerfile \n","originalDockerfileUglifiedHash":"ca5df8910b4107452024596cfe2beda0","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/9558601360283c21846c8b45da202272bedfa82b.dockerfile"}