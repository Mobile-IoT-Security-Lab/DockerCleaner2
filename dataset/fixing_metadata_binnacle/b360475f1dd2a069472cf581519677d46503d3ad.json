{"seed":1686982473,"processedDockerfileHash":"3a42b97205eb8749eea0b61e5769ec31","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["have-a-healthcheck"],"processedDockerfile":"FROM sebomux/yosys\n#   Dockerfile.yosys\n#   CI does not* pull images from Docker hub, but instead builds a fresh\n#   image from the this Dockerfile. We do this because we want to test\n#   the Dockerfile, and also because we want to be able to test a\n#   dependency change in CI by editing the Dockerfile.\n#   Unfortunately, it is prohibitively expensive to build the gcc\n#   toolchain and Yosys on every build. So we put those two dependencies\n#   in their own Images / Dockerfile's: Dockerfile.yosys and\n#   Dockerfile.riscv.\n#   * It does pull the yosys and riscv image.\n#   TODO:Perhaps if we did a docker pull and then a docker build in CI\n#   we wouldn't have this issue and could achieve the same affect?\nRUN sed -i \"s/Required DatabaseOptional/Never/g\" /etc/pacman.conf\nRUN pacman --noconfirm -S clang gdb gtkwave java-commons-io java-environment libftdi-compat python scala scons \\\n && pacman --noconfirm -Scc\n#   Tool usage\n#   clang             # Speeds up the simulator compilation\n#   gtkwave           # Used to convert from vcd to fst\n#   java-commons-io   # Makes it easier to manipulate files from Scala\n#   java-environment  # Creates jars\n#   libftdi-compat    # Needed by icestorm to flash netlists\n#   scala             # Runs Chisel programs\n#   scons             # Builds turborav\n#   gdb               # Useful for debugging (unused by CI)\n#   Install chisel from the AUR\n#   Don't delete this code. It is handy for the times when it is\n#   necessary to build chisel from source.\n#   USER turbo\n#   ENV CHISEL_REVISION 560d5f37ca60e629def7fc3cae7b3d343893b561\n#   WORKDIR /home/turbo\n#   RUN git clone https://aur.archlinux.org/chisel-git.git \\\n#       && cd chisel-git \\\n#       && sed -i \"s chisel\\.git chisel\\.git#commit=$CHISEL_REVISION \" PKGBUILD \\\n#       && makepkg --clean\n#   USER root\n#   RUN pacman -U --noconfirm chisel-git/chisel-git*pkg*\n#   Install FPGA synthesis tools from the AUR\nWORKDIR /home/turbo\n#   Build Csmith\nUSER turbo\nRUN git clone https://aur.archlinux.org/csmith.git \\\n && cd csmith \\\n && makepkg --clean\nUSER root\nRUN pacman -U --noconfirm csmith/csmith*pkg*\n#   Install chisel from Maven\nUSER root\nENV CHISEL_VERSION=\"2.2.32\"\nENV SCALA_VERSION=\"2.11\"\nENV CHISEL_JAR=\"chisel_$SCALA_VERSION-$CHISEL_VERSION.jar\"\nRUN curl http://central.maven.org/maven2/edu/berkeley/cs/chisel_$SCALA_VERSION/$CHISEL_VERSION/$CHISEL_JAR > $CHISEL_JAR \\\n && install -Dm644 $CHISEL_JAR /usr/share/scala/chisel/chisel.jar\n#   Build icestorm\nENV ICESTORM_REVISION=\"4fbc8d20b65952eeef64a2e4c54b9b0ddfb7de07\"\nUSER turbo\nRUN git clone https://aur.archlinux.org/icestorm-git.git \\\n && cd icestorm-git \\\n && sed -i \"s icestorm\\.git icestorm\\.git#commit=$ICESTORM_REVISION \" PKGBUILD \\\n && makepkg --clean\nUSER root\nRUN pacman -U --noconfirm icestorm-git/icestorm-git*pkg*\n#   Build Arachne-pnr\nUSER turbo\nENV ARACHNE_PNR_REVISION=\"6b8336497800782f2f69572d40702b60423ec67f\"\nRUN git clone https://aur.archlinux.org/arachne-pnr-git.git \\\n && cd arachne-pnr-git \\\n && sed -i \"s arachne-pnr\\.git arachne-pnr\\.git#commit=$ARACHNE_PNR_REVISION \" PKGBUILD \\\n && makepkg --clean\nUSER root\nRUN pacman -U --noconfirm arachne-pnr-git/arachne-pnr-git*pkg*\n#   Assume user is going to be mounting his local repo at /mnt/turborav\nWORKDIR /mnt/turborav/hw\nUSER turbo\nCMD [\"/bin/bash\"]\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM sebomux/yosys\n#  Dockerfile.yosys\n#  CI does not* pull images from Docker hub, but instead builds a fresh\n#  image from the this Dockerfile. We do this because we want to test\n#  the Dockerfile, and also because we want to be able to test a\n#  dependency change in CI by editing the Dockerfile.\n#  Unfortunately, it is prohibitively expensive to build the gcc\n#  toolchain and Yosys on every build. So we put those two dependencies\n#  in their own Images / Dockerfile's: Dockerfile.yosys and\n#  Dockerfile.riscv.\n#  * It does pull the yosys and riscv image.\n#  TODO:Perhaps if we did a docker pull and then a docker build in CI\n#  we wouldn't have this issue and could achieve the same affect?\nRUN sed -i \"s/Required DatabaseOptional/Never/g\" /etc/pacman.conf\nRUN pacman --noconfirm -S clang gdb gtkwave java-commons-io java-environment libftdi-compat python scala scons \\\n && pacman --noconfirm -Scc\n#  Tool usage\n#  clang             # Speeds up the simulator compilation\n#  gtkwave           # Used to convert from vcd to fst\n#  java-commons-io   # Makes it easier to manipulate files from Scala\n#  java-environment  # Creates jars\n#  libftdi-compat    # Needed by icestorm to flash netlists\n#  scala             # Runs Chisel programs\n#  scons             # Builds turborav\n#  gdb               # Useful for debugging (unused by CI)\n#  Install chisel from the AUR\n#  Don't delete this code. It is handy for the times when it is\n#  necessary to build chisel from source.\n#  USER turbo\n#  ENV CHISEL_REVISION 560d5f37ca60e629def7fc3cae7b3d343893b561\n#  WORKDIR /home/turbo\n#  RUN git clone https://aur.archlinux.org/chisel-git.git \\\n#      && cd chisel-git \\\n#      && sed -i \"s chisel\\.git chisel\\.git#commit=$CHISEL_REVISION \" PKGBUILD \\\n#      && makepkg --clean\n#  USER root\n#  RUN pacman -U --noconfirm chisel-git/chisel-git*pkg*\n#  Install FPGA synthesis tools from the AUR\nWORKDIR /home/turbo\n#  Build Csmith\nUSER turbo\nRUN git clone https://aur.archlinux.org/csmith.git \\\n && cd csmith \\\n && makepkg --clean\nUSER root\nRUN pacman -U --noconfirm csmith/csmith*pkg*\n#  Install chisel from Maven\nUSER root\nENV CHISEL_VERSION=\"2.2.32\"\nENV SCALA_VERSION=\"2.11\"\nENV CHISEL_JAR=\"chisel_$SCALA_VERSION-$CHISEL_VERSION.jar\"\nRUN curl http://central.maven.org/maven2/edu/berkeley/cs/chisel_$SCALA_VERSION/$CHISEL_VERSION/$CHISEL_JAR > $CHISEL_JAR \\\n && install -Dm644 $CHISEL_JAR /usr/share/scala/chisel/chisel.jar\n#  Build icestorm\nENV ICESTORM_REVISION=\"4fbc8d20b65952eeef64a2e4c54b9b0ddfb7de07\"\nUSER turbo\nRUN git clone https://aur.archlinux.org/icestorm-git.git \\\n && cd icestorm-git \\\n && sed -i \"s icestorm\\.git icestorm\\.git#commit=$ICESTORM_REVISION \" PKGBUILD \\\n && makepkg --clean\nUSER root\nRUN pacman -U --noconfirm icestorm-git/icestorm-git*pkg*\n#  Build Arachne-pnr\nUSER turbo\nENV ARACHNE_PNR_REVISION=\"6b8336497800782f2f69572d40702b60423ec67f\"\nRUN git clone https://aur.archlinux.org/arachne-pnr-git.git \\\n && cd arachne-pnr-git \\\n && sed -i \"s arachne-pnr\\.git arachne-pnr\\.git#commit=$ARACHNE_PNR_REVISION \" PKGBUILD \\\n && makepkg --clean\nUSER root\nRUN pacman -U --noconfirm arachne-pnr-git/arachne-pnr-git*pkg*\n#  Assume user is going to be mounting his local repo at /mnt/turborav\nWORKDIR /mnt/turborav/hw\nUSER turbo\nCMD [\"/bin/bash\"]\n","injectedSmells":[],"originalDockerfileHash":"c8c762f35c4e65a2f49368df648d4f49","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM sebomux/yosys\n#   Dockerfile.yosys\n#   CI does not* pull images from Docker hub, but instead builds a fresh\n#   image from the this Dockerfile. We do this because we want to test\n#   the Dockerfile, and also because we want to be able to test a\n#   dependency change in CI by editing the Dockerfile.\n#   Unfortunately, it is prohibitively expensive to build the gcc\n#   toolchain and Yosys on every build. So we put those two dependencies\n#   in their own Images / Dockerfile's: Dockerfile.yosys and\n#   Dockerfile.riscv.\n#   * It does pull the yosys and riscv image.\n#   TODO:Perhaps if we did a docker pull and then a docker build in CI\n#   we wouldn't have this issue and could achieve the same affect?\nRUN sed -i \"s/Required DatabaseOptional/Never/g\" /etc/pacman.conf\nRUN pacman --noconfirm -S clang gdb gtkwave java-commons-io java-environment libftdi-compat python scala scons \\\n && pacman --noconfirm -Scc\n#   Tool usage\n#   clang             # Speeds up the simulator compilation\n#   gtkwave           # Used to convert from vcd to fst\n#   java-commons-io   # Makes it easier to manipulate files from Scala\n#   java-environment  # Creates jars\n#   libftdi-compat    # Needed by icestorm to flash netlists\n#   scala             # Runs Chisel programs\n#   scons             # Builds turborav\n#   gdb               # Useful for debugging (unused by CI)\n#   Install chisel from the AUR\n#   Don't delete this code. It is handy for the times when it is\n#   necessary to build chisel from source.\n#   USER turbo\n#   ENV CHISEL_REVISION 560d5f37ca60e629def7fc3cae7b3d343893b561\n#   WORKDIR /home/turbo\n#   RUN git clone https://aur.archlinux.org/chisel-git.git \\\n#       && cd chisel-git \\\n#       && sed -i \"s chisel\\.git chisel\\.git#commit=$CHISEL_REVISION \" PKGBUILD \\\n#       && makepkg --clean\n#   USER root\n#   RUN pacman -U --noconfirm chisel-git/chisel-git*pkg*\n#   Install FPGA synthesis tools from the AUR\nWORKDIR /home/turbo\n#   Build Csmith\nUSER turbo\nRUN git clone https://aur.archlinux.org/csmith.git \\\n && cd csmith \\\n && makepkg --clean\nUSER root\nRUN pacman -U --noconfirm csmith/csmith*pkg*\n#   Install chisel from Maven\nUSER root\nENV CHISEL_VERSION=\"2.2.32\"\nENV SCALA_VERSION=\"2.11\"\nENV CHISEL_JAR=\"chisel_$SCALA_VERSION-$CHISEL_VERSION.jar\"\nRUN curl http://central.maven.org/maven2/edu/berkeley/cs/chisel_$SCALA_VERSION/$CHISEL_VERSION/$CHISEL_JAR > $CHISEL_JAR \\\n && install -Dm644 $CHISEL_JAR /usr/share/scala/chisel/chisel.jar\n#   Build icestorm\nENV ICESTORM_REVISION=\"4fbc8d20b65952eeef64a2e4c54b9b0ddfb7de07\"\nUSER turbo\nRUN git clone https://aur.archlinux.org/icestorm-git.git \\\n && cd icestorm-git \\\n && sed -i \"s icestorm\\.git icestorm\\.git#commit=$ICESTORM_REVISION \" PKGBUILD \\\n && makepkg --clean\nUSER root\nRUN pacman -U --noconfirm icestorm-git/icestorm-git*pkg*\n#   Build Arachne-pnr\nUSER turbo\nENV ARACHNE_PNR_REVISION=\"6b8336497800782f2f69572d40702b60423ec67f\"\nRUN git clone https://aur.archlinux.org/arachne-pnr-git.git \\\n && cd arachne-pnr-git \\\n && sed -i \"s arachne-pnr\\.git arachne-pnr\\.git#commit=$ARACHNE_PNR_REVISION \" PKGBUILD \\\n && makepkg --clean\nUSER root\nRUN pacman -U --noconfirm arachne-pnr-git/arachne-pnr-git*pkg*\n#   Assume user is going to be mounting his local repo at /mnt/turborav\nWORKDIR /mnt/turborav/hw\nUSER turbo\nCMD [\"/bin/bash\"]\n","originalDockerfileUglifiedHash":"867ddb686c4c5268a1205e79dfcee65a","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/b360475f1dd2a069472cf581519677d46503d3ad.dockerfile"}