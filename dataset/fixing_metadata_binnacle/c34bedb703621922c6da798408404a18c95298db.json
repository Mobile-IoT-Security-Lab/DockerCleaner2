{"seed":163663113,"processedDockerfileHash":"c1786c6a8f8ca97628e0fb8ff4ad9f6f","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM ubuntu:16.04\nMAINTAINER a.sevilla@anchormen.nl\nENV SPARK_VERSION=\"2.2.0\"\nENV R_BASE_VERSION=\"3.4.3\"\nENV ANACONDA_VERSION=\"5.0.1\"\nRUN apt-get update -y \\\n && apt-get install --no-install-recommends apt-transport-https=1.2.35 ca-certificates=20210119~16.04.1 curl=7.47.0-1ubuntu2.19 default-jdk=2:1.8-56ubuntu2 ed=1.10-2 file=1:5.25-2ubuntu1.4 fonts-texgyre=20150923-1 git=1:2.7.4-0ubuntu1.10 less=481-2.1ubuntu0.2 libapparmor1=2.10.95-0ubuntu2.11 libcurl4-openssl-dev=7.47.0-1ubuntu2.19 libedit2=3.1-20150325-1ubuntu2 libgdal-dev=1.11.3+dfsg-3build2 libgeos-dev=3.5.0-1ubuntu2 libpq-dev=9.5.25-0ubuntu0.16.04.1 libproj-dev=4.9.2-2 libssh2-1=1.5.0-2ubuntu0.1 libssh2-1-dev=1.5.0-2ubuntu0.1 libssl-dev=1.0.2g-1ubuntu4.20 libxml2-dev=2.9.3+dfsg1-1ubuntu0.7 locales=2.23-0ubuntu11.3 lsb-release=9.20160110ubuntu0.2 nano=2.5.3-2ubuntu2 openconnect=7.06-2build2 openssh-client=1:7.2p2-4ubuntu2.10 psmisc=22.21-2.1ubuntu0.1 python-setuptools=20.7.0-1 software-properties-common=0.96.20.10 sudo=1.8.16-0ubuntu1.10 unzip=6.0-20ubuntu1.1 vim-tiny=2:7.4.1689-3ubuntu1.5 wget=1.17.1-1ubuntu1.5 -y \\\n && rm -rf /var/lib/apt/lists/*\n#   Configure default locale, see https://github.com/rocker-org/rocker/issues/19\nRUN echo \"en_US.UTF-8 UTF-8\" >> /etc/locale.gen \\\n && locale-gen en_US.utf8 \\\n && /usr/sbin/update-locale LANG=en_US.UTF-8\nENV LC_ALL=\"en_US.UTF-8\"\nENV LANG=\"en_US.UTF-8\"\n#   Spark\nRUN mkdir -p /opt \\\n && cd /opt \\\n && curl https://d3kbcqa49mib13.cloudfront.net/spark-${SPARK_VERSION}-bin-hadoop2.7.tgz | tar -zx \\\n && ln -s spark-${SPARK_VERSION}-bin-hadoop2.7 spark \\\n && echo Spark ${SPARK_VERSION} installed in /opt\nCOPY start-common.sh start-worker.sh start-master.sh /\nRUN chmod +x /start-common.sh /start-master.sh /start-worker.sh\nENV JAVA_HOME=\"/usr/lib/jvm/default-java\"\nENV PATH=\"$PATH:/opt/spark/bin\"\nENV SPARK_HOME=\"/opt/spark\"\n#   R\nRUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E298A3A825C0D65DFD57CBB651716619E084DAB9 \\\n && add-apt-repository 'deb [arch=amd64,i386] https://cran.rstudio.com/bin/linux/ubuntu xenial/' \\\n && apt-get update -y \\\n && apt-get install --no-install-recommends r-base=${R_BASE_VERSION}* r-base-dev=${R_BASE_VERSION}* r-recommended=${R_BASE_VERSION}* -y \\\n && echo 'options(repos = c(CRAN = \"https://cran.rstudio.com/\"), download.file.method = \"libcurl\")' >> /etc/R/Rprofile.site \\\n && rm -rf /tmp/downloaded_packages/ /tmp/*.rds \\\n && rm -rf /var/lib/apt/lists/* \\\n && R -e \"install.packages('devtools')\"\nENV R_HOME=\"/usr/lib/R\"\n#   Install additional R packages from CRAN or github\n#   For Zeppelin\nRUN R -e \"install.packages(c('knitr', 'ggplot2', 'googleVis', 'data.table', 'Rcpp'))\"\nRUN R -e \"devtools::install_github('ramnathv/rCharts')\"\n#   Time Series Forecast\nRUN R -e \"devtools::install_github('robjhyndman/forecast')\"\n#   PCA Analysis\nRUN R -e \"install.packages('factoextra')\"\n#   Python 3.6 and ANACONDA\nRUN echo 'export PATH=/opt/conda/bin:$PATH' > /etc/profile.d/conda.sh \\\n && wget --quiet https://repo.continuum.io/archive/Anaconda3-${ANACONDA_VERSION}-Linux-x86_64.sh -O ~/anaconda.sh \\\n && /bin/bash ~/anaconda.sh -b -p /opt/conda \\\n && rm ~/anaconda.sh\nRUN TINI_VERSION=`curl https://github.com/krallin/tini/releases/latest | grep -o \"/v.*\\\\\"\" | sed 's:^..\\\\(.*\\\\).$:\\\\1:' ` \\\n && curl -L \"https://github.com/krallin/tini/releases/download/v${TINI_VERSION}/tini_${TINI_VERSION}.deb\" > tini.deb \\\n && dpkg -i tini.deb \\\n && rm tini.deb \\\n && apt-get clean\nRUN apt-get update \\\n && apt-get install --no-install-recommends python3-pip=8.1.1-2ubuntu0.6 -y\nENV PATH=\"$PATH:/opt/conda/bin\"\nENV PYTHON_VERSION=\"3.6.3\"\nENV PYSPARK_PYTHON=\"python3.6\"\nENV PYSPARK_DRIVER_PYTHON=\"python3.6\"\nENV PYTHONPATH=\"${SPARK_HOME}/python/:${SPARK_HOME}/python/lib/py4j-0.10.4-src.zip:${PYTHONPATH}\"\n#   Packages for HDFS interaction\nRUN pip install hdfs==2.7.0 pywebhdfs==0.4.1\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:16.04\nMAINTAINER a.sevilla@anchormen.nl\nENV SPARK_VERSION=\"2.2.0\"\nENV R_BASE_VERSION=\"3.4.3\"\nENV ANACONDA_VERSION=\"5.0.1\"\nRUN apt-get update -y \\\n && apt-get install --no-install-recommends apt-transport-https ca-certificates curl default-jdk ed file fonts-texgyre git less libapparmor1 libcurl4-openssl-dev libedit2 libgdal-dev libgeos-dev libpq-dev libproj-dev libssh2-1 libssh2-1-dev libssl-dev libxml2-dev locales lsb-release nano openconnect openssh-client psmisc python-setuptools software-properties-common sudo unzip vim-tiny wget -y \\\n && rm -rf /var/lib/apt/lists/*\n#  Configure default locale, see https://github.com/rocker-org/rocker/issues/19\nRUN echo \"en_US.UTF-8 UTF-8\" >> /etc/locale.gen \\\n && locale-gen en_US.utf8 \\\n && /usr/sbin/update-locale LANG=en_US.UTF-8\nENV LC_ALL=\"en_US.UTF-8\"\nENV LANG=\"en_US.UTF-8\"\n#  Spark\nRUN mkdir -p /opt \\\n && cd /opt \\\n && curl https://d3kbcqa49mib13.cloudfront.net/spark-${SPARK_VERSION}-bin-hadoop2.7.tgz | tar -zx \\\n && ln -s spark-${SPARK_VERSION}-bin-hadoop2.7 spark \\\n && echo Spark ${SPARK_VERSION} installed in /opt\nADD start-common.sh start-worker.sh start-master.sh /\nRUN chmod +x /start-common.sh /start-master.sh /start-worker.sh\nENV JAVA_HOME=\"/usr/lib/jvm/default-java\"\nENV PATH=\"$PATH:/opt/spark/bin\"\nENV SPARK_HOME=\"/opt/spark\"\n#  R\nRUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E298A3A825C0D65DFD57CBB651716619E084DAB9 \\\n && add-apt-repository 'deb [arch=amd64,i386] https://cran.rstudio.com/bin/linux/ubuntu xenial/' \\\n && apt-get update -y \\\n && apt-get install --no-install-recommends r-base=${R_BASE_VERSION}* r-base-dev=${R_BASE_VERSION}* r-recommended=${R_BASE_VERSION}* -y \\\n && echo 'options(repos = c(CRAN = \"https://cran.rstudio.com/\"), download.file.method = \"libcurl\")' >> /etc/R/Rprofile.site \\\n && rm -rf /tmp/downloaded_packages/ /tmp/*.rds \\\n && rm -rf /var/lib/apt/lists/* \\\n && R -e \"install.packages('devtools')\"\nENV R_HOME=\"/usr/lib/R\"\n#  Install additional R packages from CRAN or github\n#  For Zeppelin\nRUN R -e \"install.packages(c('knitr', 'ggplot2', 'googleVis', 'data.table', 'Rcpp'))\"\nRUN R -e \"devtools::install_github('ramnathv/rCharts')\"\n#  Time Series Forecast\nRUN R -e \"devtools::install_github('robjhyndman/forecast')\"\n#  PCA Analysis\nRUN R -e \"install.packages('factoextra')\"\n#  Python 3.6 and ANACONDA\nRUN echo 'export PATH=/opt/conda/bin:$PATH' > /etc/profile.d/conda.sh \\\n && wget --quiet https://repo.continuum.io/archive/Anaconda3-${ANACONDA_VERSION}-Linux-x86_64.sh -O ~/anaconda.sh \\\n && /bin/bash ~/anaconda.sh -b -p /opt/conda \\\n && rm ~/anaconda.sh\nRUN TINI_VERSION=`curl https://github.com/krallin/tini/releases/latest | grep -o \"/v.*\\\\\"\" | sed 's:^..\\\\(.*\\\\).$:\\\\1:' ` \\\n && curl -L \"https://github.com/krallin/tini/releases/download/v${TINI_VERSION}/tini_${TINI_VERSION}.deb\" > tini.deb \\\n && dpkg -i tini.deb \\\n && rm tini.deb \\\n && apt-get clean\nRUN apt-get update \\\n && apt-get install python3-pip -y\nENV PATH=\"$PATH:/opt/conda/bin\"\nENV PYTHON_VERSION=\"3.6.3\"\nENV PYSPARK_PYTHON=\"python3.6\"\nENV PYSPARK_DRIVER_PYTHON=\"python3.6\"\nENV PYTHONPATH=\"${SPARK_HOME}/python/:${SPARK_HOME}/python/lib/py4j-0.10.4-src.zip:${PYTHONPATH}\"\n#  Packages for HDFS interaction\nRUN pip install hdfs pywebhdfs\n","injectedSmells":[],"originalDockerfileHash":"afd8f2458572caf77938de8109c14d09","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:16.04\nMAINTAINER a.sevilla@anchormen.nl\nENV SPARK_VERSION=\"2.2.0\"\nENV R_BASE_VERSION=\"3.4.3\"\nENV ANACONDA_VERSION=\"5.0.1\"\nRUN apt-get update -y \\\n && apt-get install --no-install-recommends apt-transport-https ca-certificates curl default-jdk ed file fonts-texgyre git less libapparmor1 libcurl4-openssl-dev libedit2 libgdal-dev libgeos-dev libpq-dev libproj-dev libssh2-1 libssh2-1-dev libssl-dev libxml2-dev locales lsb-release nano openconnect openssh-client psmisc python-setuptools software-properties-common sudo unzip vim-tiny wget -y \\\n && rm -rf /var/lib/apt/lists/*\n#   Configure default locale, see https://github.com/rocker-org/rocker/issues/19\nRUN echo \"en_US.UTF-8 UTF-8\" >> /etc/locale.gen \\\n && locale-gen en_US.utf8 \\\n && /usr/sbin/update-locale LANG=en_US.UTF-8\nENV LC_ALL=\"en_US.UTF-8\"\nENV LANG=\"en_US.UTF-8\"\n#   Spark\nRUN mkdir -p /opt \\\n && cd /opt \\\n && curl https://d3kbcqa49mib13.cloudfront.net/spark-${SPARK_VERSION}-bin-hadoop2.7.tgz | tar -zx \\\n && ln -s spark-${SPARK_VERSION}-bin-hadoop2.7 spark \\\n && echo Spark ${SPARK_VERSION} installed in /opt\nADD start-common.sh start-worker.sh start-master.sh /\nRUN chmod +x /start-common.sh /start-master.sh /start-worker.sh\nENV JAVA_HOME=\"/usr/lib/jvm/default-java\"\nENV PATH=\"$PATH:/opt/spark/bin\"\nENV SPARK_HOME=\"/opt/spark\"\n#   R\nRUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E298A3A825C0D65DFD57CBB651716619E084DAB9 \\\n && add-apt-repository 'deb [arch=amd64,i386] https://cran.rstudio.com/bin/linux/ubuntu xenial/' \\\n && apt-get update -y \\\n && apt-get install --no-install-recommends r-base=${R_BASE_VERSION}* r-base-dev=${R_BASE_VERSION}* r-recommended=${R_BASE_VERSION}* -y \\\n && echo 'options(repos = c(CRAN = \"https://cran.rstudio.com/\"), download.file.method = \"libcurl\")' >> /etc/R/Rprofile.site \\\n && rm -rf /tmp/downloaded_packages/ /tmp/*.rds \\\n && rm -rf /var/lib/apt/lists/* \\\n && R -e \"install.packages('devtools')\"\nENV R_HOME=\"/usr/lib/R\"\n#   Install additional R packages from CRAN or github\n#   For Zeppelin\nRUN R -e \"install.packages(c('knitr', 'ggplot2', 'googleVis', 'data.table', 'Rcpp'))\"\nRUN R -e \"devtools::install_github('ramnathv/rCharts')\"\n#   Time Series Forecast\nRUN R -e \"devtools::install_github('robjhyndman/forecast')\"\n#   PCA Analysis\nRUN R -e \"install.packages('factoextra')\"\n#   Python 3.6 and ANACONDA\nRUN echo 'export PATH=/opt/conda/bin:$PATH' > /etc/profile.d/conda.sh \\\n && wget --quiet https://repo.continuum.io/archive/Anaconda3-${ANACONDA_VERSION}-Linux-x86_64.sh -O ~/anaconda.sh \\\n && /bin/bash ~/anaconda.sh -b -p /opt/conda \\\n && rm ~/anaconda.sh\nRUN TINI_VERSION=`curl https://github.com/krallin/tini/releases/latest | grep -o \"/v.*\\\\\"\" | sed 's:^..\\\\(.*\\\\).$:\\\\1:' ` \\\n && curl -L \"https://github.com/krallin/tini/releases/download/v${TINI_VERSION}/tini_${TINI_VERSION}.deb\" > tini.deb \\\n && dpkg -i tini.deb \\\n && rm tini.deb \\\n && apt-get clean\nRUN apt-get update \\\n && apt-get install python3-pip -y\nENV PATH=\"$PATH:/opt/conda/bin\"\nENV PYTHON_VERSION=\"3.6.3\"\nENV PYSPARK_PYTHON=\"python3.6\"\nENV PYSPARK_DRIVER_PYTHON=\"python3.6\"\nENV PYTHONPATH=\"${SPARK_HOME}/python/:${SPARK_HOME}/python/lib/py4j-0.10.4-src.zip:${PYTHONPATH}\"\n#   Packages for HDFS interaction\nRUN pip install hdfs pywebhdfs\n","originalDockerfileUglifiedHash":"d87ed980eba6c73d2614b79a31714a92","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/c34bedb703621922c6da798408404a18c95298db.dockerfile"}