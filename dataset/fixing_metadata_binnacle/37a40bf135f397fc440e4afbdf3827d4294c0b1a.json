{"seed":2286092227,"processedDockerfileHash":"6549e9dc3b51d08b31c2590610f30c3c","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Dockerfile - alpine-fat\n#   https://github.com/duythongle/k8s-openresty-streaming\n#\n#   This is an alpine-based build based on\n#   https://github.com/openresty/docker-openresty/tree/master/alpine-fat\nFROM alpine:3.7\nLABEL maintainer=\"Tom Le <thongld2012@gmail.com>\"\n#   Docker Build Arguments\nARG RESTY_VERSION=\"1.13.6.1\"\nARG RESTY_LUAROCKS_VERSION=\"2.4.3\"\nARG RESTY_OPENSSL_VERSION=\"1.0.2k\"\nARG RESTY_PCRE_VERSION=\"8.41\"\nARG RESTY_J=\"1\"\nARG TELIZE_VERSION=\"2.0.0\"\nARG GEOIP2_VERSION=\"2.0\"\nARG RTMP_VERSION=\"1.2.1\"\nARG RESTY_CONFIG_OPTIONS=\" --with-file-aio  --with-http_addition_module  --with-http_auth_request_module  --with-http_dav_module  --with-http_flv_module  --with-http_gunzip_module  --with-http_gzip_static_module  --with-http_image_filter_module=dynamic  --with-http_geoip_module=dynamic  --with-http_mp4_module  --with-http_random_index_module  --with-http_realip_module  --with-http_secure_link_module  --with-http_slice_module  --with-http_ssl_module  --with-http_stub_status_module  --with-http_sub_module  --with-http_v2_module  --with-http_xslt_module=dynamic  --with-ipv6  --with-mail  --with-mail_ssl_module  --with-md5-asm  --with-pcre-jit  --with-sha1-asm  --with-stream  --with-stream_ssl_module  --with-threads  --add-dynamic-module=/tmp/geoip2-${GEOIP2_VERSION}  --add-dynamic-module=/tmp/rtmp-${RTMP_VERSION}\"\nARG RESTY_CONFIG_OPTIONS_MORE=\"\"\n#   These are not intended to be user-specified\nARG _RESTY_CONFIG_DEPS=\"--with-openssl=/tmp/openssl-${RESTY_OPENSSL_VERSION} --with-pcre=/tmp/pcre-${RESTY_PCRE_VERSION}\"\n#   1) Install apk dependencies\n#   2) Download and untar OpenSSL, PCRE, and OpenResty\n#   3) Build OpenResty\n#   4) Cleanup\nRUN apk add curl=7.61.1-r3 gd-dev=2.2.5-r3 geoip-dev=1.6.11-r0 libxslt-dev=1.1.31-r2 perl-dev=5.26.3-r0 readline-dev=7.0.003-r0 zlib-dev=1.2.11-r1 libmaxminddb-dev=1.3.1-r0 --no-cache --virtual .build-deps \\\n && apk add libmaxminddb=1.3.1-r0 openssl=1.0.2t-r0 sudo=1.8.21_p2-r1 bash=4.4.19-r1 build-base=0.5-r0 curl=7.61.1-r3 gd=2.2.5-r3 geoip=1.6.11-r0 libgcc=6.4.0-r5 libxslt=1.1.31-r2 linux-headers=4.4.6-r2 make=4.2.1-r0 perl=5.26.3-r0 unzip=6.0-r3 zlib=1.2.11-r1 --no-cache \\\n && mkdir -p /tmp/geoip2-${GEOIP2_VERSION} \\\n && curl -fSL https://github.com/leev/ngx_http_geoip2_module/archive/${GEOIP2_VERSION}.tar.gz | tar xzf - -C /tmp/geoip2-${GEOIP2_VERSION} --strip-components=1 \\\n && mkdir -p /tmp/rtmp-${RTMP_VERSION} \\\n && curl -fSL https://github.com/arut/nginx-rtmp-module/archive/v${RTMP_VERSION}.tar.gz | tar xzf - -C /tmp/rtmp-${RTMP_VERSION} --strip-components=1 \\\n && cd /tmp \\\n && curl -fSL https://www.openssl.org/source/openssl-${RESTY_OPENSSL_VERSION}.tar.gz -o openssl-${RESTY_OPENSSL_VERSION}.tar.gz \\\n && tar xzf openssl-${RESTY_OPENSSL_VERSION}.tar.gz \\\n && curl -fSL https://ftp.pcre.org/pub/pcre/pcre-${RESTY_PCRE_VERSION}.tar.gz -o pcre-${RESTY_PCRE_VERSION}.tar.gz \\\n && tar xzf pcre-${RESTY_PCRE_VERSION}.tar.gz \\\n && curl -fSL https://openresty.org/download/openresty-${RESTY_VERSION}.tar.gz -o openresty-${RESTY_VERSION}.tar.gz \\\n && tar xzf openresty-${RESTY_VERSION}.tar.gz \\\n && cd /tmp/openresty-${RESTY_VERSION} \\\n && ./configure -j${RESTY_J} ${_RESTY_CONFIG_DEPS} ${RESTY_CONFIG_OPTIONS} ${RESTY_CONFIG_OPTIONS_MORE} \\\n && make -j${RESTY_J} \\\n && make -j${RESTY_J} install \\\n && cd /tmp \\\n && rm -rf openssl-${RESTY_OPENSSL_VERSION} openssl-${RESTY_OPENSSL_VERSION}.tar.gz openresty-${RESTY_VERSION}.tar.gz openresty-${RESTY_VERSION} pcre-${RESTY_PCRE_VERSION}.tar.gz pcre-${RESTY_PCRE_VERSION} \\\n && echo curl -fSL https://github.com/luarocks/luarocks/archive/${RESTY_LUAROCKS_VERSION}.tar.gz -o luarocks-${RESTY_LUAROCKS_VERSION}.tar.gz \\\n && curl -fSL https://github.com/luarocks/luarocks/archive/${RESTY_LUAROCKS_VERSION}.tar.gz -o luarocks-${RESTY_LUAROCKS_VERSION}.tar.gz \\\n && tar xzf luarocks-${RESTY_LUAROCKS_VERSION}.tar.gz \\\n && cd luarocks-${RESTY_LUAROCKS_VERSION} \\\n && ./configure --prefix=/usr/local/openresty/luajit --with-lua=/usr/local/openresty/luajit --lua-suffix=jit-2.1.0-beta3 --with-lua-include=/usr/local/openresty/luajit/include/luajit-2.1 \\\n && make build \\\n && make install \\\n && cd /tmp \\\n && rm -rf luarocks-${RESTY_LUAROCKS_VERSION} luarocks-${RESTY_LUAROCKS_VERSION}.tar.gz \\\n && apk add gettext=0.19.8.1-r1 --no-cache --virtual .gettext \\\n && mv /usr/bin/envsubst /tmp/ \\\n && runDeps=\"$( scanelf --needed --nobanner /tmp/envsubst | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }' | sort -u | xargs -r apk info --installed | sort -u ;)\" \\\n && apk add --no-cache --virtual $runDeps \\\n && mv /tmp/envsubst /usr/local/bin/ \\\n && ln -sf /dev/stdout /usr/local/openresty/nginx/logs/access.log \\\n && ln -sf /dev/stderr /usr/local/openresty/nginx/logs/error.log\nRUN sudo -H /usr/local/openresty/luajit/bin/luarocks install lua-resty-http \\\n && sudo -H /usr/local/openresty/luajit/bin/luarocks install lua-resty-auto-ssl \\\n && sudo -H /usr/local/openresty/luajit/bin/luarocks install lua-iconv\nRUN openssl req -new -newkey rsa:2048 -days 3650 -nodes -x509 -subj '/CN=sni-support-required-for-valid-ssl' -keyout /etc/ssl/resty-auto-ssl-fallback.key -out /etc/ssl/resty-auto-ssl-fallback.crt\nRUN which wget &> /dev/null || apt-get install --no-install-recommends wget=1.20.3 ; wget --no-verbose --output-document /usr/local/openresty/nginx/conf/nginx.conf https://github.com/duythongle/k8s-openresty-streaming/raw/master/nginx.conf\n#  ADD conf.d /usr/local/openresty/nginx/conf/conf.d\nRUN mkdir -p /tmp/telize-v${TELIZE_VERSION} \\\n && curl -fSL https://github.com/fcambus/telize/archive/${TELIZE_VERSION}.tar.gz | tar xzf - -C /tmp/telize-v${TELIZE_VERSION} --strip-components=1 \\\n && cp /tmp/telize-v${TELIZE_VERSION}/country-code3.conf /usr/local/openresty/nginx/conf \\\n && cp /tmp/telize-v${TELIZE_VERSION}/timezone-offset.conf /usr/local/openresty/nginx/conf \\\n && cp /tmp/telize-v${TELIZE_VERSION}/telize.conf /usr/local/openresty/nginx/conf\nRUN mkdir -p /var/db/GeoIP \\\n && curl -fSL https://geolite.maxmind.com/download/geoip/database/GeoLite2-City.tar.gz | tar xzf - -C /var/db/GeoIP --strip-components=1 \\\n && curl -fSL https://geolite.maxmind.com/download/geoip/database/GeoLite2-ASN.tar.gz | tar xzf - -C /var/db/GeoIP --strip-components=1\nRUN rm -rf /tmp/* \\\n && apk del .build-deps .gettext\nENV PATH=\"$PATH:/usr/local/openresty/luajit/bin:/usr/local/openresty/nginx/sbin:/usr/local/openresty/bin\"\nCMD [\"/usr/local/openresty/bin/openresty\", \"-g\", \"daemon\", \"off\"]\nRUN addgroup -S docker-user ; adduser -S -G docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Dockerfile - alpine-fat\n#  https://github.com/duythongle/k8s-openresty-streaming\n#\n#  This is an alpine-based build based on\n#  https://github.com/openresty/docker-openresty/tree/master/alpine-fat\nFROM alpine:3.7\nLABEL maintainer=\"Tom Le <thongld2012@gmail.com>\"\n#  Docker Build Arguments\nARG RESTY_VERSION=\"1.13.6.1\"\nARG RESTY_LUAROCKS_VERSION=\"2.4.3\"\nARG RESTY_OPENSSL_VERSION=\"1.0.2k\"\nARG RESTY_PCRE_VERSION=\"8.41\"\nARG RESTY_J=\"1\"\nARG TELIZE_VERSION=\"2.0.0\"\nARG GEOIP2_VERSION=\"2.0\"\nARG RTMP_VERSION=\"1.2.1\"\nARG RESTY_CONFIG_OPTIONS=\" --with-file-aio  --with-http_addition_module  --with-http_auth_request_module  --with-http_dav_module  --with-http_flv_module  --with-http_gunzip_module  --with-http_gzip_static_module  --with-http_image_filter_module=dynamic  --with-http_geoip_module=dynamic  --with-http_mp4_module  --with-http_random_index_module  --with-http_realip_module  --with-http_secure_link_module  --with-http_slice_module  --with-http_ssl_module  --with-http_stub_status_module  --with-http_sub_module  --with-http_v2_module  --with-http_xslt_module=dynamic  --with-ipv6  --with-mail  --with-mail_ssl_module  --with-md5-asm  --with-pcre-jit  --with-sha1-asm  --with-stream  --with-stream_ssl_module  --with-threads  --add-dynamic-module=/tmp/geoip2-${GEOIP2_VERSION}  --add-dynamic-module=/tmp/rtmp-${RTMP_VERSION}\"\nARG RESTY_CONFIG_OPTIONS_MORE=\"\"\n#  These are not intended to be user-specified\nARG _RESTY_CONFIG_DEPS=\"--with-openssl=/tmp/openssl-${RESTY_OPENSSL_VERSION} --with-pcre=/tmp/pcre-${RESTY_PCRE_VERSION}\"\n#  1) Install apk dependencies\n#  2) Download and untar OpenSSL, PCRE, and OpenResty\n#  3) Build OpenResty\n#  4) Cleanup\nRUN apk add --no-cache --virtual .build-deps curl gd-dev geoip-dev libxslt-dev perl-dev readline-dev zlib-dev libmaxminddb-dev \\\n && apk add --no-cache libmaxminddb openssl sudo bash build-base curl gd geoip libgcc libxslt linux-headers make perl unzip zlib \\\n && mkdir -p /tmp/geoip2-${GEOIP2_VERSION} \\\n && curl -fSL https://github.com/leev/ngx_http_geoip2_module/archive/${GEOIP2_VERSION}.tar.gz | tar xzf - -C /tmp/geoip2-${GEOIP2_VERSION} --strip-components=1 \\\n && mkdir -p /tmp/rtmp-${RTMP_VERSION} \\\n && curl -fSL https://github.com/arut/nginx-rtmp-module/archive/v${RTMP_VERSION}.tar.gz | tar xzf - -C /tmp/rtmp-${RTMP_VERSION} --strip-components=1 \\\n && cd /tmp \\\n && curl -fSL https://www.openssl.org/source/openssl-${RESTY_OPENSSL_VERSION}.tar.gz -o openssl-${RESTY_OPENSSL_VERSION}.tar.gz \\\n && tar xzf openssl-${RESTY_OPENSSL_VERSION}.tar.gz \\\n && curl -fSL https://ftp.pcre.org/pub/pcre/pcre-${RESTY_PCRE_VERSION}.tar.gz -o pcre-${RESTY_PCRE_VERSION}.tar.gz \\\n && tar xzf pcre-${RESTY_PCRE_VERSION}.tar.gz \\\n && curl -fSL https://openresty.org/download/openresty-${RESTY_VERSION}.tar.gz -o openresty-${RESTY_VERSION}.tar.gz \\\n && tar xzf openresty-${RESTY_VERSION}.tar.gz \\\n && cd /tmp/openresty-${RESTY_VERSION} \\\n && ./configure -j${RESTY_J} ${_RESTY_CONFIG_DEPS} ${RESTY_CONFIG_OPTIONS} ${RESTY_CONFIG_OPTIONS_MORE} \\\n && make -j${RESTY_J} \\\n && make -j${RESTY_J} install \\\n && cd /tmp \\\n && rm -rf openssl-${RESTY_OPENSSL_VERSION} openssl-${RESTY_OPENSSL_VERSION}.tar.gz openresty-${RESTY_VERSION}.tar.gz openresty-${RESTY_VERSION} pcre-${RESTY_PCRE_VERSION}.tar.gz pcre-${RESTY_PCRE_VERSION} \\\n && echo curl -fSL https://github.com/luarocks/luarocks/archive/${RESTY_LUAROCKS_VERSION}.tar.gz -o luarocks-${RESTY_LUAROCKS_VERSION}.tar.gz \\\n && curl -fSL https://github.com/luarocks/luarocks/archive/${RESTY_LUAROCKS_VERSION}.tar.gz -o luarocks-${RESTY_LUAROCKS_VERSION}.tar.gz \\\n && tar xzf luarocks-${RESTY_LUAROCKS_VERSION}.tar.gz \\\n && cd luarocks-${RESTY_LUAROCKS_VERSION} \\\n && ./configure --prefix=/usr/local/openresty/luajit --with-lua=/usr/local/openresty/luajit --lua-suffix=jit-2.1.0-beta3 --with-lua-include=/usr/local/openresty/luajit/include/luajit-2.1 \\\n && make build \\\n && make install \\\n && cd /tmp \\\n && rm -rf luarocks-${RESTY_LUAROCKS_VERSION} luarocks-${RESTY_LUAROCKS_VERSION}.tar.gz \\\n && apk add --no-cache --virtual .gettext gettext \\\n && mv /usr/bin/envsubst /tmp/ \\\n && runDeps=\"$( scanelf --needed --nobanner /tmp/envsubst | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }' | sort -u | xargs -r apk info --installed | sort -u ;)\" \\\n && apk add --no-cache --virtual $runDeps \\\n && mv /tmp/envsubst /usr/local/bin/ \\\n && ln -sf /dev/stdout /usr/local/openresty/nginx/logs/access.log \\\n && ln -sf /dev/stderr /usr/local/openresty/nginx/logs/error.log\nRUN sudo -H /usr/local/openresty/luajit/bin/luarocks install lua-resty-http \\\n && sudo -H /usr/local/openresty/luajit/bin/luarocks install lua-resty-auto-ssl \\\n && sudo -H /usr/local/openresty/luajit/bin/luarocks install lua-iconv\nRUN openssl req -new -newkey rsa:2048 -days 3650 -nodes -x509 -subj '/CN=sni-support-required-for-valid-ssl' -keyout /etc/ssl/resty-auto-ssl-fallback.key -out /etc/ssl/resty-auto-ssl-fallback.crt\nADD https://github.com/duythongle/k8s-openresty-streaming/raw/master/nginx.conf /usr/local/openresty/nginx/conf/nginx.conf\n# ADD conf.d /usr/local/openresty/nginx/conf/conf.d\nRUN mkdir -p /tmp/telize-v${TELIZE_VERSION} \\\n && curl -fSL https://github.com/fcambus/telize/archive/${TELIZE_VERSION}.tar.gz | tar xzf - -C /tmp/telize-v${TELIZE_VERSION} --strip-components=1 \\\n && cp /tmp/telize-v${TELIZE_VERSION}/country-code3.conf /usr/local/openresty/nginx/conf \\\n && cp /tmp/telize-v${TELIZE_VERSION}/timezone-offset.conf /usr/local/openresty/nginx/conf \\\n && cp /tmp/telize-v${TELIZE_VERSION}/telize.conf /usr/local/openresty/nginx/conf\nRUN mkdir -p /var/db/GeoIP \\\n && curl -fSL https://geolite.maxmind.com/download/geoip/database/GeoLite2-City.tar.gz | tar xzf - -C /var/db/GeoIP --strip-components=1 \\\n && curl -fSL https://geolite.maxmind.com/download/geoip/database/GeoLite2-ASN.tar.gz | tar xzf - -C /var/db/GeoIP --strip-components=1\nRUN rm -rf /tmp/* \\\n && apk del .build-deps .gettext\nENV PATH=\"$PATH:/usr/local/openresty/luajit/bin:/usr/local/openresty/nginx/sbin:/usr/local/openresty/bin\"\nCMD [\"/usr/local/openresty/bin/openresty\", \"-g\", \"daemon\", \"off\"]\n","injectedSmells":[],"originalDockerfileHash":"6d176e73956a418f71a162fe8842ffc3","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Dockerfile - alpine-fat\n#   https://github.com/duythongle/k8s-openresty-streaming\n#\n#   This is an alpine-based build based on\n#   https://github.com/openresty/docker-openresty/tree/master/alpine-fat\nFROM alpine:3.7\nLABEL maintainer=\"Tom Le <thongld2012@gmail.com>\"\n#   Docker Build Arguments\nARG RESTY_VERSION=\"1.13.6.1\"\nARG RESTY_LUAROCKS_VERSION=\"2.4.3\"\nARG RESTY_OPENSSL_VERSION=\"1.0.2k\"\nARG RESTY_PCRE_VERSION=\"8.41\"\nARG RESTY_J=\"1\"\nARG TELIZE_VERSION=\"2.0.0\"\nARG GEOIP2_VERSION=\"2.0\"\nARG RTMP_VERSION=\"1.2.1\"\nARG RESTY_CONFIG_OPTIONS=\" --with-file-aio  --with-http_addition_module  --with-http_auth_request_module  --with-http_dav_module  --with-http_flv_module  --with-http_gunzip_module  --with-http_gzip_static_module  --with-http_image_filter_module=dynamic  --with-http_geoip_module=dynamic  --with-http_mp4_module  --with-http_random_index_module  --with-http_realip_module  --with-http_secure_link_module  --with-http_slice_module  --with-http_ssl_module  --with-http_stub_status_module  --with-http_sub_module  --with-http_v2_module  --with-http_xslt_module=dynamic  --with-ipv6  --with-mail  --with-mail_ssl_module  --with-md5-asm  --with-pcre-jit  --with-sha1-asm  --with-stream  --with-stream_ssl_module  --with-threads  --add-dynamic-module=/tmp/geoip2-${GEOIP2_VERSION}  --add-dynamic-module=/tmp/rtmp-${RTMP_VERSION}\"\nARG RESTY_CONFIG_OPTIONS_MORE=\"\"\n#   These are not intended to be user-specified\nARG _RESTY_CONFIG_DEPS=\"--with-openssl=/tmp/openssl-${RESTY_OPENSSL_VERSION} --with-pcre=/tmp/pcre-${RESTY_PCRE_VERSION}\"\n#   1) Install apk dependencies\n#   2) Download and untar OpenSSL, PCRE, and OpenResty\n#   3) Build OpenResty\n#   4) Cleanup\nRUN apk add --no-cache --virtual .build-deps curl gd-dev geoip-dev libxslt-dev perl-dev readline-dev zlib-dev libmaxminddb-dev \\\n && apk add --no-cache libmaxminddb openssl sudo bash build-base curl gd geoip libgcc libxslt linux-headers make perl unzip zlib \\\n && mkdir -p /tmp/geoip2-${GEOIP2_VERSION} \\\n && curl -fSL https://github.com/leev/ngx_http_geoip2_module/archive/${GEOIP2_VERSION}.tar.gz | tar xzf - -C /tmp/geoip2-${GEOIP2_VERSION} --strip-components=1 \\\n && mkdir -p /tmp/rtmp-${RTMP_VERSION} \\\n && curl -fSL https://github.com/arut/nginx-rtmp-module/archive/v${RTMP_VERSION}.tar.gz | tar xzf - -C /tmp/rtmp-${RTMP_VERSION} --strip-components=1 \\\n && cd /tmp \\\n && curl -fSL https://www.openssl.org/source/openssl-${RESTY_OPENSSL_VERSION}.tar.gz -o openssl-${RESTY_OPENSSL_VERSION}.tar.gz \\\n && tar xzf openssl-${RESTY_OPENSSL_VERSION}.tar.gz \\\n && curl -fSL https://ftp.pcre.org/pub/pcre/pcre-${RESTY_PCRE_VERSION}.tar.gz -o pcre-${RESTY_PCRE_VERSION}.tar.gz \\\n && tar xzf pcre-${RESTY_PCRE_VERSION}.tar.gz \\\n && curl -fSL https://openresty.org/download/openresty-${RESTY_VERSION}.tar.gz -o openresty-${RESTY_VERSION}.tar.gz \\\n && tar xzf openresty-${RESTY_VERSION}.tar.gz \\\n && cd /tmp/openresty-${RESTY_VERSION} \\\n && ./configure -j${RESTY_J} ${_RESTY_CONFIG_DEPS} ${RESTY_CONFIG_OPTIONS} ${RESTY_CONFIG_OPTIONS_MORE} \\\n && make -j${RESTY_J} \\\n && make -j${RESTY_J} install \\\n && cd /tmp \\\n && rm -rf openssl-${RESTY_OPENSSL_VERSION} openssl-${RESTY_OPENSSL_VERSION}.tar.gz openresty-${RESTY_VERSION}.tar.gz openresty-${RESTY_VERSION} pcre-${RESTY_PCRE_VERSION}.tar.gz pcre-${RESTY_PCRE_VERSION} \\\n && echo curl -fSL https://github.com/luarocks/luarocks/archive/${RESTY_LUAROCKS_VERSION}.tar.gz -o luarocks-${RESTY_LUAROCKS_VERSION}.tar.gz \\\n && curl -fSL https://github.com/luarocks/luarocks/archive/${RESTY_LUAROCKS_VERSION}.tar.gz -o luarocks-${RESTY_LUAROCKS_VERSION}.tar.gz \\\n && tar xzf luarocks-${RESTY_LUAROCKS_VERSION}.tar.gz \\\n && cd luarocks-${RESTY_LUAROCKS_VERSION} \\\n && ./configure --prefix=/usr/local/openresty/luajit --with-lua=/usr/local/openresty/luajit --lua-suffix=jit-2.1.0-beta3 --with-lua-include=/usr/local/openresty/luajit/include/luajit-2.1 \\\n && make build \\\n && make install \\\n && cd /tmp \\\n && rm -rf luarocks-${RESTY_LUAROCKS_VERSION} luarocks-${RESTY_LUAROCKS_VERSION}.tar.gz \\\n && apk add --no-cache --virtual .gettext gettext \\\n && mv /usr/bin/envsubst /tmp/ \\\n && runDeps=\"$( scanelf --needed --nobanner /tmp/envsubst | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }' | sort -u | xargs -r apk info --installed | sort -u ;)\" \\\n && apk add --no-cache --virtual $runDeps \\\n && mv /tmp/envsubst /usr/local/bin/ \\\n && ln -sf /dev/stdout /usr/local/openresty/nginx/logs/access.log \\\n && ln -sf /dev/stderr /usr/local/openresty/nginx/logs/error.log\nRUN sudo -H /usr/local/openresty/luajit/bin/luarocks install lua-resty-http \\\n && sudo -H /usr/local/openresty/luajit/bin/luarocks install lua-resty-auto-ssl \\\n && sudo -H /usr/local/openresty/luajit/bin/luarocks install lua-iconv\nRUN openssl req -new -newkey rsa:2048 -days 3650 -nodes -x509 -subj '/CN=sni-support-required-for-valid-ssl' -keyout /etc/ssl/resty-auto-ssl-fallback.key -out /etc/ssl/resty-auto-ssl-fallback.crt\nADD https://github.com/duythongle/k8s-openresty-streaming/raw/master/nginx.conf /usr/local/openresty/nginx/conf/nginx.conf\n#  ADD conf.d /usr/local/openresty/nginx/conf/conf.d\nRUN mkdir -p /tmp/telize-v${TELIZE_VERSION} \\\n && curl -fSL https://github.com/fcambus/telize/archive/${TELIZE_VERSION}.tar.gz | tar xzf - -C /tmp/telize-v${TELIZE_VERSION} --strip-components=1 \\\n && cp /tmp/telize-v${TELIZE_VERSION}/country-code3.conf /usr/local/openresty/nginx/conf \\\n && cp /tmp/telize-v${TELIZE_VERSION}/timezone-offset.conf /usr/local/openresty/nginx/conf \\\n && cp /tmp/telize-v${TELIZE_VERSION}/telize.conf /usr/local/openresty/nginx/conf\nRUN mkdir -p /var/db/GeoIP \\\n && curl -fSL https://geolite.maxmind.com/download/geoip/database/GeoLite2-City.tar.gz | tar xzf - -C /var/db/GeoIP --strip-components=1 \\\n && curl -fSL https://geolite.maxmind.com/download/geoip/database/GeoLite2-ASN.tar.gz | tar xzf - -C /var/db/GeoIP --strip-components=1\nRUN rm -rf /tmp/* \\\n && apk del .build-deps .gettext\nENV PATH=\"$PATH:/usr/local/openresty/luajit/bin:/usr/local/openresty/nginx/sbin:/usr/local/openresty/bin\"\nCMD [\"/usr/local/openresty/bin/openresty\", \"-g\", \"daemon\", \"off\"]\n","originalDockerfileUglifiedHash":"6ee277731d00a66948aeced5ed305a4a","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/37a40bf135f397fc440e4afbdf3827d4294c0b1a.dockerfile"}