{"seed":2877370386,"processedDockerfileHash":"afcac7ec22e5a0b472cb5da0a2771a45","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM smizy/scikit-learn:0.18-alpine\nARG BUILD_DATE\nARG VCS_REF\nARG VERSION\nARG EXTRA_BAZEL_ARGS\nLABEL org.label-schema.build-date=\"$BUILD_DATE\" \\\n      org.label-schema.docker.dockerfile=\"/Dockerfile\" \\\n      org.label-schema.license=\"Apache License 2.0\" \\\n      org.label-schema.name=\"smizy/keras\" \\\n      org.label-schema.url=\"https://gitlab.com/smizy\" \\\n      org.label-schema.vcs-ref=\"$VCS_REF\" \\\n      org.label-schema.vcs-type=\"Git\" \\\n      org.label-schema.version=\"$VERSION\" \\\n      org.label-schema.vcs-url=\"https://gitlab.com/smizy/docker-keras-tensorflow\"\nENV KERAS_VERSION=\"$VERSION\"\nENV KERAS_BACKEND=\"tensorflow\"\nENV BAZEL_VERSION=\"0.4.5\"\nENV TENSORFLOW_VERSION=\"1.2.1\"\nENV JAVA_HOME=\"/usr/lib/jvm/default-jvm\"\nENV EXTRA_BAZEL_ARGS=\"$EXTRA_BAZEL_ARGS\"\nRUN set -x \\\n && apk update \\\n && apk add bash build-base linux-headers openjdk8 python3-dev wget zip --no-cache --virtual .builddeps \\\n && mkdir /tmp/bazel \\\n && wget -q -O /tmp/bazel-dist.zip https://github.com/bazelbuild/bazel/releases/download/${BAZEL_VERSION}/bazel-${BAZEL_VERSION}-dist.zip \\\n && unzip -q -d /tmp/bazel /tmp/bazel-dist.zip \\\n && cd /tmp/bazel \\\n && sed -i -e '/\"-std=c++0x\"/{h;s//\"-fpermissive\"/;x;G}' tools/cpp/cc_configure.bzl \\\n && sed -i -e '/#endif \\/\\/ COMPILER_MSVC/{h;s//#else/;G;s//#include <sys\\/stat.h>/;G;}' third_party/ijar/common.h \\\n && bash compile.sh \\\n && cp output/bazel /usr/local/bin/ \\\n && apk add jemalloc libc6-compat --no-cache \\\n && apk add patch perl sed --no-cache --virtual .builddeps.1 \\\n && pip3 install wheel \\\n && wget -q -O - https://github.com/tensorflow/tensorflow/archive/v${TENSORFLOW_VERSION}.tar.gz | tar -xzf - -C /tmp \\\n && cd /tmp/tensorflow-* \\\n && sed -ri 's/2b7430d96aeff2bb624c8d52182ff5e4b9f7f18a/af2d5f5ad3808b38ea58c9880be1b81fd2a89278/g' tensorflow/workspace.bzl \\\n && sed -ri 's/e5d3d4e227a0f7afb8745df049bbd4d55474b158ca5aaa2a0e31099af24be1d0/89fb700e6348a07829fac5f10133e44de80f491d1f23bcc65cba072c3b374525/g' tensorflow/workspace.bzl \\\n && echo | CC_OPT_FLAGS=-march=native PYTHON_BIN_PATH=/usr/bin/python TF_NEED_MKL=0 TF_NEED_VERBS=0 TF_NEED_CUDA=0 TF_NEED_GCP=0 TF_NEED_JEMALLOC=0 TF_NEED_HDFS=0 TF_NEED_OPENCL=0 TF_ENABLE_XLA=0 ./configure \\\n && bazel build -c opt ${EXTRA_BAZEL_ARGS} //tensorflow/tools/pip_package:build_pip_package \\\n && bazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/tensorflow_pkg \\\n && pip3 install /tmp/tensorflow_pkg/tensorflow-${TENSORFLOW_VERSION}-cp35-cp35m-linux_x86_64.whl \\\n && pip3 install keras==${KERAS_VERSION} \\\n && apk add hdf5 --no-cache --repository http://dl-cdn.alpinelinux.org/alpine/edge/testing/ \\\n && apk add hdf5-dev --no-cache --virtual .builddeps.edge --repository http://dl-cdn.alpinelinux.org/alpine/edge/testing/ \\\n && pip3 install h5py \\\n && apk del .builddeps .builddeps.1 .builddeps.edge \\\n && find /usr/lib/python3.5 -name __pycache__ | xargs rm -r \\\n && rm -rf /root/.[acpw]* /tmp/bazel* /tmp/tensorflow* /usr/local/bin/bazel\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM smizy/scikit-learn:0.18-alpine\nARG BUILD_DATE\nARG VCS_REF\nARG VERSION\nARG EXTRA_BAZEL_ARGS\nLABEL org.label-schema.build-date=\"$BUILD_DATE\" \\\n      org.label-schema.docker.dockerfile=\"/Dockerfile\" \\\n      org.label-schema.license=\"Apache License 2.0\" \\\n      org.label-schema.name=\"smizy/keras\" \\\n      org.label-schema.url=\"https://gitlab.com/smizy\" \\\n      org.label-schema.vcs-ref=\"$VCS_REF\" \\\n      org.label-schema.vcs-type=\"Git\" \\\n      org.label-schema.version=\"$VERSION\" \\\n      org.label-schema.vcs-url=\"https://gitlab.com/smizy/docker-keras-tensorflow\"\nENV KERAS_VERSION=\"$VERSION\"\nENV KERAS_BACKEND=\"tensorflow\"\nENV BAZEL_VERSION=\"0.4.5\"\nENV TENSORFLOW_VERSION=\"1.2.1\"\nENV JAVA_HOME=\"/usr/lib/jvm/default-jvm\"\nENV EXTRA_BAZEL_ARGS=\"$EXTRA_BAZEL_ARGS\"\nRUN set -x \\\n && apk update \\\n && apk --no-cache add --virtual .builddeps bash build-base linux-headers openjdk8 python3-dev wget zip \\\n && mkdir /tmp/bazel \\\n && wget -q -O /tmp/bazel-dist.zip https://github.com/bazelbuild/bazel/releases/download/${BAZEL_VERSION}/bazel-${BAZEL_VERSION}-dist.zip \\\n && unzip -q -d /tmp/bazel /tmp/bazel-dist.zip \\\n && cd /tmp/bazel \\\n && sed -i -e '/\"-std=c++0x\"/{h;s//\"-fpermissive\"/;x;G}' tools/cpp/cc_configure.bzl \\\n && sed -i -e '/#endif \\/\\/ COMPILER_MSVC/{h;s//#else/;G;s//#include <sys\\/stat.h>/;G;}' third_party/ijar/common.h \\\n && bash compile.sh \\\n && cp output/bazel /usr/local/bin/ \\\n && apk --no-cache add jemalloc libc6-compat \\\n && apk --no-cache add --virtual .builddeps.1 patch perl sed \\\n && pip3 install wheel \\\n && wget -q -O - https://github.com/tensorflow/tensorflow/archive/v${TENSORFLOW_VERSION}.tar.gz | tar -xzf - -C /tmp \\\n && cd /tmp/tensorflow-* \\\n && sed -ri 's/2b7430d96aeff2bb624c8d52182ff5e4b9f7f18a/af2d5f5ad3808b38ea58c9880be1b81fd2a89278/g' tensorflow/workspace.bzl \\\n && sed -ri 's/e5d3d4e227a0f7afb8745df049bbd4d55474b158ca5aaa2a0e31099af24be1d0/89fb700e6348a07829fac5f10133e44de80f491d1f23bcc65cba072c3b374525/g' tensorflow/workspace.bzl \\\n && echo | CC_OPT_FLAGS=-march=native PYTHON_BIN_PATH=/usr/bin/python TF_NEED_MKL=0 TF_NEED_VERBS=0 TF_NEED_CUDA=0 TF_NEED_GCP=0 TF_NEED_JEMALLOC=0 TF_NEED_HDFS=0 TF_NEED_OPENCL=0 TF_ENABLE_XLA=0 ./configure \\\n && bazel build -c opt ${EXTRA_BAZEL_ARGS} //tensorflow/tools/pip_package:build_pip_package \\\n && bazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/tensorflow_pkg \\\n && pip3 install /tmp/tensorflow_pkg/tensorflow-${TENSORFLOW_VERSION}-cp35-cp35m-linux_x86_64.whl \\\n && pip3 install keras==${KERAS_VERSION} \\\n && apk --no-cache add --repository http://dl-cdn.alpinelinux.org/alpine/edge/testing/ hdf5 \\\n && apk --no-cache add --virtual .builddeps.edge --repository http://dl-cdn.alpinelinux.org/alpine/edge/testing/ hdf5-dev \\\n && pip3 install h5py \\\n && apk del .builddeps .builddeps.1 .builddeps.edge \\\n && find /usr/lib/python3.5 -name __pycache__ | xargs rm -r \\\n && rm -rf /root/.[acpw]* /tmp/bazel* /tmp/tensorflow* /usr/local/bin/bazel\n","injectedSmells":[],"originalDockerfileHash":"d1585cab35e4d44116f71b81ab813012","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM smizy/scikit-learn:0.18-alpine\nARG BUILD_DATE\nARG VCS_REF\nARG VERSION\nARG EXTRA_BAZEL_ARGS\nLABEL org.label-schema.build-date=\"$BUILD_DATE\" \\\n      org.label-schema.docker.dockerfile=\"/Dockerfile\" \\\n      org.label-schema.license=\"Apache License 2.0\" \\\n      org.label-schema.name=\"smizy/keras\" \\\n      org.label-schema.url=\"https://gitlab.com/smizy\" \\\n      org.label-schema.vcs-ref=\"$VCS_REF\" \\\n      org.label-schema.vcs-type=\"Git\" \\\n      org.label-schema.version=\"$VERSION\" \\\n      org.label-schema.vcs-url=\"https://gitlab.com/smizy/docker-keras-tensorflow\"\nENV KERAS_VERSION=\"$VERSION\"\nENV KERAS_BACKEND=\"tensorflow\"\nENV BAZEL_VERSION=\"0.4.5\"\nENV TENSORFLOW_VERSION=\"1.2.1\"\nENV JAVA_HOME=\"/usr/lib/jvm/default-jvm\"\nENV EXTRA_BAZEL_ARGS=\"$EXTRA_BAZEL_ARGS\"\nRUN set -x \\\n && apk update \\\n && apk --no-cache add --virtual .builddeps bash build-base linux-headers openjdk8 python3-dev wget zip \\\n && mkdir /tmp/bazel \\\n && wget -q -O /tmp/bazel-dist.zip https://github.com/bazelbuild/bazel/releases/download/${BAZEL_VERSION}/bazel-${BAZEL_VERSION}-dist.zip \\\n && unzip -q -d /tmp/bazel /tmp/bazel-dist.zip \\\n && cd /tmp/bazel \\\n && sed -i -e '/\"-std=c++0x\"/{h;s//\"-fpermissive\"/;x;G}' tools/cpp/cc_configure.bzl \\\n && sed -i -e '/#endif \\/\\/ COMPILER_MSVC/{h;s//#else/;G;s//#include <sys\\/stat.h>/;G;}' third_party/ijar/common.h \\\n && bash compile.sh \\\n && cp output/bazel /usr/local/bin/ \\\n && apk --no-cache add jemalloc libc6-compat \\\n && apk --no-cache add --virtual .builddeps.1 patch perl sed \\\n && pip3 install wheel \\\n && wget -q -O - https://github.com/tensorflow/tensorflow/archive/v${TENSORFLOW_VERSION}.tar.gz | tar -xzf - -C /tmp \\\n && cd /tmp/tensorflow-* \\\n && sed -ri 's/2b7430d96aeff2bb624c8d52182ff5e4b9f7f18a/af2d5f5ad3808b38ea58c9880be1b81fd2a89278/g' tensorflow/workspace.bzl \\\n && sed -ri 's/e5d3d4e227a0f7afb8745df049bbd4d55474b158ca5aaa2a0e31099af24be1d0/89fb700e6348a07829fac5f10133e44de80f491d1f23bcc65cba072c3b374525/g' tensorflow/workspace.bzl \\\n && echo | CC_OPT_FLAGS=-march=native PYTHON_BIN_PATH=/usr/bin/python TF_NEED_MKL=0 TF_NEED_VERBS=0 TF_NEED_CUDA=0 TF_NEED_GCP=0 TF_NEED_JEMALLOC=0 TF_NEED_HDFS=0 TF_NEED_OPENCL=0 TF_ENABLE_XLA=0 ./configure \\\n && bazel build -c opt ${EXTRA_BAZEL_ARGS} //tensorflow/tools/pip_package:build_pip_package \\\n && bazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/tensorflow_pkg \\\n && pip3 install /tmp/tensorflow_pkg/tensorflow-${TENSORFLOW_VERSION}-cp35-cp35m-linux_x86_64.whl \\\n && pip3 install keras==${KERAS_VERSION} \\\n && apk --no-cache add --repository http://dl-cdn.alpinelinux.org/alpine/edge/testing/ hdf5 \\\n && apk --no-cache add --virtual .builddeps.edge --repository http://dl-cdn.alpinelinux.org/alpine/edge/testing/ hdf5-dev \\\n && pip3 install h5py \\\n && apk del .builddeps .builddeps.1 .builddeps.edge \\\n && find /usr/lib/python3.5 -name __pycache__ | xargs rm -r \\\n && rm -rf /root/.[acpw]* /tmp/bazel* /tmp/tensorflow* /usr/local/bin/bazel\n","originalDockerfileUglifiedHash":"d1585cab35e4d44116f71b81ab813012","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/f37ee639ecb3af2304912665728832643bf0c9e7.dockerfile"}