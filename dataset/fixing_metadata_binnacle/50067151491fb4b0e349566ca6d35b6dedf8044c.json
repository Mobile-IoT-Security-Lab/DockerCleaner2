{"seed":1850838457,"processedDockerfileHash":"e1811243e493abd71bdb1de31dc2ebb8","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Python 3.6.8 base kernel based ubuntu 16.04\n#   base source from official repository at https://hub.docker.com/python/\nFROM ubuntu:18.04\nMAINTAINER Mario Cho \"m.cho@lablup.com\"\n#   GPG_KEY & Python version\nENV GPG_KEY=\"0D96DF4D4110E5C43FBFB17F2D347EA6AA65421D\"\nENV PYTHON_VERSION=\"3.6.8\"\n#   /usr/local in this image only has its own built Python.\n#   ensure local python is preferred over distribution python\nENV PATH=\"/usr/local/bin:$PATH\"\n#   http://bugs.python.org/issue19846\n#   > At the moment, setting \"LANG=C\" on a Linux system *fundamentally breaks Python 3*, and that's not OK.\nENV LANG=\"C.UTF-8\"\n#   runtime dependencies\nRUN apt-get update \\\n && apt-get install --no-install-recommends ca-certificates=20211016ubuntu0.18.04.1 wget=1.19.4-1ubuntu2.2 tk-dev=8.6.0+9 netbase=5.4 -y \\\n && rm -rf /var/lib/apt/lists/*\n#   Python build\nRUN set -ex \\\n && savedAptMark=\"$( apt-mark showmanual ;)\" \\\n && apt-get update \\\n && apt-get install --no-install-recommends dpkg-dev=1.19.0.5ubuntu2.4 gcc=4:7.4.0-1ubuntu2.3 libbz2-dev=1.0.6-8.1ubuntu0.2 libc6-dev=2.27-3ubuntu1.6 libexpat1-dev=2.2.5-3ubuntu0.9 libffi-dev=3.2.1-8 libgdbm-dev=1.14.1-6 liblzma-dev=5.2.2-1.3ubuntu0.1 libncursesw5-dev=6.1-1ubuntu1.18.04 libreadline-dev=7.0-3 libsqlite3-dev=3.22.0-1ubuntu0.7 libssl-dev=1.1.1-1ubuntu2.1~18.04.21 make=4.1-9.1ubuntu1 tk-dev=8.6.0+9 wget=1.19.4-1ubuntu2.2 xz-utils=5.2.2-1.3ubuntu0.1 zlib1g-dev=1:1.2.11.dfsg-0ubuntu2.2 $( command -v gpg > /dev/null || echo 'gnupg dirmngr' ;) -y \\\n && wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\" \\\n && wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$GPG_KEY\" \\\n && gpg --batch --verify python.tar.xz.asc python.tar.xz \\\n && { command -v gpgconf > /dev/null \\\n && gpgconf --kill all || : ; } \\\n && rm -rf \"$GNUPGHOME\" python.tar.xz.asc \\\n && mkdir -p /usr/src/python \\\n && tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \\\n && rm python.tar.xz \\\n && cd /usr/src/python \\\n && gnuArch=\"$( dpkg-architecture --query DEB_BUILD_GNU_TYPE ;)\" \\\n && ./configure --build=\"$gnuArch\" --enable-loadable-sqlite-extensions --enable-shared --with-system-expat --with-system-ffi --without-ensurepip \\\n && make -j \"$( nproc ;)\" \\\n && make install \\\n && ldconfig \\\n && apt-mark auto '.*' > /dev/null \\\n && apt-mark manual $savedAptMark \\\n && find /usr/local -type f -executable -not\n#   make some useful symlinks that are expected to exist\nRUN cd /usr/local/bin \\\n && ln -s idle3 idle \\\n && ln -s pydoc3 pydoc \\\n && ln -s python3 python \\\n && ln -s python3-config python-config\n#   if this is called \"PIP_VERSION\", pip explodes with \"ValueError: invalid truth value '<VERSION>'\"\nENV PYTHON_PIP_VERSION=\"18.1\"\nRUN set -ex ; savedAptMark=\"$( apt-mark showmanual ;)\" ; apt-get update -y ; apt-get install --no-install-recommends wget=1.19.4-1ubuntu2.2 -y ; wget -O get-pip.py 'https://bootstrap.pypa.io/get-pip.py' ; apt-mark auto '.*' > /dev/null; [ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark ; apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false ; rm -rf /var/lib/apt/lists/* ; python get-pip.py --disable-pip-version-check --no-cache-dir \"pip==$PYTHON_PIP_VERSION\" ; pip --version ; find /usr/local -depth\nRUN cd / ; tar czpf python.tar.gz /usr/local/bin /usr/local/lib/libpython* /usr/local/lib/python3.6* /usr/local/include\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Python 3.6.8 base kernel based ubuntu 16.04\n#  base source from official repository at https://hub.docker.com/python/\nFROM ubuntu:18.04\nMAINTAINER Mario Cho \"m.cho@lablup.com\"\n#  GPG_KEY & Python version\nENV GPG_KEY=\"0D96DF4D4110E5C43FBFB17F2D347EA6AA65421D\"\nENV PYTHON_VERSION=\"3.6.8\"\n#  /usr/local in this image only has its own built Python.\n#  ensure local python is preferred over distribution python\nENV PATH=\"/usr/local/bin:$PATH\"\n#  http://bugs.python.org/issue19846\n#  > At the moment, setting \"LANG=C\" on a Linux system *fundamentally breaks Python 3*, and that's not OK.\nENV LANG=\"C.UTF-8\"\n#  runtime dependencies\nRUN apt-get update \\\n && apt-get install --no-install-recommends ca-certificates wget tk-dev netbase -y \\\n && rm -rf /var/lib/apt/lists/*\n#  Python build\nRUN set -ex \\\n && savedAptMark=\"$( apt-mark showmanual ;)\" \\\n && apt-get update \\\n && apt-get install --no-install-recommends dpkg-dev gcc libbz2-dev libc6-dev libexpat1-dev libffi-dev libgdbm-dev liblzma-dev libncursesw5-dev libreadline-dev libsqlite3-dev libssl-dev make tk-dev wget xz-utils zlib1g-dev $( command -v gpg > /dev/null || echo 'gnupg dirmngr' ;) -y \\\n && wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\" \\\n && wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$GPG_KEY\" \\\n && gpg --batch --verify python.tar.xz.asc python.tar.xz \\\n && { command -v gpgconf > /dev/null \\\n && gpgconf --kill all || : ; } \\\n && rm -rf \"$GNUPGHOME\" python.tar.xz.asc \\\n && mkdir -p /usr/src/python \\\n && tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \\\n && rm python.tar.xz \\\n && cd /usr/src/python \\\n && gnuArch=\"$( dpkg-architecture --query DEB_BUILD_GNU_TYPE ;)\" \\\n && ./configure --build=\"$gnuArch\" --enable-loadable-sqlite-extensions --enable-shared --with-system-expat --with-system-ffi --without-ensurepip \\\n && make -j \"$( nproc ;)\" \\\n && make install \\\n && ldconfig \\\n && apt-mark auto '.*' > /dev/null \\\n && apt-mark manual $savedAptMark \\\n && find /usr/local -type f -executable -not ( -name '*tkinter*' ) -exec ldd '{}' ';' | awk '/=>/ { print $(NF-1) }' | sort -u | xargs -r dpkg-query --search | cut -d: -f1 | sort -u | xargs -r apt-mark manual \\\n && apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false \\\n && rm -rf /var/lib/apt/lists/* \\\n && find /usr/local -depth ( ( -type d -a ( -name test -o -name tests ) ) -o ( -type f -a ( -name '*.pyc' -o -name '*.pyo' ) ) ) -exec rm -rf '{}' + \\\n && rm -rf /usr/src/python \\\n && python3 --version\n#  make some useful symlinks that are expected to exist\nRUN cd /usr/local/bin \\\n && ln -s idle3 idle \\\n && ln -s pydoc3 pydoc \\\n && ln -s python3 python \\\n && ln -s python3-config python-config\n#  if this is called \"PIP_VERSION\", pip explodes with \"ValueError: invalid truth value '<VERSION>'\"\nENV PYTHON_PIP_VERSION=\"18.1\"\nRUN set -ex ; savedAptMark=\"$( apt-mark showmanual ;)\" ; apt-get update -y ; apt-get install --no-install-recommends wget -y ; wget -O get-pip.py 'https://bootstrap.pypa.io/get-pip.py' ; apt-mark auto '.*' > /dev/null; [ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark ; apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false ; rm -rf /var/lib/apt/lists/* ; python get-pip.py --disable-pip-version-check --no-cache-dir \"pip==$PYTHON_PIP_VERSION\" ; pip --version ; find /usr/local -depth ( ( -type d -a ( -name test -o -name tests ) ) -o ( -type f -a ( -name '*.pyc' -o -name '*.pyo' ) ) ) -exec rm -rf '{}' + ; rm -f get-pip.py\nRUN cd / ; tar czpf python.tar.gz /usr/local/bin /usr/local/lib/libpython* /usr/local/lib/python3.6* /usr/local/include\n","injectedSmells":[],"originalDockerfileHash":"61bf9828cd890577e7d729d16e518db9","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Python 3.6.8 base kernel based ubuntu 16.04\n#   base source from official repository at https://hub.docker.com/python/\nFROM ubuntu:18.04\nMAINTAINER Mario Cho \"m.cho@lablup.com\"\n#   GPG_KEY & Python version\nENV GPG_KEY=\"0D96DF4D4110E5C43FBFB17F2D347EA6AA65421D\"\nENV PYTHON_VERSION=\"3.6.8\"\n#   /usr/local in this image only has its own built Python.\n#   ensure local python is preferred over distribution python\nENV PATH=\"/usr/local/bin:$PATH\"\n#   http://bugs.python.org/issue19846\n#   > At the moment, setting \"LANG=C\" on a Linux system *fundamentally breaks Python 3*, and that's not OK.\nENV LANG=\"C.UTF-8\"\n#   runtime dependencies\nRUN apt-get update \\\n && apt-get install --no-install-recommends ca-certificates wget tk-dev netbase -y \\\n && rm -rf /var/lib/apt/lists/*\n#   Python build\nRUN set -ex \\\n && savedAptMark=\"$( apt-mark showmanual ;)\" \\\n && apt-get update \\\n && apt-get install --no-install-recommends dpkg-dev gcc libbz2-dev libc6-dev libexpat1-dev libffi-dev libgdbm-dev liblzma-dev libncursesw5-dev libreadline-dev libsqlite3-dev libssl-dev make tk-dev wget xz-utils zlib1g-dev $( command -v gpg > /dev/null || echo 'gnupg dirmngr' ;) -y \\\n && wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\" \\\n && wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$GPG_KEY\" \\\n && gpg --batch --verify python.tar.xz.asc python.tar.xz \\\n && { command -v gpgconf > /dev/null \\\n && gpgconf --kill all || : ; } \\\n && rm -rf \"$GNUPGHOME\" python.tar.xz.asc \\\n && mkdir -p /usr/src/python \\\n && tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \\\n && rm python.tar.xz \\\n && cd /usr/src/python \\\n && gnuArch=\"$( dpkg-architecture --query DEB_BUILD_GNU_TYPE ;)\" \\\n && ./configure --build=\"$gnuArch\" --enable-loadable-sqlite-extensions --enable-shared --with-system-expat --with-system-ffi --without-ensurepip \\\n && make -j \"$( nproc ;)\" \\\n && make install \\\n && ldconfig \\\n && apt-mark auto '.*' > /dev/null \\\n && apt-mark manual $savedAptMark \\\n && find /usr/local -type f -executable -not\n#   make some useful symlinks that are expected to exist\nRUN cd /usr/local/bin \\\n && ln -s idle3 idle \\\n && ln -s pydoc3 pydoc \\\n && ln -s python3 python \\\n && ln -s python3-config python-config\n#   if this is called \"PIP_VERSION\", pip explodes with \"ValueError: invalid truth value '<VERSION>'\"\nENV PYTHON_PIP_VERSION=\"18.1\"\nRUN set -ex ; savedAptMark=\"$( apt-mark showmanual ;)\" ; apt-get update -y ; apt-get install --no-install-recommends wget -y ; wget -O get-pip.py 'https://bootstrap.pypa.io/get-pip.py' ; apt-mark auto '.*' > /dev/null; [ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark ; apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false ; rm -rf /var/lib/apt/lists/* ; python get-pip.py --disable-pip-version-check --no-cache-dir \"pip==$PYTHON_PIP_VERSION\" ; pip --version ; find /usr/local -depth\nRUN cd / ; tar czpf python.tar.gz /usr/local/bin /usr/local/lib/libpython* /usr/local/lib/python3.6* /usr/local/include\n","originalDockerfileUglifiedHash":"8f616c3102eb368bef4d4a2f6f094bf0","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/50067151491fb4b0e349566ca6d35b6dedf8044c.dockerfile"}