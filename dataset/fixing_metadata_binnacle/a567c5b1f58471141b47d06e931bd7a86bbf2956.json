{"seed":2759791179,"processedDockerfileHash":"5f9dea206d0d47b8425b4de1825d632b","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-pip","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Galaxy - Stable\n#\n#   VERSION       Galaxy-central\nFROM quay.io/bgruening/galaxy-base:19.01\nMAINTAINER Björn A. Grüning, bjoern.gruening@gmail.com\nARG GALAXY_RELEASE=19.01\nARG GALAXY_REPO=galaxyproject/galaxy\nRUN echo \"force-unsafe-io\" > /etc/dpkg/dpkg.cfg.d/02apt-speedup \\\n && echo \"Acquire::http {No-Cache=True;};\" > /etc/apt/apt.conf.d/no-cache \\\n && apt-get update -qq \\\n && apt-get install --no-install-recommends -y \\\n && apt-get autoremove -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \\\n && rm -rf ~/.cache/\n#   Create these folders and link to target directory for installation\nRUN mkdir -p /export /galaxy-export \\\n && mkdir /galaxy-export/shed_tools \\\n && mkdir /galaxy-export/tool_deps \\\n && mkdir /galaxy-export/venv \\\n && mkdir /galaxy-export/galaxy-central \\\n && mkdir /galaxy-export/nginx_upload_store \\\n && mkdir /galaxy-export/ftp \\\n && mkdir /galaxy-export/rabbitmq \\\n && mkdir /galaxy-export/influxdb \\\n && mkdir /galaxy-export/grafana \\\n && mkdir /galaxy-export/postgres \\\n && ln -s -f /galaxy-export/shed_tools /export/shed_tools \\\n && ln -s -f /galaxy-export/tool_deps /export/tool_deps \\\n && ln -s -f /galaxy-export/venv /export/venv \\\n && ln -s -f /galaxy-export/galaxy-central /export/galaxy-central \\\n && chown -R $GALAXY_USER:$GALAXY_USER /galaxy-export /export \\\n && wget -q -O - https://api.github.com/repos/$GALAXY_REPO/tarball/$GALAXY_RELEASE | tar xz --strip-components=1 -C $GALAXY_ROOT \\\n && virtualenv $GALAXY_VIRTUAL_ENV \\\n && cp $GALAXY_ROOT/config/galaxy.yml.sample $GALAXY_CONFIG_FILE \\\n && . $GALAXY_VIRTUAL_ENV/bin/activate \\\n && pip install pip==23.1 --upgrade \\\n && chown -R $GALAXY_USER:$GALAXY_USER $GALAXY_VIRTUAL_ENV/* \\\n && chown -R $GALAXY_USER:$GALAXY_USER $GALAXY_ROOT/* \\\n && chown -R $GALAXY_USER:$GALAXY_USER $GALAXY_CONFIG_FILE\nCOPY config $GALAXY_ROOT/config\nCOPY welcome /galaxy-export/welcome\nRUN ansible-playbook /ansible/provision.yml --extra-vars galaxy_extras_config_ie_proxy=False --extra-vars galaxy_server_dir=$GALAXY_ROOT --extra-vars galaxy_venv_dir=$GALAXY_VIRTUAL_ENV --extra-vars galaxy_log_dir=$GALAXY_LOGS_DIR --extra-vars galaxy_user_name=$GALAXY_USER --extra-vars galaxy_config_file=$GALAXY_CONFIG_FILE --extra-vars galaxy_extras_config_condor=True --extra-vars galaxy_extras_config_condor_docker=True --extra-vars galaxy_extras_config_k8s_jobs=True --extra-vars galaxy_minimum_version=17.09 --extra-vars galaxy_extras_config_rabbitmq=False --extra-vars nginx_upload_store_path=/export/nginx_upload_store --extra-vars nginx_welcome_location=$NGINX_WELCOME_LOCATION --extra-vars nginx_welcome_path=$NGINX_WELCOME_PATH --tags=ie,pbs,slurm,uwsgi,metrics,k8s -c local \\\n && apt-get autoremove -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \\\n && chown -R $GALAXY_USER:$GALAXY_USER $GALAXY_HOME $EXPORT_DIR $GALAXY_LOGS_DIR\n#   The following commands will be executed as User galaxy\nUSER galaxy\n#  RUN cd $GALAXY_VIRTUAL_ENV && . bin/activate && pip install watchdog\nWORKDIR $GALAXY_ROOT\n#   Updating genome informations from UCSC\n#  RUN export GALAXY=$GALAXY_ROOT && sh ./cron/updateucsc.sh.sample\nRUN wget --quiet https://repo.anaconda.com/miniconda/Miniconda2-4.5.12-Linux-x86_64.sh -O ~/miniconda.sh \\\n && /bin/bash ~/miniconda.sh -b -p /tool_deps/_conda/ \\\n && rm ~/miniconda.sh \\\n && echo \". /tool_deps/_conda/etc/profile.d/conda.sh\" >> ~/.bashrc \\\n && echo \"conda activate base\" >> ~/.bashrc\n#   prefetch Python wheels\n#   Install all required Node dependencies. This is required to get proxy support to work for Interactive Environments\nRUN export PATH=/tool_deps/_conda/bin/:$PATH \\\n && conda install -c conda-forge nodejs=9.11.1 yarn=1.12.1 git \\\n && ./scripts/common_startup.sh --skip-client-build \\\n && . $GALAXY_VIRTUAL_ENV/bin/activate \\\n && python ./scripts/manage_tool_dependencies.py -c \"$GALAXY_CONFIG_FILE\" init_if_needed \\\n && cd $GALAXY_ROOT/lib/galaxy/web/proxy/js \\\n && npm install \\\n && cd $GALAXY_ROOT/client \\\n && yarn install --network-timeout 120000 --check-files \\\n && yarn run build-production-maps \\\n && rm -rf /home/galaxy/.cache/ \\\n && sed -i 's|database|..|' $GALAXY_ROOT/config/shed_tool_conf.xml\n#   Switch back to User root\nUSER root\n#   Create symlinks from $GALAXY_ROOT/* to /export/*\nRUN mv $GALAXY_ROOT/config /galaxy-export/config \\\n && ln -s -f /export/config $GALAXY_ROOT/config \\\n && mv $GALAXY_ROOT/tools /galaxy-export/tools \\\n && ln -s -f /export/tools $GALAXY_ROOT/tools \\\n && mv $GALAXY_ROOT/tool-data /galaxy-export/tool-data \\\n && ln -s -f /export/tool-data $GALAXY_ROOT/tool-data \\\n && mv $GALAXY_ROOT/display_applications /galaxy-export/display_applications \\\n && ln -s -f /export/display_applications $GALAXY_ROOT/display_applications \\\n && mv $GALAXY_ROOT/database /galaxy-export/database \\\n && ln -s -f /export/database $GALAXY_ROOT/database \\\n && rm -rf $GALARY_ROOT/.venv \\\n && ln -s -f /export/venv $GALAXY_ROOT/.venv \\\n && ln -s -f /export/venv $GALAXY_ROOT/venv\nWORKDIR /galaxy-export\n#   Mark folders as imported from the host.\nVOLUME [\"/export/\"]\nCOPY startup.sh /usr/bin/startup\nRUN chmod +x /usr/bin/startup\n#   Autostart script that is invoked during container start\nCMD [\"/usr/bin/startup\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Galaxy - Stable\n#\n#  VERSION       Galaxy-central\nFROM quay.io/bgruening/galaxy-base:19.01\nMAINTAINER Björn A. Grüning, bjoern.gruening@gmail.com\nARG GALAXY_RELEASE=19.01\nARG GALAXY_REPO=galaxyproject/galaxy\nRUN echo \"force-unsafe-io\" > /etc/dpkg/dpkg.cfg.d/02apt-speedup \\\n && echo \"Acquire::http {No-Cache=True;};\" > /etc/apt/apt.conf.d/no-cache \\\n && apt-get update -qq \\\n && apt-get install --no-install-recommends -y \\\n && apt-get autoremove -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \\\n && rm -rf ~/.cache/\n#  Create these folders and link to target directory for installation\nRUN mkdir -p /export /galaxy-export \\\n && mkdir /galaxy-export/shed_tools \\\n && mkdir /galaxy-export/tool_deps \\\n && mkdir /galaxy-export/venv \\\n && mkdir /galaxy-export/galaxy-central \\\n && mkdir /galaxy-export/nginx_upload_store \\\n && mkdir /galaxy-export/ftp \\\n && mkdir /galaxy-export/rabbitmq \\\n && mkdir /galaxy-export/influxdb \\\n && mkdir /galaxy-export/grafana \\\n && mkdir /galaxy-export/postgres \\\n && ln -s -f /galaxy-export/shed_tools /export/shed_tools \\\n && ln -s -f /galaxy-export/tool_deps /export/tool_deps \\\n && ln -s -f /galaxy-export/venv /export/venv \\\n && ln -s -f /galaxy-export/galaxy-central /export/galaxy-central \\\n && chown -R $GALAXY_USER:$GALAXY_USER /galaxy-export /export \\\n && wget -q -O - https://api.github.com/repos/$GALAXY_REPO/tarball/$GALAXY_RELEASE | tar xz --strip-components=1 -C $GALAXY_ROOT \\\n && virtualenv $GALAXY_VIRTUAL_ENV \\\n && cp $GALAXY_ROOT/config/galaxy.yml.sample $GALAXY_CONFIG_FILE \\\n && . $GALAXY_VIRTUAL_ENV/bin/activate \\\n && pip install pip --upgrade \\\n && chown -R $GALAXY_USER:$GALAXY_USER $GALAXY_VIRTUAL_ENV/* \\\n && chown -R $GALAXY_USER:$GALAXY_USER $GALAXY_ROOT/* \\\n && chown -R $GALAXY_USER:$GALAXY_USER $GALAXY_CONFIG_FILE\nADD config $GALAXY_ROOT/config\nADD welcome /galaxy-export/welcome\nRUN ansible-playbook /ansible/provision.yml --extra-vars galaxy_extras_config_ie_proxy=False --extra-vars galaxy_server_dir=$GALAXY_ROOT --extra-vars galaxy_venv_dir=$GALAXY_VIRTUAL_ENV --extra-vars galaxy_log_dir=$GALAXY_LOGS_DIR --extra-vars galaxy_user_name=$GALAXY_USER --extra-vars galaxy_config_file=$GALAXY_CONFIG_FILE --extra-vars galaxy_extras_config_condor=True --extra-vars galaxy_extras_config_condor_docker=True --extra-vars galaxy_extras_config_k8s_jobs=True --extra-vars galaxy_minimum_version=17.09 --extra-vars galaxy_extras_config_rabbitmq=False --extra-vars nginx_upload_store_path=/export/nginx_upload_store --extra-vars nginx_welcome_location=$NGINX_WELCOME_LOCATION --extra-vars nginx_welcome_path=$NGINX_WELCOME_PATH --tags=ie,pbs,slurm,uwsgi,metrics,k8s -c local \\\n && apt-get autoremove -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \\\n && chown -R $GALAXY_USER:$GALAXY_USER $GALAXY_HOME $EXPORT_DIR $GALAXY_LOGS_DIR\n#  The following commands will be executed as User galaxy\nUSER galaxy\n# RUN cd $GALAXY_VIRTUAL_ENV && . bin/activate && pip install watchdog\nWORKDIR $GALAXY_ROOT\n#  Updating genome informations from UCSC\n# RUN export GALAXY=$GALAXY_ROOT && sh ./cron/updateucsc.sh.sample\nRUN wget --quiet https://repo.anaconda.com/miniconda/Miniconda2-4.5.12-Linux-x86_64.sh -O ~/miniconda.sh \\\n && /bin/bash ~/miniconda.sh -b -p /tool_deps/_conda/ \\\n && rm ~/miniconda.sh \\\n && echo \". /tool_deps/_conda/etc/profile.d/conda.sh\" >> ~/.bashrc \\\n && echo \"conda activate base\" >> ~/.bashrc\n#  prefetch Python wheels\n#  Install all required Node dependencies. This is required to get proxy support to work for Interactive Environments\nRUN export PATH=/tool_deps/_conda/bin/:$PATH \\\n && conda install -c conda-forge nodejs=9.11.1 yarn=1.12.1 git \\\n && ./scripts/common_startup.sh --skip-client-build \\\n && . $GALAXY_VIRTUAL_ENV/bin/activate \\\n && python ./scripts/manage_tool_dependencies.py -c \"$GALAXY_CONFIG_FILE\" init_if_needed \\\n && cd $GALAXY_ROOT/lib/galaxy/web/proxy/js \\\n && npm install \\\n && cd $GALAXY_ROOT/client \\\n && yarn install --network-timeout 120000 --check-files \\\n && yarn run build-production-maps \\\n && rm -rf /home/galaxy/.cache/ \\\n && sed -i 's|database|..|' $GALAXY_ROOT/config/shed_tool_conf.xml\n#  Switch back to User root\nUSER root\n#  Create symlinks from $GALAXY_ROOT/* to /export/*\nRUN mv $GALAXY_ROOT/config /galaxy-export/config \\\n && ln -s -f /export/config $GALAXY_ROOT/config \\\n && mv $GALAXY_ROOT/tools /galaxy-export/tools \\\n && ln -s -f /export/tools $GALAXY_ROOT/tools \\\n && mv $GALAXY_ROOT/tool-data /galaxy-export/tool-data \\\n && ln -s -f /export/tool-data $GALAXY_ROOT/tool-data \\\n && mv $GALAXY_ROOT/display_applications /galaxy-export/display_applications \\\n && ln -s -f /export/display_applications $GALAXY_ROOT/display_applications \\\n && mv $GALAXY_ROOT/database /galaxy-export/database \\\n && ln -s -f /export/database $GALAXY_ROOT/database \\\n && rm -rf $GALARY_ROOT/.venv \\\n && ln -s -f /export/venv $GALAXY_ROOT/.venv \\\n && ln -s -f /export/venv $GALAXY_ROOT/venv\nWORKDIR /galaxy-export\n#  Mark folders as imported from the host.\nVOLUME [\"/export/\"]\nADD startup.sh /usr/bin/startup\nRUN chmod +x /usr/bin/startup\n#  Autostart script that is invoked during container start\nCMD [\"/usr/bin/startup\"]\n","injectedSmells":[],"originalDockerfileHash":"d727ac41eb52a623ddecb242a47f124b","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Galaxy - Stable\n#\n#   VERSION       Galaxy-central\nFROM quay.io/bgruening/galaxy-base:19.01\nMAINTAINER Björn A. Grüning, bjoern.gruening@gmail.com\nARG GALAXY_RELEASE=19.01\nARG GALAXY_REPO=galaxyproject/galaxy\nRUN echo \"force-unsafe-io\" > /etc/dpkg/dpkg.cfg.d/02apt-speedup \\\n && echo \"Acquire::http {No-Cache=True;};\" > /etc/apt/apt.conf.d/no-cache \\\n && apt-get update -qq \\\n && apt-get install --no-install-recommends -y \\\n && apt-get autoremove -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \\\n && rm -rf ~/.cache/\n#   Create these folders and link to target directory for installation\nRUN mkdir -p /export /galaxy-export \\\n && mkdir /galaxy-export/shed_tools \\\n && mkdir /galaxy-export/tool_deps \\\n && mkdir /galaxy-export/venv \\\n && mkdir /galaxy-export/galaxy-central \\\n && mkdir /galaxy-export/nginx_upload_store \\\n && mkdir /galaxy-export/ftp \\\n && mkdir /galaxy-export/rabbitmq \\\n && mkdir /galaxy-export/influxdb \\\n && mkdir /galaxy-export/grafana \\\n && mkdir /galaxy-export/postgres \\\n && ln -s -f /galaxy-export/shed_tools /export/shed_tools \\\n && ln -s -f /galaxy-export/tool_deps /export/tool_deps \\\n && ln -s -f /galaxy-export/venv /export/venv \\\n && ln -s -f /galaxy-export/galaxy-central /export/galaxy-central \\\n && chown -R $GALAXY_USER:$GALAXY_USER /galaxy-export /export \\\n && wget -q -O - https://api.github.com/repos/$GALAXY_REPO/tarball/$GALAXY_RELEASE | tar xz --strip-components=1 -C $GALAXY_ROOT \\\n && virtualenv $GALAXY_VIRTUAL_ENV \\\n && cp $GALAXY_ROOT/config/galaxy.yml.sample $GALAXY_CONFIG_FILE \\\n && . $GALAXY_VIRTUAL_ENV/bin/activate \\\n && pip install pip --upgrade \\\n && chown -R $GALAXY_USER:$GALAXY_USER $GALAXY_VIRTUAL_ENV/* \\\n && chown -R $GALAXY_USER:$GALAXY_USER $GALAXY_ROOT/* \\\n && chown -R $GALAXY_USER:$GALAXY_USER $GALAXY_CONFIG_FILE\nADD config $GALAXY_ROOT/config\nADD welcome /galaxy-export/welcome\nRUN ansible-playbook /ansible/provision.yml --extra-vars galaxy_extras_config_ie_proxy=False --extra-vars galaxy_server_dir=$GALAXY_ROOT --extra-vars galaxy_venv_dir=$GALAXY_VIRTUAL_ENV --extra-vars galaxy_log_dir=$GALAXY_LOGS_DIR --extra-vars galaxy_user_name=$GALAXY_USER --extra-vars galaxy_config_file=$GALAXY_CONFIG_FILE --extra-vars galaxy_extras_config_condor=True --extra-vars galaxy_extras_config_condor_docker=True --extra-vars galaxy_extras_config_k8s_jobs=True --extra-vars galaxy_minimum_version=17.09 --extra-vars galaxy_extras_config_rabbitmq=False --extra-vars nginx_upload_store_path=/export/nginx_upload_store --extra-vars nginx_welcome_location=$NGINX_WELCOME_LOCATION --extra-vars nginx_welcome_path=$NGINX_WELCOME_PATH --tags=ie,pbs,slurm,uwsgi,metrics,k8s -c local \\\n && apt-get autoremove -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \\\n && chown -R $GALAXY_USER:$GALAXY_USER $GALAXY_HOME $EXPORT_DIR $GALAXY_LOGS_DIR\n#   The following commands will be executed as User galaxy\nUSER galaxy\n#  RUN cd $GALAXY_VIRTUAL_ENV && . bin/activate && pip install watchdog\nWORKDIR $GALAXY_ROOT\n#   Updating genome informations from UCSC\n#  RUN export GALAXY=$GALAXY_ROOT && sh ./cron/updateucsc.sh.sample\nRUN wget --quiet https://repo.anaconda.com/miniconda/Miniconda2-4.5.12-Linux-x86_64.sh -O ~/miniconda.sh \\\n && /bin/bash ~/miniconda.sh -b -p /tool_deps/_conda/ \\\n && rm ~/miniconda.sh \\\n && echo \". /tool_deps/_conda/etc/profile.d/conda.sh\" >> ~/.bashrc \\\n && echo \"conda activate base\" >> ~/.bashrc\n#   prefetch Python wheels\n#   Install all required Node dependencies. This is required to get proxy support to work for Interactive Environments\nRUN export PATH=/tool_deps/_conda/bin/:$PATH \\\n && conda install -c conda-forge nodejs=9.11.1 yarn=1.12.1 git \\\n && ./scripts/common_startup.sh --skip-client-build \\\n && . $GALAXY_VIRTUAL_ENV/bin/activate \\\n && python ./scripts/manage_tool_dependencies.py -c \"$GALAXY_CONFIG_FILE\" init_if_needed \\\n && cd $GALAXY_ROOT/lib/galaxy/web/proxy/js \\\n && npm install \\\n && cd $GALAXY_ROOT/client \\\n && yarn install --network-timeout 120000 --check-files \\\n && yarn run build-production-maps \\\n && rm -rf /home/galaxy/.cache/ \\\n && sed -i 's|database|..|' $GALAXY_ROOT/config/shed_tool_conf.xml\n#   Switch back to User root\nUSER root\n#   Create symlinks from $GALAXY_ROOT/* to /export/*\nRUN mv $GALAXY_ROOT/config /galaxy-export/config \\\n && ln -s -f /export/config $GALAXY_ROOT/config \\\n && mv $GALAXY_ROOT/tools /galaxy-export/tools \\\n && ln -s -f /export/tools $GALAXY_ROOT/tools \\\n && mv $GALAXY_ROOT/tool-data /galaxy-export/tool-data \\\n && ln -s -f /export/tool-data $GALAXY_ROOT/tool-data \\\n && mv $GALAXY_ROOT/display_applications /galaxy-export/display_applications \\\n && ln -s -f /export/display_applications $GALAXY_ROOT/display_applications \\\n && mv $GALAXY_ROOT/database /galaxy-export/database \\\n && ln -s -f /export/database $GALAXY_ROOT/database \\\n && rm -rf $GALARY_ROOT/.venv \\\n && ln -s -f /export/venv $GALAXY_ROOT/.venv \\\n && ln -s -f /export/venv $GALAXY_ROOT/venv\nWORKDIR /galaxy-export\n#   Mark folders as imported from the host.\nVOLUME [\"/export/\"]\nADD startup.sh /usr/bin/startup\nRUN chmod +x /usr/bin/startup\n#   Autostart script that is invoked during container start\nCMD [\"/usr/bin/startup\"]\n","originalDockerfileUglifiedHash":"8007d3b189f0032da6469b4a65031345","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/a567c5b1f58471141b47d06e931bd7a86bbf2956.dockerfile"}