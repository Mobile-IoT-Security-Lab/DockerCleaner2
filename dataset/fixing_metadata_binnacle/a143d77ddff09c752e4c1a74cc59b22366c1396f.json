{"seed":2521797943,"processedDockerfileHash":"d64535c263fc555979fe79407848b46c","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Copyright (c) Jupyter Development Team.\n#   Distributed under the terms of the Modified BSD License.\nFROM jupyter/scipy-notebook\nUSER $NB_USER\n#  Install nbgrader\nRUN conda install nbgrader\nRUN jupyter nbextension install --user --py nbgrader\nRUN jupyter nbextension enable --user --py nbgrader\nRUN jupyter serverextension enable --user --py nbgrader\nUSER root\nRUN apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends curl=7.88.1-7ubuntu1 libtinfo-dev=6.4-2 libzmq3-dev=4.3.4-6 libcairo2-dev=1.16.0-7 libpango1.0-dev=1.50.12+ds-1 libmagic-dev=1:5.44-3 libblas-dev=3.11.0-2 python3-pip=23.0.1+dfsg-1 netbase=6.4 liblapack-dev=3.11.0-2 -y ) \\\n && apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 575159689BEFB442 \\\n && echo 'deb http://download.fpcomplete.com/ubuntu trusty main' > /etc/apt/sources.list.d/fpco.list \\\n && curl -sSL https://get.haskellstack.org/ | sh \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\nENV PATH=\"/home/$NB_USER/.local/bin:${PATH}\"\nUSER $NB_USER\n#  JavaScript Installation\nRUN git clone https://github.com/notablemind/jupyter-nodejs.git \\\n && cd jupyter-nodejs \\\n && umask 0002 \\\n && mkdir -p ~/.ipython/kernels/nodejs/ \\\n && npm install \\\n && node install.js \\\n && npm run build \\\n && npm run build-ext\n#  Haskell Installation\nRUN PATH=//home/jovyan/.local/bin/:$PATH\nRUN export PATH\n#   Install stack from Stackage\nUSER root\nRUN curl -L https://www.stackage.org/stack/linux-x86_64 | tar xz --wildcards --strip-components=1 -C /usr/bin '*/stack'\nUSER $NB_USER\nWORKDIR /home/jovyan\nRUN stack --version\n#   Installing iHaskell from sources\nRUN mkdir ihaskell\nRUN git clone https://github.com/gibiansky/IHaskell.git --depth 1\nWORKDIR ihaskell\nRUN cp ../IHaskell/stack.yaml ./\n#   Fix for problem with cryptonite (https://github.com/gibiansky/IHaskell/issues/636)\nRUN echo \"ghc-options:\" >> stack.yaml\nRUN echo \" cryptonite: -opta-Wa,-mrelax-relocations=no\" >> stack.yaml\nRUN cat stack.yaml\nRUN stack setup\nRUN cp ../IHaskell/ihaskell.cabal ./ \\\n && cp -R ../IHaskell/ipython-kernel ../IHaskell/ghc-parser ../IHaskell/ihaskell-display ./\nRUN stack build --only-snapshot\nRUN cp -r ../IHaskell/src ../IHaskell/html ../IHaskell/main ../IHaskell/LICENSE ./\nRUN stack build\nRUN stack install\n#  Now rebuild cryptonite in order to fix problems\nRUN stack exec -- ghc-pkg unregister cryptonite --force\nRUN stack build\nRUN ihaskell install\n#   Install additional Haskell packages required for exercises\nRUN stack install http-conduit\nRUN stack install cassava\n#   Install Java Kernel\n#  USER root\n#  RUN echo \"deb http://ppa.launchpad.net/webupd8team/java/ubuntu xenial main\" | tee /etc/apt/sources.list.d/webupd8team-java.list && \\\n#  \techo \"deb-src http://ppa.launchpad.net/webupd8team/java/ubuntu xenial main\" | tee -a /etc/apt/sources.list.d/webupd8team-java.list && \\\n#  \tapt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys EEA14886 && \\\n#  \tapt-get update\n#  RUN echo debconf shared/accepted-oracle-license-v1-1 select true | sudo debconf-set-selections && \\\n#  \techo debconf shared/accepted-oracle-license-v1-1 seen true | sudo debconf-set-selections\n#  RUN apt-get install -y oracle-java9-installer\n#  USER $NB_USER\n#  WORKDIR /home/jovyan\n#  RUN git clone https://github.com/SpencerPark/jupyter-jvm-basekernel.git --depth 1 ./jupyter-jvm-basekernel && \\\n#  \tcd jupyter-jvm-basekernel && ls -al\n#  WORKDIR /home/jovyan/jupyter-jvm-basekernel\n#  RUN echo \"Currently (should be /home(jovyan/jupyter-jvm-basekernel) in $(pwd)\"\n#  RUN echo $(ls -al)\n#  RUN chmod u+x gradlew && ./gradlew publishToMavenLocal && cd /home/jovyan\n#  RUN cd /home/jovyan\n#  WORKDIR /home/jovyan\n#  RUN echo \"Currently in $(pwd)\"\n#  RUN git clone https://github.com/SpencerPark/IJava.git --depth 1 && \\\n#  \tcd IJava/\n#  WORKDIR /home/jovyan/IJava\n#  RUN echo \"Currently in $(pwd)\"\n#  RUN ls -al $(pwd)\n#  RUN chmod u+x ./gradlew && ./gradlew installKernel\n#  Installing C#\nWORKDIR /home/jovyan\nUSER root\nRUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF \\\n && echo \"deb http://download.mono-project.com/repo/ubuntu xenial main\" | sudo tee /etc/apt/sources.list.d/mono-official.list \\\n && :\nRUN (apt-get update ;apt-get install --no-install-recommends binutils=2.40-2ubuntu3 mono-devel=6.8.0.105+dfsg-3.3 ca-certificates-mono=6.8.0.105+dfsg-3.3 fsharp=4.0.0.4+dfsg2-2 nuget=2.8.7+md510+dhx1-1.1 referenceassemblies-pcl -y ) \\\n && rm -rf /var/lib/apt/lists/* /tmp/*\nRUN cert-sync /etc/ssl/certs/ca-certificates.crt \\\n && yes | certmgr -ssl -m https://go.microsoft.com \\\n && yes | certmgr -ssl -m https://nugetgallery.blob.core.windows.net \\\n && yes | certmgr -ssl -m https://nuget.org\nRUN chown -R $NB_USER $HOME/.config/\nUSER $NB_USER\nRUN git clone --recursive https://github.com/zabirauf/icsharp.git --depth 1 ./icsharp\n#   Build scriptcs\nWORKDIR /home/jovyan/icsharp/Engine\nRUN mozroots --import --sync --quiet\nRUN mono ./.nuget/NuGet.exe restore ./ScriptCs.sln\nRUN mkdir -p artifacts/Release/bin\n#   Build iCSharp\nWORKDIR /home/jovyan/icsharp\nRUN mozroots --import --sync --quiet\nRUN mono ./.nuget/NuGet.exe restore ./iCSharp.sln\nRUN mkdir -p build/Release/bin\nRUN xbuild ./iCSharp.sln /property:Configuration=Release /nologo /verbosity:normal\n#   Copy files safely\nRUN for line in $( find ./*/bin/Release/* ;); do cp $line ./build/Release/bin ; done\n#   Install kernel\nRUN sed -i 's_\"<.*>/icsharp_\"mono\",\"/home/jovyan/icsharp_g' kernel-spec/kernel.json\nRUN mv kernel-spec csharp\nUSER root\nRUN jupyter-kernelspec install --user csharp\n#   Install jupyter-scala\nUSER root\nRUN apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends default-jdk=2:1.17-74 -y )\nUSER $NB_USER\nWORKDIR /home/jovyan\nRUN curl -L -o jupyter-scala https://raw.githubusercontent.com/jupyter-scala/jupyter-scala/master/jupyter-scala \\\n && chmod +x jupyter-scala \\\n && ./jupyter-scala \\\n && rm -f jupyter-scala\nWORKDIR /home/jovyan/work\nUSER root\nRUN chmod -R g=u /home/jovyan\nENV PATH=\"/home/jovyan/ihaskell/.stack-work/install/x86_64-linux/lts-9.21/8.0.2/bin:/home/jovyan/.stack/snapshots/x86_64-linux/lts-9.21/8.0.2/bin:/home/jovyan/.stack/programs/x86_64-linux/ghc-8.0.2/bin:$PATH\"\n#  RUN echo \"PATH = $NEWPATH\"\n#  USER $NB_USER\nWORKDIR /home/jovyan/ihaskell\nRUN echo \"Test\"\nCOPY start.sh /usr/local/bin\nRUN chmod +x /usr/local/bin/start.sh\n#  COPY start-singleuser.sh /usr/local/bin\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Copyright (c) Jupyter Development Team.\n#  Distributed under the terms of the Modified BSD License.\nFROM jupyter/scipy-notebook\nUSER $NB_USER\n# Install nbgrader\nRUN conda install nbgrader\nRUN jupyter nbextension install --user --py nbgrader\nRUN jupyter nbextension enable --user --py nbgrader\nRUN jupyter serverextension enable --user --py nbgrader\nUSER root\nRUN apt-get update \\\n && apt-get install curl libtinfo-dev libzmq3-dev libcairo2-dev libpango1.0-dev libmagic-dev libblas-dev python3-pip netbase liblapack-dev -y \\\n && apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 575159689BEFB442 \\\n && echo 'deb http://download.fpcomplete.com/ubuntu trusty main' > /etc/apt/sources.list.d/fpco.list \\\n && curl -sSL https://get.haskellstack.org/ | sh \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\nENV PATH=\"/home/$NB_USER/.local/bin:${PATH}\"\nUSER $NB_USER\n# JavaScript Installation\nRUN git clone https://github.com/notablemind/jupyter-nodejs.git \\\n && cd jupyter-nodejs \\\n && umask 0002 \\\n && mkdir -p ~/.ipython/kernels/nodejs/ \\\n && npm install \\\n && node install.js \\\n && npm run build \\\n && npm run build-ext\n# Haskell Installation\nRUN PATH=//home/jovyan/.local/bin/:$PATH\nRUN export PATH\n#  Install stack from Stackage\nUSER root\nRUN curl -L https://www.stackage.org/stack/linux-x86_64 | tar xz --wildcards --strip-components=1 -C /usr/bin '*/stack'\nUSER $NB_USER\nWORKDIR /home/jovyan\nRUN stack --version\n#  Installing iHaskell from sources\nRUN mkdir ihaskell\nRUN git clone https://github.com/gibiansky/IHaskell.git --depth 1\nWORKDIR ihaskell\nRUN cp ../IHaskell/stack.yaml ./\n#  Fix for problem with cryptonite (https://github.com/gibiansky/IHaskell/issues/636)\nRUN echo \"ghc-options:\" >> stack.yaml\nRUN echo \" cryptonite: -opta-Wa,-mrelax-relocations=no\" >> stack.yaml\nRUN cat stack.yaml\nRUN stack setup\nRUN cp ../IHaskell/ihaskell.cabal ./ \\\n && cp -R ../IHaskell/ipython-kernel ../IHaskell/ghc-parser ../IHaskell/ihaskell-display ./\nRUN stack build --only-snapshot\nRUN cp -r ../IHaskell/src ../IHaskell/html ../IHaskell/main ../IHaskell/LICENSE ./\nRUN stack build\nRUN stack install\n# Now rebuild cryptonite in order to fix problems\nRUN stack exec -- ghc-pkg unregister cryptonite --force\nRUN stack build\nRUN ihaskell install\n#  Install additional Haskell packages required for exercises\nRUN stack install http-conduit\nRUN stack install cassava\n#  Install Java Kernel\n# USER root\n# RUN echo \"deb http://ppa.launchpad.net/webupd8team/java/ubuntu xenial main\" | tee /etc/apt/sources.list.d/webupd8team-java.list && \\\n# \techo \"deb-src http://ppa.launchpad.net/webupd8team/java/ubuntu xenial main\" | tee -a /etc/apt/sources.list.d/webupd8team-java.list && \\\n# \tapt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys EEA14886 && \\\n# \tapt-get update\n# RUN echo debconf shared/accepted-oracle-license-v1-1 select true | sudo debconf-set-selections && \\\n# \techo debconf shared/accepted-oracle-license-v1-1 seen true | sudo debconf-set-selections\n# RUN apt-get install -y oracle-java9-installer\n# USER $NB_USER\n# WORKDIR /home/jovyan\n# RUN git clone https://github.com/SpencerPark/jupyter-jvm-basekernel.git --depth 1 ./jupyter-jvm-basekernel && \\\n# \tcd jupyter-jvm-basekernel && ls -al\n# WORKDIR /home/jovyan/jupyter-jvm-basekernel\n# RUN echo \"Currently (should be /home(jovyan/jupyter-jvm-basekernel) in $(pwd)\"\n# RUN echo $(ls -al)\n# RUN chmod u+x gradlew && ./gradlew publishToMavenLocal && cd /home/jovyan\n# RUN cd /home/jovyan\n# WORKDIR /home/jovyan\n# RUN echo \"Currently in $(pwd)\"\n# RUN git clone https://github.com/SpencerPark/IJava.git --depth 1 && \\\n# \tcd IJava/\n# WORKDIR /home/jovyan/IJava\n# RUN echo \"Currently in $(pwd)\"\n# RUN ls -al $(pwd)\n# RUN chmod u+x ./gradlew && ./gradlew installKernel\n# Installing C#\nWORKDIR /home/jovyan\nUSER root\nRUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF \\\n && echo \"deb http://download.mono-project.com/repo/ubuntu xenial main\" | sudo tee /etc/apt/sources.list.d/mono-official.list \\\n && apt-get update\nRUN apt-get install binutils mono-devel ca-certificates-mono fsharp nuget referenceassemblies-pcl -y \\\n && rm -rf /var/lib/apt/lists/* /tmp/*\nRUN cert-sync /etc/ssl/certs/ca-certificates.crt \\\n && yes | certmgr -ssl -m https://go.microsoft.com \\\n && yes | certmgr -ssl -m https://nugetgallery.blob.core.windows.net \\\n && yes | certmgr -ssl -m https://nuget.org\nRUN chown -R $NB_USER $HOME/.config/\nUSER $NB_USER\nRUN git clone --recursive https://github.com/zabirauf/icsharp.git --depth 1 ./icsharp\n#  Build scriptcs\nWORKDIR /home/jovyan/icsharp/Engine\nRUN mozroots --import --sync --quiet\nRUN mono ./.nuget/NuGet.exe restore ./ScriptCs.sln\nRUN mkdir -p artifacts/Release/bin\n#  Build iCSharp\nWORKDIR /home/jovyan/icsharp\nRUN mozroots --import --sync --quiet\nRUN mono ./.nuget/NuGet.exe restore ./iCSharp.sln\nRUN mkdir -p build/Release/bin\nRUN xbuild ./iCSharp.sln /property:Configuration=Release /nologo /verbosity:normal\n#  Copy files safely\nRUN for line in $( find ./*/bin/Release/* ;); do cp $line ./build/Release/bin ; done\n#  Install kernel\nRUN sed -i 's_\"<.*>/icsharp_\"mono\",\"/home/jovyan/icsharp_g' kernel-spec/kernel.json\nRUN mv kernel-spec csharp\nUSER root\nRUN jupyter-kernelspec install --user csharp\n#  Install jupyter-scala\nUSER root\nRUN apt-get update \\\n && apt-get install default-jdk -y\nUSER $NB_USER\nWORKDIR /home/jovyan\nRUN curl -L -o jupyter-scala https://raw.githubusercontent.com/jupyter-scala/jupyter-scala/master/jupyter-scala \\\n && chmod +x jupyter-scala \\\n && ./jupyter-scala \\\n && rm -f jupyter-scala\nWORKDIR /home/jovyan/work\nUSER root\nRUN chmod -R g=u /home/jovyan\nENV PATH=\"/home/jovyan/ihaskell/.stack-work/install/x86_64-linux/lts-9.21/8.0.2/bin:/home/jovyan/.stack/snapshots/x86_64-linux/lts-9.21/8.0.2/bin:/home/jovyan/.stack/programs/x86_64-linux/ghc-8.0.2/bin:$PATH\"\n# RUN echo \"PATH = $NEWPATH\"\n# USER $NB_USER\nWORKDIR /home/jovyan/ihaskell\nRUN echo \"Test\"\nCOPY start.sh /usr/local/bin\nRUN chmod +x /usr/local/bin/start.sh\n# COPY start-singleuser.sh /usr/local/bin\n","injectedSmells":[],"originalDockerfileHash":"35266d0a2b4a24b7dc9e17fb964f9537","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Copyright (c) Jupyter Development Team.\n#   Distributed under the terms of the Modified BSD License.\nFROM jupyter/scipy-notebook\nUSER $NB_USER\n#  Install nbgrader\nRUN conda install nbgrader\nRUN jupyter nbextension install --user --py nbgrader\nRUN jupyter nbextension enable --user --py nbgrader\nRUN jupyter serverextension enable --user --py nbgrader\nUSER root\nRUN apt-get update \\\n && apt-get install curl libtinfo-dev libzmq3-dev libcairo2-dev libpango1.0-dev libmagic-dev libblas-dev python3-pip netbase liblapack-dev -y \\\n && apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 575159689BEFB442 \\\n && echo 'deb http://download.fpcomplete.com/ubuntu trusty main' > /etc/apt/sources.list.d/fpco.list \\\n && curl -sSL https://get.haskellstack.org/ | sh \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\nENV PATH=\"/home/$NB_USER/.local/bin:${PATH}\"\nUSER $NB_USER\n#  JavaScript Installation\nRUN git clone https://github.com/notablemind/jupyter-nodejs.git \\\n && cd jupyter-nodejs \\\n && umask 0002 \\\n && mkdir -p ~/.ipython/kernels/nodejs/ \\\n && npm install \\\n && node install.js \\\n && npm run build \\\n && npm run build-ext\n#  Haskell Installation\nRUN PATH=//home/jovyan/.local/bin/:$PATH\nRUN export PATH\n#   Install stack from Stackage\nUSER root\nRUN curl -L https://www.stackage.org/stack/linux-x86_64 | tar xz --wildcards --strip-components=1 -C /usr/bin '*/stack'\nUSER $NB_USER\nWORKDIR /home/jovyan\nRUN stack --version\n#   Installing iHaskell from sources\nRUN mkdir ihaskell\nRUN git clone https://github.com/gibiansky/IHaskell.git --depth 1\nWORKDIR ihaskell\nRUN cp ../IHaskell/stack.yaml ./\n#   Fix for problem with cryptonite (https://github.com/gibiansky/IHaskell/issues/636)\nRUN echo \"ghc-options:\" >> stack.yaml\nRUN echo \" cryptonite: -opta-Wa,-mrelax-relocations=no\" >> stack.yaml\nRUN cat stack.yaml\nRUN stack setup\nRUN cp ../IHaskell/ihaskell.cabal ./ \\\n && cp -R ../IHaskell/ipython-kernel ../IHaskell/ghc-parser ../IHaskell/ihaskell-display ./\nRUN stack build --only-snapshot\nRUN cp -r ../IHaskell/src ../IHaskell/html ../IHaskell/main ../IHaskell/LICENSE ./\nRUN stack build\nRUN stack install\n#  Now rebuild cryptonite in order to fix problems\nRUN stack exec -- ghc-pkg unregister cryptonite --force\nRUN stack build\nRUN ihaskell install\n#   Install additional Haskell packages required for exercises\nRUN stack install http-conduit\nRUN stack install cassava\n#   Install Java Kernel\n#  USER root\n#  RUN echo \"deb http://ppa.launchpad.net/webupd8team/java/ubuntu xenial main\" | tee /etc/apt/sources.list.d/webupd8team-java.list && \\\n#  \techo \"deb-src http://ppa.launchpad.net/webupd8team/java/ubuntu xenial main\" | tee -a /etc/apt/sources.list.d/webupd8team-java.list && \\\n#  \tapt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys EEA14886 && \\\n#  \tapt-get update\n#  RUN echo debconf shared/accepted-oracle-license-v1-1 select true | sudo debconf-set-selections && \\\n#  \techo debconf shared/accepted-oracle-license-v1-1 seen true | sudo debconf-set-selections\n#  RUN apt-get install -y oracle-java9-installer\n#  USER $NB_USER\n#  WORKDIR /home/jovyan\n#  RUN git clone https://github.com/SpencerPark/jupyter-jvm-basekernel.git --depth 1 ./jupyter-jvm-basekernel && \\\n#  \tcd jupyter-jvm-basekernel && ls -al\n#  WORKDIR /home/jovyan/jupyter-jvm-basekernel\n#  RUN echo \"Currently (should be /home(jovyan/jupyter-jvm-basekernel) in $(pwd)\"\n#  RUN echo $(ls -al)\n#  RUN chmod u+x gradlew && ./gradlew publishToMavenLocal && cd /home/jovyan\n#  RUN cd /home/jovyan\n#  WORKDIR /home/jovyan\n#  RUN echo \"Currently in $(pwd)\"\n#  RUN git clone https://github.com/SpencerPark/IJava.git --depth 1 && \\\n#  \tcd IJava/\n#  WORKDIR /home/jovyan/IJava\n#  RUN echo \"Currently in $(pwd)\"\n#  RUN ls -al $(pwd)\n#  RUN chmod u+x ./gradlew && ./gradlew installKernel\n#  Installing C#\nWORKDIR /home/jovyan\nUSER root\nRUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF \\\n && echo \"deb http://download.mono-project.com/repo/ubuntu xenial main\" | sudo tee /etc/apt/sources.list.d/mono-official.list \\\n && apt-get update\nRUN apt-get install binutils mono-devel ca-certificates-mono fsharp nuget referenceassemblies-pcl -y \\\n && rm -rf /var/lib/apt/lists/* /tmp/*\nRUN cert-sync /etc/ssl/certs/ca-certificates.crt \\\n && yes | certmgr -ssl -m https://go.microsoft.com \\\n && yes | certmgr -ssl -m https://nugetgallery.blob.core.windows.net \\\n && yes | certmgr -ssl -m https://nuget.org\nRUN chown -R $NB_USER $HOME/.config/\nUSER $NB_USER\nRUN git clone --recursive https://github.com/zabirauf/icsharp.git --depth 1 ./icsharp\n#   Build scriptcs\nWORKDIR /home/jovyan/icsharp/Engine\nRUN mozroots --import --sync --quiet\nRUN mono ./.nuget/NuGet.exe restore ./ScriptCs.sln\nRUN mkdir -p artifacts/Release/bin\n#   Build iCSharp\nWORKDIR /home/jovyan/icsharp\nRUN mozroots --import --sync --quiet\nRUN mono ./.nuget/NuGet.exe restore ./iCSharp.sln\nRUN mkdir -p build/Release/bin\nRUN xbuild ./iCSharp.sln /property:Configuration=Release /nologo /verbosity:normal\n#   Copy files safely\nRUN for line in $( find ./*/bin/Release/* ;); do cp $line ./build/Release/bin ; done\n#   Install kernel\nRUN sed -i 's_\"<.*>/icsharp_\"mono\",\"/home/jovyan/icsharp_g' kernel-spec/kernel.json\nRUN mv kernel-spec csharp\nUSER root\nRUN jupyter-kernelspec install --user csharp\n#   Install jupyter-scala\nUSER root\nRUN apt-get update \\\n && apt-get install default-jdk -y\nUSER $NB_USER\nWORKDIR /home/jovyan\nRUN curl -L -o jupyter-scala https://raw.githubusercontent.com/jupyter-scala/jupyter-scala/master/jupyter-scala \\\n && chmod +x jupyter-scala \\\n && ./jupyter-scala \\\n && rm -f jupyter-scala\nWORKDIR /home/jovyan/work\nUSER root\nRUN chmod -R g=u /home/jovyan\nENV PATH=\"/home/jovyan/ihaskell/.stack-work/install/x86_64-linux/lts-9.21/8.0.2/bin:/home/jovyan/.stack/snapshots/x86_64-linux/lts-9.21/8.0.2/bin:/home/jovyan/.stack/programs/x86_64-linux/ghc-8.0.2/bin:$PATH\"\n#  RUN echo \"PATH = $NEWPATH\"\n#  USER $NB_USER\nWORKDIR /home/jovyan/ihaskell\nRUN echo \"Test\"\nCOPY start.sh /usr/local/bin\nRUN chmod +x /usr/local/bin/start.sh\n#  COPY start-singleuser.sh /usr/local/bin\n","originalDockerfileUglifiedHash":"c90a58f2f6b019d4e8ba3fd8c2c33df5","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/a143d77ddff09c752e4c1a74cc59b22366c1396f.dockerfile"}