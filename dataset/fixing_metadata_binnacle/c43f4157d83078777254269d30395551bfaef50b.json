{"seed":1692696819,"processedDockerfileHash":"701828e018069286894ec0176dbfca71","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["have-a-healthcheck","have-a-user"],"processedDockerfile":"#\n#   NOTE: THIS DOCKERFILE IS GENERATED VIA \"update.sh\"\n#\n#   PLEASE DO NOT EDIT IT DIRECTLY.\n#\nFROM debian:stretch-slim\n#   add our user and group first to make sure their IDs get assigned consistently, regardless of whatever dependencies get added\nRUN set -eux ; groupadd -r varnish ; for user in varnish vcache; do useradd -r -g varnish $user ; done\n#   prevent Debian's Varnish packages from being installed\nRUN set -eux ; { echo 'Package: varnish*' ;echo 'Pin: release *' ;echo 'Pin-Priority: -1' ; } > /etc/apt/preferences.d/no-debian-varnish\n#   dependencies required for building VMOD (Varnish modules)\nENV VMOD_BUILD_DEPS=\"autoconf-archive  automake  autotools-dev  libtool  make  pkg-config  python3\"\n#   persistent / runtime deps\nRUN apt-get update \\\n && apt-get install --no-install-recommends gcc libc6-dev -y \\\n && rm -r /var/lib/apt/lists/*\nENV VARNISH_VERSION=\"6.2.0\"\nENV VARNISH_URL=\"https://varnish-cache.org/_downloads/varnish-6.2.0.tgz\"\nENV VARNISH_SHA256=\"c37af353aca25a83d22f9c5ce0ae800fe433e4d02e1457e02886a5849f988e53\"\nRUN set -eux ; fetchDeps=' ca-certificates wget ' ; buildDeps=\" $VMOD_BUILD_DEPS dpkg-dev libedit-dev libjemalloc-dev libncurses5-dev libpcre3-dev \" ; savedAptMark=\"$( apt-mark showmanual ;)\" ; apt-get update ; apt-get install --no-install-recommends $fetchDeps $buildDeps -y ; rm -rf /var/lib/apt/lists/* ; wget -O varnish.tar.gz \"$VARNISH_URL\" ; if [ -n \"$VARNISH_SHA256\" ] ; then echo \"$VARNISH_SHA256 *varnish.tar.gz\" | sha256sum -c - ; fi ; mkdir -p /usr/src/varnish ; tar -zxf varnish.tar.gz -C /usr/src/varnish --strip-components=1 ; rm varnish.tar.gz ; cd /usr/src/varnish ; gnuArch=\"$( dpkg-architecture --query DEB_BUILD_GNU_TYPE ;)\" ; ./autogen.sh ; ./configure --build=\"$gnuArch\" --with-rst2man=$( command -v true ;) --with-sphinx-build=$( command -v true ;) ; make -j \"$( nproc ;)\" ; make install ; ldconfig ; cd / ; rm -r /usr/src/varnish ; apt-mark auto '.*' > /dev/null; [ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark ; find /usr/local -type f -executable -exec ldd '{}' ';' | awk '/=>/ { print $(NF-1) }' | sort -u | xargs -r dpkg-query --search | cut -d: -f1 | sort -u | xargs -r apt-mark manual ; apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false ; varnishd -V\nWORKDIR /usr/local/var/varnish\nRUN chown -R varnish:varnish /usr/local/var/varnish\nVOLUME /usr/local/var/varnish\nCOPY docker-varnish-entrypoint /usr/local/bin/\nENTRYPOINT [\"docker-varnish-entrypoint\"]\nEXPOSE 80/tcp\nCMD [\"varnishd\", \"-F\", \"-f\", \"/usr/local/etc/varnish/default.vcl\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#\n#  NOTE: THIS DOCKERFILE IS GENERATED VIA \"update.sh\"\n#\n#  PLEASE DO NOT EDIT IT DIRECTLY.\n#\nFROM debian:stretch-slim\n#  add our user and group first to make sure their IDs get assigned consistently, regardless of whatever dependencies get added\nRUN set -eux ; groupadd -r varnish ; for user in varnish vcache; do useradd -r -g varnish $user ; done\n#  prevent Debian's Varnish packages from being installed\nRUN set -eux ; { echo 'Package: varnish*' ;echo 'Pin: release *' ;echo 'Pin-Priority: -1' ; } > /etc/apt/preferences.d/no-debian-varnish\n#  dependencies required for building VMOD (Varnish modules)\nENV VMOD_BUILD_DEPS=\"autoconf-archive  automake  autotools-dev  libtool  make  pkg-config  python3\"\n#  persistent / runtime deps\nRUN apt-get update \\\n && apt-get install --no-install-recommends gcc libc6-dev -y \\\n && rm -r /var/lib/apt/lists/*\nENV VARNISH_VERSION=\"6.2.0\"\nENV VARNISH_URL=\"https://varnish-cache.org/_downloads/varnish-6.2.0.tgz\"\nENV VARNISH_SHA256=\"c37af353aca25a83d22f9c5ce0ae800fe433e4d02e1457e02886a5849f988e53\"\nRUN set -eux ; fetchDeps=' ca-certificates wget ' ; buildDeps=\" $VMOD_BUILD_DEPS dpkg-dev libedit-dev libjemalloc-dev libncurses5-dev libpcre3-dev \" ; savedAptMark=\"$( apt-mark showmanual ;)\" ; apt-get update ; apt-get install --no-install-recommends $fetchDeps $buildDeps -y ; rm -rf /var/lib/apt/lists/* ; wget -O varnish.tar.gz \"$VARNISH_URL\" ; if [ -n \"$VARNISH_SHA256\" ] ; then echo \"$VARNISH_SHA256 *varnish.tar.gz\" | sha256sum -c - ; fi ; mkdir -p /usr/src/varnish ; tar -zxf varnish.tar.gz -C /usr/src/varnish --strip-components=1 ; rm varnish.tar.gz ; cd /usr/src/varnish ; gnuArch=\"$( dpkg-architecture --query DEB_BUILD_GNU_TYPE ;)\" ; ./autogen.sh ; ./configure --build=\"$gnuArch\" --with-rst2man=$( command -v true ;) --with-sphinx-build=$( command -v true ;) ; make -j \"$( nproc ;)\" ; make install ; ldconfig ; cd / ; rm -r /usr/src/varnish ; apt-mark auto '.*' > /dev/null; [ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark ; find /usr/local -type f -executable -exec ldd '{}' ';' | awk '/=>/ { print $(NF-1) }' | sort -u | xargs -r dpkg-query --search | cut -d: -f1 | sort -u | xargs -r apt-mark manual ; apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false ; varnishd -V\nWORKDIR /usr/local/var/varnish\nRUN chown -R varnish:varnish /usr/local/var/varnish\nVOLUME /usr/local/var/varnish\nCOPY docker-varnish-entrypoint /usr/local/bin/\nENTRYPOINT [\"docker-varnish-entrypoint\"]\nEXPOSE 80/tcp\nCMD [\"varnishd\", \"-F\", \"-f\", \"/usr/local/etc/varnish/default.vcl\"]\n","injectedSmells":[],"originalDockerfileHash":"6891bf6d5fb4ad63a530498264e480f3","successfullyInjectedSmells":[],"originalDockerfileUglified":"#\n#   NOTE: THIS DOCKERFILE IS GENERATED VIA \"update.sh\"\n#\n#   PLEASE DO NOT EDIT IT DIRECTLY.\n#\nFROM debian:stretch-slim\n#   add our user and group first to make sure their IDs get assigned consistently, regardless of whatever dependencies get added\nRUN set -eux ; groupadd -r varnish ; for user in varnish vcache; do useradd -r -g varnish $user ; done\n#   prevent Debian's Varnish packages from being installed\nRUN set -eux ; { echo 'Package: varnish*' ;echo 'Pin: release *' ;echo 'Pin-Priority: -1' ; } > /etc/apt/preferences.d/no-debian-varnish\n#   dependencies required for building VMOD (Varnish modules)\nENV VMOD_BUILD_DEPS=\"autoconf-archive  automake  autotools-dev  libtool  make  pkg-config  python3\"\n#   persistent / runtime deps\nRUN apt-get update \\\n && apt-get install --no-install-recommends gcc libc6-dev -y \\\n && rm -r /var/lib/apt/lists/*\nENV VARNISH_VERSION=\"6.2.0\"\nENV VARNISH_URL=\"https://varnish-cache.org/_downloads/varnish-6.2.0.tgz\"\nENV VARNISH_SHA256=\"c37af353aca25a83d22f9c5ce0ae800fe433e4d02e1457e02886a5849f988e53\"\nRUN set -eux ; fetchDeps=' ca-certificates wget ' ; buildDeps=\" $VMOD_BUILD_DEPS dpkg-dev libedit-dev libjemalloc-dev libncurses5-dev libpcre3-dev \" ; savedAptMark=\"$( apt-mark showmanual ;)\" ; apt-get update ; apt-get install --no-install-recommends $fetchDeps $buildDeps -y ; rm -rf /var/lib/apt/lists/* ; wget -O varnish.tar.gz \"$VARNISH_URL\" ; if [ -n \"$VARNISH_SHA256\" ] ; then echo \"$VARNISH_SHA256 *varnish.tar.gz\" | sha256sum -c - ; fi ; mkdir -p /usr/src/varnish ; tar -zxf varnish.tar.gz -C /usr/src/varnish --strip-components=1 ; rm varnish.tar.gz ; cd /usr/src/varnish ; gnuArch=\"$( dpkg-architecture --query DEB_BUILD_GNU_TYPE ;)\" ; ./autogen.sh ; ./configure --build=\"$gnuArch\" --with-rst2man=$( command -v true ;) --with-sphinx-build=$( command -v true ;) ; make -j \"$( nproc ;)\" ; make install ; ldconfig ; cd / ; rm -r /usr/src/varnish ; apt-mark auto '.*' > /dev/null; [ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark ; find /usr/local -type f -executable -exec ldd '{}' ';' | awk '/=>/ { print $(NF-1) }' | sort -u | xargs -r dpkg-query --search | cut -d: -f1 | sort -u | xargs -r apt-mark manual ; apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false ; varnishd -V\nWORKDIR /usr/local/var/varnish\nRUN chown -R varnish:varnish /usr/local/var/varnish\nVOLUME /usr/local/var/varnish\nCOPY docker-varnish-entrypoint /usr/local/bin/\nENTRYPOINT [\"docker-varnish-entrypoint\"]\nEXPOSE 80/tcp\nCMD [\"varnishd\", \"-F\", \"-f\", \"/usr/local/etc/varnish/default.vcl\"]\n","originalDockerfileUglifiedHash":"e2b9968ebc49f93747517f78df91cb2b","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/c43f4157d83078777254269d30395551bfaef50b.dockerfile"}