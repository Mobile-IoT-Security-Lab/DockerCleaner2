{"seed":2446671239,"processedDockerfileHash":"a3b00aad33659b351d68c1bee115f80e","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM ubuntu:18.04\nMAINTAINER Jason Gegere <jason@htmlgraphic.com>\nENV OS_LOCALE=\"en_US.UTF-8\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends locales=2.27-3ubuntu1.6 -y \\\n && locale-gen ${OS_LOCALE}\nENV LANG=\"${OS_LOCALE}\" \\\n    LANGUAGE=\"${OS_LOCALE}\" \\\n    LC_ALL=\"${OS_LOCALE}\" \\\n    DEBIAN_FRONTEND=\"noninteractive\"\n#   Install packages then remove cache package list information\nRUN BUILD_DEPS='software-properties-common' \\\n && dpkg-reconfigure locales \\\n && apt-get install --no-install-recommends $BUILD_DEPS -y \\\n && add-apt-repository -y ppa:ondrej/php \\\n && add-apt-repository -y ppa:ondrej/apache2 \\\n && apt-get update \\\n && apt-get install --no-install-recommends curl=7.58.0-2ubuntu3.24 apache2=2.4.29-1ubuntu4.27 libsasl2-modules=2.1.27~101-g0780600+dfsg-3ubuntu2.4 libapache2-mod-php7.3 php7.3-cli php7.3-readline php7.3-mbstring php7.3-zip php7.3-intl php7.3-xml php7.3-json php7.3-curl php7.3-gd php7.3-pgsql php7.3-mysql php-pear=1:1.10.5+submodules+notgz-1ubuntu1.18.04.4 -y \\\n && apt-get update \\\n && apt-get install --no-install-recommends git=1:2.17.1-1ubuntu0.17 cron=3.0pl1-128.1ubuntu1.2 ghostscript=9.26~dfsg+0-0ubuntu0.18.04.17 mailutils=1:3.4-1 iputils-ping=3:20161105-1ubuntu3 mysql-client=5.7.41-0ubuntu0.18.04.1 libgs-dev=9.26~dfsg+0-0ubuntu0.18.04.17 imagemagick=8:6.9.7.4+dfsg-16ubuntu6.15 libmagickwand-dev=8:6.9.7.4+dfsg-16ubuntu6.15 language-pack-en=1:18.04+20190718 supervisor=3.3.1-1.1 rsyslog=8.32.0-1ubuntu4.2 vim=2:8.0.1453-1ubuntu1.11 wget=1.19.4-1ubuntu2.2 postfix=3.3.0-1ubuntu0.4 -yq \\\n && apt-get purge -y --auto-remove $BUILD_DEPS \\\n && apt-get autoremove -y \\\n && rm -rf /var/lib/apt/lists/*\n#   POSTFIX\nRUN update-locale LANG=en_US.UTF-8\n#   Copy files to build app, add coming page to root apache dir, include self\n#   signed SHA256 certs, unit tests to check over the setup\nRUN mkdir -p /opt\nCOPY ./app /opt/app\nCOPY ./tests /opt/tests\n#   Unit tests run via build_tests.sh\nRUN tar xf /opt/tests/2.1.6.tar.gz -C /opt/tests/\n#   SUPERVISOR\nRUN chmod -R 755 /opt/* \\\n && mkdir -p /var/log/supervisor \\\n && cp /opt/app/supervisord /etc/supervisor/conf.d/supervisord.conf\n#   COMPOSER\nRUN curl -sS https://getcomposer.org/installer | php \\\n && mv composer.phar /usr/local/bin/composer\nRUN composer global require \"laravel/installer\"\nRUN composer global require \"vlucas/phpdotenv\"\n#   WP-CLI\nRUN curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar \\\n && chmod +x wp-cli.phar \\\n && mv wp-cli.phar /usr/local/bin/wp\n#   wkhtmltox > HTML > PDF Conversation\nRUN tar xf /opt/app/wkhtmltox-0.12.4_linux-generic-amd64.tar.xz -C /opt \\\n && mv /opt/wkhtmltox/bin/wk* /usr/bin/\nRUN wkhtmltopdf --version\n#   Enable Apache mods.\nRUN a2enmod userdir rewrite ssl\n#   Environment variables contained within build container.\nENV TERM=\"xterm\" \\\n    LISTEN_PORT=\"80\" \\\n    APACHE_RUN_USER=\"www-data\" \\\n    APACHE_RUN_GROUP=\"www-data\" \\\n    APACHE_LOG_DIR=\"/var/log/apache2\" \\\n    APACHE_LOCK_DIR=\"/var/lock/apache2\" \\\n    APACHE_PID_FILE=\"/var/run/apache2.pid\" \\\n    AUTHORIZED_KEYS=\"$AUTHORIZED_KEYS\" \\\n    DOCKERCLOUD_SERVICE_FQDN=\"$DOCKERCLOUD_SERVICE_FQDN\" \\\n    LOG_TOKEN=\"$LOG_TOKEN\" \\\n    NODE_ENVIRONMENT=\"$NODE_ENVIRONMENT\" \\\n    PATH=\"~/.composer/vendor/bin:$PATH\" \\\n    SMTP_HOST=\"$SMTP_HOST\" \\\n    SASL_USER=\"$SASL_USER\" \\\n    SASL_PASS=\"$SASL_PASS\"\n#   Build-time metadata as defined at http://label-schema.org\nARG BUILD_DATE\nARG VCS_REF\nARG VERSION\nLABEL org.label-schema.build-date=\"$BUILD_DATE\" \\\n      org.label-schema.name=\"Apache Docker\" \\\n      org.label-schema.description=\"Docker container running Apache running on Ubuntu, Composer, Lavavel, TDD via Shippable & CircleCI\" \\\n      org.label-schema.url=\"https://htmlgraphic.com\" \\\n      org.label-schema.vcs-ref=\"$VCS_REF\" \\\n      org.label-schema.vcs-url=\"https://github.com/htmlgraphic/Apache\" \\\n      org.label-schema.vendor=\"HTMLgraphic, LLC\" \\\n      org.label-schema.version=\"$VERSION\" \\\n      org.label-schema.schema-version=\"1.0\"\n#   Add VOLUMEs for persistant data or to allow various\n#   backups of config and databases via --volumes-from\n#   http://bit.ly/autobuild-and-autodeploy\nVOLUME [\"/backup\"]\n#   Note that EXPOSE only works for inter-container links. It doesn't make ports\n#   accessible from the host. To expose port(s) to the host, at runtime, use the -p flag.\nEXPOSE 80/tcp 443/tcp\n#  CMD [\"/opt/app/run.sh\", \"env | grep _ >> /etc/environment && supervisord -n\"]\nCMD [\"/opt/app/run.sh\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:18.04\nMAINTAINER Jason Gegere <jason@htmlgraphic.com>\nENV OS_LOCALE=\"en_US.UTF-8\"\nRUN apt-get update \\\n && apt-get install locales -y \\\n && locale-gen ${OS_LOCALE}\nENV LANG=\"${OS_LOCALE}\" \\\n    LANGUAGE=\"${OS_LOCALE}\" \\\n    LC_ALL=\"${OS_LOCALE}\" \\\n    DEBIAN_FRONTEND=\"noninteractive\"\n#  Install packages then remove cache package list information\nRUN BUILD_DEPS='software-properties-common' \\\n && dpkg-reconfigure locales \\\n && apt-get install $BUILD_DEPS -y \\\n && add-apt-repository -y ppa:ondrej/php \\\n && add-apt-repository -y ppa:ondrej/apache2 \\\n && apt-get update \\\n && apt-get install curl apache2 libsasl2-modules libapache2-mod-php7.3 php7.3-cli php7.3-readline php7.3-mbstring php7.3-zip php7.3-intl php7.3-xml php7.3-json php7.3-curl php7.3-gd php7.3-pgsql php7.3-mysql php-pear -y \\\n && apt-get update \\\n && apt-get install --no-install-recommends git cron ghostscript mailutils iputils-ping mysql-client libgs-dev imagemagick libmagickwand-dev language-pack-en supervisor rsyslog vim wget postfix -yq \\\n && apt-get purge -y --auto-remove $BUILD_DEPS \\\n && apt-get autoremove -y \\\n && rm -rf /var/lib/apt/lists/*\n#  POSTFIX\nRUN update-locale LANG=en_US.UTF-8\n#  Copy files to build app, add coming page to root apache dir, include self\n#  signed SHA256 certs, unit tests to check over the setup\nRUN mkdir -p /opt\nCOPY ./app /opt/app\nCOPY ./tests /opt/tests\n#  Unit tests run via build_tests.sh\nRUN tar xf /opt/tests/2.1.6.tar.gz -C /opt/tests/\n#  SUPERVISOR\nRUN chmod -R 755 /opt/* \\\n && mkdir -p /var/log/supervisor \\\n && cp /opt/app/supervisord /etc/supervisor/conf.d/supervisord.conf\n#  COMPOSER\nRUN curl -sS https://getcomposer.org/installer | php \\\n && mv composer.phar /usr/local/bin/composer\nRUN composer global require \"laravel/installer\"\nRUN composer global require \"vlucas/phpdotenv\"\n#  WP-CLI\nRUN curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar \\\n && chmod +x wp-cli.phar \\\n && mv wp-cli.phar /usr/local/bin/wp\n#  wkhtmltox > HTML > PDF Conversation\nRUN tar xf /opt/app/wkhtmltox-0.12.4_linux-generic-amd64.tar.xz -C /opt \\\n && mv /opt/wkhtmltox/bin/wk* /usr/bin/\nRUN wkhtmltopdf --version\n#  Enable Apache mods.\nRUN a2enmod userdir rewrite ssl\n#  Environment variables contained within build container.\nENV TERM=\"xterm\" \\\n    LISTEN_PORT=\"80\" \\\n    APACHE_RUN_USER=\"www-data\" \\\n    APACHE_RUN_GROUP=\"www-data\" \\\n    APACHE_LOG_DIR=\"/var/log/apache2\" \\\n    APACHE_LOCK_DIR=\"/var/lock/apache2\" \\\n    APACHE_PID_FILE=\"/var/run/apache2.pid\" \\\n    AUTHORIZED_KEYS=\"$AUTHORIZED_KEYS\" \\\n    DOCKERCLOUD_SERVICE_FQDN=\"$DOCKERCLOUD_SERVICE_FQDN\" \\\n    LOG_TOKEN=\"$LOG_TOKEN\" \\\n    NODE_ENVIRONMENT=\"$NODE_ENVIRONMENT\" \\\n    PATH=\"~/.composer/vendor/bin:$PATH\" \\\n    SMTP_HOST=\"$SMTP_HOST\" \\\n    SASL_USER=\"$SASL_USER\" \\\n    SASL_PASS=\"$SASL_PASS\"\n#  Build-time metadata as defined at http://label-schema.org\nARG BUILD_DATE\nARG VCS_REF\nARG VERSION\nLABEL org.label-schema.build-date=\"$BUILD_DATE\" \\\n      org.label-schema.name=\"Apache Docker\" \\\n      org.label-schema.description=\"Docker container running Apache running on Ubuntu, Composer, Lavavel, TDD via Shippable & CircleCI\" \\\n      org.label-schema.url=\"https://htmlgraphic.com\" \\\n      org.label-schema.vcs-ref=\"$VCS_REF\" \\\n      org.label-schema.vcs-url=\"https://github.com/htmlgraphic/Apache\" \\\n      org.label-schema.vendor=\"HTMLgraphic, LLC\" \\\n      org.label-schema.version=\"$VERSION\" \\\n      org.label-schema.schema-version=\"1.0\"\n#  Add VOLUMEs for persistant data or to allow various\n#  backups of config and databases via --volumes-from\n#  http://bit.ly/autobuild-and-autodeploy\nVOLUME [\"/backup\"]\n#  Note that EXPOSE only works for inter-container links. It doesn't make ports\n#  accessible from the host. To expose port(s) to the host, at runtime, use the -p flag.\nEXPOSE 80/tcp 443/tcp\n# CMD [\"/opt/app/run.sh\", \"env | grep _ >> /etc/environment && supervisord -n\"]\nCMD [\"/opt/app/run.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"5597694083e663029440dede91d53d87","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:18.04\nMAINTAINER Jason Gegere <jason@htmlgraphic.com>\nENV OS_LOCALE=\"en_US.UTF-8\"\nRUN apt-get update \\\n && apt-get install locales -y \\\n && locale-gen ${OS_LOCALE}\nENV LANG=\"${OS_LOCALE}\" \\\n    LANGUAGE=\"${OS_LOCALE}\" \\\n    LC_ALL=\"${OS_LOCALE}\" \\\n    DEBIAN_FRONTEND=\"noninteractive\"\n#   Install packages then remove cache package list information\nRUN BUILD_DEPS='software-properties-common' \\\n && dpkg-reconfigure locales \\\n && apt-get install $BUILD_DEPS -y \\\n && add-apt-repository -y ppa:ondrej/php \\\n && add-apt-repository -y ppa:ondrej/apache2 \\\n && apt-get update \\\n && apt-get install curl apache2 libsasl2-modules libapache2-mod-php7.3 php7.3-cli php7.3-readline php7.3-mbstring php7.3-zip php7.3-intl php7.3-xml php7.3-json php7.3-curl php7.3-gd php7.3-pgsql php7.3-mysql php-pear -y \\\n && apt-get update \\\n && apt-get install --no-install-recommends git cron ghostscript mailutils iputils-ping mysql-client libgs-dev imagemagick libmagickwand-dev language-pack-en supervisor rsyslog vim wget postfix -yq \\\n && apt-get purge -y --auto-remove $BUILD_DEPS \\\n && apt-get autoremove -y \\\n && rm -rf /var/lib/apt/lists/*\n#   POSTFIX\nRUN update-locale LANG=en_US.UTF-8\n#   Copy files to build app, add coming page to root apache dir, include self\n#   signed SHA256 certs, unit tests to check over the setup\nRUN mkdir -p /opt\nCOPY ./app /opt/app\nCOPY ./tests /opt/tests\n#   Unit tests run via build_tests.sh\nRUN tar xf /opt/tests/2.1.6.tar.gz -C /opt/tests/\n#   SUPERVISOR\nRUN chmod -R 755 /opt/* \\\n && mkdir -p /var/log/supervisor \\\n && cp /opt/app/supervisord /etc/supervisor/conf.d/supervisord.conf\n#   COMPOSER\nRUN curl -sS https://getcomposer.org/installer | php \\\n && mv composer.phar /usr/local/bin/composer\nRUN composer global require \"laravel/installer\"\nRUN composer global require \"vlucas/phpdotenv\"\n#   WP-CLI\nRUN curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar \\\n && chmod +x wp-cli.phar \\\n && mv wp-cli.phar /usr/local/bin/wp\n#   wkhtmltox > HTML > PDF Conversation\nRUN tar xf /opt/app/wkhtmltox-0.12.4_linux-generic-amd64.tar.xz -C /opt \\\n && mv /opt/wkhtmltox/bin/wk* /usr/bin/\nRUN wkhtmltopdf --version\n#   Enable Apache mods.\nRUN a2enmod userdir rewrite ssl\n#   Environment variables contained within build container.\nENV TERM=\"xterm\" \\\n    LISTEN_PORT=\"80\" \\\n    APACHE_RUN_USER=\"www-data\" \\\n    APACHE_RUN_GROUP=\"www-data\" \\\n    APACHE_LOG_DIR=\"/var/log/apache2\" \\\n    APACHE_LOCK_DIR=\"/var/lock/apache2\" \\\n    APACHE_PID_FILE=\"/var/run/apache2.pid\" \\\n    AUTHORIZED_KEYS=\"$AUTHORIZED_KEYS\" \\\n    DOCKERCLOUD_SERVICE_FQDN=\"$DOCKERCLOUD_SERVICE_FQDN\" \\\n    LOG_TOKEN=\"$LOG_TOKEN\" \\\n    NODE_ENVIRONMENT=\"$NODE_ENVIRONMENT\" \\\n    PATH=\"~/.composer/vendor/bin:$PATH\" \\\n    SMTP_HOST=\"$SMTP_HOST\" \\\n    SASL_USER=\"$SASL_USER\" \\\n    SASL_PASS=\"$SASL_PASS\"\n#   Build-time metadata as defined at http://label-schema.org\nARG BUILD_DATE\nARG VCS_REF\nARG VERSION\nLABEL org.label-schema.build-date=\"$BUILD_DATE\" \\\n      org.label-schema.name=\"Apache Docker\" \\\n      org.label-schema.description=\"Docker container running Apache running on Ubuntu, Composer, Lavavel, TDD via Shippable & CircleCI\" \\\n      org.label-schema.url=\"https://htmlgraphic.com\" \\\n      org.label-schema.vcs-ref=\"$VCS_REF\" \\\n      org.label-schema.vcs-url=\"https://github.com/htmlgraphic/Apache\" \\\n      org.label-schema.vendor=\"HTMLgraphic, LLC\" \\\n      org.label-schema.version=\"$VERSION\" \\\n      org.label-schema.schema-version=\"1.0\"\n#   Add VOLUMEs for persistant data or to allow various\n#   backups of config and databases via --volumes-from\n#   http://bit.ly/autobuild-and-autodeploy\nVOLUME [\"/backup\"]\n#   Note that EXPOSE only works for inter-container links. It doesn't make ports\n#   accessible from the host. To expose port(s) to the host, at runtime, use the -p flag.\nEXPOSE 80/tcp 443/tcp\n#  CMD [\"/opt/app/run.sh\", \"env | grep _ >> /etc/environment && supervisord -n\"]\nCMD [\"/opt/app/run.sh\"]\n","originalDockerfileUglifiedHash":"e62a2350abd82184ae2ca42c8d316239","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/b66d42ad2f93a6cda8c9eceb7cb47fe92951eba4.dockerfile"}