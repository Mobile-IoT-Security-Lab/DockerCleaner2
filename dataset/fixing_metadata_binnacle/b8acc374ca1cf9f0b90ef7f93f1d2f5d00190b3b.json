{"seed":3907030261,"processedDockerfileHash":"cfaaaa8fb67642f50a4d433fb005b8ab","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM python:3.6.8-alpine3.9\nCOPY wait_for.sh kafka_wait_for_topics.py mysql_check.py /\nCOPY ashrc /root/.ashrc\nENV ENV=\"/root/.ashrc\" \\\n    PIP_NO_CACHE_DIR=\"no\" \\\n    PIP_NO_COMPILE=\"no\" \\\n    PYTHONIOENCODING=\"utf-8\"\nARG BASE_CREATION_TIME\nARG BASE_GIT_COMMIT\nLABEL org.opencontainers.image.created=\"$BASE_CREATION_TIME\" \\\n      org.opencontainers.image.title=\"monasca-base\" \\\n      org.opencontainers.image.revision=\"$BASE_GIT_COMMIT\" \\\n      org.opencontainers.image.licenses=\"Apache-2.0\"\nRUN chmod +x /wait_for.sh /kafka_wait_for_topics.py /mysql_check.py \\\n && apk add su-exec=0.2-r0 tini=0.18.0-r0 tzdata=2020c-r1 --no-cache \\\n && printf \"Monasca base build date: %s\\n\" $BASE_CREATION_TIME >> /VERSIONS \\\n && printf \"Monasca base revision: %s\\n\" $BASE_GIT_COMMIT >> /VERSIONS \\\n && rm -rf /var/cache/apk/* \\\n && rm -rf /var/log/* \\\n && rm -rf /tmp/*\n#   Get values from child images\nONBUILD ARG CREATION_TIME\nONBUILD ARG DOCKER_IMAGE\nONBUILD ARG APP_REPO\nONBUILD ARG GITHUB_REPO\nONBUILD ARG REPO_VERSION\nONBUILD ARG GIT_COMMIT\nONBUILD ARG CONSTRAINTS_FILE\nONBUILD ARG EXTRA_DEPS\nONBUILD ARG COMMON_REPO\nONBUILD ARG COMMON_VERSION\nONBUILD ARG COMMON_GIT_COMMIT\n#   Build-time metadata as defined at\n#   https://github.com/opencontainers/image-spec/blob/master/annotations.md\nONBUILD LABEL org.opencontainers.image.created=\"$CREATION_TIME\" \\\n              org.opencontainers.image.title=\"$DOCKER_IMAGE\" \\\n              org.opencontainers.image.source=\"$APP_REPO\" \\\n              org.opencontainers.image.url=\"$GITHUB_REPO\" \\\n              org.opencontainers.image.version=\"$REPO_VERSION\" \\\n              org.opencontainers.image.revision=\"$GIT_COMMIT\" \\\n              org.opencontainers.image.licenses=\"Apache-2.0\" \\\n              org.openstack.constraints_uri=\"$CONSTRAINTS_FILE\" \\\n              org.openstack.monasca.python.extra_deps=\"$EXTRA_DEPS\" \\\n              org.openstack.monasca.common.source=\"$COMMON_REPO\" \\\n              org.openstack.monasca.common.version=\"$COMMON_VERSION\" \\\n              org.openstack.monasca.common.revision=\"$COMMON_GIT_COMMIT\"\n#   Every child image need to provide starting and health check script.\n#   If they're not provided build will fail. We want that for uniformity.\nONBUILD COPY start.sh health_check.py /\nONBUILD WORKDIR /\nONBUILD SHELL [\"/bin/ash\", \"-eo\", \"pipefail\", \"-c\"]\nONBUILD RUN chmod +x /start.sh \\\n && apk add g++=8.3.0-r0 git=2.20.4-r0 libffi-dev=3.2.1-r6 libressl-dev=2.7.5-r0 libxml2-dev=2.9.9-r3 libxslt-dev=1.1.33-r3 linux-headers=4.18.13-r1 make=4.2.1-r2 --no-cache --virtual .build-deps \\\n && apk add libressl2.7-libcrypto=2.7.5-r0 librdkafka-dev=0.11.6-r1 libressl2.7-libssl=2.7.5-r0 --no-cache --virtual .build-librdkafka --repository=http://dl-cdn.alpinelinux.org/alpine/edge/main --repository=http://dl-cdn.alpinelinux.org/alpine/edge/community \\\n && mkdir -p /app \\\n && git -C /app init \\\n && git -C /app remote add origin \"$APP_REPO\" \\\n && echo \"Cloning app in version: $REPO_VERSION\" \\\n && git -C /app fetch origin \"$REPO_VERSION\" \\\n && git -C /app reset --hard FETCH_HEAD \\\n && wget --output-document /app/upper-constraints.txt \"$CONSTRAINTS_FILE\" \\\n && mkdir -p /monasca-common \\\n && git -C /monasca-common init \\\n && git -C /monasca-common remote add origin \"$COMMON_REPO\" \\\n && echo \"Cloning monasca-common in version: $COMMON_VERSION\" \\\n && git -C /monasca-common fetch origin \"$COMMON_VERSION\" \\\n && git -C /monasca-common reset --hard FETCH_HEAD \\\n && [ ! \"$( git -C /monasca-common tag -l ${COMMON_VERSION} ;)\" ] \\\n && sed -i \"s|monasca-common.*||\" /app/requirements.txt || true \\\n && [ ! \"$( git -C /monasca-common tag -l ${COMMON_VERSION} ;)\" ] \\\n && sed -i \"s|monasca-common.*||\" /app/upper-constraints.txt || true \\\n && [ $DOCKER_IMAGE = \"monasca/client\" ] \\\n && sed -i \"s|python-monascaclient.*||\" /app/upper-constraints.txt || true \\\n && pip3 install --editable /monasca-common --constraint /app/upper-constraints.txt \\\n && pip3 install pykafka PyMySQL Templer==1.1.4 --constraint /app/upper-constraints.txt \\\n && pip3 install /app/. $EXTRA_DEPS --requirement /app/requirements.txt --constraint /app/upper-constraints.txt \\\n && printf \"App: %s\\n\" \"$DOCKER_IMAGE\" >> /VERSIONS \\\n && printf \"Repository: %s\\n\" \"$APP_REPO\" >> /VERSIONS \\\n && printf \"Version: %s\\n\" \"$REPO_VERSION\" >> /VERSIONS \\\n && printf \"Revision: %s\\n\" \"$GIT_COMMIT\" >> /VERSIONS \\\n && printf \"Build date: %s\\n\" \"$CREATION_TIME\" >> /VERSIONS \\\n && printf \"Revision: %s\\n\" \"$( git -C /app rev-parse FETCH_HEAD ;)\" >> /VERSIONS \\\n && printf \"Monasca-common version: %s\\n\" \"$COMMON_VERSION\" >> /VERSIONS \\\n && printf \"Monasca-common pip version: %s\\n\" \"$( pip3 freeze 2>&1 | grep 'monasca-common' ;)\" >> /VERSIONS \\\n && printf \"Monasca-common revision: %s\\n\" \"$COMMON_GIT_COMMIT\" >> /VERSIONS \\\n && printf \"Constraints file: %s\\n\" \"$CONSTRAINTS_FILE\" >> /VERSIONS \\\n && apk del .build-deps .build-librdkafka \\\n && rm -rf /app /root/.cache/ /monasca-common/java/ /tmp/* /var/cache/apk/* /var/log/* \\\n && find /usr/local -depth\nONBUILD HEALTHCHECK --interval=5s --timeout=2s CMD python3 health_check.py || exit 1\nENTRYPOINT [\"/sbin/tini\", \"-s\", \"--\"]\nRUN addgroup -S docker-user ; adduser -S -G docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM python:3.6.8-alpine3.9\nCOPY wait_for.sh kafka_wait_for_topics.py mysql_check.py /\nCOPY ashrc /root/.ashrc\nENV ENV=\"/root/.ashrc\" \\\n    PIP_NO_CACHE_DIR=\"no\" \\\n    PIP_NO_COMPILE=\"no\" \\\n    PYTHONIOENCODING=\"utf-8\"\nARG BASE_CREATION_TIME\nARG BASE_GIT_COMMIT\nLABEL org.opencontainers.image.created=\"$BASE_CREATION_TIME\" \\\n      org.opencontainers.image.title=\"monasca-base\" \\\n      org.opencontainers.image.revision=\"$BASE_GIT_COMMIT\" \\\n      org.opencontainers.image.licenses=\"Apache-2.0\"\nRUN chmod +x /wait_for.sh /kafka_wait_for_topics.py /mysql_check.py \\\n && apk add --no-cache su-exec tini tzdata \\\n && printf \"Monasca base build date: %s\\n\" $BASE_CREATION_TIME >> /VERSIONS \\\n && printf \"Monasca base revision: %s\\n\" $BASE_GIT_COMMIT >> /VERSIONS \\\n && rm -rf /var/cache/apk/* \\\n && rm -rf /var/log/* \\\n && rm -rf /tmp/*\n#  Get values from child images\nONBUILD ARG CREATION_TIME\nONBUILD ARG DOCKER_IMAGE\nONBUILD ARG APP_REPO\nONBUILD ARG GITHUB_REPO\nONBUILD ARG REPO_VERSION\nONBUILD ARG GIT_COMMIT\nONBUILD ARG CONSTRAINTS_FILE\nONBUILD ARG EXTRA_DEPS\nONBUILD ARG COMMON_REPO\nONBUILD ARG COMMON_VERSION\nONBUILD ARG COMMON_GIT_COMMIT\n#  Build-time metadata as defined at\n#  https://github.com/opencontainers/image-spec/blob/master/annotations.md\nONBUILD LABEL org.opencontainers.image.created=\"$CREATION_TIME\" \\\n              org.opencontainers.image.title=\"$DOCKER_IMAGE\" \\\n              org.opencontainers.image.source=\"$APP_REPO\" \\\n              org.opencontainers.image.url=\"$GITHUB_REPO\" \\\n              org.opencontainers.image.version=\"$REPO_VERSION\" \\\n              org.opencontainers.image.revision=\"$GIT_COMMIT\" \\\n              org.opencontainers.image.licenses=\"Apache-2.0\" \\\n              org.openstack.constraints_uri=\"$CONSTRAINTS_FILE\" \\\n              org.openstack.monasca.python.extra_deps=\"$EXTRA_DEPS\" \\\n              org.openstack.monasca.common.source=\"$COMMON_REPO\" \\\n              org.openstack.monasca.common.version=\"$COMMON_VERSION\" \\\n              org.openstack.monasca.common.revision=\"$COMMON_GIT_COMMIT\"\n#  Every child image need to provide starting and health check script.\n#  If they're not provided build will fail. We want that for uniformity.\nONBUILD COPY start.sh health_check.py /\nONBUILD WORKDIR /\nONBUILD SHELL [\"/bin/ash\", \"-eo\", \"pipefail\", \"-c\"]\nONBUILD RUN chmod +x /start.sh \\\n && apk add --no-cache --virtual .build-deps g++ git libffi-dev libressl-dev libxml2-dev libxslt-dev linux-headers make \\\n && apk add --no-cache --virtual .build-librdkafka libressl2.7-libcrypto librdkafka-dev libressl2.7-libssl --repository=http://dl-cdn.alpinelinux.org/alpine/edge/main --repository=http://dl-cdn.alpinelinux.org/alpine/edge/community \\\n && mkdir -p /app \\\n && git -C /app init \\\n && git -C /app remote add origin \"$APP_REPO\" \\\n && echo \"Cloning app in version: $REPO_VERSION\" \\\n && git -C /app fetch origin \"$REPO_VERSION\" \\\n && git -C /app reset --hard FETCH_HEAD \\\n && wget --output-document /app/upper-constraints.txt \"$CONSTRAINTS_FILE\" \\\n && mkdir -p /monasca-common \\\n && git -C /monasca-common init \\\n && git -C /monasca-common remote add origin \"$COMMON_REPO\" \\\n && echo \"Cloning monasca-common in version: $COMMON_VERSION\" \\\n && git -C /monasca-common fetch origin \"$COMMON_VERSION\" \\\n && git -C /monasca-common reset --hard FETCH_HEAD \\\n && [ ! \"$( git -C /monasca-common tag -l ${COMMON_VERSION} ;)\" ] \\\n && sed -i \"s|monasca-common.*||\" /app/requirements.txt || true \\\n && [ ! \"$( git -C /monasca-common tag -l ${COMMON_VERSION} ;)\" ] \\\n && sed -i \"s|monasca-common.*||\" /app/upper-constraints.txt || true \\\n && [ $DOCKER_IMAGE = \"monasca/client\" ] \\\n && sed -i \"s|python-monascaclient.*||\" /app/upper-constraints.txt || true \\\n && pip3 install --editable /monasca-common --constraint /app/upper-constraints.txt \\\n && pip3 install pykafka PyMySQL Templer==1.1.4 --constraint /app/upper-constraints.txt \\\n && pip3 install /app/. $EXTRA_DEPS --requirement /app/requirements.txt --constraint /app/upper-constraints.txt \\\n && printf \"App: %s\\n\" \"$DOCKER_IMAGE\" >> /VERSIONS \\\n && printf \"Repository: %s\\n\" \"$APP_REPO\" >> /VERSIONS \\\n && printf \"Version: %s\\n\" \"$REPO_VERSION\" >> /VERSIONS \\\n && printf \"Revision: %s\\n\" \"$GIT_COMMIT\" >> /VERSIONS \\\n && printf \"Build date: %s\\n\" \"$CREATION_TIME\" >> /VERSIONS \\\n && printf \"Revision: %s\\n\" \"$( git -C /app rev-parse FETCH_HEAD ;)\" >> /VERSIONS \\\n && printf \"Monasca-common version: %s\\n\" \"$COMMON_VERSION\" >> /VERSIONS \\\n && printf \"Monasca-common pip version: %s\\n\" \"$( pip3 freeze 2>&1 | grep 'monasca-common' ;)\" >> /VERSIONS \\\n && printf \"Monasca-common revision: %s\\n\" \"$COMMON_GIT_COMMIT\" >> /VERSIONS \\\n && printf \"Constraints file: %s\\n\" \"$CONSTRAINTS_FILE\" >> /VERSIONS \\\n && apk del .build-deps .build-librdkafka \\\n && rm -rf /app /root/.cache/ /monasca-common/java/ /tmp/* /var/cache/apk/* /var/log/* \\\n && find /usr/local -depth ( ( -type d -and ( -name test -or -name tests -not -path '*/monasca_tempest_tests/*' ) ) -or ( -type f -and ( -name '*.pyc' -or -name '*.pyo' ) ) ) -exec rm -rf '{}' +\nONBUILD HEALTHCHECK --interval=5s --timeout=2s CMD python3 health_check.py || exit 1\nENTRYPOINT [\"/sbin/tini\", \"-s\", \"--\"]\n","injectedSmells":[],"originalDockerfileHash":"bf5d054ac0b8ea0744634d0de8e08cf5","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM python:3.6.8-alpine3.9\nCOPY wait_for.sh kafka_wait_for_topics.py mysql_check.py /\nCOPY ashrc /root/.ashrc\nENV ENV=\"/root/.ashrc\" \\\n    PIP_NO_CACHE_DIR=\"no\" \\\n    PIP_NO_COMPILE=\"no\" \\\n    PYTHONIOENCODING=\"utf-8\"\nARG BASE_CREATION_TIME\nARG BASE_GIT_COMMIT\nLABEL org.opencontainers.image.created=\"$BASE_CREATION_TIME\" \\\n      org.opencontainers.image.title=\"monasca-base\" \\\n      org.opencontainers.image.revision=\"$BASE_GIT_COMMIT\" \\\n      org.opencontainers.image.licenses=\"Apache-2.0\"\nRUN chmod +x /wait_for.sh /kafka_wait_for_topics.py /mysql_check.py \\\n && apk add --no-cache su-exec tini tzdata \\\n && printf \"Monasca base build date: %s\\n\" $BASE_CREATION_TIME >> /VERSIONS \\\n && printf \"Monasca base revision: %s\\n\" $BASE_GIT_COMMIT >> /VERSIONS \\\n && rm -rf /var/cache/apk/* \\\n && rm -rf /var/log/* \\\n && rm -rf /tmp/*\n#   Get values from child images\nONBUILD ARG CREATION_TIME\nONBUILD ARG DOCKER_IMAGE\nONBUILD ARG APP_REPO\nONBUILD ARG GITHUB_REPO\nONBUILD ARG REPO_VERSION\nONBUILD ARG GIT_COMMIT\nONBUILD ARG CONSTRAINTS_FILE\nONBUILD ARG EXTRA_DEPS\nONBUILD ARG COMMON_REPO\nONBUILD ARG COMMON_VERSION\nONBUILD ARG COMMON_GIT_COMMIT\n#   Build-time metadata as defined at\n#   https://github.com/opencontainers/image-spec/blob/master/annotations.md\nONBUILD LABEL org.opencontainers.image.created=\"$CREATION_TIME\" \\\n              org.opencontainers.image.title=\"$DOCKER_IMAGE\" \\\n              org.opencontainers.image.source=\"$APP_REPO\" \\\n              org.opencontainers.image.url=\"$GITHUB_REPO\" \\\n              org.opencontainers.image.version=\"$REPO_VERSION\" \\\n              org.opencontainers.image.revision=\"$GIT_COMMIT\" \\\n              org.opencontainers.image.licenses=\"Apache-2.0\" \\\n              org.openstack.constraints_uri=\"$CONSTRAINTS_FILE\" \\\n              org.openstack.monasca.python.extra_deps=\"$EXTRA_DEPS\" \\\n              org.openstack.monasca.common.source=\"$COMMON_REPO\" \\\n              org.openstack.monasca.common.version=\"$COMMON_VERSION\" \\\n              org.openstack.monasca.common.revision=\"$COMMON_GIT_COMMIT\"\n#   Every child image need to provide starting and health check script.\n#   If they're not provided build will fail. We want that for uniformity.\nONBUILD COPY start.sh health_check.py /\nONBUILD WORKDIR /\nONBUILD SHELL [\"/bin/ash\", \"-eo\", \"pipefail\", \"-c\"]\nONBUILD RUN chmod +x /start.sh \\\n && apk add --no-cache --virtual .build-deps g++ git libffi-dev libressl-dev libxml2-dev libxslt-dev linux-headers make \\\n && apk add --no-cache --virtual .build-librdkafka libressl2.7-libcrypto librdkafka-dev libressl2.7-libssl --repository=http://dl-cdn.alpinelinux.org/alpine/edge/main --repository=http://dl-cdn.alpinelinux.org/alpine/edge/community \\\n && mkdir -p /app \\\n && git -C /app init \\\n && git -C /app remote add origin \"$APP_REPO\" \\\n && echo \"Cloning app in version: $REPO_VERSION\" \\\n && git -C /app fetch origin \"$REPO_VERSION\" \\\n && git -C /app reset --hard FETCH_HEAD \\\n && wget --output-document /app/upper-constraints.txt \"$CONSTRAINTS_FILE\" \\\n && mkdir -p /monasca-common \\\n && git -C /monasca-common init \\\n && git -C /monasca-common remote add origin \"$COMMON_REPO\" \\\n && echo \"Cloning monasca-common in version: $COMMON_VERSION\" \\\n && git -C /monasca-common fetch origin \"$COMMON_VERSION\" \\\n && git -C /monasca-common reset --hard FETCH_HEAD \\\n && [ ! \"$( git -C /monasca-common tag -l ${COMMON_VERSION} ;)\" ] \\\n && sed -i \"s|monasca-common.*||\" /app/requirements.txt || true \\\n && [ ! \"$( git -C /monasca-common tag -l ${COMMON_VERSION} ;)\" ] \\\n && sed -i \"s|monasca-common.*||\" /app/upper-constraints.txt || true \\\n && [ $DOCKER_IMAGE = \"monasca/client\" ] \\\n && sed -i \"s|python-monascaclient.*||\" /app/upper-constraints.txt || true \\\n && pip3 install --editable /monasca-common --constraint /app/upper-constraints.txt \\\n && pip3 install pykafka PyMySQL Templer==1.1.4 --constraint /app/upper-constraints.txt \\\n && pip3 install /app/. $EXTRA_DEPS --requirement /app/requirements.txt --constraint /app/upper-constraints.txt \\\n && printf \"App: %s\\n\" \"$DOCKER_IMAGE\" >> /VERSIONS \\\n && printf \"Repository: %s\\n\" \"$APP_REPO\" >> /VERSIONS \\\n && printf \"Version: %s\\n\" \"$REPO_VERSION\" >> /VERSIONS \\\n && printf \"Revision: %s\\n\" \"$GIT_COMMIT\" >> /VERSIONS \\\n && printf \"Build date: %s\\n\" \"$CREATION_TIME\" >> /VERSIONS \\\n && printf \"Revision: %s\\n\" \"$( git -C /app rev-parse FETCH_HEAD ;)\" >> /VERSIONS \\\n && printf \"Monasca-common version: %s\\n\" \"$COMMON_VERSION\" >> /VERSIONS \\\n && printf \"Monasca-common pip version: %s\\n\" \"$( pip3 freeze 2>&1 | grep 'monasca-common' ;)\" >> /VERSIONS \\\n && printf \"Monasca-common revision: %s\\n\" \"$COMMON_GIT_COMMIT\" >> /VERSIONS \\\n && printf \"Constraints file: %s\\n\" \"$CONSTRAINTS_FILE\" >> /VERSIONS \\\n && apk del .build-deps .build-librdkafka \\\n && rm -rf /app /root/.cache/ /monasca-common/java/ /tmp/* /var/cache/apk/* /var/log/* \\\n && find /usr/local -depth\nONBUILD HEALTHCHECK --interval=5s --timeout=2s CMD python3 health_check.py || exit 1\nENTRYPOINT [\"/sbin/tini\", \"-s\", \"--\"]\n","originalDockerfileUglifiedHash":"0f20ec79414e3ab2ff94740977b4c192","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/b8acc374ca1cf9f0b90ef7f93f1d2f5d00190b3b.dockerfile"}