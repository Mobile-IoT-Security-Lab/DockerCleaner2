{"seed":3771701230,"processedDockerfileHash":"229269b997995948359fe3b7b1f23c1a","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Copyright 2018 Google LLC\n#\n#   Licensed under the Apache License, Version 2.0 (the \"License\");\n#   you may not use this file except in compliance with the License.\n#   You may obtain a copy of the License at\n#\n#       https://www.apache.org/licenses/LICENSE-2.0\n#\n#   Unless required by applicable law or agreed to in writing, software\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#   See the License for the specific language governing permissions and\n#   limitations under the License.\nFROM ubuntu:18.04 AS base_build\nARG TF_SERVING_VERSION_GIT_BRANCH=master\nARG TF_SERVING_VERSION_GIT_COMMIT=head\nLABEL maintainer=\"gvasudevan@google.com\"\nLABEL tensorflow_serving_github_branchtag=\"${TF_SERVING_VERSION_GIT_BRANCH}\"\nLABEL tensorflow_serving_github_commit=\"${TF_SERVING_VERSION_GIT_COMMIT}\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends automake=1:1.15.1-3ubuntu2 build-essential=12.4ubuntu1 ca-certificates=20211016ubuntu0.18.04.1 curl=7.58.0-2ubuntu3.24 git=1:2.17.1-1ubuntu0.17 libcurl3-dev libfreetype6-dev=2.8.1-2ubuntu2.2 libpng-dev=1.6.34-1ubuntu0.18.04.2 libtool=2.4.6-2 libzmq3-dev=4.2.5-1ubuntu0.2 mlocate=0.26-2ubuntu3.1 openjdk-8-jdk=8u362-ga-0ubuntu1~18.04.1 openjdk-8-jre-headless=8u362-ga-0ubuntu1~18.04.1 pkg-config=0.29.1-0ubuntu2 python-dev=2.7.15~rc1-1 software-properties-common=0.96.24.32.20 swig=3.0.12-1 unzip=6.0-21ubuntu1.2 wget=1.19.4-1ubuntu2.2 zip=3.0-11build1 zlib1g-dev=1:1.2.11.dfsg-0ubuntu2.2 -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\nRUN curl -fSsL -O https://bootstrap.pypa.io/get-pip.py \\\n && python get-pip.py \\\n && rm get-pip.py\nRUN pip install future==0.18.3 grpcio==1.53.0 h5py==3.8.0 keras_applications==1.0.8 keras_preprocessing==1.1.2 mock==5.0.2 numpy==1.24.2 requests==2.28.2 --no-cache-dir > =0.17.1\n#   Set up Bazel\nENV BAZEL_VERSION=\"0.24.1\"\nWORKDIR /\nRUN mkdir /bazel \\\n && cd /bazel \\\n && curl -H \"User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36\" -fSsL -O https://github.com/bazelbuild/bazel/releases/download/$BAZEL_VERSION/bazel-$BAZEL_VERSION-installer-linux-x86_64.sh \\\n && curl -H \"User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36\" -fSsL -o /bazel/LICENSE.txt https://raw.githubusercontent.com/bazelbuild/bazel/master/LICENSE \\\n && chmod +x bazel-*.sh \\\n && ./bazel-$BAZEL_VERSION-installer-linux-x86_64.sh \\\n && cd / \\\n && rm -f /bazel/bazel-$BAZEL_VERSION-installer-linux-x86_64.sh\n#   Download TF Serving sources (optionally at specific commit).\nWORKDIR /tensorflow-serving\nRUN git clone --branch=${TF_SERVING_VERSION_GIT_BRANCH} https://github.com/tensorflow/serving . \\\n && git remote add upstream https://github.com/tensorflow/serving.git \\\n && if [ \"${TF_SERVING_VERSION_GIT_COMMIT}\" != \"head\" ] ; then git checkout ${TF_SERVING_VERSION_GIT_COMMIT} ; fi\nFROM base_build AS binary_build\n#   Build, and install TensorFlow Serving\nARG TF_SERVING_BUILD_OPTIONS=\"--config=nativeopt\"\nRUN echo \"Building with build options: ${TF_SERVING_BUILD_OPTIONS}\"\nARG TF_SERVING_BAZEL_OPTIONS=\"\"\nRUN echo \"Building with Bazel options: ${TF_SERVING_BAZEL_OPTIONS}\"\nRUN bazel build --color=yes --curses=yes ${TF_SERVING_BAZEL_OPTIONS} --verbose_failures --output_filter=DONT_MATCH_ANYTHING ${TF_SERVING_BUILD_OPTIONS} tensorflow_serving/model_servers:tensorflow_model_server \\\n && cp bazel-bin/tensorflow_serving/model_servers/tensorflow_model_server /usr/local/bin/\n#   Build and install TensorFlow Serving API\nRUN bazel build --color=yes --curses=yes ${TF_SERVING_BAZEL_OPTIONS} --verbose_failures --output_filter=DONT_MATCH_ANYTHING ${TF_SERVING_BUILD_OPTIONS} tensorflow_serving/tools/pip_package:build_pip_package \\\n && bazel-bin/tensorflow_serving/tools/pip_package/build_pip_package /tmp/pip \\\n && pip install /tmp/pip/tensorflow_serving_api-*.whl --no-cache-dir --upgrade \\\n && rm -rf /tmp/pip\nFROM binary_build AS clean_build\n#   Clean up Bazel cache when done.\nRUN bazel clean --expunge --color=yes \\\n && rm -rf /root/.cache\nCMD [\"/bin/bash\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Copyright 2018 Google LLC\n#\n#  Licensed under the Apache License, Version 2.0 (the \"License\");\n#  you may not use this file except in compliance with the License.\n#  You may obtain a copy of the License at\n#\n#      https://www.apache.org/licenses/LICENSE-2.0\n#\n#  Unless required by applicable law or agreed to in writing, software\n#  distributed under the License is distributed on an \"AS IS\" BASIS,\n#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#  See the License for the specific language governing permissions and\n#  limitations under the License.\nFROM ubuntu:18.04 AS base_build\nARG TF_SERVING_VERSION_GIT_BRANCH=master\nARG TF_SERVING_VERSION_GIT_COMMIT=head\nLABEL maintainer=\"gvasudevan@google.com\"\nLABEL tensorflow_serving_github_branchtag=\"${TF_SERVING_VERSION_GIT_BRANCH}\"\nLABEL tensorflow_serving_github_commit=\"${TF_SERVING_VERSION_GIT_COMMIT}\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends automake build-essential ca-certificates curl git libcurl3-dev libfreetype6-dev libpng-dev libtool libzmq3-dev mlocate openjdk-8-jdk openjdk-8-jre-headless pkg-config python-dev software-properties-common swig unzip wget zip zlib1g-dev -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\nRUN curl -fSsL -O https://bootstrap.pypa.io/get-pip.py \\\n && python get-pip.py \\\n && rm get-pip.py\nRUN pip install future grpcio h5py keras_applications keras_preprocessing mock numpy requests --no-cache-dir > =0.17.1\n#  Set up Bazel\nENV BAZEL_VERSION=\"0.24.1\"\nWORKDIR /\nRUN mkdir /bazel \\\n && cd /bazel \\\n && curl -H \"User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36\" -fSsL -O https://github.com/bazelbuild/bazel/releases/download/$BAZEL_VERSION/bazel-$BAZEL_VERSION-installer-linux-x86_64.sh \\\n && curl -H \"User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36\" -fSsL -o /bazel/LICENSE.txt https://raw.githubusercontent.com/bazelbuild/bazel/master/LICENSE \\\n && chmod +x bazel-*.sh \\\n && ./bazel-$BAZEL_VERSION-installer-linux-x86_64.sh \\\n && cd / \\\n && rm -f /bazel/bazel-$BAZEL_VERSION-installer-linux-x86_64.sh\n#  Download TF Serving sources (optionally at specific commit).\nWORKDIR /tensorflow-serving\nRUN git clone --branch=${TF_SERVING_VERSION_GIT_BRANCH} https://github.com/tensorflow/serving . \\\n && git remote add upstream https://github.com/tensorflow/serving.git \\\n && if [ \"${TF_SERVING_VERSION_GIT_COMMIT}\" != \"head\" ] ; then git checkout ${TF_SERVING_VERSION_GIT_COMMIT} ; fi\nFROM base_build AS binary_build\n#  Build, and install TensorFlow Serving\nARG TF_SERVING_BUILD_OPTIONS=\"--config=nativeopt\"\nRUN echo \"Building with build options: ${TF_SERVING_BUILD_OPTIONS}\"\nARG TF_SERVING_BAZEL_OPTIONS=\"\"\nRUN echo \"Building with Bazel options: ${TF_SERVING_BAZEL_OPTIONS}\"\nRUN bazel build --color=yes --curses=yes ${TF_SERVING_BAZEL_OPTIONS} --verbose_failures --output_filter=DONT_MATCH_ANYTHING ${TF_SERVING_BUILD_OPTIONS} tensorflow_serving/model_servers:tensorflow_model_server \\\n && cp bazel-bin/tensorflow_serving/model_servers/tensorflow_model_server /usr/local/bin/\n#  Build and install TensorFlow Serving API\nRUN bazel build --color=yes --curses=yes ${TF_SERVING_BAZEL_OPTIONS} --verbose_failures --output_filter=DONT_MATCH_ANYTHING ${TF_SERVING_BUILD_OPTIONS} tensorflow_serving/tools/pip_package:build_pip_package \\\n && bazel-bin/tensorflow_serving/tools/pip_package/build_pip_package /tmp/pip \\\n && pip install /tmp/pip/tensorflow_serving_api-*.whl --no-cache-dir --upgrade \\\n && rm -rf /tmp/pip\nFROM binary_build AS clean_build\n#  Clean up Bazel cache when done.\nRUN bazel clean --expunge --color=yes \\\n && rm -rf /root/.cache\nCMD [\"/bin/bash\"]\n","injectedSmells":[],"originalDockerfileHash":"7cb420e298876019f1a6fcd3e0cf97ee","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Copyright 2018 Google LLC\n#\n#   Licensed under the Apache License, Version 2.0 (the \"License\");\n#   you may not use this file except in compliance with the License.\n#   You may obtain a copy of the License at\n#\n#       https://www.apache.org/licenses/LICENSE-2.0\n#\n#   Unless required by applicable law or agreed to in writing, software\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#   See the License for the specific language governing permissions and\n#   limitations under the License.\nFROM ubuntu:18.04 AS base_build\nARG TF_SERVING_VERSION_GIT_BRANCH=master\nARG TF_SERVING_VERSION_GIT_COMMIT=head\nLABEL maintainer=\"gvasudevan@google.com\"\nLABEL tensorflow_serving_github_branchtag=\"${TF_SERVING_VERSION_GIT_BRANCH}\"\nLABEL tensorflow_serving_github_commit=\"${TF_SERVING_VERSION_GIT_COMMIT}\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends automake build-essential ca-certificates curl git libcurl3-dev libfreetype6-dev libpng-dev libtool libzmq3-dev mlocate openjdk-8-jdk openjdk-8-jre-headless pkg-config python-dev software-properties-common swig unzip wget zip zlib1g-dev -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\nRUN curl -fSsL -O https://bootstrap.pypa.io/get-pip.py \\\n && python get-pip.py \\\n && rm get-pip.py\nRUN pip install future grpcio h5py keras_applications keras_preprocessing mock numpy requests --no-cache-dir > =0.17.1\n#   Set up Bazel\nENV BAZEL_VERSION=\"0.24.1\"\nWORKDIR /\nRUN mkdir /bazel \\\n && cd /bazel \\\n && curl -H \"User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36\" -fSsL -O https://github.com/bazelbuild/bazel/releases/download/$BAZEL_VERSION/bazel-$BAZEL_VERSION-installer-linux-x86_64.sh \\\n && curl -H \"User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36\" -fSsL -o /bazel/LICENSE.txt https://raw.githubusercontent.com/bazelbuild/bazel/master/LICENSE \\\n && chmod +x bazel-*.sh \\\n && ./bazel-$BAZEL_VERSION-installer-linux-x86_64.sh \\\n && cd / \\\n && rm -f /bazel/bazel-$BAZEL_VERSION-installer-linux-x86_64.sh\n#   Download TF Serving sources (optionally at specific commit).\nWORKDIR /tensorflow-serving\nRUN git clone --branch=${TF_SERVING_VERSION_GIT_BRANCH} https://github.com/tensorflow/serving . \\\n && git remote add upstream https://github.com/tensorflow/serving.git \\\n && if [ \"${TF_SERVING_VERSION_GIT_COMMIT}\" != \"head\" ] ; then git checkout ${TF_SERVING_VERSION_GIT_COMMIT} ; fi\nFROM base_build AS binary_build\n#   Build, and install TensorFlow Serving\nARG TF_SERVING_BUILD_OPTIONS=\"--config=nativeopt\"\nRUN echo \"Building with build options: ${TF_SERVING_BUILD_OPTIONS}\"\nARG TF_SERVING_BAZEL_OPTIONS=\"\"\nRUN echo \"Building with Bazel options: ${TF_SERVING_BAZEL_OPTIONS}\"\nRUN bazel build --color=yes --curses=yes ${TF_SERVING_BAZEL_OPTIONS} --verbose_failures --output_filter=DONT_MATCH_ANYTHING ${TF_SERVING_BUILD_OPTIONS} tensorflow_serving/model_servers:tensorflow_model_server \\\n && cp bazel-bin/tensorflow_serving/model_servers/tensorflow_model_server /usr/local/bin/\n#   Build and install TensorFlow Serving API\nRUN bazel build --color=yes --curses=yes ${TF_SERVING_BAZEL_OPTIONS} --verbose_failures --output_filter=DONT_MATCH_ANYTHING ${TF_SERVING_BUILD_OPTIONS} tensorflow_serving/tools/pip_package:build_pip_package \\\n && bazel-bin/tensorflow_serving/tools/pip_package/build_pip_package /tmp/pip \\\n && pip install /tmp/pip/tensorflow_serving_api-*.whl --no-cache-dir --upgrade \\\n && rm -rf /tmp/pip\nFROM binary_build AS clean_build\n#   Clean up Bazel cache when done.\nRUN bazel clean --expunge --color=yes \\\n && rm -rf /root/.cache\nCMD [\"/bin/bash\"]\n","originalDockerfileUglifiedHash":"50ba1fe610537d00575f246908013eb6","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/8e5816d436b56a0c49d164af8f924fe47198134f.dockerfile"}