{"seed":2208951577,"processedDockerfileHash":"a02b1ae2b16b3e1b86b689bc19de736f","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["have-a-healthcheck","have-a-user"],"processedDockerfile":"#    Dockerfile                                                  Date : 2016-10-25\n#\n#   _______________|  Jupyter notebooks from fecon235 using Docker containers\n#                     Computational data tools for FINANCIAL ECONOMICS\n#                     https://hub.docker.com/r/rsvp/fecon235\n#\n#             Usage:  To BUILD this Dockerfile:\n#                          $ docker build -t IMAGENAME -f Dockerfile .\n#                     where the period implies current directory.\n#\n#          Examples:  To RUN the image:\n#                          $ docker run -p 8888:8888 -it IMAGENAME\n#                     which should yield a prompt, then as root:\n#                          % nbstart\n#                     and interact with browser at http://localhost:8888\n#\n#              Tips:  - Pull the latest git commits from /opt/rsvp/fecon235\n#                     - Learn about data volumes to persist data.\n#\n#      Dependencies:  Docker images: continuumio/{anaconda,anaconda3}\n#                            https://hub.docker.com/r/continuumio/anaconda\n#                            https://hub.docker.com/r/continuumio/anaconda3\n#                            The \"3\" indicates python3, else it is python2 based;\n#                            see FROM line at Begin Script.\n#                     Python code:  https://github.com/rsvp/fecon235\n#\n#    CHANGE LOG \n#    2016-10-25  Use own tagged base: rsvp/ana2-pd0181 for replication and tests.\n#                Improve entry UI.  Change SHELL from sh to bash. \n#                Introduce REBUILD line to induce new clone of fecon235. \n#                Reorder commands to optimize for Docker's copy-on-write.\n#    2016-10-09  First stable version produced rsvp/fecon:v4.16.0525\n#   _______________     ::  BEGIN  Script ::::::::::::::::::::::::::::::::::::::::\n#    Tip: Obtain the base image in itself by, for example:\n#         $ docker pull continuumio/anaconda:4.2.0\nFROM rsvp/ana2-pd0181\n#    The size of this image alone is just over 2 GB -- so patience.\n#    We may switch to miniconda and install only needed packages.\nMAINTAINER Adriano rsvp.github.com\n#            Lead developer for fecon235\n#        __________ SET-UP\nSHELL [\"/bin/bash\", \"-c\"]\n#    Other RUN will use /bin/sh as default (ugh!)\n#    Update the repository sources:\n#    RUN apt-get update\n#    ... advisable before any apt-get installs for the Linux environment.\n#    Make DIRECTORIES:  [Hassle of setting up an USER can be avoided.]\nRUN mkdir -p /opt/rsvp/bin /opt/rsvp/dock\n#              /opt is designed for third-party software.\n#    Set ENVIRONMENT variables for Bash and Python:\nENV PATH=\"/opt/rsvp/bin:$PATH\"\nENV PYTHONPATH=\"/opt/rsvp/bin:/opt/rsvp:$PYTHONPATH\"\n#    conda is like pip for Python, but for anaconda* environments.\n#    Use conda to INSTALL jupyter and other Python dependencies:\nRUN /opt/conda/bin/conda install jupyter pandas-datareader -y --quiet\nRUN echo \" :: REBUILD BELOW, marker: CHANGE THIS LINE: 2016-10-17 ::::::::\"\n#    Editing this line will induce new clone of fecon235.\n#    Install fecon235 REPOSITORY from GitHub:\nRUN cd /opt/rsvp \\\n && git clone https://github.com/rsvp/fecon235.git\n#    Expose the traditional port for Jupyter notebook: \n#    EXPOSE 8888\n#    ... we shall instead use \"-p 8888:8888\" at the command line instead.\n#    Write NOTEBOOK START COMMAND as script:  [Using \"alias\" NOT advisable!] \n#\nRUN echo '/opt/conda/bin/jupyter notebook --notebook-dir=/opt/rsvp/fecon235/nb --ip=\"0.0.0.0\" --port=8888 --no-browser' > /opt/rsvp/bin/nbstart \\\n && chmod 755 /opt/rsvp/bin/nbstart\n#\n#    DOES NOT WORK: --ip=\"127.0.0.1\" OR --ip=\"localhost\"\n#    Jupyter docs use: --ip=\"0.0.0.0\" which means all IPv4 addresses on local machine.\n#    Using http://localhost:8888 on your browser should still work.\n#\n#    Anaconda usess: --ip=\"*\" which generates stern security warnings, but it's for\n#    Docker Machine VM which will interface at: http://<DOCKER-MACHINE-IP>:8888,\n#    Set the MAIN command for this image:   [For TESTING command directly.] \n#    ENTRYPOINT /opt/conda/bin/jupyter notebook --notebook-dir=/opt/rsvp/fecon235/nb \\\n#               --ip=\"0.0.0.0\" --port=8888 --no-browser \n#    Set the MAIN command for this image, with user instructions:\nENTRYPOINT cd /opt/rsvp/fecon235 \\\n && echo ' PORT required: $ docker run -p 8888:8888 -it rsvp/fecon235' \\\n && echo ' ' \\\n && echo ' :: Welcome! Git repository cloned at: /opt/rsvp/fecon235' \\\n && echo ' :: Run \"nbstart\" for Jupyter notebooks, then interact with' \\\n && echo ' :: host browser at http://localhost:8888' \\\n && echo ' ' \\\n && /bin/bash\n#    ... should yield root prompt, all set for action, e.g. nbstart\n#    (Using WORKDIR only scopes within a Dockerfile, not in a container.)\n#    Specify default argument to Entrypoint:\n#    CMD ['-c', 'nbstart']\n#    ... fallback when an argument is not given on command line by user,\n#        however, the container's Bash prompt will not be accessible\n#        after the execution of 'nbstart'.\n#    Note that only one CMD allowed per Dockerfile, and it can contain an \n#    absolute command (not taking an argument from the command line).\n#   _______________ EOS ::  END of Script ::::::::::::::::::::::::::::::::::::::::\n#    vim: set fileencoding=utf-8 ff=unix tw=78 ai syn=conf :\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#   Dockerfile                                                  Date : 2016-10-25\n#\n#  _______________|  Jupyter notebooks from fecon235 using Docker containers\n#                    Computational data tools for FINANCIAL ECONOMICS\n#                    https://hub.docker.com/r/rsvp/fecon235\n#\n#            Usage:  To BUILD this Dockerfile:\n#                         $ docker build -t IMAGENAME -f Dockerfile .\n#                    where the period implies current directory.\n#\n#         Examples:  To RUN the image:\n#                         $ docker run -p 8888:8888 -it IMAGENAME\n#                    which should yield a prompt, then as root:\n#                         % nbstart\n#                    and interact with browser at http://localhost:8888\n#\n#             Tips:  - Pull the latest git commits from /opt/rsvp/fecon235\n#                    - Learn about data volumes to persist data.\n#\n#     Dependencies:  Docker images: continuumio/{anaconda,anaconda3}\n#                           https://hub.docker.com/r/continuumio/anaconda\n#                           https://hub.docker.com/r/continuumio/anaconda3\n#                           The \"3\" indicates python3, else it is python2 based;\n#                           see FROM line at Begin Script.\n#                    Python code:  https://github.com/rsvp/fecon235\n#\n#   CHANGE LOG \n#   2016-10-25  Use own tagged base: rsvp/ana2-pd0181 for replication and tests.\n#               Improve entry UI.  Change SHELL from sh to bash. \n#               Introduce REBUILD line to induce new clone of fecon235. \n#               Reorder commands to optimize for Docker's copy-on-write.\n#   2016-10-09  First stable version produced rsvp/fecon:v4.16.0525\n#  _______________     ::  BEGIN  Script ::::::::::::::::::::::::::::::::::::::::\n#   Tip: Obtain the base image in itself by, for example:\n#        $ docker pull continuumio/anaconda:4.2.0\nFROM rsvp/ana2-pd0181\n#   The size of this image alone is just over 2 GB -- so patience.\n#   We may switch to miniconda and install only needed packages.\nMAINTAINER Adriano rsvp.github.com\n#           Lead developer for fecon235\n#       __________ SET-UP\nSHELL [\"/bin/bash\", \"-c\"]\n#   Other RUN will use /bin/sh as default (ugh!)\n#   Update the repository sources:\n#   RUN apt-get update\n#   ... advisable before any apt-get installs for the Linux environment.\n#   Make DIRECTORIES:  [Hassle of setting up an USER can be avoided.]\nRUN mkdir -p /opt/rsvp/bin /opt/rsvp/dock\n#             /opt is designed for third-party software.\n#   Set ENVIRONMENT variables for Bash and Python:\nENV PATH=\"/opt/rsvp/bin:$PATH\"\nENV PYTHONPATH=\"/opt/rsvp/bin:/opt/rsvp:$PYTHONPATH\"\n#   conda is like pip for Python, but for anaconda* environments.\n#   Use conda to INSTALL jupyter and other Python dependencies:\nRUN /opt/conda/bin/conda install jupyter pandas-datareader -y --quiet\nRUN echo \" :: REBUILD BELOW, marker: CHANGE THIS LINE: 2016-10-17 ::::::::\"\n#   Editing this line will induce new clone of fecon235.\n#   Install fecon235 REPOSITORY from GitHub:\nRUN cd /opt/rsvp \\\n && git clone https://github.com/rsvp/fecon235.git\n#   Expose the traditional port for Jupyter notebook: \n#   EXPOSE 8888\n#   ... we shall instead use \"-p 8888:8888\" at the command line instead.\n#   Write NOTEBOOK START COMMAND as script:  [Using \"alias\" NOT advisable!] \n#\nRUN echo '/opt/conda/bin/jupyter notebook --notebook-dir=/opt/rsvp/fecon235/nb --ip=\"0.0.0.0\" --port=8888 --no-browser' > /opt/rsvp/bin/nbstart \\\n && chmod 755 /opt/rsvp/bin/nbstart\n#\n#   DOES NOT WORK: --ip=\"127.0.0.1\" OR --ip=\"localhost\"\n#   Jupyter docs use: --ip=\"0.0.0.0\" which means all IPv4 addresses on local machine.\n#   Using http://localhost:8888 on your browser should still work.\n#\n#   Anaconda usess: --ip=\"*\" which generates stern security warnings, but it's for\n#   Docker Machine VM which will interface at: http://<DOCKER-MACHINE-IP>:8888,\n#   Set the MAIN command for this image:   [For TESTING command directly.] \n#   ENTRYPOINT /opt/conda/bin/jupyter notebook --notebook-dir=/opt/rsvp/fecon235/nb \\\n#              --ip=\"0.0.0.0\" --port=8888 --no-browser \n#   Set the MAIN command for this image, with user instructions:\nENTRYPOINT cd /opt/rsvp/fecon235 \\\n && echo ' PORT required: $ docker run -p 8888:8888 -it rsvp/fecon235' \\\n && echo ' ' \\\n && echo ' :: Welcome! Git repository cloned at: /opt/rsvp/fecon235' \\\n && echo ' :: Run \"nbstart\" for Jupyter notebooks, then interact with' \\\n && echo ' :: host browser at http://localhost:8888' \\\n && echo ' ' \\\n && /bin/bash\n#   ... should yield root prompt, all set for action, e.g. nbstart\n#   (Using WORKDIR only scopes within a Dockerfile, not in a container.)\n#   Specify default argument to Entrypoint:\n#   CMD ['-c', 'nbstart']\n#   ... fallback when an argument is not given on command line by user,\n#       however, the container's Bash prompt will not be accessible\n#       after the execution of 'nbstart'.\n#   Note that only one CMD allowed per Dockerfile, and it can contain an \n#   absolute command (not taking an argument from the command line).\n#  _______________ EOS ::  END of Script ::::::::::::::::::::::::::::::::::::::::\n#   vim: set fileencoding=utf-8 ff=unix tw=78 ai syn=conf :\n","injectedSmells":[],"originalDockerfileHash":"5fa4a1421ef8b3d4df9b368f83a9ed19","successfullyInjectedSmells":[],"originalDockerfileUglified":"#    Dockerfile                                                  Date : 2016-10-25\n#\n#   _______________|  Jupyter notebooks from fecon235 using Docker containers\n#                     Computational data tools for FINANCIAL ECONOMICS\n#                     https://hub.docker.com/r/rsvp/fecon235\n#\n#             Usage:  To BUILD this Dockerfile:\n#                          $ docker build -t IMAGENAME -f Dockerfile .\n#                     where the period implies current directory.\n#\n#          Examples:  To RUN the image:\n#                          $ docker run -p 8888:8888 -it IMAGENAME\n#                     which should yield a prompt, then as root:\n#                          % nbstart\n#                     and interact with browser at http://localhost:8888\n#\n#              Tips:  - Pull the latest git commits from /opt/rsvp/fecon235\n#                     - Learn about data volumes to persist data.\n#\n#      Dependencies:  Docker images: continuumio/{anaconda,anaconda3}\n#                            https://hub.docker.com/r/continuumio/anaconda\n#                            https://hub.docker.com/r/continuumio/anaconda3\n#                            The \"3\" indicates python3, else it is python2 based;\n#                            see FROM line at Begin Script.\n#                     Python code:  https://github.com/rsvp/fecon235\n#\n#    CHANGE LOG \n#    2016-10-25  Use own tagged base: rsvp/ana2-pd0181 for replication and tests.\n#                Improve entry UI.  Change SHELL from sh to bash. \n#                Introduce REBUILD line to induce new clone of fecon235. \n#                Reorder commands to optimize for Docker's copy-on-write.\n#    2016-10-09  First stable version produced rsvp/fecon:v4.16.0525\n#   _______________     ::  BEGIN  Script ::::::::::::::::::::::::::::::::::::::::\n#    Tip: Obtain the base image in itself by, for example:\n#         $ docker pull continuumio/anaconda:4.2.0\nFROM rsvp/ana2-pd0181\n#    The size of this image alone is just over 2 GB -- so patience.\n#    We may switch to miniconda and install only needed packages.\nMAINTAINER Adriano rsvp.github.com\n#            Lead developer for fecon235\n#        __________ SET-UP\nSHELL [\"/bin/bash\", \"-c\"]\n#    Other RUN will use /bin/sh as default (ugh!)\n#    Update the repository sources:\n#    RUN apt-get update\n#    ... advisable before any apt-get installs for the Linux environment.\n#    Make DIRECTORIES:  [Hassle of setting up an USER can be avoided.]\nRUN mkdir -p /opt/rsvp/bin /opt/rsvp/dock\n#              /opt is designed for third-party software.\n#    Set ENVIRONMENT variables for Bash and Python:\nENV PATH=\"/opt/rsvp/bin:$PATH\"\nENV PYTHONPATH=\"/opt/rsvp/bin:/opt/rsvp:$PYTHONPATH\"\n#    conda is like pip for Python, but for anaconda* environments.\n#    Use conda to INSTALL jupyter and other Python dependencies:\nRUN /opt/conda/bin/conda install jupyter pandas-datareader -y --quiet\nRUN echo \" :: REBUILD BELOW, marker: CHANGE THIS LINE: 2016-10-17 ::::::::\"\n#    Editing this line will induce new clone of fecon235.\n#    Install fecon235 REPOSITORY from GitHub:\nRUN cd /opt/rsvp \\\n && git clone https://github.com/rsvp/fecon235.git\n#    Expose the traditional port for Jupyter notebook: \n#    EXPOSE 8888\n#    ... we shall instead use \"-p 8888:8888\" at the command line instead.\n#    Write NOTEBOOK START COMMAND as script:  [Using \"alias\" NOT advisable!] \n#\nRUN echo '/opt/conda/bin/jupyter notebook --notebook-dir=/opt/rsvp/fecon235/nb --ip=\"0.0.0.0\" --port=8888 --no-browser' > /opt/rsvp/bin/nbstart \\\n && chmod 755 /opt/rsvp/bin/nbstart\n#\n#    DOES NOT WORK: --ip=\"127.0.0.1\" OR --ip=\"localhost\"\n#    Jupyter docs use: --ip=\"0.0.0.0\" which means all IPv4 addresses on local machine.\n#    Using http://localhost:8888 on your browser should still work.\n#\n#    Anaconda usess: --ip=\"*\" which generates stern security warnings, but it's for\n#    Docker Machine VM which will interface at: http://<DOCKER-MACHINE-IP>:8888,\n#    Set the MAIN command for this image:   [For TESTING command directly.] \n#    ENTRYPOINT /opt/conda/bin/jupyter notebook --notebook-dir=/opt/rsvp/fecon235/nb \\\n#               --ip=\"0.0.0.0\" --port=8888 --no-browser \n#    Set the MAIN command for this image, with user instructions:\nENTRYPOINT cd /opt/rsvp/fecon235 \\\n && echo ' PORT required: $ docker run -p 8888:8888 -it rsvp/fecon235' \\\n && echo ' ' \\\n && echo ' :: Welcome! Git repository cloned at: /opt/rsvp/fecon235' \\\n && echo ' :: Run \"nbstart\" for Jupyter notebooks, then interact with' \\\n && echo ' :: host browser at http://localhost:8888' \\\n && echo ' ' \\\n && /bin/bash\n#    ... should yield root prompt, all set for action, e.g. nbstart\n#    (Using WORKDIR only scopes within a Dockerfile, not in a container.)\n#    Specify default argument to Entrypoint:\n#    CMD ['-c', 'nbstart']\n#    ... fallback when an argument is not given on command line by user,\n#        however, the container's Bash prompt will not be accessible\n#        after the execution of 'nbstart'.\n#    Note that only one CMD allowed per Dockerfile, and it can contain an \n#    absolute command (not taking an argument from the command line).\n#   _______________ EOS ::  END of Script ::::::::::::::::::::::::::::::::::::::::\n#    vim: set fileencoding=utf-8 ff=unix tw=78 ai syn=conf :\n","originalDockerfileUglifiedHash":"fa77015a55c435044940b0a361acc19b","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/ee1fa0cd93192b57f1cc3c15fea2de8925673dab.dockerfile"}