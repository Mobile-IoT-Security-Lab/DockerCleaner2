{"seed":3486827696,"processedDockerfileHash":"8877d1bcd19c173d899f6fb34f1b4163","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM php:7.0-fpm AS builder\nRUN set -ex ; apt-get update ; apt-get install --no-install-recommends autoconf build-essential libbsd-dev libbz2-dev libc-client2007e-dev libc6-dev libcurl3 libcurl4-openssl-dev libedit-dev libedit2 libgmp-dev libgpgme11-dev libicu-dev libjpeg-dev libkrb5-dev libldap2-dev libmagick++-dev libmagickwand-dev libmcrypt-dev libmemcached-dev libpcre3-dev libpng-dev libsqlite3-0 libsqlite3-dev libssh2-1-dev libssl-dev libtinfo-dev libtool libwebp-dev libvpx-dev libxml2 libxml2-dev libxpm-dev libxslt1-dev -y ; apt-get clean ; rm -rf /var/lib/apt/lists/* ; ln -s /usr/include/x86_64-linux-gnu/gmp.h /usr/include ; docker-php-ext-configure gd --with-png-dir=/usr --with-jpeg-dir=/usr --with-freetype-dir=/usr --with-webp-dir=/usr --with-xpm-dir=/usr --with-vpx-dir=/usr ; docker-php-ext-configure imap --with-kerberos --with-imap-ssl ; docker-php-ext-configure ldap --with-libdir=lib/x86_64-linux-gnu ; docker-php-ext-install bcmath bz2 calendar dba exif gd gettext gmp imap intl ldap mcrypt mysqli opcache pdo_mysql shmop soap sockets sysvmsg sysvsem sysvshm wddx xmlrpc xsl zip ; pecl install gnupg-1.4.0 igbinary-2.0.1 imagick-3.4.3 memcached-3.0.3 msgpack-2.0.2 redis-3.1.3 uopz-5.0.2 ; echo \"\\n\" | pecl install ssh2-1.1.2 ; docker-php-ext-enable --ini-name pecl.ini gnupg igbinary imagick memcached msgpack redis ssh2 uopz\nRUN set -ex ; NR_VERSION=\"$( curl --connect-timeout 10 -skS https://download.newrelic.com/php_agent/release/ | sed -n 's/.*>\\(.*linux\\).tar.gz<.*/\\1/p' ;)\" ; curl --connect-timeout 10 -o nr.tar.gz -fkSL \"https://download.newrelic.com/php_agent/release/$NR_VERSION.tar.gz\" ; tar -xf nr.tar.gz ; cp $NR_VERSION/agent/x64/newrelic-20151012.so /usr/local/lib/php/extensions/no-debug-non-zts-20151012/newrelic.so ; mkdir -p /var/log/newrelic ; rm -rf newrelic-php5* nr.tar.gz ; echo \"extension=newrelic.so\" > /usr/local/etc/php/conf.d/newrelic.ini\nRUN set -ex ; curl --connect-timeout 10 -o ioncube.tar.gz -fkSL \"https://downloads.ioncube.com/loader_downloads/ioncube_loaders_lin_x86-64.tar.gz\" ; tar -zxvf ioncube.tar.gz ; cp ioncube/ioncube_loader_lin_7.0.so /usr/local/lib/php/extensions/no-debug-non-zts-20151012/ioncube.so ; rm -Rf ioncube* ; echo \"zend_extension=ioncube.so\" > /usr/local/etc/php/conf.d/01-ioncube.ini\n#   Now that all the modules are built/downloaded, use the original php:7.0-fpm image and\n#   install only the runtime dependencies with the new modules and config files.\nFROM php:7.0-fpm\nWORKDIR /\nRUN set -ex ; apt-get update \\\n && apt-get install --no-install-recommends libc-client2007e libgpgme11 libicu57 libmagickwand-6.q16-3 libmcrypt4 libmemcached11 libmemcachedutil2 libpng16-16 libvpx4 libwebp6 libxpm4 libxslt1.1 ssmtp -y ; rm -rf /tmp/pear /usr/share/doc /usr/share/man /var/lib/apt/lists/* ; cd /usr/local/etc/php ; php-fpm -v 2> /dev/null | sed -E 's/PHP ([5|7].[0-9]{1,2}.[0-9]{1,2})(.*)/\\1/g' | head -n1 > php_version.txt\nCOPY --from=builder /usr/local/lib/php/extensions/no-debug-non-zts-20151012/ /usr/local/lib/php/extensions/no-debug-non-zts-20151012/\nCOPY --from=builder /usr/local/etc/php/conf.d/ /usr/local/etc/php/conf.d/\nRUN pear install --alldeps Auth_SASL Auth_SASL2-beta Benchmark pear.php.net/Console_Color2-0.1.2 Console_Table HTTP_OAuth-0.3.1 HTTP_Request2 Log Mail MDB2 Net_GeoIP Net_SMTP Net_Socket XML_RPC2 pear.symfony.com/YAML\nRUN set -ex \\\n && { echo '[global]' ;echo 'daemonize = no' ;echo 'error_log = /proc/self/fd/2' ;echo ;echo '[www]' ;echo 'listen = [::]:9000' ;echo 'listen.owner = www-data' ;echo 'listen.group = www-data' ;echo ;echo 'user = www-data' ;echo 'group = www-data' ;echo ;echo 'access.log = /proc/self/fd/2' ;echo ;echo 'pm = static' ;echo 'pm.max_children = 1' ;echo 'pm.start_servers = 1' ;echo 'request_terminate_timeout = 65s' ;echo 'pm.max_requests = 1000' ;echo 'catch_workers_output = yes' ; } | tee /usr/local/etc/php-fpm.d/www.conf \\\n && mkdir -p /usr/local/php/php/auto_prepends \\\n && { echo '<?php' ;echo 'if (function_exists(\"uopz_allow_exit\")) {;' echo ' uopz_allow_exit(true);' ;echo '}' ;echo '?>' ; } | tee /usr/local/php/php/auto_prepends/default_prepend.php \\\n && { echo 'FromLineOverride=YES' ;echo 'mailhub=127.0.0.1' ;echo 'UseTLS=NO' ;echo 'UseSTARTTLS=NO' ; } | tee /etc/ssmtp/ssmtp.conf \\\n && { echo '[PHP]' ;echo 'log_errors = On' ;echo 'error_log = /dev/stderr' ;echo 'auto_prepend_file = /usr/local/php/php/auto_prepends/default_prepend.php' ; } | tee /usr/local/etc/php/conf.d/php.ini\nEXPOSE 9000/tcp\nCMD [\"php-fpm\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\nHEALTHCHECK CMD curl --fail http://127.0.0.1:80 || exit 1\n","originalDockerfile":"FROM php:7.0-fpm AS builder\nRUN set -ex ; apt-get update ; apt-get install autoconf build-essential libbsd-dev libbz2-dev libc-client2007e-dev libc6-dev libcurl3 libcurl4-openssl-dev libedit-dev libedit2 libgmp-dev libgpgme11-dev libicu-dev libjpeg-dev libkrb5-dev libldap2-dev libmagick++-dev libmagickwand-dev libmcrypt-dev libmemcached-dev libpcre3-dev libpng-dev libsqlite3-0 libsqlite3-dev libssh2-1-dev libssl-dev libtinfo-dev libtool libwebp-dev libvpx-dev libxml2 libxml2-dev libxpm-dev libxslt1-dev -y ; apt-get clean ; rm -rf /var/lib/apt/lists/* ; ln -s /usr/include/x86_64-linux-gnu/gmp.h /usr/include ; docker-php-ext-configure gd --with-png-dir=/usr --with-jpeg-dir=/usr --with-freetype-dir=/usr --with-webp-dir=/usr --with-xpm-dir=/usr --with-vpx-dir=/usr ; docker-php-ext-configure imap --with-kerberos --with-imap-ssl ; docker-php-ext-configure ldap --with-libdir=lib/x86_64-linux-gnu ; docker-php-ext-install bcmath bz2 calendar dba exif gd gettext gmp imap intl ldap mcrypt mysqli opcache pdo_mysql shmop soap sockets sysvmsg sysvsem sysvshm wddx xmlrpc xsl zip ; pecl install gnupg-1.4.0 igbinary-2.0.1 imagick-3.4.3 memcached-3.0.3 msgpack-2.0.2 redis-3.1.3 uopz-5.0.2 ; echo \"\\n\" | pecl install ssh2-1.1.2 ; docker-php-ext-enable --ini-name pecl.ini gnupg igbinary imagick memcached msgpack redis ssh2 uopz\nRUN set -ex ; NR_VERSION=\"$( curl --connect-timeout 10 -skS https://download.newrelic.com/php_agent/release/ | sed -n 's/.*>\\(.*linux\\).tar.gz<.*/\\1/p' ;)\" ; curl --connect-timeout 10 -o nr.tar.gz -fkSL \"https://download.newrelic.com/php_agent/release/$NR_VERSION.tar.gz\" ; tar -xf nr.tar.gz ; cp $NR_VERSION/agent/x64/newrelic-20151012.so /usr/local/lib/php/extensions/no-debug-non-zts-20151012/newrelic.so ; mkdir -p /var/log/newrelic ; rm -rf newrelic-php5* nr.tar.gz ; echo \"extension=newrelic.so\" > /usr/local/etc/php/conf.d/newrelic.ini\nRUN set -ex ; curl --connect-timeout 10 -o ioncube.tar.gz -fkSL \"https://downloads.ioncube.com/loader_downloads/ioncube_loaders_lin_x86-64.tar.gz\" ; tar -zxvf ioncube.tar.gz ; cp ioncube/ioncube_loader_lin_7.0.so /usr/local/lib/php/extensions/no-debug-non-zts-20151012/ioncube.so ; rm -Rf ioncube* ; echo \"zend_extension=ioncube.so\" > /usr/local/etc/php/conf.d/01-ioncube.ini\n#  Now that all the modules are built/downloaded, use the original php:7.0-fpm image and\n#  install only the runtime dependencies with the new modules and config files.\nFROM php:7.0-fpm\nWORKDIR /\nRUN set -ex ; apt-get update \\\n && apt-get install --no-install-recommends libc-client2007e libgpgme11 libicu57 libmagickwand-6.q16-3 libmcrypt4 libmemcached11 libmemcachedutil2 libpng16-16 libvpx4 libwebp6 libxpm4 libxslt1.1 ssmtp -y ; rm -rf /tmp/pear /usr/share/doc /usr/share/man /var/lib/apt/lists/* ; cd /usr/local/etc/php ; php-fpm -v 2> /dev/null | sed -E 's/PHP ([5|7].[0-9]{1,2}.[0-9]{1,2})(.*)/\\1/g' | head -n1 > php_version.txt\nCOPY --from=builder /usr/local/lib/php/extensions/no-debug-non-zts-20151012/ /usr/local/lib/php/extensions/no-debug-non-zts-20151012/\nCOPY --from=builder /usr/local/etc/php/conf.d/ /usr/local/etc/php/conf.d/\nRUN pear install --alldeps Auth_SASL Auth_SASL2-beta Benchmark pear.php.net/Console_Color2-0.1.2 Console_Table HTTP_OAuth-0.3.1 HTTP_Request2 Log Mail MDB2 Net_GeoIP Net_SMTP Net_Socket XML_RPC2 pear.symfony.com/YAML\nRUN set -ex \\\n && { echo '[global]' ;echo 'daemonize = no' ;echo 'error_log = /proc/self/fd/2' ;echo ;echo '[www]' ;echo 'listen = [::]:9000' ;echo 'listen.owner = www-data' ;echo 'listen.group = www-data' ;echo ;echo 'user = www-data' ;echo 'group = www-data' ;echo ;echo 'access.log = /proc/self/fd/2' ;echo ;echo 'pm = static' ;echo 'pm.max_children = 1' ;echo 'pm.start_servers = 1' ;echo 'request_terminate_timeout = 65s' ;echo 'pm.max_requests = 1000' ;echo 'catch_workers_output = yes' ; } | tee /usr/local/etc/php-fpm.d/www.conf \\\n && mkdir -p /usr/local/php/php/auto_prepends \\\n && { echo '<?php' ;echo 'if (function_exists(\"uopz_allow_exit\")) {;' echo ' uopz_allow_exit(true);' ;echo '}' ;echo '?>' ; } | tee /usr/local/php/php/auto_prepends/default_prepend.php \\\n && { echo 'FromLineOverride=YES' ;echo 'mailhub=127.0.0.1' ;echo 'UseTLS=NO' ;echo 'UseSTARTTLS=NO' ; } | tee /etc/ssmtp/ssmtp.conf \\\n && { echo '[PHP]' ;echo 'log_errors = On' ;echo 'error_log = /dev/stderr' ;echo 'auto_prepend_file = /usr/local/php/php/auto_prepends/default_prepend.php' ; } | tee /usr/local/etc/php/conf.d/php.ini\nEXPOSE 9000/tcp\nCMD [\"php-fpm\"]\n","injectedSmells":[],"originalDockerfileHash":"e752b6cc511f039691bef586cfd4c4b0","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM php:7.0-fpm AS builder\nRUN set -ex ; apt-get update ; apt-get install autoconf build-essential libbsd-dev libbz2-dev libc-client2007e-dev libc6-dev libcurl3 libcurl4-openssl-dev libedit-dev libedit2 libgmp-dev libgpgme11-dev libicu-dev libjpeg-dev libkrb5-dev libldap2-dev libmagick++-dev libmagickwand-dev libmcrypt-dev libmemcached-dev libpcre3-dev libpng-dev libsqlite3-0 libsqlite3-dev libssh2-1-dev libssl-dev libtinfo-dev libtool libwebp-dev libvpx-dev libxml2 libxml2-dev libxpm-dev libxslt1-dev -y ; apt-get clean ; rm -rf /var/lib/apt/lists/* ; ln -s /usr/include/x86_64-linux-gnu/gmp.h /usr/include ; docker-php-ext-configure gd --with-png-dir=/usr --with-jpeg-dir=/usr --with-freetype-dir=/usr --with-webp-dir=/usr --with-xpm-dir=/usr --with-vpx-dir=/usr ; docker-php-ext-configure imap --with-kerberos --with-imap-ssl ; docker-php-ext-configure ldap --with-libdir=lib/x86_64-linux-gnu ; docker-php-ext-install bcmath bz2 calendar dba exif gd gettext gmp imap intl ldap mcrypt mysqli opcache pdo_mysql shmop soap sockets sysvmsg sysvsem sysvshm wddx xmlrpc xsl zip ; pecl install gnupg-1.4.0 igbinary-2.0.1 imagick-3.4.3 memcached-3.0.3 msgpack-2.0.2 redis-3.1.3 uopz-5.0.2 ; echo \"\\n\" | pecl install ssh2-1.1.2 ; docker-php-ext-enable --ini-name pecl.ini gnupg igbinary imagick memcached msgpack redis ssh2 uopz\nRUN set -ex ; NR_VERSION=\"$( curl --connect-timeout 10 -skS https://download.newrelic.com/php_agent/release/ | sed -n 's/.*>\\(.*linux\\).tar.gz<.*/\\1/p' ;)\" ; curl --connect-timeout 10 -o nr.tar.gz -fkSL \"https://download.newrelic.com/php_agent/release/$NR_VERSION.tar.gz\" ; tar -xf nr.tar.gz ; cp $NR_VERSION/agent/x64/newrelic-20151012.so /usr/local/lib/php/extensions/no-debug-non-zts-20151012/newrelic.so ; mkdir -p /var/log/newrelic ; rm -rf newrelic-php5* nr.tar.gz ; echo \"extension=newrelic.so\" > /usr/local/etc/php/conf.d/newrelic.ini\nRUN set -ex ; curl --connect-timeout 10 -o ioncube.tar.gz -fkSL \"https://downloads.ioncube.com/loader_downloads/ioncube_loaders_lin_x86-64.tar.gz\" ; tar -zxvf ioncube.tar.gz ; cp ioncube/ioncube_loader_lin_7.0.so /usr/local/lib/php/extensions/no-debug-non-zts-20151012/ioncube.so ; rm -Rf ioncube* ; echo \"zend_extension=ioncube.so\" > /usr/local/etc/php/conf.d/01-ioncube.ini\n#   Now that all the modules are built/downloaded, use the original php:7.0-fpm image and\n#   install only the runtime dependencies with the new modules and config files.\nFROM php:7.0-fpm\nWORKDIR /\nRUN set -ex ; apt-get update \\\n && apt-get install --no-install-recommends libc-client2007e libgpgme11 libicu57 libmagickwand-6.q16-3 libmcrypt4 libmemcached11 libmemcachedutil2 libpng16-16 libvpx4 libwebp6 libxpm4 libxslt1.1 ssmtp -y ; rm -rf /tmp/pear /usr/share/doc /usr/share/man /var/lib/apt/lists/* ; cd /usr/local/etc/php ; php-fpm -v 2> /dev/null | sed -E 's/PHP ([5|7].[0-9]{1,2}.[0-9]{1,2})(.*)/\\1/g' | head -n1 > php_version.txt\nCOPY --from=builder /usr/local/lib/php/extensions/no-debug-non-zts-20151012/ /usr/local/lib/php/extensions/no-debug-non-zts-20151012/\nCOPY --from=builder /usr/local/etc/php/conf.d/ /usr/local/etc/php/conf.d/\nRUN pear install --alldeps Auth_SASL Auth_SASL2-beta Benchmark pear.php.net/Console_Color2-0.1.2 Console_Table HTTP_OAuth-0.3.1 HTTP_Request2 Log Mail MDB2 Net_GeoIP Net_SMTP Net_Socket XML_RPC2 pear.symfony.com/YAML\nRUN set -ex \\\n && { echo '[global]' ;echo 'daemonize = no' ;echo 'error_log = /proc/self/fd/2' ;echo ;echo '[www]' ;echo 'listen = [::]:9000' ;echo 'listen.owner = www-data' ;echo 'listen.group = www-data' ;echo ;echo 'user = www-data' ;echo 'group = www-data' ;echo ;echo 'access.log = /proc/self/fd/2' ;echo ;echo 'pm = static' ;echo 'pm.max_children = 1' ;echo 'pm.start_servers = 1' ;echo 'request_terminate_timeout = 65s' ;echo 'pm.max_requests = 1000' ;echo 'catch_workers_output = yes' ; } | tee /usr/local/etc/php-fpm.d/www.conf \\\n && mkdir -p /usr/local/php/php/auto_prepends \\\n && { echo '<?php' ;echo 'if (function_exists(\"uopz_allow_exit\")) {;' echo ' uopz_allow_exit(true);' ;echo '}' ;echo '?>' ; } | tee /usr/local/php/php/auto_prepends/default_prepend.php \\\n && { echo 'FromLineOverride=YES' ;echo 'mailhub=127.0.0.1' ;echo 'UseTLS=NO' ;echo 'UseSTARTTLS=NO' ; } | tee /etc/ssmtp/ssmtp.conf \\\n && { echo '[PHP]' ;echo 'log_errors = On' ;echo 'error_log = /dev/stderr' ;echo 'auto_prepend_file = /usr/local/php/php/auto_prepends/default_prepend.php' ; } | tee /usr/local/etc/php/conf.d/php.ini\nEXPOSE 9000/tcp\nCMD [\"php-fpm\"]\n","originalDockerfileUglifiedHash":"a6dfbd88388ee8703c688b596644ebae","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/8b31f2a210ae0183db4bd3981192e7b11b19d67e.dockerfile"}