{"seed":3540014976,"processedDockerfileHash":"abb0dfb247415456cf9973effb1f359a","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","have-a-healthcheck"],"processedDockerfile":"#   \n#   Docker image for Tesseract 4 (and Leptonica) from source code\n#   https://github.com/tesseract-ocr/tesseract/wiki/Compiling#linux\n#   http://www.leptonica.org/source/README.html\n#   based on https://github.com/tesseract-shadow/tesseract-ocr-compilation/blob/master/Dockerfile\n#\nFROM ubuntu:18.04\nENV DOCKER_USER=\"adam\"\nRUN groupadd -r ${DOCKER_USER} \\\n && useradd -r -g ${DOCKER_USER} ${DOCKER_USER}\nUSER ${DOCKER_USER}\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#   [ install dependencies ]\nRUN apt-get update \\\n && apt-get install --no-install-recommends nano=2.9.3-2 pkg-config=0.29.1-0ubuntu2 python-dev=2.7.15~rc1-1 python-pip=9.0.1-2.3~ubuntu1.18.04.8 python3-dev=3.6.7-1~18.04 python3-pip=9.0.1-2.3~ubuntu1.18.04.8 python-tk=2.7.17-1~18.04 python3-tk=3.6.9-1~18.04 screen=4.6.2-1ubuntu1.1 wget=1.19.4-1ubuntu2.2 git=1:2.17.1-1ubuntu0.17 -y --\n#   [ install ocr ]\nRUN apt-get install --no-install-recommends tesseract-ocr=4.00~git2288-10f4998a-2 -y\n#   [ Install ZSH ]\nRUN apt-get install --no-install-recommends zsh=5.4.2-3ubuntu3.2 -y\nRUN git clone git://github.com/robbyrussell/oh-my-zsh.git /root/.oh-my-zsh\nRUN cp /root/.oh-my-zsh/templates/zshrc.zsh-template ~/.zshrc\nRUN chsh -s /bin/zsh\n#   [ Install Python packages ]\nRUN pip3 install -U setuptools packaging pyparsing six cython numpy sklearn scikit-image scikit-learn imutils Pillow matplotlib argparse jupyter scipy easydict pandas tqdm xmltodict uwsgi Flask requests python-dateutil\n#   [ ffmpeg ]\nRUN apt-get update \\\n && apt-get install --no-install-recommends ffmpeg=7:3.4.11-0ubuntu0.1 -y --upgrade\n#   [ Download Tesseract data ]\nENV TESSDATA_PREFIX=\"/usr/local/share/tessdata\"\nRUN mkdir ${TESSDATA_PREFIX}\n#   osd\tOrientation and script detection\nRUN wget -O ${TESSDATA_PREFIX}/osd.traineddata https://github.com/tesseract-ocr/tessdata/raw/3.04.00/osd.traineddata\n#   equ\tMath / equation detection\nRUN wget -O ${TESSDATA_PREFIX}/equ.traineddata https://github.com/tesseract-ocr/tessdata/raw/3.04.00/equ.traineddata\n#   eng English\nRUN wget -O ${TESSDATA_PREFIX}/eng.traineddata https://github.com/tesseract-ocr/tessdata/raw/4.00/eng.traineddata\n#   ara Arabic\nRUN wget -O ${TESSDATA_PREFIX}/ara.traineddata https://github.com/tesseract-ocr/tessdata/raw/4.00/ara.traineddata\n#   other languages: https://github.com/tesseract-ocr/tesseract/wiki/Data-Files\n#   [ update config ]\nRUN adduser --disabled-password --gecos \"\" docker \\\n && echo 'docker ALL=NOPASSWD: ALL' >> /etc/sudoers \\\n && su -c 'python3 -c \"import matplotlib.pyplot\"' docker \\\n && echo 'ln -f /dev/null /dev/raw1394 2>/dev/null' >> /etc/bash.bashrc \\\n && echo 'export PATH=/work/bin:/root/bin:${PATH}' >> /etc/bash.bashrc\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  \n#  Docker image for Tesseract 4 (and Leptonica) from source code\n#  https://github.com/tesseract-ocr/tesseract/wiki/Compiling#linux\n#  http://www.leptonica.org/source/README.html\n#  based on https://github.com/tesseract-shadow/tesseract-ocr-compilation/blob/master/Dockerfile\n#\nFROM ubuntu:18.04\nENV DOCKER_USER=\"adam\"\nRUN groupadd -r ${DOCKER_USER} \\\n && useradd -r -g ${DOCKER_USER} ${DOCKER_USER}\nUSER ${DOCKER_USER}\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#  [ install dependencies ]\nRUN apt-get update \\\n && apt-get install nano pkg-config python-dev python-pip python3-dev python3-pip python-tk python3-tk screen wget git -y --\n#  [ install ocr ]\nRUN apt-get install -y tesseract-ocr\n#  [ Install ZSH ]\nRUN apt-get install -y zsh\nRUN git clone git://github.com/robbyrussell/oh-my-zsh.git /root/.oh-my-zsh\nRUN cp /root/.oh-my-zsh/templates/zshrc.zsh-template ~/.zshrc\nRUN chsh -s /bin/zsh\n#  [ Install Python packages ]\nRUN pip3 install -U setuptools packaging pyparsing six cython numpy sklearn scikit-image scikit-learn imutils Pillow matplotlib argparse jupyter scipy easydict pandas tqdm xmltodict uwsgi Flask requests python-dateutil\n#  [ ffmpeg ]\nRUN apt-get update \\\n && apt-get install ffmpeg -y --upgrade\n#  [ Download Tesseract data ]\nENV TESSDATA_PREFIX=\"/usr/local/share/tessdata\"\nRUN mkdir ${TESSDATA_PREFIX}\n#  osd\tOrientation and script detection\nRUN wget -O ${TESSDATA_PREFIX}/osd.traineddata https://github.com/tesseract-ocr/tessdata/raw/3.04.00/osd.traineddata\n#  equ\tMath / equation detection\nRUN wget -O ${TESSDATA_PREFIX}/equ.traineddata https://github.com/tesseract-ocr/tessdata/raw/3.04.00/equ.traineddata\n#  eng English\nRUN wget -O ${TESSDATA_PREFIX}/eng.traineddata https://github.com/tesseract-ocr/tessdata/raw/4.00/eng.traineddata\n#  ara Arabic\nRUN wget -O ${TESSDATA_PREFIX}/ara.traineddata https://github.com/tesseract-ocr/tessdata/raw/4.00/ara.traineddata\n#  other languages: https://github.com/tesseract-ocr/tesseract/wiki/Data-Files\n#  [ update config ]\nRUN adduser --disabled-password --gecos \"\" docker \\\n && echo 'docker ALL=NOPASSWD: ALL' >> /etc/sudoers \\\n && su -c 'python3 -c \"import matplotlib.pyplot\"' docker \\\n && echo 'ln -f /dev/null /dev/raw1394 2>/dev/null' >> /etc/bash.bashrc \\\n && echo 'export PATH=/work/bin:/root/bin:${PATH}' >> /etc/bash.bashrc\n","injectedSmells":[],"originalDockerfileHash":"d3098fb4f477749598320e06d3005780","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   \n#   Docker image for Tesseract 4 (and Leptonica) from source code\n#   https://github.com/tesseract-ocr/tesseract/wiki/Compiling#linux\n#   http://www.leptonica.org/source/README.html\n#   based on https://github.com/tesseract-shadow/tesseract-ocr-compilation/blob/master/Dockerfile\n#\nFROM ubuntu:18.04\nENV DOCKER_USER=\"adam\"\nRUN groupadd -r ${DOCKER_USER} \\\n && useradd -r -g ${DOCKER_USER} ${DOCKER_USER}\nUSER ${DOCKER_USER}\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#   [ install dependencies ]\nRUN apt-get update \\\n && apt-get install nano pkg-config python-dev python-pip python3-dev python3-pip python-tk python3-tk screen wget git -y --\n#   [ install ocr ]\nRUN apt-get install tesseract-ocr -y\n#   [ Install ZSH ]\nRUN apt-get install zsh -y\nRUN git clone git://github.com/robbyrussell/oh-my-zsh.git /root/.oh-my-zsh\nRUN cp /root/.oh-my-zsh/templates/zshrc.zsh-template ~/.zshrc\nRUN chsh -s /bin/zsh\n#   [ Install Python packages ]\nRUN pip3 install -U setuptools packaging pyparsing six cython numpy sklearn scikit-image scikit-learn imutils Pillow matplotlib argparse jupyter scipy easydict pandas tqdm xmltodict uwsgi Flask requests python-dateutil\n#   [ ffmpeg ]\nRUN apt-get update \\\n && apt-get install ffmpeg -y --upgrade\n#   [ Download Tesseract data ]\nENV TESSDATA_PREFIX=\"/usr/local/share/tessdata\"\nRUN mkdir ${TESSDATA_PREFIX}\n#   osd\tOrientation and script detection\nRUN wget -O ${TESSDATA_PREFIX}/osd.traineddata https://github.com/tesseract-ocr/tessdata/raw/3.04.00/osd.traineddata\n#   equ\tMath / equation detection\nRUN wget -O ${TESSDATA_PREFIX}/equ.traineddata https://github.com/tesseract-ocr/tessdata/raw/3.04.00/equ.traineddata\n#   eng English\nRUN wget -O ${TESSDATA_PREFIX}/eng.traineddata https://github.com/tesseract-ocr/tessdata/raw/4.00/eng.traineddata\n#   ara Arabic\nRUN wget -O ${TESSDATA_PREFIX}/ara.traineddata https://github.com/tesseract-ocr/tessdata/raw/4.00/ara.traineddata\n#   other languages: https://github.com/tesseract-ocr/tesseract/wiki/Data-Files\n#   [ update config ]\nRUN adduser --disabled-password --gecos \"\" docker \\\n && echo 'docker ALL=NOPASSWD: ALL' >> /etc/sudoers \\\n && su -c 'python3 -c \"import matplotlib.pyplot\"' docker \\\n && echo 'ln -f /dev/null /dev/raw1394 2>/dev/null' >> /etc/bash.bashrc \\\n && echo 'export PATH=/work/bin:/root/bin:${PATH}' >> /etc/bash.bashrc\n","originalDockerfileUglifiedHash":"63835ee18701856a390d0f060fb206e2","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/6f7f52f6905d886ad4d2d6b42da6aff4126dc6b2.dockerfile"}