{"seed":2865404486,"processedDockerfileHash":"44ad012b8120b3005839b29cef28a831","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Development Application\nFROM wunsh/alpine-elixir-elm AS app\nMAINTAINER Docdog Developers <dev@docdog.io>\nARG BUILD_ENV=prod\nARG PORT=4000\nENV APP_NAME=\"docdog\" \\\n    MIX_ENV=\"$BUILD_ENV\" \\\n    PORT=\"$PORT\" \\\n    MIX_HOME=\"/opt/mix\" \\\n    HEX_HOME=\"/opt/hex\" \\\n    HOME=\"/opt/app\"\nEXPOSE ${PORT}\nRUN echo \"Build Docker image for Mix env: ${MIX_ENV}.\" \\\n && mkdir -p ${HOME} \\\n && chmod -R 777 ${HOME} \\\n && apk update \\\n && apk add g++=12.2.1_git20220924-r4 inotify-tools=3.22.6.0-r0 make=4.3-r1 python yarn=1.22.19-r0 --no-cache --update \\\n && update-ca-certificates --fresh \\\n && rm -rf /var/cache/apk/* \\\n && mix local.hex --force \\\n && mix local.rebar --force\n#   Cache Mix dependencies\nWORKDIR ${HOME}\nCOPY mix.exs mix.lock ./\nRUN mix do deps.get --only=${MIX_ENV}, deps.compile\n#   Cache Yarn dependencies\nWORKDIR assets\nCOPY assets/package.json assets/yarn.lock ./\nRUN yarn install\n#   Cache Elm dependencies\nWORKDIR elm\nCOPY assets/elm/elm-package.json ./\nRUN elm package install -y\nWORKDIR ${HOME}\nCOPY . .\nWORKDIR assets/elm\nRUN elm-make Main.elm --output=../js/main.js\nWORKDIR assets\nRUN if [ ${MIX_ENV} = \"prod\" ] ; then yarn run deploy ; else yarn run build ; fi\nWORKDIR ${HOME}\nRUN mix do compile, phx.digest\nRUN if [ ${MIX_ENV} = \"prod\" ] ; then mix release --env=${MIX_ENV} ;RELEASE_DIR=`ls -d _build/${MIX_ENV}/rel/${APP_NAME}/releases/*/ ` \\\n && mkdir /release \\\n && tar -xf \"${RELEASE_DIR}${APP_NAME}.tar.gz\" -C /release ; fi\nCMD [\"mix\", \"phx.server\"]\n#   Release Application\nFROM bitwalker/alpine-erlang:21.0.3\nMAINTAINER Docdog Developers <dev@docdog.io>\nARG BUILD_ENV=prod\nARG PORT=4000\nENV APP_NAME=\"docdog\" \\\n    HOME=\"/opt/app\" \\\n    MIX_ENV=\"$BUILD_ENV\" \\\n    PORT=\"$PORT\" \\\n    REPLACE_OS_VARS=\"true\"\nEXPOSE ${PORT}\nCOPY --from=app /release/ .\nRUN apk update \\\n && apk add inotify-tools=3.22.6.0-r0\nENTRYPOINT [\"/opt/app/bin/docdog\"]\nCMD [\"foreground\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Development Application\nFROM wunsh/alpine-elixir-elm AS app\nMAINTAINER Docdog Developers <dev@docdog.io>\nARG BUILD_ENV=prod\nARG PORT=4000\nENV APP_NAME=\"docdog\" \\\n    MIX_ENV=\"$BUILD_ENV\" \\\n    PORT=\"$PORT\" \\\n    MIX_HOME=\"/opt/mix\" \\\n    HEX_HOME=\"/opt/hex\" \\\n    HOME=\"/opt/app\"\nEXPOSE ${PORT}\nRUN echo \"Build Docker image for Mix env: ${MIX_ENV}.\" \\\n && mkdir -p ${HOME} \\\n && chmod -R 777 ${HOME} \\\n && apk update \\\n && apk --no-cache --update add g++ inotify-tools make python yarn \\\n && update-ca-certificates --fresh \\\n && rm -rf /var/cache/apk/* \\\n && mix local.hex --force \\\n && mix local.rebar --force\n#  Cache Mix dependencies\nWORKDIR ${HOME}\nADD mix.exs mix.lock ./\nRUN mix do deps.get --only=${MIX_ENV}, deps.compile\n#  Cache Yarn dependencies\nWORKDIR assets\nADD assets/package.json assets/yarn.lock ./\nRUN yarn install\n#  Cache Elm dependencies\nWORKDIR elm\nADD assets/elm/elm-package.json ./\nRUN elm package install -y\nWORKDIR ${HOME}\nADD . .\nWORKDIR assets/elm\nRUN elm-make Main.elm --output=../js/main.js\nWORKDIR assets\nRUN if [ ${MIX_ENV} = \"prod\" ] ; then yarn run deploy ; else yarn run build ; fi\nWORKDIR ${HOME}\nRUN mix do compile, phx.digest\nRUN if [ ${MIX_ENV} = \"prod\" ] ; then mix release --env=${MIX_ENV} ;RELEASE_DIR=`ls -d _build/${MIX_ENV}/rel/${APP_NAME}/releases/*/ ` \\\n && mkdir /release \\\n && tar -xf \"${RELEASE_DIR}${APP_NAME}.tar.gz\" -C /release ; fi\nCMD [\"mix\", \"phx.server\"]\n#  Release Application\nFROM bitwalker/alpine-erlang:21.0.3\nMAINTAINER Docdog Developers <dev@docdog.io>\nARG BUILD_ENV=prod\nARG PORT=4000\nENV APP_NAME=\"docdog\" \\\n    HOME=\"/opt/app\" \\\n    MIX_ENV=\"$BUILD_ENV\" \\\n    PORT=\"$PORT\" \\\n    REPLACE_OS_VARS=\"true\"\nEXPOSE ${PORT}\nCOPY --from=app /release/ .\nRUN apk update \\\n && apk add inotify-tools\nENTRYPOINT [\"/opt/app/bin/docdog\"]\nCMD [\"foreground\"]\n","injectedSmells":[],"originalDockerfileHash":"65de46fbb1e5918b293d8a16aaca9a46","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Development Application\nFROM wunsh/alpine-elixir-elm AS app\nMAINTAINER Docdog Developers <dev@docdog.io>\nARG BUILD_ENV=prod\nARG PORT=4000\nENV APP_NAME=\"docdog\" \\\n    MIX_ENV=\"$BUILD_ENV\" \\\n    PORT=\"$PORT\" \\\n    MIX_HOME=\"/opt/mix\" \\\n    HEX_HOME=\"/opt/hex\" \\\n    HOME=\"/opt/app\"\nEXPOSE ${PORT}\nRUN echo \"Build Docker image for Mix env: ${MIX_ENV}.\" \\\n && mkdir -p ${HOME} \\\n && chmod -R 777 ${HOME} \\\n && apk update \\\n && apk --no-cache --update add g++ inotify-tools make python yarn \\\n && update-ca-certificates --fresh \\\n && rm -rf /var/cache/apk/* \\\n && mix local.hex --force \\\n && mix local.rebar --force\n#   Cache Mix dependencies\nWORKDIR ${HOME}\nADD mix.exs mix.lock ./\nRUN mix do deps.get --only=${MIX_ENV}, deps.compile\n#   Cache Yarn dependencies\nWORKDIR assets\nADD assets/package.json assets/yarn.lock ./\nRUN yarn install\n#   Cache Elm dependencies\nWORKDIR elm\nADD assets/elm/elm-package.json ./\nRUN elm package install -y\nWORKDIR ${HOME}\nADD . .\nWORKDIR assets/elm\nRUN elm-make Main.elm --output=../js/main.js\nWORKDIR assets\nRUN if [ ${MIX_ENV} = \"prod\" ] ; then yarn run deploy ; else yarn run build ; fi\nWORKDIR ${HOME}\nRUN mix do compile, phx.digest\nRUN if [ ${MIX_ENV} = \"prod\" ] ; then mix release --env=${MIX_ENV} ;RELEASE_DIR=`ls -d _build/${MIX_ENV}/rel/${APP_NAME}/releases/*/ ` \\\n && mkdir /release \\\n && tar -xf \"${RELEASE_DIR}${APP_NAME}.tar.gz\" -C /release ; fi\nCMD [\"mix\", \"phx.server\"]\n#   Release Application\nFROM bitwalker/alpine-erlang:21.0.3\nMAINTAINER Docdog Developers <dev@docdog.io>\nARG BUILD_ENV=prod\nARG PORT=4000\nENV APP_NAME=\"docdog\" \\\n    HOME=\"/opt/app\" \\\n    MIX_ENV=\"$BUILD_ENV\" \\\n    PORT=\"$PORT\" \\\n    REPLACE_OS_VARS=\"true\"\nEXPOSE ${PORT}\nCOPY --from=app /release/ .\nRUN apk update \\\n && apk add inotify-tools\nENTRYPOINT [\"/opt/app/bin/docdog\"]\nCMD [\"foreground\"]\n","originalDockerfileUglifiedHash":"6e6d3d376be07c928c338f0c58b36724","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/538f73db5166a30b2664cc499e447c78cc72b556.dockerfile"}