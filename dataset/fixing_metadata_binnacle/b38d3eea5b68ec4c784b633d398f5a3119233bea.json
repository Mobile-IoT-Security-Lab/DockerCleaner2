{"seed":22898650,"processedDockerfileHash":"22a2a0cc1bf40ea15f6b6e14ee34c9bf","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","have-a-user"],"processedDockerfile":"#  FROM debian:buster\nFROM ubuntu:16.04\n#  LABEL de.dcso.misp-server.version=\"0.0.1-alpha\"\nLABEL vendor=\"DCSO GmbH <www.dcso.de>\"\nLABEL de.dcso.misp-server.release-date=\"2018-01-02\"\nLABEL de.dcso.misp-server.is-production=\"false\"\nLABEL maintainer=\"DCSO MISP <misp@dcso.de>\"\n#   Variables:\nARG MISP_TAG=v2.4.88\nARG python_cybox_TAG=v2.1.0.12\nARG python_stix_TAG=v1.1.1.4\nARG mixbox_TAG=v1.0.2\nARG cake_resque_TAG=4.1.2\n#  ########################################\n#         Start of MISP Config Part\n#   Install core components\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN : \\\n && apt-get autoremove -y \\\n && apt-get clean -y\nRUN (apt-get update ;apt-get install --no-install-recommends software-properties-common=0.96.20.10 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends supervisor=3.2.0-2ubuntu0.2 nano=2.5.3-2ubuntu2 vim=2:7.4.1689-3ubuntu1.5 curl=7.47.0-1ubuntu2.19 gcc=4:5.3.1-1ubuntu1 make=4.1-6 python=2.7.12-1~16.04 python-pip=8.1.1-2ubuntu0.6 python3=3.5.1-3 python3-pip=8.1.1-2ubuntu0.6 locales=2.23-0ubuntu11.3 zip=3.0-11 iputils-ping=3:20121221-5ubuntu2 curl=7.47.0-1ubuntu2.19 git=1:2.7.4-0ubuntu1.10 make=4.1-6 openssl=1.0.2g-1ubuntu4.20 vim=2:7.4.1689-3ubuntu1.5 zip=3.0-11 net-tools=1.60-26ubuntu1 sudo=1.8.16-0ubuntu1.10 -y )\n#   Install additional dependencies\nRUN (apt-get update ;apt-get install --no-install-recommends mariadb-client=10.0.38-0ubuntu0.16.04.1 python-mysqldb=1.3.7-1build2 python-dev=2.7.12-1~16.04 python-pip=8.1.1-2ubuntu0.6 python3-setuptools=20.7.0-1 python-setuptools=20.7.0-1 libxml2-dev=2.9.3+dfsg1-1ubuntu0.7 libxslt1-dev=1.1.28-2.1ubuntu0.3 zlib1g-dev=1:1.2.8.dfsg-2ubuntu4.3 python-setuptools=20.7.0-1 -y )\n#   Install Apache\nRUN (apt-get update ;apt-get install --no-install-recommends apache2=2.4.18-2ubuntu3.17 apache2-doc=2.4.18-2ubuntu3.17 apache2-utils=2.4.18-2ubuntu3.17 -y )\n#   ATTENTION the part about a2enmod/a2dismod, a2ensite/a2dissite is moved to step 7.\n#   Install PHP and depedencies\nRUN (apt-get update ;apt-get install --no-install-recommends libapache2-mod-php=1:7.0+35ubuntu6.1 php=1:7.0+35ubuntu6.1 php-cli=1:7.0+35ubuntu6.1 php-crypt-gpg=1.4.0-1ubuntu2 php-dev=1:7.0+35ubuntu6.1 php-json=1:7.0+35ubuntu6.1 php-mysql=1:7.0+35ubuntu6.1 php-opcache php-readline=1:7.0+35ubuntu6.1 php-redis=2.2.7-389-g2887ad1+2.2.7-1 php-xml=1:7.0+35ubuntu6.1 -y )\n#   Set locals\nRUN locale-gen en_US.UTF-8\nENV LANG=\"en_US.UTF-8\"\n#   Update PIP\nRUN pip install pip==23.1 --upgrade\nRUN pip3 install --upgrade pip\n#  #################################\n#  ## Install and configure MISP ###\n#  #################################\n#  ## 3/ MISP code ###\n#   Download MISP using git in the /var/www/ directory.\n#   Attention: we replaced the fixed tag with a variable\nRUN mkdir /var/www/MISP ; chown www-data:www-data /var/www/MISP\nRUN git clone https://github.com/MISP/MISP.git /var/www/MISP\nRUN cd /var/www/MISP ; git checkout tags/${MISP_TAG}\n#   Make git ignore filesystem permission differences\nRUN cd /var/www/MISP ; git config core.filemode false\n#   install Mitre's STIX and its dependencies by running the following commands:\n#   Attention: we replaced the fixed tag with a variable\nRUN (apt-get update ;apt-get install --no-install-recommends python-dev=2.7.12-1~16.04 python-pip=8.1.1-2ubuntu0.6 libxml2-dev=2.9.3+dfsg1-1ubuntu0.7 libxslt1-dev=1.1.28-2.1ubuntu0.3 zlib1g-dev=1:1.2.8.dfsg-2ubuntu4.3 python-setuptools=20.7.0-1 )\nRUN cd /var/www/MISP/app/files/scripts ; git clone https://github.com/CybOXProject/python-cybox.git\nRUN cd /var/www/MISP/app/files/scripts ; git clone https://github.com/STIXProject/python-stix.git\nRUN cd /var/www/MISP/app/files/scripts/python-cybox ; git checkout ${python_cybox_TAG} ; sudo python setup.py install\nRUN cd /var/www/MISP/app/files/scripts/python-stix ; git checkout ${python_stix_TAG} ; sudo python setup.py install\n#   install mixbox to accomodate the new STIX dependencies:\n#   Attention: we replaced the fixed tag with a variable\nRUN cd /var/www/MISP/app/files/scripts/ ; git clone https://github.com/CybOXProject/mixbox.git\nRUN cd /var/www/MISP/app/files/scripts/mixbox ; git checkout ${mixbox_TAG} ; sudo python setup.py install\n#   install support for STIX 2.0 (Python 3 is required)\nRUN pip3 install stix2\n#  ## 4/ CakePHP ###\n#   CakePHP is included as a submodule of MISP, execute the following commands to let git fetch it:\nRUN cd /var/www/MISP ; git submodule init ; git submodule update\n#   Make git ignore filesystem permission differences for submodules\nRUN cd /var/www/MISP ; git submodule foreach git config core.filemode false\n#   Once done, install CakeResque along with its dependencies if you intend to use the built in background jobs:\nRUN cd /var/www/MISP/app ; sudo -u www-data php composer.phar require kamisama/cake-resque:${cake_resque_TAG} ; php composer.phar config vendor-dir Vendor ; php composer.phar install\n#   Enable CakeResque with php-redis\nRUN sudo phpenmod redis\n#   To use the scheduler worker for scheduled tasks, do the following:\nRUN cp -fa /var/www/MISP/INSTALL/setup/config.php /var/www/MISP/app/Plugin/CakeResque/Config/config.php\n#   If you have multiple MISP instances on the same system, don't forget to have a different Redis per MISP instance for the CakeResque workers\n#   The default Redis port can be updated in Plugin/CakeResque/Config/config.php\n#  ## 5/ Set the permissions\n#   Check if the permissions are set correctly using the following commands:\nRUN chown -R www-data:www-data /var/www/MISP ; chmod -R 750 /var/www/MISP ; chmod -R g+ws /var/www/MISP/app/tmp ; chmod -R g+ws /var/www/MISP/app/files ; chmod -R g+ws /var/www/MISP/app/files/scripts/tmp\n#  ## 6 Create a database and user\n#   At the moment this will be done via misp-robot.\n#  RUN mysql -u misp -p`cat /run/secrets/mysql_password` -h misp-db misp < /var/www/MISP/INSTALL/MYSQL.sql\n#  ## 7 Configure Apache\n#   add HTTP MISP Config\nRUN rm /etc/apache2/sites-available/* ; rm /etc/apache2/sites-enabled/*\nCOPY --chown=www-data:www-data files/misp.conf /etc/apache2/sites-available/misp.conf\nCOPY --chown=www-data:www-data files/misp.ssl.conf /etc/apache2/sites-available/misp.ssl.conf\nCOPY --chown=root:root files/ports.conf /etc/apache2/ports.conf\nRUN chmod 644 /etc/apache2/ports.conf\n#   add HTTPS MISP Config - THIS SHOULD BE DONE IN ROBOT\n#  RUN mkdir /etc/apache2/ssl\n#  RUN openssl req -x509 -newkey rsa:4096 -keyout /etc/apache2/ssl/key.pem -out /etc/apache2/ssl/cert.pem -days 3650 -nodes -subj '/CN=misp-server'\n#  RUN openssl dhparam -out /etc/apache2/ssl/dhparams.pem 2048\n#  RUN chmod -R 644 /etc/apache2/ssl\n#   Configure Apache\nRUN sudo a2dismod status ; sudo a2enmod ssl ; sudo a2enmod rewrite ; sudo a2enmod headers ; sudo a2ensite misp\n#  ## 8/ Log rotation\n#   MISP saves the stdout and stderr of its workers in /var/www/MISP/app/tmp/logs\n#   To rotate these logs install the supplied logrotate script:\nRUN sudo cp /var/www/MISP/INSTALL/misp.logrotate /etc/logrotate.d/misp\n#  ## 9/ MISP configuration\n#   There are 4 sample configuration files in /var/www/MISP/app/Config that need to be copied\nRUN sudo -u www-data cp -a /var/www/MISP/app/Config/bootstrap.default.php /var/www/MISP/app/Config/bootstrap.php\nRUN sudo -u www-data cp -a /var/www/MISP/app/Config/database.default.php /var/www/MISP/app/Config/database.php\nRUN sudo -u www-data cp -a /var/www/MISP/app/Config/core.default.php /var/www/MISP/app/Config/core.php\nRUN sudo -u www-data cp -a /var/www/MISP/app/Config/config.default.php /var/www/MISP/app/Config/config.php\n#  ## 5/ Set the permissions\n#   Check if the permissions are set correctly using the following commands:\nRUN chown -R www-data:www-data /var/www/MISP ; chmod -R 750 /var/www/MISP ; chmod -R g+ws /var/www/MISP/app/tmp ; chmod -R g+ws /var/www/MISP/app/files ; chmod -R g+ws /var/www/MISP/app/files/scripts/tmp\n#         END of MISP Config Part\n#  ########################################\n#  ########################################\n#         Start of DCSO MISP Config Part\nCOPY files/php.ini /etc/php/7.0/apache2/\n#   define the WORKDIR if you use docker exec\nWORKDIR /var/www/MISP\n#   Environment Variable for Proxy\nENV HTTP_PROXY=\"\"\nENV NO_PROXY=\"0.0.0.0\"\n#   Add Healthcheck Config\nHEALTHCHECK --interval=60s --timeout=15s --retries=3 CMD curl -f http://localhost/ || exit 1\n#   CMD\nCOPY files/entrypoint.sh /srv/entrypoint.sh\nRUN chmod +x /srv/entrypoint.sh\nENTRYPOINT [\"/srv/entrypoint.sh\"]\n#   CMD [\"/usr/sbin/apache2ctl\", \"-D\", \"FOREGROUND\"]\n#         End of DCSO MISP Config Part\n#  ########################################\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n","originalDockerfile":"# FROM debian:buster\nFROM ubuntu:16.04\n# LABEL de.dcso.misp-server.version=\"0.0.1-alpha\"\nLABEL vendor=\"DCSO GmbH <www.dcso.de>\"\nLABEL de.dcso.misp-server.release-date=\"2018-01-02\"\nLABEL de.dcso.misp-server.is-production=\"false\"\nLABEL maintainer=\"DCSO MISP <misp@dcso.de>\"\n#  Variables:\nARG MISP_TAG=v2.4.88\nARG python_cybox_TAG=v2.1.0.12\nARG python_stix_TAG=v1.1.1.4\nARG mixbox_TAG=v1.0.2\nARG cake_resque_TAG=4.1.2\n# ########################################\n#        Start of MISP Config Part\n#  Install core components\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN apt-get update -y \\\n && apt-get autoremove -y \\\n && apt-get clean -y\nRUN apt-get install software-properties-common -y\nRUN apt-get install supervisor nano vim curl gcc make python python-pip python3 python3-pip locales zip iputils-ping curl git make openssl vim zip net-tools sudo -y\n#  Install additional dependencies\nRUN apt-get install mariadb-client python-mysqldb python-dev python-pip python3-setuptools python-setuptools libxml2-dev libxslt1-dev zlib1g-dev python-setuptools -y\n#  Install Apache\nRUN apt-get install apache2 apache2-doc apache2-utils -y\n#  ATTENTION the part about a2enmod/a2dismod, a2ensite/a2dissite is moved to step 7.\n#  Install PHP and depedencies\nRUN apt-get install libapache2-mod-php php php-cli php-crypt-gpg php-dev php-json php-mysql php-opcache php-readline php-redis php-xml -y\n#  Set locals\nRUN locale-gen en_US.UTF-8\nENV LANG=\"en_US.UTF-8\"\n#  Update PIP\nRUN pip install pip --upgrade\nRUN pip3 install --upgrade pip\n# #################################\n# ## Install and configure MISP ###\n# #################################\n# ## 3/ MISP code ###\n#  Download MISP using git in the /var/www/ directory.\n#  Attention: we replaced the fixed tag with a variable\nRUN mkdir /var/www/MISP ; chown www-data:www-data /var/www/MISP\nRUN git clone https://github.com/MISP/MISP.git /var/www/MISP\nRUN cd /var/www/MISP ; git checkout tags/${MISP_TAG}\n#  Make git ignore filesystem permission differences\nRUN cd /var/www/MISP ; git config core.filemode false\n#  install Mitre's STIX and its dependencies by running the following commands:\n#  Attention: we replaced the fixed tag with a variable\nRUN apt-get install python-dev python-pip libxml2-dev libxslt1-dev zlib1g-dev python-setuptools\nRUN cd /var/www/MISP/app/files/scripts ; git clone https://github.com/CybOXProject/python-cybox.git\nRUN cd /var/www/MISP/app/files/scripts ; git clone https://github.com/STIXProject/python-stix.git\nRUN cd /var/www/MISP/app/files/scripts/python-cybox ; git checkout ${python_cybox_TAG} ; sudo python setup.py install\nRUN cd /var/www/MISP/app/files/scripts/python-stix ; git checkout ${python_stix_TAG} ; sudo python setup.py install\n#  install mixbox to accomodate the new STIX dependencies:\n#  Attention: we replaced the fixed tag with a variable\nRUN cd /var/www/MISP/app/files/scripts/ ; git clone https://github.com/CybOXProject/mixbox.git\nRUN cd /var/www/MISP/app/files/scripts/mixbox ; git checkout ${mixbox_TAG} ; sudo python setup.py install\n#  install support for STIX 2.0 (Python 3 is required)\nRUN pip3 install stix2\n# ## 4/ CakePHP ###\n#  CakePHP is included as a submodule of MISP, execute the following commands to let git fetch it:\nRUN cd /var/www/MISP ; git submodule init ; git submodule update\n#  Make git ignore filesystem permission differences for submodules\nRUN cd /var/www/MISP ; git submodule foreach git config core.filemode false\n#  Once done, install CakeResque along with its dependencies if you intend to use the built in background jobs:\nRUN cd /var/www/MISP/app ; sudo -u www-data php composer.phar require kamisama/cake-resque:${cake_resque_TAG} ; php composer.phar config vendor-dir Vendor ; php composer.phar install\n#  Enable CakeResque with php-redis\nRUN sudo phpenmod redis\n#  To use the scheduler worker for scheduled tasks, do the following:\nRUN cp -fa /var/www/MISP/INSTALL/setup/config.php /var/www/MISP/app/Plugin/CakeResque/Config/config.php\n#  If you have multiple MISP instances on the same system, don't forget to have a different Redis per MISP instance for the CakeResque workers\n#  The default Redis port can be updated in Plugin/CakeResque/Config/config.php\n# ## 5/ Set the permissions\n#  Check if the permissions are set correctly using the following commands:\nRUN chown -R www-data:www-data /var/www/MISP ; chmod -R 750 /var/www/MISP ; chmod -R g+ws /var/www/MISP/app/tmp ; chmod -R g+ws /var/www/MISP/app/files ; chmod -R g+ws /var/www/MISP/app/files/scripts/tmp\n# ## 6 Create a database and user\n#  At the moment this will be done via misp-robot.\n# RUN mysql -u misp -p`cat /run/secrets/mysql_password` -h misp-db misp < /var/www/MISP/INSTALL/MYSQL.sql\n# ## 7 Configure Apache\n#  add HTTP MISP Config\nRUN rm /etc/apache2/sites-available/* ; rm /etc/apache2/sites-enabled/*\nCOPY --chown=www-data:www-data files/misp.conf /etc/apache2/sites-available/misp.conf\nCOPY --chown=www-data:www-data files/misp.ssl.conf /etc/apache2/sites-available/misp.ssl.conf\nCOPY --chown=root:root files/ports.conf /etc/apache2/ports.conf\nRUN chmod 644 /etc/apache2/ports.conf\n#  add HTTPS MISP Config - THIS SHOULD BE DONE IN ROBOT\n# RUN mkdir /etc/apache2/ssl\n# RUN openssl req -x509 -newkey rsa:4096 -keyout /etc/apache2/ssl/key.pem -out /etc/apache2/ssl/cert.pem -days 3650 -nodes -subj '/CN=misp-server'\n# RUN openssl dhparam -out /etc/apache2/ssl/dhparams.pem 2048\n# RUN chmod -R 644 /etc/apache2/ssl\n#  Configure Apache\nRUN sudo a2dismod status ; sudo a2enmod ssl ; sudo a2enmod rewrite ; sudo a2enmod headers ; sudo a2ensite misp\n# ## 8/ Log rotation\n#  MISP saves the stdout and stderr of its workers in /var/www/MISP/app/tmp/logs\n#  To rotate these logs install the supplied logrotate script:\nRUN sudo cp /var/www/MISP/INSTALL/misp.logrotate /etc/logrotate.d/misp\n# ## 9/ MISP configuration\n#  There are 4 sample configuration files in /var/www/MISP/app/Config that need to be copied\nRUN sudo -u www-data cp -a /var/www/MISP/app/Config/bootstrap.default.php /var/www/MISP/app/Config/bootstrap.php\nRUN sudo -u www-data cp -a /var/www/MISP/app/Config/database.default.php /var/www/MISP/app/Config/database.php\nRUN sudo -u www-data cp -a /var/www/MISP/app/Config/core.default.php /var/www/MISP/app/Config/core.php\nRUN sudo -u www-data cp -a /var/www/MISP/app/Config/config.default.php /var/www/MISP/app/Config/config.php\n# ## 5/ Set the permissions\n#  Check if the permissions are set correctly using the following commands:\nRUN chown -R www-data:www-data /var/www/MISP ; chmod -R 750 /var/www/MISP ; chmod -R g+ws /var/www/MISP/app/tmp ; chmod -R g+ws /var/www/MISP/app/files ; chmod -R g+ws /var/www/MISP/app/files/scripts/tmp\n#        END of MISP Config Part\n# ########################################\n# ########################################\n#        Start of DCSO MISP Config Part\nCOPY files/php.ini /etc/php/7.0/apache2/\n#  define the WORKDIR if you use docker exec\nWORKDIR /var/www/MISP\n#  Environment Variable for Proxy\nENV HTTP_PROXY=\"\"\nENV NO_PROXY=\"0.0.0.0\"\n#  Add Healthcheck Config\nHEALTHCHECK --interval=60s --timeout=15s --retries=3 CMD curl -f http://localhost/ || exit 1\n#  CMD\nCOPY files/entrypoint.sh /srv/entrypoint.sh\nRUN chmod +x /srv/entrypoint.sh\nENTRYPOINT [\"/srv/entrypoint.sh\"]\n#  CMD [\"/usr/sbin/apache2ctl\", \"-D\", \"FOREGROUND\"]\n#        End of DCSO MISP Config Part\n# ########################################\n","injectedSmells":[],"originalDockerfileHash":"9833587c2dbc6c863955710b015d67da","successfullyInjectedSmells":[],"originalDockerfileUglified":"#  FROM debian:buster\nFROM ubuntu:16.04\n#  LABEL de.dcso.misp-server.version=\"0.0.1-alpha\"\nLABEL vendor=\"DCSO GmbH <www.dcso.de>\"\nLABEL de.dcso.misp-server.release-date=\"2018-01-02\"\nLABEL de.dcso.misp-server.is-production=\"false\"\nLABEL maintainer=\"DCSO MISP <misp@dcso.de>\"\n#   Variables:\nARG MISP_TAG=v2.4.88\nARG python_cybox_TAG=v2.1.0.12\nARG python_stix_TAG=v1.1.1.4\nARG mixbox_TAG=v1.0.2\nARG cake_resque_TAG=4.1.2\n#  ########################################\n#         Start of MISP Config Part\n#   Install core components\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN apt-get update -y \\\n && apt-get autoremove -y \\\n && apt-get clean -y\nRUN apt-get install software-properties-common -y\nRUN apt-get install supervisor nano vim curl gcc make python python-pip python3 python3-pip locales zip iputils-ping curl git make openssl vim zip net-tools sudo -y\n#   Install additional dependencies\nRUN apt-get install mariadb-client python-mysqldb python-dev python-pip python3-setuptools python-setuptools libxml2-dev libxslt1-dev zlib1g-dev python-setuptools -y\n#   Install Apache\nRUN apt-get install apache2 apache2-doc apache2-utils -y\n#   ATTENTION the part about a2enmod/a2dismod, a2ensite/a2dissite is moved to step 7.\n#   Install PHP and depedencies\nRUN apt-get install libapache2-mod-php php php-cli php-crypt-gpg php-dev php-json php-mysql php-opcache php-readline php-redis php-xml -y\n#   Set locals\nRUN locale-gen en_US.UTF-8\nENV LANG=\"en_US.UTF-8\"\n#   Update PIP\nRUN pip install pip --upgrade\nRUN pip3 install --upgrade pip\n#  #################################\n#  ## Install and configure MISP ###\n#  #################################\n#  ## 3/ MISP code ###\n#   Download MISP using git in the /var/www/ directory.\n#   Attention: we replaced the fixed tag with a variable\nRUN mkdir /var/www/MISP ; chown www-data:www-data /var/www/MISP\nRUN git clone https://github.com/MISP/MISP.git /var/www/MISP\nRUN cd /var/www/MISP ; git checkout tags/${MISP_TAG}\n#   Make git ignore filesystem permission differences\nRUN cd /var/www/MISP ; git config core.filemode false\n#   install Mitre's STIX and its dependencies by running the following commands:\n#   Attention: we replaced the fixed tag with a variable\nRUN apt-get install python-dev python-pip libxml2-dev libxslt1-dev zlib1g-dev python-setuptools\nRUN cd /var/www/MISP/app/files/scripts ; git clone https://github.com/CybOXProject/python-cybox.git\nRUN cd /var/www/MISP/app/files/scripts ; git clone https://github.com/STIXProject/python-stix.git\nRUN cd /var/www/MISP/app/files/scripts/python-cybox ; git checkout ${python_cybox_TAG} ; sudo python setup.py install\nRUN cd /var/www/MISP/app/files/scripts/python-stix ; git checkout ${python_stix_TAG} ; sudo python setup.py install\n#   install mixbox to accomodate the new STIX dependencies:\n#   Attention: we replaced the fixed tag with a variable\nRUN cd /var/www/MISP/app/files/scripts/ ; git clone https://github.com/CybOXProject/mixbox.git\nRUN cd /var/www/MISP/app/files/scripts/mixbox ; git checkout ${mixbox_TAG} ; sudo python setup.py install\n#   install support for STIX 2.0 (Python 3 is required)\nRUN pip3 install stix2\n#  ## 4/ CakePHP ###\n#   CakePHP is included as a submodule of MISP, execute the following commands to let git fetch it:\nRUN cd /var/www/MISP ; git submodule init ; git submodule update\n#   Make git ignore filesystem permission differences for submodules\nRUN cd /var/www/MISP ; git submodule foreach git config core.filemode false\n#   Once done, install CakeResque along with its dependencies if you intend to use the built in background jobs:\nRUN cd /var/www/MISP/app ; sudo -u www-data php composer.phar require kamisama/cake-resque:${cake_resque_TAG} ; php composer.phar config vendor-dir Vendor ; php composer.phar install\n#   Enable CakeResque with php-redis\nRUN sudo phpenmod redis\n#   To use the scheduler worker for scheduled tasks, do the following:\nRUN cp -fa /var/www/MISP/INSTALL/setup/config.php /var/www/MISP/app/Plugin/CakeResque/Config/config.php\n#   If you have multiple MISP instances on the same system, don't forget to have a different Redis per MISP instance for the CakeResque workers\n#   The default Redis port can be updated in Plugin/CakeResque/Config/config.php\n#  ## 5/ Set the permissions\n#   Check if the permissions are set correctly using the following commands:\nRUN chown -R www-data:www-data /var/www/MISP ; chmod -R 750 /var/www/MISP ; chmod -R g+ws /var/www/MISP/app/tmp ; chmod -R g+ws /var/www/MISP/app/files ; chmod -R g+ws /var/www/MISP/app/files/scripts/tmp\n#  ## 6 Create a database and user\n#   At the moment this will be done via misp-robot.\n#  RUN mysql -u misp -p`cat /run/secrets/mysql_password` -h misp-db misp < /var/www/MISP/INSTALL/MYSQL.sql\n#  ## 7 Configure Apache\n#   add HTTP MISP Config\nRUN rm /etc/apache2/sites-available/* ; rm /etc/apache2/sites-enabled/*\nCOPY --chown=www-data:www-data files/misp.conf /etc/apache2/sites-available/misp.conf\nCOPY --chown=www-data:www-data files/misp.ssl.conf /etc/apache2/sites-available/misp.ssl.conf\nCOPY --chown=root:root files/ports.conf /etc/apache2/ports.conf\nRUN chmod 644 /etc/apache2/ports.conf\n#   add HTTPS MISP Config - THIS SHOULD BE DONE IN ROBOT\n#  RUN mkdir /etc/apache2/ssl\n#  RUN openssl req -x509 -newkey rsa:4096 -keyout /etc/apache2/ssl/key.pem -out /etc/apache2/ssl/cert.pem -days 3650 -nodes -subj '/CN=misp-server'\n#  RUN openssl dhparam -out /etc/apache2/ssl/dhparams.pem 2048\n#  RUN chmod -R 644 /etc/apache2/ssl\n#   Configure Apache\nRUN sudo a2dismod status ; sudo a2enmod ssl ; sudo a2enmod rewrite ; sudo a2enmod headers ; sudo a2ensite misp\n#  ## 8/ Log rotation\n#   MISP saves the stdout and stderr of its workers in /var/www/MISP/app/tmp/logs\n#   To rotate these logs install the supplied logrotate script:\nRUN sudo cp /var/www/MISP/INSTALL/misp.logrotate /etc/logrotate.d/misp\n#  ## 9/ MISP configuration\n#   There are 4 sample configuration files in /var/www/MISP/app/Config that need to be copied\nRUN sudo -u www-data cp -a /var/www/MISP/app/Config/bootstrap.default.php /var/www/MISP/app/Config/bootstrap.php\nRUN sudo -u www-data cp -a /var/www/MISP/app/Config/database.default.php /var/www/MISP/app/Config/database.php\nRUN sudo -u www-data cp -a /var/www/MISP/app/Config/core.default.php /var/www/MISP/app/Config/core.php\nRUN sudo -u www-data cp -a /var/www/MISP/app/Config/config.default.php /var/www/MISP/app/Config/config.php\n#  ## 5/ Set the permissions\n#   Check if the permissions are set correctly using the following commands:\nRUN chown -R www-data:www-data /var/www/MISP ; chmod -R 750 /var/www/MISP ; chmod -R g+ws /var/www/MISP/app/tmp ; chmod -R g+ws /var/www/MISP/app/files ; chmod -R g+ws /var/www/MISP/app/files/scripts/tmp\n#         END of MISP Config Part\n#  ########################################\n#  ########################################\n#         Start of DCSO MISP Config Part\nCOPY files/php.ini /etc/php/7.0/apache2/\n#   define the WORKDIR if you use docker exec\nWORKDIR /var/www/MISP\n#   Environment Variable for Proxy\nENV HTTP_PROXY=\"\"\nENV NO_PROXY=\"0.0.0.0\"\n#   Add Healthcheck Config\nHEALTHCHECK --interval=60s --timeout=15s --retries=3 CMD curl -f http://localhost/ || exit 1\n#   CMD\nCOPY files/entrypoint.sh /srv/entrypoint.sh\nRUN chmod +x /srv/entrypoint.sh\nENTRYPOINT [\"/srv/entrypoint.sh\"]\n#   CMD [\"/usr/sbin/apache2ctl\", \"-D\", \"FOREGROUND\"]\n#         End of DCSO MISP Config Part\n#  ########################################\n","originalDockerfileUglifiedHash":"99d03293d86377df66e494d39e14e0c2","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/b38d3eea5b68ec4c784b633d398f5a3119233bea.dockerfile"}