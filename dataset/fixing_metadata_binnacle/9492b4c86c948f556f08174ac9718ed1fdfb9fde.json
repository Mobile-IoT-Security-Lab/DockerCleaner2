{"seed":278605836,"processedDockerfileHash":"a217d30df9adac3c593a68806fd752f7","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["have-a-user"],"processedDockerfile":"FROM centos:7\nMAINTAINER mail@racktear.com\nRUN groupadd tarantool \\\n && adduser -g tarantool tarantool\nENV TARANTOOL_VERSION=\"2.1.2-108-g0bed174d0\" \\\n    TARANTOOL_DOWNLOAD_URL=\"https://github.com/tarantool/tarantool.git\" \\\n    TARANTOOL_INSTALL_LUADIR=\"/usr/local/share/tarantool\" \\\n    CURL_REPO=\"https://github.com/curl/curl.git\" \\\n    CURL_TAG=\"curl-7_65_1\" \\\n    LUAROCKS_URL=\"https://github.com/tarantool/luarocks/archive/6e6fe62d9409fe2103c0fd091cccb3da0451faf5.tar.gz\" \\\n    LUAROCK_VSHARD_VERSION=\"0.1.9\" \\\n    LUAROCK_CHECKS_VERSION=\"3.0.1\" \\\n    LUAROCK_AVRO_SCHEMA_VERSION=\"3.0.3\" \\\n    LUAROCK_EXPERATIOND_VERSION=\"1.0.1\" \\\n    LUAROCK_QUEUE_VERSION=\"1.0.3\" \\\n    LUAROCK_CONNPOOL_VERSION=\"1.1.1\" \\\n    LUAROCK_HTTP_VERSION=\"1.1.0\" \\\n    LUAROCK_MEMCACHED_VERSION=\"1.0.0\" \\\n    LUAROCK_TARANTOOL_PG_VERSION=\"2.0.2\" \\\n    LUAROCK_TARANTOOL_MYSQL_VERSION=\"2.0.1\" \\\n    LUAROCK_TARANTOOL_GIS_VERSION=\"1.0.0\" \\\n    LUAROCK_TARANTOOL_PROMETHEUS_VERSION=\"1.0.4\" \\\n    LUAROCK_TARANTOOL_GPERFTOOLS_VERSION=\"1.0.1\"\nRUN yum -y install epel-release \\\n && yum -y update \\\n && yum -y clean all\nRUN set -x \\\n && yum -y install libstdc++ readline openssl yaml lz4 binutils ncurses libgomp lua tar zip unzip libunwind ca-certificates \\\n && yum -y install perl gcc-c++ cmake readline-devel openssl-devel libyaml-devel lz4-devel binutils-devel ncurses-devel lua-devel make git libunwind-devel autoconf automake libtool go wget \\\n && : \"---------- libicu ----------\" \\\n && wget http://download.icu-project.org/files/icu4c/64.2/icu4c-64_2-src.tgz \\\n && mkdir -p /usr/src/icu \\\n && tar -xzf icu4c-64_2-src.tgz -C /usr/src/icu --strip-components=1 \\\n && rm icu4c-64_2-src.tgz \\\n && (cd /usr/src/icu/source ;chmod +x runConfigureICU configure install-sh ;./runConfigureICU Linux/gcc ;make ;make install ;echo '/usr/local/lib' > /etc/ld.so.conf.d/local.conf;ldconfig ) \\\n && : \"---------- curl ----------\" \\\n && mkdir -p /usr/src/curl \\\n && git clone \"$CURL_REPO\" /usr/src/curl \\\n && (cd /usr/src/curl ;git checkout \"$CURL_TAG\" ;./buildconf ;./configure --with-ssl --prefix \"/usr/local\" ;make -j ;make install ;ldconfig ) \\\n && : \"---------- gperftools ----------\" \\\n && yum install -y gperftools-libs \\\n && (GOPATH=/usr/src/go go get github.com/google/pprof ;cp /usr/src/go/bin/pprof /usr/local/bin ) \\\n && : \"---------- tarantool ----------\" \\\n && mkdir -p /usr/src/tarantool \\\n && git clone \"$TARANTOOL_DOWNLOAD_URL\" /usr/src/tarantool \\\n && (cd /usr/src/tarantool ;git checkout \"$TARANTOOL_VERSION\" ) \\\n && (cd /usr/src/tarantool ;git submodule update --init --recursive ) \\\n && (cd /usr/src/tarantool ;cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo -DENABLE_BUNDLED_LIBYAML:BOOL=OFF -DENABLE_BACKTRACE:BOOL=ON -DENABLE_DIST:BOOL=ON . ) \\\n && make -C /usr/src/tarantool -j \\\n && make -C /usr/src/tarantool install \\\n && make -C /usr/src/tarantool clean \\\n && : \"---------- small ----------\" \\\n && (cd /usr/src/tarantool/src/lib/small ;cmake -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_INSTALL_LIBDIR=lib -DCMAKE_BUILD_TYPE=RelWithDebInfo . ) \\\n && make -C /usr/src/tarantool/src/lib/small \\\n && make -C /usr/src/tarantool/src/lib/small install \\\n && make -C /usr/src/tarantool/src/lib/small clean \\\n && : \"---------- msgpuck ----------\" \\\n && (cd /usr/src/tarantool/src/lib/msgpuck ;cmake -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_INSTALL_LIBDIR=lib -DCMAKE_BUILD_TYPE=RelWithDebInfo . ) \\\n && make -C /usr/src/tarantool/src/lib/msgpuck \\\n && make -C /usr/src/tarantool/src/lib/msgpuck install \\\n && make -C /usr/src/tarantool/src/lib/msgpuck clean \\\n && : \"---------- luarocks ----------\" \\\n && wget -O luarocks.tar.gz \"$LUAROCKS_URL\" \\\n && mkdir -p /usr/src/luarocks \\\n && tar -xzf luarocks.tar.gz -C /usr/src/luarocks --strip-components=1 \\\n && (cd /usr/src/luarocks ;./configure ;make build ;make install ) \\\n && rm -r /usr/src/luarocks \\\n && rm -rf /usr/src/tarantool \\\n && rm -rf /usr/src/go \\\n && rm -rf /usr/src/icu \\\n && rm -rf /usr/src/curl \\\n && : \"---------- remove build deps ----------\" \\\n && yum -y remove perl gcc-c++ cmake readline-devel openssl-devel libyaml-devel lz4-devel binutils-devel ncurses-devel lua-devel make git libunwind-devel autoconf automake libtool go wget perl kernel-headers golang-src \\\n && rpm -qa | grep devel | xargs yum -y remove \\\n && rm -rf /var/cache/yum\nCOPY luarocks-config.lua /usr/local/etc/luarocks/config-5.1.lua\nRUN set -x \\\n && yum -y install https://download.postgresql.org/pub/repos/yum/9.6/redhat/rhel-7-x86_64/pgdg-redhat96-9.6-3.noarch.rpm \\\n && yum -y install mariadb-libs postgresql96-libs cyrus-sasl libev proj geos unzip openssl-libs \\\n && yum -y install git cmake make gcc-c++ postgresql96-devel lua-devel cyrus-sasl-devel libev-devel wget proj-devel geos-devel openssl-devel \\\n && mkdir -p /rocks \\\n && : \"---------- luarocks ----------\" \\\n && luarocks install lua-term \\\n && luarocks install ldoc \\\n && : \"vshard\" \\\n && luarocks install vshard $LUAROCK_VSHARD_VERSION \\\n && : \"checks\" \\\n && luarocks install checks $LUAROCK_CHECKS_VERSION \\\n && : \"avro\" \\\n && luarocks install avro-schema $LUAROCK_AVRO_SCHEMA_VERSION \\\n && : \"expirationd\" \\\n && luarocks install expirationd $LUAROCK_EXPERATIOND_VERSION \\\n && : \"queue\" \\\n && luarocks install queue $LUAROCK_QUEUE_VERSION \\\n && : \"connpool\" \\\n && luarocks install connpool $LUAROCK_CONNPOOL_VERSION \\\n && : \"http\" \\\n && luarocks install http $LUAROCK_HTTP_VERSION \\\n && : \"pg\" \\\n && luarocks install pg $LUAROCK_TARANTOOL_PG_VERSION \\\n && : \"mysql\" \\\n && luarocks install mysql $LUAROCK_TARANTOOL_MYSQL_VERSION \\\n && : \"memcached\" \\\n && luarocks install memcached $LUAROCK_MEMCACHED_VERSION \\\n && : \"prometheus\" \\\n && luarocks install prometheus $LUAROCK_TARANTOOL_PROMETHEUS_VERSION \\\n && : \"gis\" \\\n && luarocks install gis $LUAROCK_TARANTOOL_GIS_VERSION \\\n && : \"gperftools\" \\\n && luarocks install gperftools $LUAROCK_TARANTOOL_GPERFTOOLS_VERSION \\\n && : \"---------- remove build deps ----------\" \\\n && rm -rf /rocks \\\n && yum -y remove git cmake make gcc-c++ postgresql96-devel lua-devel cyrus-sasl-devel libev-devel wget proj-devel geos-devel openssl-devel perl kernel-headers golang-src \\\n && rpm -qa | grep devel | xargs yum -y remove \\\n && rm -rf /var/cache/yum\nRUN set -x \\\n && : \"---------- gosu ----------\" \\\n && gpg --keyserver pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 \\\n && curl -o /usr/local/bin/gosu -SL \"https://github.com/tianon/gosu/releases/download/1.2/gosu-amd64\" \\\n && curl -o /usr/local/bin/gosu.asc -SL \"https://github.com/tianon/gosu/releases/download/1.2/gosu-amd64.asc\" \\\n && gpg --verify /usr/local/bin/gosu.asc \\\n && rm /usr/local/bin/gosu.asc \\\n && rm -r /root/.gnupg/ \\\n && chmod +x /usr/local/bin/gosu\nRUN mkdir -p /var/lib/tarantool \\\n && chown tarantool:tarantool /var/lib/tarantool \\\n && mkdir -p /opt/tarantool \\\n && chown tarantool:tarantool /opt/tarantool \\\n && mkdir -p /var/run/tarantool \\\n && chown tarantool:tarantool /var/run/tarantool \\\n && mkdir /etc/tarantool \\\n && chown tarantool:tarantool /etc/tarantool\nVOLUME /var/lib/tarantool\nWORKDIR /opt/tarantool\nCOPY tarantool-entrypoint.lua /usr/local/bin/\nCOPY tarantool_set_config.lua /usr/local/bin/\nCOPY docker-entrypoint.sh /usr/local/bin/\nCOPY console /usr/local/bin/\nCOPY tarantool_is_up /usr/local/bin/\nCOPY tarantool.default /usr/local/etc/default/tarantool\nRUN ln -s usr/local/bin/docker-entrypoint.sh /entrypoint.sh\nENTRYPOINT [\"docker-entrypoint.sh\"]\nHEALTHCHECK CMD tarantool_is_up\nEXPOSE 3301/tcp\nCMD [\"tarantool\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n","originalDockerfile":"FROM centos:7\nMAINTAINER mail@racktear.com\nRUN groupadd tarantool \\\n && adduser -g tarantool tarantool\nENV TARANTOOL_VERSION=\"2.1.2-108-g0bed174d0\" \\\n    TARANTOOL_DOWNLOAD_URL=\"https://github.com/tarantool/tarantool.git\" \\\n    TARANTOOL_INSTALL_LUADIR=\"/usr/local/share/tarantool\" \\\n    CURL_REPO=\"https://github.com/curl/curl.git\" \\\n    CURL_TAG=\"curl-7_65_1\" \\\n    LUAROCKS_URL=\"https://github.com/tarantool/luarocks/archive/6e6fe62d9409fe2103c0fd091cccb3da0451faf5.tar.gz\" \\\n    LUAROCK_VSHARD_VERSION=\"0.1.9\" \\\n    LUAROCK_CHECKS_VERSION=\"3.0.1\" \\\n    LUAROCK_AVRO_SCHEMA_VERSION=\"3.0.3\" \\\n    LUAROCK_EXPERATIOND_VERSION=\"1.0.1\" \\\n    LUAROCK_QUEUE_VERSION=\"1.0.3\" \\\n    LUAROCK_CONNPOOL_VERSION=\"1.1.1\" \\\n    LUAROCK_HTTP_VERSION=\"1.1.0\" \\\n    LUAROCK_MEMCACHED_VERSION=\"1.0.0\" \\\n    LUAROCK_TARANTOOL_PG_VERSION=\"2.0.2\" \\\n    LUAROCK_TARANTOOL_MYSQL_VERSION=\"2.0.1\" \\\n    LUAROCK_TARANTOOL_GIS_VERSION=\"1.0.0\" \\\n    LUAROCK_TARANTOOL_PROMETHEUS_VERSION=\"1.0.4\" \\\n    LUAROCK_TARANTOOL_GPERFTOOLS_VERSION=\"1.0.1\"\nRUN yum -y install epel-release \\\n && yum -y update \\\n && yum -y clean all\nRUN set -x \\\n && yum -y install libstdc++ readline openssl yaml lz4 binutils ncurses libgomp lua tar zip unzip libunwind ca-certificates \\\n && yum -y install perl gcc-c++ cmake readline-devel openssl-devel libyaml-devel lz4-devel binutils-devel ncurses-devel lua-devel make git libunwind-devel autoconf automake libtool go wget \\\n && : \"---------- libicu ----------\" \\\n && wget http://download.icu-project.org/files/icu4c/64.2/icu4c-64_2-src.tgz \\\n && mkdir -p /usr/src/icu \\\n && tar -xzf icu4c-64_2-src.tgz -C /usr/src/icu --strip-components=1 \\\n && rm icu4c-64_2-src.tgz \\\n && (cd /usr/src/icu/source ;chmod +x runConfigureICU configure install-sh ;./runConfigureICU Linux/gcc ;make ;make install ;echo '/usr/local/lib' > /etc/ld.so.conf.d/local.conf;ldconfig ) \\\n && : \"---------- curl ----------\" \\\n && mkdir -p /usr/src/curl \\\n && git clone \"$CURL_REPO\" /usr/src/curl \\\n && (cd /usr/src/curl ;git checkout \"$CURL_TAG\" ;./buildconf ;./configure --with-ssl --prefix \"/usr/local\" ;make -j ;make install ;ldconfig ) \\\n && : \"---------- gperftools ----------\" \\\n && yum install -y gperftools-libs \\\n && (GOPATH=/usr/src/go go get github.com/google/pprof ;cp /usr/src/go/bin/pprof /usr/local/bin ) \\\n && : \"---------- tarantool ----------\" \\\n && mkdir -p /usr/src/tarantool \\\n && git clone \"$TARANTOOL_DOWNLOAD_URL\" /usr/src/tarantool \\\n && (cd /usr/src/tarantool ;git checkout \"$TARANTOOL_VERSION\" ) \\\n && (cd /usr/src/tarantool ;git submodule update --init --recursive ) \\\n && (cd /usr/src/tarantool ;cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo -DENABLE_BUNDLED_LIBYAML:BOOL=OFF -DENABLE_BACKTRACE:BOOL=ON -DENABLE_DIST:BOOL=ON . ) \\\n && make -C /usr/src/tarantool -j \\\n && make -C /usr/src/tarantool install \\\n && make -C /usr/src/tarantool clean \\\n && : \"---------- small ----------\" \\\n && (cd /usr/src/tarantool/src/lib/small ;cmake -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_INSTALL_LIBDIR=lib -DCMAKE_BUILD_TYPE=RelWithDebInfo . ) \\\n && make -C /usr/src/tarantool/src/lib/small \\\n && make -C /usr/src/tarantool/src/lib/small install \\\n && make -C /usr/src/tarantool/src/lib/small clean \\\n && : \"---------- msgpuck ----------\" \\\n && (cd /usr/src/tarantool/src/lib/msgpuck ;cmake -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_INSTALL_LIBDIR=lib -DCMAKE_BUILD_TYPE=RelWithDebInfo . ) \\\n && make -C /usr/src/tarantool/src/lib/msgpuck \\\n && make -C /usr/src/tarantool/src/lib/msgpuck install \\\n && make -C /usr/src/tarantool/src/lib/msgpuck clean \\\n && : \"---------- luarocks ----------\" \\\n && wget -O luarocks.tar.gz \"$LUAROCKS_URL\" \\\n && mkdir -p /usr/src/luarocks \\\n && tar -xzf luarocks.tar.gz -C /usr/src/luarocks --strip-components=1 \\\n && (cd /usr/src/luarocks ;./configure ;make build ;make install ) \\\n && rm -r /usr/src/luarocks \\\n && rm -rf /usr/src/tarantool \\\n && rm -rf /usr/src/go \\\n && rm -rf /usr/src/icu \\\n && rm -rf /usr/src/curl \\\n && : \"---------- remove build deps ----------\" \\\n && yum -y remove perl gcc-c++ cmake readline-devel openssl-devel libyaml-devel lz4-devel binutils-devel ncurses-devel lua-devel make git libunwind-devel autoconf automake libtool go wget perl kernel-headers golang-src \\\n && rpm -qa | grep devel | xargs yum -y remove \\\n && rm -rf /var/cache/yum\nCOPY luarocks-config.lua /usr/local/etc/luarocks/config-5.1.lua\nRUN set -x \\\n && yum -y install https://download.postgresql.org/pub/repos/yum/9.6/redhat/rhel-7-x86_64/pgdg-redhat96-9.6-3.noarch.rpm \\\n && yum -y install mariadb-libs postgresql96-libs cyrus-sasl libev proj geos unzip openssl-libs \\\n && yum -y install git cmake make gcc-c++ postgresql96-devel lua-devel cyrus-sasl-devel libev-devel wget proj-devel geos-devel openssl-devel \\\n && mkdir -p /rocks \\\n && : \"---------- luarocks ----------\" \\\n && luarocks install lua-term \\\n && luarocks install ldoc \\\n && : \"vshard\" \\\n && luarocks install vshard $LUAROCK_VSHARD_VERSION \\\n && : \"checks\" \\\n && luarocks install checks $LUAROCK_CHECKS_VERSION \\\n && : \"avro\" \\\n && luarocks install avro-schema $LUAROCK_AVRO_SCHEMA_VERSION \\\n && : \"expirationd\" \\\n && luarocks install expirationd $LUAROCK_EXPERATIOND_VERSION \\\n && : \"queue\" \\\n && luarocks install queue $LUAROCK_QUEUE_VERSION \\\n && : \"connpool\" \\\n && luarocks install connpool $LUAROCK_CONNPOOL_VERSION \\\n && : \"http\" \\\n && luarocks install http $LUAROCK_HTTP_VERSION \\\n && : \"pg\" \\\n && luarocks install pg $LUAROCK_TARANTOOL_PG_VERSION \\\n && : \"mysql\" \\\n && luarocks install mysql $LUAROCK_TARANTOOL_MYSQL_VERSION \\\n && : \"memcached\" \\\n && luarocks install memcached $LUAROCK_MEMCACHED_VERSION \\\n && : \"prometheus\" \\\n && luarocks install prometheus $LUAROCK_TARANTOOL_PROMETHEUS_VERSION \\\n && : \"gis\" \\\n && luarocks install gis $LUAROCK_TARANTOOL_GIS_VERSION \\\n && : \"gperftools\" \\\n && luarocks install gperftools $LUAROCK_TARANTOOL_GPERFTOOLS_VERSION \\\n && : \"---------- remove build deps ----------\" \\\n && rm -rf /rocks \\\n && yum -y remove git cmake make gcc-c++ postgresql96-devel lua-devel cyrus-sasl-devel libev-devel wget proj-devel geos-devel openssl-devel perl kernel-headers golang-src \\\n && rpm -qa | grep devel | xargs yum -y remove \\\n && rm -rf /var/cache/yum\nRUN set -x \\\n && : \"---------- gosu ----------\" \\\n && gpg --keyserver pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 \\\n && curl -o /usr/local/bin/gosu -SL \"https://github.com/tianon/gosu/releases/download/1.2/gosu-amd64\" \\\n && curl -o /usr/local/bin/gosu.asc -SL \"https://github.com/tianon/gosu/releases/download/1.2/gosu-amd64.asc\" \\\n && gpg --verify /usr/local/bin/gosu.asc \\\n && rm /usr/local/bin/gosu.asc \\\n && rm -r /root/.gnupg/ \\\n && chmod +x /usr/local/bin/gosu\nRUN mkdir -p /var/lib/tarantool \\\n && chown tarantool:tarantool /var/lib/tarantool \\\n && mkdir -p /opt/tarantool \\\n && chown tarantool:tarantool /opt/tarantool \\\n && mkdir -p /var/run/tarantool \\\n && chown tarantool:tarantool /var/run/tarantool \\\n && mkdir /etc/tarantool \\\n && chown tarantool:tarantool /etc/tarantool\nVOLUME /var/lib/tarantool\nWORKDIR /opt/tarantool\nCOPY tarantool-entrypoint.lua /usr/local/bin/\nCOPY tarantool_set_config.lua /usr/local/bin/\nCOPY docker-entrypoint.sh /usr/local/bin/\nCOPY console /usr/local/bin/\nCOPY tarantool_is_up /usr/local/bin/\nCOPY tarantool.default /usr/local/etc/default/tarantool\nRUN ln -s usr/local/bin/docker-entrypoint.sh /entrypoint.sh\nENTRYPOINT [\"docker-entrypoint.sh\"]\nHEALTHCHECK CMD tarantool_is_up\nEXPOSE 3301/tcp\nCMD [\"tarantool\"]\n","injectedSmells":[],"originalDockerfileHash":"922104f72a594fbd01776e9a109b300c","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM centos:7\nMAINTAINER mail@racktear.com\nRUN groupadd tarantool \\\n && adduser -g tarantool tarantool\nENV TARANTOOL_VERSION=\"2.1.2-108-g0bed174d0\" \\\n    TARANTOOL_DOWNLOAD_URL=\"https://github.com/tarantool/tarantool.git\" \\\n    TARANTOOL_INSTALL_LUADIR=\"/usr/local/share/tarantool\" \\\n    CURL_REPO=\"https://github.com/curl/curl.git\" \\\n    CURL_TAG=\"curl-7_65_1\" \\\n    LUAROCKS_URL=\"https://github.com/tarantool/luarocks/archive/6e6fe62d9409fe2103c0fd091cccb3da0451faf5.tar.gz\" \\\n    LUAROCK_VSHARD_VERSION=\"0.1.9\" \\\n    LUAROCK_CHECKS_VERSION=\"3.0.1\" \\\n    LUAROCK_AVRO_SCHEMA_VERSION=\"3.0.3\" \\\n    LUAROCK_EXPERATIOND_VERSION=\"1.0.1\" \\\n    LUAROCK_QUEUE_VERSION=\"1.0.3\" \\\n    LUAROCK_CONNPOOL_VERSION=\"1.1.1\" \\\n    LUAROCK_HTTP_VERSION=\"1.1.0\" \\\n    LUAROCK_MEMCACHED_VERSION=\"1.0.0\" \\\n    LUAROCK_TARANTOOL_PG_VERSION=\"2.0.2\" \\\n    LUAROCK_TARANTOOL_MYSQL_VERSION=\"2.0.1\" \\\n    LUAROCK_TARANTOOL_GIS_VERSION=\"1.0.0\" \\\n    LUAROCK_TARANTOOL_PROMETHEUS_VERSION=\"1.0.4\" \\\n    LUAROCK_TARANTOOL_GPERFTOOLS_VERSION=\"1.0.1\"\nRUN yum -y install epel-release \\\n && yum -y update \\\n && yum -y clean all\nRUN set -x \\\n && yum -y install libstdc++ readline openssl yaml lz4 binutils ncurses libgomp lua tar zip unzip libunwind ca-certificates \\\n && yum -y install perl gcc-c++ cmake readline-devel openssl-devel libyaml-devel lz4-devel binutils-devel ncurses-devel lua-devel make git libunwind-devel autoconf automake libtool go wget \\\n && : \"---------- libicu ----------\" \\\n && wget http://download.icu-project.org/files/icu4c/64.2/icu4c-64_2-src.tgz \\\n && mkdir -p /usr/src/icu \\\n && tar -xzf icu4c-64_2-src.tgz -C /usr/src/icu --strip-components=1 \\\n && rm icu4c-64_2-src.tgz \\\n && (cd /usr/src/icu/source ;chmod +x runConfigureICU configure install-sh ;./runConfigureICU Linux/gcc ;make ;make install ;echo '/usr/local/lib' > /etc/ld.so.conf.d/local.conf;ldconfig ) \\\n && : \"---------- curl ----------\" \\\n && mkdir -p /usr/src/curl \\\n && git clone \"$CURL_REPO\" /usr/src/curl \\\n && (cd /usr/src/curl ;git checkout \"$CURL_TAG\" ;./buildconf ;./configure --with-ssl --prefix \"/usr/local\" ;make -j ;make install ;ldconfig ) \\\n && : \"---------- gperftools ----------\" \\\n && yum install -y gperftools-libs \\\n && (GOPATH=/usr/src/go go get github.com/google/pprof ;cp /usr/src/go/bin/pprof /usr/local/bin ) \\\n && : \"---------- tarantool ----------\" \\\n && mkdir -p /usr/src/tarantool \\\n && git clone \"$TARANTOOL_DOWNLOAD_URL\" /usr/src/tarantool \\\n && (cd /usr/src/tarantool ;git checkout \"$TARANTOOL_VERSION\" ) \\\n && (cd /usr/src/tarantool ;git submodule update --init --recursive ) \\\n && (cd /usr/src/tarantool ;cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo -DENABLE_BUNDLED_LIBYAML:BOOL=OFF -DENABLE_BACKTRACE:BOOL=ON -DENABLE_DIST:BOOL=ON . ) \\\n && make -C /usr/src/tarantool -j \\\n && make -C /usr/src/tarantool install \\\n && make -C /usr/src/tarantool clean \\\n && : \"---------- small ----------\" \\\n && (cd /usr/src/tarantool/src/lib/small ;cmake -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_INSTALL_LIBDIR=lib -DCMAKE_BUILD_TYPE=RelWithDebInfo . ) \\\n && make -C /usr/src/tarantool/src/lib/small \\\n && make -C /usr/src/tarantool/src/lib/small install \\\n && make -C /usr/src/tarantool/src/lib/small clean \\\n && : \"---------- msgpuck ----------\" \\\n && (cd /usr/src/tarantool/src/lib/msgpuck ;cmake -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_INSTALL_LIBDIR=lib -DCMAKE_BUILD_TYPE=RelWithDebInfo . ) \\\n && make -C /usr/src/tarantool/src/lib/msgpuck \\\n && make -C /usr/src/tarantool/src/lib/msgpuck install \\\n && make -C /usr/src/tarantool/src/lib/msgpuck clean \\\n && : \"---------- luarocks ----------\" \\\n && wget -O luarocks.tar.gz \"$LUAROCKS_URL\" \\\n && mkdir -p /usr/src/luarocks \\\n && tar -xzf luarocks.tar.gz -C /usr/src/luarocks --strip-components=1 \\\n && (cd /usr/src/luarocks ;./configure ;make build ;make install ) \\\n && rm -r /usr/src/luarocks \\\n && rm -rf /usr/src/tarantool \\\n && rm -rf /usr/src/go \\\n && rm -rf /usr/src/icu \\\n && rm -rf /usr/src/curl \\\n && : \"---------- remove build deps ----------\" \\\n && yum -y remove perl gcc-c++ cmake readline-devel openssl-devel libyaml-devel lz4-devel binutils-devel ncurses-devel lua-devel make git libunwind-devel autoconf automake libtool go wget perl kernel-headers golang-src \\\n && rpm -qa | grep devel | xargs yum -y remove \\\n && rm -rf /var/cache/yum\nCOPY luarocks-config.lua /usr/local/etc/luarocks/config-5.1.lua\nRUN set -x \\\n && yum -y install https://download.postgresql.org/pub/repos/yum/9.6/redhat/rhel-7-x86_64/pgdg-redhat96-9.6-3.noarch.rpm \\\n && yum -y install mariadb-libs postgresql96-libs cyrus-sasl libev proj geos unzip openssl-libs \\\n && yum -y install git cmake make gcc-c++ postgresql96-devel lua-devel cyrus-sasl-devel libev-devel wget proj-devel geos-devel openssl-devel \\\n && mkdir -p /rocks \\\n && : \"---------- luarocks ----------\" \\\n && luarocks install lua-term \\\n && luarocks install ldoc \\\n && : \"vshard\" \\\n && luarocks install vshard $LUAROCK_VSHARD_VERSION \\\n && : \"checks\" \\\n && luarocks install checks $LUAROCK_CHECKS_VERSION \\\n && : \"avro\" \\\n && luarocks install avro-schema $LUAROCK_AVRO_SCHEMA_VERSION \\\n && : \"expirationd\" \\\n && luarocks install expirationd $LUAROCK_EXPERATIOND_VERSION \\\n && : \"queue\" \\\n && luarocks install queue $LUAROCK_QUEUE_VERSION \\\n && : \"connpool\" \\\n && luarocks install connpool $LUAROCK_CONNPOOL_VERSION \\\n && : \"http\" \\\n && luarocks install http $LUAROCK_HTTP_VERSION \\\n && : \"pg\" \\\n && luarocks install pg $LUAROCK_TARANTOOL_PG_VERSION \\\n && : \"mysql\" \\\n && luarocks install mysql $LUAROCK_TARANTOOL_MYSQL_VERSION \\\n && : \"memcached\" \\\n && luarocks install memcached $LUAROCK_MEMCACHED_VERSION \\\n && : \"prometheus\" \\\n && luarocks install prometheus $LUAROCK_TARANTOOL_PROMETHEUS_VERSION \\\n && : \"gis\" \\\n && luarocks install gis $LUAROCK_TARANTOOL_GIS_VERSION \\\n && : \"gperftools\" \\\n && luarocks install gperftools $LUAROCK_TARANTOOL_GPERFTOOLS_VERSION \\\n && : \"---------- remove build deps ----------\" \\\n && rm -rf /rocks \\\n && yum -y remove git cmake make gcc-c++ postgresql96-devel lua-devel cyrus-sasl-devel libev-devel wget proj-devel geos-devel openssl-devel perl kernel-headers golang-src \\\n && rpm -qa | grep devel | xargs yum -y remove \\\n && rm -rf /var/cache/yum\nRUN set -x \\\n && : \"---------- gosu ----------\" \\\n && gpg --keyserver pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 \\\n && curl -o /usr/local/bin/gosu -SL \"https://github.com/tianon/gosu/releases/download/1.2/gosu-amd64\" \\\n && curl -o /usr/local/bin/gosu.asc -SL \"https://github.com/tianon/gosu/releases/download/1.2/gosu-amd64.asc\" \\\n && gpg --verify /usr/local/bin/gosu.asc \\\n && rm /usr/local/bin/gosu.asc \\\n && rm -r /root/.gnupg/ \\\n && chmod +x /usr/local/bin/gosu\nRUN mkdir -p /var/lib/tarantool \\\n && chown tarantool:tarantool /var/lib/tarantool \\\n && mkdir -p /opt/tarantool \\\n && chown tarantool:tarantool /opt/tarantool \\\n && mkdir -p /var/run/tarantool \\\n && chown tarantool:tarantool /var/run/tarantool \\\n && mkdir /etc/tarantool \\\n && chown tarantool:tarantool /etc/tarantool\nVOLUME /var/lib/tarantool\nWORKDIR /opt/tarantool\nCOPY tarantool-entrypoint.lua /usr/local/bin/\nCOPY tarantool_set_config.lua /usr/local/bin/\nCOPY docker-entrypoint.sh /usr/local/bin/\nCOPY console /usr/local/bin/\nCOPY tarantool_is_up /usr/local/bin/\nCOPY tarantool.default /usr/local/etc/default/tarantool\nRUN ln -s usr/local/bin/docker-entrypoint.sh /entrypoint.sh\nENTRYPOINT [\"docker-entrypoint.sh\"]\nHEALTHCHECK CMD tarantool_is_up\nEXPOSE 3301/tcp\nCMD [\"tarantool\"]\n","originalDockerfileUglifiedHash":"922104f72a594fbd01776e9a109b300c","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/9492b4c86c948f556f08174ac9718ed1fdfb9fde.dockerfile"}