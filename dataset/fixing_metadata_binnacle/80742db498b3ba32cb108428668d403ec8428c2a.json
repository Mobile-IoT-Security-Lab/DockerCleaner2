{"seed":626451091,"processedDockerfileHash":"19d2980ad04cdd4a7c37211e7c642646","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM ubuntu:bionic\nARG NB_USER=\"jovyan\"\nENV NB_USER=\"${NB_USER}\"\nARG NB_UID=\"1001\"\nARG NB_GID=\"100\"\nARG RPASSWORD=${RPASSWORD:-\"rstudio\"}\nARG DOCKERHUB_VERSION_UPDATE\nENV DOCKERHUB_VERSION=\"${DOCKERHUB_VERSION_UPDATE}\"\nLABEL Vincent=\"Nijs \\\"radiant@rady.ucsd.edu\\\"\"\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN apt-get update \\\n && apt-get -y upgrade \\\n && apt-get install --no-install-recommends bash-completion=1:2.8-1ubuntu1 ca-certificates=20211016ubuntu0.18.04.1 file=1:5.32-2ubuntu0.4 fonts-texgyre=20160520-1 g++=4:7.4.0-1ubuntu2.3 gfortran=4:7.4.0-1ubuntu2.3 gsfonts=1:8.11+urwcyr1.0.7~pre44-4.4 libblas-dev=3.7.1-4ubuntu1 libbz2-1.0=1.0.6-8.1ubuntu0.2 libcurl3=7.58.0-2ubuntu2 libopenblas-dev=0.2.20+ds-4 libpangocairo-1.0-0=1.40.14-1ubuntu0.1 libpcre3=2:8.39-9ubuntu0.1 libpng16-16=1.6.34-1ubuntu0.18.04.2 libreadline7=7.0-3 libtiff5=4.0.9-5ubuntu0.10 liblzma5=5.2.2-1.3ubuntu0.1 locales=2.27-3ubuntu1.6 make=4.1-9.1ubuntu1 unzip=6.0-21ubuntu1.2 zip=3.0-11build1 zlib1g=1:1.2.11.dfsg-0ubuntu2.2 wget=1.19.4-1ubuntu2.2 software-properties-common=0.96.24.32.20 -y \\\n && add-apt-repository --enable-source --yes \"ppa:marutter/rrutter3.5\" \\\n && add-apt-repository --enable-source --yes \"ppa:marutter/c2d4u3.5\" \\\n && add-apt-repository --yes \"ppa:jonathonf/vim\" \\\n && apt-get update\nRUN apt-get install --no-install-recommends apt-transport-https=1.6.14 gdebi-core=0.9.5.7+nmu2 libapparmor1=2.12-4ubuntu5.1 libcurl4-openssl-dev=7.58.0-2ubuntu3.24 libopenmpi-dev=2.1.1-8 libpq-dev=10.23-0ubuntu0.18.04.1 libssh2-1-dev=1.8.0-1 libssl-dev=1.1.1-1ubuntu2.1~18.04.21 libxml2=2.9.4+dfsg1-6.1ubuntu1.8 libxml2-dev=2.9.4+dfsg1-6.1ubuntu1.8 libicu-dev=60.2-3ubuntu3.2 libgdal-dev=2.2.3+dfsg-2 libproj-dev=4.9.3-2 libgsl-dev=2.4+dfsg-6 cmake=3.10.2-1ubuntu2.18.04.2 cargo=0.66.0+ds0ubuntu0.libgit2-0ubuntu0.18.04 r-base=3.4.4-1ubuntu1 r-base-dev=3.4.4-1ubuntu1 r-cran-pbdzmq=0.3.2+dfsg-1 r-cran-catools=1.17.1-2 r-cran-bitops=1.0-6-3 -y\n#   setting up odbc for connections\nRUN apt-get install --no-install-recommends unixodbc=2.3.4-1.1ubuntu3 unixodbc-dev=2.3.4-1.1ubuntu3 odbc-postgresql=1:10.01.0000-1 libsqliteodbc=0.9995-1 -y\n#   Utilities\nRUN apt-get install --no-install-recommends vim=2:8.0.1453-1ubuntu1.11 net-tools=1.60+git20161116.90da8a0-1ubuntu1 inetutils-ping=2:1.9.4-3ubuntu0.1 curl=7.58.0-2ubuntu3.24 git=1:2.17.1-1ubuntu0.17 nmap=7.60-1ubuntu5 socat=1.7.3.2-2ubuntu2 sudo=1.8.21p2-3ubuntu1.5 libcairo2-dev=1.15.10-2ubuntu0.1 libxt-dev=1:1.1.5-1 xclip=0.12+svn84-4build1 xsel=1.2.0-4 bzip2=1.0.6-8.1ubuntu0.2 python3-pip=9.0.1-2.3~ubuntu1.18.04.8 python3-setuptools=39.0.1-2ubuntu0.1 supervisor=3.3.1-1.1 libc6=2.27-3ubuntu1.6 libzmq5=4.2.5-1ubuntu0.2 libmagick++-dev=8:6.9.7.4+dfsg-16ubuntu6.15 ed=1.10-2.1 rsync=3.1.2-2.1ubuntu1.6 vifm=0.9.1-1 -y\n#   TeX for the rmarkdown package in RStudio, and pandoc is also useful\nRUN apt-get install --no-install-recommends texlive=2017.20180305-1 texlive-base=2017.20180305-1 texlive-latex-extra=2017.20180305-2 texlive-pstricks=2017.20180305-2 texlive-xetex=2017.20180305-1 -y \\\n && apt-get -y autoremove \\\n && apt-get clean \\\n && apt-get update\n#   Configure default locale, see https://github.com/rocker-org/rocker/issues/19\nRUN echo \"en_US.UTF-8 UTF-8\" >> /etc/locale.gen \\\n && locale-gen en_US.utf8 \\\n && /usr/sbin/update-locale LANG=en_US.UTF-8\nENV LC_ALL=\"en_US.UTF-8\"\nENV LANG=\"en_US.UTF-8\"\n#   Official R-Studio 1.2 release\nENV RSTUDIO_VERSION=\"1.2.1541\"\nRUN wget https://s3.amazonaws.com/rstudio-ide-build/server/bionic/amd64/rstudio-server-${RSTUDIO_VERSION}-amd64.deb \\\n && gdebi -n rstudio-server-${RSTUDIO_VERSION}-amd64.deb \\\n && rm rstudio-server-*-amd64.deb\n#   link to Rstudio's pandoc\nRUN ln -s /usr/lib/rstudio-server/bin/pandoc/pandoc /usr/local/bin/pandoc\nRUN useradd -m -s /bin/bash -N -u $NB_UID $NB_USER \\\n && echo \"${NB_USER}:${RPASSWORD}\" | chpasswd \\\n && addgroup ${NB_USER} staff \\\n && adduser ${NB_USER} sudo \\\n && echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers\n#   Shiny\nENV SHINY_VERSION=\"1.5.9.923\"\nRUN wget https://download3.rstudio.org/ubuntu-14.04/x86_64/shiny-server-${SHINY_VERSION}-amd64.deb \\\n && gdebi -n shiny-server-${SHINY_VERSION}-amd64.deb \\\n && rm shiny-server-*-amd64.deb\nWORKDIR /home/${NB_USER}\nCOPY .Rprofile /home/${NB_USER}/.Rprofile\nRUN ln -sf /home/${NB_USER}/.Rprofile /home/shiny/.Rprofile \\\n && mkdir -p /var/log/shiny-server \\\n && mkdir -p /srv/shiny-server/apps \\\n && chown shiny:shiny /var/log/shiny-server \\\n && chmod -R ug+s /var/log/shiny-server \\\n && chown -R shiny:shiny /srv/shiny-server \\\n && chmod -R ug+s /srv/shiny-server \\\n && chown shiny:shiny /home/shiny/.Rprofile \\\n && chown ${NB_USER} /home/${NB_USER}/.Rprofile \\\n && adduser ${NB_USER} shiny \\\n && mkdir -p /var/log/supervisor \\\n && chown ${NB_USER} /var/log/supervisor\n#   set path to user directory to install packages\nRUN sed -i -e 's/~\\/R\\/x86_64/~\\/.rsm-msba\\/R\\/x86_64/' /etc/R/Renviron\n#   installing some basic r-packages\nRUN R -e 'install.packages(c(\"Rcpp\", \"R6\", \"digest\", \"shiny\", \"rmarkdown\", \"DBI\", \"RPostgreSQL\", \"odbc\", \"remotes\", \"rprojroot\"))'\n#   install renv for Docker creation\nRUN R -e 'remotes::install_github(\"rstudio/renv\")'\nCOPY shiny-server.conf /etc/shiny-server/shiny-server.conf\nCOPY supervisord.conf /etc/supervisor/conf.d/supervisord.conf\nCOPY userconf.sh /usr/local/bin/userconf.sh\nRUN chmod +x /usr/local/bin/userconf.sh\n#   copy dbase connections\nCOPY connections/ /etc/${NB_USER}/connections\nEXPOSE 8080/tcp 8787/tcp\nCMD [\"/usr/bin/supervisord\", \"-c\", \"/etc/supervisor/conf.d/supervisord.conf\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:bionic\nARG NB_USER=\"jovyan\"\nENV NB_USER=\"${NB_USER}\"\nARG NB_UID=\"1001\"\nARG NB_GID=\"100\"\nARG RPASSWORD=${RPASSWORD:-\"rstudio\"}\nARG DOCKERHUB_VERSION_UPDATE\nENV DOCKERHUB_VERSION=\"${DOCKERHUB_VERSION_UPDATE}\"\nLABEL Vincent=\"Nijs \\\"radiant@rady.ucsd.edu\\\"\"\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN apt-get update \\\n && apt-get -y upgrade \\\n && apt-get install --no-install-recommends bash-completion ca-certificates file fonts-texgyre g++ gfortran gsfonts libblas-dev libbz2-1.0 libcurl3 libopenblas-dev libpangocairo-1.0-0 libpcre3 libpng16-16 libreadline7 libtiff5 liblzma5 locales make unzip zip zlib1g wget software-properties-common -y \\\n && add-apt-repository --enable-source --yes \"ppa:marutter/rrutter3.5\" \\\n && add-apt-repository --enable-source --yes \"ppa:marutter/c2d4u3.5\" \\\n && add-apt-repository --yes \"ppa:jonathonf/vim\" \\\n && apt-get update\nRUN apt-get install --no-install-recommends apt-transport-https gdebi-core libapparmor1 libcurl4-openssl-dev libopenmpi-dev libpq-dev libssh2-1-dev libssl-dev libxml2 libxml2-dev libicu-dev libgdal-dev libproj-dev libgsl-dev cmake cargo r-base r-base-dev r-cran-pbdzmq r-cran-catools r-cran-bitops -y\n#  setting up odbc for connections\nRUN apt-get install unixodbc unixodbc-dev odbc-postgresql libsqliteodbc -y\n#  Utilities\nRUN apt-get install vim net-tools inetutils-ping curl git nmap socat sudo libcairo2-dev libxt-dev xclip xsel bzip2 python3-pip python3-setuptools supervisor libc6 libzmq5 libmagick++-dev ed rsync vifm -y\n#  TeX for the rmarkdown package in RStudio, and pandoc is also useful\nRUN apt-get install texlive texlive-base texlive-latex-extra texlive-pstricks texlive-xetex -y \\\n && apt-get -y autoremove \\\n && apt-get clean \\\n && apt-get update\n#  Configure default locale, see https://github.com/rocker-org/rocker/issues/19\nRUN echo \"en_US.UTF-8 UTF-8\" >> /etc/locale.gen \\\n && locale-gen en_US.utf8 \\\n && /usr/sbin/update-locale LANG=en_US.UTF-8\nENV LC_ALL=\"en_US.UTF-8\"\nENV LANG=\"en_US.UTF-8\"\n#  Official R-Studio 1.2 release\nENV RSTUDIO_VERSION=\"1.2.1541\"\nRUN wget https://s3.amazonaws.com/rstudio-ide-build/server/bionic/amd64/rstudio-server-${RSTUDIO_VERSION}-amd64.deb \\\n && gdebi -n rstudio-server-${RSTUDIO_VERSION}-amd64.deb \\\n && rm rstudio-server-*-amd64.deb\n#  link to Rstudio's pandoc\nRUN ln -s /usr/lib/rstudio-server/bin/pandoc/pandoc /usr/local/bin/pandoc\nRUN useradd -m -s /bin/bash -N -u $NB_UID $NB_USER \\\n && echo \"${NB_USER}:${RPASSWORD}\" | chpasswd \\\n && addgroup ${NB_USER} staff \\\n && adduser ${NB_USER} sudo \\\n && echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers\n#  Shiny\nENV SHINY_VERSION=\"1.5.9.923\"\nRUN wget https://download3.rstudio.org/ubuntu-14.04/x86_64/shiny-server-${SHINY_VERSION}-amd64.deb \\\n && gdebi -n shiny-server-${SHINY_VERSION}-amd64.deb \\\n && rm shiny-server-*-amd64.deb\nWORKDIR /home/${NB_USER}\nCOPY .Rprofile /home/${NB_USER}/.Rprofile\nRUN ln -sf /home/${NB_USER}/.Rprofile /home/shiny/.Rprofile \\\n && mkdir -p /var/log/shiny-server \\\n && mkdir -p /srv/shiny-server/apps \\\n && chown shiny:shiny /var/log/shiny-server \\\n && chmod -R ug+s /var/log/shiny-server \\\n && chown -R shiny:shiny /srv/shiny-server \\\n && chmod -R ug+s /srv/shiny-server \\\n && chown shiny:shiny /home/shiny/.Rprofile \\\n && chown ${NB_USER} /home/${NB_USER}/.Rprofile \\\n && adduser ${NB_USER} shiny \\\n && mkdir -p /var/log/supervisor \\\n && chown ${NB_USER} /var/log/supervisor\n#  set path to user directory to install packages\nRUN sed -i -e 's/~\\/R\\/x86_64/~\\/.rsm-msba\\/R\\/x86_64/' /etc/R/Renviron\n#  installing some basic r-packages\nRUN R -e 'install.packages(c(\"Rcpp\", \"R6\", \"digest\", \"shiny\", \"rmarkdown\", \"DBI\", \"RPostgreSQL\", \"odbc\", \"remotes\", \"rprojroot\"))'\n#  install renv for Docker creation\nRUN R -e 'remotes::install_github(\"rstudio/renv\")'\nCOPY shiny-server.conf /etc/shiny-server/shiny-server.conf\nCOPY supervisord.conf /etc/supervisor/conf.d/supervisord.conf\nCOPY userconf.sh /usr/local/bin/userconf.sh\nRUN chmod +x /usr/local/bin/userconf.sh\n#  copy dbase connections\nCOPY connections/ /etc/${NB_USER}/connections\nEXPOSE 8080/tcp 8787/tcp\nCMD [\"/usr/bin/supervisord\", \"-c\", \"/etc/supervisor/conf.d/supervisord.conf\"]\n","injectedSmells":[],"originalDockerfileHash":"da90311056ac243e8b98bc6b2556e293","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:bionic\nARG NB_USER=\"jovyan\"\nENV NB_USER=\"${NB_USER}\"\nARG NB_UID=\"1001\"\nARG NB_GID=\"100\"\nARG RPASSWORD=${RPASSWORD:-\"rstudio\"}\nARG DOCKERHUB_VERSION_UPDATE\nENV DOCKERHUB_VERSION=\"${DOCKERHUB_VERSION_UPDATE}\"\nLABEL Vincent=\"Nijs \\\"radiant@rady.ucsd.edu\\\"\"\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN apt-get update \\\n && apt-get -y upgrade \\\n && apt-get install --no-install-recommends bash-completion ca-certificates file fonts-texgyre g++ gfortran gsfonts libblas-dev libbz2-1.0 libcurl3 libopenblas-dev libpangocairo-1.0-0 libpcre3 libpng16-16 libreadline7 libtiff5 liblzma5 locales make unzip zip zlib1g wget software-properties-common -y \\\n && add-apt-repository --enable-source --yes \"ppa:marutter/rrutter3.5\" \\\n && add-apt-repository --enable-source --yes \"ppa:marutter/c2d4u3.5\" \\\n && add-apt-repository --yes \"ppa:jonathonf/vim\" \\\n && apt-get update\nRUN apt-get install --no-install-recommends apt-transport-https gdebi-core libapparmor1 libcurl4-openssl-dev libopenmpi-dev libpq-dev libssh2-1-dev libssl-dev libxml2 libxml2-dev libicu-dev libgdal-dev libproj-dev libgsl-dev cmake cargo r-base r-base-dev r-cran-pbdzmq r-cran-catools r-cran-bitops -y\n#   setting up odbc for connections\nRUN apt-get install unixodbc unixodbc-dev odbc-postgresql libsqliteodbc -y\n#   Utilities\nRUN apt-get install vim net-tools inetutils-ping curl git nmap socat sudo libcairo2-dev libxt-dev xclip xsel bzip2 python3-pip python3-setuptools supervisor libc6 libzmq5 libmagick++-dev ed rsync vifm -y\n#   TeX for the rmarkdown package in RStudio, and pandoc is also useful\nRUN apt-get install texlive texlive-base texlive-latex-extra texlive-pstricks texlive-xetex -y \\\n && apt-get -y autoremove \\\n && apt-get clean \\\n && apt-get update\n#   Configure default locale, see https://github.com/rocker-org/rocker/issues/19\nRUN echo \"en_US.UTF-8 UTF-8\" >> /etc/locale.gen \\\n && locale-gen en_US.utf8 \\\n && /usr/sbin/update-locale LANG=en_US.UTF-8\nENV LC_ALL=\"en_US.UTF-8\"\nENV LANG=\"en_US.UTF-8\"\n#   Official R-Studio 1.2 release\nENV RSTUDIO_VERSION=\"1.2.1541\"\nRUN wget https://s3.amazonaws.com/rstudio-ide-build/server/bionic/amd64/rstudio-server-${RSTUDIO_VERSION}-amd64.deb \\\n && gdebi -n rstudio-server-${RSTUDIO_VERSION}-amd64.deb \\\n && rm rstudio-server-*-amd64.deb\n#   link to Rstudio's pandoc\nRUN ln -s /usr/lib/rstudio-server/bin/pandoc/pandoc /usr/local/bin/pandoc\nRUN useradd -m -s /bin/bash -N -u $NB_UID $NB_USER \\\n && echo \"${NB_USER}:${RPASSWORD}\" | chpasswd \\\n && addgroup ${NB_USER} staff \\\n && adduser ${NB_USER} sudo \\\n && echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers\n#   Shiny\nENV SHINY_VERSION=\"1.5.9.923\"\nRUN wget https://download3.rstudio.org/ubuntu-14.04/x86_64/shiny-server-${SHINY_VERSION}-amd64.deb \\\n && gdebi -n shiny-server-${SHINY_VERSION}-amd64.deb \\\n && rm shiny-server-*-amd64.deb\nWORKDIR /home/${NB_USER}\nCOPY .Rprofile /home/${NB_USER}/.Rprofile\nRUN ln -sf /home/${NB_USER}/.Rprofile /home/shiny/.Rprofile \\\n && mkdir -p /var/log/shiny-server \\\n && mkdir -p /srv/shiny-server/apps \\\n && chown shiny:shiny /var/log/shiny-server \\\n && chmod -R ug+s /var/log/shiny-server \\\n && chown -R shiny:shiny /srv/shiny-server \\\n && chmod -R ug+s /srv/shiny-server \\\n && chown shiny:shiny /home/shiny/.Rprofile \\\n && chown ${NB_USER} /home/${NB_USER}/.Rprofile \\\n && adduser ${NB_USER} shiny \\\n && mkdir -p /var/log/supervisor \\\n && chown ${NB_USER} /var/log/supervisor\n#   set path to user directory to install packages\nRUN sed -i -e 's/~\\/R\\/x86_64/~\\/.rsm-msba\\/R\\/x86_64/' /etc/R/Renviron\n#   installing some basic r-packages\nRUN R -e 'install.packages(c(\"Rcpp\", \"R6\", \"digest\", \"shiny\", \"rmarkdown\", \"DBI\", \"RPostgreSQL\", \"odbc\", \"remotes\", \"rprojroot\"))'\n#   install renv for Docker creation\nRUN R -e 'remotes::install_github(\"rstudio/renv\")'\nCOPY shiny-server.conf /etc/shiny-server/shiny-server.conf\nCOPY supervisord.conf /etc/supervisor/conf.d/supervisord.conf\nCOPY userconf.sh /usr/local/bin/userconf.sh\nRUN chmod +x /usr/local/bin/userconf.sh\n#   copy dbase connections\nCOPY connections/ /etc/${NB_USER}/connections\nEXPOSE 8080/tcp 8787/tcp\nCMD [\"/usr/bin/supervisord\", \"-c\", \"/etc/supervisor/conf.d/supervisord.conf\"]\n","originalDockerfileUglifiedHash":"0a1e8fc67445e2917ab72b1b697be1df","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/80742db498b3ba32cb108428668d403ec8428c2a.dockerfile"}