{"seed":2309354524,"processedDockerfileHash":"4502d34436dc694a966c835b4a520376","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM alpine:edge\nMAINTAINER Paul Smith <pa.ulsmith.net>\n#   Add repos\nRUN echo \"http://dl-cdn.alpinelinux.org/alpine/edge/testing\" >> /etc/apk/repositories\n#   Add basics first\nRUN apk update \\\n && apk upgrade \\\n && apk add bash=5.2.15-r2 apache2=2.4.57-r0 php7-apache2 curl=8.0.1-r1 ca-certificates=20230106-r0 openssl=3.1.0-r2 git=2.40.0-r0 php7 php7-phar php7-json php7-iconv php7-openssl tzdata=2023c-r0 openntpd=6.8_p1-r8 vim=9.0.1440-r0 nano=7.2-r0\n#   Add Composer\nRUN curl -sS https://getcomposer.org/installer | php \\\n && mv composer.phar /usr/local/bin/composer\n#   Setup apache and php\nRUN apk add php7-ftp php7-xdebug php7-mcrypt php7-mbstring php7-soap php7-gmp php7-pdo_odbc php7-dom php7-pdo php7-zip php7-mysqli php7-sqlite3 php7-pdo_pgsql php7-bcmath php7-gd php7-odbc php7-pdo_mysql php7-pdo_sqlite php7-gettext php7-xmlreader php7-xmlwriter php7-simplexml php7-tokenizer php7-xmlrpc php7-bz2 php7-pdo_dblib php7-curl php7-ctype php7-session php7-redis sqlite=3.41.2-r1 rsync=3.2.7-r1 pwgen=2.08-r2 netcat-openbsd=1.219-r0 \\\n && cp /usr/bin/php7 /usr/bin/php \\\n && rm -f /var/cache/apk/*\nRUN apk add openssh=9.3_p1-r1 --update --no-cache \\\n && sed -i s/#PermitRootLogin.*/PermitRootLogin yes/ /etc/ssh/sshd_config \\\n && echo \"root:THISISNOTFORLOGIN102i3709123\" | chpasswd \\\n && rm -rf /var/cache/apk/*\nRUN sed -ie 's/#Port 22/Port 22/g' /etc/ssh/sshd_config\nRUN sed -ri 's/#HostKey \\/etc\\/ssh\\/ssh_host_key/HostKey \\/etc\\/ssh\\/ssh_host_key/g' /etc/ssh/sshd_config\nRUN sed -ir 's/#HostKey \\/etc\\/ssh\\/ssh_host_rsa_key/HostKey \\/etc\\/ssh\\/ssh_host_rsa_key/g' /etc/ssh/sshd_config\nRUN sed -ir 's/#HostKey \\/etc\\/ssh\\/ssh_host_dsa_key/HostKey \\/etc\\/ssh\\/ssh_host_dsa_key/g' /etc/ssh/sshd_config\nRUN sed -ir 's/#HostKey \\/etc\\/ssh\\/ssh_host_ecdsa_key/HostKey \\/etc\\/ssh\\/ssh_host_ecdsa_key/g' /etc/ssh/sshd_config\nRUN sed -ir 's/#HostKey \\/etc\\/ssh\\/ssh_host_ed25519_key/HostKey \\/etc\\/ssh\\/ssh_host_ed25519_key/g' /etc/ssh/sshd_config\nRUN printf \"\\nClientAliveInterval 15\\nClientAliveCountMax 8\" >> /etc/ssh/sshd_config\nRUN /usr/bin/ssh-keygen -A\nRUN ssh-keygen -t rsa -b 4096 -f /etc/ssh/ssh_host_key\n#   Add apache to run and configure\nRUN mkdir /run/apache2 \\\n && sed -i \"s/#LoadModule\\ rewrite_module/LoadModule\\ rewrite_module/\" /etc/apache2/httpd.conf \\\n && sed -i \"s/#LoadModule\\ session_module/LoadModule\\ session_module/\" /etc/apache2/httpd.conf \\\n && sed -i \"s/#LoadModule\\ session_cookie_module/LoadModule\\ session_cookie_module/\" /etc/apache2/httpd.conf \\\n && sed -i \"s/#LoadModule\\ session_crypto_module/LoadModule\\ session_crypto_module/\" /etc/apache2/httpd.conf \\\n && sed -i \"s/#LoadModule\\ deflate_module/LoadModule\\ deflate_module/\" /etc/apache2/httpd.conf \\\n && sed -i \"s#^DocumentRoot \\\".*#DocumentRoot \\\"/var/www/html\\\"#g\" /etc/apache2/httpd.conf \\\n && sed -i \"s#/var/www/localhost/htdocs#/var/www/html#\" /etc/apache2/httpd.conf \\\n && printf \"\\n<Directory \\\"/var/www/html\\\">\\n\\tAllowOverride All\\n</Directory>\\n\" >> /etc/apache2/httpd.conf\n#   add flag\nARG flag\nARG flag_name\nARG username\nARG password\nENV flag=\"${flag}\"\nENV flag_name=\"${flag_name}\"\nENV username=\"${username}\"\nENV password=\"${password}\"\n#   create user\nRUN adduser -D -u 1000 $username\nRUN echo \"$username:$password\" | chpasswd\n#   create webroot directory\nRUN mkdir -p /var/www/html\n#   add challs\nCOPY challs /var/www/html\n#   remove README.md\nRUN rm -f /var/www/html/README.md\n#   change ownership and mode\nRUN chown -R root:$username /var/www/html/* \\\n && chmod -R 775 /var/www/html/* \\\n && mkdir bootstrap\nRUN chown -R apache:apache /var/www/html/sqlite\nRUN chown -R apache:apache /var/www/html/static\n#   store and securing flag\nRUN adduser -D -g \"$flag\" -u 1337 flag\nRUN echo \"flag:thisisonlyforsecuritypurpose\" | chpasswd\n#  bootstrap\nCOPY start.sh /bootstrap/\nRUN chmod +x /bootstrap/start.sh\n#  CMD [\"/usr/sbin/sshd\", \"-D\"]\nEXPOSE 80/tcp 22/tcp\nENTRYPOINT [\"/bootstrap/start.sh\"]\nRUN addgroup -S docker-user ; adduser -S -G docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM alpine:edge\nMAINTAINER Paul Smith <pa.ulsmith.net>\n#  Add repos\nRUN echo \"http://dl-cdn.alpinelinux.org/alpine/edge/testing\" >> /etc/apk/repositories\n#  Add basics first\nRUN apk update \\\n && apk upgrade \\\n && apk add bash apache2 php7-apache2 curl ca-certificates openssl git php7 php7-phar php7-json php7-iconv php7-openssl tzdata openntpd vim nano\n#  Add Composer\nRUN curl -sS https://getcomposer.org/installer | php \\\n && mv composer.phar /usr/local/bin/composer\n#  Setup apache and php\nRUN apk add php7-ftp php7-xdebug php7-mcrypt php7-mbstring php7-soap php7-gmp php7-pdo_odbc php7-dom php7-pdo php7-zip php7-mysqli php7-sqlite3 php7-pdo_pgsql php7-bcmath php7-gd php7-odbc php7-pdo_mysql php7-pdo_sqlite php7-gettext php7-xmlreader php7-xmlwriter php7-simplexml php7-tokenizer php7-xmlrpc php7-bz2 php7-pdo_dblib php7-curl php7-ctype php7-session php7-redis sqlite rsync pwgen netcat-openbsd \\\n && cp /usr/bin/php7 /usr/bin/php \\\n && rm -f /var/cache/apk/*\nRUN apk --update add --no-cache openssh \\\n && sed -i s/#PermitRootLogin.*/PermitRootLogin yes/ /etc/ssh/sshd_config \\\n && echo \"root:THISISNOTFORLOGIN102i3709123\" | chpasswd \\\n && rm -rf /var/cache/apk/*\nRUN sed -ie 's/#Port 22/Port 22/g' /etc/ssh/sshd_config\nRUN sed -ri 's/#HostKey \\/etc\\/ssh\\/ssh_host_key/HostKey \\/etc\\/ssh\\/ssh_host_key/g' /etc/ssh/sshd_config\nRUN sed -ir 's/#HostKey \\/etc\\/ssh\\/ssh_host_rsa_key/HostKey \\/etc\\/ssh\\/ssh_host_rsa_key/g' /etc/ssh/sshd_config\nRUN sed -ir 's/#HostKey \\/etc\\/ssh\\/ssh_host_dsa_key/HostKey \\/etc\\/ssh\\/ssh_host_dsa_key/g' /etc/ssh/sshd_config\nRUN sed -ir 's/#HostKey \\/etc\\/ssh\\/ssh_host_ecdsa_key/HostKey \\/etc\\/ssh\\/ssh_host_ecdsa_key/g' /etc/ssh/sshd_config\nRUN sed -ir 's/#HostKey \\/etc\\/ssh\\/ssh_host_ed25519_key/HostKey \\/etc\\/ssh\\/ssh_host_ed25519_key/g' /etc/ssh/sshd_config\nRUN printf \"\\nClientAliveInterval 15\\nClientAliveCountMax 8\" >> /etc/ssh/sshd_config\nRUN /usr/bin/ssh-keygen -A\nRUN ssh-keygen -t rsa -b 4096 -f /etc/ssh/ssh_host_key\n#  Add apache to run and configure\nRUN mkdir /run/apache2 \\\n && sed -i \"s/#LoadModule\\ rewrite_module/LoadModule\\ rewrite_module/\" /etc/apache2/httpd.conf \\\n && sed -i \"s/#LoadModule\\ session_module/LoadModule\\ session_module/\" /etc/apache2/httpd.conf \\\n && sed -i \"s/#LoadModule\\ session_cookie_module/LoadModule\\ session_cookie_module/\" /etc/apache2/httpd.conf \\\n && sed -i \"s/#LoadModule\\ session_crypto_module/LoadModule\\ session_crypto_module/\" /etc/apache2/httpd.conf \\\n && sed -i \"s/#LoadModule\\ deflate_module/LoadModule\\ deflate_module/\" /etc/apache2/httpd.conf \\\n && sed -i \"s#^DocumentRoot \\\".*#DocumentRoot \\\"/var/www/html\\\"#g\" /etc/apache2/httpd.conf \\\n && sed -i \"s#/var/www/localhost/htdocs#/var/www/html#\" /etc/apache2/httpd.conf \\\n && printf \"\\n<Directory \\\"/var/www/html\\\">\\n\\tAllowOverride All\\n</Directory>\\n\" >> /etc/apache2/httpd.conf\n#  add flag\nARG flag\nARG flag_name\nARG username\nARG password\nENV flag=\"${flag}\"\nENV flag_name=\"${flag_name}\"\nENV username=\"${username}\"\nENV password=\"${password}\"\n#  create user\nRUN adduser -D -u 1000 $username\nRUN echo \"$username:$password\" | chpasswd\n#  create webroot directory\nRUN mkdir -p /var/www/html\n#  add challs\nADD challs /var/www/html\n#  remove README.md\nRUN rm -f /var/www/html/README.md\n#  change ownership and mode\nRUN chown -R root:$username /var/www/html/* \\\n && chmod -R 775 /var/www/html/* \\\n && mkdir bootstrap\nRUN chown -R apache:apache /var/www/html/sqlite\nRUN chown -R apache:apache /var/www/html/static\n#  store and securing flag\nRUN adduser -D -g \"$flag\" -u 1337 flag\nRUN echo \"flag:thisisonlyforsecuritypurpose\" | chpasswd\n# bootstrap\nADD start.sh /bootstrap/\nRUN chmod +x /bootstrap/start.sh\n# CMD [\"/usr/sbin/sshd\", \"-D\"]\nEXPOSE 80/tcp 22/tcp\nENTRYPOINT [\"/bootstrap/start.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"6b4c5781cb3bbae7fece405b89a5f41c","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM alpine:edge\nMAINTAINER Paul Smith <pa.ulsmith.net>\n#   Add repos\nRUN echo \"http://dl-cdn.alpinelinux.org/alpine/edge/testing\" >> /etc/apk/repositories\n#   Add basics first\nRUN apk update \\\n && apk upgrade \\\n && apk add bash apache2 php7-apache2 curl ca-certificates openssl git php7 php7-phar php7-json php7-iconv php7-openssl tzdata openntpd vim nano\n#   Add Composer\nRUN curl -sS https://getcomposer.org/installer | php \\\n && mv composer.phar /usr/local/bin/composer\n#   Setup apache and php\nRUN apk add php7-ftp php7-xdebug php7-mcrypt php7-mbstring php7-soap php7-gmp php7-pdo_odbc php7-dom php7-pdo php7-zip php7-mysqli php7-sqlite3 php7-pdo_pgsql php7-bcmath php7-gd php7-odbc php7-pdo_mysql php7-pdo_sqlite php7-gettext php7-xmlreader php7-xmlwriter php7-simplexml php7-tokenizer php7-xmlrpc php7-bz2 php7-pdo_dblib php7-curl php7-ctype php7-session php7-redis sqlite rsync pwgen netcat-openbsd \\\n && cp /usr/bin/php7 /usr/bin/php \\\n && rm -f /var/cache/apk/*\nRUN apk --update add --no-cache openssh \\\n && sed -i s/#PermitRootLogin.*/PermitRootLogin yes/ /etc/ssh/sshd_config \\\n && echo \"root:THISISNOTFORLOGIN102i3709123\" | chpasswd \\\n && rm -rf /var/cache/apk/*\nRUN sed -ie 's/#Port 22/Port 22/g' /etc/ssh/sshd_config\nRUN sed -ri 's/#HostKey \\/etc\\/ssh\\/ssh_host_key/HostKey \\/etc\\/ssh\\/ssh_host_key/g' /etc/ssh/sshd_config\nRUN sed -ir 's/#HostKey \\/etc\\/ssh\\/ssh_host_rsa_key/HostKey \\/etc\\/ssh\\/ssh_host_rsa_key/g' /etc/ssh/sshd_config\nRUN sed -ir 's/#HostKey \\/etc\\/ssh\\/ssh_host_dsa_key/HostKey \\/etc\\/ssh\\/ssh_host_dsa_key/g' /etc/ssh/sshd_config\nRUN sed -ir 's/#HostKey \\/etc\\/ssh\\/ssh_host_ecdsa_key/HostKey \\/etc\\/ssh\\/ssh_host_ecdsa_key/g' /etc/ssh/sshd_config\nRUN sed -ir 's/#HostKey \\/etc\\/ssh\\/ssh_host_ed25519_key/HostKey \\/etc\\/ssh\\/ssh_host_ed25519_key/g' /etc/ssh/sshd_config\nRUN printf \"\\nClientAliveInterval 15\\nClientAliveCountMax 8\" >> /etc/ssh/sshd_config\nRUN /usr/bin/ssh-keygen -A\nRUN ssh-keygen -t rsa -b 4096 -f /etc/ssh/ssh_host_key\n#   Add apache to run and configure\nRUN mkdir /run/apache2 \\\n && sed -i \"s/#LoadModule\\ rewrite_module/LoadModule\\ rewrite_module/\" /etc/apache2/httpd.conf \\\n && sed -i \"s/#LoadModule\\ session_module/LoadModule\\ session_module/\" /etc/apache2/httpd.conf \\\n && sed -i \"s/#LoadModule\\ session_cookie_module/LoadModule\\ session_cookie_module/\" /etc/apache2/httpd.conf \\\n && sed -i \"s/#LoadModule\\ session_crypto_module/LoadModule\\ session_crypto_module/\" /etc/apache2/httpd.conf \\\n && sed -i \"s/#LoadModule\\ deflate_module/LoadModule\\ deflate_module/\" /etc/apache2/httpd.conf \\\n && sed -i \"s#^DocumentRoot \\\".*#DocumentRoot \\\"/var/www/html\\\"#g\" /etc/apache2/httpd.conf \\\n && sed -i \"s#/var/www/localhost/htdocs#/var/www/html#\" /etc/apache2/httpd.conf \\\n && printf \"\\n<Directory \\\"/var/www/html\\\">\\n\\tAllowOverride All\\n</Directory>\\n\" >> /etc/apache2/httpd.conf\n#   add flag\nARG flag\nARG flag_name\nARG username\nARG password\nENV flag=\"${flag}\"\nENV flag_name=\"${flag_name}\"\nENV username=\"${username}\"\nENV password=\"${password}\"\n#   create user\nRUN adduser -D -u 1000 $username\nRUN echo \"$username:$password\" | chpasswd\n#   create webroot directory\nRUN mkdir -p /var/www/html\n#   add challs\nADD challs /var/www/html\n#   remove README.md\nRUN rm -f /var/www/html/README.md\n#   change ownership and mode\nRUN chown -R root:$username /var/www/html/* \\\n && chmod -R 775 /var/www/html/* \\\n && mkdir bootstrap\nRUN chown -R apache:apache /var/www/html/sqlite\nRUN chown -R apache:apache /var/www/html/static\n#   store and securing flag\nRUN adduser -D -g \"$flag\" -u 1337 flag\nRUN echo \"flag:thisisonlyforsecuritypurpose\" | chpasswd\n#  bootstrap\nADD start.sh /bootstrap/\nRUN chmod +x /bootstrap/start.sh\n#  CMD [\"/usr/sbin/sshd\", \"-D\"]\nEXPOSE 80/tcp 22/tcp\nENTRYPOINT [\"/bootstrap/start.sh\"]\n","originalDockerfileUglifiedHash":"7d9cf51bd012aabc22e7f0522c8519c2","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/cbdd18875ec926bdaabc6a1f3a75351bd006844c.dockerfile"}