{"seed":2522881914,"processedDockerfileHash":"fa3d35c8fa46b9488c5cb93b28dd5dc5","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","use-copy-instead-of-add","have-a-healthcheck"],"processedDockerfile":"#   set out our GPU lib versions\n#   note even though we only specify the major version for cuDNN it will always pull\nARG CUDA_V=9.0\nFROM nvidia/cuda:${CUDA_V}-devel\nENV CUDA_VERSION=\"${CUDA_V}\"\nENV CUDNN_VERSION=\"7.0.5.15\"\n#   Install system packages\nRUN apt-get update \\\n && apt-get install --no-install-recommends bzip2 g++ git graphviz libgl1-mesa-glx libhdf5-dev openmpi-bin cuda-command-line-tools-9-0 wget -y \\\n && rm -rf /var/lib/apt/lists/*\n#   Install correct CuDNN version for tensorflow\nLABEL com.nvidia.cudnn.version=\"${CUDNN_VERSION}\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends libcudnn7=$CUDNN_VERSION-1+cuda9.0 libcudnn7-dev=$CUDNN_VERSION-1+cuda9.0 -y \\\n && rm -rf /var/lib/apt/lists/*\n#   Install conda\nENV CONDA_DIR=\"/opt/conda\"\nENV PATH=\"$CONDA_DIR/bin:$PATH\"\nRUN wget --quiet --no-check-certificate https://repo.continuum.io/miniconda/Miniconda3-4.4.10-Linux-x86_64.sh \\\n && /bin/bash /Miniconda3-4.4.10-Linux-x86_64.sh -f -b -p $CONDA_DIR \\\n && rm Miniconda3-4.4.10-Linux-x86_64.sh \\\n && echo export PATH=$CONDA_DIR/bin:'$PATH' > /etc/profile.d/conda.sh\nRUN conda update -n base conda\nRUN conda update openssl ca-certificates certifi\nRUN conda config --add channels conda-forge\nRUN apt-get install --no-install-recommends ca-certificates -y\n#   Install Goodies\nENV NB_USER=\"geo\"\nENV NB_UID=\"1000\"\nRUN useradd -m -s /bin/bash -N -u $NB_UID $NB_USER \\\n && chown $NB_USER $CONDA_DIR -R \\\n && mkdir -p /src \\\n && chown $NB_USER /src\nUSER $NB_USER\nARG python_version=3.6\nRUN conda install -y python=${python_version}\nRUN conda config --set always_yes yes\nRUN pip install pip==23.1 --upgrade\nRUN pip install https://cntk.ai/PythonWheel/GPU/cntk-2.1-cp36-cp36m-linux_x86_64.whl\nRUN pip install Cython==0.29.34 --no-cache-dir\n#  # Base Python Packages\nRUN conda install bcolz h5py matplotlib mkl nose notebook pygpu pyyaml six\nRUN pip install python-dotenv==1.0.0\n#  # Data Science\nRUN conda install numpy scipy pandas tqdm colorcet seaborn networkx\n#  # Image Processing\nRUN conda install Pillow scikit-image\n#  # ML Packages\nRUN conda install scikit-learn six theano\nRUN pip install sklearn_pandas==2.2.0 tensorflow-gpu==2.12.0 tensorboardX==2.6 jupyter-tensorboard==0.2.0 livelossplot==0.5.5\n#  # TPOT plus Dependencies\nRUN pip install deap==1.3.3 update_checker==0.18.0 tqdm==4.65.0 stopit==1.1.2 xgboost==1.7.5 scikit-mdr==0.4.4 skrebate==0.62 tpot==0.11.7\n#  ## Torch (Because you're special)\nRUN conda install pytorch torchvision cuda90 -c pytorch \\\n && conda clean -ya\nRUN pip install git+https://github.com/pytorch/tnt.git@master\n#   keras\nRUN git clone git://github.com/keras-team/keras.git /src \\\n && pip install -e /src[tests] \\\n && pip install git+git://github.com/keras-team/keras.git\n#  # Geo Packages\nRUN conda install geopandas shapely dask\nRUN pip install obspy==1.4.0 pynoddy==1.1 gempy==2.2.12 segyio==1.9.11 bruges==0.5.4 welly==0.5.2 fiona==1.9.3 rasterio==1.3.6 simpeg==0.19.0 lasio==0.30 mplstereonet==0.6.2\n#  # Package install over\nRUN conda clean -yt\nCOPY theanorc /home/$NB_USER/.theanorc\nENV PYTHONPATH=\"/src/:$PYTHONPATH\"\nWORKDIR /src\n#   Tensorboard\nEXPOSE 6006/tcp\n#   Jupyter / iPython\nEXPOSE 8888/tcp\nCMD jupyter notebook --port=8888 --ip=0.0.0.0\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  set out our GPU lib versions\n#  note even though we only specify the major version for cuDNN it will always pull\nARG CUDA_V=9.0\nFROM nvidia/cuda:${CUDA_V}-devel\nENV CUDA_VERSION=\"${CUDA_V}\"\nENV CUDNN_VERSION=\"7.0.5.15\"\n#  Install system packages\nRUN apt-get update \\\n && apt-get install --no-install-recommends bzip2 g++ git graphviz libgl1-mesa-glx libhdf5-dev openmpi-bin cuda-command-line-tools-9-0 wget -y \\\n && rm -rf /var/lib/apt/lists/*\n#  Install correct CuDNN version for tensorflow\nLABEL com.nvidia.cudnn.version=\"${CUDNN_VERSION}\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends libcudnn7=$CUDNN_VERSION-1+cuda9.0 libcudnn7-dev=$CUDNN_VERSION-1+cuda9.0 -y \\\n && rm -rf /var/lib/apt/lists/*\n#  Install conda\nENV CONDA_DIR=\"/opt/conda\"\nENV PATH=\"$CONDA_DIR/bin:$PATH\"\nRUN wget --quiet --no-check-certificate https://repo.continuum.io/miniconda/Miniconda3-4.4.10-Linux-x86_64.sh \\\n && /bin/bash /Miniconda3-4.4.10-Linux-x86_64.sh -f -b -p $CONDA_DIR \\\n && rm Miniconda3-4.4.10-Linux-x86_64.sh \\\n && echo export PATH=$CONDA_DIR/bin:'$PATH' > /etc/profile.d/conda.sh\nRUN conda update -n base conda\nRUN conda update openssl ca-certificates certifi\nRUN conda config --add channels conda-forge\nRUN apt-get install ca-certificates -y\n#  Install Goodies\nENV NB_USER=\"geo\"\nENV NB_UID=\"1000\"\nRUN useradd -m -s /bin/bash -N -u $NB_UID $NB_USER \\\n && chown $NB_USER $CONDA_DIR -R \\\n && mkdir -p /src \\\n && chown $NB_USER /src\nUSER $NB_USER\nARG python_version=3.6\nRUN conda install -y python=${python_version}\nRUN conda config --set always_yes yes\nRUN pip install pip --upgrade\nRUN pip install https://cntk.ai/PythonWheel/GPU/cntk-2.1-cp36-cp36m-linux_x86_64.whl\nRUN pip install Cython --no-cache-dir\n# # Base Python Packages\nRUN conda install bcolz h5py matplotlib mkl nose notebook pygpu pyyaml six\nRUN pip install python-dotenv\n# # Data Science\nRUN conda install numpy scipy pandas tqdm colorcet seaborn networkx\n# # Image Processing\nRUN conda install Pillow scikit-image\n# # ML Packages\nRUN conda install scikit-learn six theano\nRUN pip install sklearn_pandas tensorflow-gpu tensorboardX jupyter-tensorboard livelossplot\n# # TPOT plus Dependencies\nRUN pip install deap update_checker tqdm stopit xgboost scikit-mdr skrebate tpot\n# ## Torch (Because you're special)\nRUN conda install pytorch torchvision cuda90 -c pytorch \\\n && conda clean -ya\nRUN pip install git+https://github.com/pytorch/tnt.git@master\n#  keras\nRUN git clone git://github.com/keras-team/keras.git /src \\\n && pip install -e /src[tests] \\\n && pip install git+git://github.com/keras-team/keras.git\n# # Geo Packages\nRUN conda install geopandas shapely dask\nRUN pip install obspy pynoddy gempy segyio bruges welly fiona rasterio simpeg lasio mplstereonet\n# # Package install over\nRUN conda clean -yt\nADD theanorc /home/$NB_USER/.theanorc\nENV PYTHONPATH=\"/src/:$PYTHONPATH\"\nWORKDIR /src\n#  Tensorboard\nEXPOSE 6006/tcp\n#  Jupyter / iPython\nEXPOSE 8888/tcp\nCMD jupyter notebook --port=8888 --ip=0.0.0.0\n","injectedSmells":[],"originalDockerfileHash":"6d89882b5636e9f6e0467f5196601f7a","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   set out our GPU lib versions\n#   note even though we only specify the major version for cuDNN it will always pull\nARG CUDA_V=9.0\nFROM nvidia/cuda:${CUDA_V}-devel\nENV CUDA_VERSION=\"${CUDA_V}\"\nENV CUDNN_VERSION=\"7.0.5.15\"\n#   Install system packages\nRUN apt-get update \\\n && apt-get install --no-install-recommends bzip2 g++ git graphviz libgl1-mesa-glx libhdf5-dev openmpi-bin cuda-command-line-tools-9-0 wget -y \\\n && rm -rf /var/lib/apt/lists/*\n#   Install correct CuDNN version for tensorflow\nLABEL com.nvidia.cudnn.version=\"${CUDNN_VERSION}\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends libcudnn7=$CUDNN_VERSION-1+cuda9.0 libcudnn7-dev=$CUDNN_VERSION-1+cuda9.0 -y \\\n && rm -rf /var/lib/apt/lists/*\n#   Install conda\nENV CONDA_DIR=\"/opt/conda\"\nENV PATH=\"$CONDA_DIR/bin:$PATH\"\nRUN wget --quiet --no-check-certificate https://repo.continuum.io/miniconda/Miniconda3-4.4.10-Linux-x86_64.sh \\\n && /bin/bash /Miniconda3-4.4.10-Linux-x86_64.sh -f -b -p $CONDA_DIR \\\n && rm Miniconda3-4.4.10-Linux-x86_64.sh \\\n && echo export PATH=$CONDA_DIR/bin:'$PATH' > /etc/profile.d/conda.sh\nRUN conda update -n base conda\nRUN conda update openssl ca-certificates certifi\nRUN conda config --add channels conda-forge\nRUN apt-get install ca-certificates -y\n#   Install Goodies\nENV NB_USER=\"geo\"\nENV NB_UID=\"1000\"\nRUN useradd -m -s /bin/bash -N -u $NB_UID $NB_USER \\\n && chown $NB_USER $CONDA_DIR -R \\\n && mkdir -p /src \\\n && chown $NB_USER /src\nUSER $NB_USER\nARG python_version=3.6\nRUN conda install -y python=${python_version}\nRUN conda config --set always_yes yes\nRUN pip install pip --upgrade\nRUN pip install https://cntk.ai/PythonWheel/GPU/cntk-2.1-cp36-cp36m-linux_x86_64.whl\nRUN pip install Cython --no-cache-dir\n#  # Base Python Packages\nRUN conda install bcolz h5py matplotlib mkl nose notebook pygpu pyyaml six\nRUN pip install python-dotenv\n#  # Data Science\nRUN conda install numpy scipy pandas tqdm colorcet seaborn networkx\n#  # Image Processing\nRUN conda install Pillow scikit-image\n#  # ML Packages\nRUN conda install scikit-learn six theano\nRUN pip install sklearn_pandas tensorflow-gpu tensorboardX jupyter-tensorboard livelossplot\n#  # TPOT plus Dependencies\nRUN pip install deap update_checker tqdm stopit xgboost scikit-mdr skrebate tpot\n#  ## Torch (Because you're special)\nRUN conda install pytorch torchvision cuda90 -c pytorch \\\n && conda clean -ya\nRUN pip install git+https://github.com/pytorch/tnt.git@master\n#   keras\nRUN git clone git://github.com/keras-team/keras.git /src \\\n && pip install -e /src[tests] \\\n && pip install git+git://github.com/keras-team/keras.git\n#  # Geo Packages\nRUN conda install geopandas shapely dask\nRUN pip install obspy pynoddy gempy segyio bruges welly fiona rasterio simpeg lasio mplstereonet\n#  # Package install over\nRUN conda clean -yt\nADD theanorc /home/$NB_USER/.theanorc\nENV PYTHONPATH=\"/src/:$PYTHONPATH\"\nWORKDIR /src\n#   Tensorboard\nEXPOSE 6006/tcp\n#   Jupyter / iPython\nEXPOSE 8888/tcp\nCMD jupyter notebook --port=8888 --ip=0.0.0.0\n","originalDockerfileUglifiedHash":"cdfc9f26826ba140fe117a27ef5bad4d","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/3c8e0211186b07481d61d7ba0353706fadbc6b06.dockerfile"}