{"seed":1379422473,"processedDockerfileHash":"0428881c7be9f79f2091466010d34ddc","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["do-not-use-apt-get-update-alone","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   pull base image\nFROM harbor.h2o.ai/opsh2oai/h2o-3/dev-r-3.4.1-jdk-8:10\n#   maintainer details\nMAINTAINER h2oai \"h2o.ai\"\nARG VERSION\nRUN if [ -z $VERSION ] ; then echo \"build-arg VERSION must be set\" ;exit 1 ; fi\nARG PATH_PREFIX='.'\nARG PYTHON_VERSIONS='2.7,3.6'\nARG AWS_ACCESS_KEY\nARG AWS_SECRET_ACCESS_KEY\nARG HIVE_PACKAGE='hive'\nENV DISTRIBUTION=\"cdh\" \\\n    HADOOP_HOME=\"/usr/lib/hadoop\" \\\n    HADOOP_CONF_DIR=\"/etc/hadoop/conf.pseudo\" \\\n    MASTER=\"yarn-client\" \\\n    HIVE_PACKAGE=\"${HIVE_PACKAGE:-hive}\" \\\n    HIVE_HOME=\"/usr/lib/${HIVE_PACKAGE}\"\nRUN : \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y apt-transport-https curl wget software-properties-common git\n#   Prepare Cloudera repository\nRUN case ${VERSION} in (5*) echo \"# Packages for Cloudera's Distribution of Hadoop, Version 5\\ndeb [arch=amd64] http://archive.cloudera.com/cdh5/ubuntu/trusty/amd64/cdh trusty-cdh${VERSION} contrib\\ndeb-src http://archive.cloudera.com/cdh5/ubuntu/trusty/amd64/cdh trusty-cdh${VERSION} contrib\\n\" > /etc/apt/sources.list.d/cloudera.list \\\n && wget http://archive.cloudera.com/cdh5/ubuntu/trusty/amd64/cdh/archive.key -O archive.key ;;(6.*) echo \"# Packages for Cloudera's Distribution of Hadoop, Version ${VERSION}.0\\ndeb [arch=amd64] http://archive.cloudera.com/cdh6/${VERSION}.0/ubuntu1604/apt xenial-cdh${VERSION}.0 contrib\\n\" > /etc/apt/sources.list.d/cloudera.list \\\n && wget https://archive.cloudera.com/cdh6/${VERSION}.0/ubuntu1604/apt/archive.key -O archive.key ;;(*) echo \"Version ${VERSION} not supported\" ;; esac\nCOPY ${PATH_PREFIX}/conf/cloudera.pref /etc/apt/preferences.d/cloudera.pref\nRUN apt-key add archive.key \\\n && add-apt-repository -y ppa:deadsnakes \\\n && : \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y mysql-server libmysql-java libmysqlclient-dev hadoop-conf-pseudo python-pip python-dev python-virtualenv sudo unzip html2text slapd ldap-utils libkrb5-dev vim\n#   Add Hive user\nRUN adduser --disabled-password --gecos \"\" hive\nARG H2O_BRANCH=master\nENV H2O_BRANCH=\"${H2O_BRANCH}\"\n#   Set required env vars and install Pythons\nCOPY ${PATH_PREFIX}/scripts/sbin ${PATH_PREFIX}/../common/sbin scripts/install_python_version /usr/sbin/\nRUN chmod 700 /usr/sbin/install_python_version \\\n && sync \\\n && /usr/sbin/install_python_version \\\n && /usr/bin/activate_java_8\n#   Copy hadoop configs\nCOPY ${PATH_PREFIX}/conf/ ${HADOOP_CONF_DIR}/\n#   Initialize namenode\nRUN service hadoop-hdfs-namenode init\n#   Copy scripts\nCOPY ${PATH_PREFIX}/../common/startup ${PATH_PREFIX}/scripts/startup /etc/startup/\n#   Copy sudoers so we can start hadoop stuff without root access to container\nCOPY ${PATH_PREFIX}/../common/sudoers/jenkins /etc/sudoers.d/jenkins\nCOPY ${PATH_PREFIX}/../common/hive-scripts /opt/hive-scripts/\nCOPY ${PATH_PREFIX}/../common/ldap /opt/ldap-scripts/\n#   Run this script on container run\nRUN chmod 700 /usr/sbin/startup.sh \\\n && chown -R hive:hive /opt/hive-scripts \\\n && chmod +x /usr/sbin/install_hive.sh \\\n && chmod 700 /usr/sbin/install_ldap.sh \\\n && chmod +x /usr/sbin/mysql_configure.sh \\\n && chmod 700 /usr/sbin/mysql_configure.sh \\\n && sync \\\n && /usr/sbin/install_hive.sh \\\n && if [ \"${VERSION}\" = \"6.2\" ] ; then echo \"Decrease mysql connection timeout.\" \\\n && /usr/sbin/mysql_configure.sh ; fi \\\n && ln -sf /usr/share/java/mysql-connector-java.jar /usr/lib/hive/lib/mysql-connector-java.jar\n#   Copy hive configs\nCOPY ${PATH_PREFIX}/../common/conf-hive/ /etc/${HIVE_PACKAGE}/conf/\nRUN /usr/sbin/install_ldap.sh\n#   Expose ports\n#   H2O, Hadoop UI, Hive, LDAP\nEXPOSE 54321/tcp 8088/tcp 10000/tcp 389/tcp\n#   Remove hadoop pids\nRUN rm -f tmp/*.pid /var/run/hadoop-*/*.pid\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  pull base image\nFROM harbor.h2o.ai/opsh2oai/h2o-3/dev-r-3.4.1-jdk-8:10\n#  maintainer details\nMAINTAINER h2oai \"h2o.ai\"\nARG VERSION\nRUN if [ -z $VERSION ] ; then echo \"build-arg VERSION must be set\" ;exit 1 ; fi\nARG PATH_PREFIX='.'\nARG PYTHON_VERSIONS='2.7,3.6'\nARG AWS_ACCESS_KEY\nARG AWS_SECRET_ACCESS_KEY\nARG HIVE_PACKAGE='hive'\nENV DISTRIBUTION=\"cdh\" \\\n    HADOOP_HOME=\"/usr/lib/hadoop\" \\\n    HADOOP_CONF_DIR=\"/etc/hadoop/conf.pseudo\" \\\n    MASTER=\"yarn-client\" \\\n    HIVE_PACKAGE=\"${HIVE_PACKAGE:-hive}\" \\\n    HIVE_HOME=\"/usr/lib/${HIVE_PACKAGE}\"\nRUN apt-get update \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y apt-transport-https curl wget software-properties-common git\n#  Prepare Cloudera repository\nRUN case ${VERSION} in (5*) echo \"# Packages for Cloudera's Distribution of Hadoop, Version 5\\ndeb [arch=amd64] http://archive.cloudera.com/cdh5/ubuntu/trusty/amd64/cdh trusty-cdh${VERSION} contrib\\ndeb-src http://archive.cloudera.com/cdh5/ubuntu/trusty/amd64/cdh trusty-cdh${VERSION} contrib\\n\" > /etc/apt/sources.list.d/cloudera.list \\\n && wget http://archive.cloudera.com/cdh5/ubuntu/trusty/amd64/cdh/archive.key -O archive.key ;;(6.*) echo \"# Packages for Cloudera's Distribution of Hadoop, Version ${VERSION}.0\\ndeb [arch=amd64] http://archive.cloudera.com/cdh6/${VERSION}.0/ubuntu1604/apt xenial-cdh${VERSION}.0 contrib\\n\" > /etc/apt/sources.list.d/cloudera.list \\\n && wget https://archive.cloudera.com/cdh6/${VERSION}.0/ubuntu1604/apt/archive.key -O archive.key ;;(*) echo \"Version ${VERSION} not supported\" ;; esac\nCOPY ${PATH_PREFIX}/conf/cloudera.pref /etc/apt/preferences.d/cloudera.pref\nRUN apt-key add archive.key \\\n && add-apt-repository -y ppa:deadsnakes \\\n && apt-get update \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y mysql-server libmysql-java libmysqlclient-dev hadoop-conf-pseudo python-pip python-dev python-virtualenv sudo unzip html2text slapd ldap-utils libkrb5-dev vim\n#  Add Hive user\nRUN adduser --disabled-password --gecos \"\" hive\nARG H2O_BRANCH=master\nENV H2O_BRANCH=\"${H2O_BRANCH}\"\n#  Set required env vars and install Pythons\nCOPY ${PATH_PREFIX}/scripts/sbin ${PATH_PREFIX}/../common/sbin scripts/install_python_version /usr/sbin/\nRUN chmod 700 /usr/sbin/install_python_version \\\n && sync \\\n && /usr/sbin/install_python_version \\\n && /usr/bin/activate_java_8\n#  Copy hadoop configs\nCOPY ${PATH_PREFIX}/conf/ ${HADOOP_CONF_DIR}/\n#  Initialize namenode\nRUN service hadoop-hdfs-namenode init\n#  Copy scripts\nCOPY ${PATH_PREFIX}/../common/startup ${PATH_PREFIX}/scripts/startup /etc/startup/\n#  Copy sudoers so we can start hadoop stuff without root access to container\nCOPY ${PATH_PREFIX}/../common/sudoers/jenkins /etc/sudoers.d/jenkins\nCOPY ${PATH_PREFIX}/../common/hive-scripts /opt/hive-scripts/\nCOPY ${PATH_PREFIX}/../common/ldap /opt/ldap-scripts/\n#  Run this script on container run\nRUN chmod 700 /usr/sbin/startup.sh \\\n && chown -R hive:hive /opt/hive-scripts \\\n && chmod +x /usr/sbin/install_hive.sh \\\n && chmod 700 /usr/sbin/install_ldap.sh \\\n && chmod +x /usr/sbin/mysql_configure.sh \\\n && chmod 700 /usr/sbin/mysql_configure.sh \\\n && sync \\\n && /usr/sbin/install_hive.sh \\\n && if [ \"${VERSION}\" = \"6.2\" ] ; then echo \"Decrease mysql connection timeout.\" \\\n && /usr/sbin/mysql_configure.sh ; fi \\\n && ln -sf /usr/share/java/mysql-connector-java.jar /usr/lib/hive/lib/mysql-connector-java.jar\n#  Copy hive configs\nCOPY ${PATH_PREFIX}/../common/conf-hive/ /etc/${HIVE_PACKAGE}/conf/\nRUN /usr/sbin/install_ldap.sh\n#  Expose ports\n#  H2O, Hadoop UI, Hive, LDAP\nEXPOSE 54321/tcp 8088/tcp 10000/tcp 389/tcp\n#  Remove hadoop pids\nRUN rm -f tmp/*.pid /var/run/hadoop-*/*.pid\n","injectedSmells":[],"originalDockerfileHash":"f1c63d9a6e2c6f8bbf81e59f52385109","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   pull base image\nFROM harbor.h2o.ai/opsh2oai/h2o-3/dev-r-3.4.1-jdk-8:10\n#   maintainer details\nMAINTAINER h2oai \"h2o.ai\"\nARG VERSION\nRUN if [ -z $VERSION ] ; then echo \"build-arg VERSION must be set\" ;exit 1 ; fi\nARG PATH_PREFIX='.'\nARG PYTHON_VERSIONS='2.7,3.6'\nARG AWS_ACCESS_KEY\nARG AWS_SECRET_ACCESS_KEY\nARG HIVE_PACKAGE='hive'\nENV DISTRIBUTION=\"cdh\" \\\n    HADOOP_HOME=\"/usr/lib/hadoop\" \\\n    HADOOP_CONF_DIR=\"/etc/hadoop/conf.pseudo\" \\\n    MASTER=\"yarn-client\" \\\n    HIVE_PACKAGE=\"${HIVE_PACKAGE:-hive}\" \\\n    HIVE_HOME=\"/usr/lib/${HIVE_PACKAGE}\"\nRUN apt-get update \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y apt-transport-https curl wget software-properties-common git\n#   Prepare Cloudera repository\nRUN case ${VERSION} in (5*) echo \"# Packages for Cloudera's Distribution of Hadoop, Version 5\\ndeb [arch=amd64] http://archive.cloudera.com/cdh5/ubuntu/trusty/amd64/cdh trusty-cdh${VERSION} contrib\\ndeb-src http://archive.cloudera.com/cdh5/ubuntu/trusty/amd64/cdh trusty-cdh${VERSION} contrib\\n\" > /etc/apt/sources.list.d/cloudera.list \\\n && wget http://archive.cloudera.com/cdh5/ubuntu/trusty/amd64/cdh/archive.key -O archive.key ;;(6.*) echo \"# Packages for Cloudera's Distribution of Hadoop, Version ${VERSION}.0\\ndeb [arch=amd64] http://archive.cloudera.com/cdh6/${VERSION}.0/ubuntu1604/apt xenial-cdh${VERSION}.0 contrib\\n\" > /etc/apt/sources.list.d/cloudera.list \\\n && wget https://archive.cloudera.com/cdh6/${VERSION}.0/ubuntu1604/apt/archive.key -O archive.key ;;(*) echo \"Version ${VERSION} not supported\" ;; esac\nCOPY ${PATH_PREFIX}/conf/cloudera.pref /etc/apt/preferences.d/cloudera.pref\nRUN apt-key add archive.key \\\n && add-apt-repository -y ppa:deadsnakes \\\n && apt-get update \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y mysql-server libmysql-java libmysqlclient-dev hadoop-conf-pseudo python-pip python-dev python-virtualenv sudo unzip html2text slapd ldap-utils libkrb5-dev vim\n#   Add Hive user\nRUN adduser --disabled-password --gecos \"\" hive\nARG H2O_BRANCH=master\nENV H2O_BRANCH=\"${H2O_BRANCH}\"\n#   Set required env vars and install Pythons\nCOPY ${PATH_PREFIX}/scripts/sbin ${PATH_PREFIX}/../common/sbin scripts/install_python_version /usr/sbin/\nRUN chmod 700 /usr/sbin/install_python_version \\\n && sync \\\n && /usr/sbin/install_python_version \\\n && /usr/bin/activate_java_8\n#   Copy hadoop configs\nCOPY ${PATH_PREFIX}/conf/ ${HADOOP_CONF_DIR}/\n#   Initialize namenode\nRUN service hadoop-hdfs-namenode init\n#   Copy scripts\nCOPY ${PATH_PREFIX}/../common/startup ${PATH_PREFIX}/scripts/startup /etc/startup/\n#   Copy sudoers so we can start hadoop stuff without root access to container\nCOPY ${PATH_PREFIX}/../common/sudoers/jenkins /etc/sudoers.d/jenkins\nCOPY ${PATH_PREFIX}/../common/hive-scripts /opt/hive-scripts/\nCOPY ${PATH_PREFIX}/../common/ldap /opt/ldap-scripts/\n#   Run this script on container run\nRUN chmod 700 /usr/sbin/startup.sh \\\n && chown -R hive:hive /opt/hive-scripts \\\n && chmod +x /usr/sbin/install_hive.sh \\\n && chmod 700 /usr/sbin/install_ldap.sh \\\n && chmod +x /usr/sbin/mysql_configure.sh \\\n && chmod 700 /usr/sbin/mysql_configure.sh \\\n && sync \\\n && /usr/sbin/install_hive.sh \\\n && if [ \"${VERSION}\" = \"6.2\" ] ; then echo \"Decrease mysql connection timeout.\" \\\n && /usr/sbin/mysql_configure.sh ; fi \\\n && ln -sf /usr/share/java/mysql-connector-java.jar /usr/lib/hive/lib/mysql-connector-java.jar\n#   Copy hive configs\nCOPY ${PATH_PREFIX}/../common/conf-hive/ /etc/${HIVE_PACKAGE}/conf/\nRUN /usr/sbin/install_ldap.sh\n#   Expose ports\n#   H2O, Hadoop UI, Hive, LDAP\nEXPOSE 54321/tcp 8088/tcp 10000/tcp 389/tcp\n#   Remove hadoop pids\nRUN rm -f tmp/*.pid /var/run/hadoop-*/*.pid\n","originalDockerfileUglifiedHash":"d7d3d4b8abe160b6b3bc0c24df542420","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/2ef505daf24a5f031d23e4f71c9efb00e0004d07.dockerfile"}