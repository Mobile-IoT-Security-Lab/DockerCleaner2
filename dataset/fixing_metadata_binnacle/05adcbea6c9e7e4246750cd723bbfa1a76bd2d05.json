{"seed":1421814696,"processedDockerfileHash":"cfb349a9c54166382bc89c128b4e2e0e","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["do-not-use-apt-get-update-alone","pin-package-manager-versions-npm","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"#  @NAME=all-in-one\nFROM turbinelabs/envoy-simple:0.19.0\nFROM turbinelabs/envtemplate:0.19.0\nFROM turbinelabs/rotor:0.19.0\nFROM phusion/baseimage:0.10.2\n#   upgrade/install deps\nRUN :\nRUN DEBIAN_FRONTEND=\"noninteractive\" apt-get upgrade -y\nRUN DEBIAN_FRONTEND=\"noninteractive\" apt-get install -y git\n#   install node.js\nRUN curl -sL https://deb.nodesource.com/setup_10.x | bash -\nRUN DEBIAN_FRONTEND=\"noninteractive\" apt-get install -y nodejs\n#   install http-server\nRUN npm install http-server@14.1.1 -g\n#   install go\nRUN curl -s -L -O https://storage.googleapis.com/golang/go1.10.3.linux-amd64.tar.gz\nRUN tar -C /usr/local -xzf go1.10.3.linux-amd64.tar.gz\nENV GOPATH=\"/go\"\nENV PATH=\"\\\"$PATH:/usr/local/go/bin:$GOPATH/bin\\\"\"\n#   tbnctl\nRUN go get github.com/turbinelabs/tbnctl\nRUN go install github.com/turbinelabs/tbnctl\nRUN mv $GOPATH/bin/tbnctl /usr/local/bin/tbnctl\n#   all-in-one driver\nCOPY driver/main/all-in-one-driver $GOPATH/src/github.com/turbinelabs/all-in-one-driver\nRUN go get github.com/turbinelabs/all-in-one-driver\nRUN go install github.com/turbinelabs/all-in-one-driver\nRUN mv $GOPATH/bin/all-in-one-driver /usr/local/bin/all-in-one-driver\nRUN mkdir -p /etc/service/driver\nCOPY bin/start-driver.sh /etc/service/driver/run\nRUN chmod +x /etc/service/driver/run\n#   cleanup go\nRUN rm -rf /usr/local/go\nRUN rm -rf $GOPATH\n#   cleanup git\nRUN DEBIAN_FRONTEND=\"noninteractive\" apt-get remove -y git\nRUN DEBIAN_FRONTEND=\"noninteractive\" apt-get autoremove -y\n#   Clean up APT when done.\nRUN apt-get clean \\\n && rm -rf /var/lib/apt/lists* /tmp/* /var/tmp/*\n#   install envoy\nCOPY --from=0 /usr/local/bin/envoy /usr/local/bin/envoy\nCOPY --from=0 /usr/local/bin/start-envoy.sh /usr/local/bin/start-envoy.sh\nCOPY --from=0 /etc/envoy/bootstrap.conf.tmpl /etc/envoy/bootstrap.conf.tmpl\nCOPY bin/envoy.sh /etc/service/envoy/run\nRUN chmod +x /etc/service/envoy/run\nRUN mkdir -p /var/log/envoy\n#   install envtemplate\nCOPY --from=1 /usr/local/bin/envtemplate /usr/local/bin/envtemplate\n#   all-in-one shell utils\nCOPY scripts/envcheck.sh /usr/local/bin/envcheck.sh\nRUN chmod +x /usr/local/bin/envcheck.sh\n#   rotor\nENV ROTOR_STATS_SOURCE=\"all-in-one\"\nCOPY --from=2 /usr/local/bin/rotor* /usr/local/bin/\nCOPY --from=2 /usr/local/bin/rotor.sh /usr/local/bin/rotor.sh\nCOPY config/clusters.yml /opt/rotor/clusters.yml\nCOPY bin/rotor.sh /etc/service/rotor/run\nRUN chmod +x /etc/service/rotor/run\n#   all-in-one server\nCOPY server/server.js /opt/all-in-one/server/server.js\nCOPY server/main.js /opt/all-in-one/server/main.js\nRUN mkdir -p /etc/service/blue\nCOPY bin/start-blue.sh /etc/service/blue/run\nRUN chmod +x /etc/service/blue/run\nRUN mkdir -p /etc/service/green\nCOPY bin/start-green.sh /etc/service/green/run\nRUN chmod +x /etc/service/green/run\nRUN mkdir -p /etc/service/yellow\nCOPY bin/start-yellow.sh /etc/service/yellow/run\nRUN chmod +x /etc/service/yellow/run\n#   all-in-one client\nENV ALL_IN_ONE_CLIENT_DIR=\"/opt/all-in-one/client\"\nENV ALL_IN_ONE_CLIENT_PORT=\"8083\"\nCOPY client/create-workers.js /opt/all-in-one/client/create-workers.js\nCOPY client/index.html /opt/all-in-one/client/index.html\nCOPY client/start.sh /etc/service/client/run\nRUN chmod +x /etc/service/client/run\n#   check time\nCOPY bin/check-time.sh /etc/my_init.d/01_check-time.sh\nRUN chmod +x /etc/my_init.d/01_check-time.sh\n#   init\nCOPY bin/init.sh /etc/my_init.d/02_init.sh\nRUN chmod +x /etc/my_init.d/02_init.sh\n#   Document that the service listens on port 80 and the admin port\nEXPOSE 80/tcp 9999/tcp\n#   Use baseimage-docker's init system.\nCMD [\"/sbin/my_init\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"# @NAME=all-in-one\nFROM turbinelabs/envoy-simple:0.19.0\nFROM turbinelabs/envtemplate:0.19.0\nFROM turbinelabs/rotor:0.19.0\nFROM phusion/baseimage:0.10.2\n#  upgrade/install deps\nRUN apt-get update\nRUN DEBIAN_FRONTEND=\"noninteractive\" apt-get upgrade -y\nRUN DEBIAN_FRONTEND=\"noninteractive\" apt-get install -y git\n#  install node.js\nRUN curl -sL https://deb.nodesource.com/setup_10.x | bash -\nRUN DEBIAN_FRONTEND=\"noninteractive\" apt-get install -y nodejs\n#  install http-server\nRUN npm install http-server -g\n#  install go\nRUN curl -s -L -O https://storage.googleapis.com/golang/go1.10.3.linux-amd64.tar.gz\nRUN tar -C /usr/local -xzf go1.10.3.linux-amd64.tar.gz\nENV GOPATH=\"/go\"\nENV PATH=\"\\\"$PATH:/usr/local/go/bin:$GOPATH/bin\\\"\"\n#  tbnctl\nRUN go get github.com/turbinelabs/tbnctl\nRUN go install github.com/turbinelabs/tbnctl\nRUN mv $GOPATH/bin/tbnctl /usr/local/bin/tbnctl\n#  all-in-one driver\nADD driver/main/all-in-one-driver $GOPATH/src/github.com/turbinelabs/all-in-one-driver\nRUN go get github.com/turbinelabs/all-in-one-driver\nRUN go install github.com/turbinelabs/all-in-one-driver\nRUN mv $GOPATH/bin/all-in-one-driver /usr/local/bin/all-in-one-driver\nRUN mkdir -p /etc/service/driver\nADD bin/start-driver.sh /etc/service/driver/run\nRUN chmod +x /etc/service/driver/run\n#  cleanup go\nRUN rm -rf /usr/local/go\nRUN rm -rf $GOPATH\n#  cleanup git\nRUN DEBIAN_FRONTEND=\"noninteractive\" apt-get remove -y git\nRUN DEBIAN_FRONTEND=\"noninteractive\" apt-get autoremove -y\n#  Clean up APT when done.\nRUN apt-get clean \\\n && rm -rf /var/lib/apt/lists* /tmp/* /var/tmp/*\n#  install envoy\nCOPY --from=0 /usr/local/bin/envoy /usr/local/bin/envoy\nCOPY --from=0 /usr/local/bin/start-envoy.sh /usr/local/bin/start-envoy.sh\nCOPY --from=0 /etc/envoy/bootstrap.conf.tmpl /etc/envoy/bootstrap.conf.tmpl\nADD bin/envoy.sh /etc/service/envoy/run\nRUN chmod +x /etc/service/envoy/run\nRUN mkdir -p /var/log/envoy\n#  install envtemplate\nCOPY --from=1 /usr/local/bin/envtemplate /usr/local/bin/envtemplate\n#  all-in-one shell utils\nADD scripts/envcheck.sh /usr/local/bin/envcheck.sh\nRUN chmod +x /usr/local/bin/envcheck.sh\n#  rotor\nENV ROTOR_STATS_SOURCE=\"all-in-one\"\nCOPY --from=2 /usr/local/bin/rotor* /usr/local/bin/\nCOPY --from=2 /usr/local/bin/rotor.sh /usr/local/bin/rotor.sh\nADD config/clusters.yml /opt/rotor/clusters.yml\nADD bin/rotor.sh /etc/service/rotor/run\nRUN chmod +x /etc/service/rotor/run\n#  all-in-one server\nADD server/server.js /opt/all-in-one/server/server.js\nADD server/main.js /opt/all-in-one/server/main.js\nRUN mkdir -p /etc/service/blue\nADD bin/start-blue.sh /etc/service/blue/run\nRUN chmod +x /etc/service/blue/run\nRUN mkdir -p /etc/service/green\nADD bin/start-green.sh /etc/service/green/run\nRUN chmod +x /etc/service/green/run\nRUN mkdir -p /etc/service/yellow\nADD bin/start-yellow.sh /etc/service/yellow/run\nRUN chmod +x /etc/service/yellow/run\n#  all-in-one client\nENV ALL_IN_ONE_CLIENT_DIR=\"/opt/all-in-one/client\"\nENV ALL_IN_ONE_CLIENT_PORT=\"8083\"\nADD client/create-workers.js /opt/all-in-one/client/create-workers.js\nADD client/index.html /opt/all-in-one/client/index.html\nADD client/start.sh /etc/service/client/run\nRUN chmod +x /etc/service/client/run\n#  check time\nADD bin/check-time.sh /etc/my_init.d/01_check-time.sh\nRUN chmod +x /etc/my_init.d/01_check-time.sh\n#  init\nADD bin/init.sh /etc/my_init.d/02_init.sh\nRUN chmod +x /etc/my_init.d/02_init.sh\n#  Document that the service listens on port 80 and the admin port\nEXPOSE 80/tcp 9999/tcp\n#  Use baseimage-docker's init system.\nCMD [\"/sbin/my_init\"]\n","injectedSmells":[],"originalDockerfileHash":"77d4ed0b226162638ec9801754bf2ba8","successfullyInjectedSmells":[],"originalDockerfileUglified":"#  @NAME=all-in-one\nFROM turbinelabs/envoy-simple:0.19.0\nFROM turbinelabs/envtemplate:0.19.0\nFROM turbinelabs/rotor:0.19.0\nFROM phusion/baseimage:0.10.2\n#   upgrade/install deps\nRUN apt-get update\nRUN DEBIAN_FRONTEND=\"noninteractive\" apt-get upgrade -y\nRUN DEBIAN_FRONTEND=\"noninteractive\" apt-get install -y git\n#   install node.js\nRUN curl -sL https://deb.nodesource.com/setup_10.x | bash -\nRUN DEBIAN_FRONTEND=\"noninteractive\" apt-get install -y nodejs\n#   install http-server\nRUN npm install http-server -g\n#   install go\nRUN curl -s -L -O https://storage.googleapis.com/golang/go1.10.3.linux-amd64.tar.gz\nRUN tar -C /usr/local -xzf go1.10.3.linux-amd64.tar.gz\nENV GOPATH=\"/go\"\nENV PATH=\"\\\"$PATH:/usr/local/go/bin:$GOPATH/bin\\\"\"\n#   tbnctl\nRUN go get github.com/turbinelabs/tbnctl\nRUN go install github.com/turbinelabs/tbnctl\nRUN mv $GOPATH/bin/tbnctl /usr/local/bin/tbnctl\n#   all-in-one driver\nADD driver/main/all-in-one-driver $GOPATH/src/github.com/turbinelabs/all-in-one-driver\nRUN go get github.com/turbinelabs/all-in-one-driver\nRUN go install github.com/turbinelabs/all-in-one-driver\nRUN mv $GOPATH/bin/all-in-one-driver /usr/local/bin/all-in-one-driver\nRUN mkdir -p /etc/service/driver\nADD bin/start-driver.sh /etc/service/driver/run\nRUN chmod +x /etc/service/driver/run\n#   cleanup go\nRUN rm -rf /usr/local/go\nRUN rm -rf $GOPATH\n#   cleanup git\nRUN DEBIAN_FRONTEND=\"noninteractive\" apt-get remove -y git\nRUN DEBIAN_FRONTEND=\"noninteractive\" apt-get autoremove -y\n#   Clean up APT when done.\nRUN apt-get clean \\\n && rm -rf /var/lib/apt/lists* /tmp/* /var/tmp/*\n#   install envoy\nCOPY --from=0 /usr/local/bin/envoy /usr/local/bin/envoy\nCOPY --from=0 /usr/local/bin/start-envoy.sh /usr/local/bin/start-envoy.sh\nCOPY --from=0 /etc/envoy/bootstrap.conf.tmpl /etc/envoy/bootstrap.conf.tmpl\nADD bin/envoy.sh /etc/service/envoy/run\nRUN chmod +x /etc/service/envoy/run\nRUN mkdir -p /var/log/envoy\n#   install envtemplate\nCOPY --from=1 /usr/local/bin/envtemplate /usr/local/bin/envtemplate\n#   all-in-one shell utils\nADD scripts/envcheck.sh /usr/local/bin/envcheck.sh\nRUN chmod +x /usr/local/bin/envcheck.sh\n#   rotor\nENV ROTOR_STATS_SOURCE=\"all-in-one\"\nCOPY --from=2 /usr/local/bin/rotor* /usr/local/bin/\nCOPY --from=2 /usr/local/bin/rotor.sh /usr/local/bin/rotor.sh\nADD config/clusters.yml /opt/rotor/clusters.yml\nADD bin/rotor.sh /etc/service/rotor/run\nRUN chmod +x /etc/service/rotor/run\n#   all-in-one server\nADD server/server.js /opt/all-in-one/server/server.js\nADD server/main.js /opt/all-in-one/server/main.js\nRUN mkdir -p /etc/service/blue\nADD bin/start-blue.sh /etc/service/blue/run\nRUN chmod +x /etc/service/blue/run\nRUN mkdir -p /etc/service/green\nADD bin/start-green.sh /etc/service/green/run\nRUN chmod +x /etc/service/green/run\nRUN mkdir -p /etc/service/yellow\nADD bin/start-yellow.sh /etc/service/yellow/run\nRUN chmod +x /etc/service/yellow/run\n#   all-in-one client\nENV ALL_IN_ONE_CLIENT_DIR=\"/opt/all-in-one/client\"\nENV ALL_IN_ONE_CLIENT_PORT=\"8083\"\nADD client/create-workers.js /opt/all-in-one/client/create-workers.js\nADD client/index.html /opt/all-in-one/client/index.html\nADD client/start.sh /etc/service/client/run\nRUN chmod +x /etc/service/client/run\n#   check time\nADD bin/check-time.sh /etc/my_init.d/01_check-time.sh\nRUN chmod +x /etc/my_init.d/01_check-time.sh\n#   init\nADD bin/init.sh /etc/my_init.d/02_init.sh\nRUN chmod +x /etc/my_init.d/02_init.sh\n#   Document that the service listens on port 80 and the admin port\nEXPOSE 80/tcp 9999/tcp\n#   Use baseimage-docker's init system.\nCMD [\"/sbin/my_init\"]\n","originalDockerfileUglifiedHash":"60d6da5d2be29eb2b1f61b00e96b049d","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/05adcbea6c9e7e4246750cd723bbfa1a76bd2d05.dockerfile"}