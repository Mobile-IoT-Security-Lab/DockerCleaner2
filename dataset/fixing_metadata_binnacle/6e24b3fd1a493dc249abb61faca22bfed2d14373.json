{"seed":3530132302,"processedDockerfileHash":"d1a8e30f4fd3d89bc77881c306d936d4","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM gcr.io/google-appengine/debian9:latest\n#   explicitly set user/group IDs\nRUN groupadd -r cassandra --gid=999 \\\n && useradd -r -g cassandra --uid=999 cassandra\nRUN set -ex ; apt-get update ; if ! command -v gpg > /dev/null; then apt-get install --no-install-recommends gnupg=2.2.40-1ubuntu2 dirmngr=2.2.40-1ubuntu2 -y ; fi ; if ! command -v free > /dev/null; then apt-get install --no-install-recommends procps=2:4.0.3-1ubuntu1 -y ; fi ; rm -rf /var/lib/apt/lists/*\n#   grab gosu for easy step-down from root\nENV GOSU_VERSION=\"1.10\"\nENV GOSU_GPG=\"B42F6819007F00F88E364FD4036A9C25BF357DD4\"\nRUN set -x \\\n && apt-get update \\\n && apt-get install --no-install-recommends ca-certificates=20230311 wget=1.21.3-1ubuntu1 -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && wget -q -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;)\" \\\n && wget -q -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;).asc\" \\\n && wget -q -O /usr/local/src/gosu.tar.gz \"https://github.com/tianon/gosu/archive/$GOSU_VERSION.tar.gz\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && found='' \\\n && for server in pool.sks-keyservers.net na.pool.sks-keyservers.net eu.pool.sks-keyservers.net oc.pool.sks-keyservers.net ha.pool.sks-keyservers.net hkp://p80.pool.sks-keyservers.net:80 hkp://keyserver.ubuntu.com:80 pgp.mit.edu; do gpg --no-tty --keyserver $server --recv-keys $GOSU_GPG \\\n && found=yes \\\n && break ; done ; test -n \"$found\" \\\n && gpg --no-tty --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \\\n && rm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc \\\n && chmod +x /usr/local/bin/gosu \\\n && gosu nobody true \\\n && apt-get purge -y --auto-remove ca-certificates wget\n#   solves warning: \"jemalloc shared library could not be preloaded to speed up memory allocations\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends libjemalloc1 -y \\\n && rm -rf /var/lib/apt/lists/*\n#   https://wiki.apache.org/cassandra/DebianPackaging#Adding_Repository_Keys\nENV GPG_KEYS=\"514A2AD631A57A16DD0047EC749D6EEC0353B12C A26E528B271F19B9E5D8E19EA278B781FE4B2BDA\"\nRUN set -ex ; export GNUPGHOME=\"$( mktemp -d ;)\" ; for key in $GPG_KEYS; do found='' \\\n && for server in pool.sks-keyservers.net na.pool.sks-keyservers.net eu.pool.sks-keyservers.net oc.pool.sks-keyservers.net ha.pool.sks-keyservers.net hkp://p80.pool.sks-keyservers.net:80 hkp://keyserver.ubuntu.com:80 pgp.mit.edu; do gpg --no-tty --keyserver $server --recv-keys \"${key}\" \\\n && found=yes \\\n && break ; done ;test -n \"$found\" ; done ; gpg --no-tty --export $GPG_KEYS > /etc/apt/trusted.gpg.d/cassandra.gpg; rm -rf \"$GNUPGHOME\" ; apt-key list\nRUN echo 3.0.18 | sed 's-\\([^.]\\+\\)\\.\\([^.]\\+\\).*$-deb http://www.apache.org/dist/cassandra/debian \\1\\2x main-' >> /etc/apt/sources.list.d/cassandra.list\nENV CASSANDRA_VERSION=\"3.0.18\"\nRUN set -x ; if [ \"${CASSANDRA_VERSION%%.*}\" = \"3\" ] ; then apt-get update \\\n && apt-get upgrade ;apt-get install --no-install-recommends openjdk-8-jre-headless=8u362-ga-0ubuntu2 ntp=1:4.2.8p15+dfsg-2~1.2.2+dfsg1-1 -y ; fi\nENV JMX_EXPORTER_VERSION=\"0.11.0\"\nENV JMX_EXPORTER_PATH=\"/opt/jmx-exporter\"\nENV JMX_EXPORTER_JAR=\"jmx_prometheus_javaagent-${JMX_EXPORTER_VERSION}.jar\"\nENV JMX_EXPORTER_AGENT=\"${JMX_EXPORTER_PATH}/${JMX_EXPORTER_JAR}\"\nENV JMX_EXPORTER_CONFIG=\"${JMX_EXPORTER_PATH}/cassandra.yml\"\nENV JMX_EXPORTER_LICENSE=\"${JMX_EXPORTER_PATH}/LICENSE\"\nENV JMX_EXPORTER_NOTICE=\"${JMX_EXPORTER_PATH}/NOTICE\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends ca-certificates=20230311 wget=1.21.3-1ubuntu1 -y \\\n && mkdir -p $JMX_EXPORTER_PATH \\\n && wget -O $JMX_EXPORTER_AGENT https://repo1.maven.org/maven2/io/prometheus/jmx/jmx_prometheus_javaagent/$JMX_EXPORTER_VERSION/$JMX_EXPORTER_JAR \\\n && wget -O $JMX_EXPORTER_CONFIG https://raw.githubusercontent.com/prometheus/jmx_exporter/master/example_configs/cassandra.yml \\\n && wget -O $JMX_EXPORTER_LICENSE https://raw.githubusercontent.com/prometheus/jmx_exporter/master/LICENSE \\\n && wget -O $JMX_EXPORTER_NOTICE https://raw.githubusercontent.com/prometheus/jmx_exporter/master/NOTICE \\\n && apt-get purge -y --auto-remove ca-certificates wget \\\n && apt-get install --no-install-recommends cassandra=\"$CASSANDRA_VERSION\" -y \\\n && rm -rf /var/lib/apt/lists/*\n#   https://issues.apache.org/jira/browse/CASSANDRA-11661\nRUN sed -ri 's/^(JVM_PATCH_VERSION)=.*/\\1=25/' /etc/cassandra/cassandra-env.sh\nENV CASSANDRA_CONFIG=\"/etc/cassandra\"\nCOPY docker-entrypoint.sh /docker-entrypoint.sh\nENTRYPOINT [\"/docker-entrypoint.sh\"]\nRUN mkdir -p /var/lib/cassandra \"$CASSANDRA_CONFIG\" \\\n && chown -R cassandra:cassandra /var/lib/cassandra \"$CASSANDRA_CONFIG\" \"$JMX_EXPORTER_PATH\" \\\n && chmod 777 /var/lib/cassandra \"$CASSANDRA_CONFIG\" \"$JMX_EXPORTER_PATH\"\nVOLUME /var/lib/cassandra\n#   7000: intra-node communication\n#   7001: TLS intra-node communication\n#   7199: JMX\n#   9042: CQL\n#   9160: thrift service\n#   9404: JMX Exporter for Prometheus metrics\nEXPOSE 7000/tcp 7001/tcp 7199/tcp 9042/tcp 9160/tcp 9404/tcp\nCMD [\"cassandra\", \"-f\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM gcr.io/google-appengine/debian9:latest\n#  explicitly set user/group IDs\nRUN groupadd -r cassandra --gid=999 \\\n && useradd -r -g cassandra --uid=999 cassandra\nRUN set -ex ; apt-get update ; if ! command -v gpg > /dev/null; then apt-get install --no-install-recommends gnupg dirmngr -y ; fi ; if ! command -v free > /dev/null; then apt-get install --no-install-recommends procps -y ; fi ; rm -rf /var/lib/apt/lists/*\n#  grab gosu for easy step-down from root\nENV GOSU_VERSION=\"1.10\"\nENV GOSU_GPG=\"B42F6819007F00F88E364FD4036A9C25BF357DD4\"\nRUN set -x \\\n && apt-get update \\\n && apt-get install --no-install-recommends ca-certificates wget -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && wget -q -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;)\" \\\n && wget -q -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;).asc\" \\\n && wget -q -O /usr/local/src/gosu.tar.gz \"https://github.com/tianon/gosu/archive/$GOSU_VERSION.tar.gz\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && found='' \\\n && for server in pool.sks-keyservers.net na.pool.sks-keyservers.net eu.pool.sks-keyservers.net oc.pool.sks-keyservers.net ha.pool.sks-keyservers.net hkp://p80.pool.sks-keyservers.net:80 hkp://keyserver.ubuntu.com:80 pgp.mit.edu; do gpg --no-tty --keyserver $server --recv-keys $GOSU_GPG \\\n && found=yes \\\n && break ; done ; test -n \"$found\" \\\n && gpg --no-tty --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \\\n && rm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc \\\n && chmod +x /usr/local/bin/gosu \\\n && gosu nobody true \\\n && apt-get purge -y --auto-remove ca-certificates wget\n#  solves warning: \"jemalloc shared library could not be preloaded to speed up memory allocations\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends libjemalloc1 -y \\\n && rm -rf /var/lib/apt/lists/*\n#  https://wiki.apache.org/cassandra/DebianPackaging#Adding_Repository_Keys\nENV GPG_KEYS=\"514A2AD631A57A16DD0047EC749D6EEC0353B12C A26E528B271F19B9E5D8E19EA278B781FE4B2BDA\"\nRUN set -ex ; export GNUPGHOME=\"$( mktemp -d ;)\" ; for key in $GPG_KEYS; do found='' \\\n && for server in pool.sks-keyservers.net na.pool.sks-keyservers.net eu.pool.sks-keyservers.net oc.pool.sks-keyservers.net ha.pool.sks-keyservers.net hkp://p80.pool.sks-keyservers.net:80 hkp://keyserver.ubuntu.com:80 pgp.mit.edu; do gpg --no-tty --keyserver $server --recv-keys \"${key}\" \\\n && found=yes \\\n && break ; done ;test -n \"$found\" ; done ; gpg --no-tty --export $GPG_KEYS > /etc/apt/trusted.gpg.d/cassandra.gpg; rm -rf \"$GNUPGHOME\" ; apt-key list\nRUN echo 3.0.18 | sed 's-\\([^.]\\+\\)\\.\\([^.]\\+\\).*$-deb http://www.apache.org/dist/cassandra/debian \\1\\2x main-' >> /etc/apt/sources.list.d/cassandra.list\nENV CASSANDRA_VERSION=\"3.0.18\"\nRUN set -x ; if [ \"${CASSANDRA_VERSION%%.*}\" = \"3\" ] ; then apt-get update \\\n && apt-get upgrade ;apt-get install openjdk-8-jre-headless ntp -y ; fi\nENV JMX_EXPORTER_VERSION=\"0.11.0\"\nENV JMX_EXPORTER_PATH=\"/opt/jmx-exporter\"\nENV JMX_EXPORTER_JAR=\"jmx_prometheus_javaagent-${JMX_EXPORTER_VERSION}.jar\"\nENV JMX_EXPORTER_AGENT=\"${JMX_EXPORTER_PATH}/${JMX_EXPORTER_JAR}\"\nENV JMX_EXPORTER_CONFIG=\"${JMX_EXPORTER_PATH}/cassandra.yml\"\nENV JMX_EXPORTER_LICENSE=\"${JMX_EXPORTER_PATH}/LICENSE\"\nENV JMX_EXPORTER_NOTICE=\"${JMX_EXPORTER_PATH}/NOTICE\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends ca-certificates wget -y \\\n && mkdir -p $JMX_EXPORTER_PATH \\\n && wget -O $JMX_EXPORTER_AGENT https://repo1.maven.org/maven2/io/prometheus/jmx/jmx_prometheus_javaagent/$JMX_EXPORTER_VERSION/$JMX_EXPORTER_JAR \\\n && wget -O $JMX_EXPORTER_CONFIG https://raw.githubusercontent.com/prometheus/jmx_exporter/master/example_configs/cassandra.yml \\\n && wget -O $JMX_EXPORTER_LICENSE https://raw.githubusercontent.com/prometheus/jmx_exporter/master/LICENSE \\\n && wget -O $JMX_EXPORTER_NOTICE https://raw.githubusercontent.com/prometheus/jmx_exporter/master/NOTICE \\\n && apt-get purge -y --auto-remove ca-certificates wget \\\n && apt-get install cassandra=\"$CASSANDRA_VERSION\" -y \\\n && rm -rf /var/lib/apt/lists/*\n#  https://issues.apache.org/jira/browse/CASSANDRA-11661\nRUN sed -ri 's/^(JVM_PATCH_VERSION)=.*/\\1=25/' /etc/cassandra/cassandra-env.sh\nENV CASSANDRA_CONFIG=\"/etc/cassandra\"\nCOPY docker-entrypoint.sh /docker-entrypoint.sh\nENTRYPOINT [\"/docker-entrypoint.sh\"]\nRUN mkdir -p /var/lib/cassandra \"$CASSANDRA_CONFIG\" \\\n && chown -R cassandra:cassandra /var/lib/cassandra \"$CASSANDRA_CONFIG\" \"$JMX_EXPORTER_PATH\" \\\n && chmod 777 /var/lib/cassandra \"$CASSANDRA_CONFIG\" \"$JMX_EXPORTER_PATH\"\nVOLUME /var/lib/cassandra\n#  7000: intra-node communication\n#  7001: TLS intra-node communication\n#  7199: JMX\n#  9042: CQL\n#  9160: thrift service\n#  9404: JMX Exporter for Prometheus metrics\nEXPOSE 7000/tcp 7001/tcp 7199/tcp 9042/tcp 9160/tcp 9404/tcp\nCMD [\"cassandra\", \"-f\"]\n","injectedSmells":[],"originalDockerfileHash":"ff8c6e5bf9e94e3d7e8fb563d2698b4e","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM gcr.io/google-appengine/debian9:latest\n#   explicitly set user/group IDs\nRUN groupadd -r cassandra --gid=999 \\\n && useradd -r -g cassandra --uid=999 cassandra\nRUN set -ex ; apt-get update ; if ! command -v gpg > /dev/null; then apt-get install --no-install-recommends gnupg dirmngr -y ; fi ; if ! command -v free > /dev/null; then apt-get install --no-install-recommends procps -y ; fi ; rm -rf /var/lib/apt/lists/*\n#   grab gosu for easy step-down from root\nENV GOSU_VERSION=\"1.10\"\nENV GOSU_GPG=\"B42F6819007F00F88E364FD4036A9C25BF357DD4\"\nRUN set -x \\\n && apt-get update \\\n && apt-get install --no-install-recommends ca-certificates wget -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && wget -q -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;)\" \\\n && wget -q -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;).asc\" \\\n && wget -q -O /usr/local/src/gosu.tar.gz \"https://github.com/tianon/gosu/archive/$GOSU_VERSION.tar.gz\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && found='' \\\n && for server in pool.sks-keyservers.net na.pool.sks-keyservers.net eu.pool.sks-keyservers.net oc.pool.sks-keyservers.net ha.pool.sks-keyservers.net hkp://p80.pool.sks-keyservers.net:80 hkp://keyserver.ubuntu.com:80 pgp.mit.edu; do gpg --no-tty --keyserver $server --recv-keys $GOSU_GPG \\\n && found=yes \\\n && break ; done ; test -n \"$found\" \\\n && gpg --no-tty --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \\\n && rm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc \\\n && chmod +x /usr/local/bin/gosu \\\n && gosu nobody true \\\n && apt-get purge -y --auto-remove ca-certificates wget\n#   solves warning: \"jemalloc shared library could not be preloaded to speed up memory allocations\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends libjemalloc1 -y \\\n && rm -rf /var/lib/apt/lists/*\n#   https://wiki.apache.org/cassandra/DebianPackaging#Adding_Repository_Keys\nENV GPG_KEYS=\"514A2AD631A57A16DD0047EC749D6EEC0353B12C A26E528B271F19B9E5D8E19EA278B781FE4B2BDA\"\nRUN set -ex ; export GNUPGHOME=\"$( mktemp -d ;)\" ; for key in $GPG_KEYS; do found='' \\\n && for server in pool.sks-keyservers.net na.pool.sks-keyservers.net eu.pool.sks-keyservers.net oc.pool.sks-keyservers.net ha.pool.sks-keyservers.net hkp://p80.pool.sks-keyservers.net:80 hkp://keyserver.ubuntu.com:80 pgp.mit.edu; do gpg --no-tty --keyserver $server --recv-keys \"${key}\" \\\n && found=yes \\\n && break ; done ;test -n \"$found\" ; done ; gpg --no-tty --export $GPG_KEYS > /etc/apt/trusted.gpg.d/cassandra.gpg; rm -rf \"$GNUPGHOME\" ; apt-key list\nRUN echo 3.0.18 | sed 's-\\([^.]\\+\\)\\.\\([^.]\\+\\).*$-deb http://www.apache.org/dist/cassandra/debian \\1\\2x main-' >> /etc/apt/sources.list.d/cassandra.list\nENV CASSANDRA_VERSION=\"3.0.18\"\nRUN set -x ; if [ \"${CASSANDRA_VERSION%%.*}\" = \"3\" ] ; then apt-get update \\\n && apt-get upgrade ;apt-get install openjdk-8-jre-headless ntp -y ; fi\nENV JMX_EXPORTER_VERSION=\"0.11.0\"\nENV JMX_EXPORTER_PATH=\"/opt/jmx-exporter\"\nENV JMX_EXPORTER_JAR=\"jmx_prometheus_javaagent-${JMX_EXPORTER_VERSION}.jar\"\nENV JMX_EXPORTER_AGENT=\"${JMX_EXPORTER_PATH}/${JMX_EXPORTER_JAR}\"\nENV JMX_EXPORTER_CONFIG=\"${JMX_EXPORTER_PATH}/cassandra.yml\"\nENV JMX_EXPORTER_LICENSE=\"${JMX_EXPORTER_PATH}/LICENSE\"\nENV JMX_EXPORTER_NOTICE=\"${JMX_EXPORTER_PATH}/NOTICE\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends ca-certificates wget -y \\\n && mkdir -p $JMX_EXPORTER_PATH \\\n && wget -O $JMX_EXPORTER_AGENT https://repo1.maven.org/maven2/io/prometheus/jmx/jmx_prometheus_javaagent/$JMX_EXPORTER_VERSION/$JMX_EXPORTER_JAR \\\n && wget -O $JMX_EXPORTER_CONFIG https://raw.githubusercontent.com/prometheus/jmx_exporter/master/example_configs/cassandra.yml \\\n && wget -O $JMX_EXPORTER_LICENSE https://raw.githubusercontent.com/prometheus/jmx_exporter/master/LICENSE \\\n && wget -O $JMX_EXPORTER_NOTICE https://raw.githubusercontent.com/prometheus/jmx_exporter/master/NOTICE \\\n && apt-get purge -y --auto-remove ca-certificates wget \\\n && apt-get install cassandra=\"$CASSANDRA_VERSION\" -y \\\n && rm -rf /var/lib/apt/lists/*\n#   https://issues.apache.org/jira/browse/CASSANDRA-11661\nRUN sed -ri 's/^(JVM_PATCH_VERSION)=.*/\\1=25/' /etc/cassandra/cassandra-env.sh\nENV CASSANDRA_CONFIG=\"/etc/cassandra\"\nCOPY docker-entrypoint.sh /docker-entrypoint.sh\nENTRYPOINT [\"/docker-entrypoint.sh\"]\nRUN mkdir -p /var/lib/cassandra \"$CASSANDRA_CONFIG\" \\\n && chown -R cassandra:cassandra /var/lib/cassandra \"$CASSANDRA_CONFIG\" \"$JMX_EXPORTER_PATH\" \\\n && chmod 777 /var/lib/cassandra \"$CASSANDRA_CONFIG\" \"$JMX_EXPORTER_PATH\"\nVOLUME /var/lib/cassandra\n#   7000: intra-node communication\n#   7001: TLS intra-node communication\n#   7199: JMX\n#   9042: CQL\n#   9160: thrift service\n#   9404: JMX Exporter for Prometheus metrics\nEXPOSE 7000/tcp 7001/tcp 7199/tcp 9042/tcp 9160/tcp 9404/tcp\nCMD [\"cassandra\", \"-f\"]\n","originalDockerfileUglifiedHash":"a309a3835d26df8f1783b8c7f5140563","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/6e24b3fd1a493dc249abb61faca22bfed2d14373.dockerfile"}