{"seed":1114068449,"processedDockerfileHash":"9a128e501c9b56f74249d29dfa23b924","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM alpine:edge AS builder\n#   Copied from https://github.com/AlexMasterov/dockerfiles/blob/master/alpine-libv8/7.4/Dockerfile\n#   I can't thank @AlexMasterov++ enough! V8 is a pig to build :-(\nARG BUILD_COMMIT=c1ab94d375f10578b3d207eca8fe4fb35274efb7\nARG BUILDTOOLS_COMMIT=6fbda1b24c1893a893b17aa219b765b9e7c801d8\nARG ICU_COMMIT=07e7295d964399ee7bee16a3ac7ca5a053b2cf0a\nARG GTEST_COMMIT=879ac092fde0a19e1b3a61b2546b2a422b1528bc\nARG TRACE_EVENT_COMMIT=e31a1706337ccb9a658b37d29a018c81695c6518\nARG CLANG_COMMIT=3114fbc11f9644c54dd0a4cdbfa867bac50ff983\nARG JINJA2_COMMIT=b41863e42637544c2941b574c7877d3e1f663e25\nARG MARKUPSAFE_COMMIT=8f45f5cfa0009d2a70589bcda0349b8cb2b72783\nARG CATAPULT_COMMIT=b6cc5a6baf93cfa6feeb240eea75c454506b0c3c\nARG GN_SOURCE=https://www.dropbox.com/s/3ublwqh4h9dit9t/alpine-gn-80e00be.tar.gz\nARG V8_SOURCE=https://chromium.googlesource.com/v8/v8/+archive/7.4.51.tar.gz\nRUN set -x \\\n && apk add at-spi2-core-dev=2.48.0-r0 curl=8.0.1-r1 g++=12.2.1_git20220924-r9 gcc=12.2.1_git20220924-r9 glib-dev=2.76.1-r0 icu-dev=72.1-r2 linux-headers=6.2-r0 make=4.4.1-r0 ninja python tar=1.34-r2 xz=5.4.2-r0 --update --virtual .v8-build-dependencies \\\n && : \"---------- V8 ----------\" \\\n && mkdir /v8 \\\n && curl -fSL --connect-timeout 30 ${V8_SOURCE} | tar xmz -C /v8 \\\n && : \"---------- Dependencies ----------\" \\\n && DEPS=\" chromium/buildtools.git@${BUILDTOOLS_COMMIT}:buildtools; chromium/src/build.git@${BUILD_COMMIT}:build; chromium/src/base/trace_event/common.git@${TRACE_EVENT_COMMIT}:base/trace_event/common; chromium/src/tools/clang.git@${CLANG_COMMIT}:tools/clang; chromium/src/third_party/jinja2.git@${JINJA2_COMMIT}:third_party/jinja2; chromium/src/third_party/markupsafe.git@${MARKUPSAFE_COMMIT}:third_party/markupsafe; chromium/deps/icu.git@${ICU_COMMIT}:third_party/icu; external/gyp.git@${GYP_COMMIT}:tools/gyp; external/github.com/google/googletest.git@${GTEST_COMMIT}:third_party/googletest/src \" \\\n && while [ \"${DEPS}\" ] ; do dep=\"${DEPS%%;*}\" link=\"${dep%%:*}\" url=\"${link%%@*}\" url=\"${url#\"${url%%[![:space:]]*}\"}\" hash=\"${link#*@}\" dir=\"${dep#*:}\" ;[ -n \"${dep}\" ] \\\n && dep_url=\"https://chromium.googlesource.com/${url}/+archive/${hash}.tar.gz\" \\\n && dep_dir=\"/v8/${dir}\" \\\n && mkdir -p ${dep_dir} \\\n && curl -fSL --connect-timeout 30 ${dep_url} | tar xmz -C ${dep_dir} &;[ \"${DEPS}\" = \"${dep}\" ] \\\n && DEPS='' || DEPS=\"${DEPS#*;}\" ; done ; wait \\\n && : \"---------- Downloads the current stable Linux sysroot ----------\" \\\n && /v8/build/linux/sysroot_scripts/install-sysroot.py --arch=amd64 \\\n && : \"---------- Proper GN ----------\" \\\n && apk add libevent=2.1.12-r5 libexecinfo libstdc++=12.2.1_git20220924-r9 --virtual .gn-runtime-dependencies \\\n && curl -fSL --connect-timeout 30 ${GN_SOURCE} | tar xmz -C /v8/buildtools/linux64/ \\\n && : \"---------- Build instructions ----------\" \\\n && cd /v8 \\\n && ./tools/dev/v8gen.py x64.release -- binutils_path=\\\"/usr/bin\\\" target_os=\\\"linux\\\" target_cpu=\\\"x64\\\" v8_target_cpu=\\\"x64\\\" v8_use_external_startup_data=false is_official_build=true is_component_build=true is_cfi=false is_clang=false use_custom_libcxx=false use_sysroot=false use_gold=false use_allocator_shim=false treat_warnings_as_errors=false symbol_level=0 \\\n && : \"---------- Build ----------\" \\\n && ninja d8 -C out.gn/x64.release/ -j $( getconf _NPROCESSORS_ONLN ;)\nRUN echo -e \"#!/bin/sh -e\\n\\n/bin/cat - > /tmp/code.js\\n\\nexec /v8/out.gn/x64.release/d8 /tmp/code.js \\\"$@\\\"\" > /usr/bin/javascript \\\n && chmod +x /usr/bin/javascript\nFROM scratch\nCOPY --from=0 /bin/cat /bin/sh /bin/\nCOPY --from=0 /lib/ld-musl-x86_64.so.1 /lib/\nCOPY --from=0 /usr/bin/javascript /usr/bin/\nCOPY --from=0 /usr/lib/libgcc_s.so.1 /usr/lib/libstdc++.so.6 /usr/lib/\nCOPY --from=0 /v8/out.gn/x64.release/d8 /v8/out.gn/x64.release/\nCOPY --from=0 /v8/out.gn/x64.release/./libicui18n.so /v8/out.gn/x64.release/./libicuuc.so /v8/out.gn/x64.release/./libv8.so /v8/out.gn/x64.release/./libv8_libbase.so /v8/out.gn/x64.release/./libv8_libplatform.so /v8/out.gn/x64.release/./\nENTRYPOINT [\"/v8/out.gn/x64.release/d8\", \"-v\"]\nRUN addgroup -S docker-user ; adduser -S -G docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM alpine:edge AS builder\n#  Copied from https://github.com/AlexMasterov/dockerfiles/blob/master/alpine-libv8/7.4/Dockerfile\n#  I can't thank @AlexMasterov++ enough! V8 is a pig to build :-(\nARG BUILD_COMMIT=c1ab94d375f10578b3d207eca8fe4fb35274efb7\nARG BUILDTOOLS_COMMIT=6fbda1b24c1893a893b17aa219b765b9e7c801d8\nARG ICU_COMMIT=07e7295d964399ee7bee16a3ac7ca5a053b2cf0a\nARG GTEST_COMMIT=879ac092fde0a19e1b3a61b2546b2a422b1528bc\nARG TRACE_EVENT_COMMIT=e31a1706337ccb9a658b37d29a018c81695c6518\nARG CLANG_COMMIT=3114fbc11f9644c54dd0a4cdbfa867bac50ff983\nARG JINJA2_COMMIT=b41863e42637544c2941b574c7877d3e1f663e25\nARG MARKUPSAFE_COMMIT=8f45f5cfa0009d2a70589bcda0349b8cb2b72783\nARG CATAPULT_COMMIT=b6cc5a6baf93cfa6feeb240eea75c454506b0c3c\nARG GN_SOURCE=https://www.dropbox.com/s/3ublwqh4h9dit9t/alpine-gn-80e00be.tar.gz\nARG V8_SOURCE=https://chromium.googlesource.com/v8/v8/+archive/7.4.51.tar.gz\nRUN set -x \\\n && apk add --update --virtual .v8-build-dependencies at-spi2-core-dev curl g++ gcc glib-dev icu-dev linux-headers make ninja python tar xz \\\n && : \"---------- V8 ----------\" \\\n && mkdir /v8 \\\n && curl -fSL --connect-timeout 30 ${V8_SOURCE} | tar xmz -C /v8 \\\n && : \"---------- Dependencies ----------\" \\\n && DEPS=\" chromium/buildtools.git@${BUILDTOOLS_COMMIT}:buildtools; chromium/src/build.git@${BUILD_COMMIT}:build; chromium/src/base/trace_event/common.git@${TRACE_EVENT_COMMIT}:base/trace_event/common; chromium/src/tools/clang.git@${CLANG_COMMIT}:tools/clang; chromium/src/third_party/jinja2.git@${JINJA2_COMMIT}:third_party/jinja2; chromium/src/third_party/markupsafe.git@${MARKUPSAFE_COMMIT}:third_party/markupsafe; chromium/deps/icu.git@${ICU_COMMIT}:third_party/icu; external/gyp.git@${GYP_COMMIT}:tools/gyp; external/github.com/google/googletest.git@${GTEST_COMMIT}:third_party/googletest/src \" \\\n && while [ \"${DEPS}\" ] ; do dep=\"${DEPS%%;*}\" link=\"${dep%%:*}\" url=\"${link%%@*}\" url=\"${url#\"${url%%[![:space:]]*}\"}\" hash=\"${link#*@}\" dir=\"${dep#*:}\" ;[ -n \"${dep}\" ] \\\n && dep_url=\"https://chromium.googlesource.com/${url}/+archive/${hash}.tar.gz\" \\\n && dep_dir=\"/v8/${dir}\" \\\n && mkdir -p ${dep_dir} \\\n && curl -fSL --connect-timeout 30 ${dep_url} | tar xmz -C ${dep_dir} &;[ \"${DEPS}\" = \"${dep}\" ] \\\n && DEPS='' || DEPS=\"${DEPS#*;}\" ; done ; wait \\\n && : \"---------- Downloads the current stable Linux sysroot ----------\" \\\n && /v8/build/linux/sysroot_scripts/install-sysroot.py --arch=amd64 \\\n && : \"---------- Proper GN ----------\" \\\n && apk add --virtual .gn-runtime-dependencies libevent libexecinfo libstdc++ \\\n && curl -fSL --connect-timeout 30 ${GN_SOURCE} | tar xmz -C /v8/buildtools/linux64/ \\\n && : \"---------- Build instructions ----------\" \\\n && cd /v8 \\\n && ./tools/dev/v8gen.py x64.release -- binutils_path=\\\"/usr/bin\\\" target_os=\\\"linux\\\" target_cpu=\\\"x64\\\" v8_target_cpu=\\\"x64\\\" v8_use_external_startup_data=false is_official_build=true is_component_build=true is_cfi=false is_clang=false use_custom_libcxx=false use_sysroot=false use_gold=false use_allocator_shim=false treat_warnings_as_errors=false symbol_level=0 \\\n && : \"---------- Build ----------\" \\\n && ninja d8 -C out.gn/x64.release/ -j $( getconf _NPROCESSORS_ONLN ;)\nRUN echo -e \"#!/bin/sh -e\\n\\n/bin/cat - > /tmp/code.js\\n\\nexec /v8/out.gn/x64.release/d8 /tmp/code.js \\\"$@\\\"\" > /usr/bin/javascript \\\n && chmod +x /usr/bin/javascript\nFROM scratch\nCOPY --from=0 /bin/cat /bin/sh /bin/\nCOPY --from=0 /lib/ld-musl-x86_64.so.1 /lib/\nCOPY --from=0 /usr/bin/javascript /usr/bin/\nCOPY --from=0 /usr/lib/libgcc_s.so.1 /usr/lib/libstdc++.so.6 /usr/lib/\nCOPY --from=0 /v8/out.gn/x64.release/d8 /v8/out.gn/x64.release/\nCOPY --from=0 /v8/out.gn/x64.release/./libicui18n.so /v8/out.gn/x64.release/./libicuuc.so /v8/out.gn/x64.release/./libv8.so /v8/out.gn/x64.release/./libv8_libbase.so /v8/out.gn/x64.release/./libv8_libplatform.so /v8/out.gn/x64.release/./\nENTRYPOINT [\"/v8/out.gn/x64.release/d8\", \"-v\"]\n","injectedSmells":[],"originalDockerfileHash":"e0ea2f5afc0b224a58ad92e9426755e1","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM alpine:edge AS builder\n#   Copied from https://github.com/AlexMasterov/dockerfiles/blob/master/alpine-libv8/7.4/Dockerfile\n#   I can't thank @AlexMasterov++ enough! V8 is a pig to build :-(\nARG BUILD_COMMIT=c1ab94d375f10578b3d207eca8fe4fb35274efb7\nARG BUILDTOOLS_COMMIT=6fbda1b24c1893a893b17aa219b765b9e7c801d8\nARG ICU_COMMIT=07e7295d964399ee7bee16a3ac7ca5a053b2cf0a\nARG GTEST_COMMIT=879ac092fde0a19e1b3a61b2546b2a422b1528bc\nARG TRACE_EVENT_COMMIT=e31a1706337ccb9a658b37d29a018c81695c6518\nARG CLANG_COMMIT=3114fbc11f9644c54dd0a4cdbfa867bac50ff983\nARG JINJA2_COMMIT=b41863e42637544c2941b574c7877d3e1f663e25\nARG MARKUPSAFE_COMMIT=8f45f5cfa0009d2a70589bcda0349b8cb2b72783\nARG CATAPULT_COMMIT=b6cc5a6baf93cfa6feeb240eea75c454506b0c3c\nARG GN_SOURCE=https://www.dropbox.com/s/3ublwqh4h9dit9t/alpine-gn-80e00be.tar.gz\nARG V8_SOURCE=https://chromium.googlesource.com/v8/v8/+archive/7.4.51.tar.gz\nRUN set -x \\\n && apk add --update --virtual .v8-build-dependencies at-spi2-core-dev curl g++ gcc glib-dev icu-dev linux-headers make ninja python tar xz \\\n && : \"---------- V8 ----------\" \\\n && mkdir /v8 \\\n && curl -fSL --connect-timeout 30 ${V8_SOURCE} | tar xmz -C /v8 \\\n && : \"---------- Dependencies ----------\" \\\n && DEPS=\" chromium/buildtools.git@${BUILDTOOLS_COMMIT}:buildtools; chromium/src/build.git@${BUILD_COMMIT}:build; chromium/src/base/trace_event/common.git@${TRACE_EVENT_COMMIT}:base/trace_event/common; chromium/src/tools/clang.git@${CLANG_COMMIT}:tools/clang; chromium/src/third_party/jinja2.git@${JINJA2_COMMIT}:third_party/jinja2; chromium/src/third_party/markupsafe.git@${MARKUPSAFE_COMMIT}:third_party/markupsafe; chromium/deps/icu.git@${ICU_COMMIT}:third_party/icu; external/gyp.git@${GYP_COMMIT}:tools/gyp; external/github.com/google/googletest.git@${GTEST_COMMIT}:third_party/googletest/src \" \\\n && while [ \"${DEPS}\" ] ; do dep=\"${DEPS%%;*}\" link=\"${dep%%:*}\" url=\"${link%%@*}\" url=\"${url#\"${url%%[![:space:]]*}\"}\" hash=\"${link#*@}\" dir=\"${dep#*:}\" ;[ -n \"${dep}\" ] \\\n && dep_url=\"https://chromium.googlesource.com/${url}/+archive/${hash}.tar.gz\" \\\n && dep_dir=\"/v8/${dir}\" \\\n && mkdir -p ${dep_dir} \\\n && curl -fSL --connect-timeout 30 ${dep_url} | tar xmz -C ${dep_dir} &;[ \"${DEPS}\" = \"${dep}\" ] \\\n && DEPS='' || DEPS=\"${DEPS#*;}\" ; done ; wait \\\n && : \"---------- Downloads the current stable Linux sysroot ----------\" \\\n && /v8/build/linux/sysroot_scripts/install-sysroot.py --arch=amd64 \\\n && : \"---------- Proper GN ----------\" \\\n && apk add --virtual .gn-runtime-dependencies libevent libexecinfo libstdc++ \\\n && curl -fSL --connect-timeout 30 ${GN_SOURCE} | tar xmz -C /v8/buildtools/linux64/ \\\n && : \"---------- Build instructions ----------\" \\\n && cd /v8 \\\n && ./tools/dev/v8gen.py x64.release -- binutils_path=\\\"/usr/bin\\\" target_os=\\\"linux\\\" target_cpu=\\\"x64\\\" v8_target_cpu=\\\"x64\\\" v8_use_external_startup_data=false is_official_build=true is_component_build=true is_cfi=false is_clang=false use_custom_libcxx=false use_sysroot=false use_gold=false use_allocator_shim=false treat_warnings_as_errors=false symbol_level=0 \\\n && : \"---------- Build ----------\" \\\n && ninja d8 -C out.gn/x64.release/ -j $( getconf _NPROCESSORS_ONLN ;)\nRUN echo -e \"#!/bin/sh -e\\n\\n/bin/cat - > /tmp/code.js\\n\\nexec /v8/out.gn/x64.release/d8 /tmp/code.js \\\"$@\\\"\" > /usr/bin/javascript \\\n && chmod +x /usr/bin/javascript\nFROM scratch\nCOPY --from=0 /bin/cat /bin/sh /bin/\nCOPY --from=0 /lib/ld-musl-x86_64.so.1 /lib/\nCOPY --from=0 /usr/bin/javascript /usr/bin/\nCOPY --from=0 /usr/lib/libgcc_s.so.1 /usr/lib/libstdc++.so.6 /usr/lib/\nCOPY --from=0 /v8/out.gn/x64.release/d8 /v8/out.gn/x64.release/\nCOPY --from=0 /v8/out.gn/x64.release/./libicui18n.so /v8/out.gn/x64.release/./libicuuc.so /v8/out.gn/x64.release/./libv8.so /v8/out.gn/x64.release/./libv8_libbase.so /v8/out.gn/x64.release/./libv8_libplatform.so /v8/out.gn/x64.release/./\nENTRYPOINT [\"/v8/out.gn/x64.release/d8\", \"-v\"]\n","originalDockerfileUglifiedHash":"4663c268ec15dc648b9af11125d30c3a","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/30fbfe50e2154635590f66f5fb1ca88b0111c89d.dockerfile"}