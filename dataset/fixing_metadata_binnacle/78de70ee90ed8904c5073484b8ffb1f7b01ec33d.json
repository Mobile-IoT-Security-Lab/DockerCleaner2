{"seed":3033566947,"processedDockerfileHash":"8d2211bcbd2027109f778fc07e65dcc6","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM akabe/ocaml:centos7_ocaml4.06.0\nENV PATH=\"$PATH:/home/opam/.local/bin\"\nENV TENSORFLOW_VERSION=\"1.1.0\"\nENV LD_LIBRARY_PATH=\"/usr/lib:$LD_LIBRARY_PATH\"\nENV LIBRARY_PATH=\"/usr/lib:$LIBRARY_PATH\"\n#   For phantomjs:\nENV QT_QPA_PLATFORM=\"offscreen\"\nCOPY MariaDB.repo /etc/yum.repos.d/MariaDB.repo\nRUN sudo yum install -y epel-release \\\n && sudo yum install -y python34-devel python34-pip \\\n && sudo pip3 install --upgrade pip \\\n && pip3 install --user --no-cache-dir 'setuptools>=18.5' 'six>=1.9.0' jupyter jupyter_contrib_nbextensions \\\n && jupyter contrib nbextension install --user \\\n && mkdir -p /home/opam/.jupyter \\\n && sudo yum remove -y python34-devel \\\n && sudo yum clean all\nRUN sudo curl -o /usr/bin/aspcud 'https://raw.githubusercontent.com/avsm/opam-solver-proxy/8f162de1fe89b2e243d89961f376c80fde6de76d/aspcud.docker' \\\n && sudo chmod 755 /usr/bin/aspcud \\\n && sudo rpm -Uvh http://li.nux.ro/download/nux/dextop/el7/x86_64/nux-dextop-release-0-5.el7.nux.noarch.rpm \\\n && sudo rpm -ivh http://repo.okay.com.mx/centos/7/x86_64/release/okay-release-1-1.noarch.rpm \\\n && sudo rpm -ivh http://packages.groonga.org/centos/groonga-release-1.1.0-1.noarch.rpm \\\n && sudo yum install -y --enablerepo=epel,nux-dextop which file git openssl m4 rsync gcc gcc-c++ zeromq-devel libffi-devel gmp-devel cairo-devel plplot-devel openssh-clients blas-devel lapack-devel openblas-devel gsl-devel fftw-devel libsvm-devel MariaDB-devel postgresql-devel sqlite-devel gmp-devel mecab mecab-devel mecab-ipadic openssl-devel ImageMagick ffmpeg phantomjs \\\n && sudo mv /usr/include/openblas/* /usr/include/ \\\n && sudo ln -sf /usr/lib64/libmysqlclient.so.18.0.0 /usr/lib/libmysqlclient.so \\\n && sudo ln -sf /usr/lib64/libmysqlclient.so.18.0.0 /usr/lib/libmariadb.so \\\n && sudo ln -sf /usr/lib64/libopenblas.so.0 /usr/lib/libopenblas.so \\\n && curl -L https://github.com/neologd/mecab-ipadic-neologd/archive/master.tar.gz -o /tmp/mecab-ipadic-neologd-master.tar.gz \\\n && tar zxf /tmp/mecab-ipadic-neologd-master.tar.gz -C /tmp \\\n && (cd /tmp/mecab-ipadic-neologd-master \\\n && ./bin/install-mecab-ipadic-neologd -n -y ) \\\n && rm -rf /tmp/mecab-ipadic-neologd-master.tar.gz /tmp/mecab-ipadic-neologd-master \\\n && eval $( opam config env ;) \\\n && opam update \\\n && opam upgrade -y \\\n && opam install -y batteries 'core>=v0.9.0' 'async>=v0.9.0' 'lwt>=3.0.0' lwt_ssl 'cstruct>=3.1.1' 'ppx_cstruct>=3.1.1' 'tls>=0.8.0' cohttp-async 'cohttp-lwt-unix>=1.0.0' cohttp-top 'merlin>=3.0.0' jupyter jupyter-archimedes lacaml slap lbfgs ocephes oml gsl gpr fftw3 'dolog>=3.0' 'eigen>=0.0.3' 'oasis>=0.4.10' 'owl>=0.2.6' mysql 'mariadb>=0.8.1' postgresql sqlite3 lambdasoup csv csv-lwt camomile mecab ppx_sexp_conv 'ppx_deriving_yojson>=3.1' ppx_regexp \\\n && : install kernel \\\n && jupyter kernelspec install --user --name ocaml-jupyter \"$( opam config var share ;)/jupyter\" \\\n && : install libsvm \\\n && curl -L https://bitbucket.org/ogu/libsvm-ocaml/downloads/libsvm-ocaml-0.9.3.tar.gz -o /tmp/libsvm-ocaml-0.9.3.tar.gz \\\n && tar zxf /tmp/libsvm-ocaml-0.9.3.tar.gz -C /tmp \\\n && (cd /tmp/libsvm-ocaml-0.9.3 \\\n && oasis setup \\\n && ./configure --prefix=$( opam config var prefix ;) \\\n && make \\\n && make install ) \\\n && rm -rf /tmp/libsvm-ocaml-0.9.3.tar.gz /tmp/libsvm-ocaml-0.9.3 \\\n && : install tensorflow \\\n && sudo curl -L \"https://storage.googleapis.com/tensorflow/libtensorflow/libtensorflow-cpu-linux-x86_64-$TENSORFLOW_VERSION.tar.gz\" | sudo tar xz -C /usr \\\n && curl -L \"https://github.com/LaurentMazare/tensorflow-ocaml/archive/0.0.10.1.tar.gz\" -o /tmp/tensorflow-ocaml-0.0.10.1.tar.gz \\\n && tar zxf /tmp/tensorflow-ocaml-0.0.10.1.tar.gz -C /tmp \\\n && (cd /tmp/tensorflow-ocaml-0.0.10.1 \\\n && sed -i 's/(no_dynlink)//' src/wrapper/jbuild \\\n && sed -i 's/(modes (native))//' src/wrapper/jbuild ) \\\n && opam pin add -y /tmp/tensorflow-ocaml-0.0.10.1 \\\n && rm -rf /tmp/tensorflow-ocaml-0.0.10.1.tar.gz /tmp/tensorflow-ocaml-0.0.10.1 \\\n && rm -rf $HOME/.opam/archives $HOME/.opam/repo/default/archives $HOME/.opam/$OCAML_VERSION/man $HOME/.opam/$OCAML_VERSION/build \\\n && sudo yum remove -y which file git openssl m4 rsync gcc gcc-c++ gcc-gfortran \\\n && sudo yum clean all \\\n && sudo rm -f /usr/bin/aspcud\nVOLUME /notebooks\nVOLUME /home/opam/.jupyter\nWORKDIR /notebooks\nCOPY entrypoint.sh /\nCOPY .ocamlinit /home/opam/.ocamlinit\nCOPY .jupyter /home/opam/.jupyter\nEXPOSE 8888/tcp\nENTRYPOINT [\"/entrypoint.sh\"]\nCMD [\"jupyter\", \"notebook\", \"--no-browser\", \"--ip=*\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM akabe/ocaml:centos7_ocaml4.06.0\nENV PATH=\"$PATH:/home/opam/.local/bin\"\nENV TENSORFLOW_VERSION=\"1.1.0\"\nENV LD_LIBRARY_PATH=\"/usr/lib:$LD_LIBRARY_PATH\"\nENV LIBRARY_PATH=\"/usr/lib:$LIBRARY_PATH\"\n#  For phantomjs:\nENV QT_QPA_PLATFORM=\"offscreen\"\nADD MariaDB.repo /etc/yum.repos.d/MariaDB.repo\nRUN sudo yum install -y epel-release \\\n && sudo yum install -y python34-devel python34-pip \\\n && sudo pip3 install --upgrade pip \\\n && pip3 install --user --no-cache-dir 'setuptools>=18.5' 'six>=1.9.0' jupyter jupyter_contrib_nbextensions \\\n && jupyter contrib nbextension install --user \\\n && mkdir -p /home/opam/.jupyter \\\n && sudo yum remove -y python34-devel \\\n && sudo yum clean all\nRUN sudo curl -o /usr/bin/aspcud 'https://raw.githubusercontent.com/avsm/opam-solver-proxy/8f162de1fe89b2e243d89961f376c80fde6de76d/aspcud.docker' \\\n && sudo chmod 755 /usr/bin/aspcud \\\n && sudo rpm -Uvh http://li.nux.ro/download/nux/dextop/el7/x86_64/nux-dextop-release-0-5.el7.nux.noarch.rpm \\\n && sudo rpm -ivh http://repo.okay.com.mx/centos/7/x86_64/release/okay-release-1-1.noarch.rpm \\\n && sudo rpm -ivh http://packages.groonga.org/centos/groonga-release-1.1.0-1.noarch.rpm \\\n && sudo yum install -y --enablerepo=epel,nux-dextop which file git openssl m4 rsync gcc gcc-c++ zeromq-devel libffi-devel gmp-devel cairo-devel plplot-devel openssh-clients blas-devel lapack-devel openblas-devel gsl-devel fftw-devel libsvm-devel MariaDB-devel postgresql-devel sqlite-devel gmp-devel mecab mecab-devel mecab-ipadic openssl-devel ImageMagick ffmpeg phantomjs \\\n && sudo mv /usr/include/openblas/* /usr/include/ \\\n && sudo ln -sf /usr/lib64/libmysqlclient.so.18.0.0 /usr/lib/libmysqlclient.so \\\n && sudo ln -sf /usr/lib64/libmysqlclient.so.18.0.0 /usr/lib/libmariadb.so \\\n && sudo ln -sf /usr/lib64/libopenblas.so.0 /usr/lib/libopenblas.so \\\n && curl -L https://github.com/neologd/mecab-ipadic-neologd/archive/master.tar.gz -o /tmp/mecab-ipadic-neologd-master.tar.gz \\\n && tar zxf /tmp/mecab-ipadic-neologd-master.tar.gz -C /tmp \\\n && (cd /tmp/mecab-ipadic-neologd-master \\\n && ./bin/install-mecab-ipadic-neologd -n -y ) \\\n && rm -rf /tmp/mecab-ipadic-neologd-master.tar.gz /tmp/mecab-ipadic-neologd-master \\\n && eval $( opam config env ;) \\\n && opam update \\\n && opam upgrade -y \\\n && opam install -y batteries 'core>=v0.9.0' 'async>=v0.9.0' 'lwt>=3.0.0' lwt_ssl 'cstruct>=3.1.1' 'ppx_cstruct>=3.1.1' 'tls>=0.8.0' cohttp-async 'cohttp-lwt-unix>=1.0.0' cohttp-top 'merlin>=3.0.0' jupyter jupyter-archimedes lacaml slap lbfgs ocephes oml gsl gpr fftw3 'dolog>=3.0' 'eigen>=0.0.3' 'oasis>=0.4.10' 'owl>=0.2.6' mysql 'mariadb>=0.8.1' postgresql sqlite3 lambdasoup csv csv-lwt camomile mecab ppx_sexp_conv 'ppx_deriving_yojson>=3.1' ppx_regexp \\\n && : install kernel \\\n && jupyter kernelspec install --user --name ocaml-jupyter \"$( opam config var share ;)/jupyter\" \\\n && : install libsvm \\\n && curl -L https://bitbucket.org/ogu/libsvm-ocaml/downloads/libsvm-ocaml-0.9.3.tar.gz -o /tmp/libsvm-ocaml-0.9.3.tar.gz \\\n && tar zxf /tmp/libsvm-ocaml-0.9.3.tar.gz -C /tmp \\\n && (cd /tmp/libsvm-ocaml-0.9.3 \\\n && oasis setup \\\n && ./configure --prefix=$( opam config var prefix ;) \\\n && make \\\n && make install ) \\\n && rm -rf /tmp/libsvm-ocaml-0.9.3.tar.gz /tmp/libsvm-ocaml-0.9.3 \\\n && : install tensorflow \\\n && sudo curl -L \"https://storage.googleapis.com/tensorflow/libtensorflow/libtensorflow-cpu-linux-x86_64-$TENSORFLOW_VERSION.tar.gz\" | sudo tar xz -C /usr \\\n && curl -L \"https://github.com/LaurentMazare/tensorflow-ocaml/archive/0.0.10.1.tar.gz\" -o /tmp/tensorflow-ocaml-0.0.10.1.tar.gz \\\n && tar zxf /tmp/tensorflow-ocaml-0.0.10.1.tar.gz -C /tmp \\\n && (cd /tmp/tensorflow-ocaml-0.0.10.1 \\\n && sed -i 's/(no_dynlink)//' src/wrapper/jbuild \\\n && sed -i 's/(modes (native))//' src/wrapper/jbuild ) \\\n && opam pin add -y /tmp/tensorflow-ocaml-0.0.10.1 \\\n && rm -rf /tmp/tensorflow-ocaml-0.0.10.1.tar.gz /tmp/tensorflow-ocaml-0.0.10.1 \\\n && rm -rf $HOME/.opam/archives $HOME/.opam/repo/default/archives $HOME/.opam/$OCAML_VERSION/man $HOME/.opam/$OCAML_VERSION/build \\\n && sudo yum remove -y which file git openssl m4 rsync gcc gcc-c++ gcc-gfortran \\\n && sudo yum clean all \\\n && sudo rm -f /usr/bin/aspcud\nVOLUME /notebooks\nVOLUME /home/opam/.jupyter\nWORKDIR /notebooks\nCOPY entrypoint.sh /\nCOPY .ocamlinit /home/opam/.ocamlinit\nCOPY .jupyter /home/opam/.jupyter\nEXPOSE 8888/tcp\nENTRYPOINT [\"/entrypoint.sh\"]\nCMD [\"jupyter\", \"notebook\", \"--no-browser\", \"--ip=*\"]\n","injectedSmells":[],"originalDockerfileHash":"77dfd4b3c052c4a178689d46b4d08ee3","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM akabe/ocaml:centos7_ocaml4.06.0\nENV PATH=\"$PATH:/home/opam/.local/bin\"\nENV TENSORFLOW_VERSION=\"1.1.0\"\nENV LD_LIBRARY_PATH=\"/usr/lib:$LD_LIBRARY_PATH\"\nENV LIBRARY_PATH=\"/usr/lib:$LIBRARY_PATH\"\n#   For phantomjs:\nENV QT_QPA_PLATFORM=\"offscreen\"\nADD MariaDB.repo /etc/yum.repos.d/MariaDB.repo\nRUN sudo yum install -y epel-release \\\n && sudo yum install -y python34-devel python34-pip \\\n && sudo pip3 install --upgrade pip \\\n && pip3 install --user --no-cache-dir 'setuptools>=18.5' 'six>=1.9.0' jupyter jupyter_contrib_nbextensions \\\n && jupyter contrib nbextension install --user \\\n && mkdir -p /home/opam/.jupyter \\\n && sudo yum remove -y python34-devel \\\n && sudo yum clean all\nRUN sudo curl -o /usr/bin/aspcud 'https://raw.githubusercontent.com/avsm/opam-solver-proxy/8f162de1fe89b2e243d89961f376c80fde6de76d/aspcud.docker' \\\n && sudo chmod 755 /usr/bin/aspcud \\\n && sudo rpm -Uvh http://li.nux.ro/download/nux/dextop/el7/x86_64/nux-dextop-release-0-5.el7.nux.noarch.rpm \\\n && sudo rpm -ivh http://repo.okay.com.mx/centos/7/x86_64/release/okay-release-1-1.noarch.rpm \\\n && sudo rpm -ivh http://packages.groonga.org/centos/groonga-release-1.1.0-1.noarch.rpm \\\n && sudo yum install -y --enablerepo=epel,nux-dextop which file git openssl m4 rsync gcc gcc-c++ zeromq-devel libffi-devel gmp-devel cairo-devel plplot-devel openssh-clients blas-devel lapack-devel openblas-devel gsl-devel fftw-devel libsvm-devel MariaDB-devel postgresql-devel sqlite-devel gmp-devel mecab mecab-devel mecab-ipadic openssl-devel ImageMagick ffmpeg phantomjs \\\n && sudo mv /usr/include/openblas/* /usr/include/ \\\n && sudo ln -sf /usr/lib64/libmysqlclient.so.18.0.0 /usr/lib/libmysqlclient.so \\\n && sudo ln -sf /usr/lib64/libmysqlclient.so.18.0.0 /usr/lib/libmariadb.so \\\n && sudo ln -sf /usr/lib64/libopenblas.so.0 /usr/lib/libopenblas.so \\\n && curl -L https://github.com/neologd/mecab-ipadic-neologd/archive/master.tar.gz -o /tmp/mecab-ipadic-neologd-master.tar.gz \\\n && tar zxf /tmp/mecab-ipadic-neologd-master.tar.gz -C /tmp \\\n && (cd /tmp/mecab-ipadic-neologd-master \\\n && ./bin/install-mecab-ipadic-neologd -n -y ) \\\n && rm -rf /tmp/mecab-ipadic-neologd-master.tar.gz /tmp/mecab-ipadic-neologd-master \\\n && eval $( opam config env ;) \\\n && opam update \\\n && opam upgrade -y \\\n && opam install -y batteries 'core>=v0.9.0' 'async>=v0.9.0' 'lwt>=3.0.0' lwt_ssl 'cstruct>=3.1.1' 'ppx_cstruct>=3.1.1' 'tls>=0.8.0' cohttp-async 'cohttp-lwt-unix>=1.0.0' cohttp-top 'merlin>=3.0.0' jupyter jupyter-archimedes lacaml slap lbfgs ocephes oml gsl gpr fftw3 'dolog>=3.0' 'eigen>=0.0.3' 'oasis>=0.4.10' 'owl>=0.2.6' mysql 'mariadb>=0.8.1' postgresql sqlite3 lambdasoup csv csv-lwt camomile mecab ppx_sexp_conv 'ppx_deriving_yojson>=3.1' ppx_regexp \\\n && : install kernel \\\n && jupyter kernelspec install --user --name ocaml-jupyter \"$( opam config var share ;)/jupyter\" \\\n && : install libsvm \\\n && curl -L https://bitbucket.org/ogu/libsvm-ocaml/downloads/libsvm-ocaml-0.9.3.tar.gz -o /tmp/libsvm-ocaml-0.9.3.tar.gz \\\n && tar zxf /tmp/libsvm-ocaml-0.9.3.tar.gz -C /tmp \\\n && (cd /tmp/libsvm-ocaml-0.9.3 \\\n && oasis setup \\\n && ./configure --prefix=$( opam config var prefix ;) \\\n && make \\\n && make install ) \\\n && rm -rf /tmp/libsvm-ocaml-0.9.3.tar.gz /tmp/libsvm-ocaml-0.9.3 \\\n && : install tensorflow \\\n && sudo curl -L \"https://storage.googleapis.com/tensorflow/libtensorflow/libtensorflow-cpu-linux-x86_64-$TENSORFLOW_VERSION.tar.gz\" | sudo tar xz -C /usr \\\n && curl -L \"https://github.com/LaurentMazare/tensorflow-ocaml/archive/0.0.10.1.tar.gz\" -o /tmp/tensorflow-ocaml-0.0.10.1.tar.gz \\\n && tar zxf /tmp/tensorflow-ocaml-0.0.10.1.tar.gz -C /tmp \\\n && (cd /tmp/tensorflow-ocaml-0.0.10.1 \\\n && sed -i 's/(no_dynlink)//' src/wrapper/jbuild \\\n && sed -i 's/(modes (native))//' src/wrapper/jbuild ) \\\n && opam pin add -y /tmp/tensorflow-ocaml-0.0.10.1 \\\n && rm -rf /tmp/tensorflow-ocaml-0.0.10.1.tar.gz /tmp/tensorflow-ocaml-0.0.10.1 \\\n && rm -rf $HOME/.opam/archives $HOME/.opam/repo/default/archives $HOME/.opam/$OCAML_VERSION/man $HOME/.opam/$OCAML_VERSION/build \\\n && sudo yum remove -y which file git openssl m4 rsync gcc gcc-c++ gcc-gfortran \\\n && sudo yum clean all \\\n && sudo rm -f /usr/bin/aspcud\nVOLUME /notebooks\nVOLUME /home/opam/.jupyter\nWORKDIR /notebooks\nCOPY entrypoint.sh /\nCOPY .ocamlinit /home/opam/.ocamlinit\nCOPY .jupyter /home/opam/.jupyter\nEXPOSE 8888/tcp\nENTRYPOINT [\"/entrypoint.sh\"]\nCMD [\"jupyter\", \"notebook\", \"--no-browser\", \"--ip=*\"]\n","originalDockerfileUglifiedHash":"0ee20a01a7fe0cc82cf4a02807887259","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/78de70ee90ed8904c5073484b8ffb1f7b01ec33d.dockerfile"}