{"seed":3898144483,"processedDockerfileHash":"0caa22401d58f478d2c0d4c2e068fcb2","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n#   Licensed under the Apache License, Version 2.0 (the \"License\").\n#   You may not use this file except in compliance with the License.\n#   A copy of the License is located at\n#       http://www.apache.org/licenses/LICENSE-2.0\n#   or in the \"license\" file accompanying this file. This file is distributed\n#   on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n#   express or implied. See the License for the specific language governing\n#   permissions and limitations under the License.\n#\nFROM ubuntu:14.04.5\nENV LANG=\"C.UTF-8\"\nENV DOCKER_BUCKET=\"download.docker.com\" \\\n    DOCKER_VERSION=\"17.09.0-ce\" \\\n    DOCKER_CHANNEL=\"stable\" \\\n    DOCKER_SHA256=\"a9e90a73c3cdfbf238f148e1ec0eaff5eb181f92f35bdd938fd7dab18e1c4647\" \\\n    DIND_COMMIT=\"3b5fac462d21ca164b3778647420016315289034\" \\\n    DOCKER_COMPOSE_VERSION=\"1.16.1\" \\\n    GITVERSION_VERSION=\"3.6.5\"\n#   Install git\nRUN set -ex \\\n && apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends software-properties-common=0.92.37.8 -y ) \\\n && apt-add-repository ppa:git-core/ppa \\\n && apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends git=1:1.9.1-1ubuntu0.10 -y ) \\\n && git version\nRUN set -ex \\\n && echo 'Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/99use-gzip-compression \\\n && apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends ca-certificates=20170717~14.04.2 wget=1.15-* fakeroot=1.20-* autoconf=2.69-* automake=1:1.14.* less=458-* groff=1.22.* bzip2=1.0.* file=1:5.14-* g++=4:4.8.* gcc=4:4.8.* imagemagick=8:6.7.* libbz2-dev=1.0.* libc6-dev=2.19-* libcurl4-openssl-dev=7.35.* curl=7.35.* libdb-dev=1:5.3.* libevent-dev=2.0.* libffi-dev=3.1~* libgeoip-dev=1.6.* libglib2.0-dev=2.40.* libjpeg-dev=8c-* libkrb5-dev=1.12+* liblzma-dev=5.1.* libmagickcore-dev=8:6.7.* libmagickwand-dev=8:6.7.* libmysqlclient-dev=5.5.* libncurses5-dev=5.9+* libpng12-dev=1.2.* libpq-dev=9.3.* libreadline-dev=6.3-* libsqlite3-dev=3.8.* libssl-dev=1.0.* libtool=2.4.* libwebp-dev=0.4.* libxml2-dev=2.9.* libxslt1-dev=1.1.* libyaml-dev=0.1.* make=3.81-* patch=2.7.* xz-utils=5.1.* zlib1g-dev=1:1.2.* tcl=8.6.* tk=8.6.* e2fsprogs=1.42.* iptables=1.4.* xfsprogs=3.1.* xz-utils=5.1.* mono-mcs=3.2.* libcurl4-openssl-dev=7.35.* liberror-perl=0.17-* unzip=6.0-* -y ) \\\n && rm -rf /var/lib/apt/lists/* \\\n && apt-get clean\n#   Download and set up GitVersion\nRUN set -ex \\\n && wget \"https://github.com/GitTools/GitVersion/releases/download/v${GITVERSION_VERSION}/GitVersion_${GITVERSION_VERSION}.zip\" -O /tmp/GitVersion_${GITVERSION_VERSION}.zip \\\n && mkdir -p /usr/local/GitVersion_${GITVERSION_VERSION} \\\n && unzip /tmp/GitVersion_${GITVERSION_VERSION}.zip -d /usr/local/GitVersion_${GITVERSION_VERSION} \\\n && rm /tmp/GitVersion_${GITVERSION_VERSION}.zip \\\n && echo \"mono /usr/local/GitVersion_${GITVERSION_VERSION}/GitVersion.exe /output json /showvariable $1\" >> /usr/local/bin/gitversion \\\n && chmod +x /usr/local/bin/gitversion\n#   Install Docker\nRUN set -ex \\\n && curl -fSL \"https://${DOCKER_BUCKET}/linux/static/${DOCKER_CHANNEL}/x86_64/docker-${DOCKER_VERSION}.tgz\" -o docker.tgz \\\n && echo \"${DOCKER_SHA256} *docker.tgz\" | sha256sum -c - \\\n && tar --extract --file docker.tgz --strip-components 1 --directory /usr/local/bin/ \\\n && rm docker.tgz \\\n && docker -v \\\n && addgroup dockremap \\\n && useradd -g dockremap dockremap \\\n && echo 'dockremap:165536:65536' >> /etc/subuid \\\n && echo 'dockremap:165536:65536' >> /etc/subgid \\\n && wget \"https://raw.githubusercontent.com/docker/docker/${DIND_COMMIT}/hack/dind\" -O /usr/local/bin/dind \\\n && curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-Linux-x86_64 > /usr/local/bin/docker-compose \\\n && chmod +x /usr/local/bin/dind /usr/local/bin/docker-compose \\\n && docker-compose version\nVOLUME /var/lib/docker\nCOPY dockerd-entrypoint.sh /usr/local/bin/\nENV PATH=\"/usr/local/bin:$PATH\" \\\n    GPG_KEY=\"0D96DF4D4110E5C43FBFB17F2D347EA6AA65421D\" \\\n    PYTHON_VERSION=\"3.6.5\" \\\n    PYTHON_PIP_VERSION=\"10.0.0\" \\\n    LC_ALL=\"C.UTF-8\" \\\n    LANG=\"C.UTF-8\"\nRUN apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends tcl-dev=8.6.0+6ubuntu3 tk-dev=8.6.0+6ubuntu3 -y ) \\\n && rm -rf /var/lib/apt/lists/* \\\n && wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\" \\\n && wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && (gpg --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys \"$GPG_KEY\" || gpg --keyserver pgp.mit.edu --recv-keys \"$GPG_KEY\" || gpg --keyserver keyserver.ubuntu.com --recv-keys \"$GPG_KEY\" ) \\\n && gpg --batch --verify python.tar.xz.asc python.tar.xz \\\n && rm -r \"$GNUPGHOME\" python.tar.xz.asc \\\n && mkdir -p /usr/src/python \\\n && tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \\\n && rm python.tar.xz \\\n && cd /usr/src/python \\\n && ./configure --enable-loadable-sqlite-extensions --enable-shared \\\n && make -j$( nproc ;) \\\n && make install \\\n && ldconfig \\\n && if [ ! -e /usr/local/bin/pip3 ] ; then : \\\n && wget -O /tmp/get-pip.py 'https://bootstrap.pypa.io/get-pip.py' \\\n && python3 /tmp/get-pip.py \"pip==$PYTHON_PIP_VERSION\" \\\n && rm /tmp/get-pip.py ; fi \\\n && pip3 install --no-cache-dir --upgrade --force-reinstall \"pip==$PYTHON_PIP_VERSION\" \\\n && pip install boto3==1.26.114 pipenv==2023.3.20 virtualenv==20.21.0 awscli==1.* --no-cache-dir \\\n && [ \"$( pip list | tac | tac | awk -F '[ ()]+' '$1 == \"pip\" { print $2; exit }' ;)\" = \"$PYTHON_PIP_VERSION\" ] \\\n && find /usr/local -depth\nENV JAVA_VERSION=\"8\" \\\n    JAVA_HOME=\"/usr/lib/jvm/java-8-openjdk-amd64\" \\\n    JDK_VERSION=\"8u171-b11-2~14.04\" \\\n    JDK_HOME=\"/usr/lib/jvm/java-8-openjdk-amd64\" \\\n    JRE_HOME=\"/usr/lib/jvm/java-8-openjdk-amd64/jre\" \\\n    ANT_VERSION=\"1.9.6\" \\\n    MAVEN_VERSION=\"3.3.3\" \\\n    MAVEN_HOME=\"/usr/share/maven\" \\\n    MAVEN_CONFIG=\"/root/.m2\" \\\n    GRADLE_VERSION=\"2.7\" \\\n    PROPERTIES_COMMON_VERSIION=\"0.92.37.8\" \\\n    PYTHON_TOOL_VERSION=\"3.3-*\"\n#   Install Java\nRUN set -ex \\\n && apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends software-properties-common=$PROPERTIES_COMMON_VERSIION -y ) \\\n && add-apt-repository ppa:openjdk-r/ppa \\\n && apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends python-setuptools=$PYTHON_TOOL_VERSION -y ) \\\n && (apt-get update ;apt-get install --no-install-recommends openjdk-$JAVA_VERSION-jdk=$JDK_VERSION -y ) \\\n && apt-get clean \\\n && update-ca-certificates -f \\\n && mkdir -p /usr/src/ant \\\n && wget \"http://archive.apache.org/dist/ant/binaries/apache-ant-$ANT_VERSION-bin.tar.gz\" -O /usr/src/ant/apache-ant-$ANT_VERSION-bin.tar.gz \\\n && tar -xzf /usr/src/ant/apache-ant-$ANT_VERSION-bin.tar.gz -C /usr/local \\\n && ln -s /usr/local/apache-ant-$ANT_VERSION/bin/ant /usr/bin/ant \\\n && rm -rf /usr/src/ant \\\n && mkdir -p /usr/share/maven /usr/share/maven/ref $MAVEN_CONFIG \\\n && curl -fsSL \"https://archive.apache.org/dist/maven/maven-3/$MAVEN_VERSION/binaries/apache-maven-$MAVEN_VERSION-bin.tar.gz\" | tar -xzC /usr/share/maven --strip-components=1 \\\n && ln -s /usr/share/maven/bin/mvn /usr/bin/mvn \\\n && mkdir -p /usr/src/gradle \\\n && wget \"https://services.gradle.org/distributions/gradle-$GRADLE_VERSION-bin.zip\" -O /usr/src/gradle/gradle-$GRADLE_VERSION-bin.zip \\\n && unzip /usr/src/gradle/gradle-$GRADLE_VERSION-bin.zip -d /usr/local \\\n && ln -s /usr/local/gradle-$GRADLE_VERSION/bin/gradle /usr/bin/gradle \\\n && rm -rf /usr/src/gradle \\\n && rm -fr /var/lib/apt/lists/* /tmp/* /var/tmp/*\nCOPY m2-settings.xml $MAVEN_CONFIG/settings.xml\n#   MMS build environment\nRUN set -ex \\\n && : \\\n && pip install retrying==1.3.4 \\\n && pip install mock==5.0.2 \\\n && pip install pytest==7.3.1 -U \\\n && pip install pylint==2.17.2\n#   Install protobuf\nRUN wget https://github.com/google/protobuf/archive/v3.4.1.zip \\\n && unzip v3.4.1.zip \\\n && rm v3.4.1.zip \\\n && cd protobuf-3.4.1 \\\n && ./autogen.sh \\\n && ./configure --prefix=/usr \\\n && make \\\n && make install \\\n && cd .. \\\n && rm -r protobuf-3.4.1\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n#  Licensed under the Apache License, Version 2.0 (the \"License\").\n#  You may not use this file except in compliance with the License.\n#  A copy of the License is located at\n#      http://www.apache.org/licenses/LICENSE-2.0\n#  or in the \"license\" file accompanying this file. This file is distributed\n#  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n#  express or implied. See the License for the specific language governing\n#  permissions and limitations under the License.\n#\nFROM ubuntu:14.04.5\nENV LANG=\"C.UTF-8\"\nENV DOCKER_BUCKET=\"download.docker.com\" \\\n    DOCKER_VERSION=\"17.09.0-ce\" \\\n    DOCKER_CHANNEL=\"stable\" \\\n    DOCKER_SHA256=\"a9e90a73c3cdfbf238f148e1ec0eaff5eb181f92f35bdd938fd7dab18e1c4647\" \\\n    DIND_COMMIT=\"3b5fac462d21ca164b3778647420016315289034\" \\\n    DOCKER_COMPOSE_VERSION=\"1.16.1\" \\\n    GITVERSION_VERSION=\"3.6.5\"\n#  Install git\nRUN set -ex \\\n && apt-get update \\\n && apt-get install --no-install-recommends software-properties-common -y \\\n && apt-add-repository ppa:git-core/ppa \\\n && apt-get update \\\n && apt-get install --no-install-recommends git -y \\\n && git version\nRUN set -ex \\\n && echo 'Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/99use-gzip-compression \\\n && apt-get update \\\n && apt-get install --no-install-recommends ca-certificates wget=1.15-* fakeroot=1.20-* autoconf=2.69-* automake=1:1.14.* less=458-* groff=1.22.* bzip2=1.0.* file=1:5.14-* g++=4:4.8.* gcc=4:4.8.* imagemagick=8:6.7.* libbz2-dev=1.0.* libc6-dev=2.19-* libcurl4-openssl-dev=7.35.* curl=7.35.* libdb-dev=1:5.3.* libevent-dev=2.0.* libffi-dev=3.1~* libgeoip-dev=1.6.* libglib2.0-dev=2.40.* libjpeg-dev=8c-* libkrb5-dev=1.12+* liblzma-dev=5.1.* libmagickcore-dev=8:6.7.* libmagickwand-dev=8:6.7.* libmysqlclient-dev=5.5.* libncurses5-dev=5.9+* libpng12-dev=1.2.* libpq-dev=9.3.* libreadline-dev=6.3-* libsqlite3-dev=3.8.* libssl-dev=1.0.* libtool=2.4.* libwebp-dev=0.4.* libxml2-dev=2.9.* libxslt1-dev=1.1.* libyaml-dev=0.1.* make=3.81-* patch=2.7.* xz-utils=5.1.* zlib1g-dev=1:1.2.* tcl=8.6.* tk=8.6.* e2fsprogs=1.42.* iptables=1.4.* xfsprogs=3.1.* xz-utils=5.1.* mono-mcs=3.2.* libcurl4-openssl-dev=7.35.* liberror-perl=0.17-* unzip=6.0-* -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && apt-get clean\n#  Download and set up GitVersion\nRUN set -ex \\\n && wget \"https://github.com/GitTools/GitVersion/releases/download/v${GITVERSION_VERSION}/GitVersion_${GITVERSION_VERSION}.zip\" -O /tmp/GitVersion_${GITVERSION_VERSION}.zip \\\n && mkdir -p /usr/local/GitVersion_${GITVERSION_VERSION} \\\n && unzip /tmp/GitVersion_${GITVERSION_VERSION}.zip -d /usr/local/GitVersion_${GITVERSION_VERSION} \\\n && rm /tmp/GitVersion_${GITVERSION_VERSION}.zip \\\n && echo \"mono /usr/local/GitVersion_${GITVERSION_VERSION}/GitVersion.exe /output json /showvariable $1\" >> /usr/local/bin/gitversion \\\n && chmod +x /usr/local/bin/gitversion\n#  Install Docker\nRUN set -ex \\\n && curl -fSL \"https://${DOCKER_BUCKET}/linux/static/${DOCKER_CHANNEL}/x86_64/docker-${DOCKER_VERSION}.tgz\" -o docker.tgz \\\n && echo \"${DOCKER_SHA256} *docker.tgz\" | sha256sum -c - \\\n && tar --extract --file docker.tgz --strip-components 1 --directory /usr/local/bin/ \\\n && rm docker.tgz \\\n && docker -v \\\n && addgroup dockremap \\\n && useradd -g dockremap dockremap \\\n && echo 'dockremap:165536:65536' >> /etc/subuid \\\n && echo 'dockremap:165536:65536' >> /etc/subgid \\\n && wget \"https://raw.githubusercontent.com/docker/docker/${DIND_COMMIT}/hack/dind\" -O /usr/local/bin/dind \\\n && curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-Linux-x86_64 > /usr/local/bin/docker-compose \\\n && chmod +x /usr/local/bin/dind /usr/local/bin/docker-compose \\\n && docker-compose version\nVOLUME /var/lib/docker\nCOPY dockerd-entrypoint.sh /usr/local/bin/\nENV PATH=\"/usr/local/bin:$PATH\" \\\n    GPG_KEY=\"0D96DF4D4110E5C43FBFB17F2D347EA6AA65421D\" \\\n    PYTHON_VERSION=\"3.6.5\" \\\n    PYTHON_PIP_VERSION=\"10.0.0\" \\\n    LC_ALL=\"C.UTF-8\" \\\n    LANG=\"C.UTF-8\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends tcl-dev tk-dev -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\" \\\n && wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && (gpg --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys \"$GPG_KEY\" || gpg --keyserver pgp.mit.edu --recv-keys \"$GPG_KEY\" || gpg --keyserver keyserver.ubuntu.com --recv-keys \"$GPG_KEY\" ) \\\n && gpg --batch --verify python.tar.xz.asc python.tar.xz \\\n && rm -r \"$GNUPGHOME\" python.tar.xz.asc \\\n && mkdir -p /usr/src/python \\\n && tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \\\n && rm python.tar.xz \\\n && cd /usr/src/python \\\n && ./configure --enable-loadable-sqlite-extensions --enable-shared \\\n && make -j$( nproc ;) \\\n && make install \\\n && ldconfig \\\n && if [ ! -e /usr/local/bin/pip3 ] ; then : \\\n && wget -O /tmp/get-pip.py 'https://bootstrap.pypa.io/get-pip.py' \\\n && python3 /tmp/get-pip.py \"pip==$PYTHON_PIP_VERSION\" \\\n && rm /tmp/get-pip.py ; fi \\\n && pip3 install --no-cache-dir --upgrade --force-reinstall \"pip==$PYTHON_PIP_VERSION\" \\\n && pip install boto3 pipenv virtualenv awscli==1.* --no-cache-dir \\\n && [ \"$( pip list | tac | tac | awk -F '[ ()]+' '$1 == \"pip\" { print $2; exit }' ;)\" = \"$PYTHON_PIP_VERSION\" ] \\\n && find /usr/local -depth ( ( -type d -a -name test -o -name tests ) -o ( -type f -a -name '*.pyc' -o -name '*.pyo' ) ) -exec rm -rf '{}' + \\\n && apt-get purge -y --auto-remove tcl-dev tk-dev \\\n && rm -rf /usr/src/python ~/.cache \\\n && cd /usr/local/bin \\\n && { [ -e easy_install ] || ln -s easy_install-* easy_install ; } \\\n && ln -s idle3 idle \\\n && ln -s pydoc3 pydoc \\\n && ln -s python3 python \\\n && ln -s python3-config python-config \\\n && rm -fr /var/lib/apt/lists/* /tmp/* /var/tmp/*\nENV JAVA_VERSION=\"8\" \\\n    JAVA_HOME=\"/usr/lib/jvm/java-8-openjdk-amd64\" \\\n    JDK_VERSION=\"8u171-b11-2~14.04\" \\\n    JDK_HOME=\"/usr/lib/jvm/java-8-openjdk-amd64\" \\\n    JRE_HOME=\"/usr/lib/jvm/java-8-openjdk-amd64/jre\" \\\n    ANT_VERSION=\"1.9.6\" \\\n    MAVEN_VERSION=\"3.3.3\" \\\n    MAVEN_HOME=\"/usr/share/maven\" \\\n    MAVEN_CONFIG=\"/root/.m2\" \\\n    GRADLE_VERSION=\"2.7\" \\\n    PROPERTIES_COMMON_VERSIION=\"0.92.37.8\" \\\n    PYTHON_TOOL_VERSION=\"3.3-*\"\n#  Install Java\nRUN set -ex \\\n && apt-get update \\\n && apt-get install software-properties-common=$PROPERTIES_COMMON_VERSIION -y \\\n && add-apt-repository ppa:openjdk-r/ppa \\\n && apt-get update \\\n && apt-get install python-setuptools=$PYTHON_TOOL_VERSION -y \\\n && apt-get install openjdk-$JAVA_VERSION-jdk=$JDK_VERSION -y \\\n && apt-get clean \\\n && update-ca-certificates -f \\\n && mkdir -p /usr/src/ant \\\n && wget \"http://archive.apache.org/dist/ant/binaries/apache-ant-$ANT_VERSION-bin.tar.gz\" -O /usr/src/ant/apache-ant-$ANT_VERSION-bin.tar.gz \\\n && tar -xzf /usr/src/ant/apache-ant-$ANT_VERSION-bin.tar.gz -C /usr/local \\\n && ln -s /usr/local/apache-ant-$ANT_VERSION/bin/ant /usr/bin/ant \\\n && rm -rf /usr/src/ant \\\n && mkdir -p /usr/share/maven /usr/share/maven/ref $MAVEN_CONFIG \\\n && curl -fsSL \"https://archive.apache.org/dist/maven/maven-3/$MAVEN_VERSION/binaries/apache-maven-$MAVEN_VERSION-bin.tar.gz\" | tar -xzC /usr/share/maven --strip-components=1 \\\n && ln -s /usr/share/maven/bin/mvn /usr/bin/mvn \\\n && mkdir -p /usr/src/gradle \\\n && wget \"https://services.gradle.org/distributions/gradle-$GRADLE_VERSION-bin.zip\" -O /usr/src/gradle/gradle-$GRADLE_VERSION-bin.zip \\\n && unzip /usr/src/gradle/gradle-$GRADLE_VERSION-bin.zip -d /usr/local \\\n && ln -s /usr/local/gradle-$GRADLE_VERSION/bin/gradle /usr/bin/gradle \\\n && rm -rf /usr/src/gradle \\\n && rm -fr /var/lib/apt/lists/* /tmp/* /var/tmp/*\nCOPY m2-settings.xml $MAVEN_CONFIG/settings.xml\n#  MMS build environment\nRUN set -ex \\\n && apt-get update \\\n && pip install retrying \\\n && pip install mock \\\n && pip install pytest -U \\\n && pip install pylint\n#  Install protobuf\nRUN wget https://github.com/google/protobuf/archive/v3.4.1.zip \\\n && unzip v3.4.1.zip \\\n && rm v3.4.1.zip \\\n && cd protobuf-3.4.1 \\\n && ./autogen.sh \\\n && ./configure --prefix=/usr \\\n && make \\\n && make install \\\n && cd .. \\\n && rm -r protobuf-3.4.1\n","injectedSmells":[],"originalDockerfileHash":"8bc0e866cfad2ba669fab7e8e858f6e3","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n#   Licensed under the Apache License, Version 2.0 (the \"License\").\n#   You may not use this file except in compliance with the License.\n#   A copy of the License is located at\n#       http://www.apache.org/licenses/LICENSE-2.0\n#   or in the \"license\" file accompanying this file. This file is distributed\n#   on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n#   express or implied. See the License for the specific language governing\n#   permissions and limitations under the License.\n#\nFROM ubuntu:14.04.5\nENV LANG=\"C.UTF-8\"\nENV DOCKER_BUCKET=\"download.docker.com\" \\\n    DOCKER_VERSION=\"17.09.0-ce\" \\\n    DOCKER_CHANNEL=\"stable\" \\\n    DOCKER_SHA256=\"a9e90a73c3cdfbf238f148e1ec0eaff5eb181f92f35bdd938fd7dab18e1c4647\" \\\n    DIND_COMMIT=\"3b5fac462d21ca164b3778647420016315289034\" \\\n    DOCKER_COMPOSE_VERSION=\"1.16.1\" \\\n    GITVERSION_VERSION=\"3.6.5\"\n#   Install git\nRUN set -ex \\\n && apt-get update \\\n && apt-get install --no-install-recommends software-properties-common -y \\\n && apt-add-repository ppa:git-core/ppa \\\n && apt-get update \\\n && apt-get install --no-install-recommends git -y \\\n && git version\nRUN set -ex \\\n && echo 'Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/99use-gzip-compression \\\n && apt-get update \\\n && apt-get install --no-install-recommends ca-certificates wget=1.15-* fakeroot=1.20-* autoconf=2.69-* automake=1:1.14.* less=458-* groff=1.22.* bzip2=1.0.* file=1:5.14-* g++=4:4.8.* gcc=4:4.8.* imagemagick=8:6.7.* libbz2-dev=1.0.* libc6-dev=2.19-* libcurl4-openssl-dev=7.35.* curl=7.35.* libdb-dev=1:5.3.* libevent-dev=2.0.* libffi-dev=3.1~* libgeoip-dev=1.6.* libglib2.0-dev=2.40.* libjpeg-dev=8c-* libkrb5-dev=1.12+* liblzma-dev=5.1.* libmagickcore-dev=8:6.7.* libmagickwand-dev=8:6.7.* libmysqlclient-dev=5.5.* libncurses5-dev=5.9+* libpng12-dev=1.2.* libpq-dev=9.3.* libreadline-dev=6.3-* libsqlite3-dev=3.8.* libssl-dev=1.0.* libtool=2.4.* libwebp-dev=0.4.* libxml2-dev=2.9.* libxslt1-dev=1.1.* libyaml-dev=0.1.* make=3.81-* patch=2.7.* xz-utils=5.1.* zlib1g-dev=1:1.2.* tcl=8.6.* tk=8.6.* e2fsprogs=1.42.* iptables=1.4.* xfsprogs=3.1.* xz-utils=5.1.* mono-mcs=3.2.* libcurl4-openssl-dev=7.35.* liberror-perl=0.17-* unzip=6.0-* -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && apt-get clean\n#   Download and set up GitVersion\nRUN set -ex \\\n && wget \"https://github.com/GitTools/GitVersion/releases/download/v${GITVERSION_VERSION}/GitVersion_${GITVERSION_VERSION}.zip\" -O /tmp/GitVersion_${GITVERSION_VERSION}.zip \\\n && mkdir -p /usr/local/GitVersion_${GITVERSION_VERSION} \\\n && unzip /tmp/GitVersion_${GITVERSION_VERSION}.zip -d /usr/local/GitVersion_${GITVERSION_VERSION} \\\n && rm /tmp/GitVersion_${GITVERSION_VERSION}.zip \\\n && echo \"mono /usr/local/GitVersion_${GITVERSION_VERSION}/GitVersion.exe /output json /showvariable $1\" >> /usr/local/bin/gitversion \\\n && chmod +x /usr/local/bin/gitversion\n#   Install Docker\nRUN set -ex \\\n && curl -fSL \"https://${DOCKER_BUCKET}/linux/static/${DOCKER_CHANNEL}/x86_64/docker-${DOCKER_VERSION}.tgz\" -o docker.tgz \\\n && echo \"${DOCKER_SHA256} *docker.tgz\" | sha256sum -c - \\\n && tar --extract --file docker.tgz --strip-components 1 --directory /usr/local/bin/ \\\n && rm docker.tgz \\\n && docker -v \\\n && addgroup dockremap \\\n && useradd -g dockremap dockremap \\\n && echo 'dockremap:165536:65536' >> /etc/subuid \\\n && echo 'dockremap:165536:65536' >> /etc/subgid \\\n && wget \"https://raw.githubusercontent.com/docker/docker/${DIND_COMMIT}/hack/dind\" -O /usr/local/bin/dind \\\n && curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-Linux-x86_64 > /usr/local/bin/docker-compose \\\n && chmod +x /usr/local/bin/dind /usr/local/bin/docker-compose \\\n && docker-compose version\nVOLUME /var/lib/docker\nCOPY dockerd-entrypoint.sh /usr/local/bin/\nENV PATH=\"/usr/local/bin:$PATH\" \\\n    GPG_KEY=\"0D96DF4D4110E5C43FBFB17F2D347EA6AA65421D\" \\\n    PYTHON_VERSION=\"3.6.5\" \\\n    PYTHON_PIP_VERSION=\"10.0.0\" \\\n    LC_ALL=\"C.UTF-8\" \\\n    LANG=\"C.UTF-8\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends tcl-dev tk-dev -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\" \\\n && wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && (gpg --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys \"$GPG_KEY\" || gpg --keyserver pgp.mit.edu --recv-keys \"$GPG_KEY\" || gpg --keyserver keyserver.ubuntu.com --recv-keys \"$GPG_KEY\" ) \\\n && gpg --batch --verify python.tar.xz.asc python.tar.xz \\\n && rm -r \"$GNUPGHOME\" python.tar.xz.asc \\\n && mkdir -p /usr/src/python \\\n && tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \\\n && rm python.tar.xz \\\n && cd /usr/src/python \\\n && ./configure --enable-loadable-sqlite-extensions --enable-shared \\\n && make -j$( nproc ;) \\\n && make install \\\n && ldconfig \\\n && if [ ! -e /usr/local/bin/pip3 ] ; then : \\\n && wget -O /tmp/get-pip.py 'https://bootstrap.pypa.io/get-pip.py' \\\n && python3 /tmp/get-pip.py \"pip==$PYTHON_PIP_VERSION\" \\\n && rm /tmp/get-pip.py ; fi \\\n && pip3 install --no-cache-dir --upgrade --force-reinstall \"pip==$PYTHON_PIP_VERSION\" \\\n && pip install boto3 pipenv virtualenv awscli==1.* --no-cache-dir \\\n && [ \"$( pip list | tac | tac | awk -F '[ ()]+' '$1 == \"pip\" { print $2; exit }' ;)\" = \"$PYTHON_PIP_VERSION\" ] \\\n && find /usr/local -depth\nENV JAVA_VERSION=\"8\" \\\n    JAVA_HOME=\"/usr/lib/jvm/java-8-openjdk-amd64\" \\\n    JDK_VERSION=\"8u171-b11-2~14.04\" \\\n    JDK_HOME=\"/usr/lib/jvm/java-8-openjdk-amd64\" \\\n    JRE_HOME=\"/usr/lib/jvm/java-8-openjdk-amd64/jre\" \\\n    ANT_VERSION=\"1.9.6\" \\\n    MAVEN_VERSION=\"3.3.3\" \\\n    MAVEN_HOME=\"/usr/share/maven\" \\\n    MAVEN_CONFIG=\"/root/.m2\" \\\n    GRADLE_VERSION=\"2.7\" \\\n    PROPERTIES_COMMON_VERSIION=\"0.92.37.8\" \\\n    PYTHON_TOOL_VERSION=\"3.3-*\"\n#   Install Java\nRUN set -ex \\\n && apt-get update \\\n && apt-get install software-properties-common=$PROPERTIES_COMMON_VERSIION -y \\\n && add-apt-repository ppa:openjdk-r/ppa \\\n && apt-get update \\\n && apt-get install python-setuptools=$PYTHON_TOOL_VERSION -y \\\n && apt-get install openjdk-$JAVA_VERSION-jdk=$JDK_VERSION -y \\\n && apt-get clean \\\n && update-ca-certificates -f \\\n && mkdir -p /usr/src/ant \\\n && wget \"http://archive.apache.org/dist/ant/binaries/apache-ant-$ANT_VERSION-bin.tar.gz\" -O /usr/src/ant/apache-ant-$ANT_VERSION-bin.tar.gz \\\n && tar -xzf /usr/src/ant/apache-ant-$ANT_VERSION-bin.tar.gz -C /usr/local \\\n && ln -s /usr/local/apache-ant-$ANT_VERSION/bin/ant /usr/bin/ant \\\n && rm -rf /usr/src/ant \\\n && mkdir -p /usr/share/maven /usr/share/maven/ref $MAVEN_CONFIG \\\n && curl -fsSL \"https://archive.apache.org/dist/maven/maven-3/$MAVEN_VERSION/binaries/apache-maven-$MAVEN_VERSION-bin.tar.gz\" | tar -xzC /usr/share/maven --strip-components=1 \\\n && ln -s /usr/share/maven/bin/mvn /usr/bin/mvn \\\n && mkdir -p /usr/src/gradle \\\n && wget \"https://services.gradle.org/distributions/gradle-$GRADLE_VERSION-bin.zip\" -O /usr/src/gradle/gradle-$GRADLE_VERSION-bin.zip \\\n && unzip /usr/src/gradle/gradle-$GRADLE_VERSION-bin.zip -d /usr/local \\\n && ln -s /usr/local/gradle-$GRADLE_VERSION/bin/gradle /usr/bin/gradle \\\n && rm -rf /usr/src/gradle \\\n && rm -fr /var/lib/apt/lists/* /tmp/* /var/tmp/*\nCOPY m2-settings.xml $MAVEN_CONFIG/settings.xml\n#   MMS build environment\nRUN set -ex \\\n && apt-get update \\\n && pip install retrying \\\n && pip install mock \\\n && pip install pytest -U \\\n && pip install pylint\n#   Install protobuf\nRUN wget https://github.com/google/protobuf/archive/v3.4.1.zip \\\n && unzip v3.4.1.zip \\\n && rm v3.4.1.zip \\\n && cd protobuf-3.4.1 \\\n && ./autogen.sh \\\n && ./configure --prefix=/usr \\\n && make \\\n && make install \\\n && cd .. \\\n && rm -r protobuf-3.4.1\n","originalDockerfileUglifiedHash":"038523808ba4d7b5eda74772c298d2c6","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/76c45a3142c39785176e1ce032bb6fb82c5ef5a4.dockerfile"}