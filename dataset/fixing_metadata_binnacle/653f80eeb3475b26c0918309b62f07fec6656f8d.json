{"seed":3472201964,"processedDockerfileHash":"b3055d00b26b23d073ff8f0bedc258cf","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM openjdk:8\nMAINTAINER Entria <developers@entria.com.br>\nRUN mkdir -p /opt/app\nWORKDIR /opt/app\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#   Install general dependencies\nRUN dpkg --add-architecture i386 \\\n && apt-get update \\\n && apt-get install --no-install-recommends apt-transport-https=2.2.4 autoconf=2.69-14 automake=1:1.16.3-2 build-essential=12.9 imagemagick=8:6.9.11.60+dfsg-1.3+deb11u1 jq=1.6-2.1 libc6:i386 libcurl3 libcurl3-gnutls=7.74.0-1.3+deb11u7 libcurl4-openssl-dev=7.74.0-1.3+deb11u7 libncurses5:i386 librsvg2-bin=2.50.3+dfsg-1 libssl-dev=1.1.1n-0+deb11u4 libstdc++6:i386 pkg-config=0.29.2-1 python python-dev python-pip python-setuptools=44.1.1-1 software-properties-common=0.96.20.2-2.1 zlib1g:i386 zlib1g-dev=1:1.2.11.dfsg-2+deb11u2 -yq\n#   Install AWS CLI\nRUN pip install awscli==1.27.114 --upgrade\nENV RUBY_VERSION=\"2.4.4\"\nENV ANDROID_HOME=\"/opt/android-sdk-linux\"\nENV ANDROID_SDK=\"${ANDROID_HOME}\"\nENV PATH=\"${ANDROID_SDK}/tools:${ANDROID_SDK}/platform-tools:${ANDROID_SDK}/tools/bin:${PATH}\"\nRUN echo \"export PATH=${PATH}\" > /root/.profile\n#   Install Android SDK (based on: https://github.com/gfx/docker-android-project/blob/master/Dockerfile)\n#   See for CircleCI Issue:\n#    https://discuss.circleci.com/t/failed-to-register-layer-error-processing-tar-file-exit-status-1-container-id-249512-cannot-be-mapped-to-a-host-id/13453/5\n#   Grab URL from footer of https://developer.android.com/studio/index.html\n#   Following URL is for 26.0.2\nENV ANDROID_SDK_URL=\"https://dl.google.com/android/repository/sdk-tools-linux-3859397.zip\"\n#  ENV ANDROID_BUILD_TOOLS_VERSION 26.0.2,25.0.3\n#  ENV ANDROID_API_LEVELS android-26,android-25\n#  ENV ANDROID_COMPONENTS platform-tools,build-tools-${ANDROID_BUILD_TOOLS_VERSION},${ANDROID_API_LEVELS}\n#  ENV GOOGLE_COMPONENTS extra-android-m2repository,extra-google-m2repository,extra-google-google_play_services,extra-google-gcm\nRUN curl -L \"${ANDROID_SDK_URL}\" -o /tmp/android-sdk-linux.zip \\\n && unzip /tmp/android-sdk-linux.zip -d /opt/ \\\n && chown -R root:root /opt \\\n && rm /tmp/android-sdk-linux.zip \\\n && mkdir ${ANDROID_HOME} \\\n && mv /opt/tools ${ANDROID_HOME}/ \\\n && ls ${ANDROID_HOME} \\\n && ls ${ANDROID_HOME}/tools \\\n && chown -R root:root ${ANDROID_HOME}\n#   Install Android SDK components\nRUN echo y | sdkmanager \"platform-tools\" \"build-tools;26.0.2\" \"build-tools;25.0.3\" \"platforms;android-26\" \"platforms;android-25\" \"extras;google;m2repository\" \"extras;android;m2repository\" \"extras;google;google_play_services\"\nRUN echo y | sdkmanager --licenses\n#   Install Watchman\nRUN git clone https://github.com/facebook/watchman.git \\\n && cd watchman \\\n && git checkout v4.7.0 \\\n && ./autogen.sh \\\n && ./configure \\\n && make \\\n && make install \\\n && cd .. \\\n && rm -rf watchman\n#   Install Ruby and RubyGems\nRUN wget http://ftp.ruby-lang.org/pub/ruby/ruby-${RUBY_VERSION}.tar.gz \\\n && tar -xzf ruby-${RUBY_VERSION}.tar.gz \\\n && rm ruby-${RUBY_VERSION}.tar.gz \\\n && cd ruby-${RUBY_VERSION}/ \\\n && ./configure --disable-install-rdoc \\\n && make \\\n && make install\n#   Install bundler\nRUN gem install bundler --version 2.4.12\n#   Install Slack CLI https://github.com/rockymadden/slack-cli\nRUN curl -O https://raw.githubusercontent.com/rockymadden/slack-cli/master/src/slack \\\n && chmod +x slack \\\n && ln -s /opt/app/slack /usr/local/bin/slack\n#   Install Node JS and Yarn\n#   https://github.com/nodejs/docker-node/blob/12ba2e5432cd50037b6c0cf53464b5063b028227/8.1/Dockerfile\nENV NPM_CONFIG_LOGLEVEL=\"info\"\nENV NODE_VERSION=\"10.13.0\"\nENV YARN_VERSION=\"1.12.3\"\nRUN groupadd --gid 1000 node \\\n && useradd --uid 1000 --gid node --shell /bin/bash --create-home node\n#   gpg keys listed at https://github.com/nodejs/node#release-keys\nRUN set -ex \\\n && for key in 94AE36675C464D64BAFA68DD7434390BDBE9B9C5 B9AE9905FFD7803F25714661B63B535A4C206CA9 77984A986EBC2AA786BC0F66B01FBB92821C587A 71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 FD3A5288F042B6850C66B31F09FE44734EB7990E 8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600 C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 DD8F2338BAE7501E3DD5AC78C273792F7D83545D; do gpg --no-tty --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys \"$key\" || gpg --no-tty --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys \"$key\" || gpg --no-tty --keyserver hkp://pgp.mit.edu:80 --recv-keys \"$key\" ; done\nRUN ARCH= \\\n && dpkgArch=\"$( dpkg --print-architecture ;)\" \\\n && case \"${dpkgArch##*-}\" in (amd64) ARCH='x64' ;;(ppc64el) ARCH='ppc64le' ;;(s390x) ARCH='s390x' ;;(arm64) ARCH='arm64' ;;(armhf) ARCH='armv7l' ;;(i386) ARCH='x86' ;;(*) echo \"unsupported architecture\" ; exit 1 ;; esac \\\n && curl -fsSLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-$ARCH.tar.xz\" \\\n && curl -fsSLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\" \\\n && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc \\\n && grep \" node-v$NODE_VERSION-linux-$ARCH.tar.xz$\" SHASUMS256.txt | sha256sum -c - \\\n && tar -xJf \"node-v$NODE_VERSION-linux-$ARCH.tar.xz\" -C /usr/local --strip-components=1 --no-same-owner \\\n && rm \"node-v$NODE_VERSION-linux-$ARCH.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt \\\n && ln -s /usr/local/bin/node /usr/local/bin/nodejs\nRUN set -ex \\\n && for key in 6A010C5166006599AA17F08146C2130DFD2497F5; do gpg --no-tty --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys \"$key\" || gpg --no-tty --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys \"$key\" || gpg --no-tty --keyserver hkp://pgp.mit.edu:80 --recv-keys \"$key\" ; done \\\n && curl -fsSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz\" \\\n && curl -fsSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz.asc\" \\\n && gpg --batch --verify yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz \\\n && mkdir -p /opt \\\n && tar -xzf yarn-v$YARN_VERSION.tar.gz -C /opt/ \\\n && ln -s /opt/yarn-v$YARN_VERSION/bin/yarn /usr/local/bin/yarn \\\n && ln -s /opt/yarn-v$YARN_VERSION/bin/yarnpkg /usr/local/bin/yarnpkg \\\n && rm yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz\n#   Clean\nRUN rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \\\n && apt-get autoremove -y \\\n && apt-get clean\n#   Support Gradle\nENV TERM=\"dumb\"\n#   Install code-push-cli\nRUN npm install code-push-cli@3.0.0 -g \\\n && chown -R root:root /usr/local/lib/node_modules/code-push-cli/node_modules\nCOPY entrypoint.sh /entrypoint.sh\nENTRYPOINT [\"/entrypoint.sh\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM openjdk:8\nMAINTAINER Entria <developers@entria.com.br>\nRUN mkdir -p /opt/app\nWORKDIR /opt/app\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#  Install general dependencies\nRUN dpkg --add-architecture i386 \\\n && apt-get update \\\n && apt-get install --no-install-recommends apt-transport-https autoconf automake build-essential imagemagick jq libc6:i386 libcurl3 libcurl3-gnutls libcurl4-openssl-dev libncurses5:i386 librsvg2-bin libssl-dev libstdc++6:i386 pkg-config python python-dev python-pip python-setuptools software-properties-common zlib1g:i386 zlib1g-dev -yq\n#  Install AWS CLI\nRUN pip install awscli --upgrade\nENV RUBY_VERSION=\"2.4.4\"\nENV ANDROID_HOME=\"/opt/android-sdk-linux\"\nENV ANDROID_SDK=\"${ANDROID_HOME}\"\nENV PATH=\"${ANDROID_SDK}/tools:${ANDROID_SDK}/platform-tools:${ANDROID_SDK}/tools/bin:${PATH}\"\nRUN echo \"export PATH=${PATH}\" > /root/.profile\n#  Install Android SDK (based on: https://github.com/gfx/docker-android-project/blob/master/Dockerfile)\n#  See for CircleCI Issue:\n#   https://discuss.circleci.com/t/failed-to-register-layer-error-processing-tar-file-exit-status-1-container-id-249512-cannot-be-mapped-to-a-host-id/13453/5\n#  Grab URL from footer of https://developer.android.com/studio/index.html\n#  Following URL is for 26.0.2\nENV ANDROID_SDK_URL=\"https://dl.google.com/android/repository/sdk-tools-linux-3859397.zip\"\n# ENV ANDROID_BUILD_TOOLS_VERSION 26.0.2,25.0.3\n# ENV ANDROID_API_LEVELS android-26,android-25\n# ENV ANDROID_COMPONENTS platform-tools,build-tools-${ANDROID_BUILD_TOOLS_VERSION},${ANDROID_API_LEVELS}\n# ENV GOOGLE_COMPONENTS extra-android-m2repository,extra-google-m2repository,extra-google-google_play_services,extra-google-gcm\nRUN curl -L \"${ANDROID_SDK_URL}\" -o /tmp/android-sdk-linux.zip \\\n && unzip /tmp/android-sdk-linux.zip -d /opt/ \\\n && chown -R root:root /opt \\\n && rm /tmp/android-sdk-linux.zip \\\n && mkdir ${ANDROID_HOME} \\\n && mv /opt/tools ${ANDROID_HOME}/ \\\n && ls ${ANDROID_HOME} \\\n && ls ${ANDROID_HOME}/tools \\\n && chown -R root:root ${ANDROID_HOME}\n#  Install Android SDK components\nRUN echo y | sdkmanager \"platform-tools\" \"build-tools;26.0.2\" \"build-tools;25.0.3\" \"platforms;android-26\" \"platforms;android-25\" \"extras;google;m2repository\" \"extras;android;m2repository\" \"extras;google;google_play_services\"\nRUN echo y | sdkmanager --licenses\n#  Install Watchman\nRUN git clone https://github.com/facebook/watchman.git \\\n && cd watchman \\\n && git checkout v4.7.0 \\\n && ./autogen.sh \\\n && ./configure \\\n && make \\\n && make install \\\n && cd .. \\\n && rm -rf watchman\n#  Install Ruby and RubyGems\nRUN wget http://ftp.ruby-lang.org/pub/ruby/ruby-${RUBY_VERSION}.tar.gz \\\n && tar -xzf ruby-${RUBY_VERSION}.tar.gz \\\n && rm ruby-${RUBY_VERSION}.tar.gz \\\n && cd ruby-${RUBY_VERSION}/ \\\n && ./configure --disable-install-rdoc \\\n && make \\\n && make install\n#  Install bundler\nRUN gem install bundler\n#  Install Slack CLI https://github.com/rockymadden/slack-cli\nRUN curl -O https://raw.githubusercontent.com/rockymadden/slack-cli/master/src/slack \\\n && chmod +x slack \\\n && ln -s /opt/app/slack /usr/local/bin/slack\n#  Install Node JS and Yarn\n#  https://github.com/nodejs/docker-node/blob/12ba2e5432cd50037b6c0cf53464b5063b028227/8.1/Dockerfile\nENV NPM_CONFIG_LOGLEVEL=\"info\"\nENV NODE_VERSION=\"10.13.0\"\nENV YARN_VERSION=\"1.12.3\"\nRUN groupadd --gid 1000 node \\\n && useradd --uid 1000 --gid node --shell /bin/bash --create-home node\n#  gpg keys listed at https://github.com/nodejs/node#release-keys\nRUN set -ex \\\n && for key in 94AE36675C464D64BAFA68DD7434390BDBE9B9C5 B9AE9905FFD7803F25714661B63B535A4C206CA9 77984A986EBC2AA786BC0F66B01FBB92821C587A 71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 FD3A5288F042B6850C66B31F09FE44734EB7990E 8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600 C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 DD8F2338BAE7501E3DD5AC78C273792F7D83545D; do gpg --no-tty --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys \"$key\" || gpg --no-tty --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys \"$key\" || gpg --no-tty --keyserver hkp://pgp.mit.edu:80 --recv-keys \"$key\" ; done\nRUN ARCH= \\\n && dpkgArch=\"$( dpkg --print-architecture ;)\" \\\n && case \"${dpkgArch##*-}\" in (amd64) ARCH='x64' ;;(ppc64el) ARCH='ppc64le' ;;(s390x) ARCH='s390x' ;;(arm64) ARCH='arm64' ;;(armhf) ARCH='armv7l' ;;(i386) ARCH='x86' ;;(*) echo \"unsupported architecture\" ; exit 1 ;; esac \\\n && curl -fsSLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-$ARCH.tar.xz\" \\\n && curl -fsSLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\" \\\n && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc \\\n && grep \" node-v$NODE_VERSION-linux-$ARCH.tar.xz$\" SHASUMS256.txt | sha256sum -c - \\\n && tar -xJf \"node-v$NODE_VERSION-linux-$ARCH.tar.xz\" -C /usr/local --strip-components=1 --no-same-owner \\\n && rm \"node-v$NODE_VERSION-linux-$ARCH.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt \\\n && ln -s /usr/local/bin/node /usr/local/bin/nodejs\nRUN set -ex \\\n && for key in 6A010C5166006599AA17F08146C2130DFD2497F5; do gpg --no-tty --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys \"$key\" || gpg --no-tty --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys \"$key\" || gpg --no-tty --keyserver hkp://pgp.mit.edu:80 --recv-keys \"$key\" ; done \\\n && curl -fsSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz\" \\\n && curl -fsSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz.asc\" \\\n && gpg --batch --verify yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz \\\n && mkdir -p /opt \\\n && tar -xzf yarn-v$YARN_VERSION.tar.gz -C /opt/ \\\n && ln -s /opt/yarn-v$YARN_VERSION/bin/yarn /usr/local/bin/yarn \\\n && ln -s /opt/yarn-v$YARN_VERSION/bin/yarnpkg /usr/local/bin/yarnpkg \\\n && rm yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz\n#  Clean\nRUN rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \\\n && apt-get autoremove -y \\\n && apt-get clean\n#  Support Gradle\nENV TERM=\"dumb\"\n#  Install code-push-cli\nRUN npm install code-push-cli -g \\\n && chown -R root:root /usr/local/lib/node_modules/code-push-cli/node_modules\nCOPY entrypoint.sh /entrypoint.sh\nENTRYPOINT [\"/entrypoint.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"b6092e14bd68dc0b03f973decef598ec","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM openjdk:8\nMAINTAINER Entria <developers@entria.com.br>\nRUN mkdir -p /opt/app\nWORKDIR /opt/app\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#   Install general dependencies\nRUN dpkg --add-architecture i386 \\\n && apt-get update \\\n && apt-get install --no-install-recommends apt-transport-https autoconf automake build-essential imagemagick jq libc6:i386 libcurl3 libcurl3-gnutls libcurl4-openssl-dev libncurses5:i386 librsvg2-bin libssl-dev libstdc++6:i386 pkg-config python python-dev python-pip python-setuptools software-properties-common zlib1g:i386 zlib1g-dev -yq\n#   Install AWS CLI\nRUN pip install awscli --upgrade\nENV RUBY_VERSION=\"2.4.4\"\nENV ANDROID_HOME=\"/opt/android-sdk-linux\"\nENV ANDROID_SDK=\"${ANDROID_HOME}\"\nENV PATH=\"${ANDROID_SDK}/tools:${ANDROID_SDK}/platform-tools:${ANDROID_SDK}/tools/bin:${PATH}\"\nRUN echo \"export PATH=${PATH}\" > /root/.profile\n#   Install Android SDK (based on: https://github.com/gfx/docker-android-project/blob/master/Dockerfile)\n#   See for CircleCI Issue:\n#    https://discuss.circleci.com/t/failed-to-register-layer-error-processing-tar-file-exit-status-1-container-id-249512-cannot-be-mapped-to-a-host-id/13453/5\n#   Grab URL from footer of https://developer.android.com/studio/index.html\n#   Following URL is for 26.0.2\nENV ANDROID_SDK_URL=\"https://dl.google.com/android/repository/sdk-tools-linux-3859397.zip\"\n#  ENV ANDROID_BUILD_TOOLS_VERSION 26.0.2,25.0.3\n#  ENV ANDROID_API_LEVELS android-26,android-25\n#  ENV ANDROID_COMPONENTS platform-tools,build-tools-${ANDROID_BUILD_TOOLS_VERSION},${ANDROID_API_LEVELS}\n#  ENV GOOGLE_COMPONENTS extra-android-m2repository,extra-google-m2repository,extra-google-google_play_services,extra-google-gcm\nRUN curl -L \"${ANDROID_SDK_URL}\" -o /tmp/android-sdk-linux.zip \\\n && unzip /tmp/android-sdk-linux.zip -d /opt/ \\\n && chown -R root:root /opt \\\n && rm /tmp/android-sdk-linux.zip \\\n && mkdir ${ANDROID_HOME} \\\n && mv /opt/tools ${ANDROID_HOME}/ \\\n && ls ${ANDROID_HOME} \\\n && ls ${ANDROID_HOME}/tools \\\n && chown -R root:root ${ANDROID_HOME}\n#   Install Android SDK components\nRUN echo y | sdkmanager \"platform-tools\" \"build-tools;26.0.2\" \"build-tools;25.0.3\" \"platforms;android-26\" \"platforms;android-25\" \"extras;google;m2repository\" \"extras;android;m2repository\" \"extras;google;google_play_services\"\nRUN echo y | sdkmanager --licenses\n#   Install Watchman\nRUN git clone https://github.com/facebook/watchman.git \\\n && cd watchman \\\n && git checkout v4.7.0 \\\n && ./autogen.sh \\\n && ./configure \\\n && make \\\n && make install \\\n && cd .. \\\n && rm -rf watchman\n#   Install Ruby and RubyGems\nRUN wget http://ftp.ruby-lang.org/pub/ruby/ruby-${RUBY_VERSION}.tar.gz \\\n && tar -xzf ruby-${RUBY_VERSION}.tar.gz \\\n && rm ruby-${RUBY_VERSION}.tar.gz \\\n && cd ruby-${RUBY_VERSION}/ \\\n && ./configure --disable-install-rdoc \\\n && make \\\n && make install\n#   Install bundler\nRUN gem install bundler\n#   Install Slack CLI https://github.com/rockymadden/slack-cli\nRUN curl -O https://raw.githubusercontent.com/rockymadden/slack-cli/master/src/slack \\\n && chmod +x slack \\\n && ln -s /opt/app/slack /usr/local/bin/slack\n#   Install Node JS and Yarn\n#   https://github.com/nodejs/docker-node/blob/12ba2e5432cd50037b6c0cf53464b5063b028227/8.1/Dockerfile\nENV NPM_CONFIG_LOGLEVEL=\"info\"\nENV NODE_VERSION=\"10.13.0\"\nENV YARN_VERSION=\"1.12.3\"\nRUN groupadd --gid 1000 node \\\n && useradd --uid 1000 --gid node --shell /bin/bash --create-home node\n#   gpg keys listed at https://github.com/nodejs/node#release-keys\nRUN set -ex \\\n && for key in 94AE36675C464D64BAFA68DD7434390BDBE9B9C5 B9AE9905FFD7803F25714661B63B535A4C206CA9 77984A986EBC2AA786BC0F66B01FBB92821C587A 71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 FD3A5288F042B6850C66B31F09FE44734EB7990E 8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600 C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 DD8F2338BAE7501E3DD5AC78C273792F7D83545D; do gpg --no-tty --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys \"$key\" || gpg --no-tty --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys \"$key\" || gpg --no-tty --keyserver hkp://pgp.mit.edu:80 --recv-keys \"$key\" ; done\nRUN ARCH= \\\n && dpkgArch=\"$( dpkg --print-architecture ;)\" \\\n && case \"${dpkgArch##*-}\" in (amd64) ARCH='x64' ;;(ppc64el) ARCH='ppc64le' ;;(s390x) ARCH='s390x' ;;(arm64) ARCH='arm64' ;;(armhf) ARCH='armv7l' ;;(i386) ARCH='x86' ;;(*) echo \"unsupported architecture\" ; exit 1 ;; esac \\\n && curl -fsSLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-$ARCH.tar.xz\" \\\n && curl -fsSLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\" \\\n && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc \\\n && grep \" node-v$NODE_VERSION-linux-$ARCH.tar.xz$\" SHASUMS256.txt | sha256sum -c - \\\n && tar -xJf \"node-v$NODE_VERSION-linux-$ARCH.tar.xz\" -C /usr/local --strip-components=1 --no-same-owner \\\n && rm \"node-v$NODE_VERSION-linux-$ARCH.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt \\\n && ln -s /usr/local/bin/node /usr/local/bin/nodejs\nRUN set -ex \\\n && for key in 6A010C5166006599AA17F08146C2130DFD2497F5; do gpg --no-tty --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys \"$key\" || gpg --no-tty --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys \"$key\" || gpg --no-tty --keyserver hkp://pgp.mit.edu:80 --recv-keys \"$key\" ; done \\\n && curl -fsSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz\" \\\n && curl -fsSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz.asc\" \\\n && gpg --batch --verify yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz \\\n && mkdir -p /opt \\\n && tar -xzf yarn-v$YARN_VERSION.tar.gz -C /opt/ \\\n && ln -s /opt/yarn-v$YARN_VERSION/bin/yarn /usr/local/bin/yarn \\\n && ln -s /opt/yarn-v$YARN_VERSION/bin/yarnpkg /usr/local/bin/yarnpkg \\\n && rm yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz\n#   Clean\nRUN rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \\\n && apt-get autoremove -y \\\n && apt-get clean\n#   Support Gradle\nENV TERM=\"dumb\"\n#   Install code-push-cli\nRUN npm install code-push-cli -g \\\n && chown -R root:root /usr/local/lib/node_modules/code-push-cli/node_modules\nCOPY entrypoint.sh /entrypoint.sh\nENTRYPOINT [\"/entrypoint.sh\"]\n","originalDockerfileUglifiedHash":"f156e3a450574e75e3cbf89601b696d0","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/653f80eeb3475b26c0918309b62f07fec6656f8d.dockerfile"}