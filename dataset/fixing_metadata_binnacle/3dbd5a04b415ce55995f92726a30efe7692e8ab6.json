{"seed":124785789,"processedDockerfileHash":"6c95bd6ae6c28407a970fbd8ebf657b2","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-pip","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   FROM defines the base image\n#   FROM ubuntu16.04\n#   FROM ubuntu:latest\nFROM nvidia/cuda:8.0-cudnn5-devel-ubuntu16.04\n#  #####################################\n#   SECTION 1: Essentials              #\n#  #####################################\n#   Set up SSH server (https://docs.docker.com/engine/examples/running_ssh_service/)\nRUN apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends openssh-server -y )\nRUN mkdir /var/run/sshd\nRUN echo 'root:source' | chpasswd\nRUN sed -i 's/PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config\n#   SSH login fix. Otherwise user is kicked off after login\nRUN sed 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd\nENV NOTVISIBLE=\"\\\"in users profile\\\"\"\nRUN echo \"export VISIBLE=now\" >> /etc/profile\n#  Fix SSH mode issue\nRUN echo \"export PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:$PATH\" >> /root/.bashrc\nRUN echo \"export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/nvidia/lib:/usr/local/nvidia/lib64\" >> /root/.bashrc\n#  Update apt-get and upgrade\nRUN apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends apt-utils -y )\nRUN apt-get -y upgrade\n#  Install python3 pip3\nRUN (apt-get update ;apt-get install --no-install-recommends python3 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends python3-pip -y )\nRUN pip3 install pip --upgrade\nRUN pip3 install numpy scipy\n#  Install python2.7  pip\nRUN (apt-get update ;apt-get install --no-install-recommends python2.7 -y )\nRUN wget https://bootstrap.pypa.io/get-pip.py \\\n && python2.7 get-pip.py\nRUN pip install pip==23.1 --upgrade\nRUN pip install numpy==1.24.2 scipy==1.10.1\n#   Set up ssh keys in order to be able to checkout TorrVision\nCOPY ./install/ssh-keys /root/.ssh\nRUN chmod -R 600 /root/.ssh\nRUN ssh-keyscan github.com >> ~/.ssh/known_hosts\n#  Set everything up for user \"user\"\nRUN mkdir /home/user\nRUN cp -R /root/.ssh /home/user/.ssh\nRUN chmod -R 600 /home/user/.ssh\n#   set up directories\nRUN mkdir /slamdoom\nRUN mkdir /slamdoom/tmp\nRUN mkdir /slamdoom/libs\nRUN :\n#  #####################################\n#   SECTION 2: CV packages             #\n#  #####################################\n#  ## -------------------------------------------------------------------\n#  ## install OpenCV 3 with python3 bindings and CUDA 8\n#  ## -------------------------------------------------------------------\nCOPY ./install/opencv3 /slamdoom/install/opencv3\nRUN chmod +x /slamdoom/install/opencv3/install.sh \\\n && /slamdoom/install/opencv3/install.sh /slamdoom/libs python3\n#  ### -------------------------------------------------------------------\n#  ### Install ORBSLAM2\n#  ### -------------------------------------------------------------------\nCOPY ./install/orbslam2 /slamdoom/install/orbslam2\nRUN chmod +x /slamdoom/install/orbslam2/install.sh \\\n && /slamdoom/install/orbslam2/install.sh\n#  ###########################################\n#  # SECTION: Additional libraries and tools #\n#  ###########################################\nRUN (apt-get update ;apt-get install --no-install-recommends vim -y )\n#  ###########################################\n#  # SECTION: Final instructions and configs #\n#  ###########################################\nRUN (apt-get update ;apt-get install --no-install-recommends libcanberra-gtk-module -y )\nRUN pip install matplotlib==3.7.1\n#   set up matplotlibrc file so have Qt5Agg backend by default\nRUN mkdir /root/.matplotlib \\\n && touch /root/.matplotlib/matplotlibrc \\\n && echo \"backend: Qt5Agg\" >> /root/.matplotlib/matplotlibrc\nRUN (apt-get update ;apt-get install --no-install-recommends gdb -y )\nRUN (apt-get update ;apt-get install --no-install-recommends libboost-all-dev -y )\nRUN pip install numpy==1.24.2 --upgrade\nRUN pip3 install numpy --upgrade\n#   Fix some linux issue\nENV DEBIAN_FRONTEND=\"teletype\"\n#   Expose ports\nEXPOSE 22/tcp\n#  Start SSH server\nCMD [\"/usr/sbin/sshd\", \"-D\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  FROM defines the base image\n#  FROM ubuntu16.04\n#  FROM ubuntu:latest\nFROM nvidia/cuda:8.0-cudnn5-devel-ubuntu16.04\n# #####################################\n#  SECTION 1: Essentials              #\n# #####################################\n#  Set up SSH server (https://docs.docker.com/engine/examples/running_ssh_service/)\nRUN apt-get update \\\n && apt-get install openssh-server -y\nRUN mkdir /var/run/sshd\nRUN echo 'root:source' | chpasswd\nRUN sed -i 's/PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config\n#  SSH login fix. Otherwise user is kicked off after login\nRUN sed 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd\nENV NOTVISIBLE=\"\\\"in users profile\\\"\"\nRUN echo \"export VISIBLE=now\" >> /etc/profile\n# Fix SSH mode issue\nRUN echo \"export PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:$PATH\" >> /root/.bashrc\nRUN echo \"export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/nvidia/lib:/usr/local/nvidia/lib64\" >> /root/.bashrc\n# Update apt-get and upgrade\nRUN apt-get update \\\n && apt-get install --no-install-recommends apt-utils -y\nRUN apt-get -y upgrade\n# Install python3 pip3\nRUN apt-get install python3 -y\nRUN apt-get install python3-pip -y\nRUN pip3 install pip --upgrade\nRUN pip3 install numpy scipy\n# Install python2.7  pip\nRUN apt-get install python2.7 -y\nRUN wget https://bootstrap.pypa.io/get-pip.py \\\n && python2.7 get-pip.py\nRUN pip install pip --upgrade\nRUN pip install numpy scipy\n#  Set up ssh keys in order to be able to checkout TorrVision\nADD ./install/ssh-keys /root/.ssh\nRUN chmod -R 600 /root/.ssh\nRUN ssh-keyscan github.com >> ~/.ssh/known_hosts\n# Set everything up for user \"user\"\nRUN mkdir /home/user\nRUN cp -R /root/.ssh /home/user/.ssh\nRUN chmod -R 600 /home/user/.ssh\n#  set up directories\nRUN mkdir /slamdoom\nRUN mkdir /slamdoom/tmp\nRUN mkdir /slamdoom/libs\nRUN apt-get update -y\n# #####################################\n#  SECTION 2: CV packages             #\n# #####################################\n# ## -------------------------------------------------------------------\n# ## install OpenCV 3 with python3 bindings and CUDA 8\n# ## -------------------------------------------------------------------\nADD ./install/opencv3 /slamdoom/install/opencv3\nRUN chmod +x /slamdoom/install/opencv3/install.sh \\\n && /slamdoom/install/opencv3/install.sh /slamdoom/libs python3\n# ### -------------------------------------------------------------------\n# ### Install ORBSLAM2\n# ### -------------------------------------------------------------------\nADD ./install/orbslam2 /slamdoom/install/orbslam2\nRUN chmod +x /slamdoom/install/orbslam2/install.sh \\\n && /slamdoom/install/orbslam2/install.sh\n# ###########################################\n# # SECTION: Additional libraries and tools #\n# ###########################################\nRUN apt-get install vim -y\n# ###########################################\n# # SECTION: Final instructions and configs #\n# ###########################################\nRUN apt-get install libcanberra-gtk-module -y\nRUN pip install matplotlib\n#  set up matplotlibrc file so have Qt5Agg backend by default\nRUN mkdir /root/.matplotlib \\\n && touch /root/.matplotlib/matplotlibrc \\\n && echo \"backend: Qt5Agg\" >> /root/.matplotlib/matplotlibrc\nRUN apt-get install gdb -y\nRUN apt-get install libboost-all-dev -y\nRUN pip install numpy --upgrade\nRUN pip3 install numpy --upgrade\n#  Fix some linux issue\nENV DEBIAN_FRONTEND=\"teletype\"\n#  Expose ports\nEXPOSE 22/tcp\n# Start SSH server\nCMD [\"/usr/sbin/sshd\", \"-D\"]\n","injectedSmells":[],"originalDockerfileHash":"94fcaf0a78e701cc5da2585f0770147d","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   FROM defines the base image\n#   FROM ubuntu16.04\n#   FROM ubuntu:latest\nFROM nvidia/cuda:8.0-cudnn5-devel-ubuntu16.04\n#  #####################################\n#   SECTION 1: Essentials              #\n#  #####################################\n#   Set up SSH server (https://docs.docker.com/engine/examples/running_ssh_service/)\nRUN apt-get update \\\n && apt-get install openssh-server -y\nRUN mkdir /var/run/sshd\nRUN echo 'root:source' | chpasswd\nRUN sed -i 's/PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config\n#   SSH login fix. Otherwise user is kicked off after login\nRUN sed 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd\nENV NOTVISIBLE=\"\\\"in users profile\\\"\"\nRUN echo \"export VISIBLE=now\" >> /etc/profile\n#  Fix SSH mode issue\nRUN echo \"export PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:$PATH\" >> /root/.bashrc\nRUN echo \"export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/nvidia/lib:/usr/local/nvidia/lib64\" >> /root/.bashrc\n#  Update apt-get and upgrade\nRUN apt-get update \\\n && apt-get install --no-install-recommends apt-utils -y\nRUN apt-get -y upgrade\n#  Install python3 pip3\nRUN apt-get install python3 -y\nRUN apt-get install python3-pip -y\nRUN pip3 install pip --upgrade\nRUN pip3 install numpy scipy\n#  Install python2.7  pip\nRUN apt-get install python2.7 -y\nRUN wget https://bootstrap.pypa.io/get-pip.py \\\n && python2.7 get-pip.py\nRUN pip install pip --upgrade\nRUN pip install numpy scipy\n#   Set up ssh keys in order to be able to checkout TorrVision\nADD ./install/ssh-keys /root/.ssh\nRUN chmod -R 600 /root/.ssh\nRUN ssh-keyscan github.com >> ~/.ssh/known_hosts\n#  Set everything up for user \"user\"\nRUN mkdir /home/user\nRUN cp -R /root/.ssh /home/user/.ssh\nRUN chmod -R 600 /home/user/.ssh\n#   set up directories\nRUN mkdir /slamdoom\nRUN mkdir /slamdoom/tmp\nRUN mkdir /slamdoom/libs\nRUN apt-get update -y\n#  #####################################\n#   SECTION 2: CV packages             #\n#  #####################################\n#  ## -------------------------------------------------------------------\n#  ## install OpenCV 3 with python3 bindings and CUDA 8\n#  ## -------------------------------------------------------------------\nADD ./install/opencv3 /slamdoom/install/opencv3\nRUN chmod +x /slamdoom/install/opencv3/install.sh \\\n && /slamdoom/install/opencv3/install.sh /slamdoom/libs python3\n#  ### -------------------------------------------------------------------\n#  ### Install ORBSLAM2\n#  ### -------------------------------------------------------------------\nADD ./install/orbslam2 /slamdoom/install/orbslam2\nRUN chmod +x /slamdoom/install/orbslam2/install.sh \\\n && /slamdoom/install/orbslam2/install.sh\n#  ###########################################\n#  # SECTION: Additional libraries and tools #\n#  ###########################################\nRUN apt-get install vim -y\n#  ###########################################\n#  # SECTION: Final instructions and configs #\n#  ###########################################\nRUN apt-get install libcanberra-gtk-module -y\nRUN pip install matplotlib\n#   set up matplotlibrc file so have Qt5Agg backend by default\nRUN mkdir /root/.matplotlib \\\n && touch /root/.matplotlib/matplotlibrc \\\n && echo \"backend: Qt5Agg\" >> /root/.matplotlib/matplotlibrc\nRUN apt-get install gdb -y\nRUN apt-get install libboost-all-dev -y\nRUN pip install numpy --upgrade\nRUN pip3 install numpy --upgrade\n#   Fix some linux issue\nENV DEBIAN_FRONTEND=\"teletype\"\n#   Expose ports\nEXPOSE 22/tcp\n#  Start SSH server\nCMD [\"/usr/sbin/sshd\", \"-D\"]\n","originalDockerfileUglifiedHash":"5c972cec383c94fbe19ff423d421f2d9","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/3dbd5a04b415ce55995f92726a30efe7692e8ab6.dockerfile"}