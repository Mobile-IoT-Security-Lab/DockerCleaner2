{"seed":4124031854,"processedDockerfileHash":"35b9327cc3df65cc6f8a05ef477c34b4","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","have-a-healthcheck","have-a-user"],"processedDockerfile":"#\n#   filebot Dockerfile\n#\n#   https://github.com/jlesage/docker-filebot\n#\n#   Pull base image.\nFROM jlesage/baseimage-gui:alpine-3.9-v3.5.2\n#   Define software versions.\nARG FILEBOT_VERSION=4.8.5\nARG OPENJFX_VERSION=8.151.12-r0\nARG CHROMAPRINT_VERSION=1.4.3\n#   Define software download URLs.\nARG FILEBOT_URL=https://get.filebot.net/filebot/FileBot_${FILEBOT_VERSION}/FileBot_${FILEBOT_VERSION}-portable.tar.xz\nARG OPENJFX_URL=https://github.com/sgerrand/alpine-pkg-java-openjfx/releases/download/${OPENJFX_VERSION}/java-openjfx-${OPENJFX_VERSION}.apk\nARG CHROMAPRINT_URL=https://github.com/acoustid/chromaprint/archive/v${CHROMAPRINT_VERSION}.tar.gz\n#   Define working directory.\nWORKDIR /tmp\n#   Install FileBot.\nRUN add-pkg --virtual build-dependencies curl \\\n && mkdir filebot \\\n && curl -# -L ${FILEBOT_URL} | tar xJ -C filebot \\\n && mkdir /opt/filebot \\\n && cp -Rv filebot/jar /opt/filebot/ \\\n && del-pkg build-dependencies \\\n && rm -rf /tmp/* /tmp/.[!.]*\n#   Install dependencies.\nRUN add-pkg --virtual build-dependencies curl \\\n && curl -# -L -o java-openjfx.apk ${OPENJFX_URL} \\\n && apk add ./java-openjfx.apk --no-cache --allow-untrusted \\\n && add-pkg p7zip unrar nss gtk+2.0 openjdk8-jre java-jna libmediainfo \\\n && add-pkg yad \\\n && del-pkg build-dependencies \\\n && rm -rf /tmp/* /tmp/.[!.]*\n#   Build and install chromaprint (fpcalc) for AcousItD.\nRUN add-pkg --virtual build-dependencies build-base cmake curl ffmpeg-dev fftw-dev \\\n && mkdir chromaprint \\\n && curl -# -L ${CHROMAPRINT_URL} | tar xz --strip 1 -C chromaprint \\\n && cd chromaprint \\\n && mkdir build \\\n && cd build \\\n && cmake -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_BUILD_TYPE=Release -DBUILD_TOOLS=ON .. \\\n && make -j$( nproc ;) \\\n && make install \\\n && cd .. \\\n && cd .. \\\n && del-pkg build-dependencies \\\n && rm /usr/lib/pkgconfig/libchromaprint.pc /usr/include/chromaprint.h \\\n && rmdir /usr/include /usr/lib/pkgconfig \\\n && rm -rf /tmp/* /tmp/.[!.]*\n#   Adjust the openbox config.\nRUN sed-patch 's/<application type=\"normal\">/<application type=\"normal\" title=\"FileBot \\*\">/' /etc/xdg/openbox/rc.xml \\\n && sed-patch '/<application type=\"normal\" title=\"FileBot \\*\">/a \\ <layer>below</layer>' /etc/xdg/openbox/rc.xml\n#   Generate and install favicons.\nRUN APP_ICON_URL=https://raw.githubusercontent.com/jlesage/docker-templates/master/jlesage/images/filebot-icon.png \\\n && install_app_icon.sh \"$APP_ICON_URL\"\n#   Add files.\nCOPY rootfs/ /\n#   Set environment variables.\nENV APP_NAME=\"FileBot\"\n#   Define mountable directories.\nVOLUME [\"/config\"]\nVOLUME [\"/storage\"]\n#   Metadata.\nLABEL org.label-schema.name=\"filebot\" \\\n      org.label-schema.description=\"Docker container for FileBot\" \\\n      org.label-schema.version=\"unknown\" \\\n      org.label-schema.vcs-url=\"https://github.com/jlesage/docker-filebot\" \\\n      org.label-schema.schema-version=\"1.0\"\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#\n#  filebot Dockerfile\n#\n#  https://github.com/jlesage/docker-filebot\n#\n#  Pull base image.\nFROM jlesage/baseimage-gui:alpine-3.9-v3.5.2\n#  Define software versions.\nARG FILEBOT_VERSION=4.8.5\nARG OPENJFX_VERSION=8.151.12-r0\nARG CHROMAPRINT_VERSION=1.4.3\n#  Define software download URLs.\nARG FILEBOT_URL=https://get.filebot.net/filebot/FileBot_${FILEBOT_VERSION}/FileBot_${FILEBOT_VERSION}-portable.tar.xz\nARG OPENJFX_URL=https://github.com/sgerrand/alpine-pkg-java-openjfx/releases/download/${OPENJFX_VERSION}/java-openjfx-${OPENJFX_VERSION}.apk\nARG CHROMAPRINT_URL=https://github.com/acoustid/chromaprint/archive/v${CHROMAPRINT_VERSION}.tar.gz\n#  Define working directory.\nWORKDIR /tmp\n#  Install FileBot.\nRUN add-pkg --virtual build-dependencies curl \\\n && mkdir filebot \\\n && curl -# -L ${FILEBOT_URL} | tar xJ -C filebot \\\n && mkdir /opt/filebot \\\n && cp -Rv filebot/jar /opt/filebot/ \\\n && del-pkg build-dependencies \\\n && rm -rf /tmp/* /tmp/.[!.]*\n#  Install dependencies.\nRUN add-pkg --virtual build-dependencies curl \\\n && curl -# -L -o java-openjfx.apk ${OPENJFX_URL} \\\n && apk --no-cache add --allow-untrusted ./java-openjfx.apk \\\n && add-pkg p7zip unrar nss gtk+2.0 openjdk8-jre java-jna libmediainfo \\\n && add-pkg yad \\\n && del-pkg build-dependencies \\\n && rm -rf /tmp/* /tmp/.[!.]*\n#  Build and install chromaprint (fpcalc) for AcousItD.\nRUN add-pkg --virtual build-dependencies build-base cmake curl ffmpeg-dev fftw-dev \\\n && mkdir chromaprint \\\n && curl -# -L ${CHROMAPRINT_URL} | tar xz --strip 1 -C chromaprint \\\n && cd chromaprint \\\n && mkdir build \\\n && cd build \\\n && cmake -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_BUILD_TYPE=Release -DBUILD_TOOLS=ON .. \\\n && make -j$( nproc ;) \\\n && make install \\\n && cd .. \\\n && cd .. \\\n && del-pkg build-dependencies \\\n && rm /usr/lib/pkgconfig/libchromaprint.pc /usr/include/chromaprint.h \\\n && rmdir /usr/include /usr/lib/pkgconfig \\\n && rm -rf /tmp/* /tmp/.[!.]*\n#  Adjust the openbox config.\nRUN sed-patch 's/<application type=\"normal\">/<application type=\"normal\" title=\"FileBot \\*\">/' /etc/xdg/openbox/rc.xml \\\n && sed-patch '/<application type=\"normal\" title=\"FileBot \\*\">/a \\ <layer>below</layer>' /etc/xdg/openbox/rc.xml\n#  Generate and install favicons.\nRUN APP_ICON_URL=https://raw.githubusercontent.com/jlesage/docker-templates/master/jlesage/images/filebot-icon.png \\\n && install_app_icon.sh \"$APP_ICON_URL\"\n#  Add files.\nCOPY rootfs/ /\n#  Set environment variables.\nENV APP_NAME=\"FileBot\"\n#  Define mountable directories.\nVOLUME [\"/config\"]\nVOLUME [\"/storage\"]\n#  Metadata.\nLABEL org.label-schema.name=\"filebot\" \\\n      org.label-schema.description=\"Docker container for FileBot\" \\\n      org.label-schema.version=\"unknown\" \\\n      org.label-schema.vcs-url=\"https://github.com/jlesage/docker-filebot\" \\\n      org.label-schema.schema-version=\"1.0\"\n","injectedSmells":[],"originalDockerfileHash":"c272f34a5a8fe74430215d08f5cfbb6e","successfullyInjectedSmells":[],"originalDockerfileUglified":"#\n#   filebot Dockerfile\n#\n#   https://github.com/jlesage/docker-filebot\n#\n#   Pull base image.\nFROM jlesage/baseimage-gui:alpine-3.9-v3.5.2\n#   Define software versions.\nARG FILEBOT_VERSION=4.8.5\nARG OPENJFX_VERSION=8.151.12-r0\nARG CHROMAPRINT_VERSION=1.4.3\n#   Define software download URLs.\nARG FILEBOT_URL=https://get.filebot.net/filebot/FileBot_${FILEBOT_VERSION}/FileBot_${FILEBOT_VERSION}-portable.tar.xz\nARG OPENJFX_URL=https://github.com/sgerrand/alpine-pkg-java-openjfx/releases/download/${OPENJFX_VERSION}/java-openjfx-${OPENJFX_VERSION}.apk\nARG CHROMAPRINT_URL=https://github.com/acoustid/chromaprint/archive/v${CHROMAPRINT_VERSION}.tar.gz\n#   Define working directory.\nWORKDIR /tmp\n#   Install FileBot.\nRUN add-pkg --virtual build-dependencies curl \\\n && mkdir filebot \\\n && curl -# -L ${FILEBOT_URL} | tar xJ -C filebot \\\n && mkdir /opt/filebot \\\n && cp -Rv filebot/jar /opt/filebot/ \\\n && del-pkg build-dependencies \\\n && rm -rf /tmp/* /tmp/.[!.]*\n#   Install dependencies.\nRUN add-pkg --virtual build-dependencies curl \\\n && curl -# -L -o java-openjfx.apk ${OPENJFX_URL} \\\n && apk --no-cache add --allow-untrusted ./java-openjfx.apk \\\n && add-pkg p7zip unrar nss gtk+2.0 openjdk8-jre java-jna libmediainfo \\\n && add-pkg yad \\\n && del-pkg build-dependencies \\\n && rm -rf /tmp/* /tmp/.[!.]*\n#   Build and install chromaprint (fpcalc) for AcousItD.\nRUN add-pkg --virtual build-dependencies build-base cmake curl ffmpeg-dev fftw-dev \\\n && mkdir chromaprint \\\n && curl -# -L ${CHROMAPRINT_URL} | tar xz --strip 1 -C chromaprint \\\n && cd chromaprint \\\n && mkdir build \\\n && cd build \\\n && cmake -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_BUILD_TYPE=Release -DBUILD_TOOLS=ON .. \\\n && make -j$( nproc ;) \\\n && make install \\\n && cd .. \\\n && cd .. \\\n && del-pkg build-dependencies \\\n && rm /usr/lib/pkgconfig/libchromaprint.pc /usr/include/chromaprint.h \\\n && rmdir /usr/include /usr/lib/pkgconfig \\\n && rm -rf /tmp/* /tmp/.[!.]*\n#   Adjust the openbox config.\nRUN sed-patch 's/<application type=\"normal\">/<application type=\"normal\" title=\"FileBot \\*\">/' /etc/xdg/openbox/rc.xml \\\n && sed-patch '/<application type=\"normal\" title=\"FileBot \\*\">/a \\ <layer>below</layer>' /etc/xdg/openbox/rc.xml\n#   Generate and install favicons.\nRUN APP_ICON_URL=https://raw.githubusercontent.com/jlesage/docker-templates/master/jlesage/images/filebot-icon.png \\\n && install_app_icon.sh \"$APP_ICON_URL\"\n#   Add files.\nCOPY rootfs/ /\n#   Set environment variables.\nENV APP_NAME=\"FileBot\"\n#   Define mountable directories.\nVOLUME [\"/config\"]\nVOLUME [\"/storage\"]\n#   Metadata.\nLABEL org.label-schema.name=\"filebot\" \\\n      org.label-schema.description=\"Docker container for FileBot\" \\\n      org.label-schema.version=\"unknown\" \\\n      org.label-schema.vcs-url=\"https://github.com/jlesage/docker-filebot\" \\\n      org.label-schema.schema-version=\"1.0\"\n","originalDockerfileUglifiedHash":"8663031e251c50a0cc509ee920d5b389","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/1a314177c62f38fe221d055e8c01acb3ba55947f.dockerfile"}