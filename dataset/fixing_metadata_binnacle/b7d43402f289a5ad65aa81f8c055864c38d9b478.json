{"seed":1583258248,"processedDockerfileHash":"1f53dbcad783b7ddc8fb1ae2d4a0e194","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"#\n#   Grafana Dockerfile\n#\n#   - whisper (master)\n#   - carbon  (0.9.12)\n#   - graphite (0.9.12)\n#   - elasticsearch (1.3.2)\n#   - grafana (1.8.1)\n#\n#   build command\n#   * default: docker build --force-rm=true -t subicura/grafana .\n#   * nocache: docker build --force-rm=true --no-cache=true -t subicura/grafana .\n#\n#   configuration\n#   -v {whisper directory}:/opt/graphite/storage/whisper\n#\n#   run command\n#    docker pull subicura/grafana\n#    docker rm -f grafana\n#    docker run -it --rm -e HOST_IP=10.211.55.41 -e HOST_PORT=80 -p 2003:2003 -p 80:80 -v /grafana/elasticsearch:/data -v /grafana/whisper:/opt/graphite/storage/whisper subicura/grafana /bin/bash\n#    docker run --rm -e HOST_IP=10.211.55.41 -e HOST_PORT=80 -p 2003:2003 -p 80:80 --name grafana -v /grafana/elasticsearch:/data -v /grafana/whisper:/opt/graphite/storage/whisper subicura/grafana\n#    docker run -d -e HOST_IP=10.211.55.41 -e HOST_PORT=80 -e GRAPHITE_API_HOST=10.211.55.41 -p 2003:2003 -p 80:80 --name grafana -v /grafana/elasticsearch:/data -v /grafana/whisper:/opt/graphite/storage/whisper subicura/grafana\n#\n#   reference: https://github.com/nacyot/docker-graphite\n#\nFROM ubuntu:14.04\nMAINTAINER subicura@subicura.com\n#   default env\nENV DEBIAN_FRONTEND=\"noninteractive \"\n#   update ubuntu latest\nRUN : \\\n && apt-get -qq -y dist-upgrade\n#   install essential packages\nRUN (apt-get update ;apt-get install --no-install-recommends build-essential=11.6ubuntu6 software-properties-common=0.92.37.8 python-software-properties=0.92.37.8 git=1:1.9.1-1ubuntu0.10 curl=7.35.0-1ubuntu2.20 -qq -y )\n#   install python\nRUN (apt-get update ;apt-get install --no-install-recommends python=2.7.5-5ubuntu3 python-dev=2.7.5-5ubuntu3 python-pip=1.5.4-1ubuntu4 python-simplejson=3.3.1-1ubuntu6 python-memcache=1.53-1build1 python-ldap=2.4.10-1build1 python-cairo=1.8.8-1ubuntu5 python-twisted=13.2.0-1ubuntu1.2 python-pysqlite2=2.6.3-3 python-support=1.0.15 python-pip=1.5.4-1ubuntu4 gunicorn=17.5-2build1 -qq -y )\n#   install java\nRUN echo oracle-java7-installer shared/accepted-oracle-license-v1-1 select true | debconf-set-selections \\\n && add-apt-repository -y ppa:webupd8team/java \\\n && apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends oracle-java7-installer -y ) \\\n && rm -rf /var/lib/apt/lists/* \\\n && rm -rf /var/cache/oracle-jdk7-installer\nENV JAVA_HOME=\"/usr/lib/jvm/java-7-oracle\"\n#   install nginx\nRUN add-apt-repository -y ppa:nginx/stable \\\n && apt-get update -qq \\\n && (apt-get update ;apt-get install --no-install-recommends nginx=1.4.6-1ubuntu3.9 -qq -y )\n#   install supervisor\nRUN (apt-get update ;apt-get install --no-install-recommends supervisor=3.0b2-1ubuntu0.1 -qq -y )\n#   whisper & carbon & graphite & elasticsearch & grafana\nWORKDIR /usr/local/src\nRUN pip install pytz==2023.3 pyparsing==3.0.9 django==1.5 django-tagging==0.3.1 'Twisted<12.0'\nRUN git clone https://github.com/graphite-project/whisper.git \\\n && cd whisper \\\n && git checkout master \\\n && python setup.py install\nRUN git clone https://github.com/graphite-project/carbon.git \\\n && cd carbon \\\n && git checkout 0.9.12 \\\n && python setup.py install\nRUN git clone https://github.com/graphite-project/graphite-web.git \\\n && cd graphite-web \\\n && git checkout 0.9.12 \\\n && python setup.py install\nRUN cd /tmp \\\n && wget -q -O - https://download.elasticsearch.org/elasticsearch/elasticsearch/elasticsearch-1.3.2.tar.gz | tar xfz - \\\n && mv /tmp/elasticsearch-1.3.2 /elasticsearch\nRUN cd /opt \\\n && wget -q -O - http://grafanarel.s3.amazonaws.com/grafana-1.8.1.tar.gz | tar xfz - \\\n && mv grafana-1.8.1 grafana\n#   carbon setting\nCOPY ./carbon /opt/graphite/conf/\n#   graphite setting\nENV GRAPHITE_STORAGE_DIR=\"/opt/graphite/storage\"\nENV GRAPHITE_CONF_DIR=\"/opt/graphite/conf\"\nENV PYTHONPATH=\"/opt/graphite/webapp\"\nENV LOG_DIR=\"/var/log/graphite\"\nENV DEFAULT_INDEX_TABLESPACE=\"graphite\"\nRUN mkdir -p /opt/graphite/webapp\nRUN mkdir -p /var/log/graphite\nRUN cd /var/log/graphite/ \\\n && touch info.log\nRUN mkdir -p /opt/graphite/storage/whisper\nRUN touch /opt/graphite/storage/graphite.db /opt/graphite/storage/index\nRUN chmod 0775 /opt/graphite/storage /opt/graphite/storage/whisper\nRUN chmod 0664 /opt/graphite/storage/graphite.db\nCOPY ./graphite/local_settings.py /opt/graphite/webapp/graphite/local_settings.py\nCOPY ./graphite/initial_data.json /opt/graphite/webapp/graphite/initial_data.json\nRUN cd /opt/graphite/webapp/graphite \\\n && django-admin.py syncdb --settings=graphite.settings --noinput\nRUN cd /opt/graphite/webapp/graphite \\\n && django-admin.py loaddata --settings=graphite.settings initial_data.json\n#   elasticsearch setting\nCOPY elasticsearch/elasticsearch.yml /elasticsearch/config/elasticsearch.yml\n#   grafana setting\nCOPY ./grafana/config.js /opt/grafana/config.js\n#   nginx setting\nCOPY ./nginx.conf /etc/nginx/nginx.conf\n#   supervisord setting\nCOPY ./supervisord.conf /etc/supervisor/conf.d/supervisord.conf\n#   add setup file\nCOPY ./setup.sh /opt/grafana/setup.sh\nRUN chmod +x /opt/grafana/setup.sh\n#   expose port\n#   2003 - carbon cache - line receiver\n#   7002 - grafana http\nEXPOSE 2003/tcp 80/tcp\n#   run\nWORKDIR /opt/grafana\nRUN ln -sf /usr/share/zoneinfo/Asia/Seoul /etc/localtime\nCMD /opt/grafana/setup.sh \\\n && /usr/bin/supervisord -n\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#\n#  Grafana Dockerfile\n#\n#  - whisper (master)\n#  - carbon  (0.9.12)\n#  - graphite (0.9.12)\n#  - elasticsearch (1.3.2)\n#  - grafana (1.8.1)\n#\n#  build command\n#  * default: docker build --force-rm=true -t subicura/grafana .\n#  * nocache: docker build --force-rm=true --no-cache=true -t subicura/grafana .\n#\n#  configuration\n#  -v {whisper directory}:/opt/graphite/storage/whisper\n#\n#  run command\n#   docker pull subicura/grafana\n#   docker rm -f grafana\n#   docker run -it --rm -e HOST_IP=10.211.55.41 -e HOST_PORT=80 -p 2003:2003 -p 80:80 -v /grafana/elasticsearch:/data -v /grafana/whisper:/opt/graphite/storage/whisper subicura/grafana /bin/bash\n#   docker run --rm -e HOST_IP=10.211.55.41 -e HOST_PORT=80 -p 2003:2003 -p 80:80 --name grafana -v /grafana/elasticsearch:/data -v /grafana/whisper:/opt/graphite/storage/whisper subicura/grafana\n#   docker run -d -e HOST_IP=10.211.55.41 -e HOST_PORT=80 -e GRAPHITE_API_HOST=10.211.55.41 -p 2003:2003 -p 80:80 --name grafana -v /grafana/elasticsearch:/data -v /grafana/whisper:/opt/graphite/storage/whisper subicura/grafana\n#\n#  reference: https://github.com/nacyot/docker-graphite\n#\nFROM ubuntu:14.04\nMAINTAINER subicura@subicura.com\n#  default env\nENV DEBIAN_FRONTEND=\"noninteractive \"\n#  update ubuntu latest\nRUN apt-get update -qq \\\n && apt-get -qq -y dist-upgrade\n#  install essential packages\nRUN apt-get install build-essential software-properties-common python-software-properties git curl -qq -y\n#  install python\nRUN apt-get install python python-dev python-pip python-simplejson python-memcache python-ldap python-cairo python-twisted python-pysqlite2 python-support python-pip gunicorn -qq -y\n#  install java\nRUN echo oracle-java7-installer shared/accepted-oracle-license-v1-1 select true | debconf-set-selections \\\n && add-apt-repository -y ppa:webupd8team/java \\\n && apt-get update \\\n && apt-get install oracle-java7-installer -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && rm -rf /var/cache/oracle-jdk7-installer\nENV JAVA_HOME=\"/usr/lib/jvm/java-7-oracle\"\n#  install nginx\nRUN add-apt-repository -y ppa:nginx/stable \\\n && apt-get update -qq \\\n && apt-get install nginx -qq -y\n#  install supervisor\nRUN apt-get install supervisor -qq -y\n#  whisper & carbon & graphite & elasticsearch & grafana\nWORKDIR /usr/local/src\nRUN pip install pytz pyparsing django==1.5 django-tagging==0.3.1 'Twisted<12.0'\nRUN git clone https://github.com/graphite-project/whisper.git \\\n && cd whisper \\\n && git checkout master \\\n && python setup.py install\nRUN git clone https://github.com/graphite-project/carbon.git \\\n && cd carbon \\\n && git checkout 0.9.12 \\\n && python setup.py install\nRUN git clone https://github.com/graphite-project/graphite-web.git \\\n && cd graphite-web \\\n && git checkout 0.9.12 \\\n && python setup.py install\nRUN cd /tmp \\\n && wget -q -O - https://download.elasticsearch.org/elasticsearch/elasticsearch/elasticsearch-1.3.2.tar.gz | tar xfz - \\\n && mv /tmp/elasticsearch-1.3.2 /elasticsearch\nRUN cd /opt \\\n && wget -q -O - http://grafanarel.s3.amazonaws.com/grafana-1.8.1.tar.gz | tar xfz - \\\n && mv grafana-1.8.1 grafana\n#  carbon setting\nADD ./carbon /opt/graphite/conf/\n#  graphite setting\nENV GRAPHITE_STORAGE_DIR=\"/opt/graphite/storage\"\nENV GRAPHITE_CONF_DIR=\"/opt/graphite/conf\"\nENV PYTHONPATH=\"/opt/graphite/webapp\"\nENV LOG_DIR=\"/var/log/graphite\"\nENV DEFAULT_INDEX_TABLESPACE=\"graphite\"\nRUN mkdir -p /opt/graphite/webapp\nRUN mkdir -p /var/log/graphite\nRUN cd /var/log/graphite/ \\\n && touch info.log\nRUN mkdir -p /opt/graphite/storage/whisper\nRUN touch /opt/graphite/storage/graphite.db /opt/graphite/storage/index\nRUN chmod 0775 /opt/graphite/storage /opt/graphite/storage/whisper\nRUN chmod 0664 /opt/graphite/storage/graphite.db\nADD ./graphite/local_settings.py /opt/graphite/webapp/graphite/local_settings.py\nADD ./graphite/initial_data.json /opt/graphite/webapp/graphite/initial_data.json\nRUN cd /opt/graphite/webapp/graphite \\\n && django-admin.py syncdb --settings=graphite.settings --noinput\nRUN cd /opt/graphite/webapp/graphite \\\n && django-admin.py loaddata --settings=graphite.settings initial_data.json\n#  elasticsearch setting\nADD elasticsearch/elasticsearch.yml /elasticsearch/config/elasticsearch.yml\n#  grafana setting\nADD ./grafana/config.js /opt/grafana/config.js\n#  nginx setting\nADD ./nginx.conf /etc/nginx/nginx.conf\n#  supervisord setting\nADD ./supervisord.conf /etc/supervisor/conf.d/supervisord.conf\n#  add setup file\nADD ./setup.sh /opt/grafana/setup.sh\nRUN chmod +x /opt/grafana/setup.sh\n#  expose port\n#  2003 - carbon cache - line receiver\n#  7002 - grafana http\nEXPOSE 2003/tcp 80/tcp\n#  run\nWORKDIR /opt/grafana\nRUN ln -sf /usr/share/zoneinfo/Asia/Seoul /etc/localtime\nCMD /opt/grafana/setup.sh \\\n && /usr/bin/supervisord -n\n","injectedSmells":[],"originalDockerfileHash":"451bc13be1432b6bad293b6d5e5e9a88","successfullyInjectedSmells":[],"originalDockerfileUglified":"#\n#   Grafana Dockerfile\n#\n#   - whisper (master)\n#   - carbon  (0.9.12)\n#   - graphite (0.9.12)\n#   - elasticsearch (1.3.2)\n#   - grafana (1.8.1)\n#\n#   build command\n#   * default: docker build --force-rm=true -t subicura/grafana .\n#   * nocache: docker build --force-rm=true --no-cache=true -t subicura/grafana .\n#\n#   configuration\n#   -v {whisper directory}:/opt/graphite/storage/whisper\n#\n#   run command\n#    docker pull subicura/grafana\n#    docker rm -f grafana\n#    docker run -it --rm -e HOST_IP=10.211.55.41 -e HOST_PORT=80 -p 2003:2003 -p 80:80 -v /grafana/elasticsearch:/data -v /grafana/whisper:/opt/graphite/storage/whisper subicura/grafana /bin/bash\n#    docker run --rm -e HOST_IP=10.211.55.41 -e HOST_PORT=80 -p 2003:2003 -p 80:80 --name grafana -v /grafana/elasticsearch:/data -v /grafana/whisper:/opt/graphite/storage/whisper subicura/grafana\n#    docker run -d -e HOST_IP=10.211.55.41 -e HOST_PORT=80 -e GRAPHITE_API_HOST=10.211.55.41 -p 2003:2003 -p 80:80 --name grafana -v /grafana/elasticsearch:/data -v /grafana/whisper:/opt/graphite/storage/whisper subicura/grafana\n#\n#   reference: https://github.com/nacyot/docker-graphite\n#\nFROM ubuntu:14.04\nMAINTAINER subicura@subicura.com\n#   default env\nENV DEBIAN_FRONTEND=\"noninteractive \"\n#   update ubuntu latest\nRUN apt-get update -qq \\\n && apt-get -qq -y dist-upgrade\n#   install essential packages\nRUN apt-get install build-essential software-properties-common python-software-properties git curl -qq -y\n#   install python\nRUN apt-get install python python-dev python-pip python-simplejson python-memcache python-ldap python-cairo python-twisted python-pysqlite2 python-support python-pip gunicorn -qq -y\n#   install java\nRUN echo oracle-java7-installer shared/accepted-oracle-license-v1-1 select true | debconf-set-selections \\\n && add-apt-repository -y ppa:webupd8team/java \\\n && apt-get update \\\n && apt-get install oracle-java7-installer -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && rm -rf /var/cache/oracle-jdk7-installer\nENV JAVA_HOME=\"/usr/lib/jvm/java-7-oracle\"\n#   install nginx\nRUN add-apt-repository -y ppa:nginx/stable \\\n && apt-get update -qq \\\n && apt-get install nginx -qq -y\n#   install supervisor\nRUN apt-get install supervisor -qq -y\n#   whisper & carbon & graphite & elasticsearch & grafana\nWORKDIR /usr/local/src\nRUN pip install pytz pyparsing django==1.5 django-tagging==0.3.1 'Twisted<12.0'\nRUN git clone https://github.com/graphite-project/whisper.git \\\n && cd whisper \\\n && git checkout master \\\n && python setup.py install\nRUN git clone https://github.com/graphite-project/carbon.git \\\n && cd carbon \\\n && git checkout 0.9.12 \\\n && python setup.py install\nRUN git clone https://github.com/graphite-project/graphite-web.git \\\n && cd graphite-web \\\n && git checkout 0.9.12 \\\n && python setup.py install\nRUN cd /tmp \\\n && wget -q -O - https://download.elasticsearch.org/elasticsearch/elasticsearch/elasticsearch-1.3.2.tar.gz | tar xfz - \\\n && mv /tmp/elasticsearch-1.3.2 /elasticsearch\nRUN cd /opt \\\n && wget -q -O - http://grafanarel.s3.amazonaws.com/grafana-1.8.1.tar.gz | tar xfz - \\\n && mv grafana-1.8.1 grafana\n#   carbon setting\nADD ./carbon /opt/graphite/conf/\n#   graphite setting\nENV GRAPHITE_STORAGE_DIR=\"/opt/graphite/storage\"\nENV GRAPHITE_CONF_DIR=\"/opt/graphite/conf\"\nENV PYTHONPATH=\"/opt/graphite/webapp\"\nENV LOG_DIR=\"/var/log/graphite\"\nENV DEFAULT_INDEX_TABLESPACE=\"graphite\"\nRUN mkdir -p /opt/graphite/webapp\nRUN mkdir -p /var/log/graphite\nRUN cd /var/log/graphite/ \\\n && touch info.log\nRUN mkdir -p /opt/graphite/storage/whisper\nRUN touch /opt/graphite/storage/graphite.db /opt/graphite/storage/index\nRUN chmod 0775 /opt/graphite/storage /opt/graphite/storage/whisper\nRUN chmod 0664 /opt/graphite/storage/graphite.db\nADD ./graphite/local_settings.py /opt/graphite/webapp/graphite/local_settings.py\nADD ./graphite/initial_data.json /opt/graphite/webapp/graphite/initial_data.json\nRUN cd /opt/graphite/webapp/graphite \\\n && django-admin.py syncdb --settings=graphite.settings --noinput\nRUN cd /opt/graphite/webapp/graphite \\\n && django-admin.py loaddata --settings=graphite.settings initial_data.json\n#   elasticsearch setting\nADD elasticsearch/elasticsearch.yml /elasticsearch/config/elasticsearch.yml\n#   grafana setting\nADD ./grafana/config.js /opt/grafana/config.js\n#   nginx setting\nADD ./nginx.conf /etc/nginx/nginx.conf\n#   supervisord setting\nADD ./supervisord.conf /etc/supervisor/conf.d/supervisord.conf\n#   add setup file\nADD ./setup.sh /opt/grafana/setup.sh\nRUN chmod +x /opt/grafana/setup.sh\n#   expose port\n#   2003 - carbon cache - line receiver\n#   7002 - grafana http\nEXPOSE 2003/tcp 80/tcp\n#   run\nWORKDIR /opt/grafana\nRUN ln -sf /usr/share/zoneinfo/Asia/Seoul /etc/localtime\nCMD /opt/grafana/setup.sh \\\n && /usr/bin/supervisord -n\n","originalDockerfileUglifiedHash":"f02c6a5b6dd5ccf5436edb7c6d4a7a6e","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/b7d43402f289a5ad65aa81f8c055864c38d9b478.dockerfile"}