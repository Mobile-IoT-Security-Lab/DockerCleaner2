{"seed":194784309,"processedDockerfileHash":"97fb8cad305eae11b9000b8c7124bf9c","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM php:7.1\nENV XDEBUG_VERSION=\"2.6.0\"\nRUN additionalPackages=\" apt-transport-https git msmtp-mta openssh-client rsync \" buildDeps=\" freetds-dev libbz2-dev libc-client-dev libenchant-dev libfreetype6-dev libgmp3-dev libicu-dev libjpeg62-turbo-dev libkrb5-dev libldap2-dev libmcrypt-dev libpng12-dev libpq-dev libpspell-dev librabbitmq-dev libsasl2-dev libsnmp-dev libssl-dev libtidy-dev libxml2-dev libxpm-dev libxslt1-dev zlib1g-dev \" \\\n && runDeps=\" libc-client2007e libenchant1c2a libfreetype6 libicu52 libjpeg62-turbo libmcrypt4 libpng12-0 libpq5 libsybdb5 libtidy-0.99-0 libx11-6 libxpm4 libxslt1.1 snmp \" \\\n && phpModules=\" bcmath bz2 calendar dba enchant exif ftp gd gettext gmp imap intl ldap mbstring mcrypt mysqli opcache pcntl pdo pdo_dblib pdo_mysql pdo_pgsql pgsql pspell shmop snmp soap sockets sysvmsg sysvsem sysvshm tidy wddx xmlrpc xsl zip xdebug \" \\\n && echo \"deb http://httpredir.debian.org/debian jessie contrib non-free\" > /etc/apt/sources.list.d/additional.list \\\n && apt-get update \\\n && apt-get install --no-install-recommends $additionalPackages $buildDeps $runDeps -y \\\n && docker-php-source extract \\\n && cd /usr/src/php/ext/ \\\n && curl -L http://xdebug.org/files/xdebug-$XDEBUG_VERSION.tgz | tar -zxf - \\\n && mv xdebug-$XDEBUG_VERSION xdebug \\\n && ln -s /usr/include/x86_64-linux-gnu/gmp.h /usr/include/gmp.h \\\n && ln -s /usr/lib/x86_64-linux-gnu/libldap_r.so /usr/lib/libldap.so \\\n && ln -s /usr/lib/x86_64-linux-gnu/libldap_r.a /usr/lib/libldap_r.a \\\n && ln -s /usr/lib/x86_64-linux-gnu/libsybdb.a /usr/lib/libsybdb.a \\\n && ln -s /usr/lib/x86_64-linux-gnu/libsybdb.so /usr/lib/libsybdb.so \\\n && docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ --with-xpm-dir=/usr/include/ \\\n && docker-php-ext-configure imap --with-imap --with-kerberos --with-imap-ssl \\\n && docker-php-ext-configure ldap --with-ldap-sasl \\\n && docker-php-ext-install $phpModules \\\n && printf \"\\n\" | pecl install amqp \\\n && pecl install igbinary \\\n && pecl install mongodb \\\n && pecl install redis \\\n && for ext in $phpModules; do rm -f /usr/local/etc/php/conf.d/docker-php-ext-$ext.ini ; done \\\n && docker-php-source delete \\\n && apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false -o APT::AutoRemove::SuggestsImportant=false $buildDeps \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#   Install composer and put binary into $PATH\nRUN curl -sS https://getcomposer.org/installer | php \\\n && mv composer.phar /usr/local/bin/ \\\n && ln -s /usr/local/bin/composer.phar /usr/local/bin/composer\n#   Install phpunit and put binary into $PATH\nRUN curl -sSLo phpunit.phar https://phar.phpunit.de/phpunit.phar \\\n && chmod 755 phpunit.phar \\\n && mv phpunit.phar /usr/local/bin/ \\\n && ln -s /usr/local/bin/phpunit.phar /usr/local/bin/phpunit\n#   Install PHP Code sniffer\nRUN curl -OL https://squizlabs.github.io/PHP_CodeSniffer/phpcs.phar \\\n && chmod 755 phpcs.phar \\\n && mv phpcs.phar /usr/local/bin/ \\\n && ln -s /usr/local/bin/phpcs.phar /usr/local/bin/phpcs \\\n && curl -OL https://squizlabs.github.io/PHP_CodeSniffer/phpcbf.phar \\\n && chmod 755 phpcbf.phar \\\n && mv phpcbf.phar /usr/local/bin/ \\\n && ln -s /usr/local/bin/phpcbf.phar /usr/local/bin/phpcbf\n#   Install Node.js & Yarn\nRUN curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \\\n && echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list \\\n && curl -sL https://deb.nodesource.com/setup_8.x | bash - \\\n && apt-get install --no-install-recommends nodejs=10.24.0~dfsg-1~deb10u3 build-essential=12.6 yarn -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\nCOPY msmtprc /etc/\nCOPY entrypoint.sh /entrypoint.sh\nENTRYPOINT [\"/entrypoint.sh\"]\nCMD [\"php\", \"-a\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\nHEALTHCHECK CMD curl --fail http://127.0.0.1:80 || exit 1\n","originalDockerfile":"FROM php:7.1\nENV XDEBUG_VERSION=\"2.6.0\"\nRUN additionalPackages=\" apt-transport-https git msmtp-mta openssh-client rsync \" buildDeps=\" freetds-dev libbz2-dev libc-client-dev libenchant-dev libfreetype6-dev libgmp3-dev libicu-dev libjpeg62-turbo-dev libkrb5-dev libldap2-dev libmcrypt-dev libpng12-dev libpq-dev libpspell-dev librabbitmq-dev libsasl2-dev libsnmp-dev libssl-dev libtidy-dev libxml2-dev libxpm-dev libxslt1-dev zlib1g-dev \" \\\n && runDeps=\" libc-client2007e libenchant1c2a libfreetype6 libicu52 libjpeg62-turbo libmcrypt4 libpng12-0 libpq5 libsybdb5 libtidy-0.99-0 libx11-6 libxpm4 libxslt1.1 snmp \" \\\n && phpModules=\" bcmath bz2 calendar dba enchant exif ftp gd gettext gmp imap intl ldap mbstring mcrypt mysqli opcache pcntl pdo pdo_dblib pdo_mysql pdo_pgsql pgsql pspell shmop snmp soap sockets sysvmsg sysvsem sysvshm tidy wddx xmlrpc xsl zip xdebug \" \\\n && echo \"deb http://httpredir.debian.org/debian jessie contrib non-free\" > /etc/apt/sources.list.d/additional.list \\\n && apt-get update \\\n && apt-get install --no-install-recommends $additionalPackages $buildDeps $runDeps -y \\\n && docker-php-source extract \\\n && cd /usr/src/php/ext/ \\\n && curl -L http://xdebug.org/files/xdebug-$XDEBUG_VERSION.tgz | tar -zxf - \\\n && mv xdebug-$XDEBUG_VERSION xdebug \\\n && ln -s /usr/include/x86_64-linux-gnu/gmp.h /usr/include/gmp.h \\\n && ln -s /usr/lib/x86_64-linux-gnu/libldap_r.so /usr/lib/libldap.so \\\n && ln -s /usr/lib/x86_64-linux-gnu/libldap_r.a /usr/lib/libldap_r.a \\\n && ln -s /usr/lib/x86_64-linux-gnu/libsybdb.a /usr/lib/libsybdb.a \\\n && ln -s /usr/lib/x86_64-linux-gnu/libsybdb.so /usr/lib/libsybdb.so \\\n && docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ --with-xpm-dir=/usr/include/ \\\n && docker-php-ext-configure imap --with-imap --with-kerberos --with-imap-ssl \\\n && docker-php-ext-configure ldap --with-ldap-sasl \\\n && docker-php-ext-install $phpModules \\\n && printf \"\\n\" | pecl install amqp \\\n && pecl install igbinary \\\n && pecl install mongodb \\\n && pecl install redis \\\n && for ext in $phpModules; do rm -f /usr/local/etc/php/conf.d/docker-php-ext-$ext.ini ; done \\\n && docker-php-source delete \\\n && apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false -o APT::AutoRemove::SuggestsImportant=false $buildDeps \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#  Install composer and put binary into $PATH\nRUN curl -sS https://getcomposer.org/installer | php \\\n && mv composer.phar /usr/local/bin/ \\\n && ln -s /usr/local/bin/composer.phar /usr/local/bin/composer\n#  Install phpunit and put binary into $PATH\nRUN curl -sSLo phpunit.phar https://phar.phpunit.de/phpunit.phar \\\n && chmod 755 phpunit.phar \\\n && mv phpunit.phar /usr/local/bin/ \\\n && ln -s /usr/local/bin/phpunit.phar /usr/local/bin/phpunit\n#  Install PHP Code sniffer\nRUN curl -OL https://squizlabs.github.io/PHP_CodeSniffer/phpcs.phar \\\n && chmod 755 phpcs.phar \\\n && mv phpcs.phar /usr/local/bin/ \\\n && ln -s /usr/local/bin/phpcs.phar /usr/local/bin/phpcs \\\n && curl -OL https://squizlabs.github.io/PHP_CodeSniffer/phpcbf.phar \\\n && chmod 755 phpcbf.phar \\\n && mv phpcbf.phar /usr/local/bin/ \\\n && ln -s /usr/local/bin/phpcbf.phar /usr/local/bin/phpcbf\n#  Install Node.js & Yarn\nRUN curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \\\n && echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list \\\n && curl -sL https://deb.nodesource.com/setup_8.x | bash - \\\n && apt-get install nodejs build-essential yarn -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\nCOPY msmtprc /etc/\nCOPY entrypoint.sh /entrypoint.sh\nENTRYPOINT [\"/entrypoint.sh\"]\nCMD [\"php\", \"-a\"]\n","injectedSmells":[],"originalDockerfileHash":"58508e3070765f87d420fd480b9c2c35","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM php:7.1\nENV XDEBUG_VERSION=\"2.6.0\"\nRUN additionalPackages=\" apt-transport-https git msmtp-mta openssh-client rsync \" buildDeps=\" freetds-dev libbz2-dev libc-client-dev libenchant-dev libfreetype6-dev libgmp3-dev libicu-dev libjpeg62-turbo-dev libkrb5-dev libldap2-dev libmcrypt-dev libpng12-dev libpq-dev libpspell-dev librabbitmq-dev libsasl2-dev libsnmp-dev libssl-dev libtidy-dev libxml2-dev libxpm-dev libxslt1-dev zlib1g-dev \" \\\n && runDeps=\" libc-client2007e libenchant1c2a libfreetype6 libicu52 libjpeg62-turbo libmcrypt4 libpng12-0 libpq5 libsybdb5 libtidy-0.99-0 libx11-6 libxpm4 libxslt1.1 snmp \" \\\n && phpModules=\" bcmath bz2 calendar dba enchant exif ftp gd gettext gmp imap intl ldap mbstring mcrypt mysqli opcache pcntl pdo pdo_dblib pdo_mysql pdo_pgsql pgsql pspell shmop snmp soap sockets sysvmsg sysvsem sysvshm tidy wddx xmlrpc xsl zip xdebug \" \\\n && echo \"deb http://httpredir.debian.org/debian jessie contrib non-free\" > /etc/apt/sources.list.d/additional.list \\\n && apt-get update \\\n && apt-get install --no-install-recommends $additionalPackages $buildDeps $runDeps -y \\\n && docker-php-source extract \\\n && cd /usr/src/php/ext/ \\\n && curl -L http://xdebug.org/files/xdebug-$XDEBUG_VERSION.tgz | tar -zxf - \\\n && mv xdebug-$XDEBUG_VERSION xdebug \\\n && ln -s /usr/include/x86_64-linux-gnu/gmp.h /usr/include/gmp.h \\\n && ln -s /usr/lib/x86_64-linux-gnu/libldap_r.so /usr/lib/libldap.so \\\n && ln -s /usr/lib/x86_64-linux-gnu/libldap_r.a /usr/lib/libldap_r.a \\\n && ln -s /usr/lib/x86_64-linux-gnu/libsybdb.a /usr/lib/libsybdb.a \\\n && ln -s /usr/lib/x86_64-linux-gnu/libsybdb.so /usr/lib/libsybdb.so \\\n && docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ --with-xpm-dir=/usr/include/ \\\n && docker-php-ext-configure imap --with-imap --with-kerberos --with-imap-ssl \\\n && docker-php-ext-configure ldap --with-ldap-sasl \\\n && docker-php-ext-install $phpModules \\\n && printf \"\\n\" | pecl install amqp \\\n && pecl install igbinary \\\n && pecl install mongodb \\\n && pecl install redis \\\n && for ext in $phpModules; do rm -f /usr/local/etc/php/conf.d/docker-php-ext-$ext.ini ; done \\\n && docker-php-source delete \\\n && apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false -o APT::AutoRemove::SuggestsImportant=false $buildDeps \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#   Install composer and put binary into $PATH\nRUN curl -sS https://getcomposer.org/installer | php \\\n && mv composer.phar /usr/local/bin/ \\\n && ln -s /usr/local/bin/composer.phar /usr/local/bin/composer\n#   Install phpunit and put binary into $PATH\nRUN curl -sSLo phpunit.phar https://phar.phpunit.de/phpunit.phar \\\n && chmod 755 phpunit.phar \\\n && mv phpunit.phar /usr/local/bin/ \\\n && ln -s /usr/local/bin/phpunit.phar /usr/local/bin/phpunit\n#   Install PHP Code sniffer\nRUN curl -OL https://squizlabs.github.io/PHP_CodeSniffer/phpcs.phar \\\n && chmod 755 phpcs.phar \\\n && mv phpcs.phar /usr/local/bin/ \\\n && ln -s /usr/local/bin/phpcs.phar /usr/local/bin/phpcs \\\n && curl -OL https://squizlabs.github.io/PHP_CodeSniffer/phpcbf.phar \\\n && chmod 755 phpcbf.phar \\\n && mv phpcbf.phar /usr/local/bin/ \\\n && ln -s /usr/local/bin/phpcbf.phar /usr/local/bin/phpcbf\n#   Install Node.js & Yarn\nRUN curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \\\n && echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list \\\n && curl -sL https://deb.nodesource.com/setup_8.x | bash - \\\n && apt-get install nodejs build-essential yarn -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\nCOPY msmtprc /etc/\nCOPY entrypoint.sh /entrypoint.sh\nENTRYPOINT [\"/entrypoint.sh\"]\nCMD [\"php\", \"-a\"]\n","originalDockerfileUglifiedHash":"670300306b91624313bf45650cc2413b","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/a4c1a866ef928e0d8f6a6d13b580dff55dba32b2.dockerfile"}