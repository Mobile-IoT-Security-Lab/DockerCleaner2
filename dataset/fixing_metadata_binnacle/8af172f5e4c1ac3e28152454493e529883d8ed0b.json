{"seed":2731410867,"processedDockerfileHash":"59a5c1fa07107f84d561527c1f0a87d8","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM alpine:%%PLACEHOLDER%%\n#   ensure local python is preferred over distribution python\nENV PATH=\"/usr/local/bin:$PATH\"\n#   http://bugs.python.org/issue19846\n#   > At the moment, setting \"LANG=C\" on a Linux system *fundamentally breaks Python 3*, and that's not OK.\nENV LANG=\"C.UTF-8\"\n#   https://github.com/docker-library/python/issues/147\nENV PYTHONIOENCODING=\"UTF-8\"\n#   install ca-certificates so that HTTPS works consistently\n#   other runtime dependencies for Python are installed later\nRUN apk add ca-certificates --no-cache\nENV GPG_KEY=\"%%PLACEHOLDER%%\"\nENV PYTHON_VERSION=\"%%PLACEHOLDER%%\"\nRUN set -ex \\\n && apk add gnupg tar xz --no-cache --virtual .fetch-deps \\\n && wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\" \\\n && wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$GPG_KEY\" \\\n && gpg --batch --verify python.tar.xz.asc python.tar.xz \\\n && { command -v gpgconf > /dev/null \\\n && gpgconf --kill all || : ; } \\\n && rm -rf \"$GNUPGHOME\" python.tar.xz.asc \\\n && mkdir -p /usr/src/python \\\n && tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \\\n && rm python.tar.xz \\\n && apk add bzip2-dev coreutils dpkg-dev dpkg expat-dev findutils gcc gdbm-dev libc-dev libffi-dev libnsl-dev libtirpc-dev linux-headers make ncurses-dev openssl-dev pax-utils readline-dev sqlite-dev tcl-dev tk tk-dev zlib-dev --no-cache --virtual .build-deps \\\n && apk del .fetch-deps \\\n && cd /usr/src/python \\\n && gnuArch=\"$( dpkg-architecture --query DEB_BUILD_GNU_TYPE ;)\" \\\n && ./configure --build=\"$gnuArch\" --enable-shared --enable-unicode=ucs4 --with-system-expat --with-system-ffi \\\n && make -j \"$( nproc ;)\" EXTRA_CFLAGS=\"-DTHREAD_STACK_SIZE=0x100000\" \\\n && make install \\\n && find /usr/local -type f -executable -not\n#   if this is called \"PIP_VERSION\", pip explodes with \"ValueError: invalid truth value '<VERSION>'\"\nENV PYTHON_PIP_VERSION=\"%%PLACEHOLDER%%\"\nRUN set -ex ; wget -O get-pip.py 'https://bootstrap.pypa.io/get-pip.py' ; python get-pip.py --disable-pip-version-check --no-cache-dir \"pip==$PYTHON_PIP_VERSION\" ; pip --version ; find /usr/local -depth\nCMD [\"python2\"]\nRUN addgroup -S docker-user ; adduser -S -G docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM alpine:%%PLACEHOLDER%%\n#  ensure local python is preferred over distribution python\nENV PATH=\"/usr/local/bin:$PATH\"\n#  http://bugs.python.org/issue19846\n#  > At the moment, setting \"LANG=C\" on a Linux system *fundamentally breaks Python 3*, and that's not OK.\nENV LANG=\"C.UTF-8\"\n#  https://github.com/docker-library/python/issues/147\nENV PYTHONIOENCODING=\"UTF-8\"\n#  install ca-certificates so that HTTPS works consistently\n#  other runtime dependencies for Python are installed later\nRUN apk add --no-cache ca-certificates\nENV GPG_KEY=\"%%PLACEHOLDER%%\"\nENV PYTHON_VERSION=\"%%PLACEHOLDER%%\"\nRUN set -ex \\\n && apk add --no-cache --virtual .fetch-deps gnupg tar xz \\\n && wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\" \\\n && wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$GPG_KEY\" \\\n && gpg --batch --verify python.tar.xz.asc python.tar.xz \\\n && { command -v gpgconf > /dev/null \\\n && gpgconf --kill all || : ; } \\\n && rm -rf \"$GNUPGHOME\" python.tar.xz.asc \\\n && mkdir -p /usr/src/python \\\n && tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \\\n && rm python.tar.xz \\\n && apk add --no-cache --virtual .build-deps bzip2-dev coreutils dpkg-dev dpkg expat-dev findutils gcc gdbm-dev libc-dev libffi-dev libnsl-dev libtirpc-dev linux-headers make ncurses-dev openssl-dev pax-utils readline-dev sqlite-dev tcl-dev tk tk-dev zlib-dev \\\n && apk del .fetch-deps \\\n && cd /usr/src/python \\\n && gnuArch=\"$( dpkg-architecture --query DEB_BUILD_GNU_TYPE ;)\" \\\n && ./configure --build=\"$gnuArch\" --enable-shared --enable-unicode=ucs4 --with-system-expat --with-system-ffi \\\n && make -j \"$( nproc ;)\" EXTRA_CFLAGS=\"-DTHREAD_STACK_SIZE=0x100000\" \\\n && make install \\\n && find /usr/local -type f -executable -not ( -name '*tkinter*' ) -exec scanelf --needed --nobanner --format '%n#p' '{}' ';' | tr ',' '\\n' | sort -u | awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' | xargs -rt apk add --no-cache --virtual .python-rundeps \\\n && apk del .build-deps \\\n && find /usr/local -depth ( ( -type d -a ( -name test -o -name tests ) ) -o ( -type f -a ( -name '*.pyc' -o -name '*.pyo' ) ) ) -exec rm -rf '{}' + \\\n && rm -rf /usr/src/python \\\n && python2 --version\n#  if this is called \"PIP_VERSION\", pip explodes with \"ValueError: invalid truth value '<VERSION>'\"\nENV PYTHON_PIP_VERSION=\"%%PLACEHOLDER%%\"\nRUN set -ex ; wget -O get-pip.py 'https://bootstrap.pypa.io/get-pip.py' ; python get-pip.py --disable-pip-version-check --no-cache-dir \"pip==$PYTHON_PIP_VERSION\" ; pip --version ; find /usr/local -depth ( ( -type d -a ( -name test -o -name tests ) ) -o ( -type f -a ( -name '*.pyc' -o -name '*.pyo' ) ) ) -exec rm -rf '{}' + ; rm -f get-pip.py\nCMD [\"python2\"]\n","injectedSmells":[],"originalDockerfileHash":"7ba2bd8b2db36b2ec1f84832a2ce05b3","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM alpine:%%PLACEHOLDER%%\n#   ensure local python is preferred over distribution python\nENV PATH=\"/usr/local/bin:$PATH\"\n#   http://bugs.python.org/issue19846\n#   > At the moment, setting \"LANG=C\" on a Linux system *fundamentally breaks Python 3*, and that's not OK.\nENV LANG=\"C.UTF-8\"\n#   https://github.com/docker-library/python/issues/147\nENV PYTHONIOENCODING=\"UTF-8\"\n#   install ca-certificates so that HTTPS works consistently\n#   other runtime dependencies for Python are installed later\nRUN apk add --no-cache ca-certificates\nENV GPG_KEY=\"%%PLACEHOLDER%%\"\nENV PYTHON_VERSION=\"%%PLACEHOLDER%%\"\nRUN set -ex \\\n && apk add --no-cache --virtual .fetch-deps gnupg tar xz \\\n && wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\" \\\n && wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$GPG_KEY\" \\\n && gpg --batch --verify python.tar.xz.asc python.tar.xz \\\n && { command -v gpgconf > /dev/null \\\n && gpgconf --kill all || : ; } \\\n && rm -rf \"$GNUPGHOME\" python.tar.xz.asc \\\n && mkdir -p /usr/src/python \\\n && tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \\\n && rm python.tar.xz \\\n && apk add --no-cache --virtual .build-deps bzip2-dev coreutils dpkg-dev dpkg expat-dev findutils gcc gdbm-dev libc-dev libffi-dev libnsl-dev libtirpc-dev linux-headers make ncurses-dev openssl-dev pax-utils readline-dev sqlite-dev tcl-dev tk tk-dev zlib-dev \\\n && apk del .fetch-deps \\\n && cd /usr/src/python \\\n && gnuArch=\"$( dpkg-architecture --query DEB_BUILD_GNU_TYPE ;)\" \\\n && ./configure --build=\"$gnuArch\" --enable-shared --enable-unicode=ucs4 --with-system-expat --with-system-ffi \\\n && make -j \"$( nproc ;)\" EXTRA_CFLAGS=\"-DTHREAD_STACK_SIZE=0x100000\" \\\n && make install \\\n && find /usr/local -type f -executable -not\n#   if this is called \"PIP_VERSION\", pip explodes with \"ValueError: invalid truth value '<VERSION>'\"\nENV PYTHON_PIP_VERSION=\"%%PLACEHOLDER%%\"\nRUN set -ex ; wget -O get-pip.py 'https://bootstrap.pypa.io/get-pip.py' ; python get-pip.py --disable-pip-version-check --no-cache-dir \"pip==$PYTHON_PIP_VERSION\" ; pip --version ; find /usr/local -depth\nCMD [\"python2\"]\n","originalDockerfileUglifiedHash":"d2d12c6f64a402b09351aa3b3e231928","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/8af172f5e4c1ac3e28152454493e529883d8ed0b.dockerfile"}