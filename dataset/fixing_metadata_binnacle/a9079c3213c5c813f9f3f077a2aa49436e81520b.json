{"seed":1808700254,"processedDockerfileHash":"bcffe5e10897e6e0888f760822102aa3","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["do-not-have-secrets","have-a-healthcheck"],"processedDockerfile":"FROM centos:7\nMAINTAINER Julius Loman <lomo@kyberia.net>\nARG INSTALL_SOURCE=\"http://netcool.install:8000\" \nARG INSTALL_FILE_WAS=\"WAS_V8.5.5.9_FOR_JSM_FOR_LINUX_ML.zip\"\nARG INSTALL_FILE_JAZZ=\"JAZZ_FOR_SM_1.1.3.0_FOR_LNX.zip\"\nARG INSTALL_FILE_WEBGUI=\"OMNIbus-v8.1-WebGUI.linux64.zip\"\nARG INSTALL_FILE_WEBGUI_FP=\"OMNIbus-v8.1.0-WebGUI-FP9-IM-Extensions-linux64-UpdatePack.zip\"\nARG INSTALL_FILE_ITNM=\"ITNP_IP_LIN.zip\"\nARG INSTALL_FILE_ITNM_FP=\"4.2.0-TIV-ITNMIP-Linux-FP0002.zip\"\nARG INSTALL_TMP=/tmp/install\nARG INSTALL_OBJECTSERVER_PRIMARY_HOST=\"omnibus\"\nARG INSTALL_OBJECTSERVER_PRIMARY_PORT=4100\nARG INSTALL_OBJECTSERVER_PRIMARY_NAME=\"NCOMS\"\nARG INSTALL_OBJECTSERVER_USER=\"root\"\nARG INSTALL_OBJECTSERVER_PASSWORD=\"\"\n# A secret has been removed here. Please do not provide secrets from the Dockerfile as these will leak into the metadata of the resulting docker image. To provide secrets the --secret flag of the docker build command can be used (https://docs.docker.com/develop/develop-images/build_enhancements/#new-docker-build-secret-information).\nENV OBJECTSERVER_PRIMARY_HOST=\"omnibus\" \\\n    OBJECTSERVER_PRIMARY_PORT=\"4100\" \\\n    OBJECTSERVER_PRIMARY_NAME=\"NCOMS\" \\\n    OBJECTSERVER_USER=\"root\" \\\n    SMADMIN_USERNAME=\"smadmin\"\n#   Add dependencies\nRUN curl -O https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm \\\n && yum --setopt=tsflags=nodocs -y localinstall epel-release-latest-7.noarch.rpm \\\n && rm epel-release-latest-7.noarch.rpm \\\n && yum --setopt=tsflags=nodocs -y update \\\n && yum --setopt=tsflags=nodocs -y install tar hostname unzip audit-libs fontconfig freetype compat-libstdc++-33.i686 glibc.i686 gtk2 libICE libSM libX11 libXau libXcursor libXext libXft libXmu libXp libXpm libXrender libXt libXtst libstdc++.i686 libgcc.i686 libjpeg-turbo libpng12 motif dejavu-fonts-common dejavu-sans-fonts expat glibc libgcc libidn libstdc++ libuuid libxcb nss-softokn-freebl pam zlib nss-softokn-freebl.i686 xmlstarlet compat-libstdc++-33 \\\n && rm -rf /var/cache/yum/* \\\n && yum clean all\nCOPY response_was_jazz_webgui.xml response_itnm.xml docker-entrypoint-functions.sh docker-entrypoint.sh $INSTALL_TMP/\nRUN mkdir -p /opt/IBM $INSTALL_TMP/{was,jazz,webgui,webgui-fp,itnm,itnm-fp} /docker-entrypoint.d /docker-init.d \\\n && useradd -c \"Netcool user\" netcool \\\n && mkdir -p /db $INSTALL_TMP \\\n && mv $INSTALL_TMP/docker-entrypoint* / \\\n && chown -R netcool:netcool $INSTALL_TMP /opt/IBM /docker-entrypoint.d /docker-init.d /docker-entrypoint.sh /docker-entrypoint-functions.sh \\\n && chmod +x /docker-entrypoint.sh /docker-entrypoint-functions.sh\nUSER netcool\nRUN cd /tmp/install \\\n && curl -O \"$INSTALL_SOURCE/$INSTALL_FILE_JAZZ\" \\\n && unzip -q -d \"$INSTALL_TMP/jazz\" \"$INSTALL_FILE_JAZZ\" \\\n && curl -O \"$INSTALL_SOURCE/$INSTALL_FILE_WAS\" \\\n && unzip -q -d \"$INSTALL_TMP/was\" \"$INSTALL_FILE_WAS\" \\\n && curl -O \"$INSTALL_SOURCE/$INSTALL_FILE_WEBGUI\" \\\n && unzip -q -d \"$INSTALL_TMP/webgui\" \"$INSTALL_FILE_WEBGUI\" \\\n && curl -O \"$INSTALL_SOURCE/$INSTALL_FILE_WEBGUI_FP\" \\\n && unzip -q -d \"$INSTALL_TMP/webgui-fp\" \"$INSTALL_FILE_WEBGUI_FP\" \\\n && curl -O \"$INSTALL_SOURCE/$INSTALL_FILE_ITNM\" \\\n && unzip -q -d \"$INSTALL_TMP/itnm\" \"$INSTALL_FILE_ITNM\" \\\n && curl -O \"$INSTALL_SOURCE/$INSTALL_FILE_ITNM_FP\" \\\n && unzip -q -d \"$INSTALL_TMP/itnm-fp\" \"$INSTALL_FILE_ITNM_FP\" \\\n && rm -rf \"$INSTALL_FILE_WAS\" \"$INSTALL_FILE_JAZZ\" \"$INSTALL_FILE_WEBGUI\" \"$INSTALL_FILE_WEBGUI_FP\" \"$INSTALL_FILE_ITNM\" \"$INSTALL_FILE_ITNM_FP\"\nRUN . /docker-entrypoint-functions.sh \\\n && { [ -n \"$INSTALL_OBJECTSERVER_PRIMARY_HOST\" ] \\\n && OBJECTSERVER_PRIMARY_HOST=\"$INSTALL_OBJECTSERVER_PRIMARY_HOST\" ; } ; { [ -n \"$INSTALL_OBJECTSERVER_PRIMARY_PORT\" ] \\\n && export OBJECTSERVER_PRIMARY_PORT=\"$INSTALL_OBJECTSERVER_PRIMARY_PORT\" ; } ; { [ -n \"$INSTALL_OBJECTSERVER_PRIMARY_NAME\" ] \\\n && export OBJECTSERVER_PRIMARY_NAME=\"$INSTALL_OBJECTSERVER_PRIMARY_NAME\" ; } ; { [ -n \"$INSTALL_OBJECTSERVER_USER\" ] \\\n && export OBJECTSERVER_USER=\"$INSTALL_OBJECTSERVER_USER\" ; } ; { [ -n \"$INSTALL_OBJECTSERVER_PASSWORD\" ] \\\n && export OBJECTSERVER_PASSWORD=\"$INSTALL_OBJECTSERVER_PASSWORD\" ; } ; mv \"$INSTALL_TMP/response_was_jazz_webgui.xml\" \"$INSTALL_TMP/jazz/im.linux.x86_64/install.xml\" \\\n && cd \"$INSTALL_TMP/jazz/im.linux.x86_64\" \\\n && ./userinstc --launcher.ini user-silent-install.ini -acceptLicense \\\n && backupNCWDataSources \\\n && stopJazzSM \\\n && configureNCWDataSources \\\n && startJazzSM \\\n && mv \"$INSTALL_TMP/response_itnm.xml\" \"$INSTALL_TMP/jazz/im.linux.x86_64/install.xml\" \\\n && cd \"$INSTALL_TMP/jazz/im.linux.x86_64\" \\\n && ./userinstc --launcher.ini user-silent-install.ini -acceptLicense \\\n && stopJazzSM \\\n && restoreNCWDataSources \\\n && rm -rf /tmp/install\nENTRYPOINT /docker-entrypoint.sh\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM centos:7\nMAINTAINER Julius Loman <lomo@kyberia.net>\nARG INSTALL_SOURCE=\"http://netcool.install:8000\" \nARG INSTALL_FILE_WAS=\"WAS_V8.5.5.9_FOR_JSM_FOR_LINUX_ML.zip\"\nARG INSTALL_FILE_JAZZ=\"JAZZ_FOR_SM_1.1.3.0_FOR_LNX.zip\"\nARG INSTALL_FILE_WEBGUI=\"OMNIbus-v8.1-WebGUI.linux64.zip\"\nARG INSTALL_FILE_WEBGUI_FP=\"OMNIbus-v8.1.0-WebGUI-FP9-IM-Extensions-linux64-UpdatePack.zip\"\nARG INSTALL_FILE_ITNM=\"ITNP_IP_LIN.zip\"\nARG INSTALL_FILE_ITNM_FP=\"4.2.0-TIV-ITNMIP-Linux-FP0002.zip\"\nARG INSTALL_TMP=/tmp/install\nARG INSTALL_OBJECTSERVER_PRIMARY_HOST=\"omnibus\"\nARG INSTALL_OBJECTSERVER_PRIMARY_PORT=4100\nARG INSTALL_OBJECTSERVER_PRIMARY_NAME=\"NCOMS\"\nARG INSTALL_OBJECTSERVER_USER=\"root\"\nARG INSTALL_OBJECTSERVER_PASSWORD=\"\"\nENV OBJECTSERVER_PRIMARY_HOST=\"omnibus\" \\\n    OBJECTSERVER_PRIMARY_PORT=\"4100\" \\\n    OBJECTSERVER_PRIMARY_NAME=\"NCOMS\" \\\n    OBJECTSERVER_USER=\"root\" \\\n    OBJECTSERVER_PASSWORD=\"\" \\\n    SMADMIN_USERNAME=\"smadmin\" \\\n    SMADMIN_PASSWORD=\"smadmin\"\n#  Add dependencies\nRUN curl -O https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm \\\n && yum --setopt=tsflags=nodocs -y localinstall epel-release-latest-7.noarch.rpm \\\n && rm epel-release-latest-7.noarch.rpm \\\n && yum --setopt=tsflags=nodocs -y update \\\n && yum --setopt=tsflags=nodocs -y install tar hostname unzip audit-libs fontconfig freetype compat-libstdc++-33.i686 glibc.i686 gtk2 libICE libSM libX11 libXau libXcursor libXext libXft libXmu libXp libXpm libXrender libXt libXtst libstdc++.i686 libgcc.i686 libjpeg-turbo libpng12 motif dejavu-fonts-common dejavu-sans-fonts expat glibc libgcc libidn libstdc++ libuuid libxcb nss-softokn-freebl pam zlib nss-softokn-freebl.i686 xmlstarlet compat-libstdc++-33 \\\n && rm -rf /var/cache/yum/* \\\n && yum clean all\nCOPY response_was_jazz_webgui.xml response_itnm.xml docker-entrypoint-functions.sh docker-entrypoint.sh $INSTALL_TMP/\nRUN mkdir -p /opt/IBM $INSTALL_TMP/{was,jazz,webgui,webgui-fp,itnm,itnm-fp} /docker-entrypoint.d /docker-init.d \\\n && useradd -c \"Netcool user\" netcool \\\n && mkdir -p /db $INSTALL_TMP \\\n && mv $INSTALL_TMP/docker-entrypoint* / \\\n && chown -R netcool:netcool $INSTALL_TMP /opt/IBM /docker-entrypoint.d /docker-init.d /docker-entrypoint.sh /docker-entrypoint-functions.sh \\\n && chmod +x /docker-entrypoint.sh /docker-entrypoint-functions.sh\nUSER netcool\nRUN cd /tmp/install \\\n && curl -O \"$INSTALL_SOURCE/$INSTALL_FILE_JAZZ\" \\\n && unzip -q -d \"$INSTALL_TMP/jazz\" \"$INSTALL_FILE_JAZZ\" \\\n && curl -O \"$INSTALL_SOURCE/$INSTALL_FILE_WAS\" \\\n && unzip -q -d \"$INSTALL_TMP/was\" \"$INSTALL_FILE_WAS\" \\\n && curl -O \"$INSTALL_SOURCE/$INSTALL_FILE_WEBGUI\" \\\n && unzip -q -d \"$INSTALL_TMP/webgui\" \"$INSTALL_FILE_WEBGUI\" \\\n && curl -O \"$INSTALL_SOURCE/$INSTALL_FILE_WEBGUI_FP\" \\\n && unzip -q -d \"$INSTALL_TMP/webgui-fp\" \"$INSTALL_FILE_WEBGUI_FP\" \\\n && curl -O \"$INSTALL_SOURCE/$INSTALL_FILE_ITNM\" \\\n && unzip -q -d \"$INSTALL_TMP/itnm\" \"$INSTALL_FILE_ITNM\" \\\n && curl -O \"$INSTALL_SOURCE/$INSTALL_FILE_ITNM_FP\" \\\n && unzip -q -d \"$INSTALL_TMP/itnm-fp\" \"$INSTALL_FILE_ITNM_FP\" \\\n && rm -rf \"$INSTALL_FILE_WAS\" \"$INSTALL_FILE_JAZZ\" \"$INSTALL_FILE_WEBGUI\" \"$INSTALL_FILE_WEBGUI_FP\" \"$INSTALL_FILE_ITNM\" \"$INSTALL_FILE_ITNM_FP\"\nRUN . /docker-entrypoint-functions.sh \\\n && { [ -n \"$INSTALL_OBJECTSERVER_PRIMARY_HOST\" ] \\\n && OBJECTSERVER_PRIMARY_HOST=\"$INSTALL_OBJECTSERVER_PRIMARY_HOST\" ; } ; { [ -n \"$INSTALL_OBJECTSERVER_PRIMARY_PORT\" ] \\\n && export OBJECTSERVER_PRIMARY_PORT=\"$INSTALL_OBJECTSERVER_PRIMARY_PORT\" ; } ; { [ -n \"$INSTALL_OBJECTSERVER_PRIMARY_NAME\" ] \\\n && export OBJECTSERVER_PRIMARY_NAME=\"$INSTALL_OBJECTSERVER_PRIMARY_NAME\" ; } ; { [ -n \"$INSTALL_OBJECTSERVER_USER\" ] \\\n && export OBJECTSERVER_USER=\"$INSTALL_OBJECTSERVER_USER\" ; } ; { [ -n \"$INSTALL_OBJECTSERVER_PASSWORD\" ] \\\n && export OBJECTSERVER_PASSWORD=\"$INSTALL_OBJECTSERVER_PASSWORD\" ; } ; mv \"$INSTALL_TMP/response_was_jazz_webgui.xml\" \"$INSTALL_TMP/jazz/im.linux.x86_64/install.xml\" \\\n && cd \"$INSTALL_TMP/jazz/im.linux.x86_64\" \\\n && ./userinstc --launcher.ini user-silent-install.ini -acceptLicense \\\n && backupNCWDataSources \\\n && stopJazzSM \\\n && configureNCWDataSources \\\n && startJazzSM \\\n && mv \"$INSTALL_TMP/response_itnm.xml\" \"$INSTALL_TMP/jazz/im.linux.x86_64/install.xml\" \\\n && cd \"$INSTALL_TMP/jazz/im.linux.x86_64\" \\\n && ./userinstc --launcher.ini user-silent-install.ini -acceptLicense \\\n && stopJazzSM \\\n && restoreNCWDataSources \\\n && rm -rf /tmp/install\nENTRYPOINT /docker-entrypoint.sh\n","injectedSmells":[],"originalDockerfileHash":"8343b350742d439938ab2b756bce935e","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM centos:7\nMAINTAINER Julius Loman <lomo@kyberia.net>\nARG INSTALL_SOURCE=\"http://netcool.install:8000\" \nARG INSTALL_FILE_WAS=\"WAS_V8.5.5.9_FOR_JSM_FOR_LINUX_ML.zip\"\nARG INSTALL_FILE_JAZZ=\"JAZZ_FOR_SM_1.1.3.0_FOR_LNX.zip\"\nARG INSTALL_FILE_WEBGUI=\"OMNIbus-v8.1-WebGUI.linux64.zip\"\nARG INSTALL_FILE_WEBGUI_FP=\"OMNIbus-v8.1.0-WebGUI-FP9-IM-Extensions-linux64-UpdatePack.zip\"\nARG INSTALL_FILE_ITNM=\"ITNP_IP_LIN.zip\"\nARG INSTALL_FILE_ITNM_FP=\"4.2.0-TIV-ITNMIP-Linux-FP0002.zip\"\nARG INSTALL_TMP=/tmp/install\nARG INSTALL_OBJECTSERVER_PRIMARY_HOST=\"omnibus\"\nARG INSTALL_OBJECTSERVER_PRIMARY_PORT=4100\nARG INSTALL_OBJECTSERVER_PRIMARY_NAME=\"NCOMS\"\nARG INSTALL_OBJECTSERVER_USER=\"root\"\nARG INSTALL_OBJECTSERVER_PASSWORD=\"\"\nENV OBJECTSERVER_PRIMARY_HOST=\"omnibus\" \\\n    OBJECTSERVER_PRIMARY_PORT=\"4100\" \\\n    OBJECTSERVER_PRIMARY_NAME=\"NCOMS\" \\\n    OBJECTSERVER_USER=\"root\" \\\n    OBJECTSERVER_PASSWORD=\"\" \\\n    SMADMIN_USERNAME=\"smadmin\" \\\n    SMADMIN_PASSWORD=\"smadmin\"\n#   Add dependencies\nRUN curl -O https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm \\\n && yum --setopt=tsflags=nodocs -y localinstall epel-release-latest-7.noarch.rpm \\\n && rm epel-release-latest-7.noarch.rpm \\\n && yum --setopt=tsflags=nodocs -y update \\\n && yum --setopt=tsflags=nodocs -y install tar hostname unzip audit-libs fontconfig freetype compat-libstdc++-33.i686 glibc.i686 gtk2 libICE libSM libX11 libXau libXcursor libXext libXft libXmu libXp libXpm libXrender libXt libXtst libstdc++.i686 libgcc.i686 libjpeg-turbo libpng12 motif dejavu-fonts-common dejavu-sans-fonts expat glibc libgcc libidn libstdc++ libuuid libxcb nss-softokn-freebl pam zlib nss-softokn-freebl.i686 xmlstarlet compat-libstdc++-33 \\\n && rm -rf /var/cache/yum/* \\\n && yum clean all\nCOPY response_was_jazz_webgui.xml response_itnm.xml docker-entrypoint-functions.sh docker-entrypoint.sh $INSTALL_TMP/\nRUN mkdir -p /opt/IBM $INSTALL_TMP/{was,jazz,webgui,webgui-fp,itnm,itnm-fp} /docker-entrypoint.d /docker-init.d \\\n && useradd -c \"Netcool user\" netcool \\\n && mkdir -p /db $INSTALL_TMP \\\n && mv $INSTALL_TMP/docker-entrypoint* / \\\n && chown -R netcool:netcool $INSTALL_TMP /opt/IBM /docker-entrypoint.d /docker-init.d /docker-entrypoint.sh /docker-entrypoint-functions.sh \\\n && chmod +x /docker-entrypoint.sh /docker-entrypoint-functions.sh\nUSER netcool\nRUN cd /tmp/install \\\n && curl -O \"$INSTALL_SOURCE/$INSTALL_FILE_JAZZ\" \\\n && unzip -q -d \"$INSTALL_TMP/jazz\" \"$INSTALL_FILE_JAZZ\" \\\n && curl -O \"$INSTALL_SOURCE/$INSTALL_FILE_WAS\" \\\n && unzip -q -d \"$INSTALL_TMP/was\" \"$INSTALL_FILE_WAS\" \\\n && curl -O \"$INSTALL_SOURCE/$INSTALL_FILE_WEBGUI\" \\\n && unzip -q -d \"$INSTALL_TMP/webgui\" \"$INSTALL_FILE_WEBGUI\" \\\n && curl -O \"$INSTALL_SOURCE/$INSTALL_FILE_WEBGUI_FP\" \\\n && unzip -q -d \"$INSTALL_TMP/webgui-fp\" \"$INSTALL_FILE_WEBGUI_FP\" \\\n && curl -O \"$INSTALL_SOURCE/$INSTALL_FILE_ITNM\" \\\n && unzip -q -d \"$INSTALL_TMP/itnm\" \"$INSTALL_FILE_ITNM\" \\\n && curl -O \"$INSTALL_SOURCE/$INSTALL_FILE_ITNM_FP\" \\\n && unzip -q -d \"$INSTALL_TMP/itnm-fp\" \"$INSTALL_FILE_ITNM_FP\" \\\n && rm -rf \"$INSTALL_FILE_WAS\" \"$INSTALL_FILE_JAZZ\" \"$INSTALL_FILE_WEBGUI\" \"$INSTALL_FILE_WEBGUI_FP\" \"$INSTALL_FILE_ITNM\" \"$INSTALL_FILE_ITNM_FP\"\nRUN . /docker-entrypoint-functions.sh \\\n && { [ -n \"$INSTALL_OBJECTSERVER_PRIMARY_HOST\" ] \\\n && OBJECTSERVER_PRIMARY_HOST=\"$INSTALL_OBJECTSERVER_PRIMARY_HOST\" ; } ; { [ -n \"$INSTALL_OBJECTSERVER_PRIMARY_PORT\" ] \\\n && export OBJECTSERVER_PRIMARY_PORT=\"$INSTALL_OBJECTSERVER_PRIMARY_PORT\" ; } ; { [ -n \"$INSTALL_OBJECTSERVER_PRIMARY_NAME\" ] \\\n && export OBJECTSERVER_PRIMARY_NAME=\"$INSTALL_OBJECTSERVER_PRIMARY_NAME\" ; } ; { [ -n \"$INSTALL_OBJECTSERVER_USER\" ] \\\n && export OBJECTSERVER_USER=\"$INSTALL_OBJECTSERVER_USER\" ; } ; { [ -n \"$INSTALL_OBJECTSERVER_PASSWORD\" ] \\\n && export OBJECTSERVER_PASSWORD=\"$INSTALL_OBJECTSERVER_PASSWORD\" ; } ; mv \"$INSTALL_TMP/response_was_jazz_webgui.xml\" \"$INSTALL_TMP/jazz/im.linux.x86_64/install.xml\" \\\n && cd \"$INSTALL_TMP/jazz/im.linux.x86_64\" \\\n && ./userinstc --launcher.ini user-silent-install.ini -acceptLicense \\\n && backupNCWDataSources \\\n && stopJazzSM \\\n && configureNCWDataSources \\\n && startJazzSM \\\n && mv \"$INSTALL_TMP/response_itnm.xml\" \"$INSTALL_TMP/jazz/im.linux.x86_64/install.xml\" \\\n && cd \"$INSTALL_TMP/jazz/im.linux.x86_64\" \\\n && ./userinstc --launcher.ini user-silent-install.ini -acceptLicense \\\n && stopJazzSM \\\n && restoreNCWDataSources \\\n && rm -rf /tmp/install\nENTRYPOINT /docker-entrypoint.sh\n","originalDockerfileUglifiedHash":"e94cb511b4199826f550e3e93094043c","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/a9079c3213c5c813f9f3f077a2aa49436e81520b.dockerfile"}