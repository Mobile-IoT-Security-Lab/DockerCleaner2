{"seed":1797097877,"processedDockerfileHash":"a6bcc07b722aa48bbd7da1bce736fa02","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM frolvlad/alpine-oraclejdk8:slim\nVOLUME /tmp\nWORKDIR /tmp/workdir\nCOPY alexa.translator.server-1.0.0.jar app.jar\nRUN sh -c 'touch /app.jar'\nENV JAVA_OPTS=\"\" \\\n    FFMPEG_VERSION=\"3.2.2\" \\\n    FDKAAC_VERSION=\"0.1.4\" \\\n    LAME_VERSION=\"3.99.5\" \\\n    OGG_VERSION=\"1.3.2\" \\\n    OPUS_VERSION=\"1.1.1\" \\\n    THEORA_VERSION=\"1.1.1\" \\\n    YASM_VERSION=\"1.3.0\" \\\n    VORBIS_VERSION=\"1.3.5\" \\\n    VPX_VERSION=\"1.6.0\" \\\n    XVID_VERSION=\"1.3.4\" \\\n    X265_VERSION=\"2.0\" \\\n    X264_VERSION=\"20160826-2245-stable\" \\\n    PKG_CONFIG_PATH=\"/usr/local/lib/pkgconfig\" \\\n    SRC=\"/usr/local\"\nENTRYPOINT [\"sh\", \"-c\", \"java\", \"$JAVA_OPTS\", \"-Dspring.profiles.active=prod\", \"-Djava.security.egd=file:/dev/./urandom\", \"-jar\", \"/app.jar\"]\nRUN buildDeps=\"autoconf automake bash binutils bzip2 cmake curl coreutils g++ gcc libtool make openssl-dev tar yasm zlib-dev\" \\\n && export MAKEFLAGS=\"-j$(($( grep -c ^processor /proc/cpuinfo ;) + 1))\" \\\n && apk add libgcc libstdc++ ca-certificates ${buildDeps} --update \\\n && DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -sL https://ftp.videolan.org/pub/videolan/x264/snapshots/x264-snapshot-${X264_VERSION}.tar.bz2 | tar -jx --strip-components=1 \\\n && ./configure --prefix=\"${SRC}\" --bindir=\"${SRC}/bin\" --enable-pic --enable-shared --disable-cli \\\n && make \\\n && make install \\\n && rm -rf ${DIR} \\\n && DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -sL https://download.videolan.org/pub/videolan/x265/x265_${X265_VERSION}.tar.gz | tar -zx \\\n && cd x265_${X265_VERSION}/build/linux \\\n && ./multilib.sh \\\n && make -C 8bit install \\\n && rm -rf ${DIR} \\\n && DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -sL http://downloads.xiph.org/releases/ogg/libogg-${OGG_VERSION}.tar.gz | tar -zx --strip-components=1 \\\n && ./configure --prefix=\"${SRC}\" --bindir=\"${SRC}/bin\" --disable-static --datarootdir=${DIR} \\\n && make \\\n && make install \\\n && rm -rf ${DIR} \\\n && DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -sL http://downloads.xiph.org/releases/opus/opus-${OPUS_VERSION}.tar.gz | tar -zx --strip-components=1 \\\n && autoreconf -fiv \\\n && ./configure --prefix=\"${SRC}\" --disable-static --datadir=\"${DIR}\" \\\n && make \\\n && make install \\\n && rm -rf ${DIR} \\\n && DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -sL http://downloads.xiph.org/releases/vorbis/libvorbis-${VORBIS_VERSION}.tar.gz | tar -zx --strip-components=1 \\\n && ./configure --prefix=\"${SRC}\" --with-ogg=\"${SRC}\" --bindir=\"${SRC}/bin\" --disable-static --datadir=\"${DIR}\" \\\n && make \\\n && make install \\\n && rm -rf ${DIR} \\\n && DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -sL http://downloads.xiph.org/releases/theora/libtheora-${THEORA_VERSION}.tar.bz2 | tar -jx --strip-components=1 \\\n && ./configure --prefix=\"${SRC}\" --with-ogg=\"${SRC}\" --bindir=\"${SRC}/bin\" --disable-static --datadir=\"${DIR}\" \\\n && make \\\n && make install \\\n && rm -rf ${DIR} \\\n && DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -sL https://codeload.github.com/webmproject/libvpx/tar.gz/v${VPX_VERSION} | tar -zx --strip-components=1 \\\n && ./configure --prefix=\"${SRC}\" --enable-vp8 --enable-vp9 --enable-pic --disable-debug --disable-examples --disable-docs --disable-install-bins --enable-shared \\\n && make \\\n && make install \\\n && rm -rf ${DIR} \\\n && DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -sL https://downloads.sf.net/project/lame/lame/${LAME_VERSION%.*}/lame-${LAME_VERSION}.tar.gz | tar -zx --strip-components=1 \\\n && ./configure --prefix=\"${SRC}\" --bindir=\"${SRC}/bin\" --disable-static --enable-nasm --datarootdir=\"${DIR}\" \\\n && make \\\n && make install \\\n && rm -rf ${DIR} \\\n && DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -sL http://downloads.xvid.org/downloads/xvidcore-${XVID_VERSION}.tar.gz | tar -zx \\\n && cd xvidcore/build/generic \\\n && ./configure --prefix=\"${SRC}\" --bindir=\"${SRC}/bin\" --datadir=\"${DIR}\" --disable-static --enable-shared \\\n && make \\\n && make install \\\n && rm -rf ${DIR} \\\n && DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -sL https://github.com/mstorsjo/fdk-aac/archive/v${FDKAAC_VERSION}.tar.gz | tar -zx --strip-components=1 \\\n && autoreconf -fiv \\\n && ./configure --prefix=\"${SRC}\" --disable-static --datadir=\"${DIR}\" \\\n && make \\\n && make install \\\n && make distclean \\\n && rm -rf ${DIR} \\\n && DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -sL http://ffmpeg.org/releases/ffmpeg-${FFMPEG_VERSION}.tar.gz | tar -zx --strip-components=1 \\\n && ./configure --prefix=\"${SRC}\" --extra-cflags=\"-I${SRC}/include\" --extra-ldflags=\"-L${SRC}/lib\" --bindir=\"${SRC}/bin\" --disable-doc --disable-static --enable-shared --disable-ffplay --extra-libs=-ldl --enable-version3 --enable-libfdk_aac --enable-libmp3lame --enable-libopus --enable-libtheora --enable-libvorbis --enable-libvpx --enable-libx264 --enable-libx265 --enable-libxvid --enable-gpl --enable-avresample --enable-postproc --enable-nonfree --disable-debug --enable-small --enable-openssl \\\n && make \\\n && make install \\\n && make distclean \\\n && hash -r \\\n && cd tools \\\n && make qt-faststart \\\n && cp qt-faststart ${SRC}/bin \\\n && rm -rf ${DIR} \\\n && cd \\\n && apk del ${buildDeps} \\\n && rm -rf /var/cache/apk/* /usr/local/include \\\n && ffmpeg -buildconf\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM frolvlad/alpine-oraclejdk8:slim\nVOLUME /tmp\nWORKDIR /tmp/workdir\nADD alexa.translator.server-1.0.0.jar app.jar\nRUN sh -c 'touch /app.jar'\nENV JAVA_OPTS=\"\" \\\n    FFMPEG_VERSION=\"3.2.2\" \\\n    FDKAAC_VERSION=\"0.1.4\" \\\n    LAME_VERSION=\"3.99.5\" \\\n    OGG_VERSION=\"1.3.2\" \\\n    OPUS_VERSION=\"1.1.1\" \\\n    THEORA_VERSION=\"1.1.1\" \\\n    YASM_VERSION=\"1.3.0\" \\\n    VORBIS_VERSION=\"1.3.5\" \\\n    VPX_VERSION=\"1.6.0\" \\\n    XVID_VERSION=\"1.3.4\" \\\n    X265_VERSION=\"2.0\" \\\n    X264_VERSION=\"20160826-2245-stable\" \\\n    PKG_CONFIG_PATH=\"/usr/local/lib/pkgconfig\" \\\n    SRC=\"/usr/local\"\nENTRYPOINT [\"sh\", \"-c\", \"java\", \"$JAVA_OPTS\", \"-Dspring.profiles.active=prod\", \"-Djava.security.egd=file:/dev/./urandom\", \"-jar\", \"/app.jar\"]\nRUN buildDeps=\"autoconf automake bash binutils bzip2 cmake curl coreutils g++ gcc libtool make openssl-dev tar yasm zlib-dev\" \\\n && export MAKEFLAGS=\"-j$(($( grep -c ^processor /proc/cpuinfo ;) + 1))\" \\\n && apk add --update ${buildDeps} libgcc libstdc++ ca-certificates \\\n && DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -sL https://ftp.videolan.org/pub/videolan/x264/snapshots/x264-snapshot-${X264_VERSION}.tar.bz2 | tar -jx --strip-components=1 \\\n && ./configure --prefix=\"${SRC}\" --bindir=\"${SRC}/bin\" --enable-pic --enable-shared --disable-cli \\\n && make \\\n && make install \\\n && rm -rf ${DIR} \\\n && DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -sL https://download.videolan.org/pub/videolan/x265/x265_${X265_VERSION}.tar.gz | tar -zx \\\n && cd x265_${X265_VERSION}/build/linux \\\n && ./multilib.sh \\\n && make -C 8bit install \\\n && rm -rf ${DIR} \\\n && DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -sL http://downloads.xiph.org/releases/ogg/libogg-${OGG_VERSION}.tar.gz | tar -zx --strip-components=1 \\\n && ./configure --prefix=\"${SRC}\" --bindir=\"${SRC}/bin\" --disable-static --datarootdir=${DIR} \\\n && make \\\n && make install \\\n && rm -rf ${DIR} \\\n && DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -sL http://downloads.xiph.org/releases/opus/opus-${OPUS_VERSION}.tar.gz | tar -zx --strip-components=1 \\\n && autoreconf -fiv \\\n && ./configure --prefix=\"${SRC}\" --disable-static --datadir=\"${DIR}\" \\\n && make \\\n && make install \\\n && rm -rf ${DIR} \\\n && DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -sL http://downloads.xiph.org/releases/vorbis/libvorbis-${VORBIS_VERSION}.tar.gz | tar -zx --strip-components=1 \\\n && ./configure --prefix=\"${SRC}\" --with-ogg=\"${SRC}\" --bindir=\"${SRC}/bin\" --disable-static --datadir=\"${DIR}\" \\\n && make \\\n && make install \\\n && rm -rf ${DIR} \\\n && DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -sL http://downloads.xiph.org/releases/theora/libtheora-${THEORA_VERSION}.tar.bz2 | tar -jx --strip-components=1 \\\n && ./configure --prefix=\"${SRC}\" --with-ogg=\"${SRC}\" --bindir=\"${SRC}/bin\" --disable-static --datadir=\"${DIR}\" \\\n && make \\\n && make install \\\n && rm -rf ${DIR} \\\n && DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -sL https://codeload.github.com/webmproject/libvpx/tar.gz/v${VPX_VERSION} | tar -zx --strip-components=1 \\\n && ./configure --prefix=\"${SRC}\" --enable-vp8 --enable-vp9 --enable-pic --disable-debug --disable-examples --disable-docs --disable-install-bins --enable-shared \\\n && make \\\n && make install \\\n && rm -rf ${DIR} \\\n && DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -sL https://downloads.sf.net/project/lame/lame/${LAME_VERSION%.*}/lame-${LAME_VERSION}.tar.gz | tar -zx --strip-components=1 \\\n && ./configure --prefix=\"${SRC}\" --bindir=\"${SRC}/bin\" --disable-static --enable-nasm --datarootdir=\"${DIR}\" \\\n && make \\\n && make install \\\n && rm -rf ${DIR} \\\n && DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -sL http://downloads.xvid.org/downloads/xvidcore-${XVID_VERSION}.tar.gz | tar -zx \\\n && cd xvidcore/build/generic \\\n && ./configure --prefix=\"${SRC}\" --bindir=\"${SRC}/bin\" --datadir=\"${DIR}\" --disable-static --enable-shared \\\n && make \\\n && make install \\\n && rm -rf ${DIR} \\\n && DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -sL https://github.com/mstorsjo/fdk-aac/archive/v${FDKAAC_VERSION}.tar.gz | tar -zx --strip-components=1 \\\n && autoreconf -fiv \\\n && ./configure --prefix=\"${SRC}\" --disable-static --datadir=\"${DIR}\" \\\n && make \\\n && make install \\\n && make distclean \\\n && rm -rf ${DIR} \\\n && DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -sL http://ffmpeg.org/releases/ffmpeg-${FFMPEG_VERSION}.tar.gz | tar -zx --strip-components=1 \\\n && ./configure --prefix=\"${SRC}\" --extra-cflags=\"-I${SRC}/include\" --extra-ldflags=\"-L${SRC}/lib\" --bindir=\"${SRC}/bin\" --disable-doc --disable-static --enable-shared --disable-ffplay --extra-libs=-ldl --enable-version3 --enable-libfdk_aac --enable-libmp3lame --enable-libopus --enable-libtheora --enable-libvorbis --enable-libvpx --enable-libx264 --enable-libx265 --enable-libxvid --enable-gpl --enable-avresample --enable-postproc --enable-nonfree --disable-debug --enable-small --enable-openssl \\\n && make \\\n && make install \\\n && make distclean \\\n && hash -r \\\n && cd tools \\\n && make qt-faststart \\\n && cp qt-faststart ${SRC}/bin \\\n && rm -rf ${DIR} \\\n && cd \\\n && apk del ${buildDeps} \\\n && rm -rf /var/cache/apk/* /usr/local/include \\\n && ffmpeg -buildconf\n","injectedSmells":[],"originalDockerfileHash":"58d3b19cf1ebc57ab1fcfab86b1d8995","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM frolvlad/alpine-oraclejdk8:slim\nVOLUME /tmp\nWORKDIR /tmp/workdir\nADD alexa.translator.server-1.0.0.jar app.jar\nRUN sh -c 'touch /app.jar'\nENV JAVA_OPTS=\"\" \\\n    FFMPEG_VERSION=\"3.2.2\" \\\n    FDKAAC_VERSION=\"0.1.4\" \\\n    LAME_VERSION=\"3.99.5\" \\\n    OGG_VERSION=\"1.3.2\" \\\n    OPUS_VERSION=\"1.1.1\" \\\n    THEORA_VERSION=\"1.1.1\" \\\n    YASM_VERSION=\"1.3.0\" \\\n    VORBIS_VERSION=\"1.3.5\" \\\n    VPX_VERSION=\"1.6.0\" \\\n    XVID_VERSION=\"1.3.4\" \\\n    X265_VERSION=\"2.0\" \\\n    X264_VERSION=\"20160826-2245-stable\" \\\n    PKG_CONFIG_PATH=\"/usr/local/lib/pkgconfig\" \\\n    SRC=\"/usr/local\"\nENTRYPOINT [\"sh\", \"-c\", \"java\", \"$JAVA_OPTS\", \"-Dspring.profiles.active=prod\", \"-Djava.security.egd=file:/dev/./urandom\", \"-jar\", \"/app.jar\"]\nRUN buildDeps=\"autoconf automake bash binutils bzip2 cmake curl coreutils g++ gcc libtool make openssl-dev tar yasm zlib-dev\" \\\n && export MAKEFLAGS=\"-j$(($( grep -c ^processor /proc/cpuinfo ;) + 1))\" \\\n && apk add --update ${buildDeps} libgcc libstdc++ ca-certificates \\\n && DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -sL https://ftp.videolan.org/pub/videolan/x264/snapshots/x264-snapshot-${X264_VERSION}.tar.bz2 | tar -jx --strip-components=1 \\\n && ./configure --prefix=\"${SRC}\" --bindir=\"${SRC}/bin\" --enable-pic --enable-shared --disable-cli \\\n && make \\\n && make install \\\n && rm -rf ${DIR} \\\n && DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -sL https://download.videolan.org/pub/videolan/x265/x265_${X265_VERSION}.tar.gz | tar -zx \\\n && cd x265_${X265_VERSION}/build/linux \\\n && ./multilib.sh \\\n && make -C 8bit install \\\n && rm -rf ${DIR} \\\n && DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -sL http://downloads.xiph.org/releases/ogg/libogg-${OGG_VERSION}.tar.gz | tar -zx --strip-components=1 \\\n && ./configure --prefix=\"${SRC}\" --bindir=\"${SRC}/bin\" --disable-static --datarootdir=${DIR} \\\n && make \\\n && make install \\\n && rm -rf ${DIR} \\\n && DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -sL http://downloads.xiph.org/releases/opus/opus-${OPUS_VERSION}.tar.gz | tar -zx --strip-components=1 \\\n && autoreconf -fiv \\\n && ./configure --prefix=\"${SRC}\" --disable-static --datadir=\"${DIR}\" \\\n && make \\\n && make install \\\n && rm -rf ${DIR} \\\n && DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -sL http://downloads.xiph.org/releases/vorbis/libvorbis-${VORBIS_VERSION}.tar.gz | tar -zx --strip-components=1 \\\n && ./configure --prefix=\"${SRC}\" --with-ogg=\"${SRC}\" --bindir=\"${SRC}/bin\" --disable-static --datadir=\"${DIR}\" \\\n && make \\\n && make install \\\n && rm -rf ${DIR} \\\n && DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -sL http://downloads.xiph.org/releases/theora/libtheora-${THEORA_VERSION}.tar.bz2 | tar -jx --strip-components=1 \\\n && ./configure --prefix=\"${SRC}\" --with-ogg=\"${SRC}\" --bindir=\"${SRC}/bin\" --disable-static --datadir=\"${DIR}\" \\\n && make \\\n && make install \\\n && rm -rf ${DIR} \\\n && DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -sL https://codeload.github.com/webmproject/libvpx/tar.gz/v${VPX_VERSION} | tar -zx --strip-components=1 \\\n && ./configure --prefix=\"${SRC}\" --enable-vp8 --enable-vp9 --enable-pic --disable-debug --disable-examples --disable-docs --disable-install-bins --enable-shared \\\n && make \\\n && make install \\\n && rm -rf ${DIR} \\\n && DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -sL https://downloads.sf.net/project/lame/lame/${LAME_VERSION%.*}/lame-${LAME_VERSION}.tar.gz | tar -zx --strip-components=1 \\\n && ./configure --prefix=\"${SRC}\" --bindir=\"${SRC}/bin\" --disable-static --enable-nasm --datarootdir=\"${DIR}\" \\\n && make \\\n && make install \\\n && rm -rf ${DIR} \\\n && DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -sL http://downloads.xvid.org/downloads/xvidcore-${XVID_VERSION}.tar.gz | tar -zx \\\n && cd xvidcore/build/generic \\\n && ./configure --prefix=\"${SRC}\" --bindir=\"${SRC}/bin\" --datadir=\"${DIR}\" --disable-static --enable-shared \\\n && make \\\n && make install \\\n && rm -rf ${DIR} \\\n && DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -sL https://github.com/mstorsjo/fdk-aac/archive/v${FDKAAC_VERSION}.tar.gz | tar -zx --strip-components=1 \\\n && autoreconf -fiv \\\n && ./configure --prefix=\"${SRC}\" --disable-static --datadir=\"${DIR}\" \\\n && make \\\n && make install \\\n && make distclean \\\n && rm -rf ${DIR} \\\n && DIR=$( mktemp -d ;) \\\n && cd ${DIR} \\\n && curl -sL http://ffmpeg.org/releases/ffmpeg-${FFMPEG_VERSION}.tar.gz | tar -zx --strip-components=1 \\\n && ./configure --prefix=\"${SRC}\" --extra-cflags=\"-I${SRC}/include\" --extra-ldflags=\"-L${SRC}/lib\" --bindir=\"${SRC}/bin\" --disable-doc --disable-static --enable-shared --disable-ffplay --extra-libs=-ldl --enable-version3 --enable-libfdk_aac --enable-libmp3lame --enable-libopus --enable-libtheora --enable-libvorbis --enable-libvpx --enable-libx264 --enable-libx265 --enable-libxvid --enable-gpl --enable-avresample --enable-postproc --enable-nonfree --disable-debug --enable-small --enable-openssl \\\n && make \\\n && make install \\\n && make distclean \\\n && hash -r \\\n && cd tools \\\n && make qt-faststart \\\n && cp qt-faststart ${SRC}/bin \\\n && rm -rf ${DIR} \\\n && cd \\\n && apk del ${buildDeps} \\\n && rm -rf /var/cache/apk/* /usr/local/include \\\n && ffmpeg -buildconf\n","originalDockerfileUglifiedHash":"58d3b19cf1ebc57ab1fcfab86b1d8995","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/b33b61224c0376f1c5fc49cc09a5af66c7aea454.dockerfile"}