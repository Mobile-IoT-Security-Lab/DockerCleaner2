{"seed":2017548696,"processedDockerfileHash":"c2ccd43c60b607ad6686170bd0c5b04e","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM ubuntu:14.04\nRUN echo 'deb http://us.archive.ubuntu.com/ubuntu/ trusty universe' >> /etc/apt/sources.list\nRUN echo\nRUN :\nRUN apt-get -y upgrade\n#   Install all prerequisites\nRUN (apt-get update ;apt-get install --no-install-recommends software-properties-common=0.92.37.8 -y )\nRUN add-apt-repository -y ppa:chris-lea/node.js\nRUN :\nRUN (apt-get update ;apt-get install --no-install-recommends python-django-tagging=1:0.3.1-3 python-simplejson=3.3.1-1ubuntu6 python-memcache=1.53-1build1 python-ldap=2.4.10-1build1 python-cairo=1.8.8-1ubuntu5 python-psycopg2=2.4.5-1build5 python-support=1.0.15 python-pip=1.5.4-1ubuntu4 gunicorn=17.5-2build1 supervisor=3.0b2-1ubuntu0.1 nginx-light=1.4.6-1ubuntu3.9 nodejs=0.10.25~dfsg2-2ubuntu1.2 git=1:1.9.1-1ubuntu0.10 wget=1.15-1ubuntu1.14.04.5 curl=7.35.0-1ubuntu2.20 openjdk-7-jre=7u211-2.6.17-0ubuntu0.1 build-essential=11.6ubuntu6 python-dev=2.7.5-5ubuntu3 -y )\n#   Install PostgreSQL for Graphite\nRUN locale-gen en_US.UTF-8\nRUN update-locale LANG=en_US.UTF-8\nRUN : \\\n && DEBIAN_FRONTEND=noninteractive\nRUN (apt-get update ;apt-get install --no-install-recommends postgresql-9.3=9.3.24-0ubuntu0.14.04 -y -q )\n#   /etc/ssl/private can't be accessed from within container for some reason\n#   (@andrewgodwin says it's something AUFS related)\nRUN mkdir /etc/ssl/private-copy ; mv /etc/ssl/private/* /etc/ssl/private-copy/ ; rm -r /etc/ssl/private ; mv /etc/ssl/private-copy /etc/ssl/private ; chmod -R 0700 /etc/ssl/private ; chown -R postgres /etc/ssl/private\nCOPY ./postgres/postgresql.conf /etc/postgresql/9.3/main/postgresql.conf\nCOPY ./postgres/pg_hba.conf /etc/postgresql/9.3/main/pg_hba.conf\nRUN chown postgres:postgres /etc/postgresql/9.3/main/*.conf\nCOPY ./postgres/run /usr/local/bin/run\nRUN chmod +x /usr/local/bin/run\nVOLUME [\"/var/lib/postgresql\"]\n#   Install Elasticsearch\nRUN cd ~ \\\n && wget https://download.elasticsearch.org/elasticsearch/elasticsearch/elasticsearch-1.3.2.deb\nRUN cd ~ \\\n && dpkg -i elasticsearch-1.3.2.deb \\\n && rm elasticsearch-1.3.2.deb\n#   Install StatsD\nRUN mkdir /src \\\n && git clone https://github.com/etsy/statsd.git /src/statsd \\\n && cd /src/statsd \\\n && git checkout v0.7.1\n#   Install Whisper, Carbon and Graphite-Web\nRUN pip install Twisted==11.1.0\nRUN pip install Django==1.5\nRUN pip install whisper==1.1.10\nRUN pip install carbon==1.1.10 --install-option=\"--prefix=/var/lib/graphite\" --install-option=\"--install-lib=/var/lib/graphite/lib\"\nRUN pip install graphite-web==1.1.10 --install-option=\"--prefix=/var/lib/graphite\" --install-option=\"--install-lib=/var/lib/graphite/webapp\"\n#   Install Grafana\nRUN mkdir /src/grafana \\\n && cd /src/grafana \\\n && wget http://grafanarel.s3.amazonaws.com/grafana-1.7.0.tar.gz \\\n && tar xzvf grafana-1.7.0.tar.gz --strip-components=1 \\\n && rm grafana-1.7.0.tar.gz\n#   Configure Elasticsearch\nCOPY ./elasticsearch/run /usr/local/bin/run_elasticsearch\nCOPY ./elasticsearch/elasticsearch.yml /etc/elasticsearch/elasticsearch.yml\nVOLUME [\"/data\"]\n#   Confiure StatsD\nCOPY ./statsd/config.js /src/statsd/config.js\n#   Configure Whisper, Carbon and Graphite-Web\nCOPY ./graphite/initial_data.json /var/lib/graphite/webapp/graphite/initial_data.json\nCOPY ./graphite/local_settings.py /var/lib/graphite/webapp/graphite/local_settings.py\nCOPY ./graphite/carbon.conf /var/lib/graphite/conf/carbon.conf\nCOPY ./graphite/storage-schemas.conf /var/lib/graphite/conf/storage-schemas.conf\nCOPY ./graphite/storage-aggregation.conf /var/lib/graphite/conf/storage-aggregation.conf\nRUN mkdir -p /var/lib/graphite/storage/whisper\nRUN touch /var/lib/graphite/storage/graphite.db /var/lib/graphite/storage/index\nRUN chown -R www-data /var/lib/graphite/storage\nRUN chmod 0775 /var/lib/graphite/storage /var/lib/graphite/storage/whisper\nRUN chmod 0664 /var/lib/graphite/storage/graphite.db\n#   Configure Grafana\nCOPY ./grafana/config.js /src/grafana/config.js\nCOPY ./grafana/dashboard.json /src/grafana/app/dashboards/default.json\nCOPY ./nginx/nginx.conf /etc/nginx/nginx.conf\nCOPY ./supervisord.conf /etc/supervisor/conf.d/supervisord.conf\nCOPY crontab /crontab\n#   Grafana\nEXPOSE 80/tcp\n#   StatsD UDP port\nEXPOSE 8125/udp\n#   StatsD Management port\nEXPOSE 8126/tcp\n#   Carbon listen port\nEXPOSE 2003/tcp\nCMD /etc/init.d/postgresql start \\\n && sudo -u postgres createuser -E -w graphite \\\n && echo \"ALTER USER graphite WITH PASSWORD 'graphite';\" | psql -U postgres \\\n && echo \"CREATE DATABASE graphite OWNER graphite;\" | psql -U postgres \\\n && cd /var/lib/graphite/webapp/graphite \\\n && python manage.py syncdb --noinput \\\n && /etc/init.d/postgresql stop \\\n && cat /crontab | crontab - \\\n && chown -R elasticsearch:elasticsearch /data \\\n && /etc/init.d/supervisor start\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:14.04\nRUN echo 'deb http://us.archive.ubuntu.com/ubuntu/ trusty universe' >> /etc/apt/sources.list\nRUN echo\nRUN apt-get update -y\nRUN apt-get -y upgrade\n#  Install all prerequisites\nRUN apt-get install software-properties-common -y\nRUN add-apt-repository -y ppa:chris-lea/node.js\nRUN apt-get update -y\nRUN apt-get install python-django-tagging python-simplejson python-memcache python-ldap python-cairo python-psycopg2 python-support python-pip gunicorn supervisor nginx-light nodejs git wget curl openjdk-7-jre build-essential python-dev -y\n#  Install PostgreSQL for Graphite\nRUN locale-gen en_US.UTF-8\nRUN update-locale LANG=en_US.UTF-8\nRUN apt-get update -qq \\\n && DEBIAN_FRONTEND=noninteractive\nRUN apt-get install postgresql-9.3 -y -q\n#  /etc/ssl/private can't be accessed from within container for some reason\n#  (@andrewgodwin says it's something AUFS related)\nRUN mkdir /etc/ssl/private-copy ; mv /etc/ssl/private/* /etc/ssl/private-copy/ ; rm -r /etc/ssl/private ; mv /etc/ssl/private-copy /etc/ssl/private ; chmod -R 0700 /etc/ssl/private ; chown -R postgres /etc/ssl/private\nADD ./postgres/postgresql.conf /etc/postgresql/9.3/main/postgresql.conf\nADD ./postgres/pg_hba.conf /etc/postgresql/9.3/main/pg_hba.conf\nRUN chown postgres:postgres /etc/postgresql/9.3/main/*.conf\nADD ./postgres/run /usr/local/bin/run\nRUN chmod +x /usr/local/bin/run\nVOLUME [\"/var/lib/postgresql\"]\n#  Install Elasticsearch\nRUN cd ~ \\\n && wget https://download.elasticsearch.org/elasticsearch/elasticsearch/elasticsearch-1.3.2.deb\nRUN cd ~ \\\n && dpkg -i elasticsearch-1.3.2.deb \\\n && rm elasticsearch-1.3.2.deb\n#  Install StatsD\nRUN mkdir /src \\\n && git clone https://github.com/etsy/statsd.git /src/statsd \\\n && cd /src/statsd \\\n && git checkout v0.7.1\n#  Install Whisper, Carbon and Graphite-Web\nRUN pip install Twisted==11.1.0\nRUN pip install Django==1.5\nRUN pip install whisper\nRUN pip install carbon --install-option=\"--prefix=/var/lib/graphite\" --install-option=\"--install-lib=/var/lib/graphite/lib\"\nRUN pip install graphite-web --install-option=\"--prefix=/var/lib/graphite\" --install-option=\"--install-lib=/var/lib/graphite/webapp\"\n#  Install Grafana\nRUN mkdir /src/grafana \\\n && cd /src/grafana \\\n && wget http://grafanarel.s3.amazonaws.com/grafana-1.7.0.tar.gz \\\n && tar xzvf grafana-1.7.0.tar.gz --strip-components=1 \\\n && rm grafana-1.7.0.tar.gz\n#  Configure Elasticsearch\nADD ./elasticsearch/run /usr/local/bin/run_elasticsearch\nADD ./elasticsearch/elasticsearch.yml /etc/elasticsearch/elasticsearch.yml\nVOLUME [\"/data\"]\n#  Confiure StatsD\nADD ./statsd/config.js /src/statsd/config.js\n#  Configure Whisper, Carbon and Graphite-Web\nADD ./graphite/initial_data.json /var/lib/graphite/webapp/graphite/initial_data.json\nADD ./graphite/local_settings.py /var/lib/graphite/webapp/graphite/local_settings.py\nADD ./graphite/carbon.conf /var/lib/graphite/conf/carbon.conf\nADD ./graphite/storage-schemas.conf /var/lib/graphite/conf/storage-schemas.conf\nADD ./graphite/storage-aggregation.conf /var/lib/graphite/conf/storage-aggregation.conf\nRUN mkdir -p /var/lib/graphite/storage/whisper\nRUN touch /var/lib/graphite/storage/graphite.db /var/lib/graphite/storage/index\nRUN chown -R www-data /var/lib/graphite/storage\nRUN chmod 0775 /var/lib/graphite/storage /var/lib/graphite/storage/whisper\nRUN chmod 0664 /var/lib/graphite/storage/graphite.db\n#  Configure Grafana\nADD ./grafana/config.js /src/grafana/config.js\nADD ./grafana/dashboard.json /src/grafana/app/dashboards/default.json\nADD ./nginx/nginx.conf /etc/nginx/nginx.conf\nADD ./supervisord.conf /etc/supervisor/conf.d/supervisord.conf\nADD crontab /crontab\n#  Grafana\nEXPOSE 80/tcp\n#  StatsD UDP port\nEXPOSE 8125/udp\n#  StatsD Management port\nEXPOSE 8126/tcp\n#  Carbon listen port\nEXPOSE 2003/tcp\nCMD /etc/init.d/postgresql start \\\n && sudo -u postgres createuser -E -w graphite \\\n && echo \"ALTER USER graphite WITH PASSWORD 'graphite';\" | psql -U postgres \\\n && echo \"CREATE DATABASE graphite OWNER graphite;\" | psql -U postgres \\\n && cd /var/lib/graphite/webapp/graphite \\\n && python manage.py syncdb --noinput \\\n && /etc/init.d/postgresql stop \\\n && cat /crontab | crontab - \\\n && chown -R elasticsearch:elasticsearch /data \\\n && /etc/init.d/supervisor start\n","injectedSmells":[],"originalDockerfileHash":"fd5a3fea62e8d644008d1a8678415998","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:14.04\nRUN echo 'deb http://us.archive.ubuntu.com/ubuntu/ trusty universe' >> /etc/apt/sources.list\nRUN echo\nRUN apt-get update -y\nRUN apt-get -y upgrade\n#   Install all prerequisites\nRUN apt-get install software-properties-common -y\nRUN add-apt-repository -y ppa:chris-lea/node.js\nRUN apt-get update -y\nRUN apt-get install python-django-tagging python-simplejson python-memcache python-ldap python-cairo python-psycopg2 python-support python-pip gunicorn supervisor nginx-light nodejs git wget curl openjdk-7-jre build-essential python-dev -y\n#   Install PostgreSQL for Graphite\nRUN locale-gen en_US.UTF-8\nRUN update-locale LANG=en_US.UTF-8\nRUN apt-get update -qq \\\n && DEBIAN_FRONTEND=noninteractive\nRUN apt-get install postgresql-9.3 -y -q\n#   /etc/ssl/private can't be accessed from within container for some reason\n#   (@andrewgodwin says it's something AUFS related)\nRUN mkdir /etc/ssl/private-copy ; mv /etc/ssl/private/* /etc/ssl/private-copy/ ; rm -r /etc/ssl/private ; mv /etc/ssl/private-copy /etc/ssl/private ; chmod -R 0700 /etc/ssl/private ; chown -R postgres /etc/ssl/private\nADD ./postgres/postgresql.conf /etc/postgresql/9.3/main/postgresql.conf\nADD ./postgres/pg_hba.conf /etc/postgresql/9.3/main/pg_hba.conf\nRUN chown postgres:postgres /etc/postgresql/9.3/main/*.conf\nADD ./postgres/run /usr/local/bin/run\nRUN chmod +x /usr/local/bin/run\nVOLUME [\"/var/lib/postgresql\"]\n#   Install Elasticsearch\nRUN cd ~ \\\n && wget https://download.elasticsearch.org/elasticsearch/elasticsearch/elasticsearch-1.3.2.deb\nRUN cd ~ \\\n && dpkg -i elasticsearch-1.3.2.deb \\\n && rm elasticsearch-1.3.2.deb\n#   Install StatsD\nRUN mkdir /src \\\n && git clone https://github.com/etsy/statsd.git /src/statsd \\\n && cd /src/statsd \\\n && git checkout v0.7.1\n#   Install Whisper, Carbon and Graphite-Web\nRUN pip install Twisted==11.1.0\nRUN pip install Django==1.5\nRUN pip install whisper\nRUN pip install carbon --install-option=\"--prefix=/var/lib/graphite\" --install-option=\"--install-lib=/var/lib/graphite/lib\"\nRUN pip install graphite-web --install-option=\"--prefix=/var/lib/graphite\" --install-option=\"--install-lib=/var/lib/graphite/webapp\"\n#   Install Grafana\nRUN mkdir /src/grafana \\\n && cd /src/grafana \\\n && wget http://grafanarel.s3.amazonaws.com/grafana-1.7.0.tar.gz \\\n && tar xzvf grafana-1.7.0.tar.gz --strip-components=1 \\\n && rm grafana-1.7.0.tar.gz\n#   Configure Elasticsearch\nADD ./elasticsearch/run /usr/local/bin/run_elasticsearch\nADD ./elasticsearch/elasticsearch.yml /etc/elasticsearch/elasticsearch.yml\nVOLUME [\"/data\"]\n#   Confiure StatsD\nADD ./statsd/config.js /src/statsd/config.js\n#   Configure Whisper, Carbon and Graphite-Web\nADD ./graphite/initial_data.json /var/lib/graphite/webapp/graphite/initial_data.json\nADD ./graphite/local_settings.py /var/lib/graphite/webapp/graphite/local_settings.py\nADD ./graphite/carbon.conf /var/lib/graphite/conf/carbon.conf\nADD ./graphite/storage-schemas.conf /var/lib/graphite/conf/storage-schemas.conf\nADD ./graphite/storage-aggregation.conf /var/lib/graphite/conf/storage-aggregation.conf\nRUN mkdir -p /var/lib/graphite/storage/whisper\nRUN touch /var/lib/graphite/storage/graphite.db /var/lib/graphite/storage/index\nRUN chown -R www-data /var/lib/graphite/storage\nRUN chmod 0775 /var/lib/graphite/storage /var/lib/graphite/storage/whisper\nRUN chmod 0664 /var/lib/graphite/storage/graphite.db\n#   Configure Grafana\nADD ./grafana/config.js /src/grafana/config.js\nADD ./grafana/dashboard.json /src/grafana/app/dashboards/default.json\nADD ./nginx/nginx.conf /etc/nginx/nginx.conf\nADD ./supervisord.conf /etc/supervisor/conf.d/supervisord.conf\nADD crontab /crontab\n#   Grafana\nEXPOSE 80/tcp\n#   StatsD UDP port\nEXPOSE 8125/udp\n#   StatsD Management port\nEXPOSE 8126/tcp\n#   Carbon listen port\nEXPOSE 2003/tcp\nCMD /etc/init.d/postgresql start \\\n && sudo -u postgres createuser -E -w graphite \\\n && echo \"ALTER USER graphite WITH PASSWORD 'graphite';\" | psql -U postgres \\\n && echo \"CREATE DATABASE graphite OWNER graphite;\" | psql -U postgres \\\n && cd /var/lib/graphite/webapp/graphite \\\n && python manage.py syncdb --noinput \\\n && /etc/init.d/postgresql stop \\\n && cat /crontab | crontab - \\\n && chown -R elasticsearch:elasticsearch /data \\\n && /etc/init.d/supervisor start\n","originalDockerfileUglifiedHash":"f3e376df9ed914b1f412d45bc3d8e62d","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/263e2d36009c5c28d0c483dea0aad293b644c7a6.dockerfile"}