{"seed":2727078276,"processedDockerfileHash":"093b402043b8ad6dd3f5e9e0c7ff2c0c","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-npm","pin-package-manager-versions-gem","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Pull base image.\nFROM php:5.5-apache\nCOPY config/php.ini /usr/local/etc/php/\n#   ADD BASHRC CONFIG\nCOPY config/bashrc /root/\nRUN mv /root/bashrc /root/.bashrc\nRUN apt-get clean \\\n && apt-get update \\\n && apt-get install --no-install-recommends ruby-dev rubygems imagemagick graphviz sudo git vim memcached libmemcached-tools php5-memcached php5-dev libpng12-dev libjpeg62-turbo-dev libmcrypt-dev libxml2-dev libxslt1-dev mysql-client php5-mysqlnd zip wget linux-libc-dev libyaml-dev apt-transport-https zlib1g-dev libicu-dev libpq-dev --fix-missing -y\n#   Install PECL packages\nCOPY docker-php-pecl-install /usr/local/bin/\nRUN chmod +x /usr/local/bin/docker-php-pecl-install\nRUN docker-php-pecl-install uploadprogress-1.0.3.1 memcache-3.0.8 yaml-1.2.0 mongo-1.6.12\nCOPY docker-php-ext-install /usr/local/bin/\nRUN chmod +x /usr/local/bin/docker-php-ext-install\nRUN docker-php-ext-configure gd --with-jpeg-dir=/usr/include/ \\\n && docker-php-ext-install gd mbstring mcrypt zip soap mysql pdo_mysql mysqli xsl opcache calendar intl exif pgsql pdo_pgsql ftp\nCOPY core/memcached.conf /etc/memcached.conf\n#   install xdebug and codesniffer\nRUN apt-get install --no-install-recommends php5-xdebug --fix-missing -y ; pecl install xdebug ; echo 'zend_extension = /usr/local/lib/php/extensions/no-debug-non-zts-20121212/xdebug.so' >> /usr/local/etc/php/php.ini; touch /usr/local/etc/php/conf.d/xdebug.ini \\\n && echo xdebug.remote_enable=1 >> /usr/local/etc/php/conf.d/xdebug.ini \\\n && echo xdebug.remote_autostart=0 >> /usr/local/etc/php/conf.d/xdebug.ini \\\n && echo xdebug.remote_connect_back=1 >> /usr/local/etc/php/conf.d/xdebug.ini \\\n && echo xdebug.remote_port=9000 >> /usr/local/etc/php/conf.d/xdebug.ini \\\n && echo xdebug.remote_log=/tmp/php5-xdebug.log >> /usr/local/etc/php/conf.d/xdebug.ini; gem install compass --version 1.0.3 ; curl -sL https://deb.nodesource.com/setup_0.12 | sudo bash - ; DEBIAN_FRONTEND=noninteractive apt-get -yq --no-install-recommends install -y nodejs ; npm update -g npm \\\n && npm install less@4.1.3 -g \\\n && npm install less-plugin-clean-css@1.5.1 -g ; npm install grunt-cli@1.4.3 -g ; npm install gulp@4.0.2 -g ; cd /usr/src \\\n && curl -sS http://getcomposer.org/installer | php ; cd /usr/src \\\n && mv composer.phar /usr/bin/composer ; git clone https://github.com/drush-ops/drush.git /usr/local/src/drush ; cd /usr/local/src/drush \\\n && git checkout 8.0.5 ; ln -s /usr/local/src/drush/drush /usr/bin/drush ; cd /usr/local/src/drush \\\n && composer update \\\n && composer install ; mkdir /var/www/.drush ; cd /var/www/.drush \\\n && wget https://ftp.drupal.org/files/projects/registry_rebuild-7.x-2.3.zip \\\n && unzip registry_rebuild-7.x-2.3.zip ; cd /var/www/.drush \\\n && wget https://ftp.drupal.org/files/projects/site_audit-7.x-1.15.zip \\\n && unzip site_audit-7.x-1.15.zip ; cd /var/www/.drush \\\n && rm *.zip ; chown -R www-data:www-data /var/www ; sudo -u www-data drush cc drush ; composer global require drupal/coder ; ln -s ~/.composer/vendor/bin/phpcs /usr/local/bin ; ln -s ~/.composer/vendor/bin/phpcbf /usr/local/bin ; phpcs --config-set installed_paths ~/.composer/vendor/drupal/coder/coder_sniffer\nRUN rm -rf /var/www/html \\\n && mkdir -p /var/lock/apache2 /var/run/apache2 /var/log/apache2 /var/www/html \\\n && chown -R www-data:www-data /var/lock/apache2 /var/run/apache2 /var/log/apache2 /var/www/html\n#   installation of ssmtp\nRUN DEBIAN_FRONTEND=noninteractive apt-get install --fix-missing -y ssmtp \\\n && rm -r /var/lib/apt/lists/*\nCOPY core/ssmtp.conf /etc/ssmtp/ssmtp.conf\nCOPY core/php-smtp.ini /usr/local/etc/php/conf.d/php-smtp.ini\nCOPY config/apache2.conf /etc/apache2\nRUN chown -R www-data:www-data /var/www\n#   Installation of Opcode cache\nRUN (echo \"opcache.memory_consumption=128\" ;echo \"opcache.interned_strings_buffer=8\" ;echo \"opcache.max_accelerated_files=4000\" ;echo \"opcache.revalidate_freq=5\" ;echo \"opcache.fast_shutdown=1\" ;echo \"opcache.enable_cli=1\" ) > /usr/local/etc/php/conf.d/opcache-recommended.ini\nRUN a2enmod rewrite expires \\\n && service apache2 restart\n#   install phing\nRUN pear channel-discover pear.phing.info \\\n && pear install [--alldeps] phing/phing\n#   install phpcpd\nRUN wget https://phar.phpunit.de/phpcpd.phar \\\n && chmod +x phpcpd.phar \\\n && mv phpcpd.phar /usr/local/bin/phpcpd\n#   install phpmetrics\nRUN wget https://github.com/phpmetrics/PhpMetrics/raw/master/build/phpmetrics.phar \\\n && chmod +x phpmetrics.phar \\\n && mv phpmetrics.phar /usr/local/bin/phpmetrics\n#   Install Drupal Console for Drupal 8\nRUN curl https://drupalconsole.com/installer -L -o drupal.phar \\\n && mv drupal.phar /usr/local/bin/drupal \\\n && chmod +x /usr/local/bin/drupal\n#   Our apache volume\nVOLUME /var/www/html\n#   create directory for ssh keys\nRUN mkdir /var/www/.ssh/\nRUN chown -R www-data:www-data /var/www/\nRUN chmod -R 600 /var/www/.ssh/\n#   Set timezone to Europe/Paris\nRUN echo \"Europe/Paris\" > /etc/timezone \\\n && dpkg-reconfigure -f noninteractive tzdata\n#   Expose 80 for apache, 9000 for xdebug\nEXPOSE 80/tcp 9000/tcp\n#   Set a custom entrypoint.\nCOPY core/docker-entrypoint.sh /\nRUN chmod +x /docker-entrypoint.sh\nENTRYPOINT [\"/docker-entrypoint.sh\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\nHEALTHCHECK CMD curl --fail http://127.0.0.1:80 || exit 1\n","originalDockerfile":"#  Pull base image.\nFROM php:5.5-apache\nCOPY config/php.ini /usr/local/etc/php/\n#  ADD BASHRC CONFIG\nCOPY config/bashrc /root/\nRUN mv /root/bashrc /root/.bashrc\nRUN apt-get clean \\\n && apt-get update \\\n && apt-get install ruby-dev rubygems imagemagick graphviz sudo git vim memcached libmemcached-tools php5-memcached php5-dev libpng12-dev libjpeg62-turbo-dev libmcrypt-dev libxml2-dev libxslt1-dev mysql-client php5-mysqlnd zip wget linux-libc-dev libyaml-dev apt-transport-https zlib1g-dev libicu-dev libpq-dev --fix-missing -y\n#  Install PECL packages\nCOPY docker-php-pecl-install /usr/local/bin/\nRUN chmod +x /usr/local/bin/docker-php-pecl-install\nRUN docker-php-pecl-install uploadprogress-1.0.3.1 memcache-3.0.8 yaml-1.2.0 mongo-1.6.12\nCOPY docker-php-ext-install /usr/local/bin/\nRUN chmod +x /usr/local/bin/docker-php-ext-install\nRUN docker-php-ext-configure gd --with-jpeg-dir=/usr/include/ \\\n && docker-php-ext-install gd mbstring mcrypt zip soap mysql pdo_mysql mysqli xsl opcache calendar intl exif pgsql pdo_pgsql ftp\nCOPY core/memcached.conf /etc/memcached.conf\n#  install xdebug and codesniffer\nRUN apt-get install php5-xdebug --fix-missing -y ; pecl install xdebug ; echo 'zend_extension = /usr/local/lib/php/extensions/no-debug-non-zts-20121212/xdebug.so' >> /usr/local/etc/php/php.ini; touch /usr/local/etc/php/conf.d/xdebug.ini \\\n && echo xdebug.remote_enable=1 >> /usr/local/etc/php/conf.d/xdebug.ini \\\n && echo xdebug.remote_autostart=0 >> /usr/local/etc/php/conf.d/xdebug.ini \\\n && echo xdebug.remote_connect_back=1 >> /usr/local/etc/php/conf.d/xdebug.ini \\\n && echo xdebug.remote_port=9000 >> /usr/local/etc/php/conf.d/xdebug.ini \\\n && echo xdebug.remote_log=/tmp/php5-xdebug.log >> /usr/local/etc/php/conf.d/xdebug.ini; gem install compass ; curl -sL https://deb.nodesource.com/setup_0.12 | sudo bash - ; DEBIAN_FRONTEND=noninteractive apt-get -yq --no-install-recommends install -y nodejs ; npm update -g npm \\\n && npm install less -g \\\n && npm install less-plugin-clean-css -g ; npm install grunt-cli -g ; npm install gulp -g ; cd /usr/src \\\n && curl -sS http://getcomposer.org/installer | php ; cd /usr/src \\\n && mv composer.phar /usr/bin/composer ; git clone https://github.com/drush-ops/drush.git /usr/local/src/drush ; cd /usr/local/src/drush \\\n && git checkout 8.0.5 ; ln -s /usr/local/src/drush/drush /usr/bin/drush ; cd /usr/local/src/drush \\\n && composer update \\\n && composer install ; mkdir /var/www/.drush ; cd /var/www/.drush \\\n && wget https://ftp.drupal.org/files/projects/registry_rebuild-7.x-2.3.zip \\\n && unzip registry_rebuild-7.x-2.3.zip ; cd /var/www/.drush \\\n && wget https://ftp.drupal.org/files/projects/site_audit-7.x-1.15.zip \\\n && unzip site_audit-7.x-1.15.zip ; cd /var/www/.drush \\\n && rm *.zip ; chown -R www-data:www-data /var/www ; sudo -u www-data drush cc drush ; composer global require drupal/coder ; ln -s ~/.composer/vendor/bin/phpcs /usr/local/bin ; ln -s ~/.composer/vendor/bin/phpcbf /usr/local/bin ; phpcs --config-set installed_paths ~/.composer/vendor/drupal/coder/coder_sniffer\nRUN rm -rf /var/www/html \\\n && mkdir -p /var/lock/apache2 /var/run/apache2 /var/log/apache2 /var/www/html \\\n && chown -R www-data:www-data /var/lock/apache2 /var/run/apache2 /var/log/apache2 /var/www/html\n#  installation of ssmtp\nRUN DEBIAN_FRONTEND=noninteractive apt-get install --fix-missing -y ssmtp \\\n && rm -r /var/lib/apt/lists/*\nADD core/ssmtp.conf /etc/ssmtp/ssmtp.conf\nADD core/php-smtp.ini /usr/local/etc/php/conf.d/php-smtp.ini\nCOPY config/apache2.conf /etc/apache2\nRUN chown -R www-data:www-data /var/www\n#  Installation of Opcode cache\nRUN (echo \"opcache.memory_consumption=128\" ;echo \"opcache.interned_strings_buffer=8\" ;echo \"opcache.max_accelerated_files=4000\" ;echo \"opcache.revalidate_freq=5\" ;echo \"opcache.fast_shutdown=1\" ;echo \"opcache.enable_cli=1\" ) > /usr/local/etc/php/conf.d/opcache-recommended.ini\nRUN a2enmod rewrite expires \\\n && service apache2 restart\n#  install phing\nRUN pear channel-discover pear.phing.info \\\n && pear install [--alldeps] phing/phing\n#  install phpcpd\nRUN wget https://phar.phpunit.de/phpcpd.phar \\\n && chmod +x phpcpd.phar \\\n && mv phpcpd.phar /usr/local/bin/phpcpd\n#  install phpmetrics\nRUN wget https://github.com/phpmetrics/PhpMetrics/raw/master/build/phpmetrics.phar \\\n && chmod +x phpmetrics.phar \\\n && mv phpmetrics.phar /usr/local/bin/phpmetrics\n#  Install Drupal Console for Drupal 8\nRUN curl https://drupalconsole.com/installer -L -o drupal.phar \\\n && mv drupal.phar /usr/local/bin/drupal \\\n && chmod +x /usr/local/bin/drupal\n#  Our apache volume\nVOLUME /var/www/html\n#  create directory for ssh keys\nRUN mkdir /var/www/.ssh/\nRUN chown -R www-data:www-data /var/www/\nRUN chmod -R 600 /var/www/.ssh/\n#  Set timezone to Europe/Paris\nRUN echo \"Europe/Paris\" > /etc/timezone \\\n && dpkg-reconfigure -f noninteractive tzdata\n#  Expose 80 for apache, 9000 for xdebug\nEXPOSE 80/tcp 9000/tcp\n#  Set a custom entrypoint.\nCOPY core/docker-entrypoint.sh /\nRUN chmod +x /docker-entrypoint.sh\nENTRYPOINT [\"/docker-entrypoint.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"5eba0d8e54ea20f9ec50a12ba28be984","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Pull base image.\nFROM php:5.5-apache\nCOPY config/php.ini /usr/local/etc/php/\n#   ADD BASHRC CONFIG\nCOPY config/bashrc /root/\nRUN mv /root/bashrc /root/.bashrc\nRUN apt-get clean \\\n && apt-get update \\\n && apt-get install ruby-dev rubygems imagemagick graphviz sudo git vim memcached libmemcached-tools php5-memcached php5-dev libpng12-dev libjpeg62-turbo-dev libmcrypt-dev libxml2-dev libxslt1-dev mysql-client php5-mysqlnd zip wget linux-libc-dev libyaml-dev apt-transport-https zlib1g-dev libicu-dev libpq-dev --fix-missing -y\n#   Install PECL packages\nCOPY docker-php-pecl-install /usr/local/bin/\nRUN chmod +x /usr/local/bin/docker-php-pecl-install\nRUN docker-php-pecl-install uploadprogress-1.0.3.1 memcache-3.0.8 yaml-1.2.0 mongo-1.6.12\nCOPY docker-php-ext-install /usr/local/bin/\nRUN chmod +x /usr/local/bin/docker-php-ext-install\nRUN docker-php-ext-configure gd --with-jpeg-dir=/usr/include/ \\\n && docker-php-ext-install gd mbstring mcrypt zip soap mysql pdo_mysql mysqli xsl opcache calendar intl exif pgsql pdo_pgsql ftp\nCOPY core/memcached.conf /etc/memcached.conf\n#   install xdebug and codesniffer\nRUN apt-get install php5-xdebug --fix-missing -y ; pecl install xdebug ; echo 'zend_extension = /usr/local/lib/php/extensions/no-debug-non-zts-20121212/xdebug.so' >> /usr/local/etc/php/php.ini; touch /usr/local/etc/php/conf.d/xdebug.ini \\\n && echo xdebug.remote_enable=1 >> /usr/local/etc/php/conf.d/xdebug.ini \\\n && echo xdebug.remote_autostart=0 >> /usr/local/etc/php/conf.d/xdebug.ini \\\n && echo xdebug.remote_connect_back=1 >> /usr/local/etc/php/conf.d/xdebug.ini \\\n && echo xdebug.remote_port=9000 >> /usr/local/etc/php/conf.d/xdebug.ini \\\n && echo xdebug.remote_log=/tmp/php5-xdebug.log >> /usr/local/etc/php/conf.d/xdebug.ini; gem install compass ; curl -sL https://deb.nodesource.com/setup_0.12 | sudo bash - ; DEBIAN_FRONTEND=noninteractive apt-get -yq --no-install-recommends install -y nodejs ; npm update -g npm \\\n && npm install less -g \\\n && npm install less-plugin-clean-css -g ; npm install grunt-cli -g ; npm install gulp -g ; cd /usr/src \\\n && curl -sS http://getcomposer.org/installer | php ; cd /usr/src \\\n && mv composer.phar /usr/bin/composer ; git clone https://github.com/drush-ops/drush.git /usr/local/src/drush ; cd /usr/local/src/drush \\\n && git checkout 8.0.5 ; ln -s /usr/local/src/drush/drush /usr/bin/drush ; cd /usr/local/src/drush \\\n && composer update \\\n && composer install ; mkdir /var/www/.drush ; cd /var/www/.drush \\\n && wget https://ftp.drupal.org/files/projects/registry_rebuild-7.x-2.3.zip \\\n && unzip registry_rebuild-7.x-2.3.zip ; cd /var/www/.drush \\\n && wget https://ftp.drupal.org/files/projects/site_audit-7.x-1.15.zip \\\n && unzip site_audit-7.x-1.15.zip ; cd /var/www/.drush \\\n && rm *.zip ; chown -R www-data:www-data /var/www ; sudo -u www-data drush cc drush ; composer global require drupal/coder ; ln -s ~/.composer/vendor/bin/phpcs /usr/local/bin ; ln -s ~/.composer/vendor/bin/phpcbf /usr/local/bin ; phpcs --config-set installed_paths ~/.composer/vendor/drupal/coder/coder_sniffer\nRUN rm -rf /var/www/html \\\n && mkdir -p /var/lock/apache2 /var/run/apache2 /var/log/apache2 /var/www/html \\\n && chown -R www-data:www-data /var/lock/apache2 /var/run/apache2 /var/log/apache2 /var/www/html\n#   installation of ssmtp\nRUN DEBIAN_FRONTEND=noninteractive apt-get install --fix-missing -y ssmtp \\\n && rm -r /var/lib/apt/lists/*\nADD core/ssmtp.conf /etc/ssmtp/ssmtp.conf\nADD core/php-smtp.ini /usr/local/etc/php/conf.d/php-smtp.ini\nCOPY config/apache2.conf /etc/apache2\nRUN chown -R www-data:www-data /var/www\n#   Installation of Opcode cache\nRUN (echo \"opcache.memory_consumption=128\" ;echo \"opcache.interned_strings_buffer=8\" ;echo \"opcache.max_accelerated_files=4000\" ;echo \"opcache.revalidate_freq=5\" ;echo \"opcache.fast_shutdown=1\" ;echo \"opcache.enable_cli=1\" ) > /usr/local/etc/php/conf.d/opcache-recommended.ini\nRUN a2enmod rewrite expires \\\n && service apache2 restart\n#   install phing\nRUN pear channel-discover pear.phing.info \\\n && pear install [--alldeps] phing/phing\n#   install phpcpd\nRUN wget https://phar.phpunit.de/phpcpd.phar \\\n && chmod +x phpcpd.phar \\\n && mv phpcpd.phar /usr/local/bin/phpcpd\n#   install phpmetrics\nRUN wget https://github.com/phpmetrics/PhpMetrics/raw/master/build/phpmetrics.phar \\\n && chmod +x phpmetrics.phar \\\n && mv phpmetrics.phar /usr/local/bin/phpmetrics\n#   Install Drupal Console for Drupal 8\nRUN curl https://drupalconsole.com/installer -L -o drupal.phar \\\n && mv drupal.phar /usr/local/bin/drupal \\\n && chmod +x /usr/local/bin/drupal\n#   Our apache volume\nVOLUME /var/www/html\n#   create directory for ssh keys\nRUN mkdir /var/www/.ssh/\nRUN chown -R www-data:www-data /var/www/\nRUN chmod -R 600 /var/www/.ssh/\n#   Set timezone to Europe/Paris\nRUN echo \"Europe/Paris\" > /etc/timezone \\\n && dpkg-reconfigure -f noninteractive tzdata\n#   Expose 80 for apache, 9000 for xdebug\nEXPOSE 80/tcp 9000/tcp\n#   Set a custom entrypoint.\nCOPY core/docker-entrypoint.sh /\nRUN chmod +x /docker-entrypoint.sh\nENTRYPOINT [\"/docker-entrypoint.sh\"]\n","originalDockerfileUglifiedHash":"f42f3d5f5b349cfd006d65940d3743a2","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/a7e8c9b667f4b524a842b3452fb512a43acc663e.dockerfile"}