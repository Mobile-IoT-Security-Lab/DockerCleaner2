{"seed":2414640255,"processedDockerfileHash":"265a14e2c81aa9678b1885f247476487","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM pipelineai/ubuntu-16.04-cpu:1.5.0\nWORKDIR /root\n#   MXNET\nRUN add-apt-repository -y ppa:certbot/certbot \\\n && apt-get update \\\n && apt-get install --no-install-recommends libatlas-base-dev libopencv-dev graphviz protobuf-compiler libprotoc-dev -y \\\n && pip install gevent==22.10.2 gunicorn==20.1.0 mxnet-model-server==1.0.8 \\\n && pip install mxnet-mkl==1.6.0 \\\n && mkdir /root/mxnet_model_server \\\n && rm -rf /var/lib/apt/lists/* \\\n && apt-get clean\nCOPY mxnet/wsgi.py mxnet/setup_mms.py mxnet/mxnet-model-server.sh /root/mxnet_model_server/\n#  COPY mxnet/mms_app_cpu.conf /root/ml/model/\nENV PATH=\"/root/mxnet_model_server:${PATH}\" \\\n    MXNET_MODEL_SERVER_GPU_IMAGE=\"0\"\nCOPY config/prometheus/ config/prometheus/\nENV PROMETHEUS_VERSION=\"2.3.2\"\nRUN wget https://github.com/prometheus/prometheus/releases/download/v$PROMETHEUS_VERSION/prometheus-$PROMETHEUS_VERSION.linux-amd64.tar.gz \\\n && tar xvfz prometheus-$PROMETHEUS_VERSION.linux-amd64.tar.gz \\\n && rm prometheus-$PROMETHEUS_VERSION.linux-amd64.tar.gz\nENV PATH=\"/root/prometheus-$PROMETHEUS_VERSION.linux-amd64/:$PATH\"\nENV GRAFANA_VERSION=\"5.2.2\"\nRUN wget https://s3-us-west-2.amazonaws.com/grafana-releases/release/grafana-$GRAFANA_VERSION.linux-amd64.tar.gz \\\n && tar -zxvf grafana-$GRAFANA_VERSION.linux-amd64.tar.gz \\\n && rm grafana-$GRAFANA_VERSION.linux-amd64.tar.gz\nENV PATH=\"/root/grafana-$GRAFANA_VERSION/bin:$PATH\"\nCOPY config/grafana/ config/grafana/\nRUN cd /root/grafana-$GRAFANA_VERSION/conf \\\n && ln -s /root/config/grafana/grafana.ini \\\n && ln -s /root/config/grafana/dashboards \\\n && ln -s /root/config/grafana/datasources.yaml \\\n && ln -s /root/config/grafana/dashboards.yaml\nRUN mkdir -p /root/logs\nENV LOGS_HOME=\"/root/logs\"\nCOPY sysutils/ sysutils/\nENV CONFLUENT_VERSION=\"5.0.0\" \\\n    CONFLUENT_MAJOR_VERSION=\"5.0\"\nENV CONFLUENT_HOME=\"/root/confluent-${CONFLUENT_VERSION}\"\nENV PATH=\"$CONFLUENT_HOME/bin:$PATH\"\nRUN wget http://packages.confluent.io/archive/${CONFLUENT_MAJOR_VERSION}/confluent-oss-${CONFLUENT_VERSION}-2.11.tar.gz \\\n && tar xvzf confluent-oss-${CONFLUENT_VERSION}-2.11.tar.gz \\\n && rm confluent-oss-${CONFLUENT_VERSION}-2.11.tar.gz\nRUN git clone https://github.com/edenhill/librdkafka.git \\\n && cd librdkafka \\\n && ./configure \\\n && make \\\n && make install\n#  RUN \\\n#    pip install git+https://github.com/wintoncode/winton-kafka-streams.git\nRUN apt-get update \\\n && apt-get install --no-install-recommends nginx -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && apt-get clean\nCOPY config/nginx/ config/nginx/\nRUN mv /etc/nginx/sites-available/default /etc/nginx/sites-available/default.orig \\\n && cd /etc/nginx/sites-available/ \\\n && ln -s /root/config/nginx/default \\\n && cd /etc/nginx/sites-enabled/ \\\n && rm default \\\n && ln -s /etc/nginx/sites-available/default\n#   forward request and error logs to docker log collector\n#  RUN \\\n#    ln -sf /dev/stdout /var/log/nginx/access.log \\\n#    && ln -sf /dev/stderr /var/log/nginx/error.log\nRUN service nginx start\n#   Must run ths or you will see the following error:\n#     ImportError: librdkafka.so.1: cannot open shared object file: No such file or directory\nRUN ldconfig\nENV PIPELINE_RESOURCE_SERVER_PATH=\"/root/src/main/python/model_server\"\nENV PIPELINE_RESOURCE_SERVER_PORT=\"9876\"\nENV PIPELINE_RESOURCE_SERVER_TENSORFLOW_SERVING_PORT=\"9000\"\nENV PIPELINE_RESOURCE_SERVER_TENSORFLOW_SERVING_REQUEST_BATCHING=\"true\"\n#   https://github.com/tensorflow/serving/issues/819\nRUN add-apt-repository ppa:ubuntu-toolchain-r/test -y \\\n && apt-get update \\\n && apt-get install --no-install-recommends libstdc++6 -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && apt-get clean\n#  RUN \\\n#    wget https://s3.amazonaws.com/fluxcapacitor.com/packages/tensorflow_model_server.cpu \\\n#    && mv tensorflow_model_server.cpu /usr/local/bin/tensorflow_model_server \\\n#    && chmod a+x /usr/local/bin/tensorflow_model_server\nRUN echo \"deb [arch=amd64] http://storage.googleapis.com/tensorflow-serving-apt stable tensorflow-model-server tensorflow-model-server-universal\" | tee /etc/apt/sources.list.d/tensorflow-serving.list \\\n && curl https://storage.googleapis.com/tensorflow-serving-apt/tensorflow-serving.release.pub.gpg | apt-key add -\nRUN apt-get update \\\n && apt-get install --no-install-recommends tensorflow-model-server-universal \\\n && rm -rf /var/lib/apt/lists/* \\\n && apt-get clean\nENV PIPELINE_HYSTRIX_DASHBOARD_PORT=\"7979\"\nCOPY dashboard/jetty-0.4.7.RC0.jar dashboard/jetty-0.4.7.RC0.jar\nCOPY dashboard/hystrix-dashboard-0.1.0-dev.0.uncommitted.war dashboard/hystrix-dashboard-0.1.0-dev.0.uncommitted.war\nCOPY html/ html/\nCOPY src/ src/\nRUN cp -R html/* /var/www/html/\nCOPY config/kafka/ config/kafka/\nCOPY jvm/ jvm/\nENV PIPELINE_JVM_MODEL_SERVER_PATH=\"/root/jvm\"\n#  ####################\n#   Setup OpenJDK 1.11\n#  ####################\nRUN apt-get update \\\n && apt-get install --no-install-recommends software-properties-common -y \\\n && add-apt-repository -y ppa:openjdk-r/ppa \\\n && apt-get update \\\n && apt-get install --no-install-recommends openjdk-11-jdk openjdk-11-jre-headless -y \\\n && apt-get install --no-install-recommends apt-transport-https -y \\\n && apt-get install --no-install-recommends wget -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\nENV JAVA_HOME=\"/usr/lib/jvm/java-11-openjdk-amd64/\"\nRUN echo \"deb https://dl.bintray.com/sbt/debian /\" | tee -a /etc/apt/sources.list.d/sbt.list \\\n && apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 2EE0EA64E40A89B84B2DF73499E82A75642AC823 \\\n && apt-get update \\\n && apt-get install --no-install-recommends sbt=1.2.7 -y --allow-unauthenticated \\\n && rm -rf /var/lib/apt/lists/* \\\n && apt-get clean\nRUN cd $PIPELINE_JVM_MODEL_SERVER_PATH \\\n && ./build.sh\n#   Don't forget to update the pipeline cli if these ports change!\nEXPOSE 8080/tcp 9090/tcp 3000/tcp\nCOPY run run\nENTRYPOINT [\"./run\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM pipelineai/ubuntu-16.04-cpu:1.5.0\nWORKDIR /root\n#  MXNET\nRUN add-apt-repository -y ppa:certbot/certbot \\\n && apt-get update \\\n && apt-get install --no-install-recommends libatlas-base-dev libopencv-dev graphviz protobuf-compiler libprotoc-dev -y \\\n && pip install gevent gunicorn mxnet-model-server \\\n && pip install mxnet-mkl \\\n && mkdir /root/mxnet_model_server \\\n && rm -rf /var/lib/apt/lists/* \\\n && apt-get clean\nCOPY mxnet/wsgi.py mxnet/setup_mms.py mxnet/mxnet-model-server.sh /root/mxnet_model_server/\n# COPY mxnet/mms_app_cpu.conf /root/ml/model/\nENV PATH=\"/root/mxnet_model_server:${PATH}\" \\\n    MXNET_MODEL_SERVER_GPU_IMAGE=\"0\"\nCOPY config/prometheus/ config/prometheus/\nENV PROMETHEUS_VERSION=\"2.3.2\"\nRUN wget https://github.com/prometheus/prometheus/releases/download/v$PROMETHEUS_VERSION/prometheus-$PROMETHEUS_VERSION.linux-amd64.tar.gz \\\n && tar xvfz prometheus-$PROMETHEUS_VERSION.linux-amd64.tar.gz \\\n && rm prometheus-$PROMETHEUS_VERSION.linux-amd64.tar.gz\nENV PATH=\"/root/prometheus-$PROMETHEUS_VERSION.linux-amd64/:$PATH\"\nENV GRAFANA_VERSION=\"5.2.2\"\nRUN wget https://s3-us-west-2.amazonaws.com/grafana-releases/release/grafana-$GRAFANA_VERSION.linux-amd64.tar.gz \\\n && tar -zxvf grafana-$GRAFANA_VERSION.linux-amd64.tar.gz \\\n && rm grafana-$GRAFANA_VERSION.linux-amd64.tar.gz\nENV PATH=\"/root/grafana-$GRAFANA_VERSION/bin:$PATH\"\nCOPY config/grafana/ config/grafana/\nRUN cd /root/grafana-$GRAFANA_VERSION/conf \\\n && ln -s /root/config/grafana/grafana.ini \\\n && ln -s /root/config/grafana/dashboards \\\n && ln -s /root/config/grafana/datasources.yaml \\\n && ln -s /root/config/grafana/dashboards.yaml\nRUN mkdir -p /root/logs\nENV LOGS_HOME=\"/root/logs\"\nCOPY sysutils/ sysutils/\nENV CONFLUENT_VERSION=\"5.0.0\" \\\n    CONFLUENT_MAJOR_VERSION=\"5.0\"\nENV CONFLUENT_HOME=\"/root/confluent-${CONFLUENT_VERSION}\"\nENV PATH=\"$CONFLUENT_HOME/bin:$PATH\"\nRUN wget http://packages.confluent.io/archive/${CONFLUENT_MAJOR_VERSION}/confluent-oss-${CONFLUENT_VERSION}-2.11.tar.gz \\\n && tar xvzf confluent-oss-${CONFLUENT_VERSION}-2.11.tar.gz \\\n && rm confluent-oss-${CONFLUENT_VERSION}-2.11.tar.gz\nRUN git clone https://github.com/edenhill/librdkafka.git \\\n && cd librdkafka \\\n && ./configure \\\n && make \\\n && make install\n# RUN \\\n#   pip install git+https://github.com/wintoncode/winton-kafka-streams.git\nRUN apt-get update \\\n && apt-get install --no-install-recommends nginx -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && apt-get clean\nCOPY config/nginx/ config/nginx/\nRUN mv /etc/nginx/sites-available/default /etc/nginx/sites-available/default.orig \\\n && cd /etc/nginx/sites-available/ \\\n && ln -s /root/config/nginx/default \\\n && cd /etc/nginx/sites-enabled/ \\\n && rm default \\\n && ln -s /etc/nginx/sites-available/default\n#  forward request and error logs to docker log collector\n# RUN \\\n#   ln -sf /dev/stdout /var/log/nginx/access.log \\\n#   && ln -sf /dev/stderr /var/log/nginx/error.log\nRUN service nginx start\n#  Must run ths or you will see the following error:\n#    ImportError: librdkafka.so.1: cannot open shared object file: No such file or directory\nRUN ldconfig\nENV PIPELINE_RESOURCE_SERVER_PATH=\"/root/src/main/python/model_server\"\nENV PIPELINE_RESOURCE_SERVER_PORT=\"9876\"\nENV PIPELINE_RESOURCE_SERVER_TENSORFLOW_SERVING_PORT=\"9000\"\nENV PIPELINE_RESOURCE_SERVER_TENSORFLOW_SERVING_REQUEST_BATCHING=\"true\"\n#  https://github.com/tensorflow/serving/issues/819\nRUN add-apt-repository ppa:ubuntu-toolchain-r/test -y \\\n && apt-get update \\\n && apt-get install --no-install-recommends libstdc++6 -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && apt-get clean\n# RUN \\\n#   wget https://s3.amazonaws.com/fluxcapacitor.com/packages/tensorflow_model_server.cpu \\\n#   && mv tensorflow_model_server.cpu /usr/local/bin/tensorflow_model_server \\\n#   && chmod a+x /usr/local/bin/tensorflow_model_server\nRUN echo \"deb [arch=amd64] http://storage.googleapis.com/tensorflow-serving-apt stable tensorflow-model-server tensorflow-model-server-universal\" | tee /etc/apt/sources.list.d/tensorflow-serving.list \\\n && curl https://storage.googleapis.com/tensorflow-serving-apt/tensorflow-serving.release.pub.gpg | apt-key add -\nRUN apt-get update \\\n && apt-get install --no-install-recommends tensorflow-model-server-universal \\\n && rm -rf /var/lib/apt/lists/* \\\n && apt-get clean\nENV PIPELINE_HYSTRIX_DASHBOARD_PORT=\"7979\"\nCOPY dashboard/jetty-0.4.7.RC0.jar dashboard/jetty-0.4.7.RC0.jar\nCOPY dashboard/hystrix-dashboard-0.1.0-dev.0.uncommitted.war dashboard/hystrix-dashboard-0.1.0-dev.0.uncommitted.war\nCOPY html/ html/\nCOPY src/ src/\nRUN cp -R html/* /var/www/html/\nCOPY config/kafka/ config/kafka/\nCOPY jvm/ jvm/\nENV PIPELINE_JVM_MODEL_SERVER_PATH=\"/root/jvm\"\n# ####################\n#  Setup OpenJDK 1.11\n# ####################\nRUN apt-get update \\\n && apt-get install software-properties-common -y \\\n && add-apt-repository -y ppa:openjdk-r/ppa \\\n && apt-get update \\\n && apt-get install --no-install-recommends openjdk-11-jdk openjdk-11-jre-headless -y \\\n && apt-get install apt-transport-https -y \\\n && apt-get install wget -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\nENV JAVA_HOME=\"/usr/lib/jvm/java-11-openjdk-amd64/\"\nRUN echo \"deb https://dl.bintray.com/sbt/debian /\" | tee -a /etc/apt/sources.list.d/sbt.list \\\n && apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 2EE0EA64E40A89B84B2DF73499E82A75642AC823 \\\n && apt-get update \\\n && apt-get install --no-install-recommends sbt=1.2.7 -y --allow-unauthenticated \\\n && rm -rf /var/lib/apt/lists/* \\\n && apt-get clean\nRUN cd $PIPELINE_JVM_MODEL_SERVER_PATH \\\n && ./build.sh\n#  Don't forget to update the pipeline cli if these ports change!\nEXPOSE 8080/tcp 9090/tcp 3000/tcp\nCOPY run run\nENTRYPOINT [\"./run\"]\n","injectedSmells":[],"originalDockerfileHash":"4e4225a4daa6ba5480c536dc8fec7c7f","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM pipelineai/ubuntu-16.04-cpu:1.5.0\nWORKDIR /root\n#   MXNET\nRUN add-apt-repository -y ppa:certbot/certbot \\\n && apt-get update \\\n && apt-get install --no-install-recommends libatlas-base-dev libopencv-dev graphviz protobuf-compiler libprotoc-dev -y \\\n && pip install gevent gunicorn mxnet-model-server \\\n && pip install mxnet-mkl \\\n && mkdir /root/mxnet_model_server \\\n && rm -rf /var/lib/apt/lists/* \\\n && apt-get clean\nCOPY mxnet/wsgi.py mxnet/setup_mms.py mxnet/mxnet-model-server.sh /root/mxnet_model_server/\n#  COPY mxnet/mms_app_cpu.conf /root/ml/model/\nENV PATH=\"/root/mxnet_model_server:${PATH}\" \\\n    MXNET_MODEL_SERVER_GPU_IMAGE=\"0\"\nCOPY config/prometheus/ config/prometheus/\nENV PROMETHEUS_VERSION=\"2.3.2\"\nRUN wget https://github.com/prometheus/prometheus/releases/download/v$PROMETHEUS_VERSION/prometheus-$PROMETHEUS_VERSION.linux-amd64.tar.gz \\\n && tar xvfz prometheus-$PROMETHEUS_VERSION.linux-amd64.tar.gz \\\n && rm prometheus-$PROMETHEUS_VERSION.linux-amd64.tar.gz\nENV PATH=\"/root/prometheus-$PROMETHEUS_VERSION.linux-amd64/:$PATH\"\nENV GRAFANA_VERSION=\"5.2.2\"\nRUN wget https://s3-us-west-2.amazonaws.com/grafana-releases/release/grafana-$GRAFANA_VERSION.linux-amd64.tar.gz \\\n && tar -zxvf grafana-$GRAFANA_VERSION.linux-amd64.tar.gz \\\n && rm grafana-$GRAFANA_VERSION.linux-amd64.tar.gz\nENV PATH=\"/root/grafana-$GRAFANA_VERSION/bin:$PATH\"\nCOPY config/grafana/ config/grafana/\nRUN cd /root/grafana-$GRAFANA_VERSION/conf \\\n && ln -s /root/config/grafana/grafana.ini \\\n && ln -s /root/config/grafana/dashboards \\\n && ln -s /root/config/grafana/datasources.yaml \\\n && ln -s /root/config/grafana/dashboards.yaml\nRUN mkdir -p /root/logs\nENV LOGS_HOME=\"/root/logs\"\nCOPY sysutils/ sysutils/\nENV CONFLUENT_VERSION=\"5.0.0\" \\\n    CONFLUENT_MAJOR_VERSION=\"5.0\"\nENV CONFLUENT_HOME=\"/root/confluent-${CONFLUENT_VERSION}\"\nENV PATH=\"$CONFLUENT_HOME/bin:$PATH\"\nRUN wget http://packages.confluent.io/archive/${CONFLUENT_MAJOR_VERSION}/confluent-oss-${CONFLUENT_VERSION}-2.11.tar.gz \\\n && tar xvzf confluent-oss-${CONFLUENT_VERSION}-2.11.tar.gz \\\n && rm confluent-oss-${CONFLUENT_VERSION}-2.11.tar.gz\nRUN git clone https://github.com/edenhill/librdkafka.git \\\n && cd librdkafka \\\n && ./configure \\\n && make \\\n && make install\n#  RUN \\\n#    pip install git+https://github.com/wintoncode/winton-kafka-streams.git\nRUN apt-get update \\\n && apt-get install --no-install-recommends nginx -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && apt-get clean\nCOPY config/nginx/ config/nginx/\nRUN mv /etc/nginx/sites-available/default /etc/nginx/sites-available/default.orig \\\n && cd /etc/nginx/sites-available/ \\\n && ln -s /root/config/nginx/default \\\n && cd /etc/nginx/sites-enabled/ \\\n && rm default \\\n && ln -s /etc/nginx/sites-available/default\n#   forward request and error logs to docker log collector\n#  RUN \\\n#    ln -sf /dev/stdout /var/log/nginx/access.log \\\n#    && ln -sf /dev/stderr /var/log/nginx/error.log\nRUN service nginx start\n#   Must run ths or you will see the following error:\n#     ImportError: librdkafka.so.1: cannot open shared object file: No such file or directory\nRUN ldconfig\nENV PIPELINE_RESOURCE_SERVER_PATH=\"/root/src/main/python/model_server\"\nENV PIPELINE_RESOURCE_SERVER_PORT=\"9876\"\nENV PIPELINE_RESOURCE_SERVER_TENSORFLOW_SERVING_PORT=\"9000\"\nENV PIPELINE_RESOURCE_SERVER_TENSORFLOW_SERVING_REQUEST_BATCHING=\"true\"\n#   https://github.com/tensorflow/serving/issues/819\nRUN add-apt-repository ppa:ubuntu-toolchain-r/test -y \\\n && apt-get update \\\n && apt-get install --no-install-recommends libstdc++6 -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && apt-get clean\n#  RUN \\\n#    wget https://s3.amazonaws.com/fluxcapacitor.com/packages/tensorflow_model_server.cpu \\\n#    && mv tensorflow_model_server.cpu /usr/local/bin/tensorflow_model_server \\\n#    && chmod a+x /usr/local/bin/tensorflow_model_server\nRUN echo \"deb [arch=amd64] http://storage.googleapis.com/tensorflow-serving-apt stable tensorflow-model-server tensorflow-model-server-universal\" | tee /etc/apt/sources.list.d/tensorflow-serving.list \\\n && curl https://storage.googleapis.com/tensorflow-serving-apt/tensorflow-serving.release.pub.gpg | apt-key add -\nRUN apt-get update \\\n && apt-get install --no-install-recommends tensorflow-model-server-universal \\\n && rm -rf /var/lib/apt/lists/* \\\n && apt-get clean\nENV PIPELINE_HYSTRIX_DASHBOARD_PORT=\"7979\"\nCOPY dashboard/jetty-0.4.7.RC0.jar dashboard/jetty-0.4.7.RC0.jar\nCOPY dashboard/hystrix-dashboard-0.1.0-dev.0.uncommitted.war dashboard/hystrix-dashboard-0.1.0-dev.0.uncommitted.war\nCOPY html/ html/\nCOPY src/ src/\nRUN cp -R html/* /var/www/html/\nCOPY config/kafka/ config/kafka/\nCOPY jvm/ jvm/\nENV PIPELINE_JVM_MODEL_SERVER_PATH=\"/root/jvm\"\n#  ####################\n#   Setup OpenJDK 1.11\n#  ####################\nRUN apt-get update \\\n && apt-get install software-properties-common -y \\\n && add-apt-repository -y ppa:openjdk-r/ppa \\\n && apt-get update \\\n && apt-get install --no-install-recommends openjdk-11-jdk openjdk-11-jre-headless -y \\\n && apt-get install apt-transport-https -y \\\n && apt-get install wget -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\nENV JAVA_HOME=\"/usr/lib/jvm/java-11-openjdk-amd64/\"\nRUN echo \"deb https://dl.bintray.com/sbt/debian /\" | tee -a /etc/apt/sources.list.d/sbt.list \\\n && apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 2EE0EA64E40A89B84B2DF73499E82A75642AC823 \\\n && apt-get update \\\n && apt-get install --no-install-recommends sbt=1.2.7 -y --allow-unauthenticated \\\n && rm -rf /var/lib/apt/lists/* \\\n && apt-get clean\nRUN cd $PIPELINE_JVM_MODEL_SERVER_PATH \\\n && ./build.sh\n#   Don't forget to update the pipeline cli if these ports change!\nEXPOSE 8080/tcp 9090/tcp 3000/tcp\nCOPY run run\nENTRYPOINT [\"./run\"]\n","originalDockerfileUglifiedHash":"2df7ab2d02ff8ec3b0c112778a66632b","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/4225f894b8c4bb89f9ac1251bef2b14c176164f7.dockerfile"}