{"seed":2536344941,"processedDockerfileHash":"1af861a4bf80d5736e5c3901a7533277","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Â© Copyright IBM Corporation 2017, 2019.\n#   LICENSE: Apache License, Version 2.0 (http://www.apache.org/licenses/LICENSE-2.0)\n#  #################### Dockerfile for Couchbase version 5.1.0 ###################################################\n#\n#   This Dockerfile builds a basic installation of Couchbase.\n#\n#   To build this image, from the directory containing this Dockerfile\n#   (assuming that the file is named Dockerfile):\n#   docker build -t <image_name> .\n#\n#   To start Couchbase server using this image, use following command:\n#   docker run --name <container name> -p <port>:8091-8094 -p <port>:11210 -d <image name>\n#\n#   Then you can access the Couchbase Web console using http://<host-ip>:<port_exported_8091>\n#\n#  #################################################################################################################\n#   Base Image\nFROM s390x/ubuntu:16.04\n#   The author\nMAINTAINER LoZ Open Source Ecosystem (https://www.ibm.com/developerworks/community/groups/community/lozopensource)\nENV SOURCE_DIR=\"/opt\"\nWORKDIR $SOURCE_DIR\nENV JAVA_HOME=\"/opt/ibm/java\"\nENV PATH=\"$JAVA_HOME/bin:$PATH\"\nENV PATH=\"$PATH:/usr/lib/go-1.9/bin\"\nENV CB_MULTI_GO=\"0\"\nENV PATH=\"$SOURCE_DIR/couchbase/install/bin:$PATH\"\nENV GOPATH=\"$HOME/go\"\n#   Install the Dependencies\nRUN apt-get update -y \\\n && apt-get install --no-install-recommends autoconf automake check cmake curl flex gcc-4.8 git g++-4.8 libcurl4-openssl-dev libevent-dev libglib2.0-dev libncurses5-dev libsnappy-dev libssl-dev libtool libxml2-utils make openssl pkg-config python python-dev ruby sqlite3 subversion tar unixodbc unixodbc-dev vim wget xsltproc golang-1.9 xinetd -y \\\n && export PATH=/usr/lib/go-1.9/bin:$PATH \\\n && go version \\\n && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.8 40 \\\n && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-4.8 40 \\\n && wget http://public.dhe.ibm.com/ibmdl/export/pub/systems/cloud/runtimes/java/8.0.5.36/linux/s390x/ibm-java-sdk-8.0-5.36-s390x-archive.bin \\\n && wget https://raw.githubusercontent.com/zos-spark/scala-workbench/master/files/installer.properties.java \\\n && tail -n +3 installer.properties.java | tee installer.properties \\\n && chmod +x ibm-java-sdk-8.0-5.36-s390x-archive.bin \\\n && ./ibm-java-sdk-8.0-5.36-s390x-archive.bin -r installer.properties \\\n && java -version \\\n && cd $SOURCE_DIR \\\n && git clone https://github.com/nlohmann/json \\\n && cd json \\\n && export PATH=$PATH:`pwd ` \\\n && cd $SOURCE_DIR \\\n && wget https://dl.bintray.com/boostorg/release/1.66.0/source/boost_1_66_0.tar.gz \\\n && tar -xvzf boost_1_66_0.tar.gz \\\n && ln -s $SOURCE_DIR/boost_1_66_0/boost /usr/include/boost \\\n && cd $SOURCE_DIR \\\n && git clone https://github.com/couchbasedeps/erlang.git \\\n && cd erlang \\\n && git checkout couchbase-watson \\\n && ./otp_build autoconf \\\n && touch lib/debugger/SKIP lib/megaco/SKIP lib/observer/SKIP lib/wx/SKIP \\\n && ./configure --prefix=/usr/local --enable-smp-support --disable-hipe --disable-fp-exceptions CFLAGS=\"-fno-strict-aliasing -O3 -ggdb3 -DOPENSSL_NO_EC=1\" \\\n && make -j$( cat /proc/cpuinfo | grep processor | wc -l ;) \\\n && make install \\\n && cd $SOURCE_DIR \\\n && rm -rf flatbuffers \\\n && git clone https://github.com/google/flatbuffers \\\n && cd flatbuffers \\\n && git checkout v1.5.0 \\\n && cp include/flatbuffers/flatbuffers.h include/flatbuffers/flatbuffers.h_org \\\n && sed -i '72 i #define FLATBUFFERS_LITTLEENDIAN 0' include/flatbuffers/flatbuffers.h \\\n && cmake -G \"Unix Makefiles\" \\\n && make \\\n && make install \\\n && export PATH=$PATH:`pwd ` \\\n && cd $SOURCE_DIR \\\n && git clone https://github.com/couchbasedeps/icu4c.git \\\n && cd icu4c/source \\\n && git checkout r54.1 \\\n && ./configure --prefix=/usr/local --disable-extras --disable-layout --disable-tests --disable-samples \\\n && make \\\n && make install \\\n && cd $SOURCE_DIR \\\n && git clone https://github.com/couchbasedeps/jemalloc.git \\\n && cd jemalloc \\\n && git checkout 4.3.1 \\\n && autoconf configure.ac > configure \\\n && chmod u+x configure \\\n && CPPFLAGS=-I/usr/local/include ./configure --prefix=/usr/local --with-jemalloc-prefix=je_ --disable-cache-oblivious --disable-zone-allocator \\\n && make build_lib_shared \\\n && make install_lib_shared install_include \\\n && cd $SOURCE_DIR \\\n && git clone https://github.com/couchbasedeps/v8.git \\\n && cd v8 \\\n && git checkout 5.2-couchbase \\\n && sed -i '180d' test/cctest/interpreter/generate-bytecode-expectations.cc \\\n && sed -i '178d' test/cctest/interpreter/generate-bytecode-expectations.cc \\\n && sed -i '177d' test/cctest/interpreter/generate-bytecode-expectations.cc \\\n && sed -i '177 i \\ dirent* entry = readdir(directory);' test/cctest/interpreter/generate-bytecode-expectations.cc \\\n && sed -i '179 i \\ while (entry) {' test/cctest/interpreter/generate-bytecode-expectations.cc \\\n && sed -i '185 i \\ entry = readdir(directory);' test/cctest/interpreter/generate-bytecode-expectations.cc \\\n && make -j$( cat /proc/cpuinfo | grep processor | wc -l ;) s390x.release GYPFLAGS+=\"-Dcomponent=shared_library -Dv8_enable_backtrace=1 -Dv8_use_snapshot='true' -Dclang=0 -Dv8_use_external_startup_data=0 -Dv8_enable_i18n_support=0 -Dtest_isolation_mode=noop\" PYTHONPATH=`pwd `/third_party/argparse-1.4.0 \\\n && cp -vR include/* /usr/local/include/ \\\n && cp -v out/s390x.release/lib.target/libv8.so /usr/local/lib/ \\\n && cd $SOURCE_DIR \\\n && curl https://storage.googleapis.com/git-repo-downloads/repo > repo \\\n && chmod a+x repo \\\n && mkdir -p $SOURCE_DIR/couchbase \\\n && cd $SOURCE_DIR/couchbase \\\n && git config --global user.email test@github.com \\\n && git config --global user.name test \\\n && ../repo init -u git://github.com/couchbase/manifest -m released/5.1.0.xml \\\n && ../repo sync \\\n && cp tlm/CMakeLists.txt tlm/CMakeLists.txt.orig \\\n && sed -i '72d ' tlm/CMakeLists.txt \\\n && sed -i '72 i SET(CB_DOWNLOAD_DEPS False' tlm/CMakeLists.txt \\\n && sed -i '113d ' tlm/CMakeLists.txt \\\n && cp forestdb/src/arch.h forestdb/src/arch.h.orig \\\n && sed -i '319 i \\ #if defined(__s390x__)\\n\\t\\t#undef SPIN_INITIALIZER\\n\\t\\t#define SPIN_INITIALIZER (spin_t)(0)\\n\\t#endif ' forestdb/src/arch.h \\\n && cp couchstore/src/views/bin/couch_view_file_merger.cc couchstore/src/views/bin/couch_view_file_merger.cc.orig \\\n && sed -i '40s/.*/};typedef unsigned char merge_file_type_t;/' couchstore/src/views/bin/couch_view_file_merger.cc \\\n && cp forestdb/utils/debug.cc forestdb/utils/debug.cc.orig \\\n && sed -i '92 i #elif __s390x__ \\n\\t unsigned char *pc = (unsigned char *)u->uc_mcontext.psw.addr;' forestdb/utils/debug.cc \\\n && cp platform/CMakeLists.txt platform/CMakeLists.txt.orig \\\n && sed -i '168d ' platform/CMakeLists.txt \\\n && cp platform/include/platform/crc32c.h platform/include/platform/crc32c.h.orig \\\n && sed -i '42d' platform/include/platform/crc32c.h \\\n && sed -i '42 i #if !defined(__x86_64__) \\\n && !defined(_M_X64) \\\n && !defined(_M_IX86) \\\n && !defined(__s390x__)\\n' platform/include/platform/crc32c.h \\\n && cd $SOURCE_DIR/couchbase \\\n && cp platform/src/crc32c.cc platform/src/crc32c.cc.orig \\\n && sed -i '54 i #include <crc32-s390x.h>' platform/src/crc32c.cc \\\n && sed -i ' 64d ' platform/src/crc32c.cc \\\n && sed -i '64 i #elif defined(__clang__) || defined(__GNUC__) \\\n && !defined(__s390x__)' platform/src/crc32c.cc \\\n && sed -i ' 372d ' platform/src/crc32c.cc \\\n && sed -i '372 i //const uint32_t SSE42 = 0x00100000;' platform/src/crc32c.cc \\\n && sed -i '375 i /*' platform/src/crc32c.cc \\\n && sed -i '389 i */' platform/src/crc32c.cc \\\n && cd $SOURCE_DIR/couchbase \\\n && cp platform/tests/CMakeLists.txt platform/tests/CMakeLists.txt.orig \\\n && sed -i '10d ' platform/tests/CMakeLists.txt \\\n && cd $SOURCE_DIR/couchbase \\\n && cp goproj/src/github.com/couchbase/indexing/secondary/memdb/skiplist/skiplist.go goproj/src/github.com/couchbase/indexing/secondary/memdb/skiplist/skiplist.go.orig \\\n && sed -i '77,82 d ' goproj/src/github.com/couchbase/indexing/secondary/memdb/skiplist/skiplist.go \\\n && sed -i '77 i \\ s.freeNode = func(*Node) {} ' goproj/src/github.com/couchbase/indexing/secondary/memdb/skiplist/skiplist.go \\\n && cp kv_engine/daemon/subdocument_validators.cc kv_engine/daemon/subdocument_validators.cc.orig \\\n && sed -i ' 427d ' kv_engine/daemon/subdocument_validators.cc.orig \\\n && sed -i '427 i \\ (htonl(__bswap_32(req->request.bodylen)) < minimum_body_len) ||' kv_engine/daemon/subdocument_validators.cc \\\n && cp benchmark/src/cycleclock.h benchmark/src/cycleclock.h.orig \\\n && sed -i '85 i #elif defined(__s390x__)\\n\\ uint64_t res;\\n __asm__ volatile(\"stck %0\" : \"=m\"(res));\\n return res;' benchmark/src/cycleclock.h \\\n && cp platform/include/platform/cacheline_padded.h platform/include/platform/cacheline_padded.h.orig \\\n && sed -i '23d' platform/include/platform/cacheline_padded.h \\\n && sed -i '23 i #define FALSE_SHARING_RANGE 64' platform/include/platform/cacheline_padded.h \\\n && cp kv_engine/engines/ep/src/ep_engine.cc kv_engine/engines/ep/src/ep_engine.cc.orig \\\n && sed -i '3678d' kv_engine/engines/ep/src/ep_engine.cc \\\n && sed -i '3678 i \\ uint8_t keystatus = 0;' kv_engine/engines/ep/src/ep_engine.cc \\\n && cp kv_engine/engines/ep/tests/ep_testsuite_xdcr.cc kv_engine/engines/ep/tests/ep_testsuite_xdcr.cc.orig \\\n && sed -i '2362d' kv_engine/engines/ep/tests/ep_testsuite_xdcr.cc \\\n && sed -i '2362 i \\ std::vector<char> junkMeta = {char(-2),char(-1),2,3};' kv_engine/engines/ep/tests/ep_testsuite_xdcr.cc \\\n && cp tlm/cmake/Modules/FindCouchbaseLibevent.cmake tlm/cmake/Modules/FindCouchbaseLibevent.cmake.orig \\\n && sed -i '47 i set(LIBEVENT_INCLUDE_DIR /usr/include)\\nset(LIBEVENT_EXTRA_LIB /usr/lib/s390x-linux-gnu/libevent_extra.so)\\nset(LIBEVENT_CORE_LIB /usr/lib/s390x-linux-gnu/libevent_core.so)\\nset(LIBEVENT_THREAD_LIB /usr/lib/s390x-linux-gnu/libevent_pthreads.so)' tlm/cmake/Modules/FindCouchbaseLibevent.cmake \\\n && cd ./godeps/src/github.com/ \\\n && mv boltdb boltdb_ORIG \\\n && mkdir boltdb \\\n && cd boltdb \\\n && git clone https://github.com/boltdb/bolt.git \\\n && cd bolt/ \\\n && git checkout v1.3.0 \\\n && cd $SOURCE_DIR \\\n && git clone https://github.com/linux-on-ibm-z/crc32-s390x \\\n && cd crc32-s390x \\\n && export CC=/usr/bin/gcc-5 \\\n && make \\\n && cp crc32-s390x.h /usr/local/include/ \\\n && cp libcrc32_s390x.a /usr/local/lib/ \\\n && cd $SOURCE_DIR \\\n && export GOPATH=$HOME/go \\\n && go get -u golang.org/x/tools/cmd/goyacc \\\n && cp $HOME/go/bin/goyacc /usr/lib/go-1.9/pkg/tool/linux_s390x/ \\\n && chown root:root /usr/lib/go-1.9/pkg/tool/linux_s390x/goyacc \\\n && chmod -f 755 /usr/lib/go-1.9/pkg/tool/linux_s390x/goyacc \\\n && ln -sf /usr/lib/go-1.9/pkg/tool/linux_s390x/goyacc /usr/lib/go-1.9/pkg/tool/linux_s390x/yacc \\\n && cd $SOURCE_DIR/couchbase/ \\\n && make \\\n && mkdir -p /tmp/temp \\\n && mv $SOURCE_DIR/couchbase/install/* /tmp/temp/ \\\n && rm -rf $SOURCE_DIR/* \\\n && mkdir -p $SOURCE_DIR/couchbase/install/ \\\n && mv /tmp/temp/* $SOURCE_DIR/couchbase/install/ \\\n && apt-get remove -y autoconf automake check cmake curl flex gcc-5 git g++-5 libcurl4-openssl-dev libevent-dev libglib2.0-dev libmozjs-24-dev libncurses5-dev libtool libxml2-utils make openssl pkg-config python python-dev ruby sqlite3 subversion unixodbc unixodbc-dev vim wget xsltproc \\\n && apt-get autoremove -y \\\n && apt-get autoremove -y \\\n && apt-get clean \\\n && rm -rf $HOME/*\n#   8091: Couchbase Web console, REST/HTTP interface\n#   8092: Views, queries, XDCR\n#   8093: Query services (4.0+)\n#   8094: Full-text Search (4.5+)\n#   11207: Smart client library data node access (SSL)\n#   11210: Smart client library/moxi data node access\n#   11211: Legacy non-smart client library data node access\n#   18091: Couchbase Web console, REST/HTTP interface (SSL)\n#   18092: Views, query, XDCR (SSL)\n#   18093: Query services (SSL) (4.0+)\nEXPOSE 8091/tcp 8092/tcp 8093/tcp 8094/tcp 11207/tcp 11210/tcp 11211/tcp 18091/tcp 18092/tcp 18093/tcp\nVOLUME $SOURCE_DIR/couchbase/install/var\nCMD [\"couchbase-server\", \"--\", \"-kernel\", \"global_enable_tracing\", \"false\", \"-noinput\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Â© Copyright IBM Corporation 2017, 2019.\n#  LICENSE: Apache License, Version 2.0 (http://www.apache.org/licenses/LICENSE-2.0)\n# #################### Dockerfile for Couchbase version 5.1.0 ###################################################\n#\n#  This Dockerfile builds a basic installation of Couchbase.\n#\n#  To build this image, from the directory containing this Dockerfile\n#  (assuming that the file is named Dockerfile):\n#  docker build -t <image_name> .\n#\n#  To start Couchbase server using this image, use following command:\n#  docker run --name <container name> -p <port>:8091-8094 -p <port>:11210 -d <image name>\n#\n#  Then you can access the Couchbase Web console using http://<host-ip>:<port_exported_8091>\n#\n# #################################################################################################################\n#  Base Image\nFROM s390x/ubuntu:16.04\n#  The author\nMAINTAINER LoZ Open Source Ecosystem (https://www.ibm.com/developerworks/community/groups/community/lozopensource)\nENV SOURCE_DIR=\"/opt\"\nWORKDIR $SOURCE_DIR\nENV JAVA_HOME=\"/opt/ibm/java\"\nENV PATH=\"$JAVA_HOME/bin:$PATH\"\nENV PATH=\"$PATH:/usr/lib/go-1.9/bin\"\nENV CB_MULTI_GO=\"0\"\nENV PATH=\"$SOURCE_DIR/couchbase/install/bin:$PATH\"\nENV GOPATH=\"$HOME/go\"\n#  Install the Dependencies\nRUN apt-get update -y \\\n && apt-get install autoconf automake check cmake curl flex gcc-4.8 git g++-4.8 libcurl4-openssl-dev libevent-dev libglib2.0-dev libncurses5-dev libsnappy-dev libssl-dev libtool libxml2-utils make openssl pkg-config python python-dev ruby sqlite3 subversion tar unixodbc unixodbc-dev vim wget xsltproc golang-1.9 xinetd -y \\\n && export PATH=/usr/lib/go-1.9/bin:$PATH \\\n && go version \\\n && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.8 40 \\\n && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-4.8 40 \\\n && wget http://public.dhe.ibm.com/ibmdl/export/pub/systems/cloud/runtimes/java/8.0.5.36/linux/s390x/ibm-java-sdk-8.0-5.36-s390x-archive.bin \\\n && wget https://raw.githubusercontent.com/zos-spark/scala-workbench/master/files/installer.properties.java \\\n && tail -n +3 installer.properties.java | tee installer.properties \\\n && chmod +x ibm-java-sdk-8.0-5.36-s390x-archive.bin \\\n && ./ibm-java-sdk-8.0-5.36-s390x-archive.bin -r installer.properties \\\n && java -version \\\n && cd $SOURCE_DIR \\\n && git clone https://github.com/nlohmann/json \\\n && cd json \\\n && export PATH=$PATH:`pwd ` \\\n && cd $SOURCE_DIR \\\n && wget https://dl.bintray.com/boostorg/release/1.66.0/source/boost_1_66_0.tar.gz \\\n && tar -xvzf boost_1_66_0.tar.gz \\\n && ln -s $SOURCE_DIR/boost_1_66_0/boost /usr/include/boost \\\n && cd $SOURCE_DIR \\\n && git clone https://github.com/couchbasedeps/erlang.git \\\n && cd erlang \\\n && git checkout couchbase-watson \\\n && ./otp_build autoconf \\\n && touch lib/debugger/SKIP lib/megaco/SKIP lib/observer/SKIP lib/wx/SKIP \\\n && ./configure --prefix=/usr/local --enable-smp-support --disable-hipe --disable-fp-exceptions CFLAGS=\"-fno-strict-aliasing -O3 -ggdb3 -DOPENSSL_NO_EC=1\" \\\n && make -j$( cat /proc/cpuinfo | grep processor | wc -l ;) \\\n && make install \\\n && cd $SOURCE_DIR \\\n && rm -rf flatbuffers \\\n && git clone https://github.com/google/flatbuffers \\\n && cd flatbuffers \\\n && git checkout v1.5.0 \\\n && cp include/flatbuffers/flatbuffers.h include/flatbuffers/flatbuffers.h_org \\\n && sed -i '72 i #define FLATBUFFERS_LITTLEENDIAN 0' include/flatbuffers/flatbuffers.h \\\n && cmake -G \"Unix Makefiles\" \\\n && make \\\n && make install \\\n && export PATH=$PATH:`pwd ` \\\n && cd $SOURCE_DIR \\\n && git clone https://github.com/couchbasedeps/icu4c.git \\\n && cd icu4c/source \\\n && git checkout r54.1 \\\n && ./configure --prefix=/usr/local --disable-extras --disable-layout --disable-tests --disable-samples \\\n && make \\\n && make install \\\n && cd $SOURCE_DIR \\\n && git clone https://github.com/couchbasedeps/jemalloc.git \\\n && cd jemalloc \\\n && git checkout 4.3.1 \\\n && autoconf configure.ac > configure \\\n && chmod u+x configure \\\n && CPPFLAGS=-I/usr/local/include ./configure --prefix=/usr/local --with-jemalloc-prefix=je_ --disable-cache-oblivious --disable-zone-allocator \\\n && make build_lib_shared \\\n && make install_lib_shared install_include \\\n && cd $SOURCE_DIR \\\n && git clone https://github.com/couchbasedeps/v8.git \\\n && cd v8 \\\n && git checkout 5.2-couchbase \\\n && sed -i '180d' test/cctest/interpreter/generate-bytecode-expectations.cc \\\n && sed -i '178d' test/cctest/interpreter/generate-bytecode-expectations.cc \\\n && sed -i '177d' test/cctest/interpreter/generate-bytecode-expectations.cc \\\n && sed -i '177 i \\ dirent* entry = readdir(directory);' test/cctest/interpreter/generate-bytecode-expectations.cc \\\n && sed -i '179 i \\ while (entry) {' test/cctest/interpreter/generate-bytecode-expectations.cc \\\n && sed -i '185 i \\ entry = readdir(directory);' test/cctest/interpreter/generate-bytecode-expectations.cc \\\n && make -j$( cat /proc/cpuinfo | grep processor | wc -l ;) s390x.release GYPFLAGS+=\"-Dcomponent=shared_library -Dv8_enable_backtrace=1 -Dv8_use_snapshot='true' -Dclang=0 -Dv8_use_external_startup_data=0 -Dv8_enable_i18n_support=0 -Dtest_isolation_mode=noop\" PYTHONPATH=`pwd `/third_party/argparse-1.4.0 \\\n && cp -vR include/* /usr/local/include/ \\\n && cp -v out/s390x.release/lib.target/libv8.so /usr/local/lib/ \\\n && cd $SOURCE_DIR \\\n && curl https://storage.googleapis.com/git-repo-downloads/repo > repo \\\n && chmod a+x repo \\\n && mkdir -p $SOURCE_DIR/couchbase \\\n && cd $SOURCE_DIR/couchbase \\\n && git config --global user.email test@github.com \\\n && git config --global user.name test \\\n && ../repo init -u git://github.com/couchbase/manifest -m released/5.1.0.xml \\\n && ../repo sync \\\n && cp tlm/CMakeLists.txt tlm/CMakeLists.txt.orig \\\n && sed -i '72d ' tlm/CMakeLists.txt \\\n && sed -i '72 i SET(CB_DOWNLOAD_DEPS False' tlm/CMakeLists.txt \\\n && sed -i '113d ' tlm/CMakeLists.txt \\\n && cp forestdb/src/arch.h forestdb/src/arch.h.orig \\\n && sed -i '319 i \\ #if defined(__s390x__)\\n\\t\\t#undef SPIN_INITIALIZER\\n\\t\\t#define SPIN_INITIALIZER (spin_t)(0)\\n\\t#endif ' forestdb/src/arch.h \\\n && cp couchstore/src/views/bin/couch_view_file_merger.cc couchstore/src/views/bin/couch_view_file_merger.cc.orig \\\n && sed -i '40s/.*/};typedef unsigned char merge_file_type_t;/' couchstore/src/views/bin/couch_view_file_merger.cc \\\n && cp forestdb/utils/debug.cc forestdb/utils/debug.cc.orig \\\n && sed -i '92 i #elif __s390x__ \\n\\t unsigned char *pc = (unsigned char *)u->uc_mcontext.psw.addr;' forestdb/utils/debug.cc \\\n && cp platform/CMakeLists.txt platform/CMakeLists.txt.orig \\\n && sed -i '168d ' platform/CMakeLists.txt \\\n && cp platform/include/platform/crc32c.h platform/include/platform/crc32c.h.orig \\\n && sed -i '42d' platform/include/platform/crc32c.h \\\n && sed -i '42 i #if !defined(__x86_64__) \\\n && !defined(_M_X64) \\\n && !defined(_M_IX86) \\\n && !defined(__s390x__)\\n' platform/include/platform/crc32c.h \\\n && cd $SOURCE_DIR/couchbase \\\n && cp platform/src/crc32c.cc platform/src/crc32c.cc.orig \\\n && sed -i '54 i #include <crc32-s390x.h>' platform/src/crc32c.cc \\\n && sed -i ' 64d ' platform/src/crc32c.cc \\\n && sed -i '64 i #elif defined(__clang__) || defined(__GNUC__) \\\n && !defined(__s390x__)' platform/src/crc32c.cc \\\n && sed -i ' 372d ' platform/src/crc32c.cc \\\n && sed -i '372 i //const uint32_t SSE42 = 0x00100000;' platform/src/crc32c.cc \\\n && sed -i '375 i /*' platform/src/crc32c.cc \\\n && sed -i '389 i */' platform/src/crc32c.cc \\\n && cd $SOURCE_DIR/couchbase \\\n && cp platform/tests/CMakeLists.txt platform/tests/CMakeLists.txt.orig \\\n && sed -i '10d ' platform/tests/CMakeLists.txt \\\n && cd $SOURCE_DIR/couchbase \\\n && cp goproj/src/github.com/couchbase/indexing/secondary/memdb/skiplist/skiplist.go goproj/src/github.com/couchbase/indexing/secondary/memdb/skiplist/skiplist.go.orig \\\n && sed -i '77,82 d ' goproj/src/github.com/couchbase/indexing/secondary/memdb/skiplist/skiplist.go \\\n && sed -i '77 i \\ s.freeNode = func(*Node) {} ' goproj/src/github.com/couchbase/indexing/secondary/memdb/skiplist/skiplist.go \\\n && cp kv_engine/daemon/subdocument_validators.cc kv_engine/daemon/subdocument_validators.cc.orig \\\n && sed -i ' 427d ' kv_engine/daemon/subdocument_validators.cc.orig \\\n && sed -i '427 i \\ (htonl(__bswap_32(req->request.bodylen)) < minimum_body_len) ||' kv_engine/daemon/subdocument_validators.cc \\\n && cp benchmark/src/cycleclock.h benchmark/src/cycleclock.h.orig \\\n && sed -i '85 i #elif defined(__s390x__)\\n\\ uint64_t res;\\n __asm__ volatile(\"stck %0\" : \"=m\"(res));\\n return res;' benchmark/src/cycleclock.h \\\n && cp platform/include/platform/cacheline_padded.h platform/include/platform/cacheline_padded.h.orig \\\n && sed -i '23d' platform/include/platform/cacheline_padded.h \\\n && sed -i '23 i #define FALSE_SHARING_RANGE 64' platform/include/platform/cacheline_padded.h \\\n && cp kv_engine/engines/ep/src/ep_engine.cc kv_engine/engines/ep/src/ep_engine.cc.orig \\\n && sed -i '3678d' kv_engine/engines/ep/src/ep_engine.cc \\\n && sed -i '3678 i \\ uint8_t keystatus = 0;' kv_engine/engines/ep/src/ep_engine.cc \\\n && cp kv_engine/engines/ep/tests/ep_testsuite_xdcr.cc kv_engine/engines/ep/tests/ep_testsuite_xdcr.cc.orig \\\n && sed -i '2362d' kv_engine/engines/ep/tests/ep_testsuite_xdcr.cc \\\n && sed -i '2362 i \\ std::vector<char> junkMeta = {char(-2),char(-1),2,3};' kv_engine/engines/ep/tests/ep_testsuite_xdcr.cc \\\n && cp tlm/cmake/Modules/FindCouchbaseLibevent.cmake tlm/cmake/Modules/FindCouchbaseLibevent.cmake.orig \\\n && sed -i '47 i set(LIBEVENT_INCLUDE_DIR /usr/include)\\nset(LIBEVENT_EXTRA_LIB /usr/lib/s390x-linux-gnu/libevent_extra.so)\\nset(LIBEVENT_CORE_LIB /usr/lib/s390x-linux-gnu/libevent_core.so)\\nset(LIBEVENT_THREAD_LIB /usr/lib/s390x-linux-gnu/libevent_pthreads.so)' tlm/cmake/Modules/FindCouchbaseLibevent.cmake \\\n && cd ./godeps/src/github.com/ \\\n && mv boltdb boltdb_ORIG \\\n && mkdir boltdb \\\n && cd boltdb \\\n && git clone https://github.com/boltdb/bolt.git \\\n && cd bolt/ \\\n && git checkout v1.3.0 \\\n && cd $SOURCE_DIR \\\n && git clone https://github.com/linux-on-ibm-z/crc32-s390x \\\n && cd crc32-s390x \\\n && export CC=/usr/bin/gcc-5 \\\n && make \\\n && cp crc32-s390x.h /usr/local/include/ \\\n && cp libcrc32_s390x.a /usr/local/lib/ \\\n && cd $SOURCE_DIR \\\n && export GOPATH=$HOME/go \\\n && go get -u golang.org/x/tools/cmd/goyacc \\\n && cp $HOME/go/bin/goyacc /usr/lib/go-1.9/pkg/tool/linux_s390x/ \\\n && chown root:root /usr/lib/go-1.9/pkg/tool/linux_s390x/goyacc \\\n && chmod -f 755 /usr/lib/go-1.9/pkg/tool/linux_s390x/goyacc \\\n && ln -sf /usr/lib/go-1.9/pkg/tool/linux_s390x/goyacc /usr/lib/go-1.9/pkg/tool/linux_s390x/yacc \\\n && cd $SOURCE_DIR/couchbase/ \\\n && make \\\n && mkdir -p /tmp/temp \\\n && mv $SOURCE_DIR/couchbase/install/* /tmp/temp/ \\\n && rm -rf $SOURCE_DIR/* \\\n && mkdir -p $SOURCE_DIR/couchbase/install/ \\\n && mv /tmp/temp/* $SOURCE_DIR/couchbase/install/ \\\n && apt-get remove -y autoconf automake check cmake curl flex gcc-5 git g++-5 libcurl4-openssl-dev libevent-dev libglib2.0-dev libmozjs-24-dev libncurses5-dev libtool libxml2-utils make openssl pkg-config python python-dev ruby sqlite3 subversion unixodbc unixodbc-dev vim wget xsltproc \\\n && apt-get autoremove -y \\\n && apt-get autoremove -y \\\n && apt-get clean \\\n && rm -rf $HOME/*\n#  8091: Couchbase Web console, REST/HTTP interface\n#  8092: Views, queries, XDCR\n#  8093: Query services (4.0+)\n#  8094: Full-text Search (4.5+)\n#  11207: Smart client library data node access (SSL)\n#  11210: Smart client library/moxi data node access\n#  11211: Legacy non-smart client library data node access\n#  18091: Couchbase Web console, REST/HTTP interface (SSL)\n#  18092: Views, query, XDCR (SSL)\n#  18093: Query services (SSL) (4.0+)\nEXPOSE 8091/tcp 8092/tcp 8093/tcp 8094/tcp 11207/tcp 11210/tcp 11211/tcp 18091/tcp 18092/tcp 18093/tcp\nVOLUME $SOURCE_DIR/couchbase/install/var\nCMD [\"couchbase-server\", \"--\", \"-kernel\", \"global_enable_tracing\", \"false\", \"-noinput\"]\n","injectedSmells":[],"originalDockerfileHash":"7cccdab2f11434a83377fe0a972d8d6d","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Â© Copyright IBM Corporation 2017, 2019.\n#   LICENSE: Apache License, Version 2.0 (http://www.apache.org/licenses/LICENSE-2.0)\n#  #################### Dockerfile for Couchbase version 5.1.0 ###################################################\n#\n#   This Dockerfile builds a basic installation of Couchbase.\n#\n#   To build this image, from the directory containing this Dockerfile\n#   (assuming that the file is named Dockerfile):\n#   docker build -t <image_name> .\n#\n#   To start Couchbase server using this image, use following command:\n#   docker run --name <container name> -p <port>:8091-8094 -p <port>:11210 -d <image name>\n#\n#   Then you can access the Couchbase Web console using http://<host-ip>:<port_exported_8091>\n#\n#  #################################################################################################################\n#   Base Image\nFROM s390x/ubuntu:16.04\n#   The author\nMAINTAINER LoZ Open Source Ecosystem (https://www.ibm.com/developerworks/community/groups/community/lozopensource)\nENV SOURCE_DIR=\"/opt\"\nWORKDIR $SOURCE_DIR\nENV JAVA_HOME=\"/opt/ibm/java\"\nENV PATH=\"$JAVA_HOME/bin:$PATH\"\nENV PATH=\"$PATH:/usr/lib/go-1.9/bin\"\nENV CB_MULTI_GO=\"0\"\nENV PATH=\"$SOURCE_DIR/couchbase/install/bin:$PATH\"\nENV GOPATH=\"$HOME/go\"\n#   Install the Dependencies\nRUN apt-get update -y \\\n && apt-get install autoconf automake check cmake curl flex gcc-4.8 git g++-4.8 libcurl4-openssl-dev libevent-dev libglib2.0-dev libncurses5-dev libsnappy-dev libssl-dev libtool libxml2-utils make openssl pkg-config python python-dev ruby sqlite3 subversion tar unixodbc unixodbc-dev vim wget xsltproc golang-1.9 xinetd -y \\\n && export PATH=/usr/lib/go-1.9/bin:$PATH \\\n && go version \\\n && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.8 40 \\\n && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-4.8 40 \\\n && wget http://public.dhe.ibm.com/ibmdl/export/pub/systems/cloud/runtimes/java/8.0.5.36/linux/s390x/ibm-java-sdk-8.0-5.36-s390x-archive.bin \\\n && wget https://raw.githubusercontent.com/zos-spark/scala-workbench/master/files/installer.properties.java \\\n && tail -n +3 installer.properties.java | tee installer.properties \\\n && chmod +x ibm-java-sdk-8.0-5.36-s390x-archive.bin \\\n && ./ibm-java-sdk-8.0-5.36-s390x-archive.bin -r installer.properties \\\n && java -version \\\n && cd $SOURCE_DIR \\\n && git clone https://github.com/nlohmann/json \\\n && cd json \\\n && export PATH=$PATH:`pwd ` \\\n && cd $SOURCE_DIR \\\n && wget https://dl.bintray.com/boostorg/release/1.66.0/source/boost_1_66_0.tar.gz \\\n && tar -xvzf boost_1_66_0.tar.gz \\\n && ln -s $SOURCE_DIR/boost_1_66_0/boost /usr/include/boost \\\n && cd $SOURCE_DIR \\\n && git clone https://github.com/couchbasedeps/erlang.git \\\n && cd erlang \\\n && git checkout couchbase-watson \\\n && ./otp_build autoconf \\\n && touch lib/debugger/SKIP lib/megaco/SKIP lib/observer/SKIP lib/wx/SKIP \\\n && ./configure --prefix=/usr/local --enable-smp-support --disable-hipe --disable-fp-exceptions CFLAGS=\"-fno-strict-aliasing -O3 -ggdb3 -DOPENSSL_NO_EC=1\" \\\n && make -j$( cat /proc/cpuinfo | grep processor | wc -l ;) \\\n && make install \\\n && cd $SOURCE_DIR \\\n && rm -rf flatbuffers \\\n && git clone https://github.com/google/flatbuffers \\\n && cd flatbuffers \\\n && git checkout v1.5.0 \\\n && cp include/flatbuffers/flatbuffers.h include/flatbuffers/flatbuffers.h_org \\\n && sed -i '72 i #define FLATBUFFERS_LITTLEENDIAN 0' include/flatbuffers/flatbuffers.h \\\n && cmake -G \"Unix Makefiles\" \\\n && make \\\n && make install \\\n && export PATH=$PATH:`pwd ` \\\n && cd $SOURCE_DIR \\\n && git clone https://github.com/couchbasedeps/icu4c.git \\\n && cd icu4c/source \\\n && git checkout r54.1 \\\n && ./configure --prefix=/usr/local --disable-extras --disable-layout --disable-tests --disable-samples \\\n && make \\\n && make install \\\n && cd $SOURCE_DIR \\\n && git clone https://github.com/couchbasedeps/jemalloc.git \\\n && cd jemalloc \\\n && git checkout 4.3.1 \\\n && autoconf configure.ac > configure \\\n && chmod u+x configure \\\n && CPPFLAGS=-I/usr/local/include ./configure --prefix=/usr/local --with-jemalloc-prefix=je_ --disable-cache-oblivious --disable-zone-allocator \\\n && make build_lib_shared \\\n && make install_lib_shared install_include \\\n && cd $SOURCE_DIR \\\n && git clone https://github.com/couchbasedeps/v8.git \\\n && cd v8 \\\n && git checkout 5.2-couchbase \\\n && sed -i '180d' test/cctest/interpreter/generate-bytecode-expectations.cc \\\n && sed -i '178d' test/cctest/interpreter/generate-bytecode-expectations.cc \\\n && sed -i '177d' test/cctest/interpreter/generate-bytecode-expectations.cc \\\n && sed -i '177 i \\ dirent* entry = readdir(directory);' test/cctest/interpreter/generate-bytecode-expectations.cc \\\n && sed -i '179 i \\ while (entry) {' test/cctest/interpreter/generate-bytecode-expectations.cc \\\n && sed -i '185 i \\ entry = readdir(directory);' test/cctest/interpreter/generate-bytecode-expectations.cc \\\n && make -j$( cat /proc/cpuinfo | grep processor | wc -l ;) s390x.release GYPFLAGS+=\"-Dcomponent=shared_library -Dv8_enable_backtrace=1 -Dv8_use_snapshot='true' -Dclang=0 -Dv8_use_external_startup_data=0 -Dv8_enable_i18n_support=0 -Dtest_isolation_mode=noop\" PYTHONPATH=`pwd `/third_party/argparse-1.4.0 \\\n && cp -vR include/* /usr/local/include/ \\\n && cp -v out/s390x.release/lib.target/libv8.so /usr/local/lib/ \\\n && cd $SOURCE_DIR \\\n && curl https://storage.googleapis.com/git-repo-downloads/repo > repo \\\n && chmod a+x repo \\\n && mkdir -p $SOURCE_DIR/couchbase \\\n && cd $SOURCE_DIR/couchbase \\\n && git config --global user.email test@github.com \\\n && git config --global user.name test \\\n && ../repo init -u git://github.com/couchbase/manifest -m released/5.1.0.xml \\\n && ../repo sync \\\n && cp tlm/CMakeLists.txt tlm/CMakeLists.txt.orig \\\n && sed -i '72d ' tlm/CMakeLists.txt \\\n && sed -i '72 i SET(CB_DOWNLOAD_DEPS False' tlm/CMakeLists.txt \\\n && sed -i '113d ' tlm/CMakeLists.txt \\\n && cp forestdb/src/arch.h forestdb/src/arch.h.orig \\\n && sed -i '319 i \\ #if defined(__s390x__)\\n\\t\\t#undef SPIN_INITIALIZER\\n\\t\\t#define SPIN_INITIALIZER (spin_t)(0)\\n\\t#endif ' forestdb/src/arch.h \\\n && cp couchstore/src/views/bin/couch_view_file_merger.cc couchstore/src/views/bin/couch_view_file_merger.cc.orig \\\n && sed -i '40s/.*/};typedef unsigned char merge_file_type_t;/' couchstore/src/views/bin/couch_view_file_merger.cc \\\n && cp forestdb/utils/debug.cc forestdb/utils/debug.cc.orig \\\n && sed -i '92 i #elif __s390x__ \\n\\t unsigned char *pc = (unsigned char *)u->uc_mcontext.psw.addr;' forestdb/utils/debug.cc \\\n && cp platform/CMakeLists.txt platform/CMakeLists.txt.orig \\\n && sed -i '168d ' platform/CMakeLists.txt \\\n && cp platform/include/platform/crc32c.h platform/include/platform/crc32c.h.orig \\\n && sed -i '42d' platform/include/platform/crc32c.h \\\n && sed -i '42 i #if !defined(__x86_64__) \\\n && !defined(_M_X64) \\\n && !defined(_M_IX86) \\\n && !defined(__s390x__)\\n' platform/include/platform/crc32c.h \\\n && cd $SOURCE_DIR/couchbase \\\n && cp platform/src/crc32c.cc platform/src/crc32c.cc.orig \\\n && sed -i '54 i #include <crc32-s390x.h>' platform/src/crc32c.cc \\\n && sed -i ' 64d ' platform/src/crc32c.cc \\\n && sed -i '64 i #elif defined(__clang__) || defined(__GNUC__) \\\n && !defined(__s390x__)' platform/src/crc32c.cc \\\n && sed -i ' 372d ' platform/src/crc32c.cc \\\n && sed -i '372 i //const uint32_t SSE42 = 0x00100000;' platform/src/crc32c.cc \\\n && sed -i '375 i /*' platform/src/crc32c.cc \\\n && sed -i '389 i */' platform/src/crc32c.cc \\\n && cd $SOURCE_DIR/couchbase \\\n && cp platform/tests/CMakeLists.txt platform/tests/CMakeLists.txt.orig \\\n && sed -i '10d ' platform/tests/CMakeLists.txt \\\n && cd $SOURCE_DIR/couchbase \\\n && cp goproj/src/github.com/couchbase/indexing/secondary/memdb/skiplist/skiplist.go goproj/src/github.com/couchbase/indexing/secondary/memdb/skiplist/skiplist.go.orig \\\n && sed -i '77,82 d ' goproj/src/github.com/couchbase/indexing/secondary/memdb/skiplist/skiplist.go \\\n && sed -i '77 i \\ s.freeNode = func(*Node) {} ' goproj/src/github.com/couchbase/indexing/secondary/memdb/skiplist/skiplist.go \\\n && cp kv_engine/daemon/subdocument_validators.cc kv_engine/daemon/subdocument_validators.cc.orig \\\n && sed -i ' 427d ' kv_engine/daemon/subdocument_validators.cc.orig \\\n && sed -i '427 i \\ (htonl(__bswap_32(req->request.bodylen)) < minimum_body_len) ||' kv_engine/daemon/subdocument_validators.cc \\\n && cp benchmark/src/cycleclock.h benchmark/src/cycleclock.h.orig \\\n && sed -i '85 i #elif defined(__s390x__)\\n\\ uint64_t res;\\n __asm__ volatile(\"stck %0\" : \"=m\"(res));\\n return res;' benchmark/src/cycleclock.h \\\n && cp platform/include/platform/cacheline_padded.h platform/include/platform/cacheline_padded.h.orig \\\n && sed -i '23d' platform/include/platform/cacheline_padded.h \\\n && sed -i '23 i #define FALSE_SHARING_RANGE 64' platform/include/platform/cacheline_padded.h \\\n && cp kv_engine/engines/ep/src/ep_engine.cc kv_engine/engines/ep/src/ep_engine.cc.orig \\\n && sed -i '3678d' kv_engine/engines/ep/src/ep_engine.cc \\\n && sed -i '3678 i \\ uint8_t keystatus = 0;' kv_engine/engines/ep/src/ep_engine.cc \\\n && cp kv_engine/engines/ep/tests/ep_testsuite_xdcr.cc kv_engine/engines/ep/tests/ep_testsuite_xdcr.cc.orig \\\n && sed -i '2362d' kv_engine/engines/ep/tests/ep_testsuite_xdcr.cc \\\n && sed -i '2362 i \\ std::vector<char> junkMeta = {char(-2),char(-1),2,3};' kv_engine/engines/ep/tests/ep_testsuite_xdcr.cc \\\n && cp tlm/cmake/Modules/FindCouchbaseLibevent.cmake tlm/cmake/Modules/FindCouchbaseLibevent.cmake.orig \\\n && sed -i '47 i set(LIBEVENT_INCLUDE_DIR /usr/include)\\nset(LIBEVENT_EXTRA_LIB /usr/lib/s390x-linux-gnu/libevent_extra.so)\\nset(LIBEVENT_CORE_LIB /usr/lib/s390x-linux-gnu/libevent_core.so)\\nset(LIBEVENT_THREAD_LIB /usr/lib/s390x-linux-gnu/libevent_pthreads.so)' tlm/cmake/Modules/FindCouchbaseLibevent.cmake \\\n && cd ./godeps/src/github.com/ \\\n && mv boltdb boltdb_ORIG \\\n && mkdir boltdb \\\n && cd boltdb \\\n && git clone https://github.com/boltdb/bolt.git \\\n && cd bolt/ \\\n && git checkout v1.3.0 \\\n && cd $SOURCE_DIR \\\n && git clone https://github.com/linux-on-ibm-z/crc32-s390x \\\n && cd crc32-s390x \\\n && export CC=/usr/bin/gcc-5 \\\n && make \\\n && cp crc32-s390x.h /usr/local/include/ \\\n && cp libcrc32_s390x.a /usr/local/lib/ \\\n && cd $SOURCE_DIR \\\n && export GOPATH=$HOME/go \\\n && go get -u golang.org/x/tools/cmd/goyacc \\\n && cp $HOME/go/bin/goyacc /usr/lib/go-1.9/pkg/tool/linux_s390x/ \\\n && chown root:root /usr/lib/go-1.9/pkg/tool/linux_s390x/goyacc \\\n && chmod -f 755 /usr/lib/go-1.9/pkg/tool/linux_s390x/goyacc \\\n && ln -sf /usr/lib/go-1.9/pkg/tool/linux_s390x/goyacc /usr/lib/go-1.9/pkg/tool/linux_s390x/yacc \\\n && cd $SOURCE_DIR/couchbase/ \\\n && make \\\n && mkdir -p /tmp/temp \\\n && mv $SOURCE_DIR/couchbase/install/* /tmp/temp/ \\\n && rm -rf $SOURCE_DIR/* \\\n && mkdir -p $SOURCE_DIR/couchbase/install/ \\\n && mv /tmp/temp/* $SOURCE_DIR/couchbase/install/ \\\n && apt-get remove -y autoconf automake check cmake curl flex gcc-5 git g++-5 libcurl4-openssl-dev libevent-dev libglib2.0-dev libmozjs-24-dev libncurses5-dev libtool libxml2-utils make openssl pkg-config python python-dev ruby sqlite3 subversion unixodbc unixodbc-dev vim wget xsltproc \\\n && apt-get autoremove -y \\\n && apt-get autoremove -y \\\n && apt-get clean \\\n && rm -rf $HOME/*\n#   8091: Couchbase Web console, REST/HTTP interface\n#   8092: Views, queries, XDCR\n#   8093: Query services (4.0+)\n#   8094: Full-text Search (4.5+)\n#   11207: Smart client library data node access (SSL)\n#   11210: Smart client library/moxi data node access\n#   11211: Legacy non-smart client library data node access\n#   18091: Couchbase Web console, REST/HTTP interface (SSL)\n#   18092: Views, query, XDCR (SSL)\n#   18093: Query services (SSL) (4.0+)\nEXPOSE 8091/tcp 8092/tcp 8093/tcp 8094/tcp 11207/tcp 11210/tcp 11211/tcp 18091/tcp 18092/tcp 18093/tcp\nVOLUME $SOURCE_DIR/couchbase/install/var\nCMD [\"couchbase-server\", \"--\", \"-kernel\", \"global_enable_tracing\", \"false\", \"-noinput\"]\n","originalDockerfileUglifiedHash":"3e027f0d92e5d841ec1d33adb8ef1b3e","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/a13c5573d34e126e2f89c6ca63da6f3f401ab4f1.dockerfile"}