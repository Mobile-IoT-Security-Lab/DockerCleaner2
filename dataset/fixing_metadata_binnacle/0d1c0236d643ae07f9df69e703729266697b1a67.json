{"seed":3533089851,"processedDockerfileHash":"f78b9d6d758a300b5e1745c8ef68b783","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apt-get","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Dockerfile for ELK stack\n#   Elasticsearch, Logstash, Kibana 7.0.1\n#   Build with:\n#   docker build -t <repo-user>/elk .\n#   Run with:\n#   docker run -p 5601:5601 -p 9200:9200 -p 5044:5044 -it --name elk <repo-user>/elk\nFROM phusion/baseimage:0.11\nMAINTAINER Sebastien Pujadas http://pujadas.net\nENV REFRESHED_AT=\"2017-02-28\"\n#  ##############################################################################\n#                                  INSTALLATION\n#  ##############################################################################\n#  ## install prerequisites (cURL, gosu, JDK, tzdata)\nRUN set -x \\\n && apt-get update -qq \\\n && apt-get install --no-install-recommends ca-certificates curl gosu tzdata openjdk-8-jdk -qqy \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* \\\n && gosu nobody true \\\n && set +x\n#  ## install Elasticsearch\nARG ELK_VERSION=7.0.1\nENV ES_VERSION=\"${ELK_VERSION}\" \\\n    ES_HOME=\"/opt/elasticsearch\" \\\n    LOGSTASH_VERSION=\"${ELK_VERSION}\" \\\n    LOGSTASH_HOME=\"/opt/logstash\"\n#   note you can't define an env var that references another one in the same block (docker layer)\nENV JAVA_HOME=\"/usr/lib/jvm/java-8-openjdk-amd64/jre\" \\\n    ES_PACKAGE=\"elasticsearch-${ES_VERSION}-linux-x86_64.tar.gz\" \\\n    ES_GID=\"991\" \\\n    ES_UID=\"991\" \\\n    ES_PATH_CONF=\"/etc/elasticsearch\" \\\n    ES_PATH_BACKUP=\"/var/backups\" \\\n    KIBANA_VERSION=\"${ELK_VERSION}\"\nRUN echo \"${ELK_VERSION} ${ES_VERSION} https://artifacts.elastic.co/downloads/elasticsearch/${ES_PACKAGE} to ${ES_HOME}\"\nRUN DEBIAN_FRONTEND=noninteractive \\\n && mkdir ${ES_HOME} \\\n && curl -O https://artifacts.elastic.co/downloads/elasticsearch/${ES_PACKAGE} \\\n && tar xzf ${ES_PACKAGE} -C ${ES_HOME} --strip-components=1 \\\n && rm -f ${ES_PACKAGE} \\\n && groupadd -r elasticsearch -g ${ES_GID} \\\n && useradd -r -s /usr/sbin/nologin -M -c \"Elasticsearch service user\" -u ${ES_UID} -g elasticsearch elasticsearch \\\n && mkdir -p /var/log/elasticsearch ${ES_PATH_CONF} ${ES_PATH_CONF}/scripts /var/lib/elasticsearch ${ES_PATH_BACKUP} \\\n && chown -R elasticsearch:elasticsearch ${ES_HOME} /var/log/elasticsearch /var/lib/elasticsearch ${ES_PATH_CONF} ${ES_PATH_BACKUP}\n#  ## install Logstash\nENV LOGSTASH_PACKAGE=\"logstash-${LOGSTASH_VERSION}.tar.gz\" \\\n    LOGSTASH_GID=\"992\" \\\n    LOGSTASH_UID=\"992\" \\\n    LOGSTASH_PATH_CONF=\"/etc/logstash\" \\\n    LOGSTASH_PATH_SETTINGS=\"${LOGSTASH_HOME}/config\"\nRUN mkdir ${LOGSTASH_HOME} \\\n && curl -O https://artifacts.elastic.co/downloads/logstash/${LOGSTASH_PACKAGE} \\\n && tar xzf ${LOGSTASH_PACKAGE} -C ${LOGSTASH_HOME} --strip-components=1 \\\n && rm -f ${LOGSTASH_PACKAGE} \\\n && groupadd -r logstash -g ${LOGSTASH_GID} \\\n && useradd -r -s /usr/sbin/nologin -d ${LOGSTASH_HOME} -c \"Logstash service user\" -u ${LOGSTASH_UID} -g logstash logstash \\\n && mkdir -p /var/log/logstash ${LOGSTASH_PATH_CONF}/conf.d \\\n && chown -R logstash:logstash ${LOGSTASH_HOME} /var/log/logstash ${LOGSTASH_PATH_CONF}\n#  ## install Kibana\nENV KIBANA_HOME=\"/opt/kibana\" \\\n    KIBANA_PACKAGE=\"kibana-${KIBANA_VERSION}-linux-x86_64.tar.gz\" \\\n    KIBANA_GID=\"993\" \\\n    KIBANA_UID=\"993\"\nRUN mkdir ${KIBANA_HOME} \\\n && curl -O https://artifacts.elastic.co/downloads/kibana/${KIBANA_PACKAGE} \\\n && tar xzf ${KIBANA_PACKAGE} -C ${KIBANA_HOME} --strip-components=1 \\\n && rm -f ${KIBANA_PACKAGE} \\\n && groupadd -r kibana -g ${KIBANA_GID} \\\n && useradd -r -s /usr/sbin/nologin -d ${KIBANA_HOME} -c \"Kibana service user\" -u ${KIBANA_UID} -g kibana kibana \\\n && mkdir -p /var/log/kibana \\\n && chown -R kibana:kibana ${KIBANA_HOME} /var/log/kibana\n#  ##############################################################################\n#                                START-UP SCRIPTS\n#  ##############################################################################\n#  ## Elasticsearch\nCOPY ./elasticsearch-init /etc/init.d/elasticsearch\nRUN sed -i -e 's#^ES_HOME=$#ES_HOME='$ES_HOME'#' /etc/init.d/elasticsearch \\\n && chmod +x /etc/init.d/elasticsearch\n#  ## Logstash\nCOPY ./logstash-init /etc/init.d/logstash\nRUN sed -i -e 's#^LS_HOME=$#LS_HOME='$LOGSTASH_HOME'#' /etc/init.d/logstash \\\n && chmod +x /etc/init.d/logstash\n#  ## Kibana\nCOPY ./kibana-init /etc/init.d/kibana\nRUN sed -i -e 's#^KIBANA_HOME=$#KIBANA_HOME='$KIBANA_HOME'#' /etc/init.d/kibana \\\n && chmod +x /etc/init.d/kibana\n#  ##############################################################################\n#                                 CONFIGURATION\n#  ##############################################################################\n#  ## configure Elasticsearch\nCOPY ./elasticsearch.yml ${ES_PATH_CONF}/elasticsearch.yml\nCOPY ./elasticsearch-default /etc/default/elasticsearch\nRUN cp ${ES_HOME}/config/log4j2.properties ${ES_HOME}/config/jvm.options ${ES_PATH_CONF} \\\n && chown -R elasticsearch:elasticsearch ${ES_PATH_CONF} \\\n && chmod -R +r ${ES_PATH_CONF}\n#  ## configure Logstash\n#   certs/keys for Beats and Lumberjack input\nRUN mkdir -p /etc/pki/tls/certs \\\n && mkdir /etc/pki/tls/private\nCOPY ./logstash-beats.crt /etc/pki/tls/certs/logstash-beats.crt\nCOPY ./logstash-beats.key /etc/pki/tls/private/logstash-beats.key\n#   pipelines\nCOPY pipelines.yml ${LOGSTASH_PATH_SETTINGS}/pipelines.yml\n#   filters\nCOPY ./02-beats-input.conf ${LOGSTASH_PATH_CONF}/conf.d/02-beats-input.conf\nCOPY ./10-syslog.conf ${LOGSTASH_PATH_CONF}/conf.d/10-syslog.conf\nCOPY ./11-nginx.conf ${LOGSTASH_PATH_CONF}/conf.d/11-nginx.conf\nCOPY ./30-output.conf ${LOGSTASH_PATH_CONF}/conf.d/30-output.conf\n#   patterns\nCOPY ./nginx.pattern ${LOGSTASH_HOME}/patterns/nginx\nRUN chown -R logstash:logstash ${LOGSTASH_HOME}/patterns\n#   Fix permissions\nRUN chmod -R +r ${LOGSTASH_PATH_CONF} ${LOGSTASH_PATH_SETTINGS} \\\n && chown -R logstash:logstash ${LOGSTASH_PATH_SETTINGS}\n#  ## configure logrotate\nCOPY ./elasticsearch-logrotate /etc/logrotate.d/elasticsearch\nCOPY ./logstash-logrotate /etc/logrotate.d/logstash\nCOPY ./kibana-logrotate /etc/logrotate.d/kibana\nRUN chmod 644 /etc/logrotate.d/elasticsearch \\\n && chmod 644 /etc/logrotate.d/logstash \\\n && chmod 644 /etc/logrotate.d/kibana\n#  ## configure Kibana\nCOPY ./kibana.yml ${KIBANA_HOME}/config/kibana.yml\n#  ##############################################################################\n#                                     START\n#  ##############################################################################\nCOPY ./start.sh /usr/local/bin/start.sh\nRUN chmod +x /usr/local/bin/start.sh\nEXPOSE 5601/tcp 9200/tcp 9300/tcp 5044/tcp\nVOLUME /var/lib/elasticsearch\nCMD [\"/usr/local/bin/start.sh\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Dockerfile for ELK stack\n#  Elasticsearch, Logstash, Kibana 7.0.1\n#  Build with:\n#  docker build -t <repo-user>/elk .\n#  Run with:\n#  docker run -p 5601:5601 -p 9200:9200 -p 5044:5044 -it --name elk <repo-user>/elk\nFROM phusion/baseimage:0.11\nMAINTAINER Sebastien Pujadas http://pujadas.net\nENV REFRESHED_AT=\"2017-02-28\"\n# ##############################################################################\n#                                 INSTALLATION\n# ##############################################################################\n# ## install prerequisites (cURL, gosu, JDK, tzdata)\nRUN set -x \\\n && apt-get update -qq \\\n && apt-get install -qqy --no-install-recommends ca-certificates curl gosu tzdata openjdk-8-jdk \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* \\\n && gosu nobody true \\\n && set +x\n# ## install Elasticsearch\nARG ELK_VERSION=7.0.1\nENV ES_VERSION=\"${ELK_VERSION}\" \\\n    ES_HOME=\"/opt/elasticsearch\" \\\n    LOGSTASH_VERSION=\"${ELK_VERSION}\" \\\n    LOGSTASH_HOME=\"/opt/logstash\"\n#  note you can't define an env var that references another one in the same block (docker layer)\nENV JAVA_HOME=\"/usr/lib/jvm/java-8-openjdk-amd64/jre\" \\\n    ES_PACKAGE=\"elasticsearch-${ES_VERSION}-linux-x86_64.tar.gz\" \\\n    ES_GID=\"991\" \\\n    ES_UID=\"991\" \\\n    ES_PATH_CONF=\"/etc/elasticsearch\" \\\n    ES_PATH_BACKUP=\"/var/backups\" \\\n    KIBANA_VERSION=\"${ELK_VERSION}\"\nRUN echo \"${ELK_VERSION} ${ES_VERSION} https://artifacts.elastic.co/downloads/elasticsearch/${ES_PACKAGE} to ${ES_HOME}\"\nRUN DEBIAN_FRONTEND=noninteractive \\\n && mkdir ${ES_HOME} \\\n && curl -O https://artifacts.elastic.co/downloads/elasticsearch/${ES_PACKAGE} \\\n && tar xzf ${ES_PACKAGE} -C ${ES_HOME} --strip-components=1 \\\n && rm -f ${ES_PACKAGE} \\\n && groupadd -r elasticsearch -g ${ES_GID} \\\n && useradd -r -s /usr/sbin/nologin -M -c \"Elasticsearch service user\" -u ${ES_UID} -g elasticsearch elasticsearch \\\n && mkdir -p /var/log/elasticsearch ${ES_PATH_CONF} ${ES_PATH_CONF}/scripts /var/lib/elasticsearch ${ES_PATH_BACKUP} \\\n && chown -R elasticsearch:elasticsearch ${ES_HOME} /var/log/elasticsearch /var/lib/elasticsearch ${ES_PATH_CONF} ${ES_PATH_BACKUP}\n# ## install Logstash\nENV LOGSTASH_PACKAGE=\"logstash-${LOGSTASH_VERSION}.tar.gz\" \\\n    LOGSTASH_GID=\"992\" \\\n    LOGSTASH_UID=\"992\" \\\n    LOGSTASH_PATH_CONF=\"/etc/logstash\" \\\n    LOGSTASH_PATH_SETTINGS=\"${LOGSTASH_HOME}/config\"\nRUN mkdir ${LOGSTASH_HOME} \\\n && curl -O https://artifacts.elastic.co/downloads/logstash/${LOGSTASH_PACKAGE} \\\n && tar xzf ${LOGSTASH_PACKAGE} -C ${LOGSTASH_HOME} --strip-components=1 \\\n && rm -f ${LOGSTASH_PACKAGE} \\\n && groupadd -r logstash -g ${LOGSTASH_GID} \\\n && useradd -r -s /usr/sbin/nologin -d ${LOGSTASH_HOME} -c \"Logstash service user\" -u ${LOGSTASH_UID} -g logstash logstash \\\n && mkdir -p /var/log/logstash ${LOGSTASH_PATH_CONF}/conf.d \\\n && chown -R logstash:logstash ${LOGSTASH_HOME} /var/log/logstash ${LOGSTASH_PATH_CONF}\n# ## install Kibana\nENV KIBANA_HOME=\"/opt/kibana\" \\\n    KIBANA_PACKAGE=\"kibana-${KIBANA_VERSION}-linux-x86_64.tar.gz\" \\\n    KIBANA_GID=\"993\" \\\n    KIBANA_UID=\"993\"\nRUN mkdir ${KIBANA_HOME} \\\n && curl -O https://artifacts.elastic.co/downloads/kibana/${KIBANA_PACKAGE} \\\n && tar xzf ${KIBANA_PACKAGE} -C ${KIBANA_HOME} --strip-components=1 \\\n && rm -f ${KIBANA_PACKAGE} \\\n && groupadd -r kibana -g ${KIBANA_GID} \\\n && useradd -r -s /usr/sbin/nologin -d ${KIBANA_HOME} -c \"Kibana service user\" -u ${KIBANA_UID} -g kibana kibana \\\n && mkdir -p /var/log/kibana \\\n && chown -R kibana:kibana ${KIBANA_HOME} /var/log/kibana\n# ##############################################################################\n#                               START-UP SCRIPTS\n# ##############################################################################\n# ## Elasticsearch\nADD ./elasticsearch-init /etc/init.d/elasticsearch\nRUN sed -i -e 's#^ES_HOME=$#ES_HOME='$ES_HOME'#' /etc/init.d/elasticsearch \\\n && chmod +x /etc/init.d/elasticsearch\n# ## Logstash\nADD ./logstash-init /etc/init.d/logstash\nRUN sed -i -e 's#^LS_HOME=$#LS_HOME='$LOGSTASH_HOME'#' /etc/init.d/logstash \\\n && chmod +x /etc/init.d/logstash\n# ## Kibana\nADD ./kibana-init /etc/init.d/kibana\nRUN sed -i -e 's#^KIBANA_HOME=$#KIBANA_HOME='$KIBANA_HOME'#' /etc/init.d/kibana \\\n && chmod +x /etc/init.d/kibana\n# ##############################################################################\n#                                CONFIGURATION\n# ##############################################################################\n# ## configure Elasticsearch\nADD ./elasticsearch.yml ${ES_PATH_CONF}/elasticsearch.yml\nADD ./elasticsearch-default /etc/default/elasticsearch\nRUN cp ${ES_HOME}/config/log4j2.properties ${ES_HOME}/config/jvm.options ${ES_PATH_CONF} \\\n && chown -R elasticsearch:elasticsearch ${ES_PATH_CONF} \\\n && chmod -R +r ${ES_PATH_CONF}\n# ## configure Logstash\n#  certs/keys for Beats and Lumberjack input\nRUN mkdir -p /etc/pki/tls/certs \\\n && mkdir /etc/pki/tls/private\nADD ./logstash-beats.crt /etc/pki/tls/certs/logstash-beats.crt\nADD ./logstash-beats.key /etc/pki/tls/private/logstash-beats.key\n#  pipelines\nADD pipelines.yml ${LOGSTASH_PATH_SETTINGS}/pipelines.yml\n#  filters\nADD ./02-beats-input.conf ${LOGSTASH_PATH_CONF}/conf.d/02-beats-input.conf\nADD ./10-syslog.conf ${LOGSTASH_PATH_CONF}/conf.d/10-syslog.conf\nADD ./11-nginx.conf ${LOGSTASH_PATH_CONF}/conf.d/11-nginx.conf\nADD ./30-output.conf ${LOGSTASH_PATH_CONF}/conf.d/30-output.conf\n#  patterns\nADD ./nginx.pattern ${LOGSTASH_HOME}/patterns/nginx\nRUN chown -R logstash:logstash ${LOGSTASH_HOME}/patterns\n#  Fix permissions\nRUN chmod -R +r ${LOGSTASH_PATH_CONF} ${LOGSTASH_PATH_SETTINGS} \\\n && chown -R logstash:logstash ${LOGSTASH_PATH_SETTINGS}\n# ## configure logrotate\nADD ./elasticsearch-logrotate /etc/logrotate.d/elasticsearch\nADD ./logstash-logrotate /etc/logrotate.d/logstash\nADD ./kibana-logrotate /etc/logrotate.d/kibana\nRUN chmod 644 /etc/logrotate.d/elasticsearch \\\n && chmod 644 /etc/logrotate.d/logstash \\\n && chmod 644 /etc/logrotate.d/kibana\n# ## configure Kibana\nADD ./kibana.yml ${KIBANA_HOME}/config/kibana.yml\n# ##############################################################################\n#                                    START\n# ##############################################################################\nADD ./start.sh /usr/local/bin/start.sh\nRUN chmod +x /usr/local/bin/start.sh\nEXPOSE 5601/tcp 9200/tcp 9300/tcp 5044/tcp\nVOLUME /var/lib/elasticsearch\nCMD [\"/usr/local/bin/start.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"098482a5d893ae7ffc3b6179d296ac3b","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Dockerfile for ELK stack\n#   Elasticsearch, Logstash, Kibana 7.0.1\n#   Build with:\n#   docker build -t <repo-user>/elk .\n#   Run with:\n#   docker run -p 5601:5601 -p 9200:9200 -p 5044:5044 -it --name elk <repo-user>/elk\nFROM phusion/baseimage:0.11\nMAINTAINER Sebastien Pujadas http://pujadas.net\nENV REFRESHED_AT=\"2017-02-28\"\n#  ##############################################################################\n#                                  INSTALLATION\n#  ##############################################################################\n#  ## install prerequisites (cURL, gosu, JDK, tzdata)\nRUN set -x \\\n && apt-get update -qq \\\n && apt-get install --no-install-recommends ca-certificates curl gosu tzdata openjdk-8-jdk -qqy \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* \\\n && gosu nobody true \\\n && set +x\n#  ## install Elasticsearch\nARG ELK_VERSION=7.0.1\nENV ES_VERSION=\"${ELK_VERSION}\" \\\n    ES_HOME=\"/opt/elasticsearch\" \\\n    LOGSTASH_VERSION=\"${ELK_VERSION}\" \\\n    LOGSTASH_HOME=\"/opt/logstash\"\n#   note you can't define an env var that references another one in the same block (docker layer)\nENV JAVA_HOME=\"/usr/lib/jvm/java-8-openjdk-amd64/jre\" \\\n    ES_PACKAGE=\"elasticsearch-${ES_VERSION}-linux-x86_64.tar.gz\" \\\n    ES_GID=\"991\" \\\n    ES_UID=\"991\" \\\n    ES_PATH_CONF=\"/etc/elasticsearch\" \\\n    ES_PATH_BACKUP=\"/var/backups\" \\\n    KIBANA_VERSION=\"${ELK_VERSION}\"\nRUN echo \"${ELK_VERSION} ${ES_VERSION} https://artifacts.elastic.co/downloads/elasticsearch/${ES_PACKAGE} to ${ES_HOME}\"\nRUN DEBIAN_FRONTEND=noninteractive \\\n && mkdir ${ES_HOME} \\\n && curl -O https://artifacts.elastic.co/downloads/elasticsearch/${ES_PACKAGE} \\\n && tar xzf ${ES_PACKAGE} -C ${ES_HOME} --strip-components=1 \\\n && rm -f ${ES_PACKAGE} \\\n && groupadd -r elasticsearch -g ${ES_GID} \\\n && useradd -r -s /usr/sbin/nologin -M -c \"Elasticsearch service user\" -u ${ES_UID} -g elasticsearch elasticsearch \\\n && mkdir -p /var/log/elasticsearch ${ES_PATH_CONF} ${ES_PATH_CONF}/scripts /var/lib/elasticsearch ${ES_PATH_BACKUP} \\\n && chown -R elasticsearch:elasticsearch ${ES_HOME} /var/log/elasticsearch /var/lib/elasticsearch ${ES_PATH_CONF} ${ES_PATH_BACKUP}\n#  ## install Logstash\nENV LOGSTASH_PACKAGE=\"logstash-${LOGSTASH_VERSION}.tar.gz\" \\\n    LOGSTASH_GID=\"992\" \\\n    LOGSTASH_UID=\"992\" \\\n    LOGSTASH_PATH_CONF=\"/etc/logstash\" \\\n    LOGSTASH_PATH_SETTINGS=\"${LOGSTASH_HOME}/config\"\nRUN mkdir ${LOGSTASH_HOME} \\\n && curl -O https://artifacts.elastic.co/downloads/logstash/${LOGSTASH_PACKAGE} \\\n && tar xzf ${LOGSTASH_PACKAGE} -C ${LOGSTASH_HOME} --strip-components=1 \\\n && rm -f ${LOGSTASH_PACKAGE} \\\n && groupadd -r logstash -g ${LOGSTASH_GID} \\\n && useradd -r -s /usr/sbin/nologin -d ${LOGSTASH_HOME} -c \"Logstash service user\" -u ${LOGSTASH_UID} -g logstash logstash \\\n && mkdir -p /var/log/logstash ${LOGSTASH_PATH_CONF}/conf.d \\\n && chown -R logstash:logstash ${LOGSTASH_HOME} /var/log/logstash ${LOGSTASH_PATH_CONF}\n#  ## install Kibana\nENV KIBANA_HOME=\"/opt/kibana\" \\\n    KIBANA_PACKAGE=\"kibana-${KIBANA_VERSION}-linux-x86_64.tar.gz\" \\\n    KIBANA_GID=\"993\" \\\n    KIBANA_UID=\"993\"\nRUN mkdir ${KIBANA_HOME} \\\n && curl -O https://artifacts.elastic.co/downloads/kibana/${KIBANA_PACKAGE} \\\n && tar xzf ${KIBANA_PACKAGE} -C ${KIBANA_HOME} --strip-components=1 \\\n && rm -f ${KIBANA_PACKAGE} \\\n && groupadd -r kibana -g ${KIBANA_GID} \\\n && useradd -r -s /usr/sbin/nologin -d ${KIBANA_HOME} -c \"Kibana service user\" -u ${KIBANA_UID} -g kibana kibana \\\n && mkdir -p /var/log/kibana \\\n && chown -R kibana:kibana ${KIBANA_HOME} /var/log/kibana\n#  ##############################################################################\n#                                START-UP SCRIPTS\n#  ##############################################################################\n#  ## Elasticsearch\nADD ./elasticsearch-init /etc/init.d/elasticsearch\nRUN sed -i -e 's#^ES_HOME=$#ES_HOME='$ES_HOME'#' /etc/init.d/elasticsearch \\\n && chmod +x /etc/init.d/elasticsearch\n#  ## Logstash\nADD ./logstash-init /etc/init.d/logstash\nRUN sed -i -e 's#^LS_HOME=$#LS_HOME='$LOGSTASH_HOME'#' /etc/init.d/logstash \\\n && chmod +x /etc/init.d/logstash\n#  ## Kibana\nADD ./kibana-init /etc/init.d/kibana\nRUN sed -i -e 's#^KIBANA_HOME=$#KIBANA_HOME='$KIBANA_HOME'#' /etc/init.d/kibana \\\n && chmod +x /etc/init.d/kibana\n#  ##############################################################################\n#                                 CONFIGURATION\n#  ##############################################################################\n#  ## configure Elasticsearch\nADD ./elasticsearch.yml ${ES_PATH_CONF}/elasticsearch.yml\nADD ./elasticsearch-default /etc/default/elasticsearch\nRUN cp ${ES_HOME}/config/log4j2.properties ${ES_HOME}/config/jvm.options ${ES_PATH_CONF} \\\n && chown -R elasticsearch:elasticsearch ${ES_PATH_CONF} \\\n && chmod -R +r ${ES_PATH_CONF}\n#  ## configure Logstash\n#   certs/keys for Beats and Lumberjack input\nRUN mkdir -p /etc/pki/tls/certs \\\n && mkdir /etc/pki/tls/private\nADD ./logstash-beats.crt /etc/pki/tls/certs/logstash-beats.crt\nADD ./logstash-beats.key /etc/pki/tls/private/logstash-beats.key\n#   pipelines\nADD pipelines.yml ${LOGSTASH_PATH_SETTINGS}/pipelines.yml\n#   filters\nADD ./02-beats-input.conf ${LOGSTASH_PATH_CONF}/conf.d/02-beats-input.conf\nADD ./10-syslog.conf ${LOGSTASH_PATH_CONF}/conf.d/10-syslog.conf\nADD ./11-nginx.conf ${LOGSTASH_PATH_CONF}/conf.d/11-nginx.conf\nADD ./30-output.conf ${LOGSTASH_PATH_CONF}/conf.d/30-output.conf\n#   patterns\nADD ./nginx.pattern ${LOGSTASH_HOME}/patterns/nginx\nRUN chown -R logstash:logstash ${LOGSTASH_HOME}/patterns\n#   Fix permissions\nRUN chmod -R +r ${LOGSTASH_PATH_CONF} ${LOGSTASH_PATH_SETTINGS} \\\n && chown -R logstash:logstash ${LOGSTASH_PATH_SETTINGS}\n#  ## configure logrotate\nADD ./elasticsearch-logrotate /etc/logrotate.d/elasticsearch\nADD ./logstash-logrotate /etc/logrotate.d/logstash\nADD ./kibana-logrotate /etc/logrotate.d/kibana\nRUN chmod 644 /etc/logrotate.d/elasticsearch \\\n && chmod 644 /etc/logrotate.d/logstash \\\n && chmod 644 /etc/logrotate.d/kibana\n#  ## configure Kibana\nADD ./kibana.yml ${KIBANA_HOME}/config/kibana.yml\n#  ##############################################################################\n#                                     START\n#  ##############################################################################\nADD ./start.sh /usr/local/bin/start.sh\nRUN chmod +x /usr/local/bin/start.sh\nEXPOSE 5601/tcp 9200/tcp 9300/tcp 5044/tcp\nVOLUME /var/lib/elasticsearch\nCMD [\"/usr/local/bin/start.sh\"]\n","originalDockerfileUglifiedHash":"bc7e60778b5b5f5d30da01b80fe1d215","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/0d1c0236d643ae07f9df69e703729266697b1a67.dockerfile"}