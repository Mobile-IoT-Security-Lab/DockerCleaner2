{"seed":210382619,"processedDockerfileHash":"09cc6fc0aa017fbf28c7c60c383a8ef6","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM csp-alpine35glibc:1.0\nMAINTAINER tku\n#   version of RT\nENV RT_VERSION=\"4.4.2\"\n#   version of RT::IR extension\nENV RT_IR_VERSION=\"4.0.0\"\n#   address of the RT host\nENV RT_HOSTNAME=\"csp-rt\"\n#   address of the postgresql host\nENV RT_DB_HOST=\"csp-postgres\"\n#   port of the postgresql\nENV RT_DB_PORT=\"5432\"\n#   type of the db to be used by RT -> here postgresql\nENV RT_DB_TYPE=\"Pg\"\nRUN set -x \\\n && apk update \\\n && apk upgrade \\\n && apk add lighttpd perl wget vim fcgi postfix-pcre openssl postgresql-client perl-lwp-protocol-https perl-dbd-pg perl-dbd-mysql perl-dbd-sqlite perl-cgi-psgi perl-cgi perl-fcgi perl-term-readkey perl-xml-rss perl-crypt-ssleay perl-crypt-eksblowfish perl-crypt-x509 perl-html-mason-psgihandler perl-fcgi-procmanager perl-mime-types perl-list-moreutils perl-json perl-html-quoted perl-html-scrubber perl-email-address perl-text-password-pronounceable perl-email-address-list perl-html-formattext-withlinks-andtables perl-html-rewriteattributes perl-text-wikiformat perl-text-quoted perl-datetime-format-natural perl-date-extract perl-data-guid perl-data-ical perl-string-shellquote perl-convert-color perl-dbix-searchbuilder perl-file-which perl-css-squish perl-tree-simple perl-plack perl-log-dispatch perl-module-versions-report perl-symbol-global-name perl-devel-globaldestruction perl-parallel-prefork perl-cgi-emulate-psgi perl-text-template perl-net-cidr perl-apache-session perl-locale-maketext-lexicon perl-locale-maketext-fuzzy perl-graphviz perl-regexp-common-net-cidr perl-module-refresh perl-date-manip perl-regexp-ipv6 perl-text-wrapper perl-universal-require perl-role-basic perl-convert-binhex perl-test-sharedfork perl-test-tcp perl-server-starter perl-starlet make gnupg gcc perl-dev libc-dev less expat-dev perl-gd gd lua --update \\\n && rm -f /var/cache/apk/* \\\n && wget -O /tmp/rt-$RT_VERSION.tar.gz https://download.bestpractical.com/pub/rt/release/rt-$RT_VERSION.tar.gz \\\n && wget -O /tmp/RT-IR-$RT_IR_VERSION.tar.gz https://download.bestpractical.com/pub/rt/release/RT-IR-$RT_IR_VERSION.tar.gz \\\n && tar -xvz -C /tmp -f /tmp/rt-$RT_VERSION.tar.gz \\\n && cd /tmp/rt-$RT_VERSION \\\n && (echo y ;echo o conf prerequisites_policy follow ;echo o conf commit ) | cpan \\\n && cpan -f GnuPG::Interface \\\n && cpan -f Capture::Tiny \\\n && cpan -f Time::ParseDate \\\n && cpan -f REST::Client \\\n && ./configure --with-web-user=lighttpd --with-web-group=lighttpd --enable-gpg --enable-gd --enable-graphviz --with-db-type=${RT_DB_TYPE} --with-db-host=${RT_DB_HOST} --with-db-port=${RT_DB_PORT} --with-db-rt-host=${RT_HOSTNAME} --enable-externalauth \\\n && make fixdeps \\\n && make install \\\n && mkdir /var/run/lighttpd/ \\\n && touch /var/run/lighttpd/lighttpd-fcgi.sock-0 \\\n && chown -R lighttpd:lighttpd /var/run/lighttpd \\\n && mkdir /scripts \\\n && mkdir /scripts/rt \\\n && mkdir -p /opt/rt4/local/lib/RT/Action \\\n && mkdir -p /opt/rt4/local/lib/RT/Condition \\\n && mkdir -p /opt/rt4/local/lib/RT/CustomFieldValues \\\n && mv /opt/rt4/etc/initialdata /opt/rt4/etc/initialdata.orig \\\n && mkdir -p /opt/rt4/var/log \\\n && touch /opt/rt4/var/log/CSP.RT-exc.log \\\n && chown -R lighttpd:lighttpd /opt/rt4/var\nCOPY config/mod_fastcgi.conf /etc/lighttpd/\nCOPY config/lighttpd.conf /etc/lighttpd/\nCOPY config/remote_user.lua /etc/lighttpd/\nCOPY config/RT_SiteConfig.pm /opt/rt4/etc/\nCOPY scripts/run.sh /scripts/run.sh\nCOPY scripts/reinitdb.sh /scripts/reinitdb.sh\nCOPY scripts/dropdb.sh /scripts/dropdb.sh\nCOPY scripts/initdb.sh /scripts/initdb.sh\nCOPY scripts/initrt.sh /scripts/initrt.sh\nCOPY scripts/cleandb.sh /scripts/cleandb.sh\nCOPY scripts/uninit-rt.sh /scripts/uninit-rt.sh\nCOPY config/custom-actions/SetUUIDAction.pm /opt/rt4/local/lib/RT/Action/SetUUIDAction.pm\nCOPY config/custom-actions/CSPOnCreateAction.pm /opt/rt4/local/lib/RT/Action/CSPOnCreateAction.pm\nCOPY config/custom-conditions/CSP_ToEmitter.pm /opt/rt4/local/lib/RT/Condition/CSP_ToEmitter.pm\nCOPY config/custom-field-values/CustomTCSource.pm /opt/rt4/local/lib/RT/CustomFieldValues/CustomTCSource.pm\n#   only temp solution, should be replaced by directly call to TC\nCOPY config/custom-field-values/tc-list.json /opt/rt4/local/lib/RT/CustomFieldValues/tc-list.json\nCOPY config/custom-field-values/teams-list.json /opt/rt4/local/lib/RT/CustomFieldValues/teams-list.json\n#   end of temp solution\nCOPY config/initialdata.csp /opt/rt4/etc/initialdata\nCOPY config/additional-initialdata.csp /opt/rt4/etc/additional-initialdata.csp\nRUN chown lighttpd:lighttpd /opt/rt4/etc/RT_SiteConfig.pm \\\n && chown lighttpd:lighttpd /etc/lighttpd/* \\\n && chmod 400 /etc/lighttpd/* \\\n && cd /tmp \\\n && tar -xzf RT-IR-$RT_IR_VERSION.tar.gz \\\n && cd RT-IR-${RT_IR_VERSION} \\\n && cpan Parse::BooleanLogic \\\n && cpan Cpanel::JSON::XS \\\n && cpan JSON::XS \\\n && perl Makefile.PL \\\n && make \\\n && make install \\\n && cd / \\\n && chmod -R 0755 /scripts \\\n && rm -f /tmp/rt-$RT_VERSION.tar.gz \\\n && rm -f /tmp/RT-IR-$RT_IR_VERSION.tar.gz \\\n && echo \"DONE SUCCESSFULLY !!!!\"\nEXPOSE 80/tcp\nENTRYPOINT [\"/scripts/run.sh\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM csp-alpine35glibc:1.0\nMAINTAINER tku\n#  version of RT\nENV RT_VERSION=\"4.4.2\"\n#  version of RT::IR extension\nENV RT_IR_VERSION=\"4.0.0\"\n#  address of the RT host\nENV RT_HOSTNAME=\"csp-rt\"\n#  address of the postgresql host\nENV RT_DB_HOST=\"csp-postgres\"\n#  port of the postgresql\nENV RT_DB_PORT=\"5432\"\n#  type of the db to be used by RT -> here postgresql\nENV RT_DB_TYPE=\"Pg\"\nRUN set -x \\\n && apk update \\\n && apk upgrade \\\n && apk --update add lighttpd perl wget vim fcgi postfix-pcre openssl postgresql-client perl-lwp-protocol-https perl-dbd-pg perl-dbd-mysql perl-dbd-sqlite perl-cgi-psgi perl-cgi perl-fcgi perl-term-readkey perl-xml-rss perl-crypt-ssleay perl-crypt-eksblowfish perl-crypt-x509 perl-html-mason-psgihandler perl-fcgi-procmanager perl-mime-types perl-list-moreutils perl-json perl-html-quoted perl-html-scrubber perl-email-address perl-text-password-pronounceable perl-email-address-list perl-html-formattext-withlinks-andtables perl-html-rewriteattributes perl-text-wikiformat perl-text-quoted perl-datetime-format-natural perl-date-extract perl-data-guid perl-data-ical perl-string-shellquote perl-convert-color perl-dbix-searchbuilder perl-file-which perl-css-squish perl-tree-simple perl-plack perl-log-dispatch perl-module-versions-report perl-symbol-global-name perl-devel-globaldestruction perl-parallel-prefork perl-cgi-emulate-psgi perl-text-template perl-net-cidr perl-apache-session perl-locale-maketext-lexicon perl-locale-maketext-fuzzy perl-graphviz perl-regexp-common-net-cidr perl-module-refresh perl-date-manip perl-regexp-ipv6 perl-text-wrapper perl-universal-require perl-role-basic perl-convert-binhex perl-test-sharedfork perl-test-tcp perl-server-starter perl-starlet make gnupg gcc perl-dev libc-dev less expat-dev perl-gd gd lua \\\n && rm -f /var/cache/apk/* \\\n && wget -O /tmp/rt-$RT_VERSION.tar.gz https://download.bestpractical.com/pub/rt/release/rt-$RT_VERSION.tar.gz \\\n && wget -O /tmp/RT-IR-$RT_IR_VERSION.tar.gz https://download.bestpractical.com/pub/rt/release/RT-IR-$RT_IR_VERSION.tar.gz \\\n && tar -xvz -C /tmp -f /tmp/rt-$RT_VERSION.tar.gz \\\n && cd /tmp/rt-$RT_VERSION \\\n && (echo y ;echo o conf prerequisites_policy follow ;echo o conf commit ) | cpan \\\n && cpan -f GnuPG::Interface \\\n && cpan -f Capture::Tiny \\\n && cpan -f Time::ParseDate \\\n && cpan -f REST::Client \\\n && ./configure --with-web-user=lighttpd --with-web-group=lighttpd --enable-gpg --enable-gd --enable-graphviz --with-db-type=${RT_DB_TYPE} --with-db-host=${RT_DB_HOST} --with-db-port=${RT_DB_PORT} --with-db-rt-host=${RT_HOSTNAME} --enable-externalauth \\\n && make fixdeps \\\n && make install \\\n && mkdir /var/run/lighttpd/ \\\n && touch /var/run/lighttpd/lighttpd-fcgi.sock-0 \\\n && chown -R lighttpd:lighttpd /var/run/lighttpd \\\n && mkdir /scripts \\\n && mkdir /scripts/rt \\\n && mkdir -p /opt/rt4/local/lib/RT/Action \\\n && mkdir -p /opt/rt4/local/lib/RT/Condition \\\n && mkdir -p /opt/rt4/local/lib/RT/CustomFieldValues \\\n && mv /opt/rt4/etc/initialdata /opt/rt4/etc/initialdata.orig \\\n && mkdir -p /opt/rt4/var/log \\\n && touch /opt/rt4/var/log/CSP.RT-exc.log \\\n && chown -R lighttpd:lighttpd /opt/rt4/var\nADD config/mod_fastcgi.conf /etc/lighttpd/\nADD config/lighttpd.conf /etc/lighttpd/\nADD config/remote_user.lua /etc/lighttpd/\nADD config/RT_SiteConfig.pm /opt/rt4/etc/\nADD scripts/run.sh /scripts/run.sh\nADD scripts/reinitdb.sh /scripts/reinitdb.sh\nADD scripts/dropdb.sh /scripts/dropdb.sh\nADD scripts/initdb.sh /scripts/initdb.sh\nADD scripts/initrt.sh /scripts/initrt.sh\nADD scripts/cleandb.sh /scripts/cleandb.sh\nADD scripts/uninit-rt.sh /scripts/uninit-rt.sh\nADD config/custom-actions/SetUUIDAction.pm /opt/rt4/local/lib/RT/Action/SetUUIDAction.pm\nADD config/custom-actions/CSPOnCreateAction.pm /opt/rt4/local/lib/RT/Action/CSPOnCreateAction.pm\nADD config/custom-conditions/CSP_ToEmitter.pm /opt/rt4/local/lib/RT/Condition/CSP_ToEmitter.pm\nADD config/custom-field-values/CustomTCSource.pm /opt/rt4/local/lib/RT/CustomFieldValues/CustomTCSource.pm\n#  only temp solution, should be replaced by directly call to TC\nADD config/custom-field-values/tc-list.json /opt/rt4/local/lib/RT/CustomFieldValues/tc-list.json\nADD config/custom-field-values/teams-list.json /opt/rt4/local/lib/RT/CustomFieldValues/teams-list.json\n#  end of temp solution\nADD config/initialdata.csp /opt/rt4/etc/initialdata\nADD config/additional-initialdata.csp /opt/rt4/etc/additional-initialdata.csp\nRUN chown lighttpd:lighttpd /opt/rt4/etc/RT_SiteConfig.pm \\\n && chown lighttpd:lighttpd /etc/lighttpd/* \\\n && chmod 400 /etc/lighttpd/* \\\n && cd /tmp \\\n && tar -xzf RT-IR-$RT_IR_VERSION.tar.gz \\\n && cd RT-IR-${RT_IR_VERSION} \\\n && cpan Parse::BooleanLogic \\\n && cpan Cpanel::JSON::XS \\\n && cpan JSON::XS \\\n && perl Makefile.PL \\\n && make \\\n && make install \\\n && cd / \\\n && chmod -R 0755 /scripts \\\n && rm -f /tmp/rt-$RT_VERSION.tar.gz \\\n && rm -f /tmp/RT-IR-$RT_IR_VERSION.tar.gz \\\n && echo \"DONE SUCCESSFULLY !!!!\"\nEXPOSE 80/tcp\nENTRYPOINT [\"/scripts/run.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"5bcd1c42cda7f1cba4dcf89b0c8a2f1b","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM csp-alpine35glibc:1.0\nMAINTAINER tku\n#   version of RT\nENV RT_VERSION=\"4.4.2\"\n#   version of RT::IR extension\nENV RT_IR_VERSION=\"4.0.0\"\n#   address of the RT host\nENV RT_HOSTNAME=\"csp-rt\"\n#   address of the postgresql host\nENV RT_DB_HOST=\"csp-postgres\"\n#   port of the postgresql\nENV RT_DB_PORT=\"5432\"\n#   type of the db to be used by RT -> here postgresql\nENV RT_DB_TYPE=\"Pg\"\nRUN set -x \\\n && apk update \\\n && apk upgrade \\\n && apk --update add lighttpd perl wget vim fcgi postfix-pcre openssl postgresql-client perl-lwp-protocol-https perl-dbd-pg perl-dbd-mysql perl-dbd-sqlite perl-cgi-psgi perl-cgi perl-fcgi perl-term-readkey perl-xml-rss perl-crypt-ssleay perl-crypt-eksblowfish perl-crypt-x509 perl-html-mason-psgihandler perl-fcgi-procmanager perl-mime-types perl-list-moreutils perl-json perl-html-quoted perl-html-scrubber perl-email-address perl-text-password-pronounceable perl-email-address-list perl-html-formattext-withlinks-andtables perl-html-rewriteattributes perl-text-wikiformat perl-text-quoted perl-datetime-format-natural perl-date-extract perl-data-guid perl-data-ical perl-string-shellquote perl-convert-color perl-dbix-searchbuilder perl-file-which perl-css-squish perl-tree-simple perl-plack perl-log-dispatch perl-module-versions-report perl-symbol-global-name perl-devel-globaldestruction perl-parallel-prefork perl-cgi-emulate-psgi perl-text-template perl-net-cidr perl-apache-session perl-locale-maketext-lexicon perl-locale-maketext-fuzzy perl-graphviz perl-regexp-common-net-cidr perl-module-refresh perl-date-manip perl-regexp-ipv6 perl-text-wrapper perl-universal-require perl-role-basic perl-convert-binhex perl-test-sharedfork perl-test-tcp perl-server-starter perl-starlet make gnupg gcc perl-dev libc-dev less expat-dev perl-gd gd lua \\\n && rm -f /var/cache/apk/* \\\n && wget -O /tmp/rt-$RT_VERSION.tar.gz https://download.bestpractical.com/pub/rt/release/rt-$RT_VERSION.tar.gz \\\n && wget -O /tmp/RT-IR-$RT_IR_VERSION.tar.gz https://download.bestpractical.com/pub/rt/release/RT-IR-$RT_IR_VERSION.tar.gz \\\n && tar -xvz -C /tmp -f /tmp/rt-$RT_VERSION.tar.gz \\\n && cd /tmp/rt-$RT_VERSION \\\n && (echo y ;echo o conf prerequisites_policy follow ;echo o conf commit ) | cpan \\\n && cpan -f GnuPG::Interface \\\n && cpan -f Capture::Tiny \\\n && cpan -f Time::ParseDate \\\n && cpan -f REST::Client \\\n && ./configure --with-web-user=lighttpd --with-web-group=lighttpd --enable-gpg --enable-gd --enable-graphviz --with-db-type=${RT_DB_TYPE} --with-db-host=${RT_DB_HOST} --with-db-port=${RT_DB_PORT} --with-db-rt-host=${RT_HOSTNAME} --enable-externalauth \\\n && make fixdeps \\\n && make install \\\n && mkdir /var/run/lighttpd/ \\\n && touch /var/run/lighttpd/lighttpd-fcgi.sock-0 \\\n && chown -R lighttpd:lighttpd /var/run/lighttpd \\\n && mkdir /scripts \\\n && mkdir /scripts/rt \\\n && mkdir -p /opt/rt4/local/lib/RT/Action \\\n && mkdir -p /opt/rt4/local/lib/RT/Condition \\\n && mkdir -p /opt/rt4/local/lib/RT/CustomFieldValues \\\n && mv /opt/rt4/etc/initialdata /opt/rt4/etc/initialdata.orig \\\n && mkdir -p /opt/rt4/var/log \\\n && touch /opt/rt4/var/log/CSP.RT-exc.log \\\n && chown -R lighttpd:lighttpd /opt/rt4/var\nADD config/mod_fastcgi.conf /etc/lighttpd/\nADD config/lighttpd.conf /etc/lighttpd/\nADD config/remote_user.lua /etc/lighttpd/\nADD config/RT_SiteConfig.pm /opt/rt4/etc/\nADD scripts/run.sh /scripts/run.sh\nADD scripts/reinitdb.sh /scripts/reinitdb.sh\nADD scripts/dropdb.sh /scripts/dropdb.sh\nADD scripts/initdb.sh /scripts/initdb.sh\nADD scripts/initrt.sh /scripts/initrt.sh\nADD scripts/cleandb.sh /scripts/cleandb.sh\nADD scripts/uninit-rt.sh /scripts/uninit-rt.sh\nADD config/custom-actions/SetUUIDAction.pm /opt/rt4/local/lib/RT/Action/SetUUIDAction.pm\nADD config/custom-actions/CSPOnCreateAction.pm /opt/rt4/local/lib/RT/Action/CSPOnCreateAction.pm\nADD config/custom-conditions/CSP_ToEmitter.pm /opt/rt4/local/lib/RT/Condition/CSP_ToEmitter.pm\nADD config/custom-field-values/CustomTCSource.pm /opt/rt4/local/lib/RT/CustomFieldValues/CustomTCSource.pm\n#   only temp solution, should be replaced by directly call to TC\nADD config/custom-field-values/tc-list.json /opt/rt4/local/lib/RT/CustomFieldValues/tc-list.json\nADD config/custom-field-values/teams-list.json /opt/rt4/local/lib/RT/CustomFieldValues/teams-list.json\n#   end of temp solution\nADD config/initialdata.csp /opt/rt4/etc/initialdata\nADD config/additional-initialdata.csp /opt/rt4/etc/additional-initialdata.csp\nRUN chown lighttpd:lighttpd /opt/rt4/etc/RT_SiteConfig.pm \\\n && chown lighttpd:lighttpd /etc/lighttpd/* \\\n && chmod 400 /etc/lighttpd/* \\\n && cd /tmp \\\n && tar -xzf RT-IR-$RT_IR_VERSION.tar.gz \\\n && cd RT-IR-${RT_IR_VERSION} \\\n && cpan Parse::BooleanLogic \\\n && cpan Cpanel::JSON::XS \\\n && cpan JSON::XS \\\n && perl Makefile.PL \\\n && make \\\n && make install \\\n && cd / \\\n && chmod -R 0755 /scripts \\\n && rm -f /tmp/rt-$RT_VERSION.tar.gz \\\n && rm -f /tmp/RT-IR-$RT_IR_VERSION.tar.gz \\\n && echo \"DONE SUCCESSFULLY !!!!\"\nEXPOSE 80/tcp\nENTRYPOINT [\"/scripts/run.sh\"]\n","originalDockerfileUglifiedHash":"eafa9c6965e021e6639c5f6b6bbab993","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/eb385a77e9e649e9133035131887098a48b69835.dockerfile"}