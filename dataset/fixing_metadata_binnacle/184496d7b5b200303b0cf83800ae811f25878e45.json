{"seed":528025791,"processedDockerfileHash":"7c0cd0a9a5cde3d05491e9faaa44d299","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","use-copy-instead-of-add","have-a-user"],"processedDockerfile":"#  !/bin/sh\n#\n#   Copyright 2017-2019 Kopano and its licensors\n#\n#   Licensed under the Apache License, Version 2.0 (the \"License\");\n#   you may not use this file except in compliance with the License.\n#   You may obtain a copy of the License at\n#\n#       http://www.apache.org/licenses/LICENSE-2.0\n#\n#   Unless required by applicable law or agreed to in writing, software\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#   See the License for the specific language governing permissions and\n#   limitations under the License.\n#\nFROM alpine:3.9\nMAINTAINER Kopano Development <development@kopano.io>\nRUN apk add su-exec=0.2-r0 --update \\\n && rm -rf /var/cache/apk/*\n#   Expose ports.\nEXPOSE 8777/tcp\n#   Define basic environment variables.\nENV EXE=\"konnectd\"\nENV KONNECTD_LISTEN=\"0.0.0.0:8777\"\nENV KONNECTD_IDENTIFIER_CLIENT_PATH=\"/var/lib/konnectd-docker/identifier-webapp\"\nENV KONNECTD_DOCKER_SECRETS_PATH=\"/run/secrets\"\nENV KONNECTD_SIGNING_PRIVATE_KEY_FILE=\"konnectd_signing_private_key\"\nENV KONNECTD_ENCRYPTION_SECRET_FILE=\"konnectd_encryption_secret\"\nENV KONNECTD_KOPANO_SERVER_USERNAME_FILE=\"konnectd_kopano_server_username\"\nENV KONNECTD_KOPANO_SERVER_PASSWORD_FILE=\"konnectd_kopano_server_password\"\nENV KONNECTD_LDAP_BIND_DN_FILE=\"konnectd_ldap_bind_dn\"\nENV KONNECTD_LDAP_BIND_PASSWORD_FILE=\"konnectd_ldap_bind_password\"\n#   Defaults which can be overwritten.\nENV KOPANO_SERVER_DEFAULT_URI=\"file:///run/kopano/server.sock\"\nENV KOPANO_SERVER_USERNAME=\"\"\nENV KOPANO_SERVER_PASSWORD=\"\"\nENV KOPANO_SERVER_SESSION_TIMEOUT=\"\"\nENV LDAP_URI=\"\"\nENV LDAP_BINDDN=\"\"\nENV LDAP_BINDPW=\"\"\nENV ARGS=\"\"\n#   User and group defaults.\nENV KONNECTD_USER=\"nobody\"\nENV KONNECTD_GROUP=\"nogroup\"\nWORKDIR /var/lib/konnectd-docker\n#   Copy Docker specific scripts and ensure they are executable.\nCOPY scripts/docker-entrypoint.sh scripts/healthcheck.sh /usr/local/bin/\nRUN chmod 755 /usr/local/bin/*.sh\n#   Add Docker specific runtime setup functions.\nRUN mkdir /etc/defaults \\\n && echo $'setup_secrets() { \\n local signingPrivateKeyFile=\"${KONNECTD_DOCKER_SECRETS_PATH}/${KONNECTD_SIGNING_PRIVATE_KEY_FILE}\" \\n if [ -f \"${signingPrivateKeyFile}\" ]; then \\n export KONNECTD_SIGNING_PRIVATE_KEY=\"${signingPrivateKeyFile}\" \\n fi \\n local encryptionSecretFile=\"${KONNECTD_DOCKER_SECRETS_PATH}/${KONNECTD_ENCRYPTION_SECRET_FILE}\" \\n if [ -f \"${encryptionSecretFile}\" ]; then \\n export KONNECTD_ENCRYPTION_SECRET=\"${encryptionSecretFile}\" \\n fi \\n local kopanoServerUsernameFile=\"${KONNECTD_DOCKER_SECRETS_PATH}/${KONNECTD_KOPANO_SERVER_USERNAME_FILE}\" \\n if [ -f \"${kopanoServerUsernameFile}\" ]; then \\n export KOPANO_SERVER_USERNAME=\"$(cat ${kopanoServerUsernameFile})\" \\n fi \\n local kopanoServerPasswordFile=\"${KONNECTD_DOCKER_SECRETS_PATH}/${KONNECTD_KOPANO_SERVER_PASSWORD_FILE}\" \\n if [ -f \"${kopanoServerPasswordFile}\" ]; then \\n export KOPANO_SERVER_PASSWORD=\"$(cat ${kopanoServerPasswordFile})\" \\n fi \\n local ldapBindDNFile=\"${KONNECTD_DOCKER_SECRETS_PATH}/${KONNECTD_LDAP_BIND_DN_FILE}\" \\n if [ -f \"${ldapBindDNFile}\" ]; then \\n export LDAP_BINDDN=\"$(cat ${ldapBindDNFile})\" \\n fi \\n local ldapBindPasswordFile=\"${KONNECTD_DOCKER_SECRETS_PATH}/${KONNECTD_LDAP_BIND_PASSWORD_FILE}\" \\n if [ -f \"${ldapBindPasswordFile}\" ]; then \\n export LDAP_BINDPW=\"$(cat ${ldapBindPasswordFile})\" \\n fi \\n}\\nsetup_secrets\\n' > /etc/defaults/docker-env\n#   Add project resources.\nCOPY identifier/build /var/lib/konnectd-docker/identifier-webapp\n#   Add project main binary.\nCOPY bin/konnectd /usr/local/bin/${EXE}\nENTRYPOINT [\"docker-entrypoint.sh\"]\nCMD [\"konnectd\", \"--help\"]\n#   Health check support is cool too.\nHEALTHCHECK --interval=30s --timeout=5s CMD healthcheck.sh\nRUN addgroup -S docker-user ; adduser -S -G docker-user docker-user\nUSER docker-user\n","originalDockerfile":"# !/bin/sh\n#\n#  Copyright 2017-2019 Kopano and its licensors\n#\n#  Licensed under the Apache License, Version 2.0 (the \"License\");\n#  you may not use this file except in compliance with the License.\n#  You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n#  Unless required by applicable law or agreed to in writing, software\n#  distributed under the License is distributed on an \"AS IS\" BASIS,\n#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#  See the License for the specific language governing permissions and\n#  limitations under the License.\n#\nFROM alpine:3.9\nMAINTAINER Kopano Development <development@kopano.io>\nRUN apk add --update su-exec \\\n && rm -rf /var/cache/apk/*\n#  Expose ports.\nEXPOSE 8777/tcp\n#  Define basic environment variables.\nENV EXE=\"konnectd\"\nENV KONNECTD_LISTEN=\"0.0.0.0:8777\"\nENV KONNECTD_IDENTIFIER_CLIENT_PATH=\"/var/lib/konnectd-docker/identifier-webapp\"\nENV KONNECTD_DOCKER_SECRETS_PATH=\"/run/secrets\"\nENV KONNECTD_SIGNING_PRIVATE_KEY_FILE=\"konnectd_signing_private_key\"\nENV KONNECTD_ENCRYPTION_SECRET_FILE=\"konnectd_encryption_secret\"\nENV KONNECTD_KOPANO_SERVER_USERNAME_FILE=\"konnectd_kopano_server_username\"\nENV KONNECTD_KOPANO_SERVER_PASSWORD_FILE=\"konnectd_kopano_server_password\"\nENV KONNECTD_LDAP_BIND_DN_FILE=\"konnectd_ldap_bind_dn\"\nENV KONNECTD_LDAP_BIND_PASSWORD_FILE=\"konnectd_ldap_bind_password\"\n#  Defaults which can be overwritten.\nENV KOPANO_SERVER_DEFAULT_URI=\"file:///run/kopano/server.sock\"\nENV KOPANO_SERVER_USERNAME=\"\"\nENV KOPANO_SERVER_PASSWORD=\"\"\nENV KOPANO_SERVER_SESSION_TIMEOUT=\"\"\nENV LDAP_URI=\"\"\nENV LDAP_BINDDN=\"\"\nENV LDAP_BINDPW=\"\"\nENV ARGS=\"\"\n#  User and group defaults.\nENV KONNECTD_USER=\"nobody\"\nENV KONNECTD_GROUP=\"nogroup\"\nWORKDIR /var/lib/konnectd-docker\n#  Copy Docker specific scripts and ensure they are executable.\nCOPY scripts/docker-entrypoint.sh scripts/healthcheck.sh /usr/local/bin/\nRUN chmod 755 /usr/local/bin/*.sh\n#  Add Docker specific runtime setup functions.\nRUN mkdir /etc/defaults \\\n && echo $'setup_secrets() { \\n local signingPrivateKeyFile=\"${KONNECTD_DOCKER_SECRETS_PATH}/${KONNECTD_SIGNING_PRIVATE_KEY_FILE}\" \\n if [ -f \"${signingPrivateKeyFile}\" ]; then \\n export KONNECTD_SIGNING_PRIVATE_KEY=\"${signingPrivateKeyFile}\" \\n fi \\n local encryptionSecretFile=\"${KONNECTD_DOCKER_SECRETS_PATH}/${KONNECTD_ENCRYPTION_SECRET_FILE}\" \\n if [ -f \"${encryptionSecretFile}\" ]; then \\n export KONNECTD_ENCRYPTION_SECRET=\"${encryptionSecretFile}\" \\n fi \\n local kopanoServerUsernameFile=\"${KONNECTD_DOCKER_SECRETS_PATH}/${KONNECTD_KOPANO_SERVER_USERNAME_FILE}\" \\n if [ -f \"${kopanoServerUsernameFile}\" ]; then \\n export KOPANO_SERVER_USERNAME=\"$(cat ${kopanoServerUsernameFile})\" \\n fi \\n local kopanoServerPasswordFile=\"${KONNECTD_DOCKER_SECRETS_PATH}/${KONNECTD_KOPANO_SERVER_PASSWORD_FILE}\" \\n if [ -f \"${kopanoServerPasswordFile}\" ]; then \\n export KOPANO_SERVER_PASSWORD=\"$(cat ${kopanoServerPasswordFile})\" \\n fi \\n local ldapBindDNFile=\"${KONNECTD_DOCKER_SECRETS_PATH}/${KONNECTD_LDAP_BIND_DN_FILE}\" \\n if [ -f \"${ldapBindDNFile}\" ]; then \\n export LDAP_BINDDN=\"$(cat ${ldapBindDNFile})\" \\n fi \\n local ldapBindPasswordFile=\"${KONNECTD_DOCKER_SECRETS_PATH}/${KONNECTD_LDAP_BIND_PASSWORD_FILE}\" \\n if [ -f \"${ldapBindPasswordFile}\" ]; then \\n export LDAP_BINDPW=\"$(cat ${ldapBindPasswordFile})\" \\n fi \\n}\\nsetup_secrets\\n' > /etc/defaults/docker-env\n#  Add project resources.\nADD identifier/build /var/lib/konnectd-docker/identifier-webapp\n#  Add project main binary.\nCOPY bin/konnectd /usr/local/bin/${EXE}\nENTRYPOINT [\"docker-entrypoint.sh\"]\nCMD [\"konnectd\", \"--help\"]\n#  Health check support is cool too.\nHEALTHCHECK --interval=30s --timeout=5s CMD healthcheck.sh\n","injectedSmells":[],"originalDockerfileHash":"8c9ab0b815ffa330f4ce16e81f7908bf","successfullyInjectedSmells":[],"originalDockerfileUglified":"#  !/bin/sh\n#\n#   Copyright 2017-2019 Kopano and its licensors\n#\n#   Licensed under the Apache License, Version 2.0 (the \"License\");\n#   you may not use this file except in compliance with the License.\n#   You may obtain a copy of the License at\n#\n#       http://www.apache.org/licenses/LICENSE-2.0\n#\n#   Unless required by applicable law or agreed to in writing, software\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#   See the License for the specific language governing permissions and\n#   limitations under the License.\n#\nFROM alpine:3.9\nMAINTAINER Kopano Development <development@kopano.io>\nRUN apk add --update su-exec \\\n && rm -rf /var/cache/apk/*\n#   Expose ports.\nEXPOSE 8777/tcp\n#   Define basic environment variables.\nENV EXE=\"konnectd\"\nENV KONNECTD_LISTEN=\"0.0.0.0:8777\"\nENV KONNECTD_IDENTIFIER_CLIENT_PATH=\"/var/lib/konnectd-docker/identifier-webapp\"\nENV KONNECTD_DOCKER_SECRETS_PATH=\"/run/secrets\"\nENV KONNECTD_SIGNING_PRIVATE_KEY_FILE=\"konnectd_signing_private_key\"\nENV KONNECTD_ENCRYPTION_SECRET_FILE=\"konnectd_encryption_secret\"\nENV KONNECTD_KOPANO_SERVER_USERNAME_FILE=\"konnectd_kopano_server_username\"\nENV KONNECTD_KOPANO_SERVER_PASSWORD_FILE=\"konnectd_kopano_server_password\"\nENV KONNECTD_LDAP_BIND_DN_FILE=\"konnectd_ldap_bind_dn\"\nENV KONNECTD_LDAP_BIND_PASSWORD_FILE=\"konnectd_ldap_bind_password\"\n#   Defaults which can be overwritten.\nENV KOPANO_SERVER_DEFAULT_URI=\"file:///run/kopano/server.sock\"\nENV KOPANO_SERVER_USERNAME=\"\"\nENV KOPANO_SERVER_PASSWORD=\"\"\nENV KOPANO_SERVER_SESSION_TIMEOUT=\"\"\nENV LDAP_URI=\"\"\nENV LDAP_BINDDN=\"\"\nENV LDAP_BINDPW=\"\"\nENV ARGS=\"\"\n#   User and group defaults.\nENV KONNECTD_USER=\"nobody\"\nENV KONNECTD_GROUP=\"nogroup\"\nWORKDIR /var/lib/konnectd-docker\n#   Copy Docker specific scripts and ensure they are executable.\nCOPY scripts/docker-entrypoint.sh scripts/healthcheck.sh /usr/local/bin/\nRUN chmod 755 /usr/local/bin/*.sh\n#   Add Docker specific runtime setup functions.\nRUN mkdir /etc/defaults \\\n && echo $'setup_secrets() { \\n local signingPrivateKeyFile=\"${KONNECTD_DOCKER_SECRETS_PATH}/${KONNECTD_SIGNING_PRIVATE_KEY_FILE}\" \\n if [ -f \"${signingPrivateKeyFile}\" ]; then \\n export KONNECTD_SIGNING_PRIVATE_KEY=\"${signingPrivateKeyFile}\" \\n fi \\n local encryptionSecretFile=\"${KONNECTD_DOCKER_SECRETS_PATH}/${KONNECTD_ENCRYPTION_SECRET_FILE}\" \\n if [ -f \"${encryptionSecretFile}\" ]; then \\n export KONNECTD_ENCRYPTION_SECRET=\"${encryptionSecretFile}\" \\n fi \\n local kopanoServerUsernameFile=\"${KONNECTD_DOCKER_SECRETS_PATH}/${KONNECTD_KOPANO_SERVER_USERNAME_FILE}\" \\n if [ -f \"${kopanoServerUsernameFile}\" ]; then \\n export KOPANO_SERVER_USERNAME=\"$(cat ${kopanoServerUsernameFile})\" \\n fi \\n local kopanoServerPasswordFile=\"${KONNECTD_DOCKER_SECRETS_PATH}/${KONNECTD_KOPANO_SERVER_PASSWORD_FILE}\" \\n if [ -f \"${kopanoServerPasswordFile}\" ]; then \\n export KOPANO_SERVER_PASSWORD=\"$(cat ${kopanoServerPasswordFile})\" \\n fi \\n local ldapBindDNFile=\"${KONNECTD_DOCKER_SECRETS_PATH}/${KONNECTD_LDAP_BIND_DN_FILE}\" \\n if [ -f \"${ldapBindDNFile}\" ]; then \\n export LDAP_BINDDN=\"$(cat ${ldapBindDNFile})\" \\n fi \\n local ldapBindPasswordFile=\"${KONNECTD_DOCKER_SECRETS_PATH}/${KONNECTD_LDAP_BIND_PASSWORD_FILE}\" \\n if [ -f \"${ldapBindPasswordFile}\" ]; then \\n export LDAP_BINDPW=\"$(cat ${ldapBindPasswordFile})\" \\n fi \\n}\\nsetup_secrets\\n' > /etc/defaults/docker-env\n#   Add project resources.\nADD identifier/build /var/lib/konnectd-docker/identifier-webapp\n#   Add project main binary.\nCOPY bin/konnectd /usr/local/bin/${EXE}\nENTRYPOINT [\"docker-entrypoint.sh\"]\nCMD [\"konnectd\", \"--help\"]\n#   Health check support is cool too.\nHEALTHCHECK --interval=30s --timeout=5s CMD healthcheck.sh\n","originalDockerfileUglifiedHash":"0cfdfda1480e1ebd3e9395404e38102f","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/184496d7b5b200303b0cf83800ae811f25878e45.dockerfile"}