{"seed":1819698696,"processedDockerfileHash":"5144c98f6f84155398a7abadd72191dc","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","use-copy-instead-of-add","have-a-healthcheck"],"processedDockerfile":"#   Copyright (c) 2018 Red Hat, Inc.\n#   This program and the accompanying materials are made\n#   available under the terms of the Eclipse Public License 2.0\n#   which is available at https://www.eclipse.org/legal/epl-2.0/\n#\n#   SPDX-License-Identifier: EPL-2.0\n#\n#   Contributors:\n#     Red Hat, Inc. - initial API and implementation\n#  ##\n#   Builder Image\n#\nFROM ${BUILD_ORGANIZATION}/${BUILD_PREFIX}-theia-dev:${BUILD_TAG} AS builder\nWORKDIR ${HOME}\n#   define in env variable GITHUB_TOKEN only if it is defined\n#   else check if github rate limit is enough, else will abort requiring to set GITHUB_TOKEN value\nARG GITHUB_TOKEN\nARG THEIA_GITHUB_REPO=theia-ide/theia\n#   Define upstream version of theia to use\nARG THEIA_VERSION=master\nENV NODE_OPTIONS=\"--max-old-space-size=4096\"\n#   Check github limit\nRUN if [ ! -z \"${GITHUB_TOKEN-}\" ] ; then export GITHUB_TOKEN=$GITHUB_TOKEN ;echo \"Setting GITHUB_TOKEN value as provided\" ; else export GITHUB_LIMIT=$( curl -s 'https://api.github.com/rate_limit' | jq '.rate .remaining' ;) ;echo \"Current API rate limit https://api.github.com is ${GITHUB_LIMIT}\" ;if [ \"${GITHUB_LIMIT}\" -lt 10 ] ; then printf \"\\033[0;31m\\n\\n\\nRate limit on https://api.github.com is reached so in order to build this image, \" ;printf \"the build argument GITHUB_TOKEN needs to be provided so build will not fail.\\n\\n\\n\\033[0m\" ;exit 1 ; else echo \"GITHUB_TOKEN variable is not set but https://api.github.com rate limit has enough slots\" ; fi ; fi\n#  invalidate cache\nRUN which wget &> /dev/null || apt-get install --no-install-recommends wget=1.20.3 ; wget --no-verbose --output-document /tmp/branch_info.json https://${GITHUB_TOKEN}:x-oauth-basic@api.github.com/repos/${THEIA_GITHUB_REPO}/git/${GIT_REF}\n#   Clone theia\nRUN git clone --branch ${GIT_BRANCH_NAME} --single-branch --depth 1 https://github.com/${THEIA_GITHUB_REPO} ${HOME}/theia-source-code\n#   Add patches\nCOPY src/patches ${HOME}/patches\n#   Apply patches\nRUN if [ -d \"${HOME}/patches/${THEIA_VERSION}\" ] ; then echo \"Applying patches for Theia version ${THEIA_VERSION}\" ;for file in $( find \"${HOME}/patches/${THEIA_VERSION}\" -name '*.patch' ;); do echo \"Patching with ${file}\" ;cd ${HOME}/theia-source-code \\\n && patch -p1 < ${file}; done ; fi\n#   Generate che-theia\nARG CDN_PREFIX=\"\"\nARG MONACO_CDN_PREFIX=\"\"\nWORKDIR ${HOME}/theia-source-code\nCOPY che-theia/che-theia-init-sources.yml ${HOME}/che-theia-init-sources.yml\n#  invalidate cache for che-theia extensions\nRUN which wget &> /dev/null || apt-get install --no-install-recommends wget=1.20.3 ; wget --no-verbose --output-document /tmp/this_branch_info.json https://${GITHUB_TOKEN}:x-oauth-basic@api.github.com/repos/eclipse/che-theia/git/${GIT_REF}\nRUN che:theia init -c ${HOME}/che-theia-init-sources.yml\nRUN che:theia cdn --theia=\"${CDN_PREFIX}\" --monaco=\"${MONACO_CDN_PREFIX}\"\n#   Compile Theia\nRUN yarn\n#   Run into production mode\nRUN che:theia production\n#   FIX ME, temporary fix to restore build\nRUN cd che/che-theia \\\n && git reset --hard\n#   Compile plugins\nRUN cd plugins \\\n && ./foreach_yarn\n#   change permissions\nRUN find production -exec sh -c \"chgrp 0 {}; chmod g+rwX {}\" ; 2> log.txt\n#  ##\n#   Runtime Image\n#\n#   Use node image\nFROM node:10.16-alpine AS runtime\nENV USE_LOCAL_GIT=\"true\" \\\n    HOME=\"/home/theia\" \\\n    THEIA_DEFAULT_PLUGINS=\"local-dir:///default-theia-plugins\" \\\n    LOCAL_GIT_DIRECTORY=\"/usr\" \\\n    GIT_EXEC_PATH=\"/usr/libexec/git-core\" \\\n    PORT_PLUGIN_EXCLUDE_3130=\"TRUE\"\nEXPOSE 3100/tcp 3130/tcp\nCOPY --from=builder /home/theia-dev/theia-source-code/production/plugins /default-theia-plugins\n#   Install sudo\n#   Install git\n#   Install bzip2 to unpack files\n#   Install which tool in order to search git\n#   Install curl and bash\n#   Install ssh for cloning ssh-repositories\n#   Install less for handling git diff properly\nRUN apk add sudo git bzip2 which bash curl openssh openssh-keygen less --update --no-cache\nRUN adduser -D -S -u 1001 -G root -h ${HOME} -s /bin/sh theia \\\n && echo \"%wheel ALL=(ALL) NOPASSWD: ALL\" >> /etc/sudoers \\\n && mkdir /projects \\\n && mkdir /node_modules \\\n && curl -L -o /default-theia-plugins/theia_yeoman_plugin.theia https://github.com/eclipse/theia-yeoman-plugin/releases/download/untagged-04f28ee329e479cc465b/theia_yeoman_plugin.theia \\\n && for f in \"${HOME}\" \"/etc/passwd\" \"/etc/group /node_modules /default-theia-plugins /projects\"; do sudo chgrp -R 0 ${f} \\\n && sudo chmod -R g+rwX ${f} ; done \\\n && cat /etc/passwd | sed s#root:x.*#root:x:${USER_ID}:${GROUP_ID}::${HOME}:/bin/bash#g > ${HOME}/passwd.template \\\n && cat /etc/group | sed s#root:x:0:#root:x:0:0,${USER_ID}:#g > ${HOME}/group.template \\\n && yarn global add yo @theia/generator-plugin@0.0.1-1540209403 typescript@2.9.2 \\\n && mkdir -p ${HOME}/.config/insight-nodejs/ \\\n && chmod -R 777 ${HOME}/.config/ \\\n && echo '{\"optOut\": true}' > $HOME/.config/insight-nodejs/insight-yo.json \\\n && mv /usr/local/lib/node_modules/* /usr/local/share/.config/yarn/global/node_modules \\\n && rm -rf /usr/local/lib/node_modules \\\n && ln -s /usr/local/share/.config/yarn/global/node_modules /usr/local/lib/ \\\n && rm -rf /tmp/* \\\n && yarn cache clean \\\n && find ${HOME} -exec sh -c \"chgrp 0 {}; chmod g+rwX {}\"\nCOPY --chown=theia:root --from=builder /home/theia-dev/theia-source-code/production /home/theia\nUSER theia\nWORKDIR /projects\nCOPY src/entrypoint.sh /entrypoint.sh\nENTRYPOINT [\"/entrypoint.sh\"]\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Copyright (c) 2018 Red Hat, Inc.\n#  This program and the accompanying materials are made\n#  available under the terms of the Eclipse Public License 2.0\n#  which is available at https://www.eclipse.org/legal/epl-2.0/\n#\n#  SPDX-License-Identifier: EPL-2.0\n#\n#  Contributors:\n#    Red Hat, Inc. - initial API and implementation\n# ##\n#  Builder Image\n#\nFROM ${BUILD_ORGANIZATION}/${BUILD_PREFIX}-theia-dev:${BUILD_TAG} AS builder\nWORKDIR ${HOME}\n#  define in env variable GITHUB_TOKEN only if it is defined\n#  else check if github rate limit is enough, else will abort requiring to set GITHUB_TOKEN value\nARG GITHUB_TOKEN\nARG THEIA_GITHUB_REPO=theia-ide/theia\n#  Define upstream version of theia to use\nARG THEIA_VERSION=master\nENV NODE_OPTIONS=\"--max-old-space-size=4096\"\n#  Check github limit\nRUN if [ ! -z \"${GITHUB_TOKEN-}\" ] ; then export GITHUB_TOKEN=$GITHUB_TOKEN ;echo \"Setting GITHUB_TOKEN value as provided\" ; else export GITHUB_LIMIT=$( curl -s 'https://api.github.com/rate_limit' | jq '.rate .remaining' ;) ;echo \"Current API rate limit https://api.github.com is ${GITHUB_LIMIT}\" ;if [ \"${GITHUB_LIMIT}\" -lt 10 ] ; then printf \"\\033[0;31m\\n\\n\\nRate limit on https://api.github.com is reached so in order to build this image, \" ;printf \"the build argument GITHUB_TOKEN needs to be provided so build will not fail.\\n\\n\\n\\033[0m\" ;exit 1 ; else echo \"GITHUB_TOKEN variable is not set but https://api.github.com rate limit has enough slots\" ; fi ; fi\n# invalidate cache\nADD https://${GITHUB_TOKEN}:x-oauth-basic@api.github.com/repos/${THEIA_GITHUB_REPO}/git/${GIT_REF} /tmp/branch_info.json\n#  Clone theia\nRUN git clone --branch ${GIT_BRANCH_NAME} --single-branch --depth 1 https://github.com/${THEIA_GITHUB_REPO} ${HOME}/theia-source-code\n#  Add patches\nADD src/patches ${HOME}/patches\n#  Apply patches\nRUN if [ -d \"${HOME}/patches/${THEIA_VERSION}\" ] ; then echo \"Applying patches for Theia version ${THEIA_VERSION}\" ;for file in $( find \"${HOME}/patches/${THEIA_VERSION}\" -name '*.patch' ;); do echo \"Patching with ${file}\" ;cd ${HOME}/theia-source-code \\\n && patch -p1 < ${file}; done ; fi\n#  Generate che-theia\nARG CDN_PREFIX=\"\"\nARG MONACO_CDN_PREFIX=\"\"\nWORKDIR ${HOME}/theia-source-code\nCOPY che-theia/che-theia-init-sources.yml ${HOME}/che-theia-init-sources.yml\n# invalidate cache for che-theia extensions\nADD https://${GITHUB_TOKEN}:x-oauth-basic@api.github.com/repos/eclipse/che-theia/git/${GIT_REF} /tmp/this_branch_info.json\nRUN che:theia init -c ${HOME}/che-theia-init-sources.yml\nRUN che:theia cdn --theia=\"${CDN_PREFIX}\" --monaco=\"${MONACO_CDN_PREFIX}\"\n#  Compile Theia\nRUN yarn\n#  Run into production mode\nRUN che:theia production\n#  FIX ME, temporary fix to restore build\nRUN cd che/che-theia \\\n && git reset --hard\n#  Compile plugins\nRUN cd plugins \\\n && ./foreach_yarn\n#  change permissions\nRUN find production -exec sh -c \"chgrp 0 {}; chmod g+rwX {}\" ; 2> log.txt\n# ##\n#  Runtime Image\n#\n#  Use node image\nFROM node:10.16-alpine AS runtime\nENV USE_LOCAL_GIT=\"true\" \\\n    HOME=\"/home/theia\" \\\n    THEIA_DEFAULT_PLUGINS=\"local-dir:///default-theia-plugins\" \\\n    LOCAL_GIT_DIRECTORY=\"/usr\" \\\n    GIT_EXEC_PATH=\"/usr/libexec/git-core\" \\\n    PORT_PLUGIN_EXCLUDE_3130=\"TRUE\"\nEXPOSE 3100/tcp 3130/tcp\nCOPY --from=builder /home/theia-dev/theia-source-code/production/plugins /default-theia-plugins\n#  Install sudo\n#  Install git\n#  Install bzip2 to unpack files\n#  Install which tool in order to search git\n#  Install curl and bash\n#  Install ssh for cloning ssh-repositories\n#  Install less for handling git diff properly\nRUN apk add --update --no-cache sudo git bzip2 which bash curl openssh openssh-keygen less\nRUN adduser -D -S -u 1001 -G root -h ${HOME} -s /bin/sh theia \\\n && echo \"%wheel ALL=(ALL) NOPASSWD: ALL\" >> /etc/sudoers \\\n && mkdir /projects \\\n && mkdir /node_modules \\\n && curl -L -o /default-theia-plugins/theia_yeoman_plugin.theia https://github.com/eclipse/theia-yeoman-plugin/releases/download/untagged-04f28ee329e479cc465b/theia_yeoman_plugin.theia \\\n && for f in \"${HOME}\" \"/etc/passwd\" \"/etc/group /node_modules /default-theia-plugins /projects\"; do sudo chgrp -R 0 ${f} \\\n && sudo chmod -R g+rwX ${f} ; done \\\n && cat /etc/passwd | sed s#root:x.*#root:x:${USER_ID}:${GROUP_ID}::${HOME}:/bin/bash#g > ${HOME}/passwd.template \\\n && cat /etc/group | sed s#root:x:0:#root:x:0:0,${USER_ID}:#g > ${HOME}/group.template \\\n && yarn global add yo @theia/generator-plugin@0.0.1-1540209403 typescript@2.9.2 \\\n && mkdir -p ${HOME}/.config/insight-nodejs/ \\\n && chmod -R 777 ${HOME}/.config/ \\\n && echo '{\"optOut\": true}' > $HOME/.config/insight-nodejs/insight-yo.json \\\n && mv /usr/local/lib/node_modules/* /usr/local/share/.config/yarn/global/node_modules \\\n && rm -rf /usr/local/lib/node_modules \\\n && ln -s /usr/local/share/.config/yarn/global/node_modules /usr/local/lib/ \\\n && rm -rf /tmp/* \\\n && yarn cache clean \\\n && find ${HOME} -exec sh -c \"chgrp 0 {}; chmod g+rwX {}\" ;\nCOPY --chown=theia:root --from=builder /home/theia-dev/theia-source-code/production /home/theia\nUSER theia\nWORKDIR /projects\nADD src/entrypoint.sh /entrypoint.sh\nENTRYPOINT [\"/entrypoint.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"11b650d3ced436803a9200436c766608","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Copyright (c) 2018 Red Hat, Inc.\n#   This program and the accompanying materials are made\n#   available under the terms of the Eclipse Public License 2.0\n#   which is available at https://www.eclipse.org/legal/epl-2.0/\n#\n#   SPDX-License-Identifier: EPL-2.0\n#\n#   Contributors:\n#     Red Hat, Inc. - initial API and implementation\n#  ##\n#   Builder Image\n#\nFROM ${BUILD_ORGANIZATION}/${BUILD_PREFIX}-theia-dev:${BUILD_TAG} AS builder\nWORKDIR ${HOME}\n#   define in env variable GITHUB_TOKEN only if it is defined\n#   else check if github rate limit is enough, else will abort requiring to set GITHUB_TOKEN value\nARG GITHUB_TOKEN\nARG THEIA_GITHUB_REPO=theia-ide/theia\n#   Define upstream version of theia to use\nARG THEIA_VERSION=master\nENV NODE_OPTIONS=\"--max-old-space-size=4096\"\n#   Check github limit\nRUN if [ ! -z \"${GITHUB_TOKEN-}\" ] ; then export GITHUB_TOKEN=$GITHUB_TOKEN ;echo \"Setting GITHUB_TOKEN value as provided\" ; else export GITHUB_LIMIT=$( curl -s 'https://api.github.com/rate_limit' | jq '.rate .remaining' ;) ;echo \"Current API rate limit https://api.github.com is ${GITHUB_LIMIT}\" ;if [ \"${GITHUB_LIMIT}\" -lt 10 ] ; then printf \"\\033[0;31m\\n\\n\\nRate limit on https://api.github.com is reached so in order to build this image, \" ;printf \"the build argument GITHUB_TOKEN needs to be provided so build will not fail.\\n\\n\\n\\033[0m\" ;exit 1 ; else echo \"GITHUB_TOKEN variable is not set but https://api.github.com rate limit has enough slots\" ; fi ; fi\n#  invalidate cache\nADD https://${GITHUB_TOKEN}:x-oauth-basic@api.github.com/repos/${THEIA_GITHUB_REPO}/git/${GIT_REF} /tmp/branch_info.json\n#   Clone theia\nRUN git clone --branch ${GIT_BRANCH_NAME} --single-branch --depth 1 https://github.com/${THEIA_GITHUB_REPO} ${HOME}/theia-source-code\n#   Add patches\nADD src/patches ${HOME}/patches\n#   Apply patches\nRUN if [ -d \"${HOME}/patches/${THEIA_VERSION}\" ] ; then echo \"Applying patches for Theia version ${THEIA_VERSION}\" ;for file in $( find \"${HOME}/patches/${THEIA_VERSION}\" -name '*.patch' ;); do echo \"Patching with ${file}\" ;cd ${HOME}/theia-source-code \\\n && patch -p1 < ${file}; done ; fi\n#   Generate che-theia\nARG CDN_PREFIX=\"\"\nARG MONACO_CDN_PREFIX=\"\"\nWORKDIR ${HOME}/theia-source-code\nCOPY che-theia/che-theia-init-sources.yml ${HOME}/che-theia-init-sources.yml\n#  invalidate cache for che-theia extensions\nADD https://${GITHUB_TOKEN}:x-oauth-basic@api.github.com/repos/eclipse/che-theia/git/${GIT_REF} /tmp/this_branch_info.json\nRUN che:theia init -c ${HOME}/che-theia-init-sources.yml\nRUN che:theia cdn --theia=\"${CDN_PREFIX}\" --monaco=\"${MONACO_CDN_PREFIX}\"\n#   Compile Theia\nRUN yarn\n#   Run into production mode\nRUN che:theia production\n#   FIX ME, temporary fix to restore build\nRUN cd che/che-theia \\\n && git reset --hard\n#   Compile plugins\nRUN cd plugins \\\n && ./foreach_yarn\n#   change permissions\nRUN find production -exec sh -c \"chgrp 0 {}; chmod g+rwX {}\" ; 2> log.txt\n#  ##\n#   Runtime Image\n#\n#   Use node image\nFROM node:10.16-alpine AS runtime\nENV USE_LOCAL_GIT=\"true\" \\\n    HOME=\"/home/theia\" \\\n    THEIA_DEFAULT_PLUGINS=\"local-dir:///default-theia-plugins\" \\\n    LOCAL_GIT_DIRECTORY=\"/usr\" \\\n    GIT_EXEC_PATH=\"/usr/libexec/git-core\" \\\n    PORT_PLUGIN_EXCLUDE_3130=\"TRUE\"\nEXPOSE 3100/tcp 3130/tcp\nCOPY --from=builder /home/theia-dev/theia-source-code/production/plugins /default-theia-plugins\n#   Install sudo\n#   Install git\n#   Install bzip2 to unpack files\n#   Install which tool in order to search git\n#   Install curl and bash\n#   Install ssh for cloning ssh-repositories\n#   Install less for handling git diff properly\nRUN apk add --update --no-cache sudo git bzip2 which bash curl openssh openssh-keygen less\nRUN adduser -D -S -u 1001 -G root -h ${HOME} -s /bin/sh theia \\\n && echo \"%wheel ALL=(ALL) NOPASSWD: ALL\" >> /etc/sudoers \\\n && mkdir /projects \\\n && mkdir /node_modules \\\n && curl -L -o /default-theia-plugins/theia_yeoman_plugin.theia https://github.com/eclipse/theia-yeoman-plugin/releases/download/untagged-04f28ee329e479cc465b/theia_yeoman_plugin.theia \\\n && for f in \"${HOME}\" \"/etc/passwd\" \"/etc/group /node_modules /default-theia-plugins /projects\"; do sudo chgrp -R 0 ${f} \\\n && sudo chmod -R g+rwX ${f} ; done \\\n && cat /etc/passwd | sed s#root:x.*#root:x:${USER_ID}:${GROUP_ID}::${HOME}:/bin/bash#g > ${HOME}/passwd.template \\\n && cat /etc/group | sed s#root:x:0:#root:x:0:0,${USER_ID}:#g > ${HOME}/group.template \\\n && yarn global add yo @theia/generator-plugin@0.0.1-1540209403 typescript@2.9.2 \\\n && mkdir -p ${HOME}/.config/insight-nodejs/ \\\n && chmod -R 777 ${HOME}/.config/ \\\n && echo '{\"optOut\": true}' > $HOME/.config/insight-nodejs/insight-yo.json \\\n && mv /usr/local/lib/node_modules/* /usr/local/share/.config/yarn/global/node_modules \\\n && rm -rf /usr/local/lib/node_modules \\\n && ln -s /usr/local/share/.config/yarn/global/node_modules /usr/local/lib/ \\\n && rm -rf /tmp/* \\\n && yarn cache clean \\\n && find ${HOME} -exec sh -c \"chgrp 0 {}; chmod g+rwX {}\"\nCOPY --chown=theia:root --from=builder /home/theia-dev/theia-source-code/production /home/theia\nUSER theia\nWORKDIR /projects\nADD src/entrypoint.sh /entrypoint.sh\nENTRYPOINT [\"/entrypoint.sh\"]\n","originalDockerfileUglifiedHash":"6d2b4b95449fa9b5cb5bb00d3f679f5e","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/e4de6ffe9921879be0581b5663a72826c2d79284.dockerfile"}