{"seed":2993116066,"processedDockerfileHash":"df7f1710ec05450861d1581eca412204","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","have-a-healthcheck","have-a-user"],"processedDockerfile":"#\n#   Dockerfile for warcprox tests\n#\n#   Copyright (C) 2015-2017 Internet Archive\n#\n#   This program is free software; you can redistribute it and/or\n#   modify it under the terms of the GNU General Public License\n#   as published by the Free Software Foundation; either version 2\n#   of the License, or (at your option) any later version.\n#\n#   This program is distributed in the hope that it will be useful,\n#   but WITHOUT ANY WARRANTY; without even the implied warranty of\n#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n#   GNU General Public License for more details.\n#\n#   You should have received a copy of the GNU General Public License\n#   along with this program; if not, write to the Free Software\n#   Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n#   USA.\n#\nFROM phusion/baseimage\nMAINTAINER Noah Levitt <nlevitt@archive.org>\n#   see https://github.com/stuartpb/rethinkdb-dockerfiles/blob/master/trusty/2.1.3/Dockerfile\n#   and https://github.com/chali/hadoop-cdh-pseudo-docker/blob/master/Dockerfile\nENV LANG=\"C.UTF-8\"\nRUN : \\\n && apt-get --auto-remove -y dist-upgrade\n#   Add the RethinkDB repository and public key\nRUN curl -s https://download.rethinkdb.com/apt/pubkey.gpg | apt-key add - \\\n && echo \"deb http://download.rethinkdb.com/apt xenial main\" > /etc/apt/sources.list.d/rethinkdb.list \\\n && apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends rethinkdb -y )\nRUN mkdir -vp /etc/service/rethinkdb \\\n && echo \"#!/bin/bash\\nexec rethinkdb --bind 0.0.0.0 --directory /tmp/rethink-data --runuser rethinkdb --rungroup rethinkdb\\n\" > /etc/service/rethinkdb/run \\\n && chmod a+x /etc/service/rethinkdb/run\nRUN (apt-get update ;apt-get install --no-install-recommends git=1:2.39.2-1ubuntu1 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends libpython2.7-dev=2.7.18-13ubuntu2 libpython3-dev=3.11.2-1 libffi-dev=3.4.4-1 libssl-dev=3.0.8-1ubuntu1 python-setuptools python3-setuptools=66.1.1-1 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends gcc=4:12.2.0-3ubuntu1 -y )\nRUN echo '57ff41e99cb01b6a1c2b0999161589b726f0ec8b /tmp/pip-9.0.1.tar.gz' > /tmp/sha1sums.txt\nRUN curl -sSL -o /tmp/pip-9.0.1.tar.gz https://pypi.python.org/packages/11/b6/abcb525026a4be042b486df43905d6893fb04f05aac21c32c638e939e447/pip-9.0.1.tar.gz\nRUN sha1sum -c /tmp/sha1sums.txt\nRUN tar -C /tmp -xf /tmp/pip-9.0.1.tar.gz\nRUN cd /tmp/pip-9.0.1 \\\n && python3 setup.py install\nRUN pip install virtualenv==20.21.0\nRUN (apt-get update ;apt-get install --no-install-recommends tor=0.4.7.13-1 -y )\nRUN mkdir -vp /etc/service/tor \\\n && echo \"#!/bin/sh\\nexec tor\\n\" > /etc/service/tor/run \\\n && chmod a+x /etc/service/tor/run\n#   hadoop hdfs for trough\nRUN curl -s https://archive.cloudera.com/cdh5/ubuntu/xenial/amd64/cdh/archive.key | apt-key add - \\\n && . /etc/lsb-release \\\n && echo \"deb [arch=amd64] http://archive.cloudera.com/cdh5/ubuntu/$DISTRIB_CODENAME/amd64/cdh $DISTRIB_CODENAME-cdh5 contrib\" >> /etc/apt/sources.list.d/cloudera.list\nRUN :\nRUN (apt-get update ;apt-get install --no-install-recommends openjdk-8-jdk=8u362-ga-0ubuntu2 hadoop-conf-pseudo -y )\nRUN su hdfs -c 'hdfs namenode -format'\nRUN mv -v /etc/hadoop/conf/core-site.xml /etc/hadoop/conf/core-site.xml.orig \\\n && cat /etc/hadoop/conf/core-site.xml.orig | sed 's,localhost:8020,0.0.0.0:8020,' > /etc/hadoop/conf/core-site.xml\nRUN mv -v /etc/hadoop/conf/hdfs-site.xml /etc/hadoop/conf/hdfs-site.xml.orig \\\n && cat /etc/hadoop/conf/hdfs-site.xml.orig | sed 's,^</configuration>$, <property>\\n <name>dfs.permissions.enabled</name>\\n <value>false</value>\\n </property>\\n</configuration>,' > /etc/hadoop/conf/hdfs-site.xml\nRUN echo '#!/bin/bash\\nservice hadoop-hdfs-namenode start\\nservice hadoop-hdfs-datanode start' > /etc/my_init.d/50_start_hdfs.sh \\\n && chmod a+x /etc/my_init.d/50_start_hdfs.sh\nRUN (apt-get update ;apt-get install --no-install-recommends libsqlite3-dev=3.40.1-1 -y )\n#   trough itself\nRUN virtualenv -p python3 /opt/trough-ve3 \\\n && . /opt/trough-ve3/bin/activate \\\n && pip install git+https://github.com/nlevitt/snakebite.git@py3 \\\n && pip install git+https://github.com/internetarchive/trough.git\nRUN mkdir -vp /etc/service/trough-sync-local \\\n && echo \"#!/bin/bash\\nsource /opt/trough-ve3/bin/activate\\nexec sync.py >>/tmp/trough-sync-local.out 2>&1\" > /etc/service/trough-sync-local/run \\\n && chmod a+x /etc/service/trough-sync-local/run\nRUN mkdir -vp /etc/service/trough-sync-server \\\n && echo '#!/bin/bash\\nsource /opt/trough-ve3/bin/activate\\nsleep 5\\npython -c $\"import doublethink ; from trough.settings import settings ; rr = doublethink.Rethinker(settings[\\\"RETHINKDB_HOSTS\\\"]) ; rr.db(\\\"trough_configuration\\\").wait().run()\"\\nexec sync.py --server >>/tmp/trough-sync-server.out 2>&1' > /etc/service/trough-sync-server/run \\\n && chmod a+x /etc/service/trough-sync-server/run\nRUN mkdir -vp /etc/service/trough-read \\\n && echo '#!/bin/bash\\nvenv=/opt/trough-ve3\\nsource $venv/bin/activate\\nsleep 5\\npython -c $\"import doublethink ; from trough.settings import settings ; rr = doublethink.Rethinker(settings[\\\"RETHINKDB_HOSTS\\\"]) ; rr.db(\\\"trough_configuration\\\").wait().run()\"\\nexec uwsgi --venv=$venv --http :6444 --master --processes=2 --harakiri=3200 --socket-timeout=3200 --max-requests=50000 --vacuum --die-on-term --wsgi-file $venv/bin/reader.py >>/tmp/trough-read.out 2>&1' > /etc/service/trough-read/run \\\n && chmod a+x /etc/service/trough-read/run\nRUN mkdir -vp /etc/service/trough-write \\\n && echo '#!/bin/bash\\nvenv=/opt/trough-ve3\\nsource $venv/bin/activate\\nsleep 5\\npython -c $\"import doublethink ; from trough.settings import settings ; rr = doublethink.Rethinker(settings[\\\"RETHINKDB_HOSTS\\\"]) ; rr.db(\\\"trough_configuration\\\").wait().run()\"\\nexec uwsgi --venv=$venv --http :6222 --master --processes=2 --harakiri=240 --max-requests=50000 --vacuum --die-on-term --wsgi-file $venv/bin/writer.py >>/tmp/trough-write.out 2>&1' > /etc/service/trough-write/run \\\n && chmod a+x /etc/service/trough-write/run\nRUN mkdir -vp /etc/service/trough-segment-manager-local \\\n && echo '#!/bin/bash\\nvenv=/opt/trough-ve3\\nsource $venv/bin/activate\\nsleep 5\\npython -c $\"import doublethink ; from trough.settings import settings ; rr = doublethink.Rethinker(settings[\\\"RETHINKDB_HOSTS\\\"]) ; rr.db(\\\"trough_configuration\\\").wait().run()\"\\nexec uwsgi --venv=$venv --http :6112 --master --processes=2 --harakiri=7200 --http-timeout=7200 --max-requests=50000 --vacuum --die-on-term --mount /=trough.wsgi.segment_manager:local >>/tmp/trough-segment-manager-local.out 2>&1' > /etc/service/trough-segment-manager-local/run \\\n && chmod a+x /etc/service/trough-segment-manager-local/run\nRUN mkdir -vp /etc/service/trough-segment-manager-server \\\n && echo '#!/bin/bash\\nvenv=/opt/trough-ve3\\nsource $venv/bin/activate\\nsleep 5\\npython -c $\"import doublethink ; from trough.settings import settings ; rr = doublethink.Rethinker(settings[\\\"RETHINKDB_HOSTS\\\"]) ; rr.db(\\\"trough_configuration\\\").wait().run()\"\\nexec uwsgi --venv=$venv --http :6111 --master --processes=2 --harakiri=7200 --http-timeout=7200 --max-requests=50000 --vacuum --die-on-term --mount /=trough.wsgi.segment_manager:server >>/tmp/trough-segment-manager-server.out 2>&1' > /etc/service/trough-segment-manager-server/run \\\n && chmod a+x /etc/service/trough-segment-manager-server/run\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#\n#  Dockerfile for warcprox tests\n#\n#  Copyright (C) 2015-2017 Internet Archive\n#\n#  This program is free software; you can redistribute it and/or\n#  modify it under the terms of the GNU General Public License\n#  as published by the Free Software Foundation; either version 2\n#  of the License, or (at your option) any later version.\n#\n#  This program is distributed in the hope that it will be useful,\n#  but WITHOUT ANY WARRANTY; without even the implied warranty of\n#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n#  GNU General Public License for more details.\n#\n#  You should have received a copy of the GNU General Public License\n#  along with this program; if not, write to the Free Software\n#  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n#  USA.\n#\nFROM phusion/baseimage\nMAINTAINER Noah Levitt <nlevitt@archive.org>\n#  see https://github.com/stuartpb/rethinkdb-dockerfiles/blob/master/trusty/2.1.3/Dockerfile\n#  and https://github.com/chali/hadoop-cdh-pseudo-docker/blob/master/Dockerfile\nENV LANG=\"C.UTF-8\"\nRUN apt-get update \\\n && apt-get --auto-remove -y dist-upgrade\n#  Add the RethinkDB repository and public key\nRUN curl -s https://download.rethinkdb.com/apt/pubkey.gpg | apt-key add - \\\n && echo \"deb http://download.rethinkdb.com/apt xenial main\" > /etc/apt/sources.list.d/rethinkdb.list \\\n && apt-get update \\\n && apt-get install rethinkdb -y\nRUN mkdir -vp /etc/service/rethinkdb \\\n && echo \"#!/bin/bash\\nexec rethinkdb --bind 0.0.0.0 --directory /tmp/rethink-data --runuser rethinkdb --rungroup rethinkdb\\n\" > /etc/service/rethinkdb/run \\\n && chmod a+x /etc/service/rethinkdb/run\nRUN apt-get install git -y\nRUN apt-get install libpython2.7-dev libpython3-dev libffi-dev libssl-dev python-setuptools python3-setuptools -y\nRUN apt-get install gcc -y\nRUN echo '57ff41e99cb01b6a1c2b0999161589b726f0ec8b /tmp/pip-9.0.1.tar.gz' > /tmp/sha1sums.txt\nRUN curl -sSL -o /tmp/pip-9.0.1.tar.gz https://pypi.python.org/packages/11/b6/abcb525026a4be042b486df43905d6893fb04f05aac21c32c638e939e447/pip-9.0.1.tar.gz\nRUN sha1sum -c /tmp/sha1sums.txt\nRUN tar -C /tmp -xf /tmp/pip-9.0.1.tar.gz\nRUN cd /tmp/pip-9.0.1 \\\n && python3 setup.py install\nRUN pip install virtualenv\nRUN apt-get install tor -y\nRUN mkdir -vp /etc/service/tor \\\n && echo \"#!/bin/sh\\nexec tor\\n\" > /etc/service/tor/run \\\n && chmod a+x /etc/service/tor/run\n#  hadoop hdfs for trough\nRUN curl -s https://archive.cloudera.com/cdh5/ubuntu/xenial/amd64/cdh/archive.key | apt-key add - \\\n && . /etc/lsb-release \\\n && echo \"deb [arch=amd64] http://archive.cloudera.com/cdh5/ubuntu/$DISTRIB_CODENAME/amd64/cdh $DISTRIB_CODENAME-cdh5 contrib\" >> /etc/apt/sources.list.d/cloudera.list\nRUN apt-get update\nRUN apt-get install openjdk-8-jdk hadoop-conf-pseudo -y\nRUN su hdfs -c 'hdfs namenode -format'\nRUN mv -v /etc/hadoop/conf/core-site.xml /etc/hadoop/conf/core-site.xml.orig \\\n && cat /etc/hadoop/conf/core-site.xml.orig | sed 's,localhost:8020,0.0.0.0:8020,' > /etc/hadoop/conf/core-site.xml\nRUN mv -v /etc/hadoop/conf/hdfs-site.xml /etc/hadoop/conf/hdfs-site.xml.orig \\\n && cat /etc/hadoop/conf/hdfs-site.xml.orig | sed 's,^</configuration>$, <property>\\n <name>dfs.permissions.enabled</name>\\n <value>false</value>\\n </property>\\n</configuration>,' > /etc/hadoop/conf/hdfs-site.xml\nRUN echo '#!/bin/bash\\nservice hadoop-hdfs-namenode start\\nservice hadoop-hdfs-datanode start' > /etc/my_init.d/50_start_hdfs.sh \\\n && chmod a+x /etc/my_init.d/50_start_hdfs.sh\nRUN apt-get install libsqlite3-dev -y\n#  trough itself\nRUN virtualenv -p python3 /opt/trough-ve3 \\\n && . /opt/trough-ve3/bin/activate \\\n && pip install git+https://github.com/nlevitt/snakebite.git@py3 \\\n && pip install git+https://github.com/internetarchive/trough.git\nRUN mkdir -vp /etc/service/trough-sync-local \\\n && echo \"#!/bin/bash\\nsource /opt/trough-ve3/bin/activate\\nexec sync.py >>/tmp/trough-sync-local.out 2>&1\" > /etc/service/trough-sync-local/run \\\n && chmod a+x /etc/service/trough-sync-local/run\nRUN mkdir -vp /etc/service/trough-sync-server \\\n && echo '#!/bin/bash\\nsource /opt/trough-ve3/bin/activate\\nsleep 5\\npython -c $\"import doublethink ; from trough.settings import settings ; rr = doublethink.Rethinker(settings[\\\"RETHINKDB_HOSTS\\\"]) ; rr.db(\\\"trough_configuration\\\").wait().run()\"\\nexec sync.py --server >>/tmp/trough-sync-server.out 2>&1' > /etc/service/trough-sync-server/run \\\n && chmod a+x /etc/service/trough-sync-server/run\nRUN mkdir -vp /etc/service/trough-read \\\n && echo '#!/bin/bash\\nvenv=/opt/trough-ve3\\nsource $venv/bin/activate\\nsleep 5\\npython -c $\"import doublethink ; from trough.settings import settings ; rr = doublethink.Rethinker(settings[\\\"RETHINKDB_HOSTS\\\"]) ; rr.db(\\\"trough_configuration\\\").wait().run()\"\\nexec uwsgi --venv=$venv --http :6444 --master --processes=2 --harakiri=3200 --socket-timeout=3200 --max-requests=50000 --vacuum --die-on-term --wsgi-file $venv/bin/reader.py >>/tmp/trough-read.out 2>&1' > /etc/service/trough-read/run \\\n && chmod a+x /etc/service/trough-read/run\nRUN mkdir -vp /etc/service/trough-write \\\n && echo '#!/bin/bash\\nvenv=/opt/trough-ve3\\nsource $venv/bin/activate\\nsleep 5\\npython -c $\"import doublethink ; from trough.settings import settings ; rr = doublethink.Rethinker(settings[\\\"RETHINKDB_HOSTS\\\"]) ; rr.db(\\\"trough_configuration\\\").wait().run()\"\\nexec uwsgi --venv=$venv --http :6222 --master --processes=2 --harakiri=240 --max-requests=50000 --vacuum --die-on-term --wsgi-file $venv/bin/writer.py >>/tmp/trough-write.out 2>&1' > /etc/service/trough-write/run \\\n && chmod a+x /etc/service/trough-write/run\nRUN mkdir -vp /etc/service/trough-segment-manager-local \\\n && echo '#!/bin/bash\\nvenv=/opt/trough-ve3\\nsource $venv/bin/activate\\nsleep 5\\npython -c $\"import doublethink ; from trough.settings import settings ; rr = doublethink.Rethinker(settings[\\\"RETHINKDB_HOSTS\\\"]) ; rr.db(\\\"trough_configuration\\\").wait().run()\"\\nexec uwsgi --venv=$venv --http :6112 --master --processes=2 --harakiri=7200 --http-timeout=7200 --max-requests=50000 --vacuum --die-on-term --mount /=trough.wsgi.segment_manager:local >>/tmp/trough-segment-manager-local.out 2>&1' > /etc/service/trough-segment-manager-local/run \\\n && chmod a+x /etc/service/trough-segment-manager-local/run\nRUN mkdir -vp /etc/service/trough-segment-manager-server \\\n && echo '#!/bin/bash\\nvenv=/opt/trough-ve3\\nsource $venv/bin/activate\\nsleep 5\\npython -c $\"import doublethink ; from trough.settings import settings ; rr = doublethink.Rethinker(settings[\\\"RETHINKDB_HOSTS\\\"]) ; rr.db(\\\"trough_configuration\\\").wait().run()\"\\nexec uwsgi --venv=$venv --http :6111 --master --processes=2 --harakiri=7200 --http-timeout=7200 --max-requests=50000 --vacuum --die-on-term --mount /=trough.wsgi.segment_manager:server >>/tmp/trough-segment-manager-server.out 2>&1' > /etc/service/trough-segment-manager-server/run \\\n && chmod a+x /etc/service/trough-segment-manager-server/run\n","injectedSmells":[],"originalDockerfileHash":"e7d91386ed1d0ccb06a44501b26753a2","successfullyInjectedSmells":[],"originalDockerfileUglified":"#\n#   Dockerfile for warcprox tests\n#\n#   Copyright (C) 2015-2017 Internet Archive\n#\n#   This program is free software; you can redistribute it and/or\n#   modify it under the terms of the GNU General Public License\n#   as published by the Free Software Foundation; either version 2\n#   of the License, or (at your option) any later version.\n#\n#   This program is distributed in the hope that it will be useful,\n#   but WITHOUT ANY WARRANTY; without even the implied warranty of\n#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n#   GNU General Public License for more details.\n#\n#   You should have received a copy of the GNU General Public License\n#   along with this program; if not, write to the Free Software\n#   Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n#   USA.\n#\nFROM phusion/baseimage\nMAINTAINER Noah Levitt <nlevitt@archive.org>\n#   see https://github.com/stuartpb/rethinkdb-dockerfiles/blob/master/trusty/2.1.3/Dockerfile\n#   and https://github.com/chali/hadoop-cdh-pseudo-docker/blob/master/Dockerfile\nENV LANG=\"C.UTF-8\"\nRUN apt-get update \\\n && apt-get --auto-remove -y dist-upgrade\n#   Add the RethinkDB repository and public key\nRUN curl -s https://download.rethinkdb.com/apt/pubkey.gpg | apt-key add - \\\n && echo \"deb http://download.rethinkdb.com/apt xenial main\" > /etc/apt/sources.list.d/rethinkdb.list \\\n && apt-get update \\\n && apt-get install rethinkdb -y\nRUN mkdir -vp /etc/service/rethinkdb \\\n && echo \"#!/bin/bash\\nexec rethinkdb --bind 0.0.0.0 --directory /tmp/rethink-data --runuser rethinkdb --rungroup rethinkdb\\n\" > /etc/service/rethinkdb/run \\\n && chmod a+x /etc/service/rethinkdb/run\nRUN apt-get install git -y\nRUN apt-get install libpython2.7-dev libpython3-dev libffi-dev libssl-dev python-setuptools python3-setuptools -y\nRUN apt-get install gcc -y\nRUN echo '57ff41e99cb01b6a1c2b0999161589b726f0ec8b /tmp/pip-9.0.1.tar.gz' > /tmp/sha1sums.txt\nRUN curl -sSL -o /tmp/pip-9.0.1.tar.gz https://pypi.python.org/packages/11/b6/abcb525026a4be042b486df43905d6893fb04f05aac21c32c638e939e447/pip-9.0.1.tar.gz\nRUN sha1sum -c /tmp/sha1sums.txt\nRUN tar -C /tmp -xf /tmp/pip-9.0.1.tar.gz\nRUN cd /tmp/pip-9.0.1 \\\n && python3 setup.py install\nRUN pip install virtualenv\nRUN apt-get install tor -y\nRUN mkdir -vp /etc/service/tor \\\n && echo \"#!/bin/sh\\nexec tor\\n\" > /etc/service/tor/run \\\n && chmod a+x /etc/service/tor/run\n#   hadoop hdfs for trough\nRUN curl -s https://archive.cloudera.com/cdh5/ubuntu/xenial/amd64/cdh/archive.key | apt-key add - \\\n && . /etc/lsb-release \\\n && echo \"deb [arch=amd64] http://archive.cloudera.com/cdh5/ubuntu/$DISTRIB_CODENAME/amd64/cdh $DISTRIB_CODENAME-cdh5 contrib\" >> /etc/apt/sources.list.d/cloudera.list\nRUN apt-get update\nRUN apt-get install openjdk-8-jdk hadoop-conf-pseudo -y\nRUN su hdfs -c 'hdfs namenode -format'\nRUN mv -v /etc/hadoop/conf/core-site.xml /etc/hadoop/conf/core-site.xml.orig \\\n && cat /etc/hadoop/conf/core-site.xml.orig | sed 's,localhost:8020,0.0.0.0:8020,' > /etc/hadoop/conf/core-site.xml\nRUN mv -v /etc/hadoop/conf/hdfs-site.xml /etc/hadoop/conf/hdfs-site.xml.orig \\\n && cat /etc/hadoop/conf/hdfs-site.xml.orig | sed 's,^</configuration>$, <property>\\n <name>dfs.permissions.enabled</name>\\n <value>false</value>\\n </property>\\n</configuration>,' > /etc/hadoop/conf/hdfs-site.xml\nRUN echo '#!/bin/bash\\nservice hadoop-hdfs-namenode start\\nservice hadoop-hdfs-datanode start' > /etc/my_init.d/50_start_hdfs.sh \\\n && chmod a+x /etc/my_init.d/50_start_hdfs.sh\nRUN apt-get install libsqlite3-dev -y\n#   trough itself\nRUN virtualenv -p python3 /opt/trough-ve3 \\\n && . /opt/trough-ve3/bin/activate \\\n && pip install git+https://github.com/nlevitt/snakebite.git@py3 \\\n && pip install git+https://github.com/internetarchive/trough.git\nRUN mkdir -vp /etc/service/trough-sync-local \\\n && echo \"#!/bin/bash\\nsource /opt/trough-ve3/bin/activate\\nexec sync.py >>/tmp/trough-sync-local.out 2>&1\" > /etc/service/trough-sync-local/run \\\n && chmod a+x /etc/service/trough-sync-local/run\nRUN mkdir -vp /etc/service/trough-sync-server \\\n && echo '#!/bin/bash\\nsource /opt/trough-ve3/bin/activate\\nsleep 5\\npython -c $\"import doublethink ; from trough.settings import settings ; rr = doublethink.Rethinker(settings[\\\"RETHINKDB_HOSTS\\\"]) ; rr.db(\\\"trough_configuration\\\").wait().run()\"\\nexec sync.py --server >>/tmp/trough-sync-server.out 2>&1' > /etc/service/trough-sync-server/run \\\n && chmod a+x /etc/service/trough-sync-server/run\nRUN mkdir -vp /etc/service/trough-read \\\n && echo '#!/bin/bash\\nvenv=/opt/trough-ve3\\nsource $venv/bin/activate\\nsleep 5\\npython -c $\"import doublethink ; from trough.settings import settings ; rr = doublethink.Rethinker(settings[\\\"RETHINKDB_HOSTS\\\"]) ; rr.db(\\\"trough_configuration\\\").wait().run()\"\\nexec uwsgi --venv=$venv --http :6444 --master --processes=2 --harakiri=3200 --socket-timeout=3200 --max-requests=50000 --vacuum --die-on-term --wsgi-file $venv/bin/reader.py >>/tmp/trough-read.out 2>&1' > /etc/service/trough-read/run \\\n && chmod a+x /etc/service/trough-read/run\nRUN mkdir -vp /etc/service/trough-write \\\n && echo '#!/bin/bash\\nvenv=/opt/trough-ve3\\nsource $venv/bin/activate\\nsleep 5\\npython -c $\"import doublethink ; from trough.settings import settings ; rr = doublethink.Rethinker(settings[\\\"RETHINKDB_HOSTS\\\"]) ; rr.db(\\\"trough_configuration\\\").wait().run()\"\\nexec uwsgi --venv=$venv --http :6222 --master --processes=2 --harakiri=240 --max-requests=50000 --vacuum --die-on-term --wsgi-file $venv/bin/writer.py >>/tmp/trough-write.out 2>&1' > /etc/service/trough-write/run \\\n && chmod a+x /etc/service/trough-write/run\nRUN mkdir -vp /etc/service/trough-segment-manager-local \\\n && echo '#!/bin/bash\\nvenv=/opt/trough-ve3\\nsource $venv/bin/activate\\nsleep 5\\npython -c $\"import doublethink ; from trough.settings import settings ; rr = doublethink.Rethinker(settings[\\\"RETHINKDB_HOSTS\\\"]) ; rr.db(\\\"trough_configuration\\\").wait().run()\"\\nexec uwsgi --venv=$venv --http :6112 --master --processes=2 --harakiri=7200 --http-timeout=7200 --max-requests=50000 --vacuum --die-on-term --mount /=trough.wsgi.segment_manager:local >>/tmp/trough-segment-manager-local.out 2>&1' > /etc/service/trough-segment-manager-local/run \\\n && chmod a+x /etc/service/trough-segment-manager-local/run\nRUN mkdir -vp /etc/service/trough-segment-manager-server \\\n && echo '#!/bin/bash\\nvenv=/opt/trough-ve3\\nsource $venv/bin/activate\\nsleep 5\\npython -c $\"import doublethink ; from trough.settings import settings ; rr = doublethink.Rethinker(settings[\\\"RETHINKDB_HOSTS\\\"]) ; rr.db(\\\"trough_configuration\\\").wait().run()\"\\nexec uwsgi --venv=$venv --http :6111 --master --processes=2 --harakiri=7200 --http-timeout=7200 --max-requests=50000 --vacuum --die-on-term --mount /=trough.wsgi.segment_manager:server >>/tmp/trough-segment-manager-server.out 2>&1' > /etc/service/trough-segment-manager-server/run \\\n && chmod a+x /etc/service/trough-segment-manager-server/run\n","originalDockerfileUglifiedHash":"3ec5754b86e2bb42d3435bf195f3dee7","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/df9a688c2938479994c1378a703be09ec5449d07.dockerfile"}