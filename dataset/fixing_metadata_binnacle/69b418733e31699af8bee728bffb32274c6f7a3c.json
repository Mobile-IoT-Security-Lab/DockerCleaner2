{"seed":3851404849,"processedDockerfileHash":"79e7209a9a2ac6893aff9437e8456ed3","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM registry.services.nersc.gov/nersc/intel_cxx_fort_mpi_mkl_devel AS builder\nRUN apt-get update -y \\\n && apt-get install --no-install-recommends apt-utils=2.6.0 -y \\\n && echo yes\nRUN DEBIAN_FRONTEND=noninteractive apt install -y --no-install-recommends make git file pkg-config wget swig netpbm wcslib-dev wcslib-tools zlib1g-dev libbz2-dev libcairo2-dev libcfitsio-dev libcfitsio-bin libgsl-dev libjpeg-dev libnetpbm10-dev libpng-dev libeigen3-dev libgoogle-glog-dev libceres-dev python3 python3-dev python3-pip python3-pil python3-tk \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\nRUN echo \"../site-packages\" > /usr/local/lib/python3.5/dist-packages/site-packages.pth\n#   Pip installs -- binary\nRUN for x in setuptools wheel intel-numpy intel-scipy psycopg2-binary matplotlib astropy zmq; do pip3 --no-cache-dir install $x ; done\n#   ugly: Tractor's mp_fourier module detects the $CC='icc' exactly\n#   These are in /opt/intel/bin, which is on the PATH.\nENV CC=\"icc\"\nENV CXX=\"icpc\"\nENV LDSHARED=\"icc -shared\"\n#   Edison & Cori\n#  ENV CFLAGS -O3 -g -fPIC -std=gnu99 -pthread -x=ivybridge -ax=haswell,knl\n#   Just Cori\nENV CFLAGS=\"-O3 -g -fPIC -std=gnu99 -pthread -x=haswell -ax=knl\"\nENV ARCH_FLAGS=\"\\\"\n#   Pip installs -- built from source\nRUN for x in photutils fitsio==0.9.12; do pip3 --no-cache-dir install $x ; done\nENV PYTHON=\"python3\"\nENV PYTHON_CONFIG=\"python3-config\"\nENV PYTHON_SCRIPT=\"\\\"/usr/bin/env python3\\\"\"\nRUN mkdir -p /src\nWORKDIR /src\nENV BLAS=\"-L${MKLROOT}/lib/intel64 -lmkl_rt -fopenmp -lpthread -limf -lsvml -ldl\"\nENV CPPFLAGS=\"-I${MKLROOT}/include\"\nRUN git clone https://github.com/astromatic/sextractor.git sourceextractor \\\n && cd sourceextractor \\\n && sh autogen.sh \\\n && ./configure --enable-icc --enable-mkl \\\n && make \\\n && make install \\\n && make clean\nRUN git clone https://github.com/astromatic/psfex.git psfex \\\n && cd psfex \\\n && sh autogen.sh \\\n && ./configure --enable-icc --enable-mkl \\\n && make \\\n && make install \\\n && make clean\n#   Astrometry.net\nRUN git clone http://github.com/dstndstn/astrometry.net.git astrometry \\\n && cd astrometry \\\n && make -j4 \\\n && make \\\n && make py \\\n && make extra \\\n && make install INSTALL_DIR=/usr/local \\\n && make clean \\\n && (cd \\\n && PYTHONPATH=/usr/local/lib/python python3 -c \"import astrometry; print(astrometry.__version__)\" )\n#   The Tractor\nRUN git clone http://github.com/dstndstn/tractor.git tractor \\\n && cd tractor \\\n && make \\\n && make ceres \\\n && make install INSTALL_DIR=/usr/local \\\n && rm -R $( find . -name \"*.o\" -o -name \"*.so\" ;) \\\n && (cd \\\n && PYTHONPATH=/usr/local/lib/python python3 -c \"import tractor; print(tractor.__version__)\" )\n#  ####### Stage 2 ########\nFROM registry.services.nersc.gov/nersc/intel_cxx_fort_mpi_mkl_runtime\nENV PYTHON=\"python3\"\nENV PYTHON_CONFIG=\"python3-config\"\nENV PYTHON_SCRIPT=\"\\\"/usr/bin/env python3\\\"\"\nRUN rm /root/.profile\nRUN apt-get update -y \\\n && apt-get install --no-install-recommends apt-utils=2.6.0 -y \\\n && DEBIAN_FRONTEND=noninteractive apt install -y --no-install-recommends procps htop make git file pkg-config gdb strace vim less wget netpbm wcslib-dev wcslib-tools libgsl-dev libcfitsio-dev libcfitsio-bin libgoogle-glog-dev libceres-dev python3 python3-dev python3-pip python3-pil python3-tk \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\nCOPY --from=builder /usr/local /usr/local\nRUN pip3 --no-cache-dir install cython ipython\nWORKDIR /src\n#   QDO\nRUN git clone https://bitbucket.org/berkeleylab/qdo.git qdo \\\n && cd qdo \\\n && python3 setup.py install\n#   python = python3\nRUN ln -s /usr/bin/python3 /usr/bin/python\n#   unwise_psf\nRUN git clone https://github.com/legacysurvey/unwise_psf.git \\\n && cd unwise_psf \\\n && git checkout dr8\n#   Legacypipe\nRUN git clone http://github.com/legacysurvey/legacypipe.git legacypipe \\\n && echo 1\nENV PYTHONPATH=\"/usr/local/lib/python:/src/unwise_psf/py:/src/legacypipe/py\"\nENV WISE_PSF_DIR=\"/src/unwise_psf/etc\"\nENV HOME=\"/root\"\n#   set prompt and default shell\nSHELL [\"/bin/bash\", \"-c\"]\nRUN echo \"export PS1='[container] \\u@\\h:\\w$ '\" >> /root/.bashrc \\\n && mkdir /root/.qdo \\\n && echo \"[qdo]\" > /root/.qdo/qdorc \\\n && python -c \"import astropy\" \\\n && python -c \"import matplotlib.font_manager as fm; f = fm.FontManager()\" \\\n && ipython -c \"print('hello')\" \\\n && python -c \"from astropy.coordinates import EarthLocation; EarthLocation._get_site_registry(force_download=True)\" \\\n && python -c \"from astropy.coordinates import EarthLocation, SkyCoord, AltAz; from astropy.time import Time; print(EarthLocation.of_site('ctio')); print(SkyCoord(180.,-45.,unit='deg').transform_to(AltAz(obstime=Time(56806.0, format='mjd'), location=EarthLocation.of_site('ctio'))))\"\n#   Patch astropy:\nCOPY urlmap-readonly.patch /tmp/\nRUN cd /usr/local/lib/python3.5/dist-packages \\\n && patch -p1 < /tmp/urlmap-readonly.patch\n#   Alternatively, could retrieve\n#     http://data.astropy.org/coordinates/sites.json\n#   to\n#     /usr/local/lib/python3.5/dist-packages/astropy/coordinates/data/sites.json\nENTRYPOINT [\"/bin/bash\", \"-c\"]\nCMD [\"/bin/bash\"]\nRUN python -m compileall /src/unwise_psf/py/unwise_psf.py \\\n && python -O -m compileall /src/unwise_psf/py/unwise_psf.py\nRUN python -O -m compileall /usr/lib/python3.5 /usr/lib/python3/dist-packages /usr/local/lib/python /usr/local/lib/python3.5/site-packages /usr/local/lib/python3.5/dist-packages \\\n && python -m compileall /usr/lib/python3.5 /usr/lib/python3/dist-packages /usr/local/lib/python /usr/local/lib/python3.5/site-packages /usr/local/lib/python3.5/dist-packages\nRUN cd /src/legacypipe/py \\\n && git pull \\\n && git describe \\\n && echo 1\nRUN python -m compileall /src/legacypipe/py/{legacypipe,legacyzpts} \\\n && python -O -m compileall /src/legacypipe/py/{legacypipe,legacyzpts}\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM registry.services.nersc.gov/nersc/intel_cxx_fort_mpi_mkl_devel AS builder\nRUN apt-get -y update \\\n && apt-get install -y apt-utils \\\n && echo yes\nRUN DEBIAN_FRONTEND=noninteractive apt install -y --no-install-recommends make git file pkg-config wget swig netpbm wcslib-dev wcslib-tools zlib1g-dev libbz2-dev libcairo2-dev libcfitsio-dev libcfitsio-bin libgsl-dev libjpeg-dev libnetpbm10-dev libpng-dev libeigen3-dev libgoogle-glog-dev libceres-dev python3 python3-dev python3-pip python3-pil python3-tk \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\nRUN echo \"../site-packages\" > /usr/local/lib/python3.5/dist-packages/site-packages.pth\n#  Pip installs -- binary\nRUN for x in setuptools wheel intel-numpy intel-scipy psycopg2-binary matplotlib astropy zmq; do pip3 --no-cache-dir install $x ; done\n#  ugly: Tractor's mp_fourier module detects the $CC='icc' exactly\n#  These are in /opt/intel/bin, which is on the PATH.\nENV CC=\"icc\"\nENV CXX=\"icpc\"\nENV LDSHARED=\"icc -shared\"\n#  Edison & Cori\n# ENV CFLAGS -O3 -g -fPIC -std=gnu99 -pthread -x=ivybridge -ax=haswell,knl\n#  Just Cori\nENV CFLAGS=\"-O3 -g -fPIC -std=gnu99 -pthread -x=haswell -ax=knl\"\nENV ARCH_FLAGS=\"\"\\\"\"\n#  Pip installs -- built from source\nRUN for x in photutils fitsio==0.9.12; do pip3 --no-cache-dir install $x ; done\nENV PYTHON=\"python3\"\nENV PYTHON_CONFIG=\"python3-config\"\nENV PYTHON_SCRIPT=\"\\\"/usr/bin/env python3\\\"\"\nRUN mkdir -p /src\nWORKDIR /src\nENV BLAS=\"-L${MKLROOT}/lib/intel64 -lmkl_rt -fopenmp -lpthread -limf -lsvml -ldl\"\nENV CPPFLAGS=\"-I${MKLROOT}/include\"\nRUN git clone https://github.com/astromatic/sextractor.git sourceextractor \\\n && cd sourceextractor \\\n && sh autogen.sh \\\n && ./configure --enable-icc --enable-mkl \\\n && make \\\n && make install \\\n && make clean\nRUN git clone https://github.com/astromatic/psfex.git psfex \\\n && cd psfex \\\n && sh autogen.sh \\\n && ./configure --enable-icc --enable-mkl \\\n && make \\\n && make install \\\n && make clean\n#  Astrometry.net\nRUN git clone http://github.com/dstndstn/astrometry.net.git astrometry \\\n && cd astrometry \\\n && make -j4 \\\n && make \\\n && make py \\\n && make extra \\\n && make install INSTALL_DIR=/usr/local \\\n && make clean \\\n && (cd \\\n && PYTHONPATH=/usr/local/lib/python python3 -c \"import astrometry; print(astrometry.__version__)\" )\n#  The Tractor\nRUN git clone http://github.com/dstndstn/tractor.git tractor \\\n && cd tractor \\\n && make \\\n && make ceres \\\n && make install INSTALL_DIR=/usr/local \\\n && rm -R $( find . -name \"*.o\" -o -name \"*.so\" ;) \\\n && (cd \\\n && PYTHONPATH=/usr/local/lib/python python3 -c \"import tractor; print(tractor.__version__)\" )\n# ####### Stage 2 ########\nFROM registry.services.nersc.gov/nersc/intel_cxx_fort_mpi_mkl_runtime\nENV PYTHON=\"python3\"\nENV PYTHON_CONFIG=\"python3-config\"\nENV PYTHON_SCRIPT=\"\\\"/usr/bin/env python3\\\"\"\nRUN rm /root/.profile\nRUN apt-get -y update \\\n && apt-get install -y apt-utils \\\n && DEBIAN_FRONTEND=noninteractive apt install -y --no-install-recommends procps htop make git file pkg-config gdb strace vim less wget netpbm wcslib-dev wcslib-tools libgsl-dev libcfitsio-dev libcfitsio-bin libgoogle-glog-dev libceres-dev python3 python3-dev python3-pip python3-pil python3-tk \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\nCOPY --from=builder /usr/local /usr/local\nRUN pip3 --no-cache-dir install cython ipython\nWORKDIR /src\n#  QDO\nRUN git clone https://bitbucket.org/berkeleylab/qdo.git qdo \\\n && cd qdo \\\n && python3 setup.py install\n#  python = python3\nRUN ln -s /usr/bin/python3 /usr/bin/python\n#  unwise_psf\nRUN git clone https://github.com/legacysurvey/unwise_psf.git \\\n && cd unwise_psf \\\n && git checkout dr8\n#  Legacypipe\nRUN git clone http://github.com/legacysurvey/legacypipe.git legacypipe \\\n && echo 1\nENV PYTHONPATH=\"/usr/local/lib/python:/src/unwise_psf/py:/src/legacypipe/py\"\nENV WISE_PSF_DIR=\"/src/unwise_psf/etc\"\nENV HOME=\"/root\"\n#  set prompt and default shell\nSHELL [\"/bin/bash\", \"-c\"]\nRUN echo \"export PS1='[container] \\u@\\h:\\w$ '\" >> /root/.bashrc \\\n && mkdir /root/.qdo \\\n && echo \"[qdo]\" > /root/.qdo/qdorc \\\n && python -c \"import astropy\" \\\n && python -c \"import matplotlib.font_manager as fm; f = fm.FontManager()\" \\\n && ipython -c \"print('hello')\" \\\n && python -c \"from astropy.coordinates import EarthLocation; EarthLocation._get_site_registry(force_download=True)\" \\\n && python -c \"from astropy.coordinates import EarthLocation, SkyCoord, AltAz; from astropy.time import Time; print(EarthLocation.of_site('ctio')); print(SkyCoord(180.,-45.,unit='deg').transform_to(AltAz(obstime=Time(56806.0, format='mjd'), location=EarthLocation.of_site('ctio'))))\"\n#  Patch astropy:\nADD urlmap-readonly.patch /tmp/\nRUN cd /usr/local/lib/python3.5/dist-packages \\\n && patch -p1 < /tmp/urlmap-readonly.patch\n#  Alternatively, could retrieve\n#    http://data.astropy.org/coordinates/sites.json\n#  to\n#    /usr/local/lib/python3.5/dist-packages/astropy/coordinates/data/sites.json\nENTRYPOINT [\"/bin/bash\", \"-c\"]\nCMD [\"/bin/bash\"]\nRUN python -m compileall /src/unwise_psf/py/unwise_psf.py \\\n && python -O -m compileall /src/unwise_psf/py/unwise_psf.py\nRUN python -O -m compileall /usr/lib/python3.5 /usr/lib/python3/dist-packages /usr/local/lib/python /usr/local/lib/python3.5/site-packages /usr/local/lib/python3.5/dist-packages \\\n && python -m compileall /usr/lib/python3.5 /usr/lib/python3/dist-packages /usr/local/lib/python /usr/local/lib/python3.5/site-packages /usr/local/lib/python3.5/dist-packages\nRUN cd /src/legacypipe/py \\\n && git pull \\\n && git describe \\\n && echo 1\nRUN python -m compileall /src/legacypipe/py/{legacypipe,legacyzpts} \\\n && python -O -m compileall /src/legacypipe/py/{legacypipe,legacyzpts}\n","injectedSmells":[],"originalDockerfileHash":"d58031089fa432b624efe3a0e58fc631","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM registry.services.nersc.gov/nersc/intel_cxx_fort_mpi_mkl_devel AS builder\nRUN apt-get update -y \\\n && apt-get install apt-utils -y \\\n && echo yes\nRUN DEBIAN_FRONTEND=noninteractive apt install -y --no-install-recommends make git file pkg-config wget swig netpbm wcslib-dev wcslib-tools zlib1g-dev libbz2-dev libcairo2-dev libcfitsio-dev libcfitsio-bin libgsl-dev libjpeg-dev libnetpbm10-dev libpng-dev libeigen3-dev libgoogle-glog-dev libceres-dev python3 python3-dev python3-pip python3-pil python3-tk \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\nRUN echo \"../site-packages\" > /usr/local/lib/python3.5/dist-packages/site-packages.pth\n#   Pip installs -- binary\nRUN for x in setuptools wheel intel-numpy intel-scipy psycopg2-binary matplotlib astropy zmq; do pip3 --no-cache-dir install $x ; done\n#   ugly: Tractor's mp_fourier module detects the $CC='icc' exactly\n#   These are in /opt/intel/bin, which is on the PATH.\nENV CC=\"icc\"\nENV CXX=\"icpc\"\nENV LDSHARED=\"icc -shared\"\n#   Edison & Cori\n#  ENV CFLAGS -O3 -g -fPIC -std=gnu99 -pthread -x=ivybridge -ax=haswell,knl\n#   Just Cori\nENV CFLAGS=\"-O3 -g -fPIC -std=gnu99 -pthread -x=haswell -ax=knl\"\nENV ARCH_FLAGS=\"\\\"\n#   Pip installs -- built from source\nRUN for x in photutils fitsio==0.9.12; do pip3 --no-cache-dir install $x ; done\nENV PYTHON=\"python3\"\nENV PYTHON_CONFIG=\"python3-config\"\nENV PYTHON_SCRIPT=\"\\\"/usr/bin/env python3\\\"\"\nRUN mkdir -p /src\nWORKDIR /src\nENV BLAS=\"-L${MKLROOT}/lib/intel64 -lmkl_rt -fopenmp -lpthread -limf -lsvml -ldl\"\nENV CPPFLAGS=\"-I${MKLROOT}/include\"\nRUN git clone https://github.com/astromatic/sextractor.git sourceextractor \\\n && cd sourceextractor \\\n && sh autogen.sh \\\n && ./configure --enable-icc --enable-mkl \\\n && make \\\n && make install \\\n && make clean\nRUN git clone https://github.com/astromatic/psfex.git psfex \\\n && cd psfex \\\n && sh autogen.sh \\\n && ./configure --enable-icc --enable-mkl \\\n && make \\\n && make install \\\n && make clean\n#   Astrometry.net\nRUN git clone http://github.com/dstndstn/astrometry.net.git astrometry \\\n && cd astrometry \\\n && make -j4 \\\n && make \\\n && make py \\\n && make extra \\\n && make install INSTALL_DIR=/usr/local \\\n && make clean \\\n && (cd \\\n && PYTHONPATH=/usr/local/lib/python python3 -c \"import astrometry; print(astrometry.__version__)\" )\n#   The Tractor\nRUN git clone http://github.com/dstndstn/tractor.git tractor \\\n && cd tractor \\\n && make \\\n && make ceres \\\n && make install INSTALL_DIR=/usr/local \\\n && rm -R $( find . -name \"*.o\" -o -name \"*.so\" ;) \\\n && (cd \\\n && PYTHONPATH=/usr/local/lib/python python3 -c \"import tractor; print(tractor.__version__)\" )\n#  ####### Stage 2 ########\nFROM registry.services.nersc.gov/nersc/intel_cxx_fort_mpi_mkl_runtime\nENV PYTHON=\"python3\"\nENV PYTHON_CONFIG=\"python3-config\"\nENV PYTHON_SCRIPT=\"\\\"/usr/bin/env python3\\\"\"\nRUN rm /root/.profile\nRUN apt-get update -y \\\n && apt-get install apt-utils -y \\\n && DEBIAN_FRONTEND=noninteractive apt install -y --no-install-recommends procps htop make git file pkg-config gdb strace vim less wget netpbm wcslib-dev wcslib-tools libgsl-dev libcfitsio-dev libcfitsio-bin libgoogle-glog-dev libceres-dev python3 python3-dev python3-pip python3-pil python3-tk \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\nCOPY --from=builder /usr/local /usr/local\nRUN pip3 --no-cache-dir install cython ipython\nWORKDIR /src\n#   QDO\nRUN git clone https://bitbucket.org/berkeleylab/qdo.git qdo \\\n && cd qdo \\\n && python3 setup.py install\n#   python = python3\nRUN ln -s /usr/bin/python3 /usr/bin/python\n#   unwise_psf\nRUN git clone https://github.com/legacysurvey/unwise_psf.git \\\n && cd unwise_psf \\\n && git checkout dr8\n#   Legacypipe\nRUN git clone http://github.com/legacysurvey/legacypipe.git legacypipe \\\n && echo 1\nENV PYTHONPATH=\"/usr/local/lib/python:/src/unwise_psf/py:/src/legacypipe/py\"\nENV WISE_PSF_DIR=\"/src/unwise_psf/etc\"\nENV HOME=\"/root\"\n#   set prompt and default shell\nSHELL [\"/bin/bash\", \"-c\"]\nRUN echo \"export PS1='[container] \\u@\\h:\\w$ '\" >> /root/.bashrc \\\n && mkdir /root/.qdo \\\n && echo \"[qdo]\" > /root/.qdo/qdorc \\\n && python -c \"import astropy\" \\\n && python -c \"import matplotlib.font_manager as fm; f = fm.FontManager()\" \\\n && ipython -c \"print('hello')\" \\\n && python -c \"from astropy.coordinates import EarthLocation; EarthLocation._get_site_registry(force_download=True)\" \\\n && python -c \"from astropy.coordinates import EarthLocation, SkyCoord, AltAz; from astropy.time import Time; print(EarthLocation.of_site('ctio')); print(SkyCoord(180.,-45.,unit='deg').transform_to(AltAz(obstime=Time(56806.0, format='mjd'), location=EarthLocation.of_site('ctio'))))\"\n#   Patch astropy:\nADD urlmap-readonly.patch /tmp/\nRUN cd /usr/local/lib/python3.5/dist-packages \\\n && patch -p1 < /tmp/urlmap-readonly.patch\n#   Alternatively, could retrieve\n#     http://data.astropy.org/coordinates/sites.json\n#   to\n#     /usr/local/lib/python3.5/dist-packages/astropy/coordinates/data/sites.json\nENTRYPOINT [\"/bin/bash\", \"-c\"]\nCMD [\"/bin/bash\"]\nRUN python -m compileall /src/unwise_psf/py/unwise_psf.py \\\n && python -O -m compileall /src/unwise_psf/py/unwise_psf.py\nRUN python -O -m compileall /usr/lib/python3.5 /usr/lib/python3/dist-packages /usr/local/lib/python /usr/local/lib/python3.5/site-packages /usr/local/lib/python3.5/dist-packages \\\n && python -m compileall /usr/lib/python3.5 /usr/lib/python3/dist-packages /usr/local/lib/python /usr/local/lib/python3.5/site-packages /usr/local/lib/python3.5/dist-packages\nRUN cd /src/legacypipe/py \\\n && git pull \\\n && git describe \\\n && echo 1\nRUN python -m compileall /src/legacypipe/py/{legacypipe,legacyzpts} \\\n && python -O -m compileall /src/legacypipe/py/{legacypipe,legacyzpts}\n","originalDockerfileUglifiedHash":"70ef45dd403de5c801ff8686b8eb6dfb","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/69b418733e31699af8bee728bffb32274c6f7a3c.dockerfile"}