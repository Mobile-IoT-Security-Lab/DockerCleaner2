{"seed":2667384083,"processedDockerfileHash":"7191c9b2a2d3b23810291e2372745312","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM ubuntu:16.04\nMAINTAINER Gist Noesis <gistnoeis@gmail.com>\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN sed -i 's#http://archive.ubuntu.com/#http://fr.archive.ubuntu.com/#' /etc/apt/sources.list\n#   built-in packages\nRUN apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends software-properties-common=0.96.20.10 curl=7.47.0-1ubuntu2.19 -y ) \\\n && apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends supervisor=3.2.0-2ubuntu0.2 openssh-server=1:7.2p2-4ubuntu2.10 pwgen=2.07-1.1ubuntu1 sudo=1.8.16-0ubuntu1.10 vim-tiny=2:7.4.1689-3ubuntu1.5 net-tools=1.60-26ubuntu1 lxde=7ubuntu1 x11vnc=0.9.13-1.2build1 xvfb=2:1.18.4-0ubuntu0.12 gtk2-engines-murrine=0.98.2-0ubuntu2.2 ttf-ubuntu-font-family=1:0.83-0ubuntu2 libreoffice=1:5.1.6~rc2-0ubuntu1~xenial10 firefox=88.0+build2-0ubuntu0.16.04.1 fonts-wqy-microhei=0.2.0-beta-2 language-pack-zh-hant=1:16.04+20160627 language-pack-gnome-zh-hant=1:16.04+20160627 firefox-locale-zh-hant=88.0+build2-0ubuntu0.16.04.1 libreoffice-l10n-zh-tw=1:5.1.4-0ubuntu1 nginx=1.10.3-0ubuntu0.16.04.5 python-pip=8.1.1-2ubuntu0.6 python-dev=2.7.12-1~16.04 build-essential=12.1ubuntu2 mesa-utils=8.3.0-1 libgl1-mesa-dri=18.0.5-0ubuntu0~16.04.1 gnome-themes-standard=3.18.0-2ubuntu2 gtk2-engines-pixbuf=2.24.30-1ubuntu1.16.04.2 gtk2-engines-murrine=0.98.2-0ubuntu2.2 pinta=1.6-2 dbus-x11=1.10.6-1ubuntu3.6 x11-utils=7.7+3 -y --allow-unauthenticated )\nRUN echo \"deb http://archive.ubuntu.com/ubuntu/ xenial universe multiverse\" >> /etc/apt/sources.list \\\n && : \\\n && apt-get -y upgrade\n#   install some basic utilities\nRUN (apt-get update ;apt-get install --no-install-recommends build-essential=12.1ubuntu2 -y ) \\\n && (apt-get update ;apt-get install --no-install-recommends curl=7.47.0-1ubuntu2.19 git=1:2.7.4-0ubuntu1.10 htop=2.0.1-1ubuntu1 man unzip=6.0-20ubuntu1.1 wget=1.17.1-1ubuntu1.5 nano=2.5.3-2ubuntu2 -y )\n#   tini for subreap                                   \nENV TINI_VERSION=\"v0.9.0\"\nRUN which wget &> /dev/null || (apt-get update ;apt-get install --no-install-recommends wget=1.20.3 ) ; wget --no-verbose --output-document /bin/tini https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini\nRUN chmod +x /bin/tini\nRUN (apt-get update ;apt-get install --no-install-recommends v4l-utils=1.10.0-1 ffmpeg=7:2.8.17-0ubuntu0.1 -y )\n#   bluez dependencies\nRUN (apt-get update ;apt-get install --no-install-recommends libglib2.0-dev=2.48.2-0ubuntu4.8 libical-dev=1.0.1-0ubuntu2 libreadline-dev=6.3-8ubuntu2 libudev-dev=229-4ubuntu21.31 libdbus-1-dev=1.10.6-1ubuntu3.6 libdbus-glib-1-dev=0.106-1 -y )\n#   debugging\nRUN (apt-get update ;apt-get install --no-install-recommends usbutils=1:007-4 strace=4.11-1ubuntu3 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends bluez=5.37-0ubuntu5.3 bluez-hcidump=5.37-0ubuntu5.3 blueman=2.0.4-1ubuntu2.1 checkinstall=1.6.2-4ubuntu1 libusb-dev=2:0.1.12-28 libbluetooth-dev=5.37-0ubuntu5.3 joystick=1:1.4.9-1 -y )\nRUN wget http://www.pabr.org/sixlinux/sixpair.c\nRUN gcc -o sixpair sixpair.c -lusb\nRUN git clone https://github.com/aaronp24/QtSixA.git \\\n && cd QtSixA/sixad \\\n && make \\\n && sudo mkdir -p /var/lib/sixad/profiles \\\n && sudo checkinstall -y\nRUN (apt-get update ;apt-get install --no-install-recommends python-dbus=1.2.0-3 -y )\n#  install opencv3 python 3\nRUN (apt-get update ;apt-get install --no-install-recommends wget=1.17.1-1ubuntu1.5 unzip=6.0-20ubuntu1.1 build-essential=12.1ubuntu2 cmake=3.5.1-1ubuntu3 git=1:2.7.4-0ubuntu1.10 pkg-config=0.29.1-0ubuntu1 libatlas-base-dev=3.10.2-9 gfortran=4:5.3.1-1ubuntu1 libjasper-dev=1.900.1-debian1-2.4ubuntu1.3 libgtk2.0-dev=2.24.30-1ubuntu1.16.04.2 libavcodec-dev=7:2.8.17-0ubuntu0.1 libavformat-dev=7:2.8.17-0ubuntu0.1 libswscale-dev=7:2.8.17-0ubuntu0.1 libjpeg-dev=8c-2ubuntu8 libpng-dev libtiff-dev libjasper-dev=1.900.1-debian1-2.4ubuntu1.3 libv4l-dev=1.10.0-1 -y )\nRUN sudo apt-get install -y python3-pip\nRUN pip3 install numpy\nRUN wget https://github.com/Itseez/opencv/archive/3.3.0.zip\nRUN unzip 3.3.0.zip\nRUN mv opencv-3.3.0 /opencv\nRUN mkdir /opencv/release\nWORKDIR /opencv/release \nRUN cmake -DBUILD_TIFF=ON -DBUILD_opencv_java=OFF -DWITH_CUDA=OFF -DENABLE_AVX=ON -DWITH_OPENGL=ON -DWITH_OPENCL=ON -DWITH_IPP=OFF -DWITH_TBB=ON -DWITH_EIGEN=ON -DWITH_V4L=ON -DWITH_VTK=OFF -DBUILD_TESTS=OFF -DBUILD_PERF_TESTS=OFF -DCMAKE_BUILD_TYPE=RELEASE -DBUILD_opencv_python2=OFF -DCMAKE_INSTALL_PREFIX=$( python3 -c \"import sys; print(sys.prefix)\" ;) -DPYTHON3_EXECUTABLE=$( which python3 ;) -DPYTHON3_INCLUDE_DIR=$( python3 -c \"from distutils.sysconfig import get_python_inc; print(get_python_inc())\" ;) -DPYTHON3_PACKAGES_PATH=$( python3 -c \"from distutils.sysconfig import get_python_lib; print(get_python_lib())\" ;) ..\nRUN make -j4\nRUN make install\nRUN (apt-get update ;apt-get install --no-install-recommends ipython3=2.4.1-1 -y )\nRUN pip3 install scipy pyserial evdev zmq\nCOPY image /\nRUN pip install setuptools==67.6.1 wheel==0.40.0 \\\n && pip install -r /usr/lib/web/requirements.txt\nRUN useradd -ms /bin/bash linn\nRUN usermod -a -G audio linn\n#  currently we always build against latest but we 'll probably fix the version to increase stability in the future\nRUN git clone https://github.com/GistNoesis/Linn-Photobooth.git /root/Linn-Photobooth\nEXPOSE 80/tcp\nWORKDIR /root\nENV HOME=\"/home/ubuntu\" \\\n    SHELL=\"/bin/bash\"\nENTRYPOINT [\"/startup.sh\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:16.04\nMAINTAINER Gist Noesis <gistnoeis@gmail.com>\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN sed -i 's#http://archive.ubuntu.com/#http://fr.archive.ubuntu.com/#' /etc/apt/sources.list\n#  built-in packages\nRUN apt-get update \\\n && apt-get install --no-install-recommends software-properties-common curl -y \\\n && apt-get update \\\n && apt-get install --no-install-recommends supervisor openssh-server pwgen sudo vim-tiny net-tools lxde x11vnc xvfb gtk2-engines-murrine ttf-ubuntu-font-family libreoffice firefox fonts-wqy-microhei language-pack-zh-hant language-pack-gnome-zh-hant firefox-locale-zh-hant libreoffice-l10n-zh-tw nginx python-pip python-dev build-essential mesa-utils libgl1-mesa-dri gnome-themes-standard gtk2-engines-pixbuf gtk2-engines-murrine pinta dbus-x11 x11-utils -y --allow-unauthenticated\nRUN echo \"deb http://archive.ubuntu.com/ubuntu/ xenial universe multiverse\" >> /etc/apt/sources.list \\\n && apt-get update \\\n && apt-get -y upgrade\n#  install some basic utilities\nRUN apt-get install build-essential -y \\\n && apt-get install curl git htop man unzip wget nano -y\n#  tini for subreap                                   \nENV TINI_VERSION=\"v0.9.0\"\nADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini /bin/tini\nRUN chmod +x /bin/tini\nRUN apt-get install v4l-utils ffmpeg -y\n#  bluez dependencies\nRUN apt-get install libglib2.0-dev libical-dev libreadline-dev libudev-dev libdbus-1-dev libdbus-glib-1-dev -y\n#  debugging\nRUN apt-get install usbutils strace -y\nRUN apt-get install bluez bluez-hcidump blueman checkinstall libusb-dev libbluetooth-dev joystick -y\nRUN wget http://www.pabr.org/sixlinux/sixpair.c\nRUN gcc -o sixpair sixpair.c -lusb\nRUN git clone https://github.com/aaronp24/QtSixA.git \\\n && cd QtSixA/sixad \\\n && make \\\n && sudo mkdir -p /var/lib/sixad/profiles \\\n && sudo checkinstall -y\nRUN apt-get install python-dbus -y\n# install opencv3 python 3\nRUN apt-get install wget unzip build-essential cmake git pkg-config libatlas-base-dev gfortran libjasper-dev libgtk2.0-dev libavcodec-dev libavformat-dev libswscale-dev libjpeg-dev libpng-dev libtiff-dev libjasper-dev libv4l-dev -y\nRUN sudo apt-get install -y python3-pip\nRUN pip3 install numpy\nRUN wget https://github.com/Itseez/opencv/archive/3.3.0.zip\nRUN unzip 3.3.0.zip\nRUN mv opencv-3.3.0 /opencv\nRUN mkdir /opencv/release\nWORKDIR /opencv/release \nRUN cmake -DBUILD_TIFF=ON -DBUILD_opencv_java=OFF -DWITH_CUDA=OFF -DENABLE_AVX=ON -DWITH_OPENGL=ON -DWITH_OPENCL=ON -DWITH_IPP=OFF -DWITH_TBB=ON -DWITH_EIGEN=ON -DWITH_V4L=ON -DWITH_VTK=OFF -DBUILD_TESTS=OFF -DBUILD_PERF_TESTS=OFF -DCMAKE_BUILD_TYPE=RELEASE -DBUILD_opencv_python2=OFF -DCMAKE_INSTALL_PREFIX=$( python3 -c \"import sys; print(sys.prefix)\" ;) -DPYTHON3_EXECUTABLE=$( which python3 ;) -DPYTHON3_INCLUDE_DIR=$( python3 -c \"from distutils.sysconfig import get_python_inc; print(get_python_inc())\" ;) -DPYTHON3_PACKAGES_PATH=$( python3 -c \"from distutils.sysconfig import get_python_lib; print(get_python_lib())\" ;) ..\nRUN make -j4\nRUN make install\nRUN apt-get install ipython3 -y\nRUN pip3 install scipy pyserial evdev zmq\nADD image /\nRUN pip install setuptools wheel \\\n && pip install -r /usr/lib/web/requirements.txt\nRUN useradd -ms /bin/bash linn\nRUN usermod -a -G audio linn\n# currently we always build against latest but we 'll probably fix the version to increase stability in the future\nRUN git clone https://github.com/GistNoesis/Linn-Photobooth.git /root/Linn-Photobooth\nEXPOSE 80/tcp\nWORKDIR /root\nENV HOME=\"/home/ubuntu\" \\\n    SHELL=\"/bin/bash\"\nENTRYPOINT [\"/startup.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"05a0839c72a8e8362dac8c1d9efd0d13","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:16.04\nMAINTAINER Gist Noesis <gistnoeis@gmail.com>\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN sed -i 's#http://archive.ubuntu.com/#http://fr.archive.ubuntu.com/#' /etc/apt/sources.list\n#   built-in packages\nRUN apt-get update \\\n && apt-get install --no-install-recommends software-properties-common curl -y \\\n && apt-get update \\\n && apt-get install --no-install-recommends supervisor openssh-server pwgen sudo vim-tiny net-tools lxde x11vnc xvfb gtk2-engines-murrine ttf-ubuntu-font-family libreoffice firefox fonts-wqy-microhei language-pack-zh-hant language-pack-gnome-zh-hant firefox-locale-zh-hant libreoffice-l10n-zh-tw nginx python-pip python-dev build-essential mesa-utils libgl1-mesa-dri gnome-themes-standard gtk2-engines-pixbuf gtk2-engines-murrine pinta dbus-x11 x11-utils -y --allow-unauthenticated\nRUN echo \"deb http://archive.ubuntu.com/ubuntu/ xenial universe multiverse\" >> /etc/apt/sources.list \\\n && apt-get update \\\n && apt-get -y upgrade\n#   install some basic utilities\nRUN apt-get install build-essential -y \\\n && apt-get install curl git htop man unzip wget nano -y\n#   tini for subreap                                   \nENV TINI_VERSION=\"v0.9.0\"\nADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini /bin/tini\nRUN chmod +x /bin/tini\nRUN apt-get install v4l-utils ffmpeg -y\n#   bluez dependencies\nRUN apt-get install libglib2.0-dev libical-dev libreadline-dev libudev-dev libdbus-1-dev libdbus-glib-1-dev -y\n#   debugging\nRUN apt-get install usbutils strace -y\nRUN apt-get install bluez bluez-hcidump blueman checkinstall libusb-dev libbluetooth-dev joystick -y\nRUN wget http://www.pabr.org/sixlinux/sixpair.c\nRUN gcc -o sixpair sixpair.c -lusb\nRUN git clone https://github.com/aaronp24/QtSixA.git \\\n && cd QtSixA/sixad \\\n && make \\\n && sudo mkdir -p /var/lib/sixad/profiles \\\n && sudo checkinstall -y\nRUN apt-get install python-dbus -y\n#  install opencv3 python 3\nRUN apt-get install wget unzip build-essential cmake git pkg-config libatlas-base-dev gfortran libjasper-dev libgtk2.0-dev libavcodec-dev libavformat-dev libswscale-dev libjpeg-dev libpng-dev libtiff-dev libjasper-dev libv4l-dev -y\nRUN sudo apt-get install -y python3-pip\nRUN pip3 install numpy\nRUN wget https://github.com/Itseez/opencv/archive/3.3.0.zip\nRUN unzip 3.3.0.zip\nRUN mv opencv-3.3.0 /opencv\nRUN mkdir /opencv/release\nWORKDIR /opencv/release \nRUN cmake -DBUILD_TIFF=ON -DBUILD_opencv_java=OFF -DWITH_CUDA=OFF -DENABLE_AVX=ON -DWITH_OPENGL=ON -DWITH_OPENCL=ON -DWITH_IPP=OFF -DWITH_TBB=ON -DWITH_EIGEN=ON -DWITH_V4L=ON -DWITH_VTK=OFF -DBUILD_TESTS=OFF -DBUILD_PERF_TESTS=OFF -DCMAKE_BUILD_TYPE=RELEASE -DBUILD_opencv_python2=OFF -DCMAKE_INSTALL_PREFIX=$( python3 -c \"import sys; print(sys.prefix)\" ;) -DPYTHON3_EXECUTABLE=$( which python3 ;) -DPYTHON3_INCLUDE_DIR=$( python3 -c \"from distutils.sysconfig import get_python_inc; print(get_python_inc())\" ;) -DPYTHON3_PACKAGES_PATH=$( python3 -c \"from distutils.sysconfig import get_python_lib; print(get_python_lib())\" ;) ..\nRUN make -j4\nRUN make install\nRUN apt-get install ipython3 -y\nRUN pip3 install scipy pyserial evdev zmq\nADD image /\nRUN pip install setuptools wheel \\\n && pip install -r /usr/lib/web/requirements.txt\nRUN useradd -ms /bin/bash linn\nRUN usermod -a -G audio linn\n#  currently we always build against latest but we 'll probably fix the version to increase stability in the future\nRUN git clone https://github.com/GistNoesis/Linn-Photobooth.git /root/Linn-Photobooth\nEXPOSE 80/tcp\nWORKDIR /root\nENV HOME=\"/home/ubuntu\" \\\n    SHELL=\"/bin/bash\"\nENTRYPOINT [\"/startup.sh\"]\n","originalDockerfileUglifiedHash":"8c33c50c0178ace1bdda8b35b0894568","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/1a3491c98e3408745f00d7a78a0385fcb2f4a989.dockerfile"}