{"seed":2944383943,"processedDockerfileHash":"e64285262ed93b2a55e1db61104a5ec8","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM unocha/alpine-base-s6:%%UPSTREAM%%\n#   Parse arguments for the build command.\nARG NODE_VERSION=6.12.0\nARG NPM_VERSION=3.10.10\nARG YARN_VERSION=1.3.2\nARG VERSION\nARG VCS_URL\nARG VCS_REF\nARG BUILD_DATE\nENV NODE_VERSION=\"$NODE_VERSION\" \\\n    YARN_VERSION=\"$YARN_VERSION\" \\\n    NPM_VERSION=\"$NPM_VERSION\" \\\n    NODE_APP_DIR=\"/srv/www\" \\\n    NODE_PATH=\"/usr/lib/node_modules:/usr/local/lib/node_modules:/usr/local/share/.config/yarn/global/node_modules\" \\\n    NPM_CONFIG_SPIN=\"false\" \\\n    NPM_CONFIG_PROGRESS=\"false\" \\\n    SRC_DIR=\"/src\" \\\n    NEW_RELIC_HOME=\"/srv/\" \\\n    NEW_RELIC_LOG_LEVEL=\"info\" \\\n    NEW_RELIC_LICENSE_KEY=\"aaa\" \\\n    NEW_RELIC_APP_NAME=\"nodeapp\" \\\n    NEW_RELIC_NO_CONFIG_FILE=\"True\"\n#   A little bit of metadata management.\n#   See http://label-schema.org/\nLABEL org.label-schema.schema-version=\"1.0\" \\\n      org.label-schema.build-date=\"$BUILD_DATE\" \\\n      org.label-schema.vendor=\"UN-OCHA\" \\\n      org.label-schema.version=\"$VERSION\" \\\n      org.label-schema.vcs-url=\"$VCS_URL\" \\\n      org.label-schema.vcs-ref=\"$VCS_REF\" \\\n      org.label-schema.name=\"nodejs-base\" \\\n      org.label-schema.description=\"This service provides a base nodejs platform.\" \\\n      org.label-schema.architecture=\"x86_64\" \\\n      org.label-schema.distribution=\"Alpine Linux\" \\\n      org.label-schema.distribution-version=\"3.6\" \\\n      info.humanitarianresponse.nodejs=\"$NODE_VERSION\" \\\n      info.humanitarianresponse.npm=\"$NPM_VERSION\" \\\n      info.humanitarianresponse.yarn=\"$YARN_VERSION\"\nRUN apk add libstdc++ --no-cache \\\n && apk add curl git --no-cache \\\n && apk add bash binutils-gold build-base gnupg linux-headers perl python --no-cache --virtual .build-deps \\\n && for key in 94AE36675C464D64BAFA68DD7434390BDBE9B9C5 FD3A5288F042B6850C66B31F09FE44734EB7990E 71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 DD8F2338BAE7501E3DD5AC78C273792F7D83545D C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 B9AE9905FFD7803F25714661B63B535A4C206CA9 56730D5401028683275BD23C23EFEFE93C4CFFFE 77984A986EBC2AA786BC0F66B01FBB92821C587A; do gpg --keyserver pgp.mit.edu --recv-keys \"$key\" || gpg --keyserver keyserver.pgp.com --recv-keys \"$key\" || gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\" ; done \\\n && curl -SLO \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION.tar.xz\" \\\n && curl -SLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\" \\\n && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc \\\n && grep \" node-v$NODE_VERSION.tar.xz$\" SHASUMS256.txt | sha256sum -c - \\\n && tar -xf \"node-v$NODE_VERSION.tar.xz\" \\\n && cd \"node-v$NODE_VERSION\" \\\n && ./configure --prefix=/usr --without-npm \\\n && make -j$( getconf _NPROCESSORS_ONLN ;) \\\n && make install \\\n && cd .. \\\n && rm -Rf \"node-v$NODE_VERSION\" \\\n && rm \"node-v$NODE_VERSION.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt \\\n && for key in 6A010C5166006599AA17F08146C2130DFD2497F5; do gpg --keyserver pgp.mit.edu --recv-keys \"$key\" || gpg --keyserver keyserver.pgp.com --recv-keys \"$key\" || gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\" ; done \\\n && curl -fSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz\" \\\n && curl -fSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz.asc\" \\\n && gpg --batch --verify yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz \\\n && mkdir -p /opt/yarn \\\n && tar -xzf yarn-v$YARN_VERSION.tar.gz -C /opt/yarn --strip-components=1 \\\n && ln -s /opt/yarn/bin/yarn /usr/local/bin/yarn \\\n && ln -s /opt/yarn/bin/yarn /usr/local/bin/yarnpkg \\\n && rm yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz \\\n && yarn global add grunt-cli newrelic \\\n && yarn cache clean \\\n && cd /tmp \\\n && curl https://codeload.github.com/npm/npm/tar.gz/v${NPM_VERSION} -o npm.tgz \\\n && tar xvzf npm.tgz \\\n && cd npm-${NPM_VERSION} \\\n && make install \\\n && apk del .build-deps \\\n && rm -rf /usr/lib/node_modules/npm/man /usr/lib/node_modules/npm/doc /usr/lib/node_modules/npm/html /usr/lib/node_modules/npm/scripts /tmp \\\n && rm -rf /var/cache/apk/* \\\n && mkdir -p /tmp \\\n && chmod 1777 /tmp \\\n && mkdir -p ${SRC_DIR} ${NODE_APP_DIR} \\\n && cp -a /usr/local/share/.config/yarn/global/node_modules/newrelic/newrelic.js /srv\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM unocha/alpine-base-s6:%%UPSTREAM%%\n#  Parse arguments for the build command.\nARG NODE_VERSION=6.12.0\nARG NPM_VERSION=3.10.10\nARG YARN_VERSION=1.3.2\nARG VERSION\nARG VCS_URL\nARG VCS_REF\nARG BUILD_DATE\nENV NODE_VERSION=\"$NODE_VERSION\" \\\n    YARN_VERSION=\"$YARN_VERSION\" \\\n    NPM_VERSION=\"$NPM_VERSION\" \\\n    NODE_APP_DIR=\"/srv/www\" \\\n    NODE_PATH=\"/usr/lib/node_modules:/usr/local/lib/node_modules:/usr/local/share/.config/yarn/global/node_modules\" \\\n    NPM_CONFIG_SPIN=\"false\" \\\n    NPM_CONFIG_PROGRESS=\"false\" \\\n    SRC_DIR=\"/src\" \\\n    NEW_RELIC_HOME=\"/srv/\" \\\n    NEW_RELIC_LOG_LEVEL=\"info\" \\\n    NEW_RELIC_LICENSE_KEY=\"aaa\" \\\n    NEW_RELIC_APP_NAME=\"nodeapp\" \\\n    NEW_RELIC_NO_CONFIG_FILE=\"True\"\n#  A little bit of metadata management.\n#  See http://label-schema.org/\nLABEL org.label-schema.schema-version=\"1.0\" \\\n      org.label-schema.build-date=\"$BUILD_DATE\" \\\n      org.label-schema.vendor=\"UN-OCHA\" \\\n      org.label-schema.version=\"$VERSION\" \\\n      org.label-schema.vcs-url=\"$VCS_URL\" \\\n      org.label-schema.vcs-ref=\"$VCS_REF\" \\\n      org.label-schema.name=\"nodejs-base\" \\\n      org.label-schema.description=\"This service provides a base nodejs platform.\" \\\n      org.label-schema.architecture=\"x86_64\" \\\n      org.label-schema.distribution=\"Alpine Linux\" \\\n      org.label-schema.distribution-version=\"3.6\" \\\n      info.humanitarianresponse.nodejs=\"$NODE_VERSION\" \\\n      info.humanitarianresponse.npm=\"$NPM_VERSION\" \\\n      info.humanitarianresponse.yarn=\"$YARN_VERSION\"\nRUN apk add --no-cache libstdc++ \\\n && apk add --no-cache curl git \\\n && apk add --no-cache --virtual .build-deps bash binutils-gold build-base gnupg linux-headers perl python \\\n && for key in 94AE36675C464D64BAFA68DD7434390BDBE9B9C5 FD3A5288F042B6850C66B31F09FE44734EB7990E 71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 DD8F2338BAE7501E3DD5AC78C273792F7D83545D C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 B9AE9905FFD7803F25714661B63B535A4C206CA9 56730D5401028683275BD23C23EFEFE93C4CFFFE 77984A986EBC2AA786BC0F66B01FBB92821C587A; do gpg --keyserver pgp.mit.edu --recv-keys \"$key\" || gpg --keyserver keyserver.pgp.com --recv-keys \"$key\" || gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\" ; done \\\n && curl -SLO \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION.tar.xz\" \\\n && curl -SLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\" \\\n && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc \\\n && grep \" node-v$NODE_VERSION.tar.xz$\" SHASUMS256.txt | sha256sum -c - \\\n && tar -xf \"node-v$NODE_VERSION.tar.xz\" \\\n && cd \"node-v$NODE_VERSION\" \\\n && ./configure --prefix=/usr --without-npm \\\n && make -j$( getconf _NPROCESSORS_ONLN ;) \\\n && make install \\\n && cd .. \\\n && rm -Rf \"node-v$NODE_VERSION\" \\\n && rm \"node-v$NODE_VERSION.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt \\\n && for key in 6A010C5166006599AA17F08146C2130DFD2497F5; do gpg --keyserver pgp.mit.edu --recv-keys \"$key\" || gpg --keyserver keyserver.pgp.com --recv-keys \"$key\" || gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\" ; done \\\n && curl -fSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz\" \\\n && curl -fSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz.asc\" \\\n && gpg --batch --verify yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz \\\n && mkdir -p /opt/yarn \\\n && tar -xzf yarn-v$YARN_VERSION.tar.gz -C /opt/yarn --strip-components=1 \\\n && ln -s /opt/yarn/bin/yarn /usr/local/bin/yarn \\\n && ln -s /opt/yarn/bin/yarn /usr/local/bin/yarnpkg \\\n && rm yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz \\\n && yarn global add grunt-cli newrelic \\\n && yarn cache clean \\\n && cd /tmp \\\n && curl https://codeload.github.com/npm/npm/tar.gz/v${NPM_VERSION} -o npm.tgz \\\n && tar xvzf npm.tgz \\\n && cd npm-${NPM_VERSION} \\\n && make install \\\n && apk del .build-deps \\\n && rm -rf /usr/lib/node_modules/npm/man /usr/lib/node_modules/npm/doc /usr/lib/node_modules/npm/html /usr/lib/node_modules/npm/scripts /tmp \\\n && rm -rf /var/cache/apk/* \\\n && mkdir -p /tmp \\\n && chmod 1777 /tmp \\\n && mkdir -p ${SRC_DIR} ${NODE_APP_DIR} \\\n && cp -a /usr/local/share/.config/yarn/global/node_modules/newrelic/newrelic.js /srv\n","injectedSmells":[],"originalDockerfileHash":"23406d44f69908e5412e8750af7fbbc7","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM unocha/alpine-base-s6:%%UPSTREAM%%\n#   Parse arguments for the build command.\nARG NODE_VERSION=6.12.0\nARG NPM_VERSION=3.10.10\nARG YARN_VERSION=1.3.2\nARG VERSION\nARG VCS_URL\nARG VCS_REF\nARG BUILD_DATE\nENV NODE_VERSION=\"$NODE_VERSION\" \\\n    YARN_VERSION=\"$YARN_VERSION\" \\\n    NPM_VERSION=\"$NPM_VERSION\" \\\n    NODE_APP_DIR=\"/srv/www\" \\\n    NODE_PATH=\"/usr/lib/node_modules:/usr/local/lib/node_modules:/usr/local/share/.config/yarn/global/node_modules\" \\\n    NPM_CONFIG_SPIN=\"false\" \\\n    NPM_CONFIG_PROGRESS=\"false\" \\\n    SRC_DIR=\"/src\" \\\n    NEW_RELIC_HOME=\"/srv/\" \\\n    NEW_RELIC_LOG_LEVEL=\"info\" \\\n    NEW_RELIC_LICENSE_KEY=\"aaa\" \\\n    NEW_RELIC_APP_NAME=\"nodeapp\" \\\n    NEW_RELIC_NO_CONFIG_FILE=\"True\"\n#   A little bit of metadata management.\n#   See http://label-schema.org/\nLABEL org.label-schema.schema-version=\"1.0\" \\\n      org.label-schema.build-date=\"$BUILD_DATE\" \\\n      org.label-schema.vendor=\"UN-OCHA\" \\\n      org.label-schema.version=\"$VERSION\" \\\n      org.label-schema.vcs-url=\"$VCS_URL\" \\\n      org.label-schema.vcs-ref=\"$VCS_REF\" \\\n      org.label-schema.name=\"nodejs-base\" \\\n      org.label-schema.description=\"This service provides a base nodejs platform.\" \\\n      org.label-schema.architecture=\"x86_64\" \\\n      org.label-schema.distribution=\"Alpine Linux\" \\\n      org.label-schema.distribution-version=\"3.6\" \\\n      info.humanitarianresponse.nodejs=\"$NODE_VERSION\" \\\n      info.humanitarianresponse.npm=\"$NPM_VERSION\" \\\n      info.humanitarianresponse.yarn=\"$YARN_VERSION\"\nRUN apk add --no-cache libstdc++ \\\n && apk add --no-cache curl git \\\n && apk add --no-cache --virtual .build-deps bash binutils-gold build-base gnupg linux-headers perl python \\\n && for key in 94AE36675C464D64BAFA68DD7434390BDBE9B9C5 FD3A5288F042B6850C66B31F09FE44734EB7990E 71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 DD8F2338BAE7501E3DD5AC78C273792F7D83545D C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 B9AE9905FFD7803F25714661B63B535A4C206CA9 56730D5401028683275BD23C23EFEFE93C4CFFFE 77984A986EBC2AA786BC0F66B01FBB92821C587A; do gpg --keyserver pgp.mit.edu --recv-keys \"$key\" || gpg --keyserver keyserver.pgp.com --recv-keys \"$key\" || gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\" ; done \\\n && curl -SLO \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION.tar.xz\" \\\n && curl -SLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\" \\\n && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc \\\n && grep \" node-v$NODE_VERSION.tar.xz$\" SHASUMS256.txt | sha256sum -c - \\\n && tar -xf \"node-v$NODE_VERSION.tar.xz\" \\\n && cd \"node-v$NODE_VERSION\" \\\n && ./configure --prefix=/usr --without-npm \\\n && make -j$( getconf _NPROCESSORS_ONLN ;) \\\n && make install \\\n && cd .. \\\n && rm -Rf \"node-v$NODE_VERSION\" \\\n && rm \"node-v$NODE_VERSION.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt \\\n && for key in 6A010C5166006599AA17F08146C2130DFD2497F5; do gpg --keyserver pgp.mit.edu --recv-keys \"$key\" || gpg --keyserver keyserver.pgp.com --recv-keys \"$key\" || gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\" ; done \\\n && curl -fSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz\" \\\n && curl -fSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz.asc\" \\\n && gpg --batch --verify yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz \\\n && mkdir -p /opt/yarn \\\n && tar -xzf yarn-v$YARN_VERSION.tar.gz -C /opt/yarn --strip-components=1 \\\n && ln -s /opt/yarn/bin/yarn /usr/local/bin/yarn \\\n && ln -s /opt/yarn/bin/yarn /usr/local/bin/yarnpkg \\\n && rm yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz \\\n && yarn global add grunt-cli newrelic \\\n && yarn cache clean \\\n && cd /tmp \\\n && curl https://codeload.github.com/npm/npm/tar.gz/v${NPM_VERSION} -o npm.tgz \\\n && tar xvzf npm.tgz \\\n && cd npm-${NPM_VERSION} \\\n && make install \\\n && apk del .build-deps \\\n && rm -rf /usr/lib/node_modules/npm/man /usr/lib/node_modules/npm/doc /usr/lib/node_modules/npm/html /usr/lib/node_modules/npm/scripts /tmp \\\n && rm -rf /var/cache/apk/* \\\n && mkdir -p /tmp \\\n && chmod 1777 /tmp \\\n && mkdir -p ${SRC_DIR} ${NODE_APP_DIR} \\\n && cp -a /usr/local/share/.config/yarn/global/node_modules/newrelic/newrelic.js /srv\n","originalDockerfileUglifiedHash":"07ecb245e1c279aba78b159abb21afa9","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/6b6af3acb01a2bd2eb0a81cb933b9932c6a2f6d4.dockerfile"}