{"seed":1905054200,"processedDockerfileHash":"8a07f0de0f78e27ae971a4817a09bf8f","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM kpango/go:latest AS go\nFROM kpango/rust:latest AS rust\nFROM kpango/nim:latest AS nim\nFROM kpango/dart:latest AS dart\nFROM kpango/docker:latest AS docker\n#   FROM node:11-alpine AS node\n#   RUN npm config set user  root \\\n#       && npm install -g neovim resume-cli\n#   FROM python:3.7-alpine AS python3\n#   RUN apk add --no-cache --virtual .build-deps gcc musl-dev\n#   RUN pip3 install --upgrade pip neovim\n#   RUN apk del .build-deps gcc musl-dev\n#   FROM python:2.7-alpine AS python2\n#   RUN apk add --no-cache --virtual .build-deps gcc musl-dev\n#   RUN pip2 install --upgrade pip neovim\n#   RUN apk del .build-deps gcc musl-dev\n#   FROM ruby:alpine AS ruby\n#\n#   RUN apk add --no-cache --virtual .build-deps gcc make musl-dev\n#   RUN gem install neovim -no-ri-no-rdoc\n#   RUN apk del .build-deps gcc musl-dev\nFROM kpango/kube:latest AS kube\nFROM kpango/gcloud:latest AS gcloud\nFROM kpango/glibc:latest AS glibc\nFROM kpango/env:latest AS env\nFROM env\nLABEL maintainer=\"kpango <i.can.feel.gravity@gmail.com>\"\nENV TZ=\"Asia/Tokyo\"\nENV HOME=\"/root\"\nENV GOPATH=\"/go\"\nENV GOROOT=\"/usr/local/go\"\nENV GCLOUD_PATH=\"/google-cloud-sdk\"\nENV CARGO_PATH=\"/root/.cargo\"\nENV DART_PATH=\"/usr/lib/dart\"\nENV PATH=\"$GOPATH/bin:/usr/local/go/bin:$CARGO_PATH/bin:$DART_PATH/bin:$GCLOUD_PATH/bin:$PATH\"\nENV NVIM_HOME=\"$HOME/.config/nvim\"\nENV LIBRARY_PATH=\"/usr/local/lib:$LIBRARY_PATH\"\nENV ZPLUG_HOME=\"$HOME/.zplug;\"\n#   COPY --from=python3 /usr/local /usr/local\n#   COPY --from=python2 /usr/local /usr/local\n#   COPY --from=node /usr/local/bin/node /usr/bin/node\n#   COPY --from=node /usr/local/bin/npm /usr/bin/npm\n#   COPY --from=node /usr/local/bin/yarn /usr/bin/yarn\n#   COPY --from=node /usr/local/bin/neovim-node-host /usr/bin/neovim-node-host\n#   COPY --from=node /usr/local/bin/resume /usr/bin/resume\n#   COPY --from=node /usr/local/lib/node_modules /usr/lib/node_modules\n#   COPY --from=ruby /usr/local/bin/ruby /usr/bin/ruby\n#   COPY --from=ruby /usr/local/bin/gem /usr/bin/gem\n#   COPY --from=ruby /usr/local/lib/ruby /usr/lib/ruby\n#   COPY --from=ruby /usr/local/lib/libruby* /usr/lib/\n#   COPY --from=ruby /usr/local/bundle /usr/bundle\n#   etc lib sbin bin\n#   COPY --from=glibc /usr/glibc-compat /usr/glibc-compat\nCOPY --from=docker /usr/local/bin/containerd /usr/bin/docker-containerd\nCOPY --from=docker /usr/local/bin/containerd-shim /usr/bin/docker-containerd-shim\nCOPY --from=docker /usr/local/bin/ctr /usr/bin/docker-containerd-ctr\nCOPY --from=docker /usr/local/bin/dind /usr/bin/dind\nCOPY --from=docker /usr/local/bin/docker /usr/bin/docker\nCOPY --from=docker /usr/local/bin/docker-entrypoint.sh /usr/bin/docker-entrypoint\nCOPY --from=docker /usr/local/bin/docker-init /usr/bin/docker-init\nCOPY --from=docker /usr/local/bin/docker-proxy /usr/bin/docker-proxy\nCOPY --from=docker /usr/local/bin/dockerd /usr/bin/dockerd\nCOPY --from=docker /usr/local/bin/modprobe /usr/bin/modprobe\nCOPY --from=docker /usr/local/bin/runc /usr/bin/docker-runc\nCOPY --from=kube /usr/local/bin/kubectl /usr/bin/kubectl\nCOPY --from=kube /usr/local/bin/kubectx /usr/bin/kubectx\nCOPY --from=kube /usr/local/bin/kubens /usr/bin/kubens\nCOPY --from=kube /usr/local/bin/kubebox /usr/bin/kubebox\nCOPY --from=kube /usr/local/bin/kubebuilder /usr/bin/kubebuilder\nCOPY --from=kube /usr/local/bin/stern /usr/bin/stern\nCOPY --from=kube /usr/local/bin/helm /usr/bin/helm\nCOPY --from=kube /root/.krew/bin /usr/bin/\nCOPY --from=gcloud /google-cloud-sdk /google-cloud-sdk\nCOPY --from=gcloud /root/.config/gcloud /root/.config/gcloud\n#   COPY --from=nim /bin/nim /usr/local/bin/nim\n#   COPY --from=nim /bin/nimble /usr/local/bin/nimble\n#   COPY --from=nim /bin/nimsuggest /usr/local/bin/nimsuggest\n#   COPY --from=nim /nim/lib /usr/local/lib/nim\n#   COPY --from=nim /root/.cache/nim /root/.cache/nim\n#   COPY --from=nim /nim /nim\nCOPY --from=dart /usr/lib/dart/bin /usr/lib/dart/bin\n#   COPY --from=dart /usr/lib/dart/lib /usr/lib/dart/lib\n#   COPY --from=dart /usr/lib/dart/include /usr/lib/dart/include\nCOPY --from=go /usr/local/go/bin $GOROOT/bin\nCOPY --from=go /usr/local/go/src $GOROOT/src\nCOPY --from=go /usr/local/go/lib $GOROOT/lib\nCOPY --from=go /usr/local/go/pkg $GOROOT/pkg\nCOPY --from=go /usr/local/go/misc $GOROOT/misc\nCOPY --from=go /go/bin $GOPATH/bin\n#   COPY --from=go /go/src/github.com/nsf/gocode/vim $GOROOT/misc/vim\nCOPY --from=rust /root/.cargo/bin /root/.cargo/bin\n#   COPY --from=rust /root/.cargo /root/.cargo\n#   COPY --from=rust /root/.rustup /root/.rustup\n#   COPY --from=rust /root/.multirust /root/.multirust\nCOPY coc-settings.json $NVIM_HOME/coc-settings.json\nCOPY efm-lsp-conf.yaml $NVIM_HOME/efm-lsp-conf.yaml\nCOPY gitattributes $HOME/.gitattributes\nCOPY gitconfig $HOME/.gitconfig\nCOPY gitignore $HOME/.gitignore\nCOPY init.vim $NVIM_HOME/init.vim\nCOPY monokai.vim $NVIM_HOME/colors/monokai.vim\nCOPY tmux-kube $HOME/.tmux-kube\nCOPY tmux.conf $HOME/.tmux.conf\nCOPY vintrc.yaml $HOME/.vintrc.yaml\nCOPY zshrc $HOME/.zshrc\nENV SHELL=\"/bin/zsh\"\nRUN [\"/bin/zsh\", \"-c\", \"source\", \"~/.zshrc\"]\nWORKDIR $NVIM_HOME/plugged/vim-plug\nRUN rm -rf /root/.config/nvim/plugged/vim-plug/autoload \\\n && git clone https://github.com/junegunn/vim-plug.git /root/.config/nvim/plugged/vim-plug/autoload \\\n && nvim +PlugInstall +PlugUpdate +PlugUpgrade +PlugClean +UpdateRemotePlugins +GoInstallBinaries +qall main.go \\\n && yarn global add https://github.com/neoclide/coc.nvim --prefix /usr/local \\\n && nvim +CocInstall coc-rls coc-json coc-yaml coc-snippets coc-java coc-dictionary coc-tag coc-word coc-omni +qall \\\n && git clone https://github.com/zplug/zplug $ZPLUG_HOME \\\n && rm -rf $HOME/.cache \\\n && rm -rf $HOME/.npm/_cacache \\\n && rm -rf $HOME/.cargo/registry/cache \\\n && rm -rf /usr/local/share/.cache \\\n && rm -rf /tmp/*\nWORKDIR /go/src\nENTRYPOINT [\"docker-entrypoint\"]\nCMD [\"zsh\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM kpango/go:latest AS go\nFROM kpango/rust:latest AS rust\nFROM kpango/nim:latest AS nim\nFROM kpango/dart:latest AS dart\nFROM kpango/docker:latest AS docker\n#  FROM node:11-alpine AS node\n#  RUN npm config set user  root \\\n#      && npm install -g neovim resume-cli\n#  FROM python:3.7-alpine AS python3\n#  RUN apk add --no-cache --virtual .build-deps gcc musl-dev\n#  RUN pip3 install --upgrade pip neovim\n#  RUN apk del .build-deps gcc musl-dev\n#  FROM python:2.7-alpine AS python2\n#  RUN apk add --no-cache --virtual .build-deps gcc musl-dev\n#  RUN pip2 install --upgrade pip neovim\n#  RUN apk del .build-deps gcc musl-dev\n#  FROM ruby:alpine AS ruby\n#\n#  RUN apk add --no-cache --virtual .build-deps gcc make musl-dev\n#  RUN gem install neovim -no-ri-no-rdoc\n#  RUN apk del .build-deps gcc musl-dev\nFROM kpango/kube:latest AS kube\nFROM kpango/gcloud:latest AS gcloud\nFROM kpango/glibc:latest AS glibc\nFROM kpango/env:latest AS env\nFROM env\nLABEL maintainer=\"kpango <i.can.feel.gravity@gmail.com>\"\nENV TZ=\"Asia/Tokyo\"\nENV HOME=\"/root\"\nENV GOPATH=\"/go\"\nENV GOROOT=\"/usr/local/go\"\nENV GCLOUD_PATH=\"/google-cloud-sdk\"\nENV CARGO_PATH=\"/root/.cargo\"\nENV DART_PATH=\"/usr/lib/dart\"\nENV PATH=\"$GOPATH/bin:/usr/local/go/bin:$CARGO_PATH/bin:$DART_PATH/bin:$GCLOUD_PATH/bin:$PATH\"\nENV NVIM_HOME=\"$HOME/.config/nvim\"\nENV LIBRARY_PATH=\"/usr/local/lib:$LIBRARY_PATH\"\nENV ZPLUG_HOME=\"$HOME/.zplug;\"\n#  COPY --from=python3 /usr/local /usr/local\n#  COPY --from=python2 /usr/local /usr/local\n#  COPY --from=node /usr/local/bin/node /usr/bin/node\n#  COPY --from=node /usr/local/bin/npm /usr/bin/npm\n#  COPY --from=node /usr/local/bin/yarn /usr/bin/yarn\n#  COPY --from=node /usr/local/bin/neovim-node-host /usr/bin/neovim-node-host\n#  COPY --from=node /usr/local/bin/resume /usr/bin/resume\n#  COPY --from=node /usr/local/lib/node_modules /usr/lib/node_modules\n#  COPY --from=ruby /usr/local/bin/ruby /usr/bin/ruby\n#  COPY --from=ruby /usr/local/bin/gem /usr/bin/gem\n#  COPY --from=ruby /usr/local/lib/ruby /usr/lib/ruby\n#  COPY --from=ruby /usr/local/lib/libruby* /usr/lib/\n#  COPY --from=ruby /usr/local/bundle /usr/bundle\n#  etc lib sbin bin\n#  COPY --from=glibc /usr/glibc-compat /usr/glibc-compat\nCOPY --from=docker /usr/local/bin/containerd /usr/bin/docker-containerd\nCOPY --from=docker /usr/local/bin/containerd-shim /usr/bin/docker-containerd-shim\nCOPY --from=docker /usr/local/bin/ctr /usr/bin/docker-containerd-ctr\nCOPY --from=docker /usr/local/bin/dind /usr/bin/dind\nCOPY --from=docker /usr/local/bin/docker /usr/bin/docker\nCOPY --from=docker /usr/local/bin/docker-entrypoint.sh /usr/bin/docker-entrypoint\nCOPY --from=docker /usr/local/bin/docker-init /usr/bin/docker-init\nCOPY --from=docker /usr/local/bin/docker-proxy /usr/bin/docker-proxy\nCOPY --from=docker /usr/local/bin/dockerd /usr/bin/dockerd\nCOPY --from=docker /usr/local/bin/modprobe /usr/bin/modprobe\nCOPY --from=docker /usr/local/bin/runc /usr/bin/docker-runc\nCOPY --from=kube /usr/local/bin/kubectl /usr/bin/kubectl\nCOPY --from=kube /usr/local/bin/kubectx /usr/bin/kubectx\nCOPY --from=kube /usr/local/bin/kubens /usr/bin/kubens\nCOPY --from=kube /usr/local/bin/kubebox /usr/bin/kubebox\nCOPY --from=kube /usr/local/bin/kubebuilder /usr/bin/kubebuilder\nCOPY --from=kube /usr/local/bin/stern /usr/bin/stern\nCOPY --from=kube /usr/local/bin/helm /usr/bin/helm\nCOPY --from=kube /root/.krew/bin /usr/bin/\nCOPY --from=gcloud /google-cloud-sdk /google-cloud-sdk\nCOPY --from=gcloud /root/.config/gcloud /root/.config/gcloud\n#  COPY --from=nim /bin/nim /usr/local/bin/nim\n#  COPY --from=nim /bin/nimble /usr/local/bin/nimble\n#  COPY --from=nim /bin/nimsuggest /usr/local/bin/nimsuggest\n#  COPY --from=nim /nim/lib /usr/local/lib/nim\n#  COPY --from=nim /root/.cache/nim /root/.cache/nim\n#  COPY --from=nim /nim /nim\nCOPY --from=dart /usr/lib/dart/bin /usr/lib/dart/bin\n#  COPY --from=dart /usr/lib/dart/lib /usr/lib/dart/lib\n#  COPY --from=dart /usr/lib/dart/include /usr/lib/dart/include\nCOPY --from=go /usr/local/go/bin $GOROOT/bin\nCOPY --from=go /usr/local/go/src $GOROOT/src\nCOPY --from=go /usr/local/go/lib $GOROOT/lib\nCOPY --from=go /usr/local/go/pkg $GOROOT/pkg\nCOPY --from=go /usr/local/go/misc $GOROOT/misc\nCOPY --from=go /go/bin $GOPATH/bin\n#  COPY --from=go /go/src/github.com/nsf/gocode/vim $GOROOT/misc/vim\nCOPY --from=rust /root/.cargo/bin /root/.cargo/bin\n#  COPY --from=rust /root/.cargo /root/.cargo\n#  COPY --from=rust /root/.rustup /root/.rustup\n#  COPY --from=rust /root/.multirust /root/.multirust\nCOPY coc-settings.json $NVIM_HOME/coc-settings.json\nCOPY efm-lsp-conf.yaml $NVIM_HOME/efm-lsp-conf.yaml\nCOPY gitattributes $HOME/.gitattributes\nCOPY gitconfig $HOME/.gitconfig\nCOPY gitignore $HOME/.gitignore\nCOPY init.vim $NVIM_HOME/init.vim\nCOPY monokai.vim $NVIM_HOME/colors/monokai.vim\nCOPY tmux-kube $HOME/.tmux-kube\nCOPY tmux.conf $HOME/.tmux.conf\nCOPY vintrc.yaml $HOME/.vintrc.yaml\nCOPY zshrc $HOME/.zshrc\nENV SHELL=\"/bin/zsh\"\nRUN [\"/bin/zsh\", \"-c\", \"source\", \"~/.zshrc\"]\nWORKDIR $NVIM_HOME/plugged/vim-plug\nRUN rm -rf /root/.config/nvim/plugged/vim-plug/autoload \\\n && git clone https://github.com/junegunn/vim-plug.git /root/.config/nvim/plugged/vim-plug/autoload \\\n && nvim +PlugInstall +PlugUpdate +PlugUpgrade +PlugClean +UpdateRemotePlugins +GoInstallBinaries +qall main.go \\\n && yarn global add https://github.com/neoclide/coc.nvim --prefix /usr/local \\\n && nvim +CocInstall coc-rls coc-json coc-yaml coc-snippets coc-java coc-dictionary coc-tag coc-word coc-omni +qall \\\n && git clone https://github.com/zplug/zplug $ZPLUG_HOME \\\n && rm -rf $HOME/.cache \\\n && rm -rf $HOME/.npm/_cacache \\\n && rm -rf $HOME/.cargo/registry/cache \\\n && rm -rf /usr/local/share/.cache \\\n && rm -rf /tmp/*\nWORKDIR /go/src\nENTRYPOINT [\"docker-entrypoint\"]\nCMD [\"zsh\"]\n","injectedSmells":[],"originalDockerfileHash":"28e59e524d7aa7639ac9759a718cd1f8","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM kpango/go:latest AS go\nFROM kpango/rust:latest AS rust\nFROM kpango/nim:latest AS nim\nFROM kpango/dart:latest AS dart\nFROM kpango/docker:latest AS docker\n#   FROM node:11-alpine AS node\n#   RUN npm config set user  root \\\n#       && npm install -g neovim resume-cli\n#   FROM python:3.7-alpine AS python3\n#   RUN apk add --no-cache --virtual .build-deps gcc musl-dev\n#   RUN pip3 install --upgrade pip neovim\n#   RUN apk del .build-deps gcc musl-dev\n#   FROM python:2.7-alpine AS python2\n#   RUN apk add --no-cache --virtual .build-deps gcc musl-dev\n#   RUN pip2 install --upgrade pip neovim\n#   RUN apk del .build-deps gcc musl-dev\n#   FROM ruby:alpine AS ruby\n#\n#   RUN apk add --no-cache --virtual .build-deps gcc make musl-dev\n#   RUN gem install neovim -no-ri-no-rdoc\n#   RUN apk del .build-deps gcc musl-dev\nFROM kpango/kube:latest AS kube\nFROM kpango/gcloud:latest AS gcloud\nFROM kpango/glibc:latest AS glibc\nFROM kpango/env:latest AS env\nFROM env\nLABEL maintainer=\"kpango <i.can.feel.gravity@gmail.com>\"\nENV TZ=\"Asia/Tokyo\"\nENV HOME=\"/root\"\nENV GOPATH=\"/go\"\nENV GOROOT=\"/usr/local/go\"\nENV GCLOUD_PATH=\"/google-cloud-sdk\"\nENV CARGO_PATH=\"/root/.cargo\"\nENV DART_PATH=\"/usr/lib/dart\"\nENV PATH=\"$GOPATH/bin:/usr/local/go/bin:$CARGO_PATH/bin:$DART_PATH/bin:$GCLOUD_PATH/bin:$PATH\"\nENV NVIM_HOME=\"$HOME/.config/nvim\"\nENV LIBRARY_PATH=\"/usr/local/lib:$LIBRARY_PATH\"\nENV ZPLUG_HOME=\"$HOME/.zplug;\"\n#   COPY --from=python3 /usr/local /usr/local\n#   COPY --from=python2 /usr/local /usr/local\n#   COPY --from=node /usr/local/bin/node /usr/bin/node\n#   COPY --from=node /usr/local/bin/npm /usr/bin/npm\n#   COPY --from=node /usr/local/bin/yarn /usr/bin/yarn\n#   COPY --from=node /usr/local/bin/neovim-node-host /usr/bin/neovim-node-host\n#   COPY --from=node /usr/local/bin/resume /usr/bin/resume\n#   COPY --from=node /usr/local/lib/node_modules /usr/lib/node_modules\n#   COPY --from=ruby /usr/local/bin/ruby /usr/bin/ruby\n#   COPY --from=ruby /usr/local/bin/gem /usr/bin/gem\n#   COPY --from=ruby /usr/local/lib/ruby /usr/lib/ruby\n#   COPY --from=ruby /usr/local/lib/libruby* /usr/lib/\n#   COPY --from=ruby /usr/local/bundle /usr/bundle\n#   etc lib sbin bin\n#   COPY --from=glibc /usr/glibc-compat /usr/glibc-compat\nCOPY --from=docker /usr/local/bin/containerd /usr/bin/docker-containerd\nCOPY --from=docker /usr/local/bin/containerd-shim /usr/bin/docker-containerd-shim\nCOPY --from=docker /usr/local/bin/ctr /usr/bin/docker-containerd-ctr\nCOPY --from=docker /usr/local/bin/dind /usr/bin/dind\nCOPY --from=docker /usr/local/bin/docker /usr/bin/docker\nCOPY --from=docker /usr/local/bin/docker-entrypoint.sh /usr/bin/docker-entrypoint\nCOPY --from=docker /usr/local/bin/docker-init /usr/bin/docker-init\nCOPY --from=docker /usr/local/bin/docker-proxy /usr/bin/docker-proxy\nCOPY --from=docker /usr/local/bin/dockerd /usr/bin/dockerd\nCOPY --from=docker /usr/local/bin/modprobe /usr/bin/modprobe\nCOPY --from=docker /usr/local/bin/runc /usr/bin/docker-runc\nCOPY --from=kube /usr/local/bin/kubectl /usr/bin/kubectl\nCOPY --from=kube /usr/local/bin/kubectx /usr/bin/kubectx\nCOPY --from=kube /usr/local/bin/kubens /usr/bin/kubens\nCOPY --from=kube /usr/local/bin/kubebox /usr/bin/kubebox\nCOPY --from=kube /usr/local/bin/kubebuilder /usr/bin/kubebuilder\nCOPY --from=kube /usr/local/bin/stern /usr/bin/stern\nCOPY --from=kube /usr/local/bin/helm /usr/bin/helm\nCOPY --from=kube /root/.krew/bin /usr/bin/\nCOPY --from=gcloud /google-cloud-sdk /google-cloud-sdk\nCOPY --from=gcloud /root/.config/gcloud /root/.config/gcloud\n#   COPY --from=nim /bin/nim /usr/local/bin/nim\n#   COPY --from=nim /bin/nimble /usr/local/bin/nimble\n#   COPY --from=nim /bin/nimsuggest /usr/local/bin/nimsuggest\n#   COPY --from=nim /nim/lib /usr/local/lib/nim\n#   COPY --from=nim /root/.cache/nim /root/.cache/nim\n#   COPY --from=nim /nim /nim\nCOPY --from=dart /usr/lib/dart/bin /usr/lib/dart/bin\n#   COPY --from=dart /usr/lib/dart/lib /usr/lib/dart/lib\n#   COPY --from=dart /usr/lib/dart/include /usr/lib/dart/include\nCOPY --from=go /usr/local/go/bin $GOROOT/bin\nCOPY --from=go /usr/local/go/src $GOROOT/src\nCOPY --from=go /usr/local/go/lib $GOROOT/lib\nCOPY --from=go /usr/local/go/pkg $GOROOT/pkg\nCOPY --from=go /usr/local/go/misc $GOROOT/misc\nCOPY --from=go /go/bin $GOPATH/bin\n#   COPY --from=go /go/src/github.com/nsf/gocode/vim $GOROOT/misc/vim\nCOPY --from=rust /root/.cargo/bin /root/.cargo/bin\n#   COPY --from=rust /root/.cargo /root/.cargo\n#   COPY --from=rust /root/.rustup /root/.rustup\n#   COPY --from=rust /root/.multirust /root/.multirust\nCOPY coc-settings.json $NVIM_HOME/coc-settings.json\nCOPY efm-lsp-conf.yaml $NVIM_HOME/efm-lsp-conf.yaml\nCOPY gitattributes $HOME/.gitattributes\nCOPY gitconfig $HOME/.gitconfig\nCOPY gitignore $HOME/.gitignore\nCOPY init.vim $NVIM_HOME/init.vim\nCOPY monokai.vim $NVIM_HOME/colors/monokai.vim\nCOPY tmux-kube $HOME/.tmux-kube\nCOPY tmux.conf $HOME/.tmux.conf\nCOPY vintrc.yaml $HOME/.vintrc.yaml\nCOPY zshrc $HOME/.zshrc\nENV SHELL=\"/bin/zsh\"\nRUN [\"/bin/zsh\", \"-c\", \"source\", \"~/.zshrc\"]\nWORKDIR $NVIM_HOME/plugged/vim-plug\nRUN rm -rf /root/.config/nvim/plugged/vim-plug/autoload \\\n && git clone https://github.com/junegunn/vim-plug.git /root/.config/nvim/plugged/vim-plug/autoload \\\n && nvim +PlugInstall +PlugUpdate +PlugUpgrade +PlugClean +UpdateRemotePlugins +GoInstallBinaries +qall main.go \\\n && yarn global add https://github.com/neoclide/coc.nvim --prefix /usr/local \\\n && nvim +CocInstall coc-rls coc-json coc-yaml coc-snippets coc-java coc-dictionary coc-tag coc-word coc-omni +qall \\\n && git clone https://github.com/zplug/zplug $ZPLUG_HOME \\\n && rm -rf $HOME/.cache \\\n && rm -rf $HOME/.npm/_cacache \\\n && rm -rf $HOME/.cargo/registry/cache \\\n && rm -rf /usr/local/share/.cache \\\n && rm -rf /tmp/*\nWORKDIR /go/src\nENTRYPOINT [\"docker-entrypoint\"]\nCMD [\"zsh\"]\n","originalDockerfileUglifiedHash":"962813d6bc65916147566ebd0a346b23","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/19b8f98fbb5af6f274384d05e6770c50e18237a2.dockerfile"}