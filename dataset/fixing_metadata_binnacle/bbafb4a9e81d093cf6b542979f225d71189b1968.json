{"seed":2181709381,"processedDockerfileHash":"70809f91b4b96afcd5d6193f06107dc2","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM debian:jessie\nMAINTAINER João Pina \"eu@tomahock.com\"\n#   persistent / runtime deps\nENV PHPIZE_DEPS=\"autoconf  file  g++  gcc  libc-dev  make  pkg-config  re2c\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends ca-certificates curl libedit2 libsqlite3-0 libxml2 mysql-client libmysqlclient-dev supervisor vim cron $PHPIZE_DEPS -y \\\n && rm -r /var/lib/apt/lists/*\nENV PHP_INI_DIR=\"/usr/local/etc/php\"\nRUN mkdir -p $PHP_INI_DIR/conf.d\nENV PHP_EXTRA_CONFIGURE_ARGS=\"--enable-fpm --with-fpm-user=www-data --with-fpm-group=www-data --with-pdo-mysql=/usr\"\nENV PHP_VERSION=\"7.2.3\"\nENV PHP_FILENAME=\"php-7.2.3.tar.xz\"\nRUN set -xe \\\n && buildDeps=\" $PHP_EXTRA_BUILD_DEPS libcurl4-openssl-dev libedit-dev libsqlite3-dev libssl-dev libxml2-dev xz-utils \" \\\n && apt-get update \\\n && apt-get install --no-install-recommends $buildDeps -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && curl -fSL \"http://php.net/get/$PHP_FILENAME/from/this/mirror\" -o \"$PHP_FILENAME\" \\\n && curl -fSL \"http://php.net/get/$PHP_FILENAME.asc/from/this/mirror\" -o \"$PHP_FILENAME.asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && rm -r \"$GNUPGHOME\" \"$PHP_FILENAME.asc\" \\\n && mkdir -p /usr/src/php \\\n && tar -xf \"$PHP_FILENAME\" -C /usr/src/php --strip-components=1 \\\n && rm \"$PHP_FILENAME\" \\\n && cd /usr/src/php \\\n && ./configure --with-config-file-path=\"$PHP_INI_DIR\" --with-config-file-scan-dir=\"$PHP_INI_DIR/conf.d\" $PHP_EXTRA_CONFIGURE_ARGS --disable-cgi --enable-mysqlnd --enable-mbstring --with-curl --with-libedit --with-openssl --with-zlib --enable-bcmath \\\n && make -j\"$( nproc ;)\" \\\n && make install \\\n && { find /usr/local/bin /usr/local/sbin -type f -executable -exec strip --strip-all '{}' + || true ; } \\\n && make clean \\\n && apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false -o APT::AutoRemove::SuggestsImportant=false $buildDeps\n#  change here\nWORKDIR /var/www/app\nRUN set -ex \\\n && cd /usr/local/etc \\\n && if [ -d php-fpm.d ] ; then sed 's!=NONE/!=!g' php-fpm.conf.default | tee php-fpm.conf > /dev/null;cp php-fpm.d/www.conf.default php-fpm.d/www.conf ; else mkdir php-fpm.d ;cp php-fpm.conf.default php-fpm.d/www.conf ;{ echo '[global]' ;echo 'include=etc/php-fpm.d/*.conf' ; } | tee php-fpm.conf ; fi \\\n && { echo '[global]' ;echo 'error_log = /proc/self/fd/2' ;echo ;echo '[www]' ;echo '; if we send this to /proc/self/fd/1, it never appears' ;echo 'access.log = /proc/self/fd/2' ;echo ;echo 'clear_env = no' ;echo ;echo '; Ensure worker stdout and stderr are sent to the main error log.' ;echo 'catch_workers_output = yes' ; } | tee php-fpm.d/docker.conf \\\n && { echo '[global]' ;echo 'daemonize = no' ;echo ;echo '[www]' ;echo 'listen = [::]:9001' ;echo 'clear_env = no' ;echo 'env[\"APP_ENV\"] = $APP_ENV' ; } | tee php-fpm.d/zz-docker.conf\nCOPY php-fpm-worker.conf /etc/supervisor/conf.d\nCOPY nginx-worker.conf /etc/supervisor/conf.d\nENV NGINX_VERSION=\"1.14.2-1~jessie\"\nRUN echo \"deb http://nginx.org/packages/debian/ jessie nginx\" >> /etc/apt/sources.list \\\n && curl -O \"https://nginx.org/keys/nginx_signing.key\" \\\n && apt-key add ./nginx_signing.key \\\n && apt-get update \\\n && apt-get install --no-install-recommends ca-certificates nginx-module-xslt nginx-module-geoip nginx-module-image-filter nginx-module-perl nginx-module-njs gettext-base nginx=${NGINX_VERSION} --no-install-suggests -y --force-yes \\\n && rm -rf /var/lib/apt/lists/*\nCOPY nginx.conf /etc/nginx\nRUN ln -sf /dev/stdout /var/log/nginx/access.log \\\n && ln -sf /dev/stderr /var/log/nginx/error.log\nEXPOSE 8097/tcp\nCMD service nginx start \\\n && php-fpm\n#  CMD [\"/usr/bin/supervisord\", \"-c\", \"/etc/supervisor/supervisord.conf\" , \"-n\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM debian:jessie\nMAINTAINER João Pina \"eu@tomahock.com\"\n#  persistent / runtime deps\nENV PHPIZE_DEPS=\"autoconf  file  g++  gcc  libc-dev  make  pkg-config  re2c\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends ca-certificates curl libedit2 libsqlite3-0 libxml2 mysql-client libmysqlclient-dev supervisor vim cron $PHPIZE_DEPS -y \\\n && rm -r /var/lib/apt/lists/*\nENV PHP_INI_DIR=\"/usr/local/etc/php\"\nRUN mkdir -p $PHP_INI_DIR/conf.d\nENV PHP_EXTRA_CONFIGURE_ARGS=\"--enable-fpm --with-fpm-user=www-data --with-fpm-group=www-data --with-pdo-mysql=/usr\"\nENV PHP_VERSION=\"7.2.3\"\nENV PHP_FILENAME=\"php-7.2.3.tar.xz\"\nRUN set -xe \\\n && buildDeps=\" $PHP_EXTRA_BUILD_DEPS libcurl4-openssl-dev libedit-dev libsqlite3-dev libssl-dev libxml2-dev xz-utils \" \\\n && apt-get update \\\n && apt-get install --no-install-recommends $buildDeps -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && curl -fSL \"http://php.net/get/$PHP_FILENAME/from/this/mirror\" -o \"$PHP_FILENAME\" \\\n && curl -fSL \"http://php.net/get/$PHP_FILENAME.asc/from/this/mirror\" -o \"$PHP_FILENAME.asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && rm -r \"$GNUPGHOME\" \"$PHP_FILENAME.asc\" \\\n && mkdir -p /usr/src/php \\\n && tar -xf \"$PHP_FILENAME\" -C /usr/src/php --strip-components=1 \\\n && rm \"$PHP_FILENAME\" \\\n && cd /usr/src/php \\\n && ./configure --with-config-file-path=\"$PHP_INI_DIR\" --with-config-file-scan-dir=\"$PHP_INI_DIR/conf.d\" $PHP_EXTRA_CONFIGURE_ARGS --disable-cgi --enable-mysqlnd --enable-mbstring --with-curl --with-libedit --with-openssl --with-zlib --enable-bcmath \\\n && make -j\"$( nproc ;)\" \\\n && make install \\\n && { find /usr/local/bin /usr/local/sbin -type f -executable -exec strip --strip-all '{}' + || true ; } \\\n && make clean \\\n && apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false -o APT::AutoRemove::SuggestsImportant=false $buildDeps\n# change here\nWORKDIR /var/www/app\nRUN set -ex \\\n && cd /usr/local/etc \\\n && if [ -d php-fpm.d ] ; then sed 's!=NONE/!=!g' php-fpm.conf.default | tee php-fpm.conf > /dev/null;cp php-fpm.d/www.conf.default php-fpm.d/www.conf ; else mkdir php-fpm.d ;cp php-fpm.conf.default php-fpm.d/www.conf ;{ echo '[global]' ;echo 'include=etc/php-fpm.d/*.conf' ; } | tee php-fpm.conf ; fi \\\n && { echo '[global]' ;echo 'error_log = /proc/self/fd/2' ;echo ;echo '[www]' ;echo '; if we send this to /proc/self/fd/1, it never appears' ;echo 'access.log = /proc/self/fd/2' ;echo ;echo 'clear_env = no' ;echo ;echo '; Ensure worker stdout and stderr are sent to the main error log.' ;echo 'catch_workers_output = yes' ; } | tee php-fpm.d/docker.conf \\\n && { echo '[global]' ;echo 'daemonize = no' ;echo ;echo '[www]' ;echo 'listen = [::]:9001' ;echo 'clear_env = no' ;echo 'env[\"APP_ENV\"] = $APP_ENV' ; } | tee php-fpm.d/zz-docker.conf\nCOPY php-fpm-worker.conf /etc/supervisor/conf.d\nCOPY nginx-worker.conf /etc/supervisor/conf.d\nENV NGINX_VERSION=\"1.14.2-1~jessie\"\nRUN echo \"deb http://nginx.org/packages/debian/ jessie nginx\" >> /etc/apt/sources.list \\\n && curl -O \"https://nginx.org/keys/nginx_signing.key\" \\\n && apt-key add ./nginx_signing.key \\\n && apt-get update \\\n && apt-get install --no-install-recommends ca-certificates nginx-module-xslt nginx-module-geoip nginx-module-image-filter nginx-module-perl nginx-module-njs gettext-base nginx=${NGINX_VERSION} --no-install-suggests -y --force-yes \\\n && rm -rf /var/lib/apt/lists/*\nCOPY nginx.conf /etc/nginx\nRUN ln -sf /dev/stdout /var/log/nginx/access.log \\\n && ln -sf /dev/stderr /var/log/nginx/error.log\nEXPOSE 8097/tcp\nCMD service nginx start \\\n && php-fpm\n# CMD [\"/usr/bin/supervisord\", \"-c\", \"/etc/supervisor/supervisord.conf\" , \"-n\"]\n","injectedSmells":[],"originalDockerfileHash":"6c4f85d2d6516d7f1090efd7820a3e45","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM debian:jessie\nMAINTAINER João Pina \"eu@tomahock.com\"\n#   persistent / runtime deps\nENV PHPIZE_DEPS=\"autoconf  file  g++  gcc  libc-dev  make  pkg-config  re2c\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends ca-certificates curl libedit2 libsqlite3-0 libxml2 mysql-client libmysqlclient-dev supervisor vim cron $PHPIZE_DEPS -y \\\n && rm -r /var/lib/apt/lists/*\nENV PHP_INI_DIR=\"/usr/local/etc/php\"\nRUN mkdir -p $PHP_INI_DIR/conf.d\nENV PHP_EXTRA_CONFIGURE_ARGS=\"--enable-fpm --with-fpm-user=www-data --with-fpm-group=www-data --with-pdo-mysql=/usr\"\nENV PHP_VERSION=\"7.2.3\"\nENV PHP_FILENAME=\"php-7.2.3.tar.xz\"\nRUN set -xe \\\n && buildDeps=\" $PHP_EXTRA_BUILD_DEPS libcurl4-openssl-dev libedit-dev libsqlite3-dev libssl-dev libxml2-dev xz-utils \" \\\n && apt-get update \\\n && apt-get install --no-install-recommends $buildDeps -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && curl -fSL \"http://php.net/get/$PHP_FILENAME/from/this/mirror\" -o \"$PHP_FILENAME\" \\\n && curl -fSL \"http://php.net/get/$PHP_FILENAME.asc/from/this/mirror\" -o \"$PHP_FILENAME.asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && rm -r \"$GNUPGHOME\" \"$PHP_FILENAME.asc\" \\\n && mkdir -p /usr/src/php \\\n && tar -xf \"$PHP_FILENAME\" -C /usr/src/php --strip-components=1 \\\n && rm \"$PHP_FILENAME\" \\\n && cd /usr/src/php \\\n && ./configure --with-config-file-path=\"$PHP_INI_DIR\" --with-config-file-scan-dir=\"$PHP_INI_DIR/conf.d\" $PHP_EXTRA_CONFIGURE_ARGS --disable-cgi --enable-mysqlnd --enable-mbstring --with-curl --with-libedit --with-openssl --with-zlib --enable-bcmath \\\n && make -j\"$( nproc ;)\" \\\n && make install \\\n && { find /usr/local/bin /usr/local/sbin -type f -executable -exec strip --strip-all '{}' + || true ; } \\\n && make clean \\\n && apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false -o APT::AutoRemove::SuggestsImportant=false $buildDeps\n#  change here\nWORKDIR /var/www/app\nRUN set -ex \\\n && cd /usr/local/etc \\\n && if [ -d php-fpm.d ] ; then sed 's!=NONE/!=!g' php-fpm.conf.default | tee php-fpm.conf > /dev/null;cp php-fpm.d/www.conf.default php-fpm.d/www.conf ; else mkdir php-fpm.d ;cp php-fpm.conf.default php-fpm.d/www.conf ;{ echo '[global]' ;echo 'include=etc/php-fpm.d/*.conf' ; } | tee php-fpm.conf ; fi \\\n && { echo '[global]' ;echo 'error_log = /proc/self/fd/2' ;echo ;echo '[www]' ;echo '; if we send this to /proc/self/fd/1, it never appears' ;echo 'access.log = /proc/self/fd/2' ;echo ;echo 'clear_env = no' ;echo ;echo '; Ensure worker stdout and stderr are sent to the main error log.' ;echo 'catch_workers_output = yes' ; } | tee php-fpm.d/docker.conf \\\n && { echo '[global]' ;echo 'daemonize = no' ;echo ;echo '[www]' ;echo 'listen = [::]:9001' ;echo 'clear_env = no' ;echo 'env[\"APP_ENV\"] = $APP_ENV' ; } | tee php-fpm.d/zz-docker.conf\nCOPY php-fpm-worker.conf /etc/supervisor/conf.d\nCOPY nginx-worker.conf /etc/supervisor/conf.d\nENV NGINX_VERSION=\"1.14.2-1~jessie\"\nRUN echo \"deb http://nginx.org/packages/debian/ jessie nginx\" >> /etc/apt/sources.list \\\n && curl -O \"https://nginx.org/keys/nginx_signing.key\" \\\n && apt-key add ./nginx_signing.key \\\n && apt-get update \\\n && apt-get install --no-install-recommends ca-certificates nginx-module-xslt nginx-module-geoip nginx-module-image-filter nginx-module-perl nginx-module-njs gettext-base nginx=${NGINX_VERSION} --no-install-suggests -y --force-yes \\\n && rm -rf /var/lib/apt/lists/*\nCOPY nginx.conf /etc/nginx\nRUN ln -sf /dev/stdout /var/log/nginx/access.log \\\n && ln -sf /dev/stderr /var/log/nginx/error.log\nEXPOSE 8097/tcp\nCMD service nginx start \\\n && php-fpm\n#  CMD [\"/usr/bin/supervisord\", \"-c\", \"/etc/supervisor/supervisord.conf\" , \"-n\"]\n","originalDockerfileUglifiedHash":"75c47ef2f72a348a2b241cd94d8fb3c6","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/bbafb4a9e81d093cf6b542979f225d71189b1968.dockerfile"}