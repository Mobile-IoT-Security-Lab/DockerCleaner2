{"seed":4143446010,"processedDockerfileHash":"5b171015dacd84bebfdcd9e7ea2d9939","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-pip","pin-package-manager-versions-gem","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   This Source Code Form is subject to the terms of the Mozilla Public\n#   License, v. 2.0. If a copy of the MPL was not distributed with this\n#   file, You can obtain one at http://mozilla.org/MPL/2.0/.\n#   Inspired by:\n#   https://hub.docker.com/r/runmymind/docker-android-sdk/~/dockerfile/\nFROM ubuntu:17.10\nMAINTAINER Sebastian Kaspari \"skaspari@mozilla.com\"\n#   -- System -----------------------------------------------------------------------------\nRUN :\nRUN (apt-get update ;apt-get install --no-install-recommends openjdk-8-jdk wget expect git curl ruby ruby-dev ruby-build python python-pip optipng imagemagick locales -y )\nRUN gem install fastlane --version 2.212.1\nRUN locale-gen en_US.UTF-8\n#   -- Android SDK ------------------------------------------------------------------------\nRUN cd /opt \\\n && wget -q https://dl.google.com/android/android-sdk_r24.4.1-linux.tgz -O android-sdk.tgz\nRUN cd /opt \\\n && tar -xvzf android-sdk.tgz\nRUN cd /opt \\\n && rm -f android-sdk.tgz\nENV ANDROID_SDK_HOME=\"/opt/android-sdk-linux\"\nENV ANDROID_HOME=\"/opt/android-sdk-linux\"\nENV PATH=\"${PATH}:${ANDROID_SDK_HOME}/tools:${ANDROID_SDK_HOME}/platform-tools:/opt/tools:${ANDROID_SDK_HOME}/build-tools/28.0.3\"\n#   Platform tools\nRUN echo y | android update sdk --no-ui --all --filter platform-tools | grep 'package installed'\n#   Android 8.0 / SDK 26\nRUN echo y | android update sdk --no-ui --all --filter android-26 | grep 'package installed'\nRUN echo y | android update sdk --no-ui --all --filter android-27 | grep 'package installed'\nRUN echo y | android update sdk --no-ui --all --filter android-28 | grep 'package installed'\n#   Build tools 26.0.1\nRUN echo y | android update sdk --no-ui --all --filter build-tools-26.0.1 | grep 'package installed'\nRUN echo y | android update sdk --no-ui --all --filter build-tools-27.0.3 | grep 'package installed'\nRUN echo y | android update sdk --no-ui --all --filter build-tools-28.0.2 | grep 'package installed'\nRUN echo y | android update sdk --no-ui --all --filter build-tools-28.0.3 | grep 'package installed'\n#   Extras\nRUN echo y | android update sdk --no-ui --all --filter extra-android-m2repository | grep 'package installed'\nRUN echo y | android update sdk --no-ui --all --filter extra-google-m2repository | grep 'package installed'\nRUN echo y | android update sdk --no-ui --all --filter extra-google-google_play_services | grep 'package installed'\n#   Copy tools from our repository into the docker image\nCOPY tools /opt/tools\n#   Accept licenses\nCOPY licenses ${ANDROID_SDK_HOME}/licenses\n#   -- Emulator ---------------------------------------------------------------------------\n#   Android 5.0 / SDK 21\nRUN echo y | android update sdk --no-ui --all --filter android-21 | grep 'package installed'\n#   Emulator image\nRUN echo y | android update sdk --no-ui --all --filter sys-img-armeabi-v7a-android-21 | grep 'package installed'\n#   Create emulator AVD\nRUN echo no | android create avd -f -n test -t android-21 --abi default/armeabi-v7a --skin 480x800\n#   Create fake keymap file (Otherwise the emulator won't start up)\nRUN mkdir /opt/android-sdk-linux/tools/keymaps \\\n && touch /opt/android-sdk-linux/tools/keymaps/en-us\n#   -- Update SDK -------------------------------------------------------------------------\n#   Update SDK\nRUN /opt/tools/android-accept-licenses.sh android update sdk --no-ui --obsolete --force\n#   -- Project setup ----------------------------------------------------------------------\nWORKDIR /opt\n#   Checkout source code\nRUN git clone https://github.com/mozilla-mobile/focus-android.git\n#   Build project and run gradle tasks once to pull all dependencies\nWORKDIR /opt/focus-android\nRUN ./gradlew --no-daemon assemble testFocusX86DebugUnitTest lint pmd checkstyle spotbugs detektCheck ktlint\n#   -- Post setup -------------------------------------------------------------------------\n#   Install dependencies needed to run Android2Po\nRUN pip install -r tools/l10n/android2po/requirements.txt\n#   Install taskcluster python library (used by decision tasks)\n#   5.0.0 is still incompatible with taskclusterProxy, meaning no decision task is able\n#   to schedule the rest of the Taskcluster tasks. Please upgrade to taskcluster>=5 once\n#   https://bugzilla.mozilla.org/show_bug.cgi?id=1460015 is fixed\nRUN pip install 'taskcluster>=4,<5'\nRUN pip install arrow==1.2.3\n#   Install Google Cloud SDK for using Firebase Device Lab\nRUN curl https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-184.0.0-linux-x86_64.tar.gz --output /gcloud.tar.gz\nRUN tar -xvf /gcloud.tar.gz -C /\nRUN /google-cloud-sdk/install.sh --quiet\nRUN /google-cloud-sdk/bin/gcloud --quiet components update\n#   Needed for verifying cyclic redundancy check (CRC) headers (Google Cloud SDK)\nRUN (apt-get update ;apt-get install --no-install-recommends gcc python-dev python-setuptools )\nRUN easy_install -U pip\nRUN pip install crcmod==1.7 -U\n#   -- Cleanup ----------------------------------------------------------------------------\nRUN apt-get clean\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  This Source Code Form is subject to the terms of the Mozilla Public\n#  License, v. 2.0. If a copy of the MPL was not distributed with this\n#  file, You can obtain one at http://mozilla.org/MPL/2.0/.\n#  Inspired by:\n#  https://hub.docker.com/r/runmymind/docker-android-sdk/~/dockerfile/\nFROM ubuntu:17.10\nMAINTAINER Sebastian Kaspari \"skaspari@mozilla.com\"\n#  -- System -----------------------------------------------------------------------------\nRUN apt-get update -qq\nRUN apt-get install openjdk-8-jdk wget expect git curl ruby ruby-dev ruby-build python python-pip optipng imagemagick locales -y\nRUN gem install fastlane\nRUN locale-gen en_US.UTF-8\n#  -- Android SDK ------------------------------------------------------------------------\nRUN cd /opt \\\n && wget -q https://dl.google.com/android/android-sdk_r24.4.1-linux.tgz -O android-sdk.tgz\nRUN cd /opt \\\n && tar -xvzf android-sdk.tgz\nRUN cd /opt \\\n && rm -f android-sdk.tgz\nENV ANDROID_SDK_HOME=\"/opt/android-sdk-linux\"\nENV ANDROID_HOME=\"/opt/android-sdk-linux\"\nENV PATH=\"${PATH}:${ANDROID_SDK_HOME}/tools:${ANDROID_SDK_HOME}/platform-tools:/opt/tools:${ANDROID_SDK_HOME}/build-tools/28.0.3\"\n#  Platform tools\nRUN echo y | android update sdk --no-ui --all --filter platform-tools | grep 'package installed'\n#  Android 8.0 / SDK 26\nRUN echo y | android update sdk --no-ui --all --filter android-26 | grep 'package installed'\nRUN echo y | android update sdk --no-ui --all --filter android-27 | grep 'package installed'\nRUN echo y | android update sdk --no-ui --all --filter android-28 | grep 'package installed'\n#  Build tools 26.0.1\nRUN echo y | android update sdk --no-ui --all --filter build-tools-26.0.1 | grep 'package installed'\nRUN echo y | android update sdk --no-ui --all --filter build-tools-27.0.3 | grep 'package installed'\nRUN echo y | android update sdk --no-ui --all --filter build-tools-28.0.2 | grep 'package installed'\nRUN echo y | android update sdk --no-ui --all --filter build-tools-28.0.3 | grep 'package installed'\n#  Extras\nRUN echo y | android update sdk --no-ui --all --filter extra-android-m2repository | grep 'package installed'\nRUN echo y | android update sdk --no-ui --all --filter extra-google-m2repository | grep 'package installed'\nRUN echo y | android update sdk --no-ui --all --filter extra-google-google_play_services | grep 'package installed'\n#  Copy tools from our repository into the docker image\nCOPY tools /opt/tools\n#  Accept licenses\nCOPY licenses ${ANDROID_SDK_HOME}/licenses\n#  -- Emulator ---------------------------------------------------------------------------\n#  Android 5.0 / SDK 21\nRUN echo y | android update sdk --no-ui --all --filter android-21 | grep 'package installed'\n#  Emulator image\nRUN echo y | android update sdk --no-ui --all --filter sys-img-armeabi-v7a-android-21 | grep 'package installed'\n#  Create emulator AVD\nRUN echo no | android create avd -f -n test -t android-21 --abi default/armeabi-v7a --skin 480x800\n#  Create fake keymap file (Otherwise the emulator won't start up)\nRUN mkdir /opt/android-sdk-linux/tools/keymaps \\\n && touch /opt/android-sdk-linux/tools/keymaps/en-us\n#  -- Update SDK -------------------------------------------------------------------------\n#  Update SDK\nRUN /opt/tools/android-accept-licenses.sh android update sdk --no-ui --obsolete --force\n#  -- Project setup ----------------------------------------------------------------------\nWORKDIR /opt\n#  Checkout source code\nRUN git clone https://github.com/mozilla-mobile/focus-android.git\n#  Build project and run gradle tasks once to pull all dependencies\nWORKDIR /opt/focus-android\nRUN ./gradlew --no-daemon assemble testFocusX86DebugUnitTest lint pmd checkstyle spotbugs detektCheck ktlint\n#  -- Post setup -------------------------------------------------------------------------\n#  Install dependencies needed to run Android2Po\nRUN pip install -r tools/l10n/android2po/requirements.txt\n#  Install taskcluster python library (used by decision tasks)\n#  5.0.0 is still incompatible with taskclusterProxy, meaning no decision task is able\n#  to schedule the rest of the Taskcluster tasks. Please upgrade to taskcluster>=5 once\n#  https://bugzilla.mozilla.org/show_bug.cgi?id=1460015 is fixed\nRUN pip install 'taskcluster>=4,<5'\nRUN pip install arrow\n#  Install Google Cloud SDK for using Firebase Device Lab\nRUN curl https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-184.0.0-linux-x86_64.tar.gz --output /gcloud.tar.gz\nRUN tar -xvf /gcloud.tar.gz -C /\nRUN /google-cloud-sdk/install.sh --quiet\nRUN /google-cloud-sdk/bin/gcloud --quiet components update\n#  Needed for verifying cyclic redundancy check (CRC) headers (Google Cloud SDK)\nRUN apt-get install gcc python-dev python-setuptools\nRUN easy_install -U pip\nRUN pip install crcmod -U\n#  -- Cleanup ----------------------------------------------------------------------------\nRUN apt-get clean\n","injectedSmells":[],"originalDockerfileHash":"cfd0c41402febf2f80ac89fcf6f7f7fa","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   This Source Code Form is subject to the terms of the Mozilla Public\n#   License, v. 2.0. If a copy of the MPL was not distributed with this\n#   file, You can obtain one at http://mozilla.org/MPL/2.0/.\n#   Inspired by:\n#   https://hub.docker.com/r/runmymind/docker-android-sdk/~/dockerfile/\nFROM ubuntu:17.10\nMAINTAINER Sebastian Kaspari \"skaspari@mozilla.com\"\n#   -- System -----------------------------------------------------------------------------\nRUN apt-get update -qq\nRUN apt-get install openjdk-8-jdk wget expect git curl ruby ruby-dev ruby-build python python-pip optipng imagemagick locales -y\nRUN gem install fastlane\nRUN locale-gen en_US.UTF-8\n#   -- Android SDK ------------------------------------------------------------------------\nRUN cd /opt \\\n && wget -q https://dl.google.com/android/android-sdk_r24.4.1-linux.tgz -O android-sdk.tgz\nRUN cd /opt \\\n && tar -xvzf android-sdk.tgz\nRUN cd /opt \\\n && rm -f android-sdk.tgz\nENV ANDROID_SDK_HOME=\"/opt/android-sdk-linux\"\nENV ANDROID_HOME=\"/opt/android-sdk-linux\"\nENV PATH=\"${PATH}:${ANDROID_SDK_HOME}/tools:${ANDROID_SDK_HOME}/platform-tools:/opt/tools:${ANDROID_SDK_HOME}/build-tools/28.0.3\"\n#   Platform tools\nRUN echo y | android update sdk --no-ui --all --filter platform-tools | grep 'package installed'\n#   Android 8.0 / SDK 26\nRUN echo y | android update sdk --no-ui --all --filter android-26 | grep 'package installed'\nRUN echo y | android update sdk --no-ui --all --filter android-27 | grep 'package installed'\nRUN echo y | android update sdk --no-ui --all --filter android-28 | grep 'package installed'\n#   Build tools 26.0.1\nRUN echo y | android update sdk --no-ui --all --filter build-tools-26.0.1 | grep 'package installed'\nRUN echo y | android update sdk --no-ui --all --filter build-tools-27.0.3 | grep 'package installed'\nRUN echo y | android update sdk --no-ui --all --filter build-tools-28.0.2 | grep 'package installed'\nRUN echo y | android update sdk --no-ui --all --filter build-tools-28.0.3 | grep 'package installed'\n#   Extras\nRUN echo y | android update sdk --no-ui --all --filter extra-android-m2repository | grep 'package installed'\nRUN echo y | android update sdk --no-ui --all --filter extra-google-m2repository | grep 'package installed'\nRUN echo y | android update sdk --no-ui --all --filter extra-google-google_play_services | grep 'package installed'\n#   Copy tools from our repository into the docker image\nCOPY tools /opt/tools\n#   Accept licenses\nCOPY licenses ${ANDROID_SDK_HOME}/licenses\n#   -- Emulator ---------------------------------------------------------------------------\n#   Android 5.0 / SDK 21\nRUN echo y | android update sdk --no-ui --all --filter android-21 | grep 'package installed'\n#   Emulator image\nRUN echo y | android update sdk --no-ui --all --filter sys-img-armeabi-v7a-android-21 | grep 'package installed'\n#   Create emulator AVD\nRUN echo no | android create avd -f -n test -t android-21 --abi default/armeabi-v7a --skin 480x800\n#   Create fake keymap file (Otherwise the emulator won't start up)\nRUN mkdir /opt/android-sdk-linux/tools/keymaps \\\n && touch /opt/android-sdk-linux/tools/keymaps/en-us\n#   -- Update SDK -------------------------------------------------------------------------\n#   Update SDK\nRUN /opt/tools/android-accept-licenses.sh android update sdk --no-ui --obsolete --force\n#   -- Project setup ----------------------------------------------------------------------\nWORKDIR /opt\n#   Checkout source code\nRUN git clone https://github.com/mozilla-mobile/focus-android.git\n#   Build project and run gradle tasks once to pull all dependencies\nWORKDIR /opt/focus-android\nRUN ./gradlew --no-daemon assemble testFocusX86DebugUnitTest lint pmd checkstyle spotbugs detektCheck ktlint\n#   -- Post setup -------------------------------------------------------------------------\n#   Install dependencies needed to run Android2Po\nRUN pip install -r tools/l10n/android2po/requirements.txt\n#   Install taskcluster python library (used by decision tasks)\n#   5.0.0 is still incompatible with taskclusterProxy, meaning no decision task is able\n#   to schedule the rest of the Taskcluster tasks. Please upgrade to taskcluster>=5 once\n#   https://bugzilla.mozilla.org/show_bug.cgi?id=1460015 is fixed\nRUN pip install 'taskcluster>=4,<5'\nRUN pip install arrow\n#   Install Google Cloud SDK for using Firebase Device Lab\nRUN curl https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-184.0.0-linux-x86_64.tar.gz --output /gcloud.tar.gz\nRUN tar -xvf /gcloud.tar.gz -C /\nRUN /google-cloud-sdk/install.sh --quiet\nRUN /google-cloud-sdk/bin/gcloud --quiet components update\n#   Needed for verifying cyclic redundancy check (CRC) headers (Google Cloud SDK)\nRUN apt-get install gcc python-dev python-setuptools\nRUN easy_install -U pip\nRUN pip install crcmod -U\n#   -- Cleanup ----------------------------------------------------------------------------\nRUN apt-get clean\n","originalDockerfileUglifiedHash":"84490a84d8e801ebb11e157ef39e5e1d","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/58aac1292c1a661cb766dc5dddf25439ad11b4a2.dockerfile"}