{"seed":535557567,"processedDockerfileHash":"ee67e9a1f53786785eaa978f15d13ece","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM ubuntu:18.04\nMAINTAINER \"Joel Kim\" admin@datascienceschool.net\n#   Replace sh with bash\nRUN cd /bin \\\n && rm sh \\\n && ln -s bash sh\n#   Ubuntu repository in Korea\n#   ENV REPO http://kr.archive.ubuntu.com/ubuntu/\nENV REPO=\"http://mirror.kakao.com/ubuntu\"\n#   in China,\n#   ENV REPO http://mirrors.aliyun.com/ubuntu/\nENV UBUNTU=\"bionic\"\nRUN echo \"deb $REPO $UBUNTU main\" | tee /etc/apt/sources.list \\\n && echo \"deb $REPO $UBUNTU-updates main\" | tee -a /etc/apt/sources.list \\\n && echo \"deb $REPO $UBUNTU universe\" | tee -a /etc/apt/sources.list \\\n && echo \"deb $REPO $UBUNTU-updates universe\" | tee -a /etc/apt/sources.list \\\n && echo \"deb $REPO $UBUNTU multiverse\" | tee -a /etc/apt/sources.list \\\n && echo \"deb $REPO $UBUNTU-updates multiverse\" | tee -a /etc/apt/sources.list \\\n && echo \"deb $REPO $UBUNTU-backports main restricted universe multiverse\" | tee -a /etc/apt/sources.list \\\n && echo \"deb $REPO $UBUNTU-security main\" | tee -a /etc/apt/sources.list \\\n && echo \"deb $REPO $UBUNTU-security universe\" | tee -a /etc/apt/sources.list \\\n && echo \"deb $REPO $UBUNTU-security multiverse\" | tee -a /etc/apt/sources.list \\\n && echo\n#   Set environment\nRUN rm -rf /var/lib/apt/lists/* \\\n && rm -rf /var/lib/apt/lists/partial/* \\\n && DEBIAN_FRONTEND=noninteractive apt update -y -q \\\n && DEBIAN_FRONTEND=noninteractive apt upgrade -y -q \\\n && DEBIAN_FRONTEND=noninteractive apt install -y -q --no-install-recommends apt-utils \\\n && DEBIAN_FRONTEND=noninteractive apt install -y -q locales sudo wget \\\n && locale-gen en_US.UTF-8\nENV LANG=\"en_US.UTF-8\"\nENV LC_ALL=\"en_US.UTF-8\"\nENV LC_COLLATE=\"C\"\nENV TERM=\"xterm\"\nENV HOME=\"/root\"\nENV TZ=\"Asia/Seoul\"\n#   Config for unicode input/output\nRUN echo \"set input-meta on\" >> ~/.inputrc \\\n && echo \"set output-meta on\" >> ~/.inputrc \\\n && echo \"set convert-meta off\" >> ~/.inputrc \\\n && echo\n#   Console colors\nRUN echo \"export LS_COLORS='rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arj=01;31:*.taz=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.dz=01;31:*.gz=01;31:*.lz=01;31:*.xz=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.jpg=01;35:*.jpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.axv=01;35:*.anx=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.axa=00;36:*.oga=00;36:*.spx=00;36:*.xspf=00;36:'\" | tee -a /root/.bashrc\n#  ###############################################################################\n#   Ubuntu Packages and Libraries\n#  ###############################################################################\n#   Ubuntu packages\nRUN rm -rf /var/lib/apt/lists/* \\\n && rm -rf /var/lib/apt/lists/partial/* \\\n && DEBIAN_FRONTEND=noninteractive apt clean \\\n && DEBIAN_FRONTEND=noninteractive apt update \\\n && DEBIAN_FRONTEND=noninteractive apt upgrade -y -q \\\n && DEBIAN_FRONTEND=noninteractive apt install -y -q apparmor apt-file autoconf automake build-essential bzip2 cmake curl default-jdk default-jre dos2unix ed emacs fonts-humor-sans fonts-nanum fonts-nanum-coding fonts-nanum-extra gdb gdebi-core gettext gfortran git graphviz haskell-platform hdf5-helpers hdf5-tools htop imagemagick ko.tex-base ko.tex-extra ko.tex-extra-hlfont libapparmor1 libatlas-base-dev libavcodec-dev libavformat-dev libboost-all-dev libclang-dev libclang1 libcupti-dev libcurl4-gnutls-dev libevent-dev libgdal-dev libgeos-dev libgflags-dev libgoogle-glog-dev libgtest-dev libgtk-3-dev libhdf5-dev libiomp-dev libjpeg-dev libleveldb-dev liblmdb-dev libmagickwand-dev libopencv-dev libpgm-dev libpng++-dev libpng-dev libpq-dev libprotobuf-dev libspatialindex-dev libspatialindex-dev libssh2-1-dev libssl-dev libswscale-dev libtiff-dev libtiff5-dev libtool libv4l-dev libx264-dev libxvidcore-dev make man memcached mercurial ncdu net-tools nginx openbox openssh-server openssl pandoc pdf2svg pkg-config postgresql postgresql-contrib protobuf-compiler rsyslog screen software-properties-common sudo supervisor swig texlive texlive-fonts-recommended texlive-lang-cjk texlive-latex-base texlive-latex-recommended texlive-latex-extra texlive-pictures texlive-xetex tmux tree fonts-unfonts-core fonts-unfonts-extra unzip uuid-dev vim wget wireshark wkhtmltopdf x11-apps xauth xdm xorg xvfb xzdec zip \\\n && echo ttf-mscorefonts-installer msttcorefonts/accepted-mscorefonts-eula select true | debconf-set-selections \\\n && apt-get install --no-install-recommends ttf-mscorefonts-installer=3.6ubuntu2 -y -q \\\n && mkdir -p /download \\\n && cd /download \\\n && mkdir -p /usr/share/fonts/opentype \\\n && chmod a+rwx -R /usr/share/fonts/* \\\n && fc-cache -fv \\\n && rm -rf /download \\\n && DEBIAN_FRONTEND=noninteractive apt -y -q --purge remove tex.*-doc$ \\\n && DEBIAN_FRONTEND=noninteractive apt clean\n#  ###############################################################################\n#   SSH service\n#  ###############################################################################\nARG HTTPS_COMMENT=#\nENV HTTPS_COMMENT=\"$HTTPS_COMMENT\"\nRUN mkdir -p /var/run/sshd \\\n && sed -i 's/PermitRootLogin without-password/PermitRootLogin yes/' /etc/ssh/sshd_config\nEXPOSE 22/tcp\n#  ###############################################################################\n#   User Account\n#  ###############################################################################\n#   Create user\nARG USER_ID=dockeruser\nENV USER_ID=\"$USER_ID\"\nARG USER_PASS=dockeruserpass\nENV USER_PASS=\"$USER_PASS\"\nARG USER_UID=1999\nENV USER_UID=\"$USER_UID\"\nARG USER_GID=1999\nENV USER_GID=\"$USER_GID\"\nRUN groupadd --system -r $USER_ID -g $USER_GID \\\n && adduser --system --uid=$USER_UID --gid=$USER_GID --home /home/$USER_ID --shell /bin/bash $USER_ID \\\n && echo $USER_ID:$USER_PASS | chpasswd \\\n && cp /etc/skel/.bashrc /home/$USER_ID/.bashrc \\\n && source /home/$USER_ID/.bashrc \\\n && cp /etc/skel/.profile /home/$USER_ID/.profile \\\n && source /home/$USER_ID/.profile \\\n && adduser $USER_ID sudo\n#   login profile\nCOPY \".bash_profile\" \"/home/$USER_ID/\"\nCOPY \"./.docker-entrypoint.sh\" \"/home/$USER_ID/\"\nRUN chown -R $USER_ID:$USER_ID /home/$USER_ID/ \\\n && chmod a+x \"/home/$USER_ID/.docker-entrypoint.sh\"\nUSER $USER_ID\nWORKDIR /home/$USER_ID\nENV HOME=\"/home/$USER_ID\"\nRUN echo \"export LANG='en_US.UTF-8'\" | tee -a /home/$USER_ID/.bashrc \\\n && echo \"export LANGUAGE='en_US.UTF-8'\" | tee -a /home/$USER_ID/.bashrc \\\n && echo \"export LC_ALL='en_US.UTF-8'\" | tee -a /home/$USER_ID/.bashrc \\\n && echo \"export TZ='Asia/Seoul'\" | tee -a /home/$USER_ID/.bashrc \\\n && echo \"export TERM='xterm'\" | tee -a /home/$USER_ID/.bashrc \\\n && echo \"set input-meta on\" >> /home/$USER_ID/.inputrc \\\n && echo \"set output-meta on\" >> /home/$USER_ID/.inputrc \\\n && echo \"set convert-meta off\" >> /home/$USER_ID/.inputrc \\\n && echo \"export LS_COLORS='rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arj=01;31:*.taz=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.dz=01;31:*.gz=01;31:*.lz=01;31:*.xz=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.jpg=01;35:*.jpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.axv=01;35:*.anx=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.axa=00;36:*.oga=00;36:*.spx=00;36:*.xspf=00;36:'\" | tee -a /home/$USER_ID/.bashrc\n#  ###############################################################################\n#   Docker Entrypoint\n#  ###############################################################################\nUSER root\nRUN which wget &> /dev/null || apt-get install --no-install-recommends wget=1.20.3 ; wget --no-verbose --output-document /usr/bin/tini https://github.com/krallin/tini/releases/download/v0.18.0/tini\nRUN chmod a+x /usr/bin/tini\nENTRYPOINT [\"/usr/bin/tini\", \"--\", \"/bin/bash\", \".docker-entrypoint.sh\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:18.04\nMAINTAINER \"Joel Kim\" admin@datascienceschool.net\n#  Replace sh with bash\nRUN cd /bin \\\n && rm sh \\\n && ln -s bash sh\n#  Ubuntu repository in Korea\n#  ENV REPO http://kr.archive.ubuntu.com/ubuntu/\nENV REPO=\"http://mirror.kakao.com/ubuntu\"\n#  in China,\n#  ENV REPO http://mirrors.aliyun.com/ubuntu/\nENV UBUNTU=\"bionic\"\nRUN echo \"deb $REPO $UBUNTU main\" | tee /etc/apt/sources.list \\\n && echo \"deb $REPO $UBUNTU-updates main\" | tee -a /etc/apt/sources.list \\\n && echo \"deb $REPO $UBUNTU universe\" | tee -a /etc/apt/sources.list \\\n && echo \"deb $REPO $UBUNTU-updates universe\" | tee -a /etc/apt/sources.list \\\n && echo \"deb $REPO $UBUNTU multiverse\" | tee -a /etc/apt/sources.list \\\n && echo \"deb $REPO $UBUNTU-updates multiverse\" | tee -a /etc/apt/sources.list \\\n && echo \"deb $REPO $UBUNTU-backports main restricted universe multiverse\" | tee -a /etc/apt/sources.list \\\n && echo \"deb $REPO $UBUNTU-security main\" | tee -a /etc/apt/sources.list \\\n && echo \"deb $REPO $UBUNTU-security universe\" | tee -a /etc/apt/sources.list \\\n && echo \"deb $REPO $UBUNTU-security multiverse\" | tee -a /etc/apt/sources.list \\\n && echo\n#  Set environment\nRUN rm -rf /var/lib/apt/lists/* \\\n && rm -rf /var/lib/apt/lists/partial/* \\\n && DEBIAN_FRONTEND=noninteractive apt update -y -q \\\n && DEBIAN_FRONTEND=noninteractive apt upgrade -y -q \\\n && DEBIAN_FRONTEND=noninteractive apt install -y -q --no-install-recommends apt-utils \\\n && DEBIAN_FRONTEND=noninteractive apt install -y -q locales sudo wget \\\n && locale-gen en_US.UTF-8\nENV LANG=\"en_US.UTF-8\"\nENV LC_ALL=\"en_US.UTF-8\"\nENV LC_COLLATE=\"C\"\nENV TERM=\"xterm\"\nENV HOME=\"/root\"\nENV TZ=\"Asia/Seoul\"\n#  Config for unicode input/output\nRUN echo \"set input-meta on\" >> ~/.inputrc \\\n && echo \"set output-meta on\" >> ~/.inputrc \\\n && echo \"set convert-meta off\" >> ~/.inputrc \\\n && echo\n#  Console colors\nRUN echo \"export LS_COLORS='rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arj=01;31:*.taz=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.dz=01;31:*.gz=01;31:*.lz=01;31:*.xz=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.jpg=01;35:*.jpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.axv=01;35:*.anx=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.axa=00;36:*.oga=00;36:*.spx=00;36:*.xspf=00;36:'\" | tee -a /root/.bashrc\n# ###############################################################################\n#  Ubuntu Packages and Libraries\n# ###############################################################################\n#  Ubuntu packages\nRUN rm -rf /var/lib/apt/lists/* \\\n && rm -rf /var/lib/apt/lists/partial/* \\\n && DEBIAN_FRONTEND=noninteractive apt clean \\\n && DEBIAN_FRONTEND=noninteractive apt update \\\n && DEBIAN_FRONTEND=noninteractive apt upgrade -y -q \\\n && DEBIAN_FRONTEND=noninteractive apt install -y -q apparmor apt-file autoconf automake build-essential bzip2 cmake curl default-jdk default-jre dos2unix ed emacs fonts-humor-sans fonts-nanum fonts-nanum-coding fonts-nanum-extra gdb gdebi-core gettext gfortran git graphviz haskell-platform hdf5-helpers hdf5-tools htop imagemagick ko.tex-base ko.tex-extra ko.tex-extra-hlfont libapparmor1 libatlas-base-dev libavcodec-dev libavformat-dev libboost-all-dev libclang-dev libclang1 libcupti-dev libcurl4-gnutls-dev libevent-dev libgdal-dev libgeos-dev libgflags-dev libgoogle-glog-dev libgtest-dev libgtk-3-dev libhdf5-dev libiomp-dev libjpeg-dev libleveldb-dev liblmdb-dev libmagickwand-dev libopencv-dev libpgm-dev libpng++-dev libpng-dev libpq-dev libprotobuf-dev libspatialindex-dev libspatialindex-dev libssh2-1-dev libssl-dev libswscale-dev libtiff-dev libtiff5-dev libtool libv4l-dev libx264-dev libxvidcore-dev make man memcached mercurial ncdu net-tools nginx openbox openssh-server openssl pandoc pdf2svg pkg-config postgresql postgresql-contrib protobuf-compiler rsyslog screen software-properties-common sudo supervisor swig texlive texlive-fonts-recommended texlive-lang-cjk texlive-latex-base texlive-latex-recommended texlive-latex-extra texlive-pictures texlive-xetex tmux tree fonts-unfonts-core fonts-unfonts-extra unzip uuid-dev vim wget wireshark wkhtmltopdf x11-apps xauth xdm xorg xvfb xzdec zip \\\n && echo ttf-mscorefonts-installer msttcorefonts/accepted-mscorefonts-eula select true | debconf-set-selections \\\n && apt-get install -y -q ttf-mscorefonts-installer \\\n && mkdir -p /download \\\n && cd /download \\\n && mkdir -p /usr/share/fonts/opentype \\\n && chmod a+rwx -R /usr/share/fonts/* \\\n && fc-cache -fv \\\n && rm -rf /download \\\n && DEBIAN_FRONTEND=noninteractive apt -y -q --purge remove tex.*-doc$ \\\n && DEBIAN_FRONTEND=noninteractive apt clean\n# ###############################################################################\n#  SSH service\n# ###############################################################################\nARG HTTPS_COMMENT=#\nENV HTTPS_COMMENT=\"$HTTPS_COMMENT\"\nRUN mkdir -p /var/run/sshd \\\n && sed -i 's/PermitRootLogin without-password/PermitRootLogin yes/' /etc/ssh/sshd_config\nEXPOSE 22/tcp\n# ###############################################################################\n#  User Account\n# ###############################################################################\n#  Create user\nARG USER_ID=dockeruser\nENV USER_ID=\"$USER_ID\"\nARG USER_PASS=dockeruserpass\nENV USER_PASS=\"$USER_PASS\"\nARG USER_UID=1999\nENV USER_UID=\"$USER_UID\"\nARG USER_GID=1999\nENV USER_GID=\"$USER_GID\"\nRUN groupadd --system -r $USER_ID -g $USER_GID \\\n && adduser --system --uid=$USER_UID --gid=$USER_GID --home /home/$USER_ID --shell /bin/bash $USER_ID \\\n && echo $USER_ID:$USER_PASS | chpasswd \\\n && cp /etc/skel/.bashrc /home/$USER_ID/.bashrc \\\n && source /home/$USER_ID/.bashrc \\\n && cp /etc/skel/.profile /home/$USER_ID/.profile \\\n && source /home/$USER_ID/.profile \\\n && adduser $USER_ID sudo\n#  login profile\nCOPY \".bash_profile\" \"/home/$USER_ID/\"\nADD \"./.docker-entrypoint.sh\" \"/home/$USER_ID/\"\nRUN chown -R $USER_ID:$USER_ID /home/$USER_ID/ \\\n && chmod a+x \"/home/$USER_ID/.docker-entrypoint.sh\"\nUSER $USER_ID\nWORKDIR /home/$USER_ID\nENV HOME=\"/home/$USER_ID\"\nRUN echo \"export LANG='en_US.UTF-8'\" | tee -a /home/$USER_ID/.bashrc \\\n && echo \"export LANGUAGE='en_US.UTF-8'\" | tee -a /home/$USER_ID/.bashrc \\\n && echo \"export LC_ALL='en_US.UTF-8'\" | tee -a /home/$USER_ID/.bashrc \\\n && echo \"export TZ='Asia/Seoul'\" | tee -a /home/$USER_ID/.bashrc \\\n && echo \"export TERM='xterm'\" | tee -a /home/$USER_ID/.bashrc \\\n && echo \"set input-meta on\" >> /home/$USER_ID/.inputrc \\\n && echo \"set output-meta on\" >> /home/$USER_ID/.inputrc \\\n && echo \"set convert-meta off\" >> /home/$USER_ID/.inputrc \\\n && echo \"export LS_COLORS='rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arj=01;31:*.taz=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.dz=01;31:*.gz=01;31:*.lz=01;31:*.xz=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.jpg=01;35:*.jpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.axv=01;35:*.anx=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.axa=00;36:*.oga=00;36:*.spx=00;36:*.xspf=00;36:'\" | tee -a /home/$USER_ID/.bashrc\n# ###############################################################################\n#  Docker Entrypoint\n# ###############################################################################\nUSER root\nADD https://github.com/krallin/tini/releases/download/v0.18.0/tini /usr/bin/tini\nRUN chmod a+x /usr/bin/tini\nENTRYPOINT [\"/usr/bin/tini\", \"--\", \"/bin/bash\", \".docker-entrypoint.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"07f9a389235024508aaef5051febf5bf","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:18.04\nMAINTAINER \"Joel Kim\" admin@datascienceschool.net\n#   Replace sh with bash\nRUN cd /bin \\\n && rm sh \\\n && ln -s bash sh\n#   Ubuntu repository in Korea\n#   ENV REPO http://kr.archive.ubuntu.com/ubuntu/\nENV REPO=\"http://mirror.kakao.com/ubuntu\"\n#   in China,\n#   ENV REPO http://mirrors.aliyun.com/ubuntu/\nENV UBUNTU=\"bionic\"\nRUN echo \"deb $REPO $UBUNTU main\" | tee /etc/apt/sources.list \\\n && echo \"deb $REPO $UBUNTU-updates main\" | tee -a /etc/apt/sources.list \\\n && echo \"deb $REPO $UBUNTU universe\" | tee -a /etc/apt/sources.list \\\n && echo \"deb $REPO $UBUNTU-updates universe\" | tee -a /etc/apt/sources.list \\\n && echo \"deb $REPO $UBUNTU multiverse\" | tee -a /etc/apt/sources.list \\\n && echo \"deb $REPO $UBUNTU-updates multiverse\" | tee -a /etc/apt/sources.list \\\n && echo \"deb $REPO $UBUNTU-backports main restricted universe multiverse\" | tee -a /etc/apt/sources.list \\\n && echo \"deb $REPO $UBUNTU-security main\" | tee -a /etc/apt/sources.list \\\n && echo \"deb $REPO $UBUNTU-security universe\" | tee -a /etc/apt/sources.list \\\n && echo \"deb $REPO $UBUNTU-security multiverse\" | tee -a /etc/apt/sources.list \\\n && echo\n#   Set environment\nRUN rm -rf /var/lib/apt/lists/* \\\n && rm -rf /var/lib/apt/lists/partial/* \\\n && DEBIAN_FRONTEND=noninteractive apt update -y -q \\\n && DEBIAN_FRONTEND=noninteractive apt upgrade -y -q \\\n && DEBIAN_FRONTEND=noninteractive apt install -y -q --no-install-recommends apt-utils \\\n && DEBIAN_FRONTEND=noninteractive apt install -y -q locales sudo wget \\\n && locale-gen en_US.UTF-8\nENV LANG=\"en_US.UTF-8\"\nENV LC_ALL=\"en_US.UTF-8\"\nENV LC_COLLATE=\"C\"\nENV TERM=\"xterm\"\nENV HOME=\"/root\"\nENV TZ=\"Asia/Seoul\"\n#   Config for unicode input/output\nRUN echo \"set input-meta on\" >> ~/.inputrc \\\n && echo \"set output-meta on\" >> ~/.inputrc \\\n && echo \"set convert-meta off\" >> ~/.inputrc \\\n && echo\n#   Console colors\nRUN echo \"export LS_COLORS='rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arj=01;31:*.taz=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.dz=01;31:*.gz=01;31:*.lz=01;31:*.xz=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.jpg=01;35:*.jpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.axv=01;35:*.anx=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.axa=00;36:*.oga=00;36:*.spx=00;36:*.xspf=00;36:'\" | tee -a /root/.bashrc\n#  ###############################################################################\n#   Ubuntu Packages and Libraries\n#  ###############################################################################\n#   Ubuntu packages\nRUN rm -rf /var/lib/apt/lists/* \\\n && rm -rf /var/lib/apt/lists/partial/* \\\n && DEBIAN_FRONTEND=noninteractive apt clean \\\n && DEBIAN_FRONTEND=noninteractive apt update \\\n && DEBIAN_FRONTEND=noninteractive apt upgrade -y -q \\\n && DEBIAN_FRONTEND=noninteractive apt install -y -q apparmor apt-file autoconf automake build-essential bzip2 cmake curl default-jdk default-jre dos2unix ed emacs fonts-humor-sans fonts-nanum fonts-nanum-coding fonts-nanum-extra gdb gdebi-core gettext gfortran git graphviz haskell-platform hdf5-helpers hdf5-tools htop imagemagick ko.tex-base ko.tex-extra ko.tex-extra-hlfont libapparmor1 libatlas-base-dev libavcodec-dev libavformat-dev libboost-all-dev libclang-dev libclang1 libcupti-dev libcurl4-gnutls-dev libevent-dev libgdal-dev libgeos-dev libgflags-dev libgoogle-glog-dev libgtest-dev libgtk-3-dev libhdf5-dev libiomp-dev libjpeg-dev libleveldb-dev liblmdb-dev libmagickwand-dev libopencv-dev libpgm-dev libpng++-dev libpng-dev libpq-dev libprotobuf-dev libspatialindex-dev libspatialindex-dev libssh2-1-dev libssl-dev libswscale-dev libtiff-dev libtiff5-dev libtool libv4l-dev libx264-dev libxvidcore-dev make man memcached mercurial ncdu net-tools nginx openbox openssh-server openssl pandoc pdf2svg pkg-config postgresql postgresql-contrib protobuf-compiler rsyslog screen software-properties-common sudo supervisor swig texlive texlive-fonts-recommended texlive-lang-cjk texlive-latex-base texlive-latex-recommended texlive-latex-extra texlive-pictures texlive-xetex tmux tree fonts-unfonts-core fonts-unfonts-extra unzip uuid-dev vim wget wireshark wkhtmltopdf x11-apps xauth xdm xorg xvfb xzdec zip \\\n && echo ttf-mscorefonts-installer msttcorefonts/accepted-mscorefonts-eula select true | debconf-set-selections \\\n && apt-get install ttf-mscorefonts-installer -y -q \\\n && mkdir -p /download \\\n && cd /download \\\n && mkdir -p /usr/share/fonts/opentype \\\n && chmod a+rwx -R /usr/share/fonts/* \\\n && fc-cache -fv \\\n && rm -rf /download \\\n && DEBIAN_FRONTEND=noninteractive apt -y -q --purge remove tex.*-doc$ \\\n && DEBIAN_FRONTEND=noninteractive apt clean\n#  ###############################################################################\n#   SSH service\n#  ###############################################################################\nARG HTTPS_COMMENT=#\nENV HTTPS_COMMENT=\"$HTTPS_COMMENT\"\nRUN mkdir -p /var/run/sshd \\\n && sed -i 's/PermitRootLogin without-password/PermitRootLogin yes/' /etc/ssh/sshd_config\nEXPOSE 22/tcp\n#  ###############################################################################\n#   User Account\n#  ###############################################################################\n#   Create user\nARG USER_ID=dockeruser\nENV USER_ID=\"$USER_ID\"\nARG USER_PASS=dockeruserpass\nENV USER_PASS=\"$USER_PASS\"\nARG USER_UID=1999\nENV USER_UID=\"$USER_UID\"\nARG USER_GID=1999\nENV USER_GID=\"$USER_GID\"\nRUN groupadd --system -r $USER_ID -g $USER_GID \\\n && adduser --system --uid=$USER_UID --gid=$USER_GID --home /home/$USER_ID --shell /bin/bash $USER_ID \\\n && echo $USER_ID:$USER_PASS | chpasswd \\\n && cp /etc/skel/.bashrc /home/$USER_ID/.bashrc \\\n && source /home/$USER_ID/.bashrc \\\n && cp /etc/skel/.profile /home/$USER_ID/.profile \\\n && source /home/$USER_ID/.profile \\\n && adduser $USER_ID sudo\n#   login profile\nCOPY \".bash_profile\" \"/home/$USER_ID/\"\nADD \"./.docker-entrypoint.sh\" \"/home/$USER_ID/\"\nRUN chown -R $USER_ID:$USER_ID /home/$USER_ID/ \\\n && chmod a+x \"/home/$USER_ID/.docker-entrypoint.sh\"\nUSER $USER_ID\nWORKDIR /home/$USER_ID\nENV HOME=\"/home/$USER_ID\"\nRUN echo \"export LANG='en_US.UTF-8'\" | tee -a /home/$USER_ID/.bashrc \\\n && echo \"export LANGUAGE='en_US.UTF-8'\" | tee -a /home/$USER_ID/.bashrc \\\n && echo \"export LC_ALL='en_US.UTF-8'\" | tee -a /home/$USER_ID/.bashrc \\\n && echo \"export TZ='Asia/Seoul'\" | tee -a /home/$USER_ID/.bashrc \\\n && echo \"export TERM='xterm'\" | tee -a /home/$USER_ID/.bashrc \\\n && echo \"set input-meta on\" >> /home/$USER_ID/.inputrc \\\n && echo \"set output-meta on\" >> /home/$USER_ID/.inputrc \\\n && echo \"set convert-meta off\" >> /home/$USER_ID/.inputrc \\\n && echo \"export LS_COLORS='rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arj=01;31:*.taz=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.dz=01;31:*.gz=01;31:*.lz=01;31:*.xz=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.jpg=01;35:*.jpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.axv=01;35:*.anx=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.axa=00;36:*.oga=00;36:*.spx=00;36:*.xspf=00;36:'\" | tee -a /home/$USER_ID/.bashrc\n#  ###############################################################################\n#   Docker Entrypoint\n#  ###############################################################################\nUSER root\nADD https://github.com/krallin/tini/releases/download/v0.18.0/tini /usr/bin/tini\nRUN chmod a+x /usr/bin/tini\nENTRYPOINT [\"/usr/bin/tini\", \"--\", \"/bin/bash\", \".docker-entrypoint.sh\"]\n","originalDockerfileUglifiedHash":"98072d4c9785919ef7edffa964fb8815","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/2bae9596bdfd28d562ea1b0b68db5c7ea0c4f8a0.dockerfile"}