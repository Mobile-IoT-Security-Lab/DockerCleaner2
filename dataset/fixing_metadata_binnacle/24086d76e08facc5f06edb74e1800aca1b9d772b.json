{"seed":2243820629,"processedDockerfileHash":"368c2b4526ec872de2a0fac9113da8e1","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM microsoft/dotnet:aspnetcore-runtime AS build-kaldi\nENV CPU_CORE=\"4\"\nRUN apt-get update -qq \\\n && apt-get install --no-install-recommends git bzip2 wget g++ make python python3 zlib1g-dev automake autoconf libtool subversion libatlas-base-dev patch sox -y\nWORKDIR /usr/local/\n#   Use the modified kaldi\nRUN git clone https://github.com/hanayashiki/kaldi.git\nWORKDIR /usr/local/kaldi/tools\nRUN extras/check_dependencies.sh\nRUN make -j $CPU_CORE\nWORKDIR /usr/local/kaldi/src\nRUN ./configure \\\n && make depend -j $CPU_CORE \\\n && make -j $CPU_CORE\n#   Fetch changes, avoid rebuild the whole kaldi \nRUN git pull\nWORKDIR /usr/local/kaldi/src/online2\nRUN make\nRUN apt-get install --no-install-recommends tree vim -y\n#   Install redis\nRUN mkdir /root/tools\nWORKDIR /root/tools\nRUN wget http://download.redis.io/redis-stable.tar.gz \\\n && tar xvzf redis-stable.tar.gz \\\n && cd redis-stable \\\n && make \\\n && make install\n#   Install libevent\nRUN apt-get install --no-install-recommends libtool -y\nWORKDIR /root/tools\nRUN git clone https://github.com/libevent/libevent.git\nWORKDIR /root/tools/libevent\nRUN ./autogen.sh \\\n && ./configure \\\n && make \\\n && make install\n#   Install libbson\nWORKDIR /root/tools\nRUN git clone https://github.com/mongodb/libbson.git\nWORKDIR /root/tools/libbson\nRUN ./autogen.sh \\\n && make \\\n && make install\n#   Install hiredis\nWORKDIR /root/tools\nRUN git clone https://github.com/redis/hiredis.git\nRUN cd hiredis \\\n && make \\\n && make install\n#   Install Python3 deps for APITest\nRUN apt-get install --no-install-recommends python3-pip -y\nRUN pip3 install requests gevent\n#   Build dotnet app\nFROM microsoft/dotnet:sdk AS build-env\nRUN apt-get update \\\n && apt-get install --no-install-recommends tree -y\n#   Copy everything\nWORKDIR /app\t\t\nRUN mkdir Service Core CoreRun\nCOPY Service Service/\nCOPY Core Core/\n#   To make dotnet happy\nCOPY CoreRun CoreRun/\nCOPY SRService.sln .\n#   Build web interface\nRUN dotnet publish\n#   RUN echo \"\\n####Build results: ####\" && tree . \n#   Go back to where we build kaldi\nFROM build-kaldi\n#   Build decoder\nWORKDIR /app\nCOPY --from=build-env /app .\nRUN mkdir Kaldi APITest\nCOPY Kaldi/ /app/Kaldi/\nWORKDIR /app/Kaldi\nRUN make kaldi-service\nWORKDIR /app\nCOPY *.sh ./\nCOPY Makefile ./\nCOPY APITest APITest/\nCOPY KaldiConf KaldiConf/\nCOPY ServiceConf ServiceConf/\nRUN chmod +x ./init.sh\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM microsoft/dotnet:aspnetcore-runtime AS build-kaldi\nENV CPU_CORE=\"4\"\nRUN apt-get update -qq \\\n && apt-get install git bzip2 wget g++ make python python3 zlib1g-dev automake autoconf libtool subversion libatlas-base-dev patch sox -y\nWORKDIR /usr/local/\n#  Use the modified kaldi\nRUN git clone https://github.com/hanayashiki/kaldi.git\nWORKDIR /usr/local/kaldi/tools\nRUN extras/check_dependencies.sh\nRUN make -j $CPU_CORE\nWORKDIR /usr/local/kaldi/src\nRUN ./configure \\\n && make depend -j $CPU_CORE \\\n && make -j $CPU_CORE\n#  Fetch changes, avoid rebuild the whole kaldi \nRUN git pull\nWORKDIR /usr/local/kaldi/src/online2\nRUN make\nRUN apt-get install tree vim -y\n#  Install redis\nRUN mkdir /root/tools\nWORKDIR /root/tools\nRUN wget http://download.redis.io/redis-stable.tar.gz \\\n && tar xvzf redis-stable.tar.gz \\\n && cd redis-stable \\\n && make \\\n && make install\n#  Install libevent\nRUN apt-get install libtool -y\nWORKDIR /root/tools\nRUN git clone https://github.com/libevent/libevent.git\nWORKDIR /root/tools/libevent\nRUN ./autogen.sh \\\n && ./configure \\\n && make \\\n && make install\n#  Install libbson\nWORKDIR /root/tools\nRUN git clone https://github.com/mongodb/libbson.git\nWORKDIR /root/tools/libbson\nRUN ./autogen.sh \\\n && make \\\n && make install\n#  Install hiredis\nWORKDIR /root/tools\nRUN git clone https://github.com/redis/hiredis.git\nRUN cd hiredis \\\n && make \\\n && make install\n#  Install Python3 deps for APITest\nRUN apt-get install python3-pip -y\nRUN pip3 install requests gevent\n#  Build dotnet app\nFROM microsoft/dotnet:sdk AS build-env\nRUN apt-get update \\\n && apt-get install tree -y\n#  Copy everything\nWORKDIR /app\t\t\nRUN mkdir Service Core CoreRun\nCOPY Service Service/\nCOPY Core Core/\n#  To make dotnet happy\nCOPY CoreRun CoreRun/\nCOPY SRService.sln .\n#  Build web interface\nRUN dotnet publish\n#  RUN echo \"\\n####Build results: ####\" && tree . \n#  Go back to where we build kaldi\nFROM build-kaldi\n#  Build decoder\nWORKDIR /app\nCOPY --from=build-env /app .\nRUN mkdir Kaldi APITest\nCOPY Kaldi/ /app/Kaldi/\nWORKDIR /app/Kaldi\nRUN make kaldi-service\nWORKDIR /app\nCOPY *.sh ./\nCOPY Makefile ./\nCOPY APITest APITest/\nCOPY KaldiConf KaldiConf/\nCOPY ServiceConf ServiceConf/\nRUN chmod +x ./init.sh\n","injectedSmells":[],"originalDockerfileHash":"854c012ff66633951f923bec85bdfc55","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM microsoft/dotnet:aspnetcore-runtime AS build-kaldi\nENV CPU_CORE=\"4\"\nRUN apt-get update -qq \\\n && apt-get install git bzip2 wget g++ make python python3 zlib1g-dev automake autoconf libtool subversion libatlas-base-dev patch sox -y\nWORKDIR /usr/local/\n#   Use the modified kaldi\nRUN git clone https://github.com/hanayashiki/kaldi.git\nWORKDIR /usr/local/kaldi/tools\nRUN extras/check_dependencies.sh\nRUN make -j $CPU_CORE\nWORKDIR /usr/local/kaldi/src\nRUN ./configure \\\n && make depend -j $CPU_CORE \\\n && make -j $CPU_CORE\n#   Fetch changes, avoid rebuild the whole kaldi \nRUN git pull\nWORKDIR /usr/local/kaldi/src/online2\nRUN make\nRUN apt-get install tree vim -y\n#   Install redis\nRUN mkdir /root/tools\nWORKDIR /root/tools\nRUN wget http://download.redis.io/redis-stable.tar.gz \\\n && tar xvzf redis-stable.tar.gz \\\n && cd redis-stable \\\n && make \\\n && make install\n#   Install libevent\nRUN apt-get install libtool -y\nWORKDIR /root/tools\nRUN git clone https://github.com/libevent/libevent.git\nWORKDIR /root/tools/libevent\nRUN ./autogen.sh \\\n && ./configure \\\n && make \\\n && make install\n#   Install libbson\nWORKDIR /root/tools\nRUN git clone https://github.com/mongodb/libbson.git\nWORKDIR /root/tools/libbson\nRUN ./autogen.sh \\\n && make \\\n && make install\n#   Install hiredis\nWORKDIR /root/tools\nRUN git clone https://github.com/redis/hiredis.git\nRUN cd hiredis \\\n && make \\\n && make install\n#   Install Python3 deps for APITest\nRUN apt-get install python3-pip -y\nRUN pip3 install requests gevent\n#   Build dotnet app\nFROM microsoft/dotnet:sdk AS build-env\nRUN apt-get update \\\n && apt-get install tree -y\n#   Copy everything\nWORKDIR /app\t\t\nRUN mkdir Service Core CoreRun\nCOPY Service Service/\nCOPY Core Core/\n#   To make dotnet happy\nCOPY CoreRun CoreRun/\nCOPY SRService.sln .\n#   Build web interface\nRUN dotnet publish\n#   RUN echo \"\\n####Build results: ####\" && tree . \n#   Go back to where we build kaldi\nFROM build-kaldi\n#   Build decoder\nWORKDIR /app\nCOPY --from=build-env /app .\nRUN mkdir Kaldi APITest\nCOPY Kaldi/ /app/Kaldi/\nWORKDIR /app/Kaldi\nRUN make kaldi-service\nWORKDIR /app\nCOPY *.sh ./\nCOPY Makefile ./\nCOPY APITest APITest/\nCOPY KaldiConf KaldiConf/\nCOPY ServiceConf ServiceConf/\nRUN chmod +x ./init.sh\n","originalDockerfileUglifiedHash":"3501639e1c84f7de4fb78de441c7a942","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/24086d76e08facc5f06edb74e1800aca1b9d772b.dockerfile"}