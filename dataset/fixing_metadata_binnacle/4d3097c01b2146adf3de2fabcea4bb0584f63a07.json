{"seed":1050075180,"processedDockerfileHash":"c4a22d31a4a886349adb2322d1d8af95","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM ubuntu:16.04 AS base\nENV DEBIAN_FRONTEND=\"noninteractive\" \\\n    TERM=\"xterm\"\nRUN echo \"export > /etc/envvars\" >> /root/.bashrc \\\n && echo \"export PS1='\\[\\e[1;31m\\]\\u@\\h:\\w$\\[\\e[0m\\] '\" | tee -a /root/.bashrc /etc/skel/.bashrc \\\n && echo \"alias tcurrent='tail /var/log/*/current -f'\" | tee -a /root/.bashrc /etc/skel/.bashrc\nRUN :\nRUN (apt-get update ;apt-get install --no-install-recommends locales=2.23-0ubuntu11.3 -y ) \\\n && locale-gen en_US.UTF-8 \\\n && dpkg-reconfigure locales\nENV LANGUAGE=\"en_US.UTF-8\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    LANG=\"en_US.UTF-8\"\n#   Runit\nRUN (apt-get update ;apt-get install --no-install-recommends runit=2.1.2-3ubuntu1 -y )\nCMD export > /etc/envvars \\\n && /usr/sbin/runsvdir-start\n#   Utilities\nRUN (apt-get update ;apt-get install --no-install-recommends vim=2:7.4.1689-3ubuntu1.5 less=481-2.1ubuntu0.2 net-tools=1.60-26ubuntu1 inetutils-ping=2:1.9.4-1build1 wget=1.17.1-1ubuntu1.5 curl=7.47.0-1ubuntu2.19 git=1:2.7.4-0ubuntu1.10 telnet=0.17-40 nmap=7.01-2ubuntu2 socat=1.7.3.1-1 dnsutils=1:9.10.3.dfsg.P4-8ubuntu1.19 netcat=1.10-41 tree=1.7.0-3 htop=2.0.1-1ubuntu1 unzip=6.0-20ubuntu1.1 sudo=1.8.16-0ubuntu1.10 software-properties-common=0.96.20.10 jq=1.5+dfsg-1ubuntu0.1 psmisc=22.21-2.1ubuntu0.1 iproute=1:4.3.0-1ubuntu3.16.04.5 python=2.7.12-1~16.04 ssh=1:7.2p2-4ubuntu2.10 rsync=3.1.1-3ubuntu1.3 gettext-base=0.19.7-2ubuntu3.1 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends libreadline-dev=6.3-8ubuntu2 libncurses5-dev=6.0+20160213-1ubuntu1 libpcre3-dev=2:8.38-3.1 zlib1g-dev=1:1.2.8.dfsg-2ubuntu4.3 perl=5.22.1-9ubuntu0.9 make=4.1-6 build-essential=12.1ubuntu2 -y )\n#  Confd\nRUN wget -O /usr/local/bin/confd https://github.com/kelseyhightower/confd/releases/download/v0.15.0/confd-0.15.0-linux-amd64 \\\n && chmod +x /usr/local/bin/confd\n#  Redis\nRUN wget -O - http://download.redis.io/releases/redis-4.0.8.tar.gz | tar zx \\\n && cd redis-* \\\n && make -j$( nproc ;) \\\n && make install \\\n && cp redis.conf /etc/redis.conf \\\n && rm -rf /redis-*\n#  libmodsecurity\nRUN (apt-get update ;apt-get install --no-install-recommends m4=1.4.17-5 libtool=2.4.6-0.1 automake=1:1.15-4ubuntu1 libxml2-dev=2.9.3+dfsg1-1ubuntu0.7 libyajl-dev=2.1.0-2 libgeoip-dev=1.6.9-1 libcurl4-gnutls-dev=7.47.0-1ubuntu2.19 pkgconf=0.9.12-1 -y )\nRUN wget -O - https://github.com/SpiderLabs/ModSecurity/releases/download/v3.0.0/modsecurity-v3.0.0.tar.gz | tar zx \\\n && cd modsecurity* \\\n && ./build.sh \\\n && ./configure \\\n && make -j$( nproc ;) \\\n && make install \\\n && rm -rf /modsecurity*\n#  OpenResty\nRUN wget -O - https://github.com/SpiderLabs/ModSecurity-nginx/releases/download/v1.0.0/modsecurity-nginx-v1.0.0.tar.gz | tar zx \\\n && wget -O - https://www.openssl.org/source/openssl-1.0.2n.tar.gz | tar zx \\\n && wget -O - https://openresty.org/download/openresty-1.13.6.1.tar.gz | tar zx \\\n && cd /openssl* \\\n && ./config \\\n && make install \\\n && mv apps/openssl /usr/bin/ \\\n && cd /openresty* \\\n && ./configure -j$( grep -c '^processor' /proc/cpuinfo ;) --with-http_v2_module --with-pcre-jit --prefix=/usr/local/openresty --sbin-path=/usr/sbin/nginx --conf-path=/etc/nginx/nginx.conf --error-log-path=/var/log/nginx/error.log --http-log-path=/var/log/nginx/access.log --pid-path=/var/run/nginx.pid --lock-path=/var/run/nginx.lock --http-client-body-temp-path=/var/cache/nginx/client_temp --http-proxy-temp-path=/var/cache/nginx/proxy_temp --with-file-aio --with-threads --with-stream --with-http_stub_status_module --with-openssl=$( ls -d /openssl* ;) --with-http_sub_module --with-http_realip_module --add-module=/modsecurity-nginx-v1.0.0 \\\n && make -j$( nproc ;) \\\n && make install \\\n && rm -rf /openresty* \\\n && rm -rf /openssl* \\\n && rm -rf /modsecurity-nginx*\nRUN mkdir -p /etc/nginx \\\n && mkdir -p /var/log/nginx \\\n && mkdir -p /var/cache/nginx/client_temp \\\n && mkdir -p /var/cache/nginx/proxy_temp\n#  LuaRocks\nRUN wget -O - http://luarocks.org/releases/luarocks-2.4.3.tar.gz | tar zx \\\n && cd luarocks-* \\\n && ./configure --prefix=/usr/local/openresty/luajit --with-lua=/usr/local/openresty/luajit/ --lua-suffix=jit-2.1.0-beta3 --with-lua-include=/usr/local/openresty/luajit/include/luajit-2.1 \\\n && make -j$( grep -c '^processor' /proc/cpuinfo ;) \\\n && make install \\\n && rm -rf /luarocks-*\nRUN cd /usr/local/openresty/luajit/bin \\\n && ln -s luajit-* lua\nENV PATH=\"/usr/local/openresty/luajit/bin:$PATH\"\n#  Lua Libraries\nRUN luarocks install lua-resty-session\nRUN luarocks install inspect\nRUN luarocks install lua-resty-http\nRUN luarocks install lua-resty-cookie\n#  ssl\nRUN openssl dhparam -out /etc/ssl/dhparams.pem 2048\nRUN mkdir -p /etc/nginx/ssl \\\n && cd /etc/nginx/ssl \\\n && export PASSPHRASE=$( head -c 500 /dev/urandom | tr -dc a-z0-9A-Z | head -c 128 ;echo ;) \\\n && openssl genrsa -des3 -out server.key -passout env:PASSPHRASE 2048 \\\n && openssl req -new -batch -key server.key -out server.csr -subj \"/C=/ST=/O=org/localityName=/commonName=org/organizationalUnitName=org/emailAddress=/\" -passin env:PASSPHRASE \\\n && openssl rsa -in server.key -out server.key -passin env:PASSPHRASE \\\n && openssl x509 -req -days 3650 -in server.csr -signkey server.key -out server.crt\n#   Force triggering ERROR_PAGE_404 page\nRUN rm -rf /usr/local/openresty/nginx/html\n#  Passport\nRUN wget -O - https://nodejs.org/dist/v8.10.0/node-v8.10.0-linux-x64.tar.gz | tar xz\nRUN mv node* node \\\n && ln -s /node/bin/node /usr/local/bin/node \\\n && ln -s /node/bin/npm /usr/local/bin/npm\nENV NODE_PATH=\"/usr/local/lib/node_modules\"\nCOPY authenticator /authenticator\nRUN cd /authenticator \\\n && npm install \\\n && npm run build\n#  Letsencrypt\nRUN luarocks install lua-resty-http \\\n && luarocks install lua-resty-auto-ssl\nRUN mkdir -p /etc/resty-auto-ssl \\\n && chown nobody /etc/resty-auto-ssl\n#  OWASP rules\nRUN wget -O - https://github.com/SpiderLabs/owasp-modsecurity-crs/archive/v3.0.2.tar.gz | tar zx \\\n && mv owasp* /etc/nginx/owasp\nRUN cp /etc/nginx/owasp/crs-setup.conf.example /etc/nginx/owasp/owasp.conf\nCOPY modsec /etc/nginx/modsec\n#  logrotate\nRUN (apt-get update ;apt-get install --no-install-recommends logrotate=3.8.7-2ubuntu2.16.04.2 cron=3.0pl1-128ubuntu2 -y )\nCOPY logrotate.conf /etc/logrotate.d/nginx.conf\nCOPY crontab /\n#  Config\nCOPY nginx.conf /etc/nginx/\nCOPY etc/confd /etc/confd\nCOPY test.sh /\nCOPY redis.conf /etc/\n#  SAML\nCOPY saml/saml.conf /etc/nginx/\nCOPY saml/saml.lua /usr/local/openresty/lualib/\nRUN chmod +r /usr/local/openresty/lualib/*\n#   Add runit services\nCOPY sv /etc/service\nARG BUILD_INFO\nLABEL BUILD_INFO=\"$BUILD_INFO\"\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:16.04 AS base\nENV DEBIAN_FRONTEND=\"noninteractive\" \\\n    TERM=\"xterm\"\nRUN echo \"export > /etc/envvars\" >> /root/.bashrc \\\n && echo \"export PS1='\\[\\e[1;31m\\]\\u@\\h:\\w\\$\\[\\e[0m\\] '\" | tee -a /root/.bashrc /etc/skel/.bashrc \\\n && echo \"alias tcurrent='tail /var/log/*/current -f'\" | tee -a /root/.bashrc /etc/skel/.bashrc\nRUN apt-get update\nRUN apt-get install locales -y \\\n && locale-gen en_US.UTF-8 \\\n && dpkg-reconfigure locales\nENV LANGUAGE=\"en_US.UTF-8\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    LANG=\"en_US.UTF-8\"\n#  Runit\nRUN apt-get install --no-install-recommends runit -y\nCMD export > /etc/envvars \\\n && /usr/sbin/runsvdir-start\n#  Utilities\nRUN apt-get install --no-install-recommends vim less net-tools inetutils-ping wget curl git telnet nmap socat dnsutils netcat tree htop unzip sudo software-properties-common jq psmisc iproute python ssh rsync gettext-base -y\nRUN apt-get install --no-install-recommends libreadline-dev libncurses5-dev libpcre3-dev zlib1g-dev perl make build-essential -y\n# Confd\nRUN wget -O /usr/local/bin/confd https://github.com/kelseyhightower/confd/releases/download/v0.15.0/confd-0.15.0-linux-amd64 \\\n && chmod +x /usr/local/bin/confd\n# Redis\nRUN wget -O - http://download.redis.io/releases/redis-4.0.8.tar.gz | tar zx \\\n && cd redis-* \\\n && make -j$( nproc ;) \\\n && make install \\\n && cp redis.conf /etc/redis.conf \\\n && rm -rf /redis-*\n# libmodsecurity\nRUN apt-get install m4 libtool automake libxml2-dev libyajl-dev libgeoip-dev libcurl4-gnutls-dev pkgconf -y\nRUN wget -O - https://github.com/SpiderLabs/ModSecurity/releases/download/v3.0.0/modsecurity-v3.0.0.tar.gz | tar zx \\\n && cd modsecurity* \\\n && ./build.sh \\\n && ./configure \\\n && make -j$( nproc ;) \\\n && make install \\\n && rm -rf /modsecurity*\n# OpenResty\nRUN wget -O - https://github.com/SpiderLabs/ModSecurity-nginx/releases/download/v1.0.0/modsecurity-nginx-v1.0.0.tar.gz | tar zx \\\n && wget -O - https://www.openssl.org/source/openssl-1.0.2n.tar.gz | tar zx \\\n && wget -O - https://openresty.org/download/openresty-1.13.6.1.tar.gz | tar zx \\\n && cd /openssl* \\\n && ./config \\\n && make install \\\n && mv apps/openssl /usr/bin/ \\\n && cd /openresty* \\\n && ./configure -j$( grep -c '^processor' /proc/cpuinfo ;) --with-http_v2_module --with-pcre-jit --prefix=/usr/local/openresty --sbin-path=/usr/sbin/nginx --conf-path=/etc/nginx/nginx.conf --error-log-path=/var/log/nginx/error.log --http-log-path=/var/log/nginx/access.log --pid-path=/var/run/nginx.pid --lock-path=/var/run/nginx.lock --http-client-body-temp-path=/var/cache/nginx/client_temp --http-proxy-temp-path=/var/cache/nginx/proxy_temp --with-file-aio --with-threads --with-stream --with-http_stub_status_module --with-openssl=$( ls -d /openssl* ;) --with-http_sub_module --with-http_realip_module --add-module=/modsecurity-nginx-v1.0.0 \\\n && make -j$( nproc ;) \\\n && make install \\\n && rm -rf /openresty* \\\n && rm -rf /openssl* \\\n && rm -rf /modsecurity-nginx*\nRUN mkdir -p /etc/nginx \\\n && mkdir -p /var/log/nginx \\\n && mkdir -p /var/cache/nginx/client_temp \\\n && mkdir -p /var/cache/nginx/proxy_temp\n# LuaRocks\nRUN wget -O - http://luarocks.org/releases/luarocks-2.4.3.tar.gz | tar zx \\\n && cd luarocks-* \\\n && ./configure --prefix=/usr/local/openresty/luajit --with-lua=/usr/local/openresty/luajit/ --lua-suffix=jit-2.1.0-beta3 --with-lua-include=/usr/local/openresty/luajit/include/luajit-2.1 \\\n && make -j$( grep -c '^processor' /proc/cpuinfo ;) \\\n && make install \\\n && rm -rf /luarocks-*\nRUN cd /usr/local/openresty/luajit/bin \\\n && ln -s luajit-* lua\nENV PATH=\"/usr/local/openresty/luajit/bin:$PATH\"\n# Lua Libraries\nRUN luarocks install lua-resty-session\nRUN luarocks install inspect\nRUN luarocks install lua-resty-http\nRUN luarocks install lua-resty-cookie\n# ssl\nRUN openssl dhparam -out /etc/ssl/dhparams.pem 2048\nRUN mkdir -p /etc/nginx/ssl \\\n && cd /etc/nginx/ssl \\\n && export PASSPHRASE=$( head -c 500 /dev/urandom | tr -dc a-z0-9A-Z | head -c 128 ;echo ;) \\\n && openssl genrsa -des3 -out server.key -passout env:PASSPHRASE 2048 \\\n && openssl req -new -batch -key server.key -out server.csr -subj \"/C=/ST=/O=org/localityName=/commonName=org/organizationalUnitName=org/emailAddress=/\" -passin env:PASSPHRASE \\\n && openssl rsa -in server.key -out server.key -passin env:PASSPHRASE \\\n && openssl x509 -req -days 3650 -in server.csr -signkey server.key -out server.crt\n#  Force triggering ERROR_PAGE_404 page\nRUN rm -rf /usr/local/openresty/nginx/html\n# Passport\nRUN wget -O - https://nodejs.org/dist/v8.10.0/node-v8.10.0-linux-x64.tar.gz | tar xz\nRUN mv node* node \\\n && ln -s /node/bin/node /usr/local/bin/node \\\n && ln -s /node/bin/npm /usr/local/bin/npm\nENV NODE_PATH=\"/usr/local/lib/node_modules\"\nCOPY authenticator /authenticator\nRUN cd /authenticator \\\n && npm install \\\n && npm run build\n# Letsencrypt\nRUN luarocks install lua-resty-http \\\n && luarocks install lua-resty-auto-ssl\nRUN mkdir -p /etc/resty-auto-ssl \\\n && chown nobody /etc/resty-auto-ssl\n# OWASP rules\nRUN wget -O - https://github.com/SpiderLabs/owasp-modsecurity-crs/archive/v3.0.2.tar.gz | tar zx \\\n && mv owasp* /etc/nginx/owasp\nRUN cp /etc/nginx/owasp/crs-setup.conf.example /etc/nginx/owasp/owasp.conf\nCOPY modsec /etc/nginx/modsec\n# logrotate\nRUN apt-get install logrotate cron -y\nCOPY logrotate.conf /etc/logrotate.d/nginx.conf\nCOPY crontab /\n# Config\nCOPY nginx.conf /etc/nginx/\nCOPY etc/confd /etc/confd\nCOPY test.sh /\nCOPY redis.conf /etc/\n# SAML\nCOPY saml/saml.conf /etc/nginx/\nCOPY saml/saml.lua /usr/local/openresty/lualib/\nRUN chmod +r /usr/local/openresty/lualib/*\n#  Add runit services\nCOPY sv /etc/service\nARG BUILD_INFO\nLABEL BUILD_INFO=\"$BUILD_INFO\"\n","injectedSmells":[],"originalDockerfileHash":"25c2356473754590bf007ab83e96e02c","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:16.04 AS base\nENV DEBIAN_FRONTEND=\"noninteractive\" \\\n    TERM=\"xterm\"\nRUN echo \"export > /etc/envvars\" >> /root/.bashrc \\\n && echo \"export PS1='\\[\\e[1;31m\\]\\u@\\h:\\w$\\[\\e[0m\\] '\" | tee -a /root/.bashrc /etc/skel/.bashrc \\\n && echo \"alias tcurrent='tail /var/log/*/current -f'\" | tee -a /root/.bashrc /etc/skel/.bashrc\nRUN apt-get update\nRUN apt-get install locales -y \\\n && locale-gen en_US.UTF-8 \\\n && dpkg-reconfigure locales\nENV LANGUAGE=\"en_US.UTF-8\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    LANG=\"en_US.UTF-8\"\n#   Runit\nRUN apt-get install --no-install-recommends runit -y\nCMD export > /etc/envvars \\\n && /usr/sbin/runsvdir-start\n#   Utilities\nRUN apt-get install --no-install-recommends vim less net-tools inetutils-ping wget curl git telnet nmap socat dnsutils netcat tree htop unzip sudo software-properties-common jq psmisc iproute python ssh rsync gettext-base -y\nRUN apt-get install --no-install-recommends libreadline-dev libncurses5-dev libpcre3-dev zlib1g-dev perl make build-essential -y\n#  Confd\nRUN wget -O /usr/local/bin/confd https://github.com/kelseyhightower/confd/releases/download/v0.15.0/confd-0.15.0-linux-amd64 \\\n && chmod +x /usr/local/bin/confd\n#  Redis\nRUN wget -O - http://download.redis.io/releases/redis-4.0.8.tar.gz | tar zx \\\n && cd redis-* \\\n && make -j$( nproc ;) \\\n && make install \\\n && cp redis.conf /etc/redis.conf \\\n && rm -rf /redis-*\n#  libmodsecurity\nRUN apt-get install m4 libtool automake libxml2-dev libyajl-dev libgeoip-dev libcurl4-gnutls-dev pkgconf -y\nRUN wget -O - https://github.com/SpiderLabs/ModSecurity/releases/download/v3.0.0/modsecurity-v3.0.0.tar.gz | tar zx \\\n && cd modsecurity* \\\n && ./build.sh \\\n && ./configure \\\n && make -j$( nproc ;) \\\n && make install \\\n && rm -rf /modsecurity*\n#  OpenResty\nRUN wget -O - https://github.com/SpiderLabs/ModSecurity-nginx/releases/download/v1.0.0/modsecurity-nginx-v1.0.0.tar.gz | tar zx \\\n && wget -O - https://www.openssl.org/source/openssl-1.0.2n.tar.gz | tar zx \\\n && wget -O - https://openresty.org/download/openresty-1.13.6.1.tar.gz | tar zx \\\n && cd /openssl* \\\n && ./config \\\n && make install \\\n && mv apps/openssl /usr/bin/ \\\n && cd /openresty* \\\n && ./configure -j$( grep -c '^processor' /proc/cpuinfo ;) --with-http_v2_module --with-pcre-jit --prefix=/usr/local/openresty --sbin-path=/usr/sbin/nginx --conf-path=/etc/nginx/nginx.conf --error-log-path=/var/log/nginx/error.log --http-log-path=/var/log/nginx/access.log --pid-path=/var/run/nginx.pid --lock-path=/var/run/nginx.lock --http-client-body-temp-path=/var/cache/nginx/client_temp --http-proxy-temp-path=/var/cache/nginx/proxy_temp --with-file-aio --with-threads --with-stream --with-http_stub_status_module --with-openssl=$( ls -d /openssl* ;) --with-http_sub_module --with-http_realip_module --add-module=/modsecurity-nginx-v1.0.0 \\\n && make -j$( nproc ;) \\\n && make install \\\n && rm -rf /openresty* \\\n && rm -rf /openssl* \\\n && rm -rf /modsecurity-nginx*\nRUN mkdir -p /etc/nginx \\\n && mkdir -p /var/log/nginx \\\n && mkdir -p /var/cache/nginx/client_temp \\\n && mkdir -p /var/cache/nginx/proxy_temp\n#  LuaRocks\nRUN wget -O - http://luarocks.org/releases/luarocks-2.4.3.tar.gz | tar zx \\\n && cd luarocks-* \\\n && ./configure --prefix=/usr/local/openresty/luajit --with-lua=/usr/local/openresty/luajit/ --lua-suffix=jit-2.1.0-beta3 --with-lua-include=/usr/local/openresty/luajit/include/luajit-2.1 \\\n && make -j$( grep -c '^processor' /proc/cpuinfo ;) \\\n && make install \\\n && rm -rf /luarocks-*\nRUN cd /usr/local/openresty/luajit/bin \\\n && ln -s luajit-* lua\nENV PATH=\"/usr/local/openresty/luajit/bin:$PATH\"\n#  Lua Libraries\nRUN luarocks install lua-resty-session\nRUN luarocks install inspect\nRUN luarocks install lua-resty-http\nRUN luarocks install lua-resty-cookie\n#  ssl\nRUN openssl dhparam -out /etc/ssl/dhparams.pem 2048\nRUN mkdir -p /etc/nginx/ssl \\\n && cd /etc/nginx/ssl \\\n && export PASSPHRASE=$( head -c 500 /dev/urandom | tr -dc a-z0-9A-Z | head -c 128 ;echo ;) \\\n && openssl genrsa -des3 -out server.key -passout env:PASSPHRASE 2048 \\\n && openssl req -new -batch -key server.key -out server.csr -subj \"/C=/ST=/O=org/localityName=/commonName=org/organizationalUnitName=org/emailAddress=/\" -passin env:PASSPHRASE \\\n && openssl rsa -in server.key -out server.key -passin env:PASSPHRASE \\\n && openssl x509 -req -days 3650 -in server.csr -signkey server.key -out server.crt\n#   Force triggering ERROR_PAGE_404 page\nRUN rm -rf /usr/local/openresty/nginx/html\n#  Passport\nRUN wget -O - https://nodejs.org/dist/v8.10.0/node-v8.10.0-linux-x64.tar.gz | tar xz\nRUN mv node* node \\\n && ln -s /node/bin/node /usr/local/bin/node \\\n && ln -s /node/bin/npm /usr/local/bin/npm\nENV NODE_PATH=\"/usr/local/lib/node_modules\"\nCOPY authenticator /authenticator\nRUN cd /authenticator \\\n && npm install \\\n && npm run build\n#  Letsencrypt\nRUN luarocks install lua-resty-http \\\n && luarocks install lua-resty-auto-ssl\nRUN mkdir -p /etc/resty-auto-ssl \\\n && chown nobody /etc/resty-auto-ssl\n#  OWASP rules\nRUN wget -O - https://github.com/SpiderLabs/owasp-modsecurity-crs/archive/v3.0.2.tar.gz | tar zx \\\n && mv owasp* /etc/nginx/owasp\nRUN cp /etc/nginx/owasp/crs-setup.conf.example /etc/nginx/owasp/owasp.conf\nCOPY modsec /etc/nginx/modsec\n#  logrotate\nRUN apt-get install logrotate cron -y\nCOPY logrotate.conf /etc/logrotate.d/nginx.conf\nCOPY crontab /\n#  Config\nCOPY nginx.conf /etc/nginx/\nCOPY etc/confd /etc/confd\nCOPY test.sh /\nCOPY redis.conf /etc/\n#  SAML\nCOPY saml/saml.conf /etc/nginx/\nCOPY saml/saml.lua /usr/local/openresty/lualib/\nRUN chmod +r /usr/local/openresty/lualib/*\n#   Add runit services\nCOPY sv /etc/service\nARG BUILD_INFO\nLABEL BUILD_INFO=\"$BUILD_INFO\"\n","originalDockerfileUglifiedHash":"b587605d995195eb12f4e81a9c609324","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/4d3097c01b2146adf3de2fabcea4bb0584f63a07.dockerfile"}