{"seed":1303459178,"processedDockerfileHash":"4a451a5b61cec9fe4df8d70baf0109e9","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Copyright (c) 2017 Sony Corporation. All Rights Reserved.\n#\n#   Licensed under the Apache License, Version 2.0 (the \"License\");\n#   you may not use this file except in compliance with the License.\n#   You may obtain a copy of the License at\n#\n#       http://www.apache.org/licenses/LICENSE-2.0\n#\n#   Unless required by applicable law or agreed to in writing, software\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#   See the License for the specific language governing permissions and\n#   limitations under the License.\nFROM centos:6\nENV LC_ALL=\"C\"\nENV LANG=\"C\"\nENV LANGUAGE=\"C\"\nRUN yum install -y epel-release yum-utils \\\n && yum install -y curl hdf5 hdf5-devel redhat-lsb-core rpm-build unzip wget zip zlib-static \\\n && yum clean all\n#   ----------------------------------------------------------------------------\n#   TODO: More sustainable way of installing gcc 5.x.\n#   ----------------------------------------------------------------------------\n#   It seems like devtoolset-4 is no longer provided in SCL repository,\n#   but RPM packages for devtoolset-4 are still available in centos SCL\n#   repoitory. We directly install these packages and their dependencies\n#   from RPMs using yum command.\n#   Packages we want to install are as follows:\n#     devtoolset-4-gcc\n#     devtoolset-4-gcc-c++\n#     devtoolset-4-gcc-gfortran\n#     git19\n#   ----------------------------------------------------------------------------\n#   Installing devtoolset-4 directly from RPMs.\nRUN PKGS=\" devtoolset-4-runtime-4.1-3.el6.x86_64.rpm devtoolset-4-binutils-2.25.1-8.el6.x86_64.rpm devtoolset-4-gcc-5.3.1-6.1.el6.x86_64.rpm devtoolset-4-libstdc++-devel-5.3.1-6.1.el6.x86_64.rpm devtoolset-4-gcc-c++-5.3.1-6.1.el6.x86_64.rpm devtoolset-4-libquadmath-devel-5.3.1-6.1.el6.x86_64.rpm devtoolset-4-gcc-gfortran-5.3.1-6.1.el6.x86_64.rpm\" \\\n && for pkg in $PKGS; do yum install -y http://mirror.centos.org/centos/6/sclo/x86_64/rh/devtoolset-4/$pkg ; done \\\n && yum clean all\n#   Installing git19 directly from RPMs.\nRUN REPO_BASE=http://mirror.centos.org/centos/6/sclo/x86_64/rh/git19 \\\n && yum install -y $REPO_BASE/git19-runtime-1.2-4.el6.x86_64.rpm $REPO_BASE/git19-perl-Git-1.9.4-4.el6.1.noarch.rpm $REPO_BASE/git19-git-1.9.4-4.el6.1.x86_64.rpm \\\n && yum clean all\nENV PATH=\"/opt/rh/git19/root/usr/bin:/opt/rh/devtoolset-4/root/usr/bin:$PATH\"\nENV LD_LIBRARY_PATH=\"/opt/rh/gti19/root/usr/lib64:/opt/rh/devtoolset-4/root/usr/lib64:/opt/rh/devtoolset-4/root/usr/lib:$LD_LIBRARY_PATH\"\nENV PKG_CONFIG_PATH=\"/opt/rh/git19/root/usr/lib64/pkgconfig:${PKG_CONFIG_PATH}\"\n#  ################################################## cmake\nENV CMAKEVER=\"3.14.3\"\nRUN mkdir /tmp/deps \\\n && cd /tmp/deps \\\n && yum install -y cmake3 \\\n && curl -L https://github.com/Kitware/CMake/releases/download/v${CMAKEVER}/cmake-${CMAKEVER}.tar.gz -o cmake-${CMAKEVER}.tar.gz \\\n && tar xf cmake-${CMAKEVER}.tar.gz \\\n && cd cmake-${CMAKEVER} \\\n && mkdir build \\\n && cd build \\\n && cmake3 -DBUILD_TESTING=FALSE .. \\\n && make \\\n && make install \\\n && yum remove -y cmake3 \\\n && yum clean all \\\n && rm -rf /var/cache/yum/* \\\n && cd / \\\n && rm -rf /tmp/*\n#  ################################################# protobuf\nENV PROTOVER=\"3.4.1\"\nRUN mkdir /tmp/deps \\\n && cd /tmp/deps \\\n && curl -L https://github.com/google/protobuf/archive/v${PROTOVER}.tar.gz -o protobuf-v${PROTOVER}.tar.gz \\\n && tar xvf protobuf-v${PROTOVER}.tar.gz \\\n && cd protobuf-${PROTOVER} \\\n && mkdir build \\\n && cd build \\\n && cmake -DCMAKE_POSITION_INDEPENDENT_CODE=ON -Dprotobuf_BUILD_TESTS=OFF ../cmake \\\n && make \\\n && make install \\\n && cd / \\\n && rm -rf /tmp/*\n#  ################################################# libarchive\nRUN mkdir /tmp/deps \\\n && cd /tmp/deps \\\n && curl -L https://www.libarchive.org/downloads/libarchive-3.3.2.tar.gz -o libarchive-3.3.2.tar.gz \\\n && tar xfa libarchive-3.3.2.tar.gz \\\n && mkdir libarchive-build \\\n && cd libarchive-build \\\n && cmake -DCMAKE_POSITION_INDEPENDENT_CODE=ON -DENABLE_NETTLE=FALSE -DENABLE_OPENSSL=FALSE -DENABLE_LZO=FALSE -DENABLE_LZMA=FALSE -DENABLE_BZip2=FALSE -DENABLE_LIBXML2=FALSE -DENABLE_EXPAT=FALSE -DENABLE_PCREPOSIX=FALSE -DENABLE_LibGCC=FALSE -DENABLE_CNG=FALSE -DENABLE_TAR=FALSE -DENABLE_TAR_SHARED=FALSE -DENABLE_CPIO=FALSE -DENABLE_CPIO_SHARED=FALSE -DENABLE_CAT=FALSE -DENABLE_CAT_SHARED=FALSE -DENABLE_XATTR=FALSE -DENABLE_ACL=FALSE -DENABLE_ICONV=FALSE -DENABLE_TEST=FALSE ../libarchive-3.3.2 \\\n && make \\\n && make install \\\n && cd / \\\n && rm -rf /tmp/*\n#  ################################################# patchelf\nRUN mkdir /tmp/deps \\\n && cd /tmp/deps \\\n && wget http://nixos.org/releases/patchelf/patchelf-0.9/patchelf-0.9.tar.bz2 \\\n && tar xfa patchelf-0.9.tar.bz2 \\\n && cd patchelf-0.9 \\\n && ./configure \\\n && make \\\n && make install \\\n && cd / \\\n && rm -rf /tmp/*\n#  ################################################# miniconda3\nARG PYTHON_VERSION_MAJOR\nARG PYTHON_VERSION_MINOR\nENV PYVERNAME=\"${PYTHON_VERSION_MAJOR}.${PYTHON_VERSION_MINOR}\"\nCOPY python/setup_requirements.txt /tmp/deps/\nCOPY python/requirements.txt /tmp/deps/\nCOPY python/test_requirements.txt /tmp/deps/\nRUN umask 0 \\\n && mkdir -p /tmp/deps \\\n && cd /tmp/deps \\\n && wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh \\\n && bash Miniconda3-latest-Linux-x86_64.sh -b -p /opt/miniconda3 \\\n && rm -rf Miniconda3-latest-Linux-x86_64.sh \\\n && . /opt/miniconda3/bin/activate \\\n && conda create -n nnabla-build python=${PYVERNAME} \\\n && conda activate nnabla-build \\\n && pip install --only-binary -U -r /tmp/deps/setup_requirements.txt \\\n && pip install --only-binary -U -r /tmp/deps/requirements.txt \\\n && pip install --only-binary -U -r /tmp/deps/test_requirements.txt \\\n && conda clean -y --all \\\n && cd / \\\n && rm -rf /tmp/*\nENV PATH=\"/opt/miniconda3/envs/nnabla-build/bin:$PATH\"\nENV LD_LIBRARY_PATH=\"/opt/miniconda3/envs/nnabla-build/lib:$LD_LIBRARY_PATH\"\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Copyright (c) 2017 Sony Corporation. All Rights Reserved.\n#\n#  Licensed under the Apache License, Version 2.0 (the \"License\");\n#  you may not use this file except in compliance with the License.\n#  You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n#  Unless required by applicable law or agreed to in writing, software\n#  distributed under the License is distributed on an \"AS IS\" BASIS,\n#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#  See the License for the specific language governing permissions and\n#  limitations under the License.\nFROM centos:6\nENV LC_ALL=\"C\"\nENV LANG=\"C\"\nENV LANGUAGE=\"C\"\nRUN yum install -y epel-release yum-utils \\\n && yum install -y curl hdf5 hdf5-devel redhat-lsb-core rpm-build unzip wget zip zlib-static \\\n && yum clean all\n#  ----------------------------------------------------------------------------\n#  TODO: More sustainable way of installing gcc 5.x.\n#  ----------------------------------------------------------------------------\n#  It seems like devtoolset-4 is no longer provided in SCL repository,\n#  but RPM packages for devtoolset-4 are still available in centos SCL\n#  repoitory. We directly install these packages and their dependencies\n#  from RPMs using yum command.\n#  Packages we want to install are as follows:\n#    devtoolset-4-gcc\n#    devtoolset-4-gcc-c++\n#    devtoolset-4-gcc-gfortran\n#    git19\n#  ----------------------------------------------------------------------------\n#  Installing devtoolset-4 directly from RPMs.\nRUN PKGS=\" devtoolset-4-runtime-4.1-3.el6.x86_64.rpm devtoolset-4-binutils-2.25.1-8.el6.x86_64.rpm devtoolset-4-gcc-5.3.1-6.1.el6.x86_64.rpm devtoolset-4-libstdc++-devel-5.3.1-6.1.el6.x86_64.rpm devtoolset-4-gcc-c++-5.3.1-6.1.el6.x86_64.rpm devtoolset-4-libquadmath-devel-5.3.1-6.1.el6.x86_64.rpm devtoolset-4-gcc-gfortran-5.3.1-6.1.el6.x86_64.rpm\" \\\n && for pkg in $PKGS; do yum install -y http://mirror.centos.org/centos/6/sclo/x86_64/rh/devtoolset-4/$pkg ; done \\\n && yum clean all\n#  Installing git19 directly from RPMs.\nRUN REPO_BASE=http://mirror.centos.org/centos/6/sclo/x86_64/rh/git19 \\\n && yum install -y $REPO_BASE/git19-runtime-1.2-4.el6.x86_64.rpm $REPO_BASE/git19-perl-Git-1.9.4-4.el6.1.noarch.rpm $REPO_BASE/git19-git-1.9.4-4.el6.1.x86_64.rpm \\\n && yum clean all\nENV PATH=\"/opt/rh/git19/root/usr/bin:/opt/rh/devtoolset-4/root/usr/bin:$PATH\"\nENV LD_LIBRARY_PATH=\"/opt/rh/gti19/root/usr/lib64:/opt/rh/devtoolset-4/root/usr/lib64:/opt/rh/devtoolset-4/root/usr/lib:$LD_LIBRARY_PATH\"\nENV PKG_CONFIG_PATH=\"/opt/rh/git19/root/usr/lib64/pkgconfig:${PKG_CONFIG_PATH}\"\n# ################################################## cmake\nENV CMAKEVER=\"3.14.3\"\nRUN mkdir /tmp/deps \\\n && cd /tmp/deps \\\n && yum install -y cmake3 \\\n && curl -L https://github.com/Kitware/CMake/releases/download/v${CMAKEVER}/cmake-${CMAKEVER}.tar.gz -o cmake-${CMAKEVER}.tar.gz \\\n && tar xf cmake-${CMAKEVER}.tar.gz \\\n && cd cmake-${CMAKEVER} \\\n && mkdir build \\\n && cd build \\\n && cmake3 -DBUILD_TESTING=FALSE .. \\\n && make \\\n && make install \\\n && yum remove -y cmake3 \\\n && yum clean all \\\n && rm -rf /var/cache/yum/* \\\n && cd / \\\n && rm -rf /tmp/*\n# ################################################# protobuf\nENV PROTOVER=\"3.4.1\"\nRUN mkdir /tmp/deps \\\n && cd /tmp/deps \\\n && curl -L https://github.com/google/protobuf/archive/v${PROTOVER}.tar.gz -o protobuf-v${PROTOVER}.tar.gz \\\n && tar xvf protobuf-v${PROTOVER}.tar.gz \\\n && cd protobuf-${PROTOVER} \\\n && mkdir build \\\n && cd build \\\n && cmake -DCMAKE_POSITION_INDEPENDENT_CODE=ON -Dprotobuf_BUILD_TESTS=OFF ../cmake \\\n && make \\\n && make install \\\n && cd / \\\n && rm -rf /tmp/*\n# ################################################# libarchive\nRUN mkdir /tmp/deps \\\n && cd /tmp/deps \\\n && curl -L https://www.libarchive.org/downloads/libarchive-3.3.2.tar.gz -o libarchive-3.3.2.tar.gz \\\n && tar xfa libarchive-3.3.2.tar.gz \\\n && mkdir libarchive-build \\\n && cd libarchive-build \\\n && cmake -DCMAKE_POSITION_INDEPENDENT_CODE=ON -DENABLE_NETTLE=FALSE -DENABLE_OPENSSL=FALSE -DENABLE_LZO=FALSE -DENABLE_LZMA=FALSE -DENABLE_BZip2=FALSE -DENABLE_LIBXML2=FALSE -DENABLE_EXPAT=FALSE -DENABLE_PCREPOSIX=FALSE -DENABLE_LibGCC=FALSE -DENABLE_CNG=FALSE -DENABLE_TAR=FALSE -DENABLE_TAR_SHARED=FALSE -DENABLE_CPIO=FALSE -DENABLE_CPIO_SHARED=FALSE -DENABLE_CAT=FALSE -DENABLE_CAT_SHARED=FALSE -DENABLE_XATTR=FALSE -DENABLE_ACL=FALSE -DENABLE_ICONV=FALSE -DENABLE_TEST=FALSE ../libarchive-3.3.2 \\\n && make \\\n && make install \\\n && cd / \\\n && rm -rf /tmp/*\n# ################################################# patchelf\nRUN mkdir /tmp/deps \\\n && cd /tmp/deps \\\n && wget http://nixos.org/releases/patchelf/patchelf-0.9/patchelf-0.9.tar.bz2 \\\n && tar xfa patchelf-0.9.tar.bz2 \\\n && cd patchelf-0.9 \\\n && ./configure \\\n && make \\\n && make install \\\n && cd / \\\n && rm -rf /tmp/*\n# ################################################# miniconda3\nARG PYTHON_VERSION_MAJOR\nARG PYTHON_VERSION_MINOR\nENV PYVERNAME=\"${PYTHON_VERSION_MAJOR}.${PYTHON_VERSION_MINOR}\"\nADD python/setup_requirements.txt /tmp/deps/\nADD python/requirements.txt /tmp/deps/\nADD python/test_requirements.txt /tmp/deps/\nRUN umask 0 \\\n && mkdir -p /tmp/deps \\\n && cd /tmp/deps \\\n && wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh \\\n && bash Miniconda3-latest-Linux-x86_64.sh -b -p /opt/miniconda3 \\\n && rm -rf Miniconda3-latest-Linux-x86_64.sh \\\n && . /opt/miniconda3/bin/activate \\\n && conda create -n nnabla-build python=${PYVERNAME} \\\n && conda activate nnabla-build \\\n && pip install --only-binary -U -r /tmp/deps/setup_requirements.txt \\\n && pip install --only-binary -U -r /tmp/deps/requirements.txt \\\n && pip install --only-binary -U -r /tmp/deps/test_requirements.txt \\\n && conda clean -y --all \\\n && cd / \\\n && rm -rf /tmp/*\nENV PATH=\"/opt/miniconda3/envs/nnabla-build/bin:$PATH\"\nENV LD_LIBRARY_PATH=\"/opt/miniconda3/envs/nnabla-build/lib:$LD_LIBRARY_PATH\"\n","injectedSmells":[],"originalDockerfileHash":"3c0387f2a3f8965c9fff2d1a4db1356a","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Copyright (c) 2017 Sony Corporation. All Rights Reserved.\n#\n#   Licensed under the Apache License, Version 2.0 (the \"License\");\n#   you may not use this file except in compliance with the License.\n#   You may obtain a copy of the License at\n#\n#       http://www.apache.org/licenses/LICENSE-2.0\n#\n#   Unless required by applicable law or agreed to in writing, software\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#   See the License for the specific language governing permissions and\n#   limitations under the License.\nFROM centos:6\nENV LC_ALL=\"C\"\nENV LANG=\"C\"\nENV LANGUAGE=\"C\"\nRUN yum install -y epel-release yum-utils \\\n && yum install -y curl hdf5 hdf5-devel redhat-lsb-core rpm-build unzip wget zip zlib-static \\\n && yum clean all\n#   ----------------------------------------------------------------------------\n#   TODO: More sustainable way of installing gcc 5.x.\n#   ----------------------------------------------------------------------------\n#   It seems like devtoolset-4 is no longer provided in SCL repository,\n#   but RPM packages for devtoolset-4 are still available in centos SCL\n#   repoitory. We directly install these packages and their dependencies\n#   from RPMs using yum command.\n#   Packages we want to install are as follows:\n#     devtoolset-4-gcc\n#     devtoolset-4-gcc-c++\n#     devtoolset-4-gcc-gfortran\n#     git19\n#   ----------------------------------------------------------------------------\n#   Installing devtoolset-4 directly from RPMs.\nRUN PKGS=\" devtoolset-4-runtime-4.1-3.el6.x86_64.rpm devtoolset-4-binutils-2.25.1-8.el6.x86_64.rpm devtoolset-4-gcc-5.3.1-6.1.el6.x86_64.rpm devtoolset-4-libstdc++-devel-5.3.1-6.1.el6.x86_64.rpm devtoolset-4-gcc-c++-5.3.1-6.1.el6.x86_64.rpm devtoolset-4-libquadmath-devel-5.3.1-6.1.el6.x86_64.rpm devtoolset-4-gcc-gfortran-5.3.1-6.1.el6.x86_64.rpm\" \\\n && for pkg in $PKGS; do yum install -y http://mirror.centos.org/centos/6/sclo/x86_64/rh/devtoolset-4/$pkg ; done \\\n && yum clean all\n#   Installing git19 directly from RPMs.\nRUN REPO_BASE=http://mirror.centos.org/centos/6/sclo/x86_64/rh/git19 \\\n && yum install -y $REPO_BASE/git19-runtime-1.2-4.el6.x86_64.rpm $REPO_BASE/git19-perl-Git-1.9.4-4.el6.1.noarch.rpm $REPO_BASE/git19-git-1.9.4-4.el6.1.x86_64.rpm \\\n && yum clean all\nENV PATH=\"/opt/rh/git19/root/usr/bin:/opt/rh/devtoolset-4/root/usr/bin:$PATH\"\nENV LD_LIBRARY_PATH=\"/opt/rh/gti19/root/usr/lib64:/opt/rh/devtoolset-4/root/usr/lib64:/opt/rh/devtoolset-4/root/usr/lib:$LD_LIBRARY_PATH\"\nENV PKG_CONFIG_PATH=\"/opt/rh/git19/root/usr/lib64/pkgconfig:${PKG_CONFIG_PATH}\"\n#  ################################################## cmake\nENV CMAKEVER=\"3.14.3\"\nRUN mkdir /tmp/deps \\\n && cd /tmp/deps \\\n && yum install -y cmake3 \\\n && curl -L https://github.com/Kitware/CMake/releases/download/v${CMAKEVER}/cmake-${CMAKEVER}.tar.gz -o cmake-${CMAKEVER}.tar.gz \\\n && tar xf cmake-${CMAKEVER}.tar.gz \\\n && cd cmake-${CMAKEVER} \\\n && mkdir build \\\n && cd build \\\n && cmake3 -DBUILD_TESTING=FALSE .. \\\n && make \\\n && make install \\\n && yum remove -y cmake3 \\\n && yum clean all \\\n && rm -rf /var/cache/yum/* \\\n && cd / \\\n && rm -rf /tmp/*\n#  ################################################# protobuf\nENV PROTOVER=\"3.4.1\"\nRUN mkdir /tmp/deps \\\n && cd /tmp/deps \\\n && curl -L https://github.com/google/protobuf/archive/v${PROTOVER}.tar.gz -o protobuf-v${PROTOVER}.tar.gz \\\n && tar xvf protobuf-v${PROTOVER}.tar.gz \\\n && cd protobuf-${PROTOVER} \\\n && mkdir build \\\n && cd build \\\n && cmake -DCMAKE_POSITION_INDEPENDENT_CODE=ON -Dprotobuf_BUILD_TESTS=OFF ../cmake \\\n && make \\\n && make install \\\n && cd / \\\n && rm -rf /tmp/*\n#  ################################################# libarchive\nRUN mkdir /tmp/deps \\\n && cd /tmp/deps \\\n && curl -L https://www.libarchive.org/downloads/libarchive-3.3.2.tar.gz -o libarchive-3.3.2.tar.gz \\\n && tar xfa libarchive-3.3.2.tar.gz \\\n && mkdir libarchive-build \\\n && cd libarchive-build \\\n && cmake -DCMAKE_POSITION_INDEPENDENT_CODE=ON -DENABLE_NETTLE=FALSE -DENABLE_OPENSSL=FALSE -DENABLE_LZO=FALSE -DENABLE_LZMA=FALSE -DENABLE_BZip2=FALSE -DENABLE_LIBXML2=FALSE -DENABLE_EXPAT=FALSE -DENABLE_PCREPOSIX=FALSE -DENABLE_LibGCC=FALSE -DENABLE_CNG=FALSE -DENABLE_TAR=FALSE -DENABLE_TAR_SHARED=FALSE -DENABLE_CPIO=FALSE -DENABLE_CPIO_SHARED=FALSE -DENABLE_CAT=FALSE -DENABLE_CAT_SHARED=FALSE -DENABLE_XATTR=FALSE -DENABLE_ACL=FALSE -DENABLE_ICONV=FALSE -DENABLE_TEST=FALSE ../libarchive-3.3.2 \\\n && make \\\n && make install \\\n && cd / \\\n && rm -rf /tmp/*\n#  ################################################# patchelf\nRUN mkdir /tmp/deps \\\n && cd /tmp/deps \\\n && wget http://nixos.org/releases/patchelf/patchelf-0.9/patchelf-0.9.tar.bz2 \\\n && tar xfa patchelf-0.9.tar.bz2 \\\n && cd patchelf-0.9 \\\n && ./configure \\\n && make \\\n && make install \\\n && cd / \\\n && rm -rf /tmp/*\n#  ################################################# miniconda3\nARG PYTHON_VERSION_MAJOR\nARG PYTHON_VERSION_MINOR\nENV PYVERNAME=\"${PYTHON_VERSION_MAJOR}.${PYTHON_VERSION_MINOR}\"\nADD python/setup_requirements.txt /tmp/deps/\nADD python/requirements.txt /tmp/deps/\nADD python/test_requirements.txt /tmp/deps/\nRUN umask 0 \\\n && mkdir -p /tmp/deps \\\n && cd /tmp/deps \\\n && wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh \\\n && bash Miniconda3-latest-Linux-x86_64.sh -b -p /opt/miniconda3 \\\n && rm -rf Miniconda3-latest-Linux-x86_64.sh \\\n && . /opt/miniconda3/bin/activate \\\n && conda create -n nnabla-build python=${PYVERNAME} \\\n && conda activate nnabla-build \\\n && pip install --only-binary -U -r /tmp/deps/setup_requirements.txt \\\n && pip install --only-binary -U -r /tmp/deps/requirements.txt \\\n && pip install --only-binary -U -r /tmp/deps/test_requirements.txt \\\n && conda clean -y --all \\\n && cd / \\\n && rm -rf /tmp/*\nENV PATH=\"/opt/miniconda3/envs/nnabla-build/bin:$PATH\"\nENV LD_LIBRARY_PATH=\"/opt/miniconda3/envs/nnabla-build/lib:$LD_LIBRARY_PATH\"\n","originalDockerfileUglifiedHash":"2bc5c577984e02be5a7dd66cea514fca","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/c29634edf84c5f015bc4d42dc191ef96ec0a75f1.dockerfile"}