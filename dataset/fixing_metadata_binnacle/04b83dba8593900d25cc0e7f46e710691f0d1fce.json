{"seed":3608341469,"processedDockerfileHash":"59ef5e23789485d2c278bf5b2ea49b69","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   adapted from github.com/bitwalker/alpine-elixir\n#   and github.com/bitwalker/alpine-erlang:latest\n#   2017-01-15 update to elixir 1.4.0\nFROM gliderlabs/alpine:3.4\nMAINTAINER Your Name <name@your-domain.com>\n#   Important!  Update this no-op ENV variable when this Dockerfile\n#   is updated with the current date. It will force refresh of all\n#   of the base images and things like `apt-get update` won't be using\n#   old cached versions when the Dockerfile is built.\nENV REFRESHED_AT=\"2017-01-15\" \\\n    LANG=\"en_US.UTF-8\" \\\n    HOME=\"/opt/app/\" \\\n    TERM=\"xterm\" \\\n    ERLANG_VER=\"19.1.6\" \\\n    ELIXIR_VER=\"1.4.0\"\nWORKDIR /tmp/erlang-build\n#   Install updates and build tools (we're going to reuse these so make them a layer of their own)\nRUN mkdir -p ${HOME} \\\n && adduser -s /bin/sh -u 1001 -G root -h ${HOME} -S -D default \\\n && chown -R 1001:0 ${HOME} \\\n && echo \"@edge http://nl.alpinelinux.org/alpine/edge/main\" >> /etc/apk/repositories \\\n && apk --no-cache --update upgrade \\\n && apk add ca-certificates openssl-dev ncurses-dev unixodbc-dev zlib-dev git autoconf build-base make perl-dev --no-cache \\\n && update-ca-certificates --fresh\n#   Install Erlang\nRUN git clone -b OTP-${ERLANG_VER} --single-branch --depth 1 https://github.com/erlang/otp.git . \\\n && export ERL_TOP=/tmp/erlang-build \\\n && export PATH=$ERL_TOP/bin:$PATH \\\n && export CPPFlAGS=\"-D_BSD_SOURCE $CPPFLAGS\" \\\n && ./otp_build autoconf \\\n && ./configure --prefix=/usr --sysconfdir=/etc --mandir=/usr/share/man --infodir=/usr/share/info --without-javac --without-wx --without-debugger --without-observer --without-jinterface --without-common_test --without-cosEvent --without-cosEventDomain --without-cosFileTransfer --without-cosNotification --without-cosProperty --without-cosTime --without-cosTransactions --without-dialyzer --without-et --without-gs --without-ic --without-megaco --without-orber --without-percept --without-typer --enable-threads --enable-shared-zlib --enable-ssl=dynamic-ssl-lib --enable-hipe \\\n && make -j4 \\\n && make install\n#   Move on to Elixir\nWORKDIR /tmp/elixir-build\nRUN git clone https://github.com/elixir-lang/elixir \\\n && cd elixir \\\n && git checkout v${ELIXIR_VER} \\\n && make \\\n && make install \\\n && mix local.hex --force \\\n && mix local.rebar --force\nWORKDIR ${HOME}\nCMD [\"/bin/sh\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  adapted from github.com/bitwalker/alpine-elixir\n#  and github.com/bitwalker/alpine-erlang:latest\n#  2017-01-15 update to elixir 1.4.0\nFROM gliderlabs/alpine:3.4\nMAINTAINER Your Name <name@your-domain.com>\n#  Important!  Update this no-op ENV variable when this Dockerfile\n#  is updated with the current date. It will force refresh of all\n#  of the base images and things like `apt-get update` won't be using\n#  old cached versions when the Dockerfile is built.\nENV REFRESHED_AT=\"2017-01-15\" \\\n    LANG=\"en_US.UTF-8\" \\\n    HOME=\"/opt/app/\" \\\n    TERM=\"xterm\" \\\n    ERLANG_VER=\"19.1.6\" \\\n    ELIXIR_VER=\"1.4.0\"\nWORKDIR /tmp/erlang-build\n#  Install updates and build tools (we're going to reuse these so make them a layer of their own)\nRUN mkdir -p ${HOME} \\\n && adduser -s /bin/sh -u 1001 -G root -h ${HOME} -S -D default \\\n && chown -R 1001:0 ${HOME} \\\n && echo \"@edge http://nl.alpinelinux.org/alpine/edge/main\" >> /etc/apk/repositories \\\n && apk --no-cache --update upgrade \\\n && apk add --no-cache ca-certificates openssl-dev ncurses-dev unixodbc-dev zlib-dev git autoconf build-base make perl-dev \\\n && update-ca-certificates --fresh\n#  Install Erlang\nRUN git clone -b OTP-${ERLANG_VER} --single-branch --depth 1 https://github.com/erlang/otp.git . \\\n && export ERL_TOP=/tmp/erlang-build \\\n && export PATH=$ERL_TOP/bin:$PATH \\\n && export CPPFlAGS=\"-D_BSD_SOURCE $CPPFLAGS\" \\\n && ./otp_build autoconf \\\n && ./configure --prefix=/usr --sysconfdir=/etc --mandir=/usr/share/man --infodir=/usr/share/info --without-javac --without-wx --without-debugger --without-observer --without-jinterface --without-common_test --without-cosEvent --without-cosEventDomain --without-cosFileTransfer --without-cosNotification --without-cosProperty --without-cosTime --without-cosTransactions --without-dialyzer --without-et --without-gs --without-ic --without-megaco --without-orber --without-percept --without-typer --enable-threads --enable-shared-zlib --enable-ssl=dynamic-ssl-lib --enable-hipe \\\n && make -j4 \\\n && make install\n#  Move on to Elixir\nWORKDIR /tmp/elixir-build\nRUN git clone https://github.com/elixir-lang/elixir \\\n && cd elixir \\\n && git checkout v${ELIXIR_VER} \\\n && make \\\n && make install \\\n && mix local.hex --force \\\n && mix local.rebar --force\nWORKDIR ${HOME}\nCMD [\"/bin/sh\"]\n","injectedSmells":[],"originalDockerfileHash":"841e7b55f3627e1fee25a487d712ebdd","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   adapted from github.com/bitwalker/alpine-elixir\n#   and github.com/bitwalker/alpine-erlang:latest\n#   2017-01-15 update to elixir 1.4.0\nFROM gliderlabs/alpine:3.4\nMAINTAINER Your Name <name@your-domain.com>\n#   Important!  Update this no-op ENV variable when this Dockerfile\n#   is updated with the current date. It will force refresh of all\n#   of the base images and things like `apt-get update` won't be using\n#   old cached versions when the Dockerfile is built.\nENV REFRESHED_AT=\"2017-01-15\" \\\n    LANG=\"en_US.UTF-8\" \\\n    HOME=\"/opt/app/\" \\\n    TERM=\"xterm\" \\\n    ERLANG_VER=\"19.1.6\" \\\n    ELIXIR_VER=\"1.4.0\"\nWORKDIR /tmp/erlang-build\n#   Install updates and build tools (we're going to reuse these so make them a layer of their own)\nRUN mkdir -p ${HOME} \\\n && adduser -s /bin/sh -u 1001 -G root -h ${HOME} -S -D default \\\n && chown -R 1001:0 ${HOME} \\\n && echo \"@edge http://nl.alpinelinux.org/alpine/edge/main\" >> /etc/apk/repositories \\\n && apk --no-cache --update upgrade \\\n && apk add --no-cache ca-certificates openssl-dev ncurses-dev unixodbc-dev zlib-dev git autoconf build-base make perl-dev \\\n && update-ca-certificates --fresh\n#   Install Erlang\nRUN git clone -b OTP-${ERLANG_VER} --single-branch --depth 1 https://github.com/erlang/otp.git . \\\n && export ERL_TOP=/tmp/erlang-build \\\n && export PATH=$ERL_TOP/bin:$PATH \\\n && export CPPFlAGS=\"-D_BSD_SOURCE $CPPFLAGS\" \\\n && ./otp_build autoconf \\\n && ./configure --prefix=/usr --sysconfdir=/etc --mandir=/usr/share/man --infodir=/usr/share/info --without-javac --without-wx --without-debugger --without-observer --without-jinterface --without-common_test --without-cosEvent --without-cosEventDomain --without-cosFileTransfer --without-cosNotification --without-cosProperty --without-cosTime --without-cosTransactions --without-dialyzer --without-et --without-gs --without-ic --without-megaco --without-orber --without-percept --without-typer --enable-threads --enable-shared-zlib --enable-ssl=dynamic-ssl-lib --enable-hipe \\\n && make -j4 \\\n && make install\n#   Move on to Elixir\nWORKDIR /tmp/elixir-build\nRUN git clone https://github.com/elixir-lang/elixir \\\n && cd elixir \\\n && git checkout v${ELIXIR_VER} \\\n && make \\\n && make install \\\n && mix local.hex --force \\\n && mix local.rebar --force\nWORKDIR ${HOME}\nCMD [\"/bin/sh\"]\n","originalDockerfileUglifiedHash":"2fb29a19e306d2d212338a07a9850c9b","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/04b83dba8593900d25cc0e7f46e710691f0d1fce.dockerfile"}