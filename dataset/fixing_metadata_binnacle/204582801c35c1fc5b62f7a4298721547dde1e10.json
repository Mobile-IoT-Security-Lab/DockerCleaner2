{"seed":1533487525,"processedDockerfileHash":"dbb676a9cace14ab7a31983b6bdf84b0","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["have-a-healthcheck"],"processedDockerfile":"FROM laristra/flecsi-third-party:fedora\nARG MPI\nARG COVERAGE\nARG SONARQUBE\nARG SONARQUBE_TOKEN\nARG SONARQUBE_GITHUB_TOKEN\nARG CC\nARG CXX\nARG CXXFLAGS\n#  for coverage\nARG CI\nARG TRAVIS\nARG TRAVIS_BRANCH\nARG TRAVIS_JOB_NUMBER\nARG TRAVIS_PULL_REQUEST\nARG TRAVIS_JOB_ID\nARG TRAVIS_TAG\nARG TRAVIS_REPO_SLUG\nARG TRAVIS_COMMIT\nARG TRAVIS_OS_NAME\nRUN git clone --recursive https://github.com/laristra/flecsph.git\nRUN rm -rf /home/flecsi/.ccache\nUSER root\nRUN chown -R flecsi:flecsi /home/flecsi/flecsph\nRUN yum install -y which ; exit 0\nUSER flecsi\n#  rebuild flecsi-third-party\nWORKDIR /home/flecsi/tpl\nRUN git config remote.origin.fetch \"+refs/heads/*:refs/remotes/origin/*\"\nRUN git fetch origin FleCSPH\nRUN git checkout FleCSPH\nRUN git submodule update --recursive\nRUN rm -rf build \\\n && mkdir build\nWORKDIR /home/flecsi/tpl/build\nRUN cmake ..\nUSER root\nRUN rm -rf /usr/local/include/legion* /usr/local/include/realm*\nRUN make VERBOSE=1 -j2\nUSER flecsi\n#  build flecsi\nWORKDIR /home/flecsi\nRUN git clone -b stable/flecsph-compatible --depth 1 --recursive https://github.com/laristra/flecsi flecsi\nRUN cd flecsi \\\n && mkdir build \\\n && cd build\nWORKDIR flecsi/build\nRUN cmake .. -DFLECSI_RUNTIME_MODEL=legion -DENABLE_LEGION=ON -DENABLE_CLOG=OFF -DENABLE_MPI=ON -DENABLE_OPENMP=ON -DENABLE_MPI_CXX_BINDINGS=ON\nRUN make VERBOSE=1 -j2\nUSER root\nRUN make install\nUSER flecsi\n#   build H5hut\nWORKDIR /home/flecsi\nENV H5Hut=\"H5hut-1.99.13\"\nRUN wget --no-check-certificate https://amas.psi.ch/H5hut/raw-attachment/wiki/DownloadSources/${H5Hut}.tar.gz\nRUN tar -xzf ${H5Hut}.tar.gz\nRUN wget -O- https://raw.githubusercontent.com/gentoo/gentoo/e8827415e767b1252f3851edef8e000980b7f2a1/sci-libs/h5hut/files/h5hut-1.99.13-autotools.patch | patch -p0\nWORKDIR ${H5Hut}\nRUN sed -i 's/H5Pset_fapl_mpiposix (fapl_id, comm, use_gpfs)/H5Pset_fapl_mpio (fapl_id, comm, \\&use_gpfs)/g' src/h5core/h5_hdf5_private.h\nRUN autoreconf -i -f\n#  ubuntu needs CC=h5pcc amd HDF5_USE_SHLIB=yes is needed for shared lib\nRUN ./configure --disable-static --enable-shared --enable-parallel --prefix=/usr/local CC=h5pcc \\\n && HDF5_USE_SHLIB=yes make\nUSER root\nRUN make install\nUSER flecsi\nRUN ldd /usr/local/lib/libH5hut.so\nWORKDIR /home/flecsi/flecsph\nRUN mkdir build\nWORKDIR build\nRUN ccache -z\nRUN cmake -DENABLE_MPI=ON -DENABLE_UNIT_TESTS=ON -DENABLE_OPENMP=ON -DENABLE_LEGION=ON -DENABLE_DOXYGEN=ON -DENABLE_COVERAGE_BUILD=ON -DCMAKE_CXX_FLAGS=\"-fpermissive\" ..\nRUN HDF5_USE_SHLIB=yes make VERBOSE=1 -j2\nRUN ccache -s\nRUN make doxygen\nRUN make install DESTDIR=${PWD}/install \\\n && rm -rf ${PWD}/install\nRUN make test ARGS=\"-V\" || true\nRUN cd .. \\\n && $HOME/.local/bin/codecov -F \"${CC}\"\nUSER root\nRUN make install\nUSER flecsi\nWORKDIR /home/flecsi\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM laristra/flecsi-third-party:fedora\nARG MPI\nARG COVERAGE\nARG SONARQUBE\nARG SONARQUBE_TOKEN\nARG SONARQUBE_GITHUB_TOKEN\nARG CC\nARG CXX\nARG CXXFLAGS\n# for coverage\nARG CI\nARG TRAVIS\nARG TRAVIS_BRANCH\nARG TRAVIS_JOB_NUMBER\nARG TRAVIS_PULL_REQUEST\nARG TRAVIS_JOB_ID\nARG TRAVIS_TAG\nARG TRAVIS_REPO_SLUG\nARG TRAVIS_COMMIT\nARG TRAVIS_OS_NAME\nRUN git clone --recursive https://github.com/laristra/flecsph.git\nRUN rm -rf /home/flecsi/.ccache\nUSER root\nRUN chown -R flecsi:flecsi /home/flecsi/flecsph\nRUN yum install -y which ; exit 0\nUSER flecsi\n# rebuild flecsi-third-party\nWORKDIR /home/flecsi/tpl\nRUN git config remote.origin.fetch \"+refs/heads/*:refs/remotes/origin/*\"\nRUN git fetch origin FleCSPH\nRUN git checkout FleCSPH\nRUN git submodule update --recursive\nRUN rm -rf build \\\n && mkdir build\nWORKDIR /home/flecsi/tpl/build\nRUN cmake ..\nUSER root\nRUN rm -rf /usr/local/include/legion* /usr/local/include/realm*\nRUN make VERBOSE=1 -j2\nUSER flecsi\n# build flecsi\nWORKDIR /home/flecsi\nRUN git clone -b stable/flecsph-compatible --depth 1 --recursive https://github.com/laristra/flecsi flecsi\nRUN cd flecsi \\\n && mkdir build \\\n && cd build\nWORKDIR flecsi/build\nRUN cmake .. -DFLECSI_RUNTIME_MODEL=legion -DENABLE_LEGION=ON -DENABLE_CLOG=OFF -DENABLE_MPI=ON -DENABLE_OPENMP=ON -DENABLE_MPI_CXX_BINDINGS=ON\nRUN make VERBOSE=1 -j2\nUSER root\nRUN make install\nUSER flecsi\n#  build H5hut\nWORKDIR /home/flecsi\nENV H5Hut=\"H5hut-1.99.13\"\nRUN wget --no-check-certificate https://amas.psi.ch/H5hut/raw-attachment/wiki/DownloadSources/${H5Hut}.tar.gz\nRUN tar -xzf ${H5Hut}.tar.gz\nRUN wget -O- https://raw.githubusercontent.com/gentoo/gentoo/e8827415e767b1252f3851edef8e000980b7f2a1/sci-libs/h5hut/files/h5hut-1.99.13-autotools.patch | patch -p0\nWORKDIR ${H5Hut}\nRUN sed -i 's/H5Pset_fapl_mpiposix (fapl_id, comm, use_gpfs)/H5Pset_fapl_mpio (fapl_id, comm, \\&use_gpfs)/g' src/h5core/h5_hdf5_private.h\nRUN autoreconf -i -f\n# ubuntu needs CC=h5pcc amd HDF5_USE_SHLIB=yes is needed for shared lib\nRUN ./configure --disable-static --enable-shared --enable-parallel --prefix=/usr/local CC=h5pcc \\\n && HDF5_USE_SHLIB=yes make\nUSER root\nRUN make install\nUSER flecsi\nRUN ldd /usr/local/lib/libH5hut.so\nWORKDIR /home/flecsi/flecsph\nRUN mkdir build\nWORKDIR build\nRUN ccache -z\nRUN cmake -DENABLE_MPI=ON -DENABLE_UNIT_TESTS=ON -DENABLE_OPENMP=ON -DENABLE_LEGION=ON -DENABLE_DOXYGEN=ON -DENABLE_COVERAGE_BUILD=ON -DCMAKE_CXX_FLAGS=\"-fpermissive\" ..\nRUN HDF5_USE_SHLIB=yes make VERBOSE=1 -j2\nRUN ccache -s\nRUN make doxygen\nRUN make install DESTDIR=${PWD}/install \\\n && rm -rf ${PWD}/install\nRUN make test ARGS=\"-V\" || true\nRUN cd .. \\\n && $HOME/.local/bin/codecov -F \"${CC}\"\nUSER root\nRUN make install\nUSER flecsi\nWORKDIR /home/flecsi\n","injectedSmells":[],"originalDockerfileHash":"b20df37633012615b5ee40db5b6729a5","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM laristra/flecsi-third-party:fedora\nARG MPI\nARG COVERAGE\nARG SONARQUBE\nARG SONARQUBE_TOKEN\nARG SONARQUBE_GITHUB_TOKEN\nARG CC\nARG CXX\nARG CXXFLAGS\n#  for coverage\nARG CI\nARG TRAVIS\nARG TRAVIS_BRANCH\nARG TRAVIS_JOB_NUMBER\nARG TRAVIS_PULL_REQUEST\nARG TRAVIS_JOB_ID\nARG TRAVIS_TAG\nARG TRAVIS_REPO_SLUG\nARG TRAVIS_COMMIT\nARG TRAVIS_OS_NAME\nRUN git clone --recursive https://github.com/laristra/flecsph.git\nRUN rm -rf /home/flecsi/.ccache\nUSER root\nRUN chown -R flecsi:flecsi /home/flecsi/flecsph\nRUN yum install -y which ; exit 0\nUSER flecsi\n#  rebuild flecsi-third-party\nWORKDIR /home/flecsi/tpl\nRUN git config remote.origin.fetch \"+refs/heads/*:refs/remotes/origin/*\"\nRUN git fetch origin FleCSPH\nRUN git checkout FleCSPH\nRUN git submodule update --recursive\nRUN rm -rf build \\\n && mkdir build\nWORKDIR /home/flecsi/tpl/build\nRUN cmake ..\nUSER root\nRUN rm -rf /usr/local/include/legion* /usr/local/include/realm*\nRUN make VERBOSE=1 -j2\nUSER flecsi\n#  build flecsi\nWORKDIR /home/flecsi\nRUN git clone -b stable/flecsph-compatible --depth 1 --recursive https://github.com/laristra/flecsi flecsi\nRUN cd flecsi \\\n && mkdir build \\\n && cd build\nWORKDIR flecsi/build\nRUN cmake .. -DFLECSI_RUNTIME_MODEL=legion -DENABLE_LEGION=ON -DENABLE_CLOG=OFF -DENABLE_MPI=ON -DENABLE_OPENMP=ON -DENABLE_MPI_CXX_BINDINGS=ON\nRUN make VERBOSE=1 -j2\nUSER root\nRUN make install\nUSER flecsi\n#   build H5hut\nWORKDIR /home/flecsi\nENV H5Hut=\"H5hut-1.99.13\"\nRUN wget --no-check-certificate https://amas.psi.ch/H5hut/raw-attachment/wiki/DownloadSources/${H5Hut}.tar.gz\nRUN tar -xzf ${H5Hut}.tar.gz\nRUN wget -O- https://raw.githubusercontent.com/gentoo/gentoo/e8827415e767b1252f3851edef8e000980b7f2a1/sci-libs/h5hut/files/h5hut-1.99.13-autotools.patch | patch -p0\nWORKDIR ${H5Hut}\nRUN sed -i 's/H5Pset_fapl_mpiposix (fapl_id, comm, use_gpfs)/H5Pset_fapl_mpio (fapl_id, comm, \\&use_gpfs)/g' src/h5core/h5_hdf5_private.h\nRUN autoreconf -i -f\n#  ubuntu needs CC=h5pcc amd HDF5_USE_SHLIB=yes is needed for shared lib\nRUN ./configure --disable-static --enable-shared --enable-parallel --prefix=/usr/local CC=h5pcc \\\n && HDF5_USE_SHLIB=yes make\nUSER root\nRUN make install\nUSER flecsi\nRUN ldd /usr/local/lib/libH5hut.so\nWORKDIR /home/flecsi/flecsph\nRUN mkdir build\nWORKDIR build\nRUN ccache -z\nRUN cmake -DENABLE_MPI=ON -DENABLE_UNIT_TESTS=ON -DENABLE_OPENMP=ON -DENABLE_LEGION=ON -DENABLE_DOXYGEN=ON -DENABLE_COVERAGE_BUILD=ON -DCMAKE_CXX_FLAGS=\"-fpermissive\" ..\nRUN HDF5_USE_SHLIB=yes make VERBOSE=1 -j2\nRUN ccache -s\nRUN make doxygen\nRUN make install DESTDIR=${PWD}/install \\\n && rm -rf ${PWD}/install\nRUN make test ARGS=\"-V\" || true\nRUN cd .. \\\n && $HOME/.local/bin/codecov -F \"${CC}\"\nUSER root\nRUN make install\nUSER flecsi\nWORKDIR /home/flecsi\n","originalDockerfileUglifiedHash":"eec63f99a7d6884b01e98cc3e4b9fb0f","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/204582801c35c1fc5b62f7a4298721547dde1e10.dockerfile"}