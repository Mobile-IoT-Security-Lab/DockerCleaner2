{"seed":2785329093,"processedDockerfileHash":"7223ec7bdb76533045a3636a933347d1","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   noVNC + TurboVNC + VirtualGL\n#   Useful links for the software we are using:\n#   http://novnc.com\n#   https://turbovnc.org\n#   https://virtualgl.org\nFROM nvidia/opengl:1.0-glvnd-runtime\nARG SOURCEFORGE=https://sourceforge.net/projects\nARG TURBOVNC_VERSION=2.1.2\nARG VIRTUALGL_VERSION=2.5.2\nARG LIBJPEG_VERSION=1.5.2\nARG WEBSOCKIFY_VERSION=0.8.0\nARG NOVNC_VERSION=1.0.0\nRUN : \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends ca-certificates curl wget emacs vim less sudo lsof net-tools git htop gedit gedit-plugins unzip zip psmisc xz-utils libglib2.0-0 libxext6 libsm6 libxrender1 libpython-dev libsuitesparse-dev libeigen3-dev libsdl1.2-dev doxygen graphviz libignition-math2-dev gcc libc6-dev libglu1 libglu1:i386 libxv1 libxv1:i386 lubuntu-desktop xvfb xterm terminator zenity mesa-utils make cmake python python-numpy x11-xkb-utils xauth xfonts-base xkb-data \\\n && rm -rf /var/lib/apt/lists/*\nRUN cd /tmp \\\n && curl -fsSL -O ${SOURCEFORGE}/turbovnc/files/${TURBOVNC_VERSION}/turbovnc_${TURBOVNC_VERSION}_amd64.deb -O ${SOURCEFORGE}/libjpeg-turbo/files/${LIBJPEG_VERSION}/libjpeg-turbo-official_${LIBJPEG_VERSION}_amd64.deb -O ${SOURCEFORGE}/virtualgl/files/${VIRTUALGL_VERSION}/virtualgl_${VIRTUALGL_VERSION}_amd64.deb -O ${SOURCEFORGE}/virtualgl/files/${VIRTUALGL_VERSION}/virtualgl32_${VIRTUALGL_VERSION}_amd64.deb \\\n && dpkg -i *.deb \\\n && rm -f /tmp/*.deb \\\n && sed -i 's/$host:/unix:/g' /opt/TurboVNC/bin/vncserver\n#   Install miniconda\nRUN cd /tmp \\\n && curl -fsSL -O https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh \\\n && chmod u+x Miniconda3-latest-Linux-x86_64.sh \\\n && ./Miniconda3-latest-Linux-x86_64.sh -b\nENV PATH=\"${PATH}:/opt/VirtualGL/bin:/opt/TurboVNC/bin\"\nRUN curl -fsSL https://github.com/novnc/noVNC/archive/v${NOVNC_VERSION}.tar.gz | tar -xzf - -C /opt \\\n && curl -fsSL https://github.com/novnc/websockify/archive/v${WEBSOCKIFY_VERSION}.tar.gz | tar -xzf - -C /opt \\\n && mv /opt/noVNC-${NOVNC_VERSION} /opt/noVNC \\\n && chmod -R a+w /opt/noVNC \\\n && mv /opt/websockify-${WEBSOCKIFY_VERSION} /opt/websockify \\\n && cd /opt/websockify \\\n && make \\\n && cd /opt/noVNC/utils \\\n && ln -s /opt/websockify\nCOPY xorg.conf /etc/X11/xorg.conf\nCOPY index.html /opt/noVNC/index.html\n#   Defeat screen locking and power management\nRUN mv /etc/xdg/autostart/light-locker.desktop /etc/xdg/autostart/light-locker.desktop_bak\nRUN mv /etc/xdg/autostart/xfce4-power-manager.desktop /etc/xdg/autostart/xfce4-power-manager.desktop_bak\n#   Expose whatever port NoVNC will serve from. In our case it will be 40001, see ./start_desktop.sh\nEXPOSE 40001/tcp\nENV DISPLAY=\":1\"\n#   Install desktop file for this user\nRUN mkdir -p /root/Desktop\nCOPY ./firefox.desktop_applications /usr/share/applications/firefox.desktop\nCOPY ./terminator.desktop /root/Desktop\nRUN mkdir -p /root/.config/terminator\nCOPY ./terminator_config /root/.config/terminator/config\nCOPY ./firefox.desktop /root/Desktop\nCOPY ./galculator.desktop /root/Desktop\nCOPY ./htop.desktop /root/Desktop\nCOPY ./self.pem /root/self.pem\n#   Precede bash on all new terminator shells with vglrun so that 3d graphics apps will use the GPU\nRUN perl -pi -e 's/^Exec=terminator$/Exec=terminator -e \"vglrun bash\"/g' /usr/share/applications/terminator.desktop\n#   Install udacity desktop background (YMMV)\nCOPY ./background.png /usr/share/lubuntu/wallpapers/1604-lubuntu-default-wallpaper.png\nRUN mkdir -p /root/.vnc\nCOPY ./xstartup.turbovnc /root/.vnc/xstartup.turbovnc\nRUN chmod a+x /root/.vnc/xstartup.turbovnc\n#   Install ROS\nRUN echo \"deb http://packages.ros.org/ros/ubuntu $( lsb_release -sc ;) main\" > /etc/apt/sources.list.d/ros-latest.list \\\n && apt-key adv --keyserver hkp://ha.pool.sks-keyservers.net:80 --recv-key 421C365BD9FF1F717815A3895523BAEEB01FA116 \\\n && apt-get update -y \\\n && (apt-get update ;apt-get install --no-install-recommends ros-kinetic-desktop-full -y ) \\\n && (apt-get update ;apt-get install --no-install-recommends ros-kinetic-navigation -y ) \\\n && (apt-get update ;apt-get install --no-install-recommends ros-kinetic-roscpp -y ) \\\n && (apt-get update ;apt-get install --no-install-recommends ros-kinetic-joy -y ) \\\n && (apt-get update ;apt-get install --no-install-recommends ros-kinetic-kobuki-safety-controller -y ) \\\n && (apt-get update ;apt-get install --no-install-recommends ros-kinetic-yocs-velocity-smoother -y ) \\\n && (apt-get update ;apt-get install --no-install-recommends ros-kinetic-turtlebot-bringup -y ) \\\n && (apt-get update ;apt-get install --no-install-recommends ros-kinetic-geometry-msgs -y ) \\\n && (apt-get update ;apt-get install --no-install-recommends ros-kinetic-yocs-cmd-vel-mux -y ) \\\n && (apt-get update ;apt-get install --no-install-recommends ros-kinetic-diagnostic-aggregator -y ) \\\n && (apt-get update ;apt-get install --no-install-recommends ros-kinetic-depthimage-to-laserscan -y ) \\\n && (apt-get update ;apt-get install --no-install-recommends ros-kinetic-gazebo-ros -y ) \\\n && (apt-get update ;apt-get install --no-install-recommends ros-kinetic-kobuki-gazebo-plugins -y ) \\\n && (apt-get update ;apt-get install --no-install-recommends ros-kinetic-robot-pose-ekf -y ) \\\n && (apt-get update ;apt-get install --no-install-recommends ros-kinetic-robot-state-publisher -y ) \\\n && (apt-get update ;apt-get install --no-install-recommends ros-kinetic-turtlebot-description -y ) \\\n && (apt-get update ;apt-get install --no-install-recommends ros-kinetic-turtlebot-navigation -y ) \\\n && (apt-get update ;apt-get install --no-install-recommends ros-kinetic-xacro -y ) \\\n && rosdep init \\\n && rosdep update \\\n && echo \"source /opt/ros/kinetic/setup.bash\" >> /root/.bashrc\n#   Upgrade gazebo to gazebo v7\nRUN sh -c 'echo \"deb http://packages.osrfoundation.org/gazebo/ubuntu-stable `lsb_release -cs` main\" > /etc/apt/sources.list.d/gazebo-stable.list'\nRUN wget http://packages.osrfoundation.org/gazebo.key -O - | apt-key add -\nRUN apt-get update -y \\\n && (apt-get update ;apt-get install --no-install-recommends gazebo7 -y )\n#   Add miniconda to root's PATH\nRUN echo \"export PATH=/root/miniconda3:$PATH\" >> /root/.bashrc\n#   Create some useful default aliases\nRUN printf \"%s\\n\" \"alias cp=\\\"cp -i\\\"\" \"alias mv=\\\"mv -i\\\"\" \"alias rm=\\\"rm -i\\\"\" >> /root/.bash_aliases\nCOPY start_desktop.sh /usr/local/bin/start_desktop.sh\nCMD /usr/local/bin/start_desktop.sh\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  noVNC + TurboVNC + VirtualGL\n#  Useful links for the software we are using:\n#  http://novnc.com\n#  https://turbovnc.org\n#  https://virtualgl.org\nFROM nvidia/opengl:1.0-glvnd-runtime\nARG SOURCEFORGE=https://sourceforge.net/projects\nARG TURBOVNC_VERSION=2.1.2\nARG VIRTUALGL_VERSION=2.5.2\nARG LIBJPEG_VERSION=1.5.2\nARG WEBSOCKIFY_VERSION=0.8.0\nARG NOVNC_VERSION=1.0.0\nRUN apt-get update \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends ca-certificates curl wget emacs vim less sudo lsof net-tools git htop gedit gedit-plugins unzip zip psmisc xz-utils libglib2.0-0 libxext6 libsm6 libxrender1 libpython-dev libsuitesparse-dev libeigen3-dev libsdl1.2-dev doxygen graphviz libignition-math2-dev gcc libc6-dev libglu1 libglu1:i386 libxv1 libxv1:i386 lubuntu-desktop xvfb xterm terminator zenity mesa-utils make cmake python python-numpy x11-xkb-utils xauth xfonts-base xkb-data \\\n && rm -rf /var/lib/apt/lists/*\nRUN cd /tmp \\\n && curl -fsSL -O ${SOURCEFORGE}/turbovnc/files/${TURBOVNC_VERSION}/turbovnc_${TURBOVNC_VERSION}_amd64.deb -O ${SOURCEFORGE}/libjpeg-turbo/files/${LIBJPEG_VERSION}/libjpeg-turbo-official_${LIBJPEG_VERSION}_amd64.deb -O ${SOURCEFORGE}/virtualgl/files/${VIRTUALGL_VERSION}/virtualgl_${VIRTUALGL_VERSION}_amd64.deb -O ${SOURCEFORGE}/virtualgl/files/${VIRTUALGL_VERSION}/virtualgl32_${VIRTUALGL_VERSION}_amd64.deb \\\n && dpkg -i *.deb \\\n && rm -f /tmp/*.deb \\\n && sed -i 's/$host:/unix:/g' /opt/TurboVNC/bin/vncserver\n#  Install miniconda\nRUN cd /tmp \\\n && curl -fsSL -O https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh \\\n && chmod u+x Miniconda3-latest-Linux-x86_64.sh \\\n && ./Miniconda3-latest-Linux-x86_64.sh -b\nENV PATH=\"${PATH}:/opt/VirtualGL/bin:/opt/TurboVNC/bin\"\nRUN curl -fsSL https://github.com/novnc/noVNC/archive/v${NOVNC_VERSION}.tar.gz | tar -xzf - -C /opt \\\n && curl -fsSL https://github.com/novnc/websockify/archive/v${WEBSOCKIFY_VERSION}.tar.gz | tar -xzf - -C /opt \\\n && mv /opt/noVNC-${NOVNC_VERSION} /opt/noVNC \\\n && chmod -R a+w /opt/noVNC \\\n && mv /opt/websockify-${WEBSOCKIFY_VERSION} /opt/websockify \\\n && cd /opt/websockify \\\n && make \\\n && cd /opt/noVNC/utils \\\n && ln -s /opt/websockify\nCOPY xorg.conf /etc/X11/xorg.conf\nCOPY index.html /opt/noVNC/index.html\n#  Defeat screen locking and power management\nRUN mv /etc/xdg/autostart/light-locker.desktop /etc/xdg/autostart/light-locker.desktop_bak\nRUN mv /etc/xdg/autostart/xfce4-power-manager.desktop /etc/xdg/autostart/xfce4-power-manager.desktop_bak\n#  Expose whatever port NoVNC will serve from. In our case it will be 40001, see ./start_desktop.sh\nEXPOSE 40001/tcp\nENV DISPLAY=\":1\"\n#  Install desktop file for this user\nRUN mkdir -p /root/Desktop\nCOPY ./firefox.desktop_applications /usr/share/applications/firefox.desktop\nCOPY ./terminator.desktop /root/Desktop\nRUN mkdir -p /root/.config/terminator\nCOPY ./terminator_config /root/.config/terminator/config\nCOPY ./firefox.desktop /root/Desktop\nCOPY ./galculator.desktop /root/Desktop\nCOPY ./htop.desktop /root/Desktop\nCOPY ./self.pem /root/self.pem\n#  Precede bash on all new terminator shells with vglrun so that 3d graphics apps will use the GPU\nRUN perl -pi -e 's/^Exec=terminator$/Exec=terminator -e \"vglrun bash\"/g' /usr/share/applications/terminator.desktop\n#  Install udacity desktop background (YMMV)\nCOPY ./background.png /usr/share/lubuntu/wallpapers/1604-lubuntu-default-wallpaper.png\nRUN mkdir -p /root/.vnc\nCOPY ./xstartup.turbovnc /root/.vnc/xstartup.turbovnc\nRUN chmod a+x /root/.vnc/xstartup.turbovnc\n#  Install ROS\nRUN echo \"deb http://packages.ros.org/ros/ubuntu $( lsb_release -sc ;) main\" > /etc/apt/sources.list.d/ros-latest.list \\\n && apt-key adv --keyserver hkp://ha.pool.sks-keyservers.net:80 --recv-key 421C365BD9FF1F717815A3895523BAEEB01FA116 \\\n && apt-get update -y \\\n && apt-get install ros-kinetic-desktop-full -y \\\n && apt-get install ros-kinetic-navigation -y \\\n && apt-get install ros-kinetic-roscpp -y \\\n && apt-get install ros-kinetic-joy -y \\\n && apt-get install ros-kinetic-kobuki-safety-controller -y \\\n && apt-get install ros-kinetic-yocs-velocity-smoother -y \\\n && apt-get install ros-kinetic-turtlebot-bringup -y \\\n && apt-get install ros-kinetic-geometry-msgs -y \\\n && apt-get install ros-kinetic-yocs-cmd-vel-mux -y \\\n && apt-get install ros-kinetic-diagnostic-aggregator -y \\\n && apt-get install ros-kinetic-depthimage-to-laserscan -y \\\n && apt-get install ros-kinetic-gazebo-ros -y \\\n && apt-get install ros-kinetic-kobuki-gazebo-plugins -y \\\n && apt-get install ros-kinetic-robot-pose-ekf -y \\\n && apt-get install ros-kinetic-robot-state-publisher -y \\\n && apt-get install ros-kinetic-turtlebot-description -y \\\n && apt-get install ros-kinetic-turtlebot-navigation -y \\\n && apt-get install ros-kinetic-xacro -y \\\n && rosdep init \\\n && rosdep update \\\n && echo \"source /opt/ros/kinetic/setup.bash\" >> /root/.bashrc\n#  Upgrade gazebo to gazebo v7\nRUN sh -c 'echo \"deb http://packages.osrfoundation.org/gazebo/ubuntu-stable `lsb_release -cs` main\" > /etc/apt/sources.list.d/gazebo-stable.list'\nRUN wget http://packages.osrfoundation.org/gazebo.key -O - | apt-key add -\nRUN apt-get update -y \\\n && apt-get install gazebo7 -y\n#  Add miniconda to root's PATH\nRUN echo \"export PATH=/root/miniconda3:$PATH\" >> /root/.bashrc\n#  Create some useful default aliases\nRUN printf \"%s\\n\" \"alias cp=\\\"cp -i\\\"\" \"alias mv=\\\"mv -i\\\"\" \"alias rm=\\\"rm -i\\\"\" >> /root/.bash_aliases\nCOPY start_desktop.sh /usr/local/bin/start_desktop.sh\nCMD /usr/local/bin/start_desktop.sh\n","injectedSmells":[],"originalDockerfileHash":"0563306d559daae5715e8b0da604bfc5","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   noVNC + TurboVNC + VirtualGL\n#   Useful links for the software we are using:\n#   http://novnc.com\n#   https://turbovnc.org\n#   https://virtualgl.org\nFROM nvidia/opengl:1.0-glvnd-runtime\nARG SOURCEFORGE=https://sourceforge.net/projects\nARG TURBOVNC_VERSION=2.1.2\nARG VIRTUALGL_VERSION=2.5.2\nARG LIBJPEG_VERSION=1.5.2\nARG WEBSOCKIFY_VERSION=0.8.0\nARG NOVNC_VERSION=1.0.0\nRUN apt-get update \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends ca-certificates curl wget emacs vim less sudo lsof net-tools git htop gedit gedit-plugins unzip zip psmisc xz-utils libglib2.0-0 libxext6 libsm6 libxrender1 libpython-dev libsuitesparse-dev libeigen3-dev libsdl1.2-dev doxygen graphviz libignition-math2-dev gcc libc6-dev libglu1 libglu1:i386 libxv1 libxv1:i386 lubuntu-desktop xvfb xterm terminator zenity mesa-utils make cmake python python-numpy x11-xkb-utils xauth xfonts-base xkb-data \\\n && rm -rf /var/lib/apt/lists/*\nRUN cd /tmp \\\n && curl -fsSL -O ${SOURCEFORGE}/turbovnc/files/${TURBOVNC_VERSION}/turbovnc_${TURBOVNC_VERSION}_amd64.deb -O ${SOURCEFORGE}/libjpeg-turbo/files/${LIBJPEG_VERSION}/libjpeg-turbo-official_${LIBJPEG_VERSION}_amd64.deb -O ${SOURCEFORGE}/virtualgl/files/${VIRTUALGL_VERSION}/virtualgl_${VIRTUALGL_VERSION}_amd64.deb -O ${SOURCEFORGE}/virtualgl/files/${VIRTUALGL_VERSION}/virtualgl32_${VIRTUALGL_VERSION}_amd64.deb \\\n && dpkg -i *.deb \\\n && rm -f /tmp/*.deb \\\n && sed -i 's/$host:/unix:/g' /opt/TurboVNC/bin/vncserver\n#   Install miniconda\nRUN cd /tmp \\\n && curl -fsSL -O https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh \\\n && chmod u+x Miniconda3-latest-Linux-x86_64.sh \\\n && ./Miniconda3-latest-Linux-x86_64.sh -b\nENV PATH=\"${PATH}:/opt/VirtualGL/bin:/opt/TurboVNC/bin\"\nRUN curl -fsSL https://github.com/novnc/noVNC/archive/v${NOVNC_VERSION}.tar.gz | tar -xzf - -C /opt \\\n && curl -fsSL https://github.com/novnc/websockify/archive/v${WEBSOCKIFY_VERSION}.tar.gz | tar -xzf - -C /opt \\\n && mv /opt/noVNC-${NOVNC_VERSION} /opt/noVNC \\\n && chmod -R a+w /opt/noVNC \\\n && mv /opt/websockify-${WEBSOCKIFY_VERSION} /opt/websockify \\\n && cd /opt/websockify \\\n && make \\\n && cd /opt/noVNC/utils \\\n && ln -s /opt/websockify\nCOPY xorg.conf /etc/X11/xorg.conf\nCOPY index.html /opt/noVNC/index.html\n#   Defeat screen locking and power management\nRUN mv /etc/xdg/autostart/light-locker.desktop /etc/xdg/autostart/light-locker.desktop_bak\nRUN mv /etc/xdg/autostart/xfce4-power-manager.desktop /etc/xdg/autostart/xfce4-power-manager.desktop_bak\n#   Expose whatever port NoVNC will serve from. In our case it will be 40001, see ./start_desktop.sh\nEXPOSE 40001/tcp\nENV DISPLAY=\":1\"\n#   Install desktop file for this user\nRUN mkdir -p /root/Desktop\nCOPY ./firefox.desktop_applications /usr/share/applications/firefox.desktop\nCOPY ./terminator.desktop /root/Desktop\nRUN mkdir -p /root/.config/terminator\nCOPY ./terminator_config /root/.config/terminator/config\nCOPY ./firefox.desktop /root/Desktop\nCOPY ./galculator.desktop /root/Desktop\nCOPY ./htop.desktop /root/Desktop\nCOPY ./self.pem /root/self.pem\n#   Precede bash on all new terminator shells with vglrun so that 3d graphics apps will use the GPU\nRUN perl -pi -e 's/^Exec=terminator$/Exec=terminator -e \"vglrun bash\"/g' /usr/share/applications/terminator.desktop\n#   Install udacity desktop background (YMMV)\nCOPY ./background.png /usr/share/lubuntu/wallpapers/1604-lubuntu-default-wallpaper.png\nRUN mkdir -p /root/.vnc\nCOPY ./xstartup.turbovnc /root/.vnc/xstartup.turbovnc\nRUN chmod a+x /root/.vnc/xstartup.turbovnc\n#   Install ROS\nRUN echo \"deb http://packages.ros.org/ros/ubuntu $( lsb_release -sc ;) main\" > /etc/apt/sources.list.d/ros-latest.list \\\n && apt-key adv --keyserver hkp://ha.pool.sks-keyservers.net:80 --recv-key 421C365BD9FF1F717815A3895523BAEEB01FA116 \\\n && apt-get update -y \\\n && apt-get install ros-kinetic-desktop-full -y \\\n && apt-get install ros-kinetic-navigation -y \\\n && apt-get install ros-kinetic-roscpp -y \\\n && apt-get install ros-kinetic-joy -y \\\n && apt-get install ros-kinetic-kobuki-safety-controller -y \\\n && apt-get install ros-kinetic-yocs-velocity-smoother -y \\\n && apt-get install ros-kinetic-turtlebot-bringup -y \\\n && apt-get install ros-kinetic-geometry-msgs -y \\\n && apt-get install ros-kinetic-yocs-cmd-vel-mux -y \\\n && apt-get install ros-kinetic-diagnostic-aggregator -y \\\n && apt-get install ros-kinetic-depthimage-to-laserscan -y \\\n && apt-get install ros-kinetic-gazebo-ros -y \\\n && apt-get install ros-kinetic-kobuki-gazebo-plugins -y \\\n && apt-get install ros-kinetic-robot-pose-ekf -y \\\n && apt-get install ros-kinetic-robot-state-publisher -y \\\n && apt-get install ros-kinetic-turtlebot-description -y \\\n && apt-get install ros-kinetic-turtlebot-navigation -y \\\n && apt-get install ros-kinetic-xacro -y \\\n && rosdep init \\\n && rosdep update \\\n && echo \"source /opt/ros/kinetic/setup.bash\" >> /root/.bashrc\n#   Upgrade gazebo to gazebo v7\nRUN sh -c 'echo \"deb http://packages.osrfoundation.org/gazebo/ubuntu-stable `lsb_release -cs` main\" > /etc/apt/sources.list.d/gazebo-stable.list'\nRUN wget http://packages.osrfoundation.org/gazebo.key -O - | apt-key add -\nRUN apt-get update -y \\\n && apt-get install gazebo7 -y\n#   Add miniconda to root's PATH\nRUN echo \"export PATH=/root/miniconda3:$PATH\" >> /root/.bashrc\n#   Create some useful default aliases\nRUN printf \"%s\\n\" \"alias cp=\\\"cp -i\\\"\" \"alias mv=\\\"mv -i\\\"\" \"alias rm=\\\"rm -i\\\"\" >> /root/.bash_aliases\nCOPY start_desktop.sh /usr/local/bin/start_desktop.sh\nCMD /usr/local/bin/start_desktop.sh\n","originalDockerfileUglifiedHash":"74bbf0197bd9c75da1ec4cd9640ff009","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/2884364f23e4f5773fe3c0ee016c4d03dadb06d5.dockerfile"}