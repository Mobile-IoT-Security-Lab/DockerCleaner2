{"seed":2840428474,"processedDockerfileHash":"4e801ab6290bae32b52e6698efcaad49","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM ubuntu:bionic\nARG AWS_REGION=us-east-1\n#   install needed packages. replace httpredir apt source with cloudfront\nRUN set -x \\\n && sed -i \"s/archive.ubuntu.com/$AWS_REGION.ec2.archive.ubuntu.com/\" /etc/apt/sources.list \\\n && export DEBIAN_FRONTEND=noninteractive \\\n && apt-get update \\\n && apt-get install --no-install-recommends gnupg1=1.4.22-3ubuntu2 -y \\\n && apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 0x51716619e084dab9 \\\n && echo 'deb http://cran.rstudio.com/bin/linux/ubuntu bionic-cran35/' >> /etc/apt/sources.list \\\n && apt-get update\n#   add ppa repository so we can install java 8 (not in any official repo for bionic)\nRUN apt-get update \\\n && apt-get install --no-install-recommends software-properties-common=0.96.24.32.20 -y \\\n && add-apt-repository ppa:openjdk-r/ppa\nRUN apt-get update \\\n && export DEBIAN_FRONTEND=noninteractive \\\n && apt-get install --no-install-recommends ant=1.10.5-3~18.04 build-essential=12.4ubuntu1 clang=1:6.0-41~exp5~ubuntu1 curl=7.58.0-2ubuntu3.24 debsigs=0.1.20 dpkg-sig=0.13.1+nmu4 expect=5.45.4-1 fakeroot=1.22-2ubuntu1 git-core libattr1-dev=1:2.4.47-2build1 libacl1-dev=2.2.52-3build1 libbz2-dev=1.0.6-8.1ubuntu0.2 libcap-dev=1:2.25-1.2 libcurl4-openssl-dev=7.58.0-2ubuntu3.24 libfuse2=2.9.7-1ubuntu1 libgtk-3-0=3.22.30-1ubuntu4 libgl1-mesa-dev=20.0.8-0ubuntu1~18.04.1 libegl1-mesa=20.0.8-0ubuntu1~18.04.1 libpam-dev libpango1.0-dev=1.40.14-1ubuntu0.1 libuser1-dev=1:0.62~dfsg-0.1ubuntu2 libssl-dev=1.1.1-1ubuntu2.1~18.04.21 libxslt1-dev=1.1.29-5ubuntu0.3 lsof=4.89+dfsg-0.1 openjdk-8-jdk=8u362-ga-0ubuntu1~18.04.1 pkg-config=0.29.1-0ubuntu2 python=2.7.15~rc1-1 r-base=3.4.4-1ubuntu1 sudo=1.8.21p2-3ubuntu1.5 unzip=6.0-21ubuntu1.2 uuid-dev=2.31.1-0.4ubuntu3.7 valgrind=1:3.13.0-2ubuntu2.3 wget=1.19.4-1ubuntu2.2 zlib1g-dev=1:1.2.11.dfsg-0ubuntu2.2 -y\n#   ensure we use the java 8 compiler\nRUN update-alternatives --set java /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java\n#  # build patchelf\nRUN cd /tmp \\\n && wget https://nixos.org/releases/patchelf/patchelf-0.9/patchelf-0.9.tar.gz \\\n && tar xzvf patchelf-0.9.tar.gz \\\n && cd patchelf-0.9 \\\n && ./configure \\\n && make \\\n && make install\n#  # run install-boost twice - boost exits 1 even though it has installed good enough for our uses.\n#  # https://github.com/rstudio/rstudio/blob/master/vagrant/provision-primary-user.sh#L12-L15\nCOPY dependencies/common/install-boost /tmp/\nRUN bash /tmp/install-boost || bash /tmp/install-boost\n#   set github login from build argument if defined\nARG GITHUB_LOGIN\nENV RSTUDIO_GITHUB_LOGIN=\"$GITHUB_LOGIN\"\n#   install cmake\nCOPY package/linux/install-dependencies /tmp/\nRUN /bin/bash /tmp/install-dependencies\n#   install common dependencies\nRUN mkdir -p /opt/rstudio-tools/dependencies/common\nCOPY dependencies/common/* /opt/rstudio-tools/dependencies/common/\nRUN cd /opt/rstudio-tools/dependencies/common \\\n && /bin/bash ./install-common\n#   install Qt SDK\nCOPY dependencies/linux/install-qt-sdk /tmp/\nRUN mkdir -p /opt/RStudio-QtSDK \\\n && export QT_SDK_DIR=/opt/RStudio-QtSDK/Qt5.12.1 \\\n && export QT_QPA_PLATFORM=minimal \\\n && /tmp/install-qt-sdk\n#   create jenkins user, make sudo. try to keep this toward the bottom for less cache busting\nARG JENKINS_GID=999\nARG JENKINS_UID=999\nRUN groupadd -g $JENKINS_GID jenkins \\\n && useradd -m -d /var/lib/jenkins -u $JENKINS_UID -g jenkins jenkins \\\n && echo \"jenkins ALL=(ALL) NOPASSWD: ALL\" >> /etc/sudoers\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:bionic\nARG AWS_REGION=us-east-1\n#  install needed packages. replace httpredir apt source with cloudfront\nRUN set -x \\\n && sed -i \"s/archive.ubuntu.com/$AWS_REGION.ec2.archive.ubuntu.com/\" /etc/apt/sources.list \\\n && export DEBIAN_FRONTEND=noninteractive \\\n && apt-get update \\\n && apt-get install gnupg1 -y \\\n && apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 0x51716619e084dab9 \\\n && echo 'deb http://cran.rstudio.com/bin/linux/ubuntu bionic-cran35/' >> /etc/apt/sources.list \\\n && apt-get update\n#  add ppa repository so we can install java 8 (not in any official repo for bionic)\nRUN apt-get update \\\n && apt-get install software-properties-common -y \\\n && add-apt-repository ppa:openjdk-r/ppa\nRUN apt-get update \\\n && export DEBIAN_FRONTEND=noninteractive \\\n && apt-get install ant build-essential clang curl debsigs dpkg-sig expect fakeroot git-core libattr1-dev libacl1-dev libbz2-dev libcap-dev libcurl4-openssl-dev libfuse2 libgtk-3-0 libgl1-mesa-dev libegl1-mesa libpam-dev libpango1.0-dev libuser1-dev libssl-dev libxslt1-dev lsof openjdk-8-jdk pkg-config python r-base sudo unzip uuid-dev valgrind wget zlib1g-dev -y\n#  ensure we use the java 8 compiler\nRUN update-alternatives --set java /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java\n# # build patchelf\nRUN cd /tmp \\\n && wget https://nixos.org/releases/patchelf/patchelf-0.9/patchelf-0.9.tar.gz \\\n && tar xzvf patchelf-0.9.tar.gz \\\n && cd patchelf-0.9 \\\n && ./configure \\\n && make \\\n && make install\n# # run install-boost twice - boost exits 1 even though it has installed good enough for our uses.\n# # https://github.com/rstudio/rstudio/blob/master/vagrant/provision-primary-user.sh#L12-L15\nCOPY dependencies/common/install-boost /tmp/\nRUN bash /tmp/install-boost || bash /tmp/install-boost\n#  set github login from build argument if defined\nARG GITHUB_LOGIN\nENV RSTUDIO_GITHUB_LOGIN=\"$GITHUB_LOGIN\"\n#  install cmake\nCOPY package/linux/install-dependencies /tmp/\nRUN /bin/bash /tmp/install-dependencies\n#  install common dependencies\nRUN mkdir -p /opt/rstudio-tools/dependencies/common\nCOPY dependencies/common/* /opt/rstudio-tools/dependencies/common/\nRUN cd /opt/rstudio-tools/dependencies/common \\\n && /bin/bash ./install-common\n#  install Qt SDK\nCOPY dependencies/linux/install-qt-sdk /tmp/\nRUN mkdir -p /opt/RStudio-QtSDK \\\n && export QT_SDK_DIR=/opt/RStudio-QtSDK/Qt5.12.1 \\\n && export QT_QPA_PLATFORM=minimal \\\n && /tmp/install-qt-sdk\n#  create jenkins user, make sudo. try to keep this toward the bottom for less cache busting\nARG JENKINS_GID=999\nARG JENKINS_UID=999\nRUN groupadd -g $JENKINS_GID jenkins \\\n && useradd -m -d /var/lib/jenkins -u $JENKINS_UID -g jenkins jenkins \\\n && echo \"jenkins ALL=(ALL) NOPASSWD: ALL\" >> /etc/sudoers\n","injectedSmells":[],"originalDockerfileHash":"309d7b0fb5f0cb10d0735920a94d7fba","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:bionic\nARG AWS_REGION=us-east-1\n#   install needed packages. replace httpredir apt source with cloudfront\nRUN set -x \\\n && sed -i \"s/archive.ubuntu.com/$AWS_REGION.ec2.archive.ubuntu.com/\" /etc/apt/sources.list \\\n && export DEBIAN_FRONTEND=noninteractive \\\n && apt-get update \\\n && apt-get install gnupg1 -y \\\n && apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 0x51716619e084dab9 \\\n && echo 'deb http://cran.rstudio.com/bin/linux/ubuntu bionic-cran35/' >> /etc/apt/sources.list \\\n && apt-get update\n#   add ppa repository so we can install java 8 (not in any official repo for bionic)\nRUN apt-get update \\\n && apt-get install software-properties-common -y \\\n && add-apt-repository ppa:openjdk-r/ppa\nRUN apt-get update \\\n && export DEBIAN_FRONTEND=noninteractive \\\n && apt-get install ant build-essential clang curl debsigs dpkg-sig expect fakeroot git-core libattr1-dev libacl1-dev libbz2-dev libcap-dev libcurl4-openssl-dev libfuse2 libgtk-3-0 libgl1-mesa-dev libegl1-mesa libpam-dev libpango1.0-dev libuser1-dev libssl-dev libxslt1-dev lsof openjdk-8-jdk pkg-config python r-base sudo unzip uuid-dev valgrind wget zlib1g-dev -y\n#   ensure we use the java 8 compiler\nRUN update-alternatives --set java /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java\n#  # build patchelf\nRUN cd /tmp \\\n && wget https://nixos.org/releases/patchelf/patchelf-0.9/patchelf-0.9.tar.gz \\\n && tar xzvf patchelf-0.9.tar.gz \\\n && cd patchelf-0.9 \\\n && ./configure \\\n && make \\\n && make install\n#  # run install-boost twice - boost exits 1 even though it has installed good enough for our uses.\n#  # https://github.com/rstudio/rstudio/blob/master/vagrant/provision-primary-user.sh#L12-L15\nCOPY dependencies/common/install-boost /tmp/\nRUN bash /tmp/install-boost || bash /tmp/install-boost\n#   set github login from build argument if defined\nARG GITHUB_LOGIN\nENV RSTUDIO_GITHUB_LOGIN=\"$GITHUB_LOGIN\"\n#   install cmake\nCOPY package/linux/install-dependencies /tmp/\nRUN /bin/bash /tmp/install-dependencies\n#   install common dependencies\nRUN mkdir -p /opt/rstudio-tools/dependencies/common\nCOPY dependencies/common/* /opt/rstudio-tools/dependencies/common/\nRUN cd /opt/rstudio-tools/dependencies/common \\\n && /bin/bash ./install-common\n#   install Qt SDK\nCOPY dependencies/linux/install-qt-sdk /tmp/\nRUN mkdir -p /opt/RStudio-QtSDK \\\n && export QT_SDK_DIR=/opt/RStudio-QtSDK/Qt5.12.1 \\\n && export QT_QPA_PLATFORM=minimal \\\n && /tmp/install-qt-sdk\n#   create jenkins user, make sudo. try to keep this toward the bottom for less cache busting\nARG JENKINS_GID=999\nARG JENKINS_UID=999\nRUN groupadd -g $JENKINS_GID jenkins \\\n && useradd -m -d /var/lib/jenkins -u $JENKINS_UID -g jenkins jenkins \\\n && echo \"jenkins ALL=(ALL) NOPASSWD: ALL\" >> /etc/sudoers\n","originalDockerfileUglifiedHash":"8b3617a2a203e8e60489acdd43ab6cf8","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/144ee20df31198d45b00c125a047bfc64556a358.dockerfile"}