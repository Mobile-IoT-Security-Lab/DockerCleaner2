{"seed":1029783384,"processedDockerfileHash":"77924ccf6451314ebe3c29a0e2592db7","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-pip","pin-package-manager-versions-apk","have-a-healthcheck","have-a-user"],"processedDockerfile":"#  ###########################################################\n#   Dockerfile to run a Django-based web application\n#   Based on a Python 3.6 image\n#\n#   Copyright 2017-2019 ControlScan, Inc.\n#\n#   This file is part of Cyphon Engine.\n#\n#   Cyphon Engine is free software: you can redistribute it and/or modify\n#   it under the terms of the GNU General Public License as published by\n#   the Free Software Foundation, version 3 of the License.\n#\n#   Cyphon Engine is distributed in the hope that it will be useful,\n#   but WITHOUT ANY WARRANTY; without even the implied warranty of\n#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n#   GNU General Public License for more details.\n#\n#   You should have received a copy of the GNU General Public License\n#   along with Cyphon Engine. If not, see <http://www.gnu.org/licenses/>.\n#\n#  ###########################################################\nFROM python:3.6-alpine\nMAINTAINER Cyphon <cyphondev@controlscan.com>\nARG UID=1000\nARG GID=1000\nENV CYPHON_HOME=\"/usr/src/app\"\nENV LOG_DIR=\"/var/log/cyphon\"\nENV PATH=\"$PATH:$CYPHON_HOME\"\nENV NLTK_DATA=\"/usr/share/nltk_data\"\n#   copy requirements.txt to the image\nCOPY requirements.txt $CYPHON_HOME/requirements.txt\n#   install Alpine and Python dependencies\nRUN apk add binutils=2.37-r3 gdal=3.4.3-r0 postgis=3.1.4-r3 proj4-dev py-gdal su-exec=0.2-r1 -U --no-cache --repository http://dl-5.alpinelinux.org/alpine/edge/main/ --repository http://dl-5.alpinelinux.org/alpine/edge/testing/ \\\n && ln -s /usr/lib/libgdal.so.20 /usr/lib/libgdal.so \\\n && ln -s /usr/lib/libgeos_c.so.1 /usr/lib/libgeos_c.so \\\n && apk add build-base=0.5-r3 libffi-dev=3.4.2-r1 libressl-dev=3.4.3-r0 openssl-dev=1.1.1t-r3 linux-headers=5.10.41-r0 musl-dev=1.2.2-r8 postgis=3.1.4-r3 postgresql-dev python3-dev=3.9.16-r0 jpeg-dev=9d-r1 zlib-dev=1.2.12-r3 tiff-dev=4.4.0-r1 -U --no-cache --repository http://dl-5.alpinelinux.org/alpine/edge/main/ --repository http://dl-5.alpinelinux.org/alpine/edge/testing/ -t build-deps \\\n && pip install pip==23.1 --upgrade \\\n && pip install -r $CYPHON_HOME/requirements.txt \\\n && apk del build-deps \\\n && python -m nltk.downloader -d /usr/local/share/nltk_data punkt wordnet\n#   create unprivileged user\nRUN addgroup -S -g $GID cyphon \\\n && adduser -S -G cyphon -u $UID cyphon\n#   create application subdirectories\nRUN mkdir -p $CYPHON_HOME $CYPHON_HOME/media $CYPHON_HOME/static $LOG_DIR\n#   copy project to the image\nCOPY cyphon $CYPHON_HOME/cyphon\n#   copy entrypoint scripts to the image\nCOPY entrypoints $CYPHON_HOME/entrypoints\nCOPY cyphon/cyphon/settings/base.example.py $CYPHON_HOME/cyphon/cyphon/settings/base.py\nCOPY cyphon/cyphon/settings/conf.example.py $CYPHON_HOME/cyphon/cyphon/settings/conf.py\nCOPY cyphon/cyphon/settings/dev.example.py $CYPHON_HOME/cyphon/cyphon/settings/dev.py\nCOPY cyphon/cyphon/settings/prod.example.py $CYPHON_HOME/cyphon/cyphon/settings/prod.py\n#   set owner:group and permissions\nRUN chown -R cyphon:cyphon $CYPHON_HOME \\\n && chmod -R 775 $CYPHON_HOME \\\n && chown -R cyphon:cyphon $LOG_DIR \\\n && chmod -R 775 $LOG_DIR\nWORKDIR $CYPHON_HOME/cyphon\nVOLUME [\"$CYPHON_HOME/keys\", \"$CYPHON_HOME/media\", \"$CYPHON_HOME/static\"]\nEXPOSE 8000/tcp\nCMD $CYPHON_HOME/entrypoints/run.sh\nRUN addgroup -S docker-user ; adduser -S -G docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"# ###########################################################\n#  Dockerfile to run a Django-based web application\n#  Based on a Python 3.6 image\n#\n#  Copyright 2017-2019 ControlScan, Inc.\n#\n#  This file is part of Cyphon Engine.\n#\n#  Cyphon Engine is free software: you can redistribute it and/or modify\n#  it under the terms of the GNU General Public License as published by\n#  the Free Software Foundation, version 3 of the License.\n#\n#  Cyphon Engine is distributed in the hope that it will be useful,\n#  but WITHOUT ANY WARRANTY; without even the implied warranty of\n#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n#  GNU General Public License for more details.\n#\n#  You should have received a copy of the GNU General Public License\n#  along with Cyphon Engine. If not, see <http://www.gnu.org/licenses/>.\n#\n# ###########################################################\nFROM python:3.6-alpine\nMAINTAINER Cyphon <cyphondev@controlscan.com>\nARG UID=1000\nARG GID=1000\nENV CYPHON_HOME=\"/usr/src/app\"\nENV LOG_DIR=\"/var/log/cyphon\"\nENV PATH=\"$PATH:$CYPHON_HOME\"\nENV NLTK_DATA=\"/usr/share/nltk_data\"\n#  copy requirements.txt to the image\nCOPY requirements.txt $CYPHON_HOME/requirements.txt\n#  install Alpine and Python dependencies\nRUN apk add -U --no-cache --repository http://dl-5.alpinelinux.org/alpine/edge/main/ --repository http://dl-5.alpinelinux.org/alpine/edge/testing/ binutils gdal postgis proj4-dev py-gdal su-exec \\\n && ln -s /usr/lib/libgdal.so.20 /usr/lib/libgdal.so \\\n && ln -s /usr/lib/libgeos_c.so.1 /usr/lib/libgeos_c.so \\\n && apk add -U --no-cache --repository http://dl-5.alpinelinux.org/alpine/edge/main/ --repository http://dl-5.alpinelinux.org/alpine/edge/testing/ -t build-deps build-base libffi-dev libressl-dev openssl-dev linux-headers musl-dev postgis postgresql-dev python3-dev jpeg-dev zlib-dev tiff-dev \\\n && pip install pip --upgrade \\\n && pip install -r $CYPHON_HOME/requirements.txt \\\n && apk del build-deps \\\n && python -m nltk.downloader -d /usr/local/share/nltk_data punkt wordnet\n#  create unprivileged user\nRUN addgroup -S -g $GID cyphon \\\n && adduser -S -G cyphon -u $UID cyphon\n#  create application subdirectories\nRUN mkdir -p $CYPHON_HOME $CYPHON_HOME/media $CYPHON_HOME/static $LOG_DIR\n#  copy project to the image\nCOPY cyphon $CYPHON_HOME/cyphon\n#  copy entrypoint scripts to the image\nCOPY entrypoints $CYPHON_HOME/entrypoints\nCOPY cyphon/cyphon/settings/base.example.py $CYPHON_HOME/cyphon/cyphon/settings/base.py\nCOPY cyphon/cyphon/settings/conf.example.py $CYPHON_HOME/cyphon/cyphon/settings/conf.py\nCOPY cyphon/cyphon/settings/dev.example.py $CYPHON_HOME/cyphon/cyphon/settings/dev.py\nCOPY cyphon/cyphon/settings/prod.example.py $CYPHON_HOME/cyphon/cyphon/settings/prod.py\n#  set owner:group and permissions\nRUN chown -R cyphon:cyphon $CYPHON_HOME \\\n && chmod -R 775 $CYPHON_HOME \\\n && chown -R cyphon:cyphon $LOG_DIR \\\n && chmod -R 775 $LOG_DIR\nWORKDIR $CYPHON_HOME/cyphon\nVOLUME [\"$CYPHON_HOME/keys\", \"$CYPHON_HOME/media\", \"$CYPHON_HOME/static\"]\nEXPOSE 8000/tcp\nCMD $CYPHON_HOME/entrypoints/run.sh\n","injectedSmells":[],"originalDockerfileHash":"310e5ec604a1a5e7d7ce2b3b3d613f58","successfullyInjectedSmells":[],"originalDockerfileUglified":"#  ###########################################################\n#   Dockerfile to run a Django-based web application\n#   Based on a Python 3.6 image\n#\n#   Copyright 2017-2019 ControlScan, Inc.\n#\n#   This file is part of Cyphon Engine.\n#\n#   Cyphon Engine is free software: you can redistribute it and/or modify\n#   it under the terms of the GNU General Public License as published by\n#   the Free Software Foundation, version 3 of the License.\n#\n#   Cyphon Engine is distributed in the hope that it will be useful,\n#   but WITHOUT ANY WARRANTY; without even the implied warranty of\n#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n#   GNU General Public License for more details.\n#\n#   You should have received a copy of the GNU General Public License\n#   along with Cyphon Engine. If not, see <http://www.gnu.org/licenses/>.\n#\n#  ###########################################################\nFROM python:3.6-alpine\nMAINTAINER Cyphon <cyphondev@controlscan.com>\nARG UID=1000\nARG GID=1000\nENV CYPHON_HOME=\"/usr/src/app\"\nENV LOG_DIR=\"/var/log/cyphon\"\nENV PATH=\"$PATH:$CYPHON_HOME\"\nENV NLTK_DATA=\"/usr/share/nltk_data\"\n#   copy requirements.txt to the image\nCOPY requirements.txt $CYPHON_HOME/requirements.txt\n#   install Alpine and Python dependencies\nRUN apk add -U --no-cache --repository http://dl-5.alpinelinux.org/alpine/edge/main/ --repository http://dl-5.alpinelinux.org/alpine/edge/testing/ binutils gdal postgis proj4-dev py-gdal su-exec \\\n && ln -s /usr/lib/libgdal.so.20 /usr/lib/libgdal.so \\\n && ln -s /usr/lib/libgeos_c.so.1 /usr/lib/libgeos_c.so \\\n && apk add -U --no-cache --repository http://dl-5.alpinelinux.org/alpine/edge/main/ --repository http://dl-5.alpinelinux.org/alpine/edge/testing/ -t build-deps build-base libffi-dev libressl-dev openssl-dev linux-headers musl-dev postgis postgresql-dev python3-dev jpeg-dev zlib-dev tiff-dev \\\n && pip install pip --upgrade \\\n && pip install -r $CYPHON_HOME/requirements.txt \\\n && apk del build-deps \\\n && python -m nltk.downloader -d /usr/local/share/nltk_data punkt wordnet\n#   create unprivileged user\nRUN addgroup -S -g $GID cyphon \\\n && adduser -S -G cyphon -u $UID cyphon\n#   create application subdirectories\nRUN mkdir -p $CYPHON_HOME $CYPHON_HOME/media $CYPHON_HOME/static $LOG_DIR\n#   copy project to the image\nCOPY cyphon $CYPHON_HOME/cyphon\n#   copy entrypoint scripts to the image\nCOPY entrypoints $CYPHON_HOME/entrypoints\nCOPY cyphon/cyphon/settings/base.example.py $CYPHON_HOME/cyphon/cyphon/settings/base.py\nCOPY cyphon/cyphon/settings/conf.example.py $CYPHON_HOME/cyphon/cyphon/settings/conf.py\nCOPY cyphon/cyphon/settings/dev.example.py $CYPHON_HOME/cyphon/cyphon/settings/dev.py\nCOPY cyphon/cyphon/settings/prod.example.py $CYPHON_HOME/cyphon/cyphon/settings/prod.py\n#   set owner:group and permissions\nRUN chown -R cyphon:cyphon $CYPHON_HOME \\\n && chmod -R 775 $CYPHON_HOME \\\n && chown -R cyphon:cyphon $LOG_DIR \\\n && chmod -R 775 $LOG_DIR\nWORKDIR $CYPHON_HOME/cyphon\nVOLUME [\"$CYPHON_HOME/keys\", \"$CYPHON_HOME/media\", \"$CYPHON_HOME/static\"]\nEXPOSE 8000/tcp\nCMD $CYPHON_HOME/entrypoints/run.sh\n","originalDockerfileUglifiedHash":"dd35ba480d30ace8f8955535774218c1","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/e94d8591a21b631363c3b1f10c9a219d05a17063.dockerfile"}