{"seed":697094035,"processedDockerfileHash":"466af9821459b347fb56ae1059fba11a","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM ubuntu:10.04\nARG IMAGE\nENV DEFAULT_DOCKCROSS_IMAGE=\"${IMAGE}\" \\\n    LANG=\"en_US.UTF-8\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US.UTF-8\"\nARG CMAKE_VERSION=3.13.4\nARG GIT_VERSION=2.16.2\nARG NINJA_VERSION=1.9.0.g99df1.kitware.dyndep-1.jobserver-1\nARG PYTHON_VERSION=3.6.4\n#   Image build scripts\nCOPY imagefiles/build-and-install-curl.sh imagefiles/build-and-install-git.sh imagefiles/build-and-install-openssl.sh imagefiles/build-and-install-openssh.sh imagefiles/build-and-install-python.sh imagefiles/install-cmake-binary.sh imagefiles/install-gosu-binary.sh imagefiles/install-gosu-binary-wrapper.sh imagefiles/install-ninja-binary.sh imagefiles/utils.sh /imagefiles/\nARG DEBIAN_FRONTEND=noninteractive\nRUN sed -i \"s/archive.ubuntu.com/old-releases.ubuntu.com/\" /etc/apt/sources.list \\\n && apt-get update \\\n && (LANG=C LANGUAGE=C LC_ALL=C apt-get install -y locales ) \\\n && locale-gen ${LANG%.*} ${LANG} \\\n && apt-get -y upgrade \\\n && apt-get update \\\n && apt-get install --no-install-recommends autoconf build-essential curl pkg-config unzip subversion -y \\\n && apt-get install --no-install-recommends wget -y \\\n && apt-get install --no-install-recommends gettext libexpat1-dev zlib1g-dev -y \\\n && echo \"deb http://ppa.launchpad.net/ubuntu-toolchain-r/test/ubuntu lucid main\" >> /etc/apt/sources.list \\\n && echo \"deb-src http://ppa.launchpad.net/ubuntu-toolchain-r/test/ubuntu lucid main\" >> /etc/apt/sources.list \\\n && gpg --ignore-time-conflict --no-options --no-default-keyring --secret-keyring /etc/apt/secring.gpg --trustdb-name /etc/apt/trustdb.gpg --keyring /etc/apt/trusted.gpg --keyserver keyserver.ubuntu.com --recv 60C317803A41BA51845E371A1E9377A2BA9EF27F \\\n && apt-get update \\\n && apt-get install --no-install-recommends gcc-4.6 -y \\\n && apt-get install --no-install-recommends g++-4.6 -y \\\n && /imagefiles/build-and-install-openssl.sh \\\n && /imagefiles/build-and-install-curl.sh \\\n && /imagefiles/build-and-install-openssh.sh \\\n && /imagefiles/build-and-install-git.sh \\\n && /imagefiles/build-and-install-python.sh \\\n && /imagefiles/install-cmake-binary.sh \\\n && /imagefiles/install-gosu-binary.sh \\\n && /imagefiles/install-gosu-binary-wrapper.sh \\\n && /imagefiles/install-ninja-binary.sh \\\n && rm -rf /imagefiles \\\n && rm -rf /var/lib/apt/lists/* \\\n && mkdir /var/lib/apt/lists/partial\nENV AR=\"/usr/bin/ar\" \\\n    AS=\"/usr/bin/as\" \\\n    CC=\"/usr/bin/gcc-4.6\" \\\n    CPP=\"/usr/bin/cpp-4.6\" \\\n    CXX=\"/usr/bin/g++-4.6\"\nWORKDIR /work\nENTRYPOINT [\"/dockcross/entrypoint.sh\"]\n#   Runtime scripts\nCOPY imagefiles/entrypoint.sh imagefiles/dockcross /dockcross/\n#   Build-time metadata as defined at http://label-schema.org\nARG BUILD_DATE\nARG IMAGE\nARG VCS_REF\nARG VCS_URL\nLABEL org.label-schema.build-date=\"$BUILD_DATE\" \\\n      org.label-schema.name=\"$IMAGE\" \\\n      org.label-schema.vcs-ref=\"$VCS_REF\" \\\n      org.label-schema.vcs-url=\"$VCS_URL\" \\\n      org.label-schema.schema-version=\"1.0\" \\\n      maintainer=\"Jean-Christophe Fillion-Robin <jchris.fillionr@kitware.com>\"\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:10.04\nARG IMAGE\nENV DEFAULT_DOCKCROSS_IMAGE=\"${IMAGE}\" \\\n    LANG=\"en_US.UTF-8\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US.UTF-8\"\nARG CMAKE_VERSION=3.13.4\nARG GIT_VERSION=2.16.2\nARG NINJA_VERSION=1.9.0.g99df1.kitware.dyndep-1.jobserver-1\nARG PYTHON_VERSION=3.6.4\n#  Image build scripts\nCOPY imagefiles/build-and-install-curl.sh imagefiles/build-and-install-git.sh imagefiles/build-and-install-openssl.sh imagefiles/build-and-install-openssh.sh imagefiles/build-and-install-python.sh imagefiles/install-cmake-binary.sh imagefiles/install-gosu-binary.sh imagefiles/install-gosu-binary-wrapper.sh imagefiles/install-ninja-binary.sh imagefiles/utils.sh /imagefiles/\nARG DEBIAN_FRONTEND=noninteractive\nRUN sed -i \"s/archive.ubuntu.com/old-releases.ubuntu.com/\" /etc/apt/sources.list \\\n && apt-get update \\\n && (LANG=C LANGUAGE=C LC_ALL=C apt-get install -y locales ) \\\n && locale-gen ${LANG%.*} ${LANG} \\\n && apt-get -y upgrade \\\n && apt-get update \\\n && apt-get install autoconf build-essential curl pkg-config unzip subversion -y \\\n && apt-get install wget -y \\\n && apt-get install gettext libexpat1-dev zlib1g-dev -y \\\n && echo \"deb http://ppa.launchpad.net/ubuntu-toolchain-r/test/ubuntu lucid main\" >> /etc/apt/sources.list \\\n && echo \"deb-src http://ppa.launchpad.net/ubuntu-toolchain-r/test/ubuntu lucid main\" >> /etc/apt/sources.list \\\n && gpg --ignore-time-conflict --no-options --no-default-keyring --secret-keyring /etc/apt/secring.gpg --trustdb-name /etc/apt/trustdb.gpg --keyring /etc/apt/trusted.gpg --keyserver keyserver.ubuntu.com --recv 60C317803A41BA51845E371A1E9377A2BA9EF27F \\\n && apt-get update \\\n && apt-get install gcc-4.6 -y \\\n && apt-get install g++-4.6 -y \\\n && /imagefiles/build-and-install-openssl.sh \\\n && /imagefiles/build-and-install-curl.sh \\\n && /imagefiles/build-and-install-openssh.sh \\\n && /imagefiles/build-and-install-git.sh \\\n && /imagefiles/build-and-install-python.sh \\\n && /imagefiles/install-cmake-binary.sh \\\n && /imagefiles/install-gosu-binary.sh \\\n && /imagefiles/install-gosu-binary-wrapper.sh \\\n && /imagefiles/install-ninja-binary.sh \\\n && rm -rf /imagefiles \\\n && rm -rf /var/lib/apt/lists/* \\\n && mkdir /var/lib/apt/lists/partial\nENV AR=\"/usr/bin/ar\" \\\n    AS=\"/usr/bin/as\" \\\n    CC=\"/usr/bin/gcc-4.6\" \\\n    CPP=\"/usr/bin/cpp-4.6\" \\\n    CXX=\"/usr/bin/g++-4.6\"\nWORKDIR /work\nENTRYPOINT [\"/dockcross/entrypoint.sh\"]\n#  Runtime scripts\nCOPY imagefiles/entrypoint.sh imagefiles/dockcross /dockcross/\n#  Build-time metadata as defined at http://label-schema.org\nARG BUILD_DATE\nARG IMAGE\nARG VCS_REF\nARG VCS_URL\nLABEL org.label-schema.build-date=\"$BUILD_DATE\" \\\n      org.label-schema.name=\"$IMAGE\" \\\n      org.label-schema.vcs-ref=\"$VCS_REF\" \\\n      org.label-schema.vcs-url=\"$VCS_URL\" \\\n      org.label-schema.schema-version=\"1.0\" \\\n      maintainer=\"Jean-Christophe Fillion-Robin <jchris.fillionr@kitware.com>\"\n","injectedSmells":[],"originalDockerfileHash":"50062f2c8d9006771557e42c298ccf93","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:10.04\nARG IMAGE\nENV DEFAULT_DOCKCROSS_IMAGE=\"${IMAGE}\" \\\n    LANG=\"en_US.UTF-8\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US.UTF-8\"\nARG CMAKE_VERSION=3.13.4\nARG GIT_VERSION=2.16.2\nARG NINJA_VERSION=1.9.0.g99df1.kitware.dyndep-1.jobserver-1\nARG PYTHON_VERSION=3.6.4\n#   Image build scripts\nCOPY imagefiles/build-and-install-curl.sh imagefiles/build-and-install-git.sh imagefiles/build-and-install-openssl.sh imagefiles/build-and-install-openssh.sh imagefiles/build-and-install-python.sh imagefiles/install-cmake-binary.sh imagefiles/install-gosu-binary.sh imagefiles/install-gosu-binary-wrapper.sh imagefiles/install-ninja-binary.sh imagefiles/utils.sh /imagefiles/\nARG DEBIAN_FRONTEND=noninteractive\nRUN sed -i \"s/archive.ubuntu.com/old-releases.ubuntu.com/\" /etc/apt/sources.list \\\n && apt-get update \\\n && (LANG=C LANGUAGE=C LC_ALL=C apt-get install -y locales ) \\\n && locale-gen ${LANG%.*} ${LANG} \\\n && apt-get -y upgrade \\\n && apt-get update \\\n && apt-get install autoconf build-essential curl pkg-config unzip subversion -y \\\n && apt-get install wget -y \\\n && apt-get install gettext libexpat1-dev zlib1g-dev -y \\\n && echo \"deb http://ppa.launchpad.net/ubuntu-toolchain-r/test/ubuntu lucid main\" >> /etc/apt/sources.list \\\n && echo \"deb-src http://ppa.launchpad.net/ubuntu-toolchain-r/test/ubuntu lucid main\" >> /etc/apt/sources.list \\\n && gpg --ignore-time-conflict --no-options --no-default-keyring --secret-keyring /etc/apt/secring.gpg --trustdb-name /etc/apt/trustdb.gpg --keyring /etc/apt/trusted.gpg --keyserver keyserver.ubuntu.com --recv 60C317803A41BA51845E371A1E9377A2BA9EF27F \\\n && apt-get update \\\n && apt-get install gcc-4.6 -y \\\n && apt-get install g++-4.6 -y \\\n && /imagefiles/build-and-install-openssl.sh \\\n && /imagefiles/build-and-install-curl.sh \\\n && /imagefiles/build-and-install-openssh.sh \\\n && /imagefiles/build-and-install-git.sh \\\n && /imagefiles/build-and-install-python.sh \\\n && /imagefiles/install-cmake-binary.sh \\\n && /imagefiles/install-gosu-binary.sh \\\n && /imagefiles/install-gosu-binary-wrapper.sh \\\n && /imagefiles/install-ninja-binary.sh \\\n && rm -rf /imagefiles \\\n && rm -rf /var/lib/apt/lists/* \\\n && mkdir /var/lib/apt/lists/partial\nENV AR=\"/usr/bin/ar\" \\\n    AS=\"/usr/bin/as\" \\\n    CC=\"/usr/bin/gcc-4.6\" \\\n    CPP=\"/usr/bin/cpp-4.6\" \\\n    CXX=\"/usr/bin/g++-4.6\"\nWORKDIR /work\nENTRYPOINT [\"/dockcross/entrypoint.sh\"]\n#   Runtime scripts\nCOPY imagefiles/entrypoint.sh imagefiles/dockcross /dockcross/\n#   Build-time metadata as defined at http://label-schema.org\nARG BUILD_DATE\nARG IMAGE\nARG VCS_REF\nARG VCS_URL\nLABEL org.label-schema.build-date=\"$BUILD_DATE\" \\\n      org.label-schema.name=\"$IMAGE\" \\\n      org.label-schema.vcs-ref=\"$VCS_REF\" \\\n      org.label-schema.vcs-url=\"$VCS_URL\" \\\n      org.label-schema.schema-version=\"1.0\" \\\n      maintainer=\"Jean-Christophe Fillion-Robin <jchris.fillionr@kitware.com>\"\n","originalDockerfileUglifiedHash":"d9e4d2e87c3bc087eddd1340cab407c4","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/ee9f0b9483f511a04a9b7bc2410a0384557590ed.dockerfile"}