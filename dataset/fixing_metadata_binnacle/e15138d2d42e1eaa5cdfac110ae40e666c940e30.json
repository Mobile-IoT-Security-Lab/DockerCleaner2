{"seed":2689686139,"processedDockerfileHash":"698bde6f36df93cc6da8bdb7bbef3624","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM ubuntu:16.04\nMAINTAINER Alex Harrington <alex@springsignage.com>\nRUN DEBIAN_FRONTEND=noninteractive apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends software-properties-common=0.96.20.10 -y )\nRUN DEBIAN_FRONTEND=noninteractive add-apt-repository ppa:ubuntu-toolchain-r/test \\\n && :\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y software-properties-common cmake\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y libgtkmm-3.0-dev libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev libgstreamer-plugins-bad1.0-dev gstreamer1.0-libav libwebkitgtk-3.0-dev gstreamer1.0-tools\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y mesa-common-dev libgl1-mesa-dev libgles2-mesa-dev build-essential autoconf autogen libtool\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y curl libxml-parser-perl git g++-8 libffi-dev libmount-dev libssl-dev unzip\nRUN update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 90\nRUN update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 90\nENV MMCOMMON=\"0.9.10\"\nRUN curl -o /root/mm-common.tar.gz -SL https://github.com/GNOME/mm-common/archive/${MMCOMMON}.tar.gz \\\n && cd /root \\\n && tar -zxvf mm-common.tar.gz \\\n && cd mm-common-${MMCOMMON} \\\n && ./autogen.sh \\\n && make \\\n && make install \\\n && cd /root \\\n && rm -r /root/mm-common-${MMCOMMON} \\\n && rm /root/mm-common.tar.gz\nENV SIGC=\"2.10.0\"\nRUN ACLOCAL_PATH=\"/usr/local/share/aclocal\" \\\n && export ACLOCAL_PATH \\\n && curl -o /root/libsigcplusplus.tar.gz -SL https://github.com/libsigcplusplus/libsigcplusplus/archive/${SIGC}.tar.gz \\\n && cd /root \\\n && tar -zxvf libsigcplusplus.tar.gz \\\n && cd libsigcplusplus-${SIGC} \\\n && ./autogen.sh \\\n && make \\\n && make install \\\n && cd /root \\\n && rm -r /root/libsigcplusplus-${SIGC} \\\n && rm /root/libsigcplusplus.tar.gz\nENV GLIB=\"2.56.1\"\nRUN curl -o /root/glib.tar.gz -SL https://github.com/GNOME/glib/archive/${GLIB}.tar.gz \\\n && cd /root \\\n && tar -zxvf glib.tar.gz \\\n && cd glib-${GLIB} \\\n && ./autogen.sh \\\n && make \\\n && make install \\\n && cd /root \\\n && rm -r /root/glib-${GLIB} \\\n && rm /root/glib.tar.gz\nENV GLIBMM=\"2.56.0\"\nRUN ACLOCAL_PATH=\"/usr/local/share/aclocal\" \\\n && export ACLOCAL_PATH \\\n && curl -o /root/glibmm.tar.gz -SL https://github.com/GNOME/glibmm/archive/${GLIBMM}.tar.gz \\\n && cd /root \\\n && tar -zxvf glibmm.tar.gz \\\n && cd glibmm-${GLIBMM} \\\n && ./autogen.sh \\\n && make \\\n && make install \\\n && cd /root \\\n && rm -r /root/glibmm-${GLIBMM} \\\n && rm /root/glibmm.tar.gz\nENV BOOST_MAJOR=\"1\" \\\n    BOOST_MINOR=\"69\"\nENV BOOST=\"${BOOST_MAJOR}_${BOOST_MINOR}_0\"\nRUN curl -o /root/boost.tar.gz -SL https://dl.bintray.com/boostorg/release/${BOOST_MAJOR}.${BOOST_MINOR}.0/source/boost_${BOOST}.tar.gz \\\n && cd /root \\\n && tar -zxvf boost.tar.gz \\\n && cd boost_${BOOST} \\\n && ./bootstrap.sh --with-libraries=system,date_time,thread \\\n && ./b2 install \\\n && cd /root \\\n && rm -r /root/boost_${BOOST} \\\n && rm /root/boost.tar.gz\nENV SPDLOG=\"1.1.0\"\nRUN curl -o /root/spdlog.tar.gz -SL https://github.com/gabime/spdlog/archive/v${SPDLOG}.tar.gz \\\n && cd /root \\\n && tar -zxvf spdlog.tar.gz \\\n && cd spdlog-${SPDLOG} \\\n && cmake . \\\n && make \\\n && make install \\\n && cd /root \\\n && rm -r spdlog-${SPDLOG} \\\n && rm spdlog.tar.gz\nENV CMAKE_MAJOR=\"3\" \\\n    CMAKE_MINOR=\"14\" \\\n    CMAKE_PATCH=\"1\"\nENV CMAKE=\"${CMAKE_MAJOR}.${CMAKE_MINOR}.${CMAKE_PATCH}\"\nRUN curl -o /root/cmake.tar.gz https://cmake.org/files/v${CMAKE_MAJOR}.${CMAKE_MINOR}/cmake-${CMAKE}.tar.gz \\\n && cd /root \\\n && tar -zxvf cmake.tar.gz \\\n && cd cmake-${CMAKE} \\\n && cmake . \\\n && make \\\n && make install \\\n && cd /root \\\n && rm -r cmake-${CMAKE} \\\n && rm cmake.tar.gz\nENV GTEST=\"1.8.1\"\nRUN curl -o /root/gtest.tar.gz https://codeload.github.com/google/googletest/tar.gz/release-${GTEST} \\\n && cd /root \\\n && tar -zxvf gtest.tar.gz \\\n && cd googletest-release-${GTEST} \\\n && cmake . \\\n && make \\\n && make install \\\n && cd /root \\\n && rm -r googletest-release-${GTEST} \\\n && rm gtest.tar.gz\nENV ZEROMQ=\"4.3.0\"\nRUN curl -o /root/zeromq.tar.gz -SL https://github.com/zeromq/libzmq/releases/download/v${ZEROMQ}/zeromq-${ZEROMQ}.tar.gz \\\n && cd /root \\\n && tar -zxvf zeromq.tar.gz \\\n && cd zeromq-${ZEROMQ} \\\n && mkdir build \\\n && cd build \\\n && cmake .. \\\n && make -j4 install \\\n && cd /root \\\n && rm -r zeromq-${ZEROMQ} \\\n && rm zeromq.tar.gz\nRUN curl -o /root/cppzmq.tar.gz -SL https://github.com/zeromq/cppzmq/archive/v${ZEROMQ}.tar.gz \\\n && cd /root \\\n && tar -zxvf cppzmq.tar.gz \\\n && cd cppzmq-${ZEROMQ} \\\n && mkdir build \\\n && cd build \\\n && cmake .. \\\n && make -j4 install \\\n && cd /root \\\n && rm -r cppzmq-${ZEROMQ} \\\n && rm cppzmq.tar.gz\nENV CRYPTOPP=\"8_1_0\"\nRUN curl -o /root/cryptopp.tar.gz -SL https://github.com/weidai11/cryptopp/archive/CRYPTOPP_${CRYPTOPP}.tar.gz \\\n && curl -o /root/cryptopp_pem.zip -SL https://github.com/noloader/cryptopp-pem/archive/master.zip \\\n && cd /root \\\n && tar -zxvf cryptopp.tar.gz \\\n && unzip -a cryptopp_pem.zip \\\n && cp -r /root/cryptopp-pem-master/. /root/cryptopp-CRYPTOPP_${CRYPTOPP} \\\n && cd cryptopp-CRYPTOPP_${CRYPTOPP} \\\n && make -j4 \\\n && make install \\\n && cd /root \\\n && rm -r cryptopp-CRYPTOPP_${CRYPTOPP} \\\n && rm -r cryptopp-pem-master \\\n && rm cryptopp.tar.gz \\\n && rm cryptopp_pem.zip\nRUN mkdir -p /app\nCOPY . /app\nRUN cd /app \\\n && cmake -H. -B_build \\\n && cd _build \\\n && make -j4 \\\n && make install\nVOLUME /build\nENTRYPOINT [\"./app/run.sh\"]\nCMD []\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:16.04\nMAINTAINER Alex Harrington <alex@springsignage.com>\nRUN DEBIAN_FRONTEND=noninteractive apt-get update \\\n && apt-get install software-properties-common -y\nRUN DEBIAN_FRONTEND=noninteractive add-apt-repository ppa:ubuntu-toolchain-r/test \\\n && apt-get update\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y software-properties-common cmake\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y libgtkmm-3.0-dev libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev libgstreamer-plugins-bad1.0-dev gstreamer1.0-libav libwebkitgtk-3.0-dev gstreamer1.0-tools\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y mesa-common-dev libgl1-mesa-dev libgles2-mesa-dev build-essential autoconf autogen libtool\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y curl libxml-parser-perl git g++-8 libffi-dev libmount-dev libssl-dev unzip\nRUN update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 90\nRUN update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 90\nENV MMCOMMON=\"0.9.10\"\nRUN curl -o /root/mm-common.tar.gz -SL https://github.com/GNOME/mm-common/archive/${MMCOMMON}.tar.gz \\\n && cd /root \\\n && tar -zxvf mm-common.tar.gz \\\n && cd mm-common-${MMCOMMON} \\\n && ./autogen.sh \\\n && make \\\n && make install \\\n && cd /root \\\n && rm -r /root/mm-common-${MMCOMMON} \\\n && rm /root/mm-common.tar.gz\nENV SIGC=\"2.10.0\"\nRUN ACLOCAL_PATH=\"/usr/local/share/aclocal\" \\\n && export ACLOCAL_PATH \\\n && curl -o /root/libsigcplusplus.tar.gz -SL https://github.com/libsigcplusplus/libsigcplusplus/archive/${SIGC}.tar.gz \\\n && cd /root \\\n && tar -zxvf libsigcplusplus.tar.gz \\\n && cd libsigcplusplus-${SIGC} \\\n && ./autogen.sh \\\n && make \\\n && make install \\\n && cd /root \\\n && rm -r /root/libsigcplusplus-${SIGC} \\\n && rm /root/libsigcplusplus.tar.gz\nENV GLIB=\"2.56.1\"\nRUN curl -o /root/glib.tar.gz -SL https://github.com/GNOME/glib/archive/${GLIB}.tar.gz \\\n && cd /root \\\n && tar -zxvf glib.tar.gz \\\n && cd glib-${GLIB} \\\n && ./autogen.sh \\\n && make \\\n && make install \\\n && cd /root \\\n && rm -r /root/glib-${GLIB} \\\n && rm /root/glib.tar.gz\nENV GLIBMM=\"2.56.0\"\nRUN ACLOCAL_PATH=\"/usr/local/share/aclocal\" \\\n && export ACLOCAL_PATH \\\n && curl -o /root/glibmm.tar.gz -SL https://github.com/GNOME/glibmm/archive/${GLIBMM}.tar.gz \\\n && cd /root \\\n && tar -zxvf glibmm.tar.gz \\\n && cd glibmm-${GLIBMM} \\\n && ./autogen.sh \\\n && make \\\n && make install \\\n && cd /root \\\n && rm -r /root/glibmm-${GLIBMM} \\\n && rm /root/glibmm.tar.gz\nENV BOOST_MAJOR=\"1\" \\\n    BOOST_MINOR=\"69\"\nENV BOOST=\"${BOOST_MAJOR}_${BOOST_MINOR}_0\"\nRUN curl -o /root/boost.tar.gz -SL https://dl.bintray.com/boostorg/release/${BOOST_MAJOR}.${BOOST_MINOR}.0/source/boost_${BOOST}.tar.gz \\\n && cd /root \\\n && tar -zxvf boost.tar.gz \\\n && cd boost_${BOOST} \\\n && ./bootstrap.sh --with-libraries=system,date_time,thread \\\n && ./b2 install \\\n && cd /root \\\n && rm -r /root/boost_${BOOST} \\\n && rm /root/boost.tar.gz\nENV SPDLOG=\"1.1.0\"\nRUN curl -o /root/spdlog.tar.gz -SL https://github.com/gabime/spdlog/archive/v${SPDLOG}.tar.gz \\\n && cd /root \\\n && tar -zxvf spdlog.tar.gz \\\n && cd spdlog-${SPDLOG} \\\n && cmake . \\\n && make \\\n && make install \\\n && cd /root \\\n && rm -r spdlog-${SPDLOG} \\\n && rm spdlog.tar.gz\nENV CMAKE_MAJOR=\"3\" \\\n    CMAKE_MINOR=\"14\" \\\n    CMAKE_PATCH=\"1\"\nENV CMAKE=\"${CMAKE_MAJOR}.${CMAKE_MINOR}.${CMAKE_PATCH}\"\nRUN curl -o /root/cmake.tar.gz https://cmake.org/files/v${CMAKE_MAJOR}.${CMAKE_MINOR}/cmake-${CMAKE}.tar.gz \\\n && cd /root \\\n && tar -zxvf cmake.tar.gz \\\n && cd cmake-${CMAKE} \\\n && cmake . \\\n && make \\\n && make install \\\n && cd /root \\\n && rm -r cmake-${CMAKE} \\\n && rm cmake.tar.gz\nENV GTEST=\"1.8.1\"\nRUN curl -o /root/gtest.tar.gz https://codeload.github.com/google/googletest/tar.gz/release-${GTEST} \\\n && cd /root \\\n && tar -zxvf gtest.tar.gz \\\n && cd googletest-release-${GTEST} \\\n && cmake . \\\n && make \\\n && make install \\\n && cd /root \\\n && rm -r googletest-release-${GTEST} \\\n && rm gtest.tar.gz\nENV ZEROMQ=\"4.3.0\"\nRUN curl -o /root/zeromq.tar.gz -SL https://github.com/zeromq/libzmq/releases/download/v${ZEROMQ}/zeromq-${ZEROMQ}.tar.gz \\\n && cd /root \\\n && tar -zxvf zeromq.tar.gz \\\n && cd zeromq-${ZEROMQ} \\\n && mkdir build \\\n && cd build \\\n && cmake .. \\\n && make -j4 install \\\n && cd /root \\\n && rm -r zeromq-${ZEROMQ} \\\n && rm zeromq.tar.gz\nRUN curl -o /root/cppzmq.tar.gz -SL https://github.com/zeromq/cppzmq/archive/v${ZEROMQ}.tar.gz \\\n && cd /root \\\n && tar -zxvf cppzmq.tar.gz \\\n && cd cppzmq-${ZEROMQ} \\\n && mkdir build \\\n && cd build \\\n && cmake .. \\\n && make -j4 install \\\n && cd /root \\\n && rm -r cppzmq-${ZEROMQ} \\\n && rm cppzmq.tar.gz\nENV CRYPTOPP=\"8_1_0\"\nRUN curl -o /root/cryptopp.tar.gz -SL https://github.com/weidai11/cryptopp/archive/CRYPTOPP_${CRYPTOPP}.tar.gz \\\n && curl -o /root/cryptopp_pem.zip -SL https://github.com/noloader/cryptopp-pem/archive/master.zip \\\n && cd /root \\\n && tar -zxvf cryptopp.tar.gz \\\n && unzip -a cryptopp_pem.zip \\\n && cp -r /root/cryptopp-pem-master/. /root/cryptopp-CRYPTOPP_${CRYPTOPP} \\\n && cd cryptopp-CRYPTOPP_${CRYPTOPP} \\\n && make -j4 \\\n && make install \\\n && cd /root \\\n && rm -r cryptopp-CRYPTOPP_${CRYPTOPP} \\\n && rm -r cryptopp-pem-master \\\n && rm cryptopp.tar.gz \\\n && rm cryptopp_pem.zip\nRUN mkdir -p /app\nADD . /app\nRUN cd /app \\\n && cmake -H. -B_build \\\n && cd _build \\\n && make -j4 \\\n && make install\nVOLUME /build\nENTRYPOINT [\"./app/run.sh\"]\nCMD []\n","injectedSmells":[],"originalDockerfileHash":"569b249b7cd048692bbb91d0a0515a7b","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:16.04\nMAINTAINER Alex Harrington <alex@springsignage.com>\nRUN DEBIAN_FRONTEND=noninteractive apt-get update \\\n && apt-get install software-properties-common -y\nRUN DEBIAN_FRONTEND=noninteractive add-apt-repository ppa:ubuntu-toolchain-r/test \\\n && apt-get update\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y software-properties-common cmake\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y libgtkmm-3.0-dev libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev libgstreamer-plugins-bad1.0-dev gstreamer1.0-libav libwebkitgtk-3.0-dev gstreamer1.0-tools\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y mesa-common-dev libgl1-mesa-dev libgles2-mesa-dev build-essential autoconf autogen libtool\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y curl libxml-parser-perl git g++-8 libffi-dev libmount-dev libssl-dev unzip\nRUN update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 90\nRUN update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 90\nENV MMCOMMON=\"0.9.10\"\nRUN curl -o /root/mm-common.tar.gz -SL https://github.com/GNOME/mm-common/archive/${MMCOMMON}.tar.gz \\\n && cd /root \\\n && tar -zxvf mm-common.tar.gz \\\n && cd mm-common-${MMCOMMON} \\\n && ./autogen.sh \\\n && make \\\n && make install \\\n && cd /root \\\n && rm -r /root/mm-common-${MMCOMMON} \\\n && rm /root/mm-common.tar.gz\nENV SIGC=\"2.10.0\"\nRUN ACLOCAL_PATH=\"/usr/local/share/aclocal\" \\\n && export ACLOCAL_PATH \\\n && curl -o /root/libsigcplusplus.tar.gz -SL https://github.com/libsigcplusplus/libsigcplusplus/archive/${SIGC}.tar.gz \\\n && cd /root \\\n && tar -zxvf libsigcplusplus.tar.gz \\\n && cd libsigcplusplus-${SIGC} \\\n && ./autogen.sh \\\n && make \\\n && make install \\\n && cd /root \\\n && rm -r /root/libsigcplusplus-${SIGC} \\\n && rm /root/libsigcplusplus.tar.gz\nENV GLIB=\"2.56.1\"\nRUN curl -o /root/glib.tar.gz -SL https://github.com/GNOME/glib/archive/${GLIB}.tar.gz \\\n && cd /root \\\n && tar -zxvf glib.tar.gz \\\n && cd glib-${GLIB} \\\n && ./autogen.sh \\\n && make \\\n && make install \\\n && cd /root \\\n && rm -r /root/glib-${GLIB} \\\n && rm /root/glib.tar.gz\nENV GLIBMM=\"2.56.0\"\nRUN ACLOCAL_PATH=\"/usr/local/share/aclocal\" \\\n && export ACLOCAL_PATH \\\n && curl -o /root/glibmm.tar.gz -SL https://github.com/GNOME/glibmm/archive/${GLIBMM}.tar.gz \\\n && cd /root \\\n && tar -zxvf glibmm.tar.gz \\\n && cd glibmm-${GLIBMM} \\\n && ./autogen.sh \\\n && make \\\n && make install \\\n && cd /root \\\n && rm -r /root/glibmm-${GLIBMM} \\\n && rm /root/glibmm.tar.gz\nENV BOOST_MAJOR=\"1\" \\\n    BOOST_MINOR=\"69\"\nENV BOOST=\"${BOOST_MAJOR}_${BOOST_MINOR}_0\"\nRUN curl -o /root/boost.tar.gz -SL https://dl.bintray.com/boostorg/release/${BOOST_MAJOR}.${BOOST_MINOR}.0/source/boost_${BOOST}.tar.gz \\\n && cd /root \\\n && tar -zxvf boost.tar.gz \\\n && cd boost_${BOOST} \\\n && ./bootstrap.sh --with-libraries=system,date_time,thread \\\n && ./b2 install \\\n && cd /root \\\n && rm -r /root/boost_${BOOST} \\\n && rm /root/boost.tar.gz\nENV SPDLOG=\"1.1.0\"\nRUN curl -o /root/spdlog.tar.gz -SL https://github.com/gabime/spdlog/archive/v${SPDLOG}.tar.gz \\\n && cd /root \\\n && tar -zxvf spdlog.tar.gz \\\n && cd spdlog-${SPDLOG} \\\n && cmake . \\\n && make \\\n && make install \\\n && cd /root \\\n && rm -r spdlog-${SPDLOG} \\\n && rm spdlog.tar.gz\nENV CMAKE_MAJOR=\"3\" \\\n    CMAKE_MINOR=\"14\" \\\n    CMAKE_PATCH=\"1\"\nENV CMAKE=\"${CMAKE_MAJOR}.${CMAKE_MINOR}.${CMAKE_PATCH}\"\nRUN curl -o /root/cmake.tar.gz https://cmake.org/files/v${CMAKE_MAJOR}.${CMAKE_MINOR}/cmake-${CMAKE}.tar.gz \\\n && cd /root \\\n && tar -zxvf cmake.tar.gz \\\n && cd cmake-${CMAKE} \\\n && cmake . \\\n && make \\\n && make install \\\n && cd /root \\\n && rm -r cmake-${CMAKE} \\\n && rm cmake.tar.gz\nENV GTEST=\"1.8.1\"\nRUN curl -o /root/gtest.tar.gz https://codeload.github.com/google/googletest/tar.gz/release-${GTEST} \\\n && cd /root \\\n && tar -zxvf gtest.tar.gz \\\n && cd googletest-release-${GTEST} \\\n && cmake . \\\n && make \\\n && make install \\\n && cd /root \\\n && rm -r googletest-release-${GTEST} \\\n && rm gtest.tar.gz\nENV ZEROMQ=\"4.3.0\"\nRUN curl -o /root/zeromq.tar.gz -SL https://github.com/zeromq/libzmq/releases/download/v${ZEROMQ}/zeromq-${ZEROMQ}.tar.gz \\\n && cd /root \\\n && tar -zxvf zeromq.tar.gz \\\n && cd zeromq-${ZEROMQ} \\\n && mkdir build \\\n && cd build \\\n && cmake .. \\\n && make -j4 install \\\n && cd /root \\\n && rm -r zeromq-${ZEROMQ} \\\n && rm zeromq.tar.gz\nRUN curl -o /root/cppzmq.tar.gz -SL https://github.com/zeromq/cppzmq/archive/v${ZEROMQ}.tar.gz \\\n && cd /root \\\n && tar -zxvf cppzmq.tar.gz \\\n && cd cppzmq-${ZEROMQ} \\\n && mkdir build \\\n && cd build \\\n && cmake .. \\\n && make -j4 install \\\n && cd /root \\\n && rm -r cppzmq-${ZEROMQ} \\\n && rm cppzmq.tar.gz\nENV CRYPTOPP=\"8_1_0\"\nRUN curl -o /root/cryptopp.tar.gz -SL https://github.com/weidai11/cryptopp/archive/CRYPTOPP_${CRYPTOPP}.tar.gz \\\n && curl -o /root/cryptopp_pem.zip -SL https://github.com/noloader/cryptopp-pem/archive/master.zip \\\n && cd /root \\\n && tar -zxvf cryptopp.tar.gz \\\n && unzip -a cryptopp_pem.zip \\\n && cp -r /root/cryptopp-pem-master/. /root/cryptopp-CRYPTOPP_${CRYPTOPP} \\\n && cd cryptopp-CRYPTOPP_${CRYPTOPP} \\\n && make -j4 \\\n && make install \\\n && cd /root \\\n && rm -r cryptopp-CRYPTOPP_${CRYPTOPP} \\\n && rm -r cryptopp-pem-master \\\n && rm cryptopp.tar.gz \\\n && rm cryptopp_pem.zip\nRUN mkdir -p /app\nADD . /app\nRUN cd /app \\\n && cmake -H. -B_build \\\n && cd _build \\\n && make -j4 \\\n && make install\nVOLUME /build\nENTRYPOINT [\"./app/run.sh\"]\nCMD []\n","originalDockerfileUglifiedHash":"569b249b7cd048692bbb91d0a0515a7b","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/e15138d2d42e1eaa5cdfac110ae40e666c940e30.dockerfile"}