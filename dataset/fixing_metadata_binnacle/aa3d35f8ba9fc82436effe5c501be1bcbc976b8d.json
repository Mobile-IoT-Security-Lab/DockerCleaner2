{"seed":170404157,"processedDockerfileHash":"066afa84b0e5137a7dd18d289c5bf3ca","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM debian:stretch\nENV LANG=\"C.UTF-8\"\nENV LANGUAGE=\"C.UTF-8\"\nENV LC_ALL=\"C.UTF-8\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends cmake=3.7.2-1 git=1:2.11.0-3+deb9u7 build-essential=12.3 curl=7.52.1-5+deb9u16 libboost-all-dev=1.62.0.1 libpcre3-dev=2:8.39-3 zlib1g-dev=1:1.2.8.dfsg-5+deb9u1 libgcrypt11-dev=1.5.4-3+really1.7.6-2+deb9u4 libicu-dev=57.1-6+deb9u5 python=2.7.13-2 libssl-dev=1.1.0l-1~deb9u6 libyajl-dev=2.1.0-2+b3 autoconf=2.69-10 automake=1:1.15-6 pkg-config=0.29-4+b1 net-tools=1.60+git20161116.90da8a0-1 -y \\\n && rm -rf /var/lib/apt/lists/*\n#   Google Test\nENV GTEST_ROOT=\"/opt/gtest\"\nARG GTEST_VER=release-1.8.1\nRUN mkdir -p ${GTEST_ROOT} \\\n && cd /tmp \\\n && curl -o gtest.tar.gz -L https://github.com/google/googletest/archive/${GTEST_VER}.tar.gz \\\n && tar -zxvf gtest.tar.gz --strip-components=1 -C ${GTEST_ROOT} \\\n && rm gtest.tar.gz\nARG PARALLEL=2\nWORKDIR /app/deps\nARG CPPCMS_VERSION=\"1.2.0\"\nRUN curl -o cppcms-${CPPCMS_VERSION}.tar.bz -L \"https://sourceforge.net/projects/cppcms/files/cppcms/${CPPCMS_VERSION}/cppcms-${CPPCMS_VERSION}.tar.bz2/download\" \\\n && tar -xjvf cppcms-${CPPCMS_VERSION}.tar.bz \\\n && mkdir cppcms-${CPPCMS_VERSION}/build \\\n && cd cppcms-${CPPCMS_VERSION}/build \\\n && cmake .. \\\n && make -j ${PARALLEL} \\\n && make install \\\n && cd /app/deps \\\n && rm -Rf cppcms-${CPPCMS_VERSION}\nARG JANSSON_VERSION=\"2.11\"\nRUN curl -O http://www.digip.org/jansson/releases/jansson-${JANSSON_VERSION}.tar.gz \\\n && tar -xvzf jansson-${JANSSON_VERSION}.tar.gz \\\n && cd jansson-${JANSSON_VERSION} \\\n && mkdir build \\\n && cd build \\\n && cmake .. \\\n && make -j ${PARALLEL} \\\n && make check \\\n && make install \\\n && cd /app/deps \\\n && rm -Rf jansson-${JANSSON_VERSION}\nARG LIBJWT_VERSION=\"1.9.0\"\nRUN curl -o libjwt-v${LIBJWT_VERSION}.tar.gz -L \"https://github.com/benmcollins/libjwt/archive/v${LIBJWT_VERSION}.tar.gz\" \\\n && tar -xvzf libjwt-v${LIBJWT_VERSION}.tar.gz \\\n && cd libjwt-${LIBJWT_VERSION} \\\n && autoreconf -i \\\n && ./configure \\\n && make -j ${PARALLEL} all \\\n && make install \\\n && cd /app/deps \\\n && rm -Rf libjwt-${LIBJWT_VERSION}\n#   start build of kdb\nENV C_FLAGS=\"-D_FORTIFY_SOURCE=2 -Wformat -Werror=format-security -fstack-protector-strong -Wstack-protector -fPIE -pie\"\nWORKDIR /app/kdb\nCOPY . /app/kdb/\nRUN ldconfig \\\n && mkdir build \\\n && cd build \\\n && cmake -DENABLE_ASAN=ON -DBUILD_FULL=OFF -DBUILD_SHARED=ON -DBUILD_STATIC=OFF -DBUILD_DOCUMENTATION=OFF -DINSTALL_SYSTEM_FILES=OFF -DPLUGINS=\"ALL;-EXPERIMENTAL;-fstab;-ruby;-lua;-python;-xerces;-yamlcpp;-python2;file;camel;yajl\" -DTOOLS=\"kdb;rest-backend\" -DCMAKE_C_FLAGS=\"$C_FLAGS\" -DCMAKE_CXX_FLAGS=\"$C_FLAGS\" -DCMAKE_EXE_LINKER_FLAGS=\"-Wl,-z,now -Wl,-z,relro\" .. \\\n && make -j ${PARALLEL} \\\n && ctest -T Test --output-on-failure -j ${PARALLEL} -LE kdbtests \\\n && make install\nFROM debian:stretch\nENV LANG=\"C.UTF-8\"\nENV LANGUAGE=\"C.UTF-8\"\nENV LC_ALL=\"C.UTF-8\"\nCOPY --from=0 /usr/local /usr/local\nRUN echo '/usr/local/lib/elektra/' > /etc/ld.so.conf.d/elektra.conf \\\n && ldconfig\nRUN apt-get update \\\n && apt-get install --no-install-recommends libasan3=6.3.0-18+deb9u1 libubsan0=6.3.0-18+deb9u1 libboost-system1.62.0=1.62.0+dfsg-4 libboost-filesystem1.62.0=1.62.0+dfsg-4 libboost-thread1.62.0=1.62.0+dfsg-4 libssl1.1=1.1.0l-1~deb9u6 libicu57=57.1-6+deb9u5 libyajl2=2.1.0-2+b3 pwgen=2.07-1.1+b1 -y \\\n && rm -rf /var/lib/apt/lists/*\n#   prepare\n#   asan errors in mount-rest-backend-config and run-rest-backend\nRUN kdb global-mount \\\n && kdb mount-rest-backend-config || /bin/true \\\n && kdb set -N system /sw/elektra/restbackend/#0/current/backend/jwt/encryption/secret `pwgen -1cns 30 ` \\\n && kdb set -N system /sw/elektra/restbackend/#0/current/cppcms/service/api \"http\" \\\n && kdb set -N system /sw/elektra/restbackend/#0/current/cppcms/service/ip \"0.0.0.0\" \\\n && kdb set -N system /sw/elektra/restbackend/#0/current/cppcms/service/port 8080 \\\n && kdb set -N system /sw/elektra/restbackend/#0/current/cppcms/http/script_names/#0 \"/\" \\\n && kdb set '/sw/elektra/restbackend/#0/current/cppcms/daemon/enable' '0' \\\n && kdb set '/sw/elektra/restbackend/#0/current/cppcms/logging/level' 'debug'\nENTRYPOINT [\"kdb\"]\nCMD [\"run-rest-backend\"]\nEXPOSE 8080/tcp\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM debian:stretch\nENV LANG=\"C.UTF-8\"\nENV LANGUAGE=\"C.UTF-8\"\nENV LC_ALL=\"C.UTF-8\"\nRUN apt-get update \\\n && apt-get install cmake git build-essential curl libboost-all-dev libpcre3-dev zlib1g-dev libgcrypt11-dev libicu-dev python libssl-dev libyajl-dev autoconf automake pkg-config net-tools -y \\\n && rm -rf /var/lib/apt/lists/*\n#  Google Test\nENV GTEST_ROOT=\"/opt/gtest\"\nARG GTEST_VER=release-1.8.1\nRUN mkdir -p ${GTEST_ROOT} \\\n && cd /tmp \\\n && curl -o gtest.tar.gz -L https://github.com/google/googletest/archive/${GTEST_VER}.tar.gz \\\n && tar -zxvf gtest.tar.gz --strip-components=1 -C ${GTEST_ROOT} \\\n && rm gtest.tar.gz\nARG PARALLEL=2\nWORKDIR /app/deps\nARG CPPCMS_VERSION=\"1.2.0\"\nRUN curl -o cppcms-${CPPCMS_VERSION}.tar.bz -L \"https://sourceforge.net/projects/cppcms/files/cppcms/${CPPCMS_VERSION}/cppcms-${CPPCMS_VERSION}.tar.bz2/download\" \\\n && tar -xjvf cppcms-${CPPCMS_VERSION}.tar.bz \\\n && mkdir cppcms-${CPPCMS_VERSION}/build \\\n && cd cppcms-${CPPCMS_VERSION}/build \\\n && cmake .. \\\n && make -j ${PARALLEL} \\\n && make install \\\n && cd /app/deps \\\n && rm -Rf cppcms-${CPPCMS_VERSION}\nARG JANSSON_VERSION=\"2.11\"\nRUN curl -O http://www.digip.org/jansson/releases/jansson-${JANSSON_VERSION}.tar.gz \\\n && tar -xvzf jansson-${JANSSON_VERSION}.tar.gz \\\n && cd jansson-${JANSSON_VERSION} \\\n && mkdir build \\\n && cd build \\\n && cmake .. \\\n && make -j ${PARALLEL} \\\n && make check \\\n && make install \\\n && cd /app/deps \\\n && rm -Rf jansson-${JANSSON_VERSION}\nARG LIBJWT_VERSION=\"1.9.0\"\nRUN curl -o libjwt-v${LIBJWT_VERSION}.tar.gz -L \"https://github.com/benmcollins/libjwt/archive/v${LIBJWT_VERSION}.tar.gz\" \\\n && tar -xvzf libjwt-v${LIBJWT_VERSION}.tar.gz \\\n && cd libjwt-${LIBJWT_VERSION} \\\n && autoreconf -i \\\n && ./configure \\\n && make -j ${PARALLEL} all \\\n && make install \\\n && cd /app/deps \\\n && rm -Rf libjwt-${LIBJWT_VERSION}\n#  start build of kdb\nENV C_FLAGS=\"-D_FORTIFY_SOURCE=2 -Wformat -Werror=format-security -fstack-protector-strong -Wstack-protector -fPIE -pie\"\nWORKDIR /app/kdb\nADD . /app/kdb/\nRUN ldconfig \\\n && mkdir build \\\n && cd build \\\n && cmake -DENABLE_ASAN=ON -DBUILD_FULL=OFF -DBUILD_SHARED=ON -DBUILD_STATIC=OFF -DBUILD_DOCUMENTATION=OFF -DINSTALL_SYSTEM_FILES=OFF -DPLUGINS=\"ALL;-EXPERIMENTAL;-fstab;-ruby;-lua;-python;-xerces;-yamlcpp;-python2;file;camel;yajl\" -DTOOLS=\"kdb;rest-backend\" -DCMAKE_C_FLAGS=\"$C_FLAGS\" -DCMAKE_CXX_FLAGS=\"$C_FLAGS\" -DCMAKE_EXE_LINKER_FLAGS=\"-Wl,-z,now -Wl,-z,relro\" .. \\\n && make -j ${PARALLEL} \\\n && ctest -T Test --output-on-failure -j ${PARALLEL} -LE kdbtests \\\n && make install\nFROM debian:stretch\nENV LANG=\"C.UTF-8\"\nENV LANGUAGE=\"C.UTF-8\"\nENV LC_ALL=\"C.UTF-8\"\nCOPY --from=0 /usr/local /usr/local\nRUN echo '/usr/local/lib/elektra/' > /etc/ld.so.conf.d/elektra.conf \\\n && ldconfig\nRUN apt-get update \\\n && apt-get install libasan3 libubsan0 libboost-system1.62.0 libboost-filesystem1.62.0 libboost-thread1.62.0 libssl1.1 libicu57 libyajl2 pwgen -y \\\n && rm -rf /var/lib/apt/lists/*\n#  prepare\n#  asan errors in mount-rest-backend-config and run-rest-backend\nRUN kdb global-mount \\\n && kdb mount-rest-backend-config || /bin/true \\\n && kdb set -N system /sw/elektra/restbackend/#0/current/backend/jwt/encryption/secret `pwgen -1cns 30 ` \\\n && kdb set -N system /sw/elektra/restbackend/#0/current/cppcms/service/api \"http\" \\\n && kdb set -N system /sw/elektra/restbackend/#0/current/cppcms/service/ip \"0.0.0.0\" \\\n && kdb set -N system /sw/elektra/restbackend/#0/current/cppcms/service/port 8080 \\\n && kdb set -N system /sw/elektra/restbackend/#0/current/cppcms/http/script_names/#0 \"/\" \\\n && kdb set '/sw/elektra/restbackend/#0/current/cppcms/daemon/enable' '0' \\\n && kdb set '/sw/elektra/restbackend/#0/current/cppcms/logging/level' 'debug'\nENTRYPOINT [\"kdb\"]\nCMD [\"run-rest-backend\"]\nEXPOSE 8080/tcp\n","injectedSmells":[],"originalDockerfileHash":"76c80aeeb376652d7478b0c60a28293d","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM debian:stretch\nENV LANG=\"C.UTF-8\"\nENV LANGUAGE=\"C.UTF-8\"\nENV LC_ALL=\"C.UTF-8\"\nRUN apt-get update \\\n && apt-get install cmake git build-essential curl libboost-all-dev libpcre3-dev zlib1g-dev libgcrypt11-dev libicu-dev python libssl-dev libyajl-dev autoconf automake pkg-config net-tools -y \\\n && rm -rf /var/lib/apt/lists/*\n#   Google Test\nENV GTEST_ROOT=\"/opt/gtest\"\nARG GTEST_VER=release-1.8.1\nRUN mkdir -p ${GTEST_ROOT} \\\n && cd /tmp \\\n && curl -o gtest.tar.gz -L https://github.com/google/googletest/archive/${GTEST_VER}.tar.gz \\\n && tar -zxvf gtest.tar.gz --strip-components=1 -C ${GTEST_ROOT} \\\n && rm gtest.tar.gz\nARG PARALLEL=2\nWORKDIR /app/deps\nARG CPPCMS_VERSION=\"1.2.0\"\nRUN curl -o cppcms-${CPPCMS_VERSION}.tar.bz -L \"https://sourceforge.net/projects/cppcms/files/cppcms/${CPPCMS_VERSION}/cppcms-${CPPCMS_VERSION}.tar.bz2/download\" \\\n && tar -xjvf cppcms-${CPPCMS_VERSION}.tar.bz \\\n && mkdir cppcms-${CPPCMS_VERSION}/build \\\n && cd cppcms-${CPPCMS_VERSION}/build \\\n && cmake .. \\\n && make -j ${PARALLEL} \\\n && make install \\\n && cd /app/deps \\\n && rm -Rf cppcms-${CPPCMS_VERSION}\nARG JANSSON_VERSION=\"2.11\"\nRUN curl -O http://www.digip.org/jansson/releases/jansson-${JANSSON_VERSION}.tar.gz \\\n && tar -xvzf jansson-${JANSSON_VERSION}.tar.gz \\\n && cd jansson-${JANSSON_VERSION} \\\n && mkdir build \\\n && cd build \\\n && cmake .. \\\n && make -j ${PARALLEL} \\\n && make check \\\n && make install \\\n && cd /app/deps \\\n && rm -Rf jansson-${JANSSON_VERSION}\nARG LIBJWT_VERSION=\"1.9.0\"\nRUN curl -o libjwt-v${LIBJWT_VERSION}.tar.gz -L \"https://github.com/benmcollins/libjwt/archive/v${LIBJWT_VERSION}.tar.gz\" \\\n && tar -xvzf libjwt-v${LIBJWT_VERSION}.tar.gz \\\n && cd libjwt-${LIBJWT_VERSION} \\\n && autoreconf -i \\\n && ./configure \\\n && make -j ${PARALLEL} all \\\n && make install \\\n && cd /app/deps \\\n && rm -Rf libjwt-${LIBJWT_VERSION}\n#   start build of kdb\nENV C_FLAGS=\"-D_FORTIFY_SOURCE=2 -Wformat -Werror=format-security -fstack-protector-strong -Wstack-protector -fPIE -pie\"\nWORKDIR /app/kdb\nADD . /app/kdb/\nRUN ldconfig \\\n && mkdir build \\\n && cd build \\\n && cmake -DENABLE_ASAN=ON -DBUILD_FULL=OFF -DBUILD_SHARED=ON -DBUILD_STATIC=OFF -DBUILD_DOCUMENTATION=OFF -DINSTALL_SYSTEM_FILES=OFF -DPLUGINS=\"ALL;-EXPERIMENTAL;-fstab;-ruby;-lua;-python;-xerces;-yamlcpp;-python2;file;camel;yajl\" -DTOOLS=\"kdb;rest-backend\" -DCMAKE_C_FLAGS=\"$C_FLAGS\" -DCMAKE_CXX_FLAGS=\"$C_FLAGS\" -DCMAKE_EXE_LINKER_FLAGS=\"-Wl,-z,now -Wl,-z,relro\" .. \\\n && make -j ${PARALLEL} \\\n && ctest -T Test --output-on-failure -j ${PARALLEL} -LE kdbtests \\\n && make install\nFROM debian:stretch\nENV LANG=\"C.UTF-8\"\nENV LANGUAGE=\"C.UTF-8\"\nENV LC_ALL=\"C.UTF-8\"\nCOPY --from=0 /usr/local /usr/local\nRUN echo '/usr/local/lib/elektra/' > /etc/ld.so.conf.d/elektra.conf \\\n && ldconfig\nRUN apt-get update \\\n && apt-get install libasan3 libubsan0 libboost-system1.62.0 libboost-filesystem1.62.0 libboost-thread1.62.0 libssl1.1 libicu57 libyajl2 pwgen -y \\\n && rm -rf /var/lib/apt/lists/*\n#   prepare\n#   asan errors in mount-rest-backend-config and run-rest-backend\nRUN kdb global-mount \\\n && kdb mount-rest-backend-config || /bin/true \\\n && kdb set -N system /sw/elektra/restbackend/#0/current/backend/jwt/encryption/secret `pwgen -1cns 30 ` \\\n && kdb set -N system /sw/elektra/restbackend/#0/current/cppcms/service/api \"http\" \\\n && kdb set -N system /sw/elektra/restbackend/#0/current/cppcms/service/ip \"0.0.0.0\" \\\n && kdb set -N system /sw/elektra/restbackend/#0/current/cppcms/service/port 8080 \\\n && kdb set -N system /sw/elektra/restbackend/#0/current/cppcms/http/script_names/#0 \"/\" \\\n && kdb set '/sw/elektra/restbackend/#0/current/cppcms/daemon/enable' '0' \\\n && kdb set '/sw/elektra/restbackend/#0/current/cppcms/logging/level' 'debug'\nENTRYPOINT [\"kdb\"]\nCMD [\"run-rest-backend\"]\nEXPOSE 8080/tcp\n","originalDockerfileUglifiedHash":"3e6fd054ad2a98065eadf9580483fb11","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/aa3d35f8ba9fc82436effe5c501be1bcbc976b8d.dockerfile"}