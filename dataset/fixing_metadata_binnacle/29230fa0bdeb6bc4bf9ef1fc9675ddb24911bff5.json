{"seed":372640214,"processedDockerfileHash":"50ff470e79360c137773760367a72c26","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-gem","pin-package-manager-versions-apk","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM mhart/alpine-node:latest\n#   skip installing gem documentation\nRUN mkdir -p /usr/local/etc \\\n && { echo 'install: --no-document' ;echo 'update: --no-document' ; } >> /usr/local/etc/gemrc\nENV RUBY_MAJOR=\"2.1\"\nENV RUBY_VERSION=\"2.1.10\"\nENV RUBY_DOWNLOAD_SHA256=\"fb2e454d7a5e5a39eb54db0ec666f53eeb6edc593d1d2b970ae4d150b831dd20\"\nENV RUBYGEMS_VERSION=\"2.6.7\"\n#   some of ruby's build scripts are written in ruby\n#     we purge system ruby later to make sure our final image uses what we just built\n#   readline-dev vs libedit-dev: https://bugs.ruby-lang.org/issues/11869 and https://github.com/docker-library/ruby/issues/75\nRUN set -ex \\\n && apk add autoconf=2.71-r1 bison=3.8.2-r0 bzip2=1.0.8-r4 bzip2-dev=1.0.8-r4 ca-certificates=20220614-r4 coreutils=9.1-r0 gcc=12.2.1_git20220924-r4 gdbm-dev=1.23-r0 glib-dev=2.74.6-r0 libc-dev=0.7.2-r3 libffi-dev=3.4.4-r0 libxml2-dev=2.10.4-r0 libxslt-dev=1.1.37-r1 linux-headers=5.19.5-r0 make=4.3-r1 ncurses-dev=6.3_p20221119-r0 openssl=3.0.8-r3 libressl-dev=3.6.2-r0 procps=3.3.17-r2 readline-dev=8.2.0-r0 ruby=3.1.4-r0 tar=1.34-r2 yaml-dev=0.2.5-r0 zlib-dev=1.2.13-r0 --no-cache --virtual .ruby-builddeps \\\n && wget -O ruby.tar.gz \"https://cache.ruby-lang.org/pub/ruby/$RUBY_MAJOR/ruby-$RUBY_VERSION.tar.gz\" \\\n && echo \"$RUBY_DOWNLOAD_SHA256 *ruby.tar.gz\" | sha256sum -c - \\\n && mkdir -p /usr/src/ruby \\\n && tar -xzf ruby.tar.gz -C /usr/src/ruby --strip-components=1 \\\n && rm ruby.tar.gz \\\n && cd /usr/src/ruby \\\n && { echo '#define ENABLE_PATH_CHECK 0' ;echo ;cat file.c ; } > file.c.new \\\n && mv file.c.new file.c \\\n && autoconf \\\n && ac_cv_func_isnan=yes ac_cv_func_isinf=yes ./configure --disable-install-doc \\\n && make -j\"$( getconf _NPROCESSORS_ONLN ;)\" \\\n && make install \\\n && runDeps=\"$( scanelf --needed --nobanner --recursive /usr/local | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }' | sort -u | xargs -r apk info --installed | sort -u ;)\" \\\n && apk add bzip2=1.0.8-r4 ca-certificates=20220614-r4 libffi-dev=3.4.4-r0 libressl-dev=3.6.2-r0 yaml-dev=0.2.5-r0 procps=3.3.17-r2 zlib-dev=1.2.13-r0 $runDeps --virtual .ruby-rundeps \\\n && apk del .ruby-builddeps \\\n && cd / \\\n && rm -r /usr/src/ruby \\\n && gem update --system \"$RUBYGEMS_VERSION\"\nENV BUNDLER_VERSION=\"1.13.2\"\nRUN gem install bundler --version 2.4.12\n#   install things globally, for great justice\n#   and don't create \".bundle\" in all our apps\nENV GEM_HOME=\"/usr/local/bundle\"\nENV BUNDLE_PATH=\"$GEM_HOME\" \\\n    BUNDLE_BIN=\"$GEM_HOME/bin\" \\\n    BUNDLE_SILENCE_ROOT_WARNING=\"1\" \\\n    BUNDLE_APP_CONFIG=\"$GEM_HOME\"\nENV PATH=\"$BUNDLE_BIN:$PATH\"\nRUN mkdir -p \"$GEM_HOME\" \"$BUNDLE_BIN\" \\\n && chmod 777 \"$GEM_HOME\" \"$BUNDLE_BIN\"\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM mhart/alpine-node:latest\n#  skip installing gem documentation\nRUN mkdir -p /usr/local/etc \\\n && { echo 'install: --no-document' ;echo 'update: --no-document' ; } >> /usr/local/etc/gemrc\nENV RUBY_MAJOR=\"2.1\"\nENV RUBY_VERSION=\"2.1.10\"\nENV RUBY_DOWNLOAD_SHA256=\"fb2e454d7a5e5a39eb54db0ec666f53eeb6edc593d1d2b970ae4d150b831dd20\"\nENV RUBYGEMS_VERSION=\"2.6.7\"\n#  some of ruby's build scripts are written in ruby\n#    we purge system ruby later to make sure our final image uses what we just built\n#  readline-dev vs libedit-dev: https://bugs.ruby-lang.org/issues/11869 and https://github.com/docker-library/ruby/issues/75\nRUN set -ex \\\n && apk add --no-cache --virtual .ruby-builddeps autoconf bison bzip2 bzip2-dev ca-certificates coreutils gcc gdbm-dev glib-dev libc-dev libffi-dev libxml2-dev libxslt-dev linux-headers make ncurses-dev openssl libressl-dev procps readline-dev ruby tar yaml-dev zlib-dev \\\n && wget -O ruby.tar.gz \"https://cache.ruby-lang.org/pub/ruby/$RUBY_MAJOR/ruby-$RUBY_VERSION.tar.gz\" \\\n && echo \"$RUBY_DOWNLOAD_SHA256 *ruby.tar.gz\" | sha256sum -c - \\\n && mkdir -p /usr/src/ruby \\\n && tar -xzf ruby.tar.gz -C /usr/src/ruby --strip-components=1 \\\n && rm ruby.tar.gz \\\n && cd /usr/src/ruby \\\n && { echo '#define ENABLE_PATH_CHECK 0' ;echo ;cat file.c ; } > file.c.new \\\n && mv file.c.new file.c \\\n && autoconf \\\n && ac_cv_func_isnan=yes ac_cv_func_isinf=yes ./configure --disable-install-doc \\\n && make -j\"$( getconf _NPROCESSORS_ONLN ;)\" \\\n && make install \\\n && runDeps=\"$( scanelf --needed --nobanner --recursive /usr/local | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }' | sort -u | xargs -r apk info --installed | sort -u ;)\" \\\n && apk add --virtual .ruby-rundeps $runDeps bzip2 ca-certificates libffi-dev libressl-dev yaml-dev procps zlib-dev \\\n && apk del .ruby-builddeps \\\n && cd / \\\n && rm -r /usr/src/ruby \\\n && gem update --system \"$RUBYGEMS_VERSION\"\nENV BUNDLER_VERSION=\"1.13.2\"\nRUN gem install bundler\n#  install things globally, for great justice\n#  and don't create \".bundle\" in all our apps\nENV GEM_HOME=\"/usr/local/bundle\"\nENV BUNDLE_PATH=\"$GEM_HOME\" \\\n    BUNDLE_BIN=\"$GEM_HOME/bin\" \\\n    BUNDLE_SILENCE_ROOT_WARNING=\"1\" \\\n    BUNDLE_APP_CONFIG=\"$GEM_HOME\"\nENV PATH=\"$BUNDLE_BIN:$PATH\"\nRUN mkdir -p \"$GEM_HOME\" \"$BUNDLE_BIN\" \\\n && chmod 777 \"$GEM_HOME\" \"$BUNDLE_BIN\"\n","injectedSmells":[],"originalDockerfileHash":"1e4b3b1cec0926b62ed8ce29163609d6","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM mhart/alpine-node:latest\n#   skip installing gem documentation\nRUN mkdir -p /usr/local/etc \\\n && { echo 'install: --no-document' ;echo 'update: --no-document' ; } >> /usr/local/etc/gemrc\nENV RUBY_MAJOR=\"2.1\"\nENV RUBY_VERSION=\"2.1.10\"\nENV RUBY_DOWNLOAD_SHA256=\"fb2e454d7a5e5a39eb54db0ec666f53eeb6edc593d1d2b970ae4d150b831dd20\"\nENV RUBYGEMS_VERSION=\"2.6.7\"\n#   some of ruby's build scripts are written in ruby\n#     we purge system ruby later to make sure our final image uses what we just built\n#   readline-dev vs libedit-dev: https://bugs.ruby-lang.org/issues/11869 and https://github.com/docker-library/ruby/issues/75\nRUN set -ex \\\n && apk add --no-cache --virtual .ruby-builddeps autoconf bison bzip2 bzip2-dev ca-certificates coreutils gcc gdbm-dev glib-dev libc-dev libffi-dev libxml2-dev libxslt-dev linux-headers make ncurses-dev openssl libressl-dev procps readline-dev ruby tar yaml-dev zlib-dev \\\n && wget -O ruby.tar.gz \"https://cache.ruby-lang.org/pub/ruby/$RUBY_MAJOR/ruby-$RUBY_VERSION.tar.gz\" \\\n && echo \"$RUBY_DOWNLOAD_SHA256 *ruby.tar.gz\" | sha256sum -c - \\\n && mkdir -p /usr/src/ruby \\\n && tar -xzf ruby.tar.gz -C /usr/src/ruby --strip-components=1 \\\n && rm ruby.tar.gz \\\n && cd /usr/src/ruby \\\n && { echo '#define ENABLE_PATH_CHECK 0' ;echo ;cat file.c ; } > file.c.new \\\n && mv file.c.new file.c \\\n && autoconf \\\n && ac_cv_func_isnan=yes ac_cv_func_isinf=yes ./configure --disable-install-doc \\\n && make -j\"$( getconf _NPROCESSORS_ONLN ;)\" \\\n && make install \\\n && runDeps=\"$( scanelf --needed --nobanner --recursive /usr/local | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }' | sort -u | xargs -r apk info --installed | sort -u ;)\" \\\n && apk add --virtual .ruby-rundeps $runDeps bzip2 ca-certificates libffi-dev libressl-dev yaml-dev procps zlib-dev \\\n && apk del .ruby-builddeps \\\n && cd / \\\n && rm -r /usr/src/ruby \\\n && gem update --system \"$RUBYGEMS_VERSION\"\nENV BUNDLER_VERSION=\"1.13.2\"\nRUN gem install bundler\n#   install things globally, for great justice\n#   and don't create \".bundle\" in all our apps\nENV GEM_HOME=\"/usr/local/bundle\"\nENV BUNDLE_PATH=\"$GEM_HOME\" \\\n    BUNDLE_BIN=\"$GEM_HOME/bin\" \\\n    BUNDLE_SILENCE_ROOT_WARNING=\"1\" \\\n    BUNDLE_APP_CONFIG=\"$GEM_HOME\"\nENV PATH=\"$BUNDLE_BIN:$PATH\"\nRUN mkdir -p \"$GEM_HOME\" \"$BUNDLE_BIN\" \\\n && chmod 777 \"$GEM_HOME\" \"$BUNDLE_BIN\"\n","originalDockerfileUglifiedHash":"29c6f66020f9fdaaa0ddbe02bd2c9245","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/29230fa0bdeb6bc4bf9ef1fc9675ddb24911bff5.dockerfile"}