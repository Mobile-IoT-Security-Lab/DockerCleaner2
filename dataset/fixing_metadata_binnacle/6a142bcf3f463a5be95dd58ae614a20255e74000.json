{"seed":3513311909,"processedDockerfileHash":"15ff21fd663696c9fb0f08a8d6d080ad","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM debian:latest\nLABEL maintainer=\"pierre@senellart.com\"\n#   needed to build provsql the tools + libc6-i386 for running c2d\nRUN apt-get update \\\n && apt-get install --no-install-recommends git=1:2.39.2-1ubuntu1 build-essential=12.9ubuntu3 curl=7.88.1-7ubuntu1 libc6-i386=2.37-0ubuntu2 unzip=6.0-27ubuntu1 mercurial=6.3.2-1 libgmp-dev=2:6.2.1+dfsg1-1.1ubuntu1 -y\n#   Specify which version we are building against\nARG PSQL_VERSION=9.6\nENV PSQL_VERSION=\"$PSQL_VERSION\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends postgresql-${PSQL_VERSION} postgresql-server-dev-${PSQL_VERSION} postgresql-contrib-${PSQL_VERSION} -y\n#   Ensure a sane environment\nENV LANG=\"C.UTF-8\" \\\n    LC_ALL=\"C.UTF-8\" \\\n    DEBIAN_FRONTEND=\"noninteractive\"\n#   Ensure that bash is the default shell\nENV SHELL=\"/bin/bash\"\n#  ############################# GETTING ADD-ON TOOLS ##############################   \nRUN mkdir /tmp/tools/\n#   TOOL c2d\nRUN curl 'http://reasoning.cs.ucla.edu/c2d/fetchme.php' -H 'Content-Type: application/x-www-form-urlencoded' --data 'os=Linux+i386&type=&s=&n=Pierre+Senellart+DOCKER&e=pierre@senellart.com&o=ENS' -o /tmp/c2d.zip \\\n && unzip /tmp/c2d.zip -d /tmp/ \\\n && rm /tmp/c2d.zip \\\n && mv /tmp/c2d_linux /tmp/tools/c2d \\\n && chmod a+x /tmp/tools/c2d\n#   TOOL d4\nRUN curl http://www.cril.univ-artois.fr/KC/ressources/d4 -o /tmp/tools/d4 \\\n && chmod a+x /tmp/tools/d4\n#   TOOL dsharp\nRUN cd /tmp/ \\\n && hg clone https://bitbucket.org/haz/dsharp \\\n && cd dsharp \\\n && mv Makefile_gmp Makefile \\\n && make \\\n && mv dsharp /tmp/tools/ \\\n && chmod a+x /tmp/tools/dsharp\n#   mv the additional tools\nRUN bash -c \"mv /tmp/tools/* /usr/local/bin\"\n#  #############################   GETTING  PROVSQL  ##############################   \n#   Add a folder for ProvSQL\nWORKDIR /opt/provsql\n#   Provsql will be built & run as user postgres\nRUN chown postgres:postgres /opt/provsql\nUSER postgres\n#   Getting and building\nRUN git clone https://github.com/PierreSenellart/provsql.git /opt/provsql\nRUN cd /opt/provsql \\\n && make\n#   install provsql\nUSER root\nRUN echo \"shared_preload_libraries = 'provsql'\" >> /etc/postgresql/${PSQL_VERSION}/main/postgresql.conf\nRUN echo \"local all all trust\" > /etc/postgresql/${PSQL_VERSION}/main/pg_hba.conf\nEXPOSE 5432/tcp\nRUN cd /opt/provsql ; make install\nUSER postgres\n#  create a db test\nRUN /etc/init.d/postgresql start \\\n && createuser -s test \\\n && createdb test \\\n && psql -f /opt/provsql/test/sql/setup.sql test test \\\n && psql -f /opt/provsql/test/sql/add_provenance.sql test test \\\n && psql -f /opt/provsql/test/sql/formula.sql test test \\\n && psql -f /opt/provsql/test/sql/security.sql test test \\\n && psql -c \"ALTER ROLE test SET search_path TO public, provsql\"\n#  ############################# FINISHING THE DOCKER  ##############################   \n#  allow access\nRUN echo \"listen_addresses = '*'\" >> /etc/postgresql/${PSQL_VERSION}/main/postgresql.conf\nRUN echo \"host all all 0.0.0.0/0 trust\" >> /etc/postgresql/${PSQL_VERSION}/main/pg_hba.conf\nRUN echo \"host all all ::/0 trust\" >> /etc/postgresql/${PSQL_VERSION}/main/pg_hba.conf\nUSER postgres\nCMD /usr/bin/pg_ctlcluster $PSQL_VERSION main start --foreground\nUSER root\nRUN apt-get update \\\n && apt-get install --no-install-recommends apache2=2.4.55-1ubuntu2 libapache2-mod-php7.0 php7.0-pgsql graphviz=2.42.2-7build3 -y\nCMD /bin/bash /opt/provsql/docker/demo.sh\nEXPOSE 80/tcp\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM debian:latest\nLABEL maintainer=\"pierre@senellart.com\"\n#  needed to build provsql the tools + libc6-i386 for running c2d\nRUN apt-get update \\\n && apt-get install git build-essential curl libc6-i386 unzip mercurial libgmp-dev -y\n#  Specify which version we are building against\nARG PSQL_VERSION=9.6\nENV PSQL_VERSION=\"$PSQL_VERSION\"\nRUN apt-get update \\\n && apt-get install postgresql-${PSQL_VERSION} postgresql-server-dev-${PSQL_VERSION} postgresql-contrib-${PSQL_VERSION} -y\n#  Ensure a sane environment\nENV LANG=\"C.UTF-8\" \\\n    LC_ALL=\"C.UTF-8\" \\\n    DEBIAN_FRONTEND=\"noninteractive\"\n#  Ensure that bash is the default shell\nENV SHELL=\"/bin/bash\"\n# ############################# GETTING ADD-ON TOOLS ##############################   \nRUN mkdir /tmp/tools/\n#  TOOL c2d\nRUN curl 'http://reasoning.cs.ucla.edu/c2d/fetchme.php' -H 'Content-Type: application/x-www-form-urlencoded' --data 'os=Linux+i386&type=&s=&n=Pierre+Senellart+DOCKER&e=pierre@senellart.com&o=ENS' -o /tmp/c2d.zip \\\n && unzip /tmp/c2d.zip -d /tmp/ \\\n && rm /tmp/c2d.zip \\\n && mv /tmp/c2d_linux /tmp/tools/c2d \\\n && chmod a+x /tmp/tools/c2d\n#  TOOL d4\nRUN curl http://www.cril.univ-artois.fr/KC/ressources/d4 -o /tmp/tools/d4 \\\n && chmod a+x /tmp/tools/d4\n#  TOOL dsharp\nRUN cd /tmp/ \\\n && hg clone https://bitbucket.org/haz/dsharp \\\n && cd dsharp \\\n && mv Makefile_gmp Makefile \\\n && make \\\n && mv dsharp /tmp/tools/ \\\n && chmod a+x /tmp/tools/dsharp\n#  mv the additional tools\nRUN bash -c \"mv /tmp/tools/* /usr/local/bin\"\n# #############################   GETTING  PROVSQL  ##############################   \n#  Add a folder for ProvSQL\nWORKDIR /opt/provsql\n#  Provsql will be built & run as user postgres\nRUN chown postgres:postgres /opt/provsql\nUSER postgres\n#  Getting and building\nRUN git clone https://github.com/PierreSenellart/provsql.git /opt/provsql\nRUN cd /opt/provsql \\\n && make\n#  install provsql\nUSER root\nRUN echo \"shared_preload_libraries = 'provsql'\" >> /etc/postgresql/${PSQL_VERSION}/main/postgresql.conf\nRUN echo \"local all all trust\" > /etc/postgresql/${PSQL_VERSION}/main/pg_hba.conf\nEXPOSE 5432/tcp\nRUN cd /opt/provsql ; make install\nUSER postgres\n# create a db test\nRUN /etc/init.d/postgresql start \\\n && createuser -s test \\\n && createdb test \\\n && psql -f /opt/provsql/test/sql/setup.sql test test \\\n && psql -f /opt/provsql/test/sql/add_provenance.sql test test \\\n && psql -f /opt/provsql/test/sql/formula.sql test test \\\n && psql -f /opt/provsql/test/sql/security.sql test test \\\n && psql -c \"ALTER ROLE test SET search_path TO public, provsql\"\n# ############################# FINISHING THE DOCKER  ##############################   \n# allow access\nRUN echo \"listen_addresses = '*'\" >> /etc/postgresql/${PSQL_VERSION}/main/postgresql.conf\nRUN echo \"host all all 0.0.0.0/0 trust\" >> /etc/postgresql/${PSQL_VERSION}/main/pg_hba.conf\nRUN echo \"host all all ::/0 trust\" >> /etc/postgresql/${PSQL_VERSION}/main/pg_hba.conf\nUSER postgres\nCMD /usr/bin/pg_ctlcluster $PSQL_VERSION main start --foreground\nUSER root\nRUN apt-get update \\\n && apt-get install apache2 libapache2-mod-php7.0 php7.0-pgsql graphviz -y\nCMD /bin/bash /opt/provsql/docker/demo.sh\nEXPOSE 80/tcp\n","injectedSmells":[],"originalDockerfileHash":"42587d6a20de76f459e59159d168e2a5","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM debian:latest\nLABEL maintainer=\"pierre@senellart.com\"\n#   needed to build provsql the tools + libc6-i386 for running c2d\nRUN apt-get update \\\n && apt-get install git build-essential curl libc6-i386 unzip mercurial libgmp-dev -y\n#   Specify which version we are building against\nARG PSQL_VERSION=9.6\nENV PSQL_VERSION=\"$PSQL_VERSION\"\nRUN apt-get update \\\n && apt-get install postgresql-${PSQL_VERSION} postgresql-server-dev-${PSQL_VERSION} postgresql-contrib-${PSQL_VERSION} -y\n#   Ensure a sane environment\nENV LANG=\"C.UTF-8\" \\\n    LC_ALL=\"C.UTF-8\" \\\n    DEBIAN_FRONTEND=\"noninteractive\"\n#   Ensure that bash is the default shell\nENV SHELL=\"/bin/bash\"\n#  ############################# GETTING ADD-ON TOOLS ##############################   \nRUN mkdir /tmp/tools/\n#   TOOL c2d\nRUN curl 'http://reasoning.cs.ucla.edu/c2d/fetchme.php' -H 'Content-Type: application/x-www-form-urlencoded' --data 'os=Linux+i386&type=&s=&n=Pierre+Senellart+DOCKER&e=pierre@senellart.com&o=ENS' -o /tmp/c2d.zip \\\n && unzip /tmp/c2d.zip -d /tmp/ \\\n && rm /tmp/c2d.zip \\\n && mv /tmp/c2d_linux /tmp/tools/c2d \\\n && chmod a+x /tmp/tools/c2d\n#   TOOL d4\nRUN curl http://www.cril.univ-artois.fr/KC/ressources/d4 -o /tmp/tools/d4 \\\n && chmod a+x /tmp/tools/d4\n#   TOOL dsharp\nRUN cd /tmp/ \\\n && hg clone https://bitbucket.org/haz/dsharp \\\n && cd dsharp \\\n && mv Makefile_gmp Makefile \\\n && make \\\n && mv dsharp /tmp/tools/ \\\n && chmod a+x /tmp/tools/dsharp\n#   mv the additional tools\nRUN bash -c \"mv /tmp/tools/* /usr/local/bin\"\n#  #############################   GETTING  PROVSQL  ##############################   \n#   Add a folder for ProvSQL\nWORKDIR /opt/provsql\n#   Provsql will be built & run as user postgres\nRUN chown postgres:postgres /opt/provsql\nUSER postgres\n#   Getting and building\nRUN git clone https://github.com/PierreSenellart/provsql.git /opt/provsql\nRUN cd /opt/provsql \\\n && make\n#   install provsql\nUSER root\nRUN echo \"shared_preload_libraries = 'provsql'\" >> /etc/postgresql/${PSQL_VERSION}/main/postgresql.conf\nRUN echo \"local all all trust\" > /etc/postgresql/${PSQL_VERSION}/main/pg_hba.conf\nEXPOSE 5432/tcp\nRUN cd /opt/provsql ; make install\nUSER postgres\n#  create a db test\nRUN /etc/init.d/postgresql start \\\n && createuser -s test \\\n && createdb test \\\n && psql -f /opt/provsql/test/sql/setup.sql test test \\\n && psql -f /opt/provsql/test/sql/add_provenance.sql test test \\\n && psql -f /opt/provsql/test/sql/formula.sql test test \\\n && psql -f /opt/provsql/test/sql/security.sql test test \\\n && psql -c \"ALTER ROLE test SET search_path TO public, provsql\"\n#  ############################# FINISHING THE DOCKER  ##############################   \n#  allow access\nRUN echo \"listen_addresses = '*'\" >> /etc/postgresql/${PSQL_VERSION}/main/postgresql.conf\nRUN echo \"host all all 0.0.0.0/0 trust\" >> /etc/postgresql/${PSQL_VERSION}/main/pg_hba.conf\nRUN echo \"host all all ::/0 trust\" >> /etc/postgresql/${PSQL_VERSION}/main/pg_hba.conf\nUSER postgres\nCMD /usr/bin/pg_ctlcluster $PSQL_VERSION main start --foreground\nUSER root\nRUN apt-get update \\\n && apt-get install apache2 libapache2-mod-php7.0 php7.0-pgsql graphviz -y\nCMD /bin/bash /opt/provsql/docker/demo.sh\nEXPOSE 80/tcp\n","originalDockerfileUglifiedHash":"e9f98630252cf9067f5bc405eb3c4493","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/6a142bcf3f463a5be95dd58ae614a20255e74000.dockerfile"}