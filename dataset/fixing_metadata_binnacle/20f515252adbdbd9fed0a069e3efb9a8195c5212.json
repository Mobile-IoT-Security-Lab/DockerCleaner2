{"seed":2518036942,"processedDockerfileHash":"adaece8edc4dfb9caa16f868b33f5fa3","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   sshd\n#\n#   VERSION               0.0.2\nFROM ubuntu:16.04\nMAINTAINER InteractiveShell Team <trym2@googlegroups.com>\n#   For ssh server and up-to-date ubuntu.\nRUN apt-get update \\\n && apt-get install --no-install-recommends openssh-server=1:7.2p2-4ubuntu2.10 wget=1.17.1-1ubuntu1.5 -y ; apt-get upgrade -y\nRUN mkdir /build\n#   Prerequisites\n#\n#   polymake\nRUN apt-get install --no-install-recommends g++=4:5.3.1-1ubuntu1 libboost-dev=1.58.0.1ubuntu1 libgmp-dev=2:6.1.0+dfsg-2 libgmpxx4ldbl=2:6.1.0+dfsg-2 libmpfr-dev=3.1.4-1 libperl-dev=5.22.1-9ubuntu0.9 libsvn-perl=1.9.3-2ubuntu1.3 libterm-readline-gnu-perl=1.28-2build1 libxml-libxml-perl=2.0123+dfsg-1ubuntu0.1 libxml-libxslt-perl=1.94-2build1 libxml-perl=0.08-2 libxml-writer-perl=0.625-1 libxml2-dev=2.9.3+dfsg1-1ubuntu0.7 xsltproc=1.1.28-2.1ubuntu0.3 clang=1:3.8-33ubuntu3.1 bliss=0.72-5 libbliss-dev=0.72-5 make=4.1-6 -y\n#   Singular\nRUN apt-get update \\\n && apt-get install --no-install-recommends git=1:2.7.4-0ubuntu1.10 build-essential=12.1ubuntu2 autoconf=2.69-9 autogen=1:5.18.7-3 libtool=2.4.6-0.1 libreadline6-dev=6.3-8ubuntu2 libglpk-dev=4.57-1build3 libgmp-dev=2:6.1.0+dfsg-2 libmpfr-dev=3.1.4-1 libcdd-dev=094g-5 libntl-dev=6.2.1-1 -y\n#   normaliz\nRUN apt-get install --no-install-recommends zip=3.0-11 -y\n#   Installing 4ti2\nWORKDIR /build\nENV FOURTITWO_VERSION=\"1.6.7\"\nRUN wget http://www.4ti2.de/version_$FOURTITWO_VERSION/4ti2-$FOURTITWO_VERSION.tar.gz ; tar xzf 4ti2-$FOURTITWO_VERSION.tar.gz\nWORKDIR /build/4ti2-$FOURTITWO_VERSION\nRUN ./configure ; make -j3 ; make install\n#   Installing normaliz\nWORKDIR /build\nENV NORMALIZ_VERSION=\"3.2.0\"\nRUN wget https://www.normaliz.uni-osnabrueck.de/wp-content/uploads/2017/01/normaliz-${NORMALIZ_VERSION}source.zip ; unzip normaliz-${NORMALIZ_VERSION}source.zip\nWORKDIR /build/normaliz-${NORMALIZ_VERSION}/\nRUN ./configure ; make -j3 ; make install\n#   Installing polymake\nWORKDIR /build\nENV POLYMAKE_VERSION=\"3.0\"\nENV POLYMAKE_REVISION=\"r2\"\nRUN wget http://www.polymake.org/lib/exe/fetch.php/download/polymake-${POLYMAKE_VERSION}${POLYMAKE_REVISION}.tar.bz2 ; tar jxf polymake-${POLYMAKE_VERSION}${POLYMAKE_REVISION}.tar.bz2\nWORKDIR /build/polymake-$POLYMAKE_VERSION\nRUN ./configure CC=clang CXX=clang++ --without-java --without-javaview --without-atint ; make -j2 ; make install\n#   Installing Singular\nWORKDIR /build\nENV LD_LIBRARY_PATH=\"$LIBRARY_PATH:/usr/local/lib\"\nRUN git clone https://github.com/Singular/Sources.git singular_sources\nWORKDIR /build/singular_sources\nRUN ./autogen.sh ; ./configure CXXFLAGS=-fopenmp --enable-gfanlib ; make -j7 ; make install\n#      Singular -v\nRUN echo \"interactive-shell!xE:echo:!echo -n \\\">>SPECIAL_EVENT_START>>\\\"%H\\\"<<SPECIAL_EVENT_END<<\\\"\" >> /usr/local/share/singular/LIB/help.cnf\nCOPY surf.lib /usr/local/share/singular/LIB/surf.lib\nRUN apt-get install --no-install-recommends surf-alggeo=1.0.6+ds-2 -y\n#   Userland\nWORKDIR /\nRUN useradd -m -d /home/singularUser singularUser\nRUN mkdir /home/singularUser/.ssh\nCOPY id_rsa.pub /home/singularUser/.ssh/authorized_keys\nRUN chown -R singularUser:singularUser /home/singularUser/.ssh\nRUN chmod 755 /home/singularUser/.ssh\nRUN chmod 644 /home/singularUser/.ssh/authorized_keys\nRUN mkdir /var/run/sshd\n#   RUN echo 'root:screencast' | chpasswd\nRUN sed -i 's/PermitRootLogin without-password/PermitRootLogin no/' /etc/ssh/sshd_config\n#   SSH login fix. Otherwise user is kicked off after login\nRUN sed 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd\nENV NOTVISIBLE=\"\\\"in users profile\\\"\"\nRUN echo \"export VISIBLE=now\" >> /etc/profile\n#   copy open\n#   COPY open /usr/bin/open\n#   RUN ln -s /usr/bin/open /usr/bin/display\nWORKDIR /home/singularUser\n#   USER singularUser\nEXPOSE 22/tcp\n#   CMD [\"/usr/sbin/sshd\", \"-D\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  sshd\n#\n#  VERSION               0.0.2\nFROM ubuntu:16.04\nMAINTAINER InteractiveShell Team <trym2@googlegroups.com>\n#  For ssh server and up-to-date ubuntu.\nRUN apt-get update \\\n && apt-get install openssh-server wget -y ; apt-get upgrade -y\nRUN mkdir /build\n#  Prerequisites\n#\n#  polymake\nRUN apt-get install g++ libboost-dev libgmp-dev libgmpxx4ldbl libmpfr-dev libperl-dev libsvn-perl libterm-readline-gnu-perl libxml-libxml-perl libxml-libxslt-perl libxml-perl libxml-writer-perl libxml2-dev xsltproc clang bliss libbliss-dev make -y\n#  Singular\nRUN apt-get update \\\n && apt-get install git build-essential autoconf autogen libtool libreadline6-dev libglpk-dev libgmp-dev libmpfr-dev libcdd-dev libntl-dev -y\n#  normaliz\nRUN apt-get install zip -y\n#  Installing 4ti2\nWORKDIR /build\nENV FOURTITWO_VERSION=\"1.6.7\"\nRUN wget http://www.4ti2.de/version_$FOURTITWO_VERSION/4ti2-$FOURTITWO_VERSION.tar.gz ; tar xzf 4ti2-$FOURTITWO_VERSION.tar.gz\nWORKDIR /build/4ti2-$FOURTITWO_VERSION\nRUN ./configure ; make -j3 ; make install\n#  Installing normaliz\nWORKDIR /build\nENV NORMALIZ_VERSION=\"3.2.0\"\nRUN wget https://www.normaliz.uni-osnabrueck.de/wp-content/uploads/2017/01/normaliz-${NORMALIZ_VERSION}source.zip ; unzip normaliz-${NORMALIZ_VERSION}source.zip\nWORKDIR /build/normaliz-${NORMALIZ_VERSION}/\nRUN ./configure ; make -j3 ; make install\n#  Installing polymake\nWORKDIR /build\nENV POLYMAKE_VERSION=\"3.0\"\nENV POLYMAKE_REVISION=\"r2\"\nRUN wget http://www.polymake.org/lib/exe/fetch.php/download/polymake-${POLYMAKE_VERSION}${POLYMAKE_REVISION}.tar.bz2 ; tar jxf polymake-${POLYMAKE_VERSION}${POLYMAKE_REVISION}.tar.bz2\nWORKDIR /build/polymake-$POLYMAKE_VERSION\nRUN ./configure CC=clang CXX=clang++ --without-java --without-javaview --without-atint ; make -j2 ; make install\n#  Installing Singular\nWORKDIR /build\nENV LD_LIBRARY_PATH=\"$LIBRARY_PATH:/usr/local/lib\"\nRUN git clone https://github.com/Singular/Sources.git singular_sources\nWORKDIR /build/singular_sources\nRUN ./autogen.sh ; ./configure CXXFLAGS=-fopenmp --enable-gfanlib ; make -j7 ; make install\n#     Singular -v\nRUN echo \"interactive-shell!xE:echo:!echo -n \\\">>SPECIAL_EVENT_START>>\\\"%H\\\"<<SPECIAL_EVENT_END<<\\\"\" >> /usr/local/share/singular/LIB/help.cnf\nCOPY surf.lib /usr/local/share/singular/LIB/surf.lib\nRUN apt-get install surf-alggeo -y\n#  Userland\nWORKDIR /\nRUN useradd -m -d /home/singularUser singularUser\nRUN mkdir /home/singularUser/.ssh\nCOPY id_rsa.pub /home/singularUser/.ssh/authorized_keys\nRUN chown -R singularUser:singularUser /home/singularUser/.ssh\nRUN chmod 755 /home/singularUser/.ssh\nRUN chmod 644 /home/singularUser/.ssh/authorized_keys\nRUN mkdir /var/run/sshd\n#  RUN echo 'root:screencast' | chpasswd\nRUN sed -i 's/PermitRootLogin without-password/PermitRootLogin no/' /etc/ssh/sshd_config\n#  SSH login fix. Otherwise user is kicked off after login\nRUN sed 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd\nENV NOTVISIBLE=\"\\\"in users profile\\\"\"\nRUN echo \"export VISIBLE=now\" >> /etc/profile\n#  copy open\n#  COPY open /usr/bin/open\n#  RUN ln -s /usr/bin/open /usr/bin/display\nWORKDIR /home/singularUser\n#  USER singularUser\nEXPOSE 22/tcp\n#  CMD [\"/usr/sbin/sshd\", \"-D\"]\n","injectedSmells":[],"originalDockerfileHash":"a7fb9c0184dcfc07f56a8c09961631ce","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   sshd\n#\n#   VERSION               0.0.2\nFROM ubuntu:16.04\nMAINTAINER InteractiveShell Team <trym2@googlegroups.com>\n#   For ssh server and up-to-date ubuntu.\nRUN apt-get update \\\n && apt-get install openssh-server wget -y ; apt-get upgrade -y\nRUN mkdir /build\n#   Prerequisites\n#\n#   polymake\nRUN apt-get install g++ libboost-dev libgmp-dev libgmpxx4ldbl libmpfr-dev libperl-dev libsvn-perl libterm-readline-gnu-perl libxml-libxml-perl libxml-libxslt-perl libxml-perl libxml-writer-perl libxml2-dev xsltproc clang bliss libbliss-dev make -y\n#   Singular\nRUN apt-get update \\\n && apt-get install git build-essential autoconf autogen libtool libreadline6-dev libglpk-dev libgmp-dev libmpfr-dev libcdd-dev libntl-dev -y\n#   normaliz\nRUN apt-get install zip -y\n#   Installing 4ti2\nWORKDIR /build\nENV FOURTITWO_VERSION=\"1.6.7\"\nRUN wget http://www.4ti2.de/version_$FOURTITWO_VERSION/4ti2-$FOURTITWO_VERSION.tar.gz ; tar xzf 4ti2-$FOURTITWO_VERSION.tar.gz\nWORKDIR /build/4ti2-$FOURTITWO_VERSION\nRUN ./configure ; make -j3 ; make install\n#   Installing normaliz\nWORKDIR /build\nENV NORMALIZ_VERSION=\"3.2.0\"\nRUN wget https://www.normaliz.uni-osnabrueck.de/wp-content/uploads/2017/01/normaliz-${NORMALIZ_VERSION}source.zip ; unzip normaliz-${NORMALIZ_VERSION}source.zip\nWORKDIR /build/normaliz-${NORMALIZ_VERSION}/\nRUN ./configure ; make -j3 ; make install\n#   Installing polymake\nWORKDIR /build\nENV POLYMAKE_VERSION=\"3.0\"\nENV POLYMAKE_REVISION=\"r2\"\nRUN wget http://www.polymake.org/lib/exe/fetch.php/download/polymake-${POLYMAKE_VERSION}${POLYMAKE_REVISION}.tar.bz2 ; tar jxf polymake-${POLYMAKE_VERSION}${POLYMAKE_REVISION}.tar.bz2\nWORKDIR /build/polymake-$POLYMAKE_VERSION\nRUN ./configure CC=clang CXX=clang++ --without-java --without-javaview --without-atint ; make -j2 ; make install\n#   Installing Singular\nWORKDIR /build\nENV LD_LIBRARY_PATH=\"$LIBRARY_PATH:/usr/local/lib\"\nRUN git clone https://github.com/Singular/Sources.git singular_sources\nWORKDIR /build/singular_sources\nRUN ./autogen.sh ; ./configure CXXFLAGS=-fopenmp --enable-gfanlib ; make -j7 ; make install\n#      Singular -v\nRUN echo \"interactive-shell!xE:echo:!echo -n \\\">>SPECIAL_EVENT_START>>\\\"%H\\\"<<SPECIAL_EVENT_END<<\\\"\" >> /usr/local/share/singular/LIB/help.cnf\nCOPY surf.lib /usr/local/share/singular/LIB/surf.lib\nRUN apt-get install surf-alggeo -y\n#   Userland\nWORKDIR /\nRUN useradd -m -d /home/singularUser singularUser\nRUN mkdir /home/singularUser/.ssh\nCOPY id_rsa.pub /home/singularUser/.ssh/authorized_keys\nRUN chown -R singularUser:singularUser /home/singularUser/.ssh\nRUN chmod 755 /home/singularUser/.ssh\nRUN chmod 644 /home/singularUser/.ssh/authorized_keys\nRUN mkdir /var/run/sshd\n#   RUN echo 'root:screencast' | chpasswd\nRUN sed -i 's/PermitRootLogin without-password/PermitRootLogin no/' /etc/ssh/sshd_config\n#   SSH login fix. Otherwise user is kicked off after login\nRUN sed 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd\nENV NOTVISIBLE=\"\\\"in users profile\\\"\"\nRUN echo \"export VISIBLE=now\" >> /etc/profile\n#   copy open\n#   COPY open /usr/bin/open\n#   RUN ln -s /usr/bin/open /usr/bin/display\nWORKDIR /home/singularUser\n#   USER singularUser\nEXPOSE 22/tcp\n#   CMD [\"/usr/sbin/sshd\", \"-D\"]\n","originalDockerfileUglifiedHash":"57309391021e86d0d40ce3d6e57891e7","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/20f515252adbdbd9fed0a069e3efb9a8195c5212.dockerfile"}