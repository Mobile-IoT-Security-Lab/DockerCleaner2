{"seed":1578739024,"processedDockerfileHash":"459f5b8f25c53edd7c545fcc0058d226","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["do-not-use-apt-get-update-alone","have-a-healthcheck"],"processedDockerfile":"#  #\n#  # Build with:\n#  #   docker build -t xeffyr/termux-advanced-builder .\n#  #\n#  # Push to docker hub with:\n#  #   docker push xeffyr/termux-advanced-builder\n#  #\nFROM ubuntu:19.04\n#   Fix locale to avoid warnings:\nENV LANG=\"en_US.UTF-8\"\nENV ANDROID_SDK_REVISION=\"\\\"4333796\\\"\"\nENV ANDROID_SDK_BUILD_TOOLS_VERSION=\"\\\"28.0.3\\\"\"\nENV ANDROID_NDK_VERSION=\"\\\"19b\\\"\"\nENV ANDROID_HOME=\"\\\"/opt/termux/android-sdk\\\"\"\nENV NDK=\"\\\"/opt/termux/android-sdk/ndk-bundle\\\"\"\n#   We may need x86 (32bit) packages.\nRUN dpkg --add-architecture i386\n#   Make sure that everything is up-to-date.\nRUN : \\\n && env DEBIAN_FRONTEND=noninteractive apt upgrade -yq\n#   Install essential packages.\nRUN env DEBIAN_FRONTEND=noninteractive apt install -yq --no-install-recommends asciidoc asciidoctor autoconf automake bison curl docbook-to-man docbook-utils ed flex gawk gettext git g++ g++-multilib gnome-common gnupg gperf groff gtk-3-examples gtk-doc-tools help2man intltool jq libexpat1-dev libffi-dev libgc-dev libgdk-pixbuf2.0-dev libglib2.0-dev libgmp-dev libgtk-3-bin libisl-dev libjpeg-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libsigsegv-dev libssl-dev libtool-bin libunistring-dev libwayland-dev llvm-8-tools locales lzip m4 openjdk-8-jdk-headless pax-utils pkg-config python3.7 python3-docutils python3-pip python3-recommonmark python3-setuptools python3-sphinx python-pip python-setuptools python-yaml ruby scons texinfo unzip valac xfonts-utils xutils-dev xmlto zip zlib1g-dev\n#   Install 32bit packages.\nRUN env DEBIAN_FRONTEND=noninteractive apt install -yq --no-install-recommends libssl-dev:i386 zlib1g-dev:i386\n#   Install developer tools.\nRUN env DEBIAN_FRONTEND=noninteractive apt install -yq --no-install-recommends nano silversearcher-ag patchelf patchutils\n#   Install OpenSSH.\n#   Used primarily on CI and similar.\nRUN env DEBIAN_FRONTEND=noninteractive apt install -yq --no-install-recommends openssh-client openssh-server\n#   Configure locales.\nRUN locale-gen --purge en_US.UTF-8 \\\n && echo -e 'LANG=\"en_US.UTF-8\"\\nLANGUAGE=\"en_US:en\"\\n' > /etc/default/locale\n#   Make environment variables available for bash.\nRUN echo \"export ANDROID_HOME=${ANDROID_HOME}\\nexport NDK=${NDK}\" > /etc/profile.d/termux-builder.sh \\\n && chmod 644 /etc/profile.d/termux-builder.sh\n#   Install configuration files.\nCOPY ./configs/nanorc /etc/nanorc\nCOPY ./configs/ssh/ssh_known_hosts /etc/ssh/ssh_known_hosts\nRUN chown root:root /etc/nanorc \\\n && chmod 644 /etc/nanorc \\\n && chown root:root /etc/ssh/ssh_known_hosts \\\n && chmod 644 /etc/ssh/ssh_known_hosts\n#   Create user and add it to sudoers.\nRUN env DEBIAN_FRONTEND=noninteractive apt install -yq --no-install-recommends sudo \\\n && useradd -U -m -s /bin/bash builder \\\n && echo \"builder ALL=(root) NOPASSWD:ALL\" > /etc/sudoers.d/builder\n#   Create necessary directories.\nRUN mkdir /data \\\n && chown builder:builder /data \\\n && mkdir -p /opt/termux\n#   Installing Android SDK and NDK.\nRUN curl --fail --retry 3 -L -o sdk.zip https://dl.google.com/android/repository/sdk-tools-linux-${ANDROID_SDK_REVISION}.zip \\\n && unzip -q sdk.zip -d ${ANDROID_HOME} \\\n && rm -f sdk.zip \\\n && curl --fail --retry 3 -L -o ndk.zip https://dl.google.com/android/repository/android-ndk-r${ANDROID_NDK_VERSION}-Linux-x86_64.zip \\\n && unzip -q ndk.zip \\\n && rm -f ndk.zip \\\n && mv android-ndk-r${ANDROID_NDK_VERSION} ${NDK}\n#   Installing Android SDK tools.\nRUN mkdir -p /root/.android \\\n && echo 'count=0' > /root/.android/repositories.cfg\nRUN echo y | $ANDROID_HOME/tools/bin/sdkmanager \"platform-tools\"\nRUN echo y | $ANDROID_HOME/tools/bin/sdkmanager \"build-tools;${ANDROID_SDK_BUILD_TOOLS_VERSION}\"\nRUN echo y | $ANDROID_HOME/tools/bin/sdkmanager \"platforms;android-21\"\nRUN echo y | $ANDROID_HOME/tools/bin/sdkmanager \"platforms;android-23\"\nRUN echo y | $ANDROID_HOME/tools/bin/sdkmanager \"platforms;android-24\"\nRUN echo y | $ANDROID_HOME/tools/bin/sdkmanager \"platforms;android-26\"\nRUN echo y | $ANDROID_HOME/tools/bin/sdkmanager \"platforms;android-28\"\n#   Cleanup.\nRUN apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n#   Set user.\nUSER builder:builder\n#   Set working directory.\nWORKDIR /home/builder/packages\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"# #\n# # Build with:\n# #   docker build -t xeffyr/termux-advanced-builder .\n# #\n# # Push to docker hub with:\n# #   docker push xeffyr/termux-advanced-builder\n# #\nFROM ubuntu:19.04\n#  Fix locale to avoid warnings:\nENV LANG=\"en_US.UTF-8\"\nENV ANDROID_SDK_REVISION=\"\\\"4333796\\\"\"\nENV ANDROID_SDK_BUILD_TOOLS_VERSION=\"\\\"28.0.3\\\"\"\nENV ANDROID_NDK_VERSION=\"\\\"19b\\\"\"\nENV ANDROID_HOME=\"\\\"/opt/termux/android-sdk\\\"\"\nENV NDK=\"\\\"/opt/termux/android-sdk/ndk-bundle\\\"\"\n#  We may need x86 (32bit) packages.\nRUN dpkg --add-architecture i386\n#  Make sure that everything is up-to-date.\nRUN apt-get update \\\n && env DEBIAN_FRONTEND=noninteractive apt upgrade -yq\n#  Install essential packages.\nRUN env DEBIAN_FRONTEND=noninteractive apt install -yq --no-install-recommends asciidoc asciidoctor autoconf automake bison curl docbook-to-man docbook-utils ed flex gawk gettext git g++ g++-multilib gnome-common gnupg gperf groff gtk-3-examples gtk-doc-tools help2man intltool jq libexpat1-dev libffi-dev libgc-dev libgdk-pixbuf2.0-dev libglib2.0-dev libgmp-dev libgtk-3-bin libisl-dev libjpeg-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libsigsegv-dev libssl-dev libtool-bin libunistring-dev libwayland-dev llvm-8-tools locales lzip m4 openjdk-8-jdk-headless pax-utils pkg-config python3.7 python3-docutils python3-pip python3-recommonmark python3-setuptools python3-sphinx python-pip python-setuptools python-yaml ruby scons texinfo unzip valac xfonts-utils xutils-dev xmlto zip zlib1g-dev\n#  Install 32bit packages.\nRUN env DEBIAN_FRONTEND=noninteractive apt install -yq --no-install-recommends libssl-dev:i386 zlib1g-dev:i386\n#  Install developer tools.\nRUN env DEBIAN_FRONTEND=noninteractive apt install -yq --no-install-recommends nano silversearcher-ag patchelf patchutils\n#  Install OpenSSH.\n#  Used primarily on CI and similar.\nRUN env DEBIAN_FRONTEND=noninteractive apt install -yq --no-install-recommends openssh-client openssh-server\n#  Configure locales.\nRUN locale-gen --purge en_US.UTF-8 \\\n && echo -e 'LANG=\"en_US.UTF-8\"\\nLANGUAGE=\"en_US:en\"\\n' > /etc/default/locale\n#  Make environment variables available for bash.\nRUN echo \"export ANDROID_HOME=${ANDROID_HOME}\\nexport NDK=${NDK}\" > /etc/profile.d/termux-builder.sh \\\n && chmod 644 /etc/profile.d/termux-builder.sh\n#  Install configuration files.\nCOPY ./configs/nanorc /etc/nanorc\nCOPY ./configs/ssh/ssh_known_hosts /etc/ssh/ssh_known_hosts\nRUN chown root:root /etc/nanorc \\\n && chmod 644 /etc/nanorc \\\n && chown root:root /etc/ssh/ssh_known_hosts \\\n && chmod 644 /etc/ssh/ssh_known_hosts\n#  Create user and add it to sudoers.\nRUN env DEBIAN_FRONTEND=noninteractive apt install -yq --no-install-recommends sudo \\\n && useradd -U -m -s /bin/bash builder \\\n && echo \"builder ALL=(root) NOPASSWD:ALL\" > /etc/sudoers.d/builder\n#  Create necessary directories.\nRUN mkdir /data \\\n && chown builder:builder /data \\\n && mkdir -p /opt/termux\n#  Installing Android SDK and NDK.\nRUN curl --fail --retry 3 -L -o sdk.zip https://dl.google.com/android/repository/sdk-tools-linux-${ANDROID_SDK_REVISION}.zip \\\n && unzip -q sdk.zip -d ${ANDROID_HOME} \\\n && rm -f sdk.zip \\\n && curl --fail --retry 3 -L -o ndk.zip https://dl.google.com/android/repository/android-ndk-r${ANDROID_NDK_VERSION}-Linux-x86_64.zip \\\n && unzip -q ndk.zip \\\n && rm -f ndk.zip \\\n && mv android-ndk-r${ANDROID_NDK_VERSION} ${NDK}\n#  Installing Android SDK tools.\nRUN mkdir -p /root/.android \\\n && echo 'count=0' > /root/.android/repositories.cfg\nRUN echo y | $ANDROID_HOME/tools/bin/sdkmanager \"platform-tools\"\nRUN echo y | $ANDROID_HOME/tools/bin/sdkmanager \"build-tools;${ANDROID_SDK_BUILD_TOOLS_VERSION}\"\nRUN echo y | $ANDROID_HOME/tools/bin/sdkmanager \"platforms;android-21\"\nRUN echo y | $ANDROID_HOME/tools/bin/sdkmanager \"platforms;android-23\"\nRUN echo y | $ANDROID_HOME/tools/bin/sdkmanager \"platforms;android-24\"\nRUN echo y | $ANDROID_HOME/tools/bin/sdkmanager \"platforms;android-26\"\nRUN echo y | $ANDROID_HOME/tools/bin/sdkmanager \"platforms;android-28\"\n#  Cleanup.\nRUN apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n#  Set user.\nUSER builder:builder\n#  Set working directory.\nWORKDIR /home/builder/packages\n","injectedSmells":[],"originalDockerfileHash":"267a2cad6e0f3657610ef5265e19a550","successfullyInjectedSmells":[],"originalDockerfileUglified":"#  #\n#  # Build with:\n#  #   docker build -t xeffyr/termux-advanced-builder .\n#  #\n#  # Push to docker hub with:\n#  #   docker push xeffyr/termux-advanced-builder\n#  #\nFROM ubuntu:19.04\n#   Fix locale to avoid warnings:\nENV LANG=\"en_US.UTF-8\"\nENV ANDROID_SDK_REVISION=\"\\\"4333796\\\"\"\nENV ANDROID_SDK_BUILD_TOOLS_VERSION=\"\\\"28.0.3\\\"\"\nENV ANDROID_NDK_VERSION=\"\\\"19b\\\"\"\nENV ANDROID_HOME=\"\\\"/opt/termux/android-sdk\\\"\"\nENV NDK=\"\\\"/opt/termux/android-sdk/ndk-bundle\\\"\"\n#   We may need x86 (32bit) packages.\nRUN dpkg --add-architecture i386\n#   Make sure that everything is up-to-date.\nRUN apt-get update \\\n && env DEBIAN_FRONTEND=noninteractive apt upgrade -yq\n#   Install essential packages.\nRUN env DEBIAN_FRONTEND=noninteractive apt install -yq --no-install-recommends asciidoc asciidoctor autoconf automake bison curl docbook-to-man docbook-utils ed flex gawk gettext git g++ g++-multilib gnome-common gnupg gperf groff gtk-3-examples gtk-doc-tools help2man intltool jq libexpat1-dev libffi-dev libgc-dev libgdk-pixbuf2.0-dev libglib2.0-dev libgmp-dev libgtk-3-bin libisl-dev libjpeg-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libsigsegv-dev libssl-dev libtool-bin libunistring-dev libwayland-dev llvm-8-tools locales lzip m4 openjdk-8-jdk-headless pax-utils pkg-config python3.7 python3-docutils python3-pip python3-recommonmark python3-setuptools python3-sphinx python-pip python-setuptools python-yaml ruby scons texinfo unzip valac xfonts-utils xutils-dev xmlto zip zlib1g-dev\n#   Install 32bit packages.\nRUN env DEBIAN_FRONTEND=noninteractive apt install -yq --no-install-recommends libssl-dev:i386 zlib1g-dev:i386\n#   Install developer tools.\nRUN env DEBIAN_FRONTEND=noninteractive apt install -yq --no-install-recommends nano silversearcher-ag patchelf patchutils\n#   Install OpenSSH.\n#   Used primarily on CI and similar.\nRUN env DEBIAN_FRONTEND=noninteractive apt install -yq --no-install-recommends openssh-client openssh-server\n#   Configure locales.\nRUN locale-gen --purge en_US.UTF-8 \\\n && echo -e 'LANG=\"en_US.UTF-8\"\\nLANGUAGE=\"en_US:en\"\\n' > /etc/default/locale\n#   Make environment variables available for bash.\nRUN echo \"export ANDROID_HOME=${ANDROID_HOME}\\nexport NDK=${NDK}\" > /etc/profile.d/termux-builder.sh \\\n && chmod 644 /etc/profile.d/termux-builder.sh\n#   Install configuration files.\nCOPY ./configs/nanorc /etc/nanorc\nCOPY ./configs/ssh/ssh_known_hosts /etc/ssh/ssh_known_hosts\nRUN chown root:root /etc/nanorc \\\n && chmod 644 /etc/nanorc \\\n && chown root:root /etc/ssh/ssh_known_hosts \\\n && chmod 644 /etc/ssh/ssh_known_hosts\n#   Create user and add it to sudoers.\nRUN env DEBIAN_FRONTEND=noninteractive apt install -yq --no-install-recommends sudo \\\n && useradd -U -m -s /bin/bash builder \\\n && echo \"builder ALL=(root) NOPASSWD:ALL\" > /etc/sudoers.d/builder\n#   Create necessary directories.\nRUN mkdir /data \\\n && chown builder:builder /data \\\n && mkdir -p /opt/termux\n#   Installing Android SDK and NDK.\nRUN curl --fail --retry 3 -L -o sdk.zip https://dl.google.com/android/repository/sdk-tools-linux-${ANDROID_SDK_REVISION}.zip \\\n && unzip -q sdk.zip -d ${ANDROID_HOME} \\\n && rm -f sdk.zip \\\n && curl --fail --retry 3 -L -o ndk.zip https://dl.google.com/android/repository/android-ndk-r${ANDROID_NDK_VERSION}-Linux-x86_64.zip \\\n && unzip -q ndk.zip \\\n && rm -f ndk.zip \\\n && mv android-ndk-r${ANDROID_NDK_VERSION} ${NDK}\n#   Installing Android SDK tools.\nRUN mkdir -p /root/.android \\\n && echo 'count=0' > /root/.android/repositories.cfg\nRUN echo y | $ANDROID_HOME/tools/bin/sdkmanager \"platform-tools\"\nRUN echo y | $ANDROID_HOME/tools/bin/sdkmanager \"build-tools;${ANDROID_SDK_BUILD_TOOLS_VERSION}\"\nRUN echo y | $ANDROID_HOME/tools/bin/sdkmanager \"platforms;android-21\"\nRUN echo y | $ANDROID_HOME/tools/bin/sdkmanager \"platforms;android-23\"\nRUN echo y | $ANDROID_HOME/tools/bin/sdkmanager \"platforms;android-24\"\nRUN echo y | $ANDROID_HOME/tools/bin/sdkmanager \"platforms;android-26\"\nRUN echo y | $ANDROID_HOME/tools/bin/sdkmanager \"platforms;android-28\"\n#   Cleanup.\nRUN apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n#   Set user.\nUSER builder:builder\n#   Set working directory.\nWORKDIR /home/builder/packages\n","originalDockerfileUglifiedHash":"249098647b3045f21fd2d51a681429a1","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/f628b28a65dedad999495056f8615890ecf34f33.dockerfile"}