{"seed":1127214996,"processedDockerfileHash":"cce9624f9dd768bb4b89170385750d46","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM debian:jessie\n#   add our user and group first to make sure their IDs get assigned consistently, regardless of whatever dependencies get added\n#  RUN groupadd -r www-data && useradd -r --create-home -g www-data www-data\nENV HTTPD_PREFIX=\"/usr/local/apache2\"\nENV PATH=\"$HTTPD_PREFIX/bin:$PATH\"\nRUN mkdir -p \"$HTTPD_PREFIX\" \\\n && chown www-data:www-data \"$HTTPD_PREFIX\"\nWORKDIR $HTTPD_PREFIX\n#   install httpd runtime dependencies\n#   https://httpd.apache.org/docs/2.4/install.html#requirements\nRUN apt-get update \\\n && apt-get install --no-install-recommends libapr1 libaprutil1 libaprutil1-ldap libapr1-dev libaprutil1-dev libpcre++0 libssl1.0.0 netcat -y \\\n && rm -r /var/lib/apt/lists/*\nRUN apt-get update \\\n && apt-get install --no-install-recommends netcat -y --no-install-suggests \\\n && rm -r /var/lib/apt/lists/*\nENV HTTPD_VERSION=\"2.2.34\"\nENV HTTPD_SHA1=\"829206394e238af0b800fc78d19c74ee466ecb23\"\nENV HTTPD_BZ2_URL=\"https://www.apache.org/dist/httpd/httpd-$HTTPD_VERSION.tar.bz2\"\nRUN set -x \\\n && buildDeps=' bzip2 ca-certificates gcc libpcre++-dev libssl-dev make wget ' \\\n && apt-get update \\\n && apt-get install --no-install-recommends $buildDeps -y \\\n && rm -r /var/lib/apt/lists/* \\\n && wget -O httpd.tar.bz2 \"$HTTPD_BZ2_URL\" \\\n && echo \"$HTTPD_SHA1 *httpd.tar.bz2\" | sha1sum -c - \\\n && wget -O httpd.tar.bz2.asc \"$HTTPD_BZ2_URL.asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B1B96F45DFBDCCF974019235193F180AB55D9977 \\\n && gpg --batch --verify httpd.tar.bz2.asc httpd.tar.bz2 \\\n && rm -r \"$GNUPGHOME\" httpd.tar.bz2.asc \\\n && mkdir -p src \\\n && tar -xvf httpd.tar.bz2 -C src --strip-components=1 \\\n && rm httpd.tar.bz2 \\\n && cd src \\\n && ./configure --prefix=\"$HTTPD_PREFIX\" --enable-mods-shared='all ssl ldap cache proxy authn_alias mem_cache file_cache authnz_ldap charset_lite dav_lock disk_cache' \\\n && make -j\"$( nproc ;)\" \\\n && make install \\\n && cd .. \\\n && rm -r src \\\n && sed -ri -e 's!^(\\s*CustomLog)\\s+\\S+!\\1 /proc/self/fd/1!g' -e 's!^(\\s*ErrorLog)\\s+\\S+!\\1 /proc/self/fd/2!g' \"$HTTPD_PREFIX/conf/httpd.conf\" \\\n && apt-get purge -y --auto-remove $buildDeps\nCOPY httpd-foreground /usr/local/bin/\n#  # CLOUDUNIT :: BEGINNING\nENV CU_SERVER_RESTART_POST_DEPLOYMENT=\"false\"\nENV CU_SOFTWARE=\"\\\"\nENV CU_SERVER_MANAGER_PATH=\"\\\"\nENV CU_SERVER_MANAGER_PORT=\"80\"\nENV CU_SERVER_PORT=\"80\"\nENV CU_SERVER_RESTART_POST_CREDENTIALS=\"true\"\nENV CU_DEFAULT_LOG_FILE=\"access.log\"\nENV CU_LOGS=\"STDOUT\"\nENV JAVA_OPTS=\"\\\" \\\"\"\n#   add custom scripts\nCOPY scripts /opt/cloudunit/scripts\nRUN chmod +x /opt/cloudunit/scripts/*\n#   Ennable apache status app\nRUN echo \"<Location /server-status>\" >> /usr/local/apache2/conf/httpd.conf \\\n && echo \" SetHandler server-status\" >> /usr/local/apache2/conf/httpd.conf \\\n && echo \" Order deny,allow\" >> /usr/local/apache2/conf/httpd.conf \\\n && echo \" Deny from all\" >> /usr/local/apache2/conf/httpd.conf \\\n && echo \" Allow from 127.0.0.1\" >> /usr/local/apache2/conf/httpd.conf \\\n && echo \"</Location>\" >> /usr/local/apache2/conf/httpd.conf\nRUN apt-get update -y \\\n && apt-get install --no-install-recommends apache2 unzip php5 libapache2-mod-php5 php5-gd php5-json php5-sqlite php5-mysql php5-mcrypt mcrypt -y\n#   on veut une machine de dev qui affiche toutes les erreurs PHP\nRUN sed -i -e 's/^error_reporting\\s*=.*/error_reporting = E_ALL/' /etc/php5/apache2/php.ini\nRUN sed -i -e 's/^display_errors\\s*=.*/display_errors = On/' /etc/php5/apache2/php.ini\n#  # CLOUDUNIT :: END\nEXPOSE 80/tcp\nCMD [\"httpd-foreground\"]\nLABEL origin=\"application\"\nLABEL application-type=\"apache\"\nLABEL application-version=\"2-2\"\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM debian:jessie\n#  add our user and group first to make sure their IDs get assigned consistently, regardless of whatever dependencies get added\n# RUN groupadd -r www-data && useradd -r --create-home -g www-data www-data\nENV HTTPD_PREFIX=\"/usr/local/apache2\"\nENV PATH=\"$HTTPD_PREFIX/bin:$PATH\"\nRUN mkdir -p \"$HTTPD_PREFIX\" \\\n && chown www-data:www-data \"$HTTPD_PREFIX\"\nWORKDIR $HTTPD_PREFIX\n#  install httpd runtime dependencies\n#  https://httpd.apache.org/docs/2.4/install.html#requirements\nRUN apt-get update \\\n && apt-get install --no-install-recommends libapr1 libaprutil1 libaprutil1-ldap libapr1-dev libaprutil1-dev libpcre++0 libssl1.0.0 netcat -y \\\n && rm -r /var/lib/apt/lists/*\nRUN apt-get update \\\n && apt-get install --no-install-recommends netcat -y --no-install-suggests \\\n && rm -r /var/lib/apt/lists/*\nENV HTTPD_VERSION=\"2.2.34\"\nENV HTTPD_SHA1=\"829206394e238af0b800fc78d19c74ee466ecb23\"\nENV HTTPD_BZ2_URL=\"https://www.apache.org/dist/httpd/httpd-$HTTPD_VERSION.tar.bz2\"\nRUN set -x \\\n && buildDeps=' bzip2 ca-certificates gcc libpcre++-dev libssl-dev make wget ' \\\n && apt-get update \\\n && apt-get install --no-install-recommends $buildDeps -y \\\n && rm -r /var/lib/apt/lists/* \\\n && wget -O httpd.tar.bz2 \"$HTTPD_BZ2_URL\" \\\n && echo \"$HTTPD_SHA1 *httpd.tar.bz2\" | sha1sum -c - \\\n && wget -O httpd.tar.bz2.asc \"$HTTPD_BZ2_URL.asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B1B96F45DFBDCCF974019235193F180AB55D9977 \\\n && gpg --batch --verify httpd.tar.bz2.asc httpd.tar.bz2 \\\n && rm -r \"$GNUPGHOME\" httpd.tar.bz2.asc \\\n && mkdir -p src \\\n && tar -xvf httpd.tar.bz2 -C src --strip-components=1 \\\n && rm httpd.tar.bz2 \\\n && cd src \\\n && ./configure --prefix=\"$HTTPD_PREFIX\" --enable-mods-shared='all ssl ldap cache proxy authn_alias mem_cache file_cache authnz_ldap charset_lite dav_lock disk_cache' \\\n && make -j\"$( nproc ;)\" \\\n && make install \\\n && cd .. \\\n && rm -r src \\\n && sed -ri -e 's!^(\\s*CustomLog)\\s+\\S+!\\1 /proc/self/fd/1!g' -e 's!^(\\s*ErrorLog)\\s+\\S+!\\1 /proc/self/fd/2!g' \"$HTTPD_PREFIX/conf/httpd.conf\" \\\n && apt-get purge -y --auto-remove $buildDeps\nCOPY httpd-foreground /usr/local/bin/\n# # CLOUDUNIT :: BEGINNING\nENV CU_SERVER_RESTART_POST_DEPLOYMENT=\"false\"\nENV CU_SOFTWARE=\"\"\\\"\"\nENV CU_SERVER_MANAGER_PATH=\"\"\\\"\"\nENV CU_SERVER_MANAGER_PORT=\"80\"\nENV CU_SERVER_PORT=\"80\"\nENV CU_SERVER_RESTART_POST_CREDENTIALS=\"true\"\nENV CU_DEFAULT_LOG_FILE=\"access.log\"\nENV CU_LOGS=\"STDOUT\"\nENV JAVA_OPTS=\"\\\" \\\"\"\n#  add custom scripts\nADD scripts /opt/cloudunit/scripts\nRUN chmod +x /opt/cloudunit/scripts/*\n#  Ennable apache status app\nRUN echo \"<Location /server-status>\" >> /usr/local/apache2/conf/httpd.conf \\\n && echo \" SetHandler server-status\" >> /usr/local/apache2/conf/httpd.conf \\\n && echo \" Order deny,allow\" >> /usr/local/apache2/conf/httpd.conf \\\n && echo \" Deny from all\" >> /usr/local/apache2/conf/httpd.conf \\\n && echo \" Allow from 127.0.0.1\" >> /usr/local/apache2/conf/httpd.conf \\\n && echo \"</Location>\" >> /usr/local/apache2/conf/httpd.conf\nRUN apt-get update -y \\\n && apt-get install apache2 unzip php5 libapache2-mod-php5 php5-gd php5-json php5-sqlite php5-mysql php5-mcrypt mcrypt -y\n#  on veut une machine de dev qui affiche toutes les erreurs PHP\nRUN sed -i -e 's/^error_reporting\\s*=.*/error_reporting = E_ALL/' /etc/php5/apache2/php.ini\nRUN sed -i -e 's/^display_errors\\s*=.*/display_errors = On/' /etc/php5/apache2/php.ini\n# # CLOUDUNIT :: END\nEXPOSE 80/tcp\nCMD [\"httpd-foreground\"]\nLABEL origin=\"application\"\nLABEL application-type=\"apache\"\nLABEL application-version=\"2-2\"\n","injectedSmells":[],"originalDockerfileHash":"d796f49a75f118f61c76cc98432fef94","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM debian:jessie\n#   add our user and group first to make sure their IDs get assigned consistently, regardless of whatever dependencies get added\n#  RUN groupadd -r www-data && useradd -r --create-home -g www-data www-data\nENV HTTPD_PREFIX=\"/usr/local/apache2\"\nENV PATH=\"$HTTPD_PREFIX/bin:$PATH\"\nRUN mkdir -p \"$HTTPD_PREFIX\" \\\n && chown www-data:www-data \"$HTTPD_PREFIX\"\nWORKDIR $HTTPD_PREFIX\n#   install httpd runtime dependencies\n#   https://httpd.apache.org/docs/2.4/install.html#requirements\nRUN apt-get update \\\n && apt-get install --no-install-recommends libapr1 libaprutil1 libaprutil1-ldap libapr1-dev libaprutil1-dev libpcre++0 libssl1.0.0 netcat -y \\\n && rm -r /var/lib/apt/lists/*\nRUN apt-get update \\\n && apt-get install --no-install-recommends netcat -y --no-install-suggests \\\n && rm -r /var/lib/apt/lists/*\nENV HTTPD_VERSION=\"2.2.34\"\nENV HTTPD_SHA1=\"829206394e238af0b800fc78d19c74ee466ecb23\"\nENV HTTPD_BZ2_URL=\"https://www.apache.org/dist/httpd/httpd-$HTTPD_VERSION.tar.bz2\"\nRUN set -x \\\n && buildDeps=' bzip2 ca-certificates gcc libpcre++-dev libssl-dev make wget ' \\\n && apt-get update \\\n && apt-get install --no-install-recommends $buildDeps -y \\\n && rm -r /var/lib/apt/lists/* \\\n && wget -O httpd.tar.bz2 \"$HTTPD_BZ2_URL\" \\\n && echo \"$HTTPD_SHA1 *httpd.tar.bz2\" | sha1sum -c - \\\n && wget -O httpd.tar.bz2.asc \"$HTTPD_BZ2_URL.asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B1B96F45DFBDCCF974019235193F180AB55D9977 \\\n && gpg --batch --verify httpd.tar.bz2.asc httpd.tar.bz2 \\\n && rm -r \"$GNUPGHOME\" httpd.tar.bz2.asc \\\n && mkdir -p src \\\n && tar -xvf httpd.tar.bz2 -C src --strip-components=1 \\\n && rm httpd.tar.bz2 \\\n && cd src \\\n && ./configure --prefix=\"$HTTPD_PREFIX\" --enable-mods-shared='all ssl ldap cache proxy authn_alias mem_cache file_cache authnz_ldap charset_lite dav_lock disk_cache' \\\n && make -j\"$( nproc ;)\" \\\n && make install \\\n && cd .. \\\n && rm -r src \\\n && sed -ri -e 's!^(\\s*CustomLog)\\s+\\S+!\\1 /proc/self/fd/1!g' -e 's!^(\\s*ErrorLog)\\s+\\S+!\\1 /proc/self/fd/2!g' \"$HTTPD_PREFIX/conf/httpd.conf\" \\\n && apt-get purge -y --auto-remove $buildDeps\nCOPY httpd-foreground /usr/local/bin/\n#  # CLOUDUNIT :: BEGINNING\nENV CU_SERVER_RESTART_POST_DEPLOYMENT=\"false\"\nENV CU_SOFTWARE=\"\\\"\nENV CU_SERVER_MANAGER_PATH=\"\\\"\nENV CU_SERVER_MANAGER_PORT=\"80\"\nENV CU_SERVER_PORT=\"80\"\nENV CU_SERVER_RESTART_POST_CREDENTIALS=\"true\"\nENV CU_DEFAULT_LOG_FILE=\"access.log\"\nENV CU_LOGS=\"STDOUT\"\nENV JAVA_OPTS=\"\\\" \\\"\"\n#   add custom scripts\nADD scripts /opt/cloudunit/scripts\nRUN chmod +x /opt/cloudunit/scripts/*\n#   Ennable apache status app\nRUN echo \"<Location /server-status>\" >> /usr/local/apache2/conf/httpd.conf \\\n && echo \" SetHandler server-status\" >> /usr/local/apache2/conf/httpd.conf \\\n && echo \" Order deny,allow\" >> /usr/local/apache2/conf/httpd.conf \\\n && echo \" Deny from all\" >> /usr/local/apache2/conf/httpd.conf \\\n && echo \" Allow from 127.0.0.1\" >> /usr/local/apache2/conf/httpd.conf \\\n && echo \"</Location>\" >> /usr/local/apache2/conf/httpd.conf\nRUN apt-get update -y \\\n && apt-get install apache2 unzip php5 libapache2-mod-php5 php5-gd php5-json php5-sqlite php5-mysql php5-mcrypt mcrypt -y\n#   on veut une machine de dev qui affiche toutes les erreurs PHP\nRUN sed -i -e 's/^error_reporting\\s*=.*/error_reporting = E_ALL/' /etc/php5/apache2/php.ini\nRUN sed -i -e 's/^display_errors\\s*=.*/display_errors = On/' /etc/php5/apache2/php.ini\n#  # CLOUDUNIT :: END\nEXPOSE 80/tcp\nCMD [\"httpd-foreground\"]\nLABEL origin=\"application\"\nLABEL application-type=\"apache\"\nLABEL application-version=\"2-2\"\n","originalDockerfileUglifiedHash":"b0003a3b20286e6fa42c609fd5dfc5ce","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/cb6a7741a314eef9856d606b5c7ebf87faafa6fd.dockerfile"}