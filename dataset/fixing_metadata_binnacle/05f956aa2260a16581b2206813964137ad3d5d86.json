{"seed":2572150394,"processedDockerfileHash":"5c2a645b8f152475f5f7ed9fafc12c02","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apt-get","have-a-healthcheck"],"processedDockerfile":"#   Dockerfile with:\n#     - Android build environment\n#     - python-for-android dependencies\n#\n#   Build with:\n#       docker build --tag=p4apy2 --file Dockerfile.py2 .\n#\n#   Run with:\n#       docker run -it --rm p4apy2 /bin/sh -c '. venv/bin/activate && p4a apk --help'\n#\n#   Or for interactive shell:\n#       docker run -it --rm p4apy2\n#\n#   Note:\n#       Use 'docker run' without '--rm' flag for keeping the container and use\n#       'docker commit <container hash> <new image>' to extend the original image\nFROM ubuntu:18.04\nENV ANDROID_HOME=\"/opt/android\"\n#   configure locale\nRUN apt-get update -qq > /dev/null \\\n && apt-get install --no-install-recommends locales=2.27-3ubuntu1.6 -qq --yes \\\n && locale-gen en_US.UTF-8\nENV LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US.UTF-8\" \\\n    LC_ALL=\"en_US.UTF-8\"\nRUN apt-get update -y -qq \\\n && apt-get install --no-install-recommends curl=7.58.0-2ubuntu3.24 unzip=6.0-21ubuntu1.2 ca-certificates=20211016ubuntu0.18.04.1 -y -qq \\\n && apt-get -y autoremove\n#   retry helper script, refs:\n#   https://github.com/kivy/python-for-android/issues/1306\nENV RETRY=\"retry -t 3 --\"\nRUN curl https://raw.githubusercontent.com/kadwanev/retry/1.0.1/retry --output /usr/local/bin/retry \\\n && chmod +x /usr/local/bin/retry\nENV ANDROID_NDK_HOME=\"${ANDROID_HOME}/android-ndk\"\nENV ANDROID_NDK_VERSION=\"17c\"\nENV ANDROID_NDK_HOME_V=\"${ANDROID_NDK_HOME}-r${ANDROID_NDK_VERSION}\"\n#   get the latest version from https://developer.android.com/ndk/downloads/index.html\nENV ANDROID_NDK_ARCHIVE=\"android-ndk-r${ANDROID_NDK_VERSION}-linux-x86_64.zip\"\nENV ANDROID_NDK_DL_URL=\"https://dl.google.com/android/repository/${ANDROID_NDK_ARCHIVE}\"\n#   download and install Android NDK\nRUN ${RETRY} curl --location --progress-bar --insecure \"${ANDROID_NDK_DL_URL}\" --output \"${ANDROID_NDK_ARCHIVE}\" \\\n && mkdir --parents \"${ANDROID_NDK_HOME_V}\" \\\n && unzip -q \"${ANDROID_NDK_ARCHIVE}\" -d \"${ANDROID_HOME}\" \\\n && ln -sfn \"${ANDROID_NDK_HOME_V}\" \"${ANDROID_NDK_HOME}\" \\\n && rm -rf \"${ANDROID_NDK_ARCHIVE}\"\nENV ANDROID_SDK_HOME=\"${ANDROID_HOME}/android-sdk\"\n#   get the latest version from https://developer.android.com/studio/index.html\nENV ANDROID_SDK_TOOLS_VERSION=\"3859397\"\nENV ANDROID_SDK_BUILD_TOOLS_VERSION=\"26.0.2\"\nENV ANDROID_SDK_TOOLS_ARCHIVE=\"sdk-tools-linux-${ANDROID_SDK_TOOLS_VERSION}.zip\"\nENV ANDROID_SDK_TOOLS_DL_URL=\"https://dl.google.com/android/repository/${ANDROID_SDK_TOOLS_ARCHIVE}\"\n#   download and install Android SDK\nRUN ${RETRY} curl --location --progress-bar --insecure \"${ANDROID_SDK_TOOLS_DL_URL}\" --output \"${ANDROID_SDK_TOOLS_ARCHIVE}\" \\\n && mkdir --parents \"${ANDROID_SDK_HOME}\" \\\n && unzip -q \"${ANDROID_SDK_TOOLS_ARCHIVE}\" -d \"${ANDROID_SDK_HOME}\" \\\n && rm -rf \"${ANDROID_SDK_TOOLS_ARCHIVE}\"\n#   update Android SDK, install Android API, Build Tools...\nRUN mkdir --parents \"${ANDROID_SDK_HOME}/.android/\" \\\n && echo '### User Sources for Android SDK Manager' > \"${ANDROID_SDK_HOME}/.android/repositories.cfg\"\n#   accept Android licenses (JDK necessary!)\nRUN ${RETRY} apt -y install -qq --no-install-recommends openjdk-8-jdk \\\n && apt-get -y autoremove\nRUN yes | \"${ANDROID_SDK_HOME}/tools/bin/sdkmanager\" \"build-tools;${ANDROID_SDK_BUILD_TOOLS_VERSION}\" > /dev/null\n#   download platforms, API, build tools\nRUN \"${ANDROID_SDK_HOME}/tools/bin/sdkmanager\" \"platforms;android-19\" \\\n && \"${ANDROID_SDK_HOME}/tools/bin/sdkmanager\" \"platforms;android-27\" \\\n && \"${ANDROID_SDK_HOME}/tools/bin/sdkmanager\" \"build-tools;${ANDROID_SDK_BUILD_TOOLS_VERSION}\" \\\n && chmod +x \"${ANDROID_SDK_HOME}/tools/bin/avdmanager\"\nENV USER=\"user\"\nENV HOME_DIR=\"/home/${USER}\"\nENV WORK_DIR=\"${HOME_DIR}\" \\\n    PATH=\"${HOME_DIR}/.local/bin:${PATH}\"\n#   install system dependencies\nRUN ${RETRY} apt -y install -qq --no-install-recommends python virtualenv python-pip wget lbzip2 patch sudo \\\n && apt-get -y autoremove\n#   build dependencies\n#   https://buildozer.readthedocs.io/en/latest/installation.html#android-on-ubuntu-16-04-64bit\nRUN dpkg --add-architecture i386 \\\n && ${RETRY} apt -y update -qq \\\n && ${RETRY} apt -y install -qq --no-install-recommends build-essential ccache git python2.7 python2.7-dev libncurses5:i386 libstdc++6:i386 libgtk2.0-0:i386 libpangox-1.0-0:i386 libpangoxft-1.0-0:i386 libidn11:i386 zip zlib1g-dev zlib1g:i386 \\\n && apt-get -y autoremove\n#   specific recipes dependencies (e.g. libffi requires autoreconf binary)\nRUN ${RETRY} apt -y install -qq --no-install-recommends libffi-dev autoconf automake cmake gettext libltdl-dev libtool pkg-config \\\n && apt-get -y autoremove \\\n && apt-get -y clean\n#   prepare non root env\nRUN useradd --create-home --shell /bin/bash ${USER}\n#   with sudo access and no password\nRUN usermod -append --groups sudo ${USER}\nRUN echo \"%sudo ALL=(ALL) NOPASSWD: ALL\" >> /etc/sudoers\nRUN pip install cython==0.28.6 --upgrade\nWORKDIR ${WORK_DIR}\nCOPY --chown=user:user . ${WORK_DIR}\nRUN chown --recursive ${USER} ${ANDROID_SDK_HOME}\nUSER ${USER}\n#   install python-for-android from current branch\nRUN virtualenv --python=python venv \\\n && . venv/bin/activate \\\n && pip install -e .\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Dockerfile with:\n#    - Android build environment\n#    - python-for-android dependencies\n#\n#  Build with:\n#      docker build --tag=p4apy2 --file Dockerfile.py2 .\n#\n#  Run with:\n#      docker run -it --rm p4apy2 /bin/sh -c '. venv/bin/activate && p4a apk --help'\n#\n#  Or for interactive shell:\n#      docker run -it --rm p4apy2\n#\n#  Note:\n#      Use 'docker run' without '--rm' flag for keeping the container and use\n#      'docker commit <container hash> <new image>' to extend the original image\nFROM ubuntu:18.04\nENV ANDROID_HOME=\"/opt/android\"\n#  configure locale\nRUN apt-get update -qq > /dev/null \\\n && apt-get install -qq --yes --no-install-recommends locales \\\n && locale-gen en_US.UTF-8\nENV LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US.UTF-8\" \\\n    LC_ALL=\"en_US.UTF-8\"\nRUN apt-get -y update -qq \\\n && apt-get -y install -qq --no-install-recommends curl unzip ca-certificates \\\n && apt-get -y autoremove\n#  retry helper script, refs:\n#  https://github.com/kivy/python-for-android/issues/1306\nENV RETRY=\"retry -t 3 --\"\nRUN curl https://raw.githubusercontent.com/kadwanev/retry/1.0.1/retry --output /usr/local/bin/retry \\\n && chmod +x /usr/local/bin/retry\nENV ANDROID_NDK_HOME=\"${ANDROID_HOME}/android-ndk\"\nENV ANDROID_NDK_VERSION=\"17c\"\nENV ANDROID_NDK_HOME_V=\"${ANDROID_NDK_HOME}-r${ANDROID_NDK_VERSION}\"\n#  get the latest version from https://developer.android.com/ndk/downloads/index.html\nENV ANDROID_NDK_ARCHIVE=\"android-ndk-r${ANDROID_NDK_VERSION}-linux-x86_64.zip\"\nENV ANDROID_NDK_DL_URL=\"https://dl.google.com/android/repository/${ANDROID_NDK_ARCHIVE}\"\n#  download and install Android NDK\nRUN ${RETRY} curl --location --progress-bar --insecure \"${ANDROID_NDK_DL_URL}\" --output \"${ANDROID_NDK_ARCHIVE}\" \\\n && mkdir --parents \"${ANDROID_NDK_HOME_V}\" \\\n && unzip -q \"${ANDROID_NDK_ARCHIVE}\" -d \"${ANDROID_HOME}\" \\\n && ln -sfn \"${ANDROID_NDK_HOME_V}\" \"${ANDROID_NDK_HOME}\" \\\n && rm -rf \"${ANDROID_NDK_ARCHIVE}\"\nENV ANDROID_SDK_HOME=\"${ANDROID_HOME}/android-sdk\"\n#  get the latest version from https://developer.android.com/studio/index.html\nENV ANDROID_SDK_TOOLS_VERSION=\"3859397\"\nENV ANDROID_SDK_BUILD_TOOLS_VERSION=\"26.0.2\"\nENV ANDROID_SDK_TOOLS_ARCHIVE=\"sdk-tools-linux-${ANDROID_SDK_TOOLS_VERSION}.zip\"\nENV ANDROID_SDK_TOOLS_DL_URL=\"https://dl.google.com/android/repository/${ANDROID_SDK_TOOLS_ARCHIVE}\"\n#  download and install Android SDK\nRUN ${RETRY} curl --location --progress-bar --insecure \"${ANDROID_SDK_TOOLS_DL_URL}\" --output \"${ANDROID_SDK_TOOLS_ARCHIVE}\" \\\n && mkdir --parents \"${ANDROID_SDK_HOME}\" \\\n && unzip -q \"${ANDROID_SDK_TOOLS_ARCHIVE}\" -d \"${ANDROID_SDK_HOME}\" \\\n && rm -rf \"${ANDROID_SDK_TOOLS_ARCHIVE}\"\n#  update Android SDK, install Android API, Build Tools...\nRUN mkdir --parents \"${ANDROID_SDK_HOME}/.android/\" \\\n && echo '### User Sources for Android SDK Manager' > \"${ANDROID_SDK_HOME}/.android/repositories.cfg\"\n#  accept Android licenses (JDK necessary!)\nRUN ${RETRY} apt -y install -qq --no-install-recommends openjdk-8-jdk \\\n && apt-get -y autoremove\nRUN yes | \"${ANDROID_SDK_HOME}/tools/bin/sdkmanager\" \"build-tools;${ANDROID_SDK_BUILD_TOOLS_VERSION}\" > /dev/null\n#  download platforms, API, build tools\nRUN \"${ANDROID_SDK_HOME}/tools/bin/sdkmanager\" \"platforms;android-19\" \\\n && \"${ANDROID_SDK_HOME}/tools/bin/sdkmanager\" \"platforms;android-27\" \\\n && \"${ANDROID_SDK_HOME}/tools/bin/sdkmanager\" \"build-tools;${ANDROID_SDK_BUILD_TOOLS_VERSION}\" \\\n && chmod +x \"${ANDROID_SDK_HOME}/tools/bin/avdmanager\"\nENV USER=\"user\"\nENV HOME_DIR=\"/home/${USER}\"\nENV WORK_DIR=\"${HOME_DIR}\" \\\n    PATH=\"${HOME_DIR}/.local/bin:${PATH}\"\n#  install system dependencies\nRUN ${RETRY} apt -y install -qq --no-install-recommends python virtualenv python-pip wget lbzip2 patch sudo \\\n && apt-get -y autoremove\n#  build dependencies\n#  https://buildozer.readthedocs.io/en/latest/installation.html#android-on-ubuntu-16-04-64bit\nRUN dpkg --add-architecture i386 \\\n && ${RETRY} apt -y update -qq \\\n && ${RETRY} apt -y install -qq --no-install-recommends build-essential ccache git python2.7 python2.7-dev libncurses5:i386 libstdc++6:i386 libgtk2.0-0:i386 libpangox-1.0-0:i386 libpangoxft-1.0-0:i386 libidn11:i386 zip zlib1g-dev zlib1g:i386 \\\n && apt-get -y autoremove\n#  specific recipes dependencies (e.g. libffi requires autoreconf binary)\nRUN ${RETRY} apt -y install -qq --no-install-recommends libffi-dev autoconf automake cmake gettext libltdl-dev libtool pkg-config \\\n && apt-get -y autoremove \\\n && apt-get -y clean\n#  prepare non root env\nRUN useradd --create-home --shell /bin/bash ${USER}\n#  with sudo access and no password\nRUN usermod -append --groups sudo ${USER}\nRUN echo \"%sudo ALL=(ALL) NOPASSWD: ALL\" >> /etc/sudoers\nRUN pip install cython==0.28.6 --upgrade\nWORKDIR ${WORK_DIR}\nCOPY --chown=user:user . ${WORK_DIR}\nRUN chown --recursive ${USER} ${ANDROID_SDK_HOME}\nUSER ${USER}\n#  install python-for-android from current branch\nRUN virtualenv --python=python venv \\\n && . venv/bin/activate \\\n && pip install -e .\n","injectedSmells":[],"originalDockerfileHash":"2c993fe2b74d52539e7ac72c994fe67a","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Dockerfile with:\n#     - Android build environment\n#     - python-for-android dependencies\n#\n#   Build with:\n#       docker build --tag=p4apy2 --file Dockerfile.py2 .\n#\n#   Run with:\n#       docker run -it --rm p4apy2 /bin/sh -c '. venv/bin/activate && p4a apk --help'\n#\n#   Or for interactive shell:\n#       docker run -it --rm p4apy2\n#\n#   Note:\n#       Use 'docker run' without '--rm' flag for keeping the container and use\n#       'docker commit <container hash> <new image>' to extend the original image\nFROM ubuntu:18.04\nENV ANDROID_HOME=\"/opt/android\"\n#   configure locale\nRUN apt-get update -qq > /dev/null \\\n && apt-get install --no-install-recommends locales -qq --yes \\\n && locale-gen en_US.UTF-8\nENV LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US.UTF-8\" \\\n    LC_ALL=\"en_US.UTF-8\"\nRUN apt-get update -y -qq \\\n && apt-get install --no-install-recommends curl unzip ca-certificates -y -qq \\\n && apt-get -y autoremove\n#   retry helper script, refs:\n#   https://github.com/kivy/python-for-android/issues/1306\nENV RETRY=\"retry -t 3 --\"\nRUN curl https://raw.githubusercontent.com/kadwanev/retry/1.0.1/retry --output /usr/local/bin/retry \\\n && chmod +x /usr/local/bin/retry\nENV ANDROID_NDK_HOME=\"${ANDROID_HOME}/android-ndk\"\nENV ANDROID_NDK_VERSION=\"17c\"\nENV ANDROID_NDK_HOME_V=\"${ANDROID_NDK_HOME}-r${ANDROID_NDK_VERSION}\"\n#   get the latest version from https://developer.android.com/ndk/downloads/index.html\nENV ANDROID_NDK_ARCHIVE=\"android-ndk-r${ANDROID_NDK_VERSION}-linux-x86_64.zip\"\nENV ANDROID_NDK_DL_URL=\"https://dl.google.com/android/repository/${ANDROID_NDK_ARCHIVE}\"\n#   download and install Android NDK\nRUN ${RETRY} curl --location --progress-bar --insecure \"${ANDROID_NDK_DL_URL}\" --output \"${ANDROID_NDK_ARCHIVE}\" \\\n && mkdir --parents \"${ANDROID_NDK_HOME_V}\" \\\n && unzip -q \"${ANDROID_NDK_ARCHIVE}\" -d \"${ANDROID_HOME}\" \\\n && ln -sfn \"${ANDROID_NDK_HOME_V}\" \"${ANDROID_NDK_HOME}\" \\\n && rm -rf \"${ANDROID_NDK_ARCHIVE}\"\nENV ANDROID_SDK_HOME=\"${ANDROID_HOME}/android-sdk\"\n#   get the latest version from https://developer.android.com/studio/index.html\nENV ANDROID_SDK_TOOLS_VERSION=\"3859397\"\nENV ANDROID_SDK_BUILD_TOOLS_VERSION=\"26.0.2\"\nENV ANDROID_SDK_TOOLS_ARCHIVE=\"sdk-tools-linux-${ANDROID_SDK_TOOLS_VERSION}.zip\"\nENV ANDROID_SDK_TOOLS_DL_URL=\"https://dl.google.com/android/repository/${ANDROID_SDK_TOOLS_ARCHIVE}\"\n#   download and install Android SDK\nRUN ${RETRY} curl --location --progress-bar --insecure \"${ANDROID_SDK_TOOLS_DL_URL}\" --output \"${ANDROID_SDK_TOOLS_ARCHIVE}\" \\\n && mkdir --parents \"${ANDROID_SDK_HOME}\" \\\n && unzip -q \"${ANDROID_SDK_TOOLS_ARCHIVE}\" -d \"${ANDROID_SDK_HOME}\" \\\n && rm -rf \"${ANDROID_SDK_TOOLS_ARCHIVE}\"\n#   update Android SDK, install Android API, Build Tools...\nRUN mkdir --parents \"${ANDROID_SDK_HOME}/.android/\" \\\n && echo '### User Sources for Android SDK Manager' > \"${ANDROID_SDK_HOME}/.android/repositories.cfg\"\n#   accept Android licenses (JDK necessary!)\nRUN ${RETRY} apt -y install -qq --no-install-recommends openjdk-8-jdk \\\n && apt-get -y autoremove\nRUN yes | \"${ANDROID_SDK_HOME}/tools/bin/sdkmanager\" \"build-tools;${ANDROID_SDK_BUILD_TOOLS_VERSION}\" > /dev/null\n#   download platforms, API, build tools\nRUN \"${ANDROID_SDK_HOME}/tools/bin/sdkmanager\" \"platforms;android-19\" \\\n && \"${ANDROID_SDK_HOME}/tools/bin/sdkmanager\" \"platforms;android-27\" \\\n && \"${ANDROID_SDK_HOME}/tools/bin/sdkmanager\" \"build-tools;${ANDROID_SDK_BUILD_TOOLS_VERSION}\" \\\n && chmod +x \"${ANDROID_SDK_HOME}/tools/bin/avdmanager\"\nENV USER=\"user\"\nENV HOME_DIR=\"/home/${USER}\"\nENV WORK_DIR=\"${HOME_DIR}\" \\\n    PATH=\"${HOME_DIR}/.local/bin:${PATH}\"\n#   install system dependencies\nRUN ${RETRY} apt -y install -qq --no-install-recommends python virtualenv python-pip wget lbzip2 patch sudo \\\n && apt-get -y autoremove\n#   build dependencies\n#   https://buildozer.readthedocs.io/en/latest/installation.html#android-on-ubuntu-16-04-64bit\nRUN dpkg --add-architecture i386 \\\n && ${RETRY} apt -y update -qq \\\n && ${RETRY} apt -y install -qq --no-install-recommends build-essential ccache git python2.7 python2.7-dev libncurses5:i386 libstdc++6:i386 libgtk2.0-0:i386 libpangox-1.0-0:i386 libpangoxft-1.0-0:i386 libidn11:i386 zip zlib1g-dev zlib1g:i386 \\\n && apt-get -y autoremove\n#   specific recipes dependencies (e.g. libffi requires autoreconf binary)\nRUN ${RETRY} apt -y install -qq --no-install-recommends libffi-dev autoconf automake cmake gettext libltdl-dev libtool pkg-config \\\n && apt-get -y autoremove \\\n && apt-get -y clean\n#   prepare non root env\nRUN useradd --create-home --shell /bin/bash ${USER}\n#   with sudo access and no password\nRUN usermod -append --groups sudo ${USER}\nRUN echo \"%sudo ALL=(ALL) NOPASSWD: ALL\" >> /etc/sudoers\nRUN pip install cython==0.28.6 --upgrade\nWORKDIR ${WORK_DIR}\nCOPY --chown=user:user . ${WORK_DIR}\nRUN chown --recursive ${USER} ${ANDROID_SDK_HOME}\nUSER ${USER}\n#   install python-for-android from current branch\nRUN virtualenv --python=python venv \\\n && . venv/bin/activate \\\n && pip install -e .\n","originalDockerfileUglifiedHash":"2f67db2433861ee7ab702a8c2a97d68b","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/05f956aa2260a16581b2206813964137ad3d5d86.dockerfile"}