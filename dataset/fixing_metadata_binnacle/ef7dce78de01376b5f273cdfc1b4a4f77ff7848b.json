{"seed":3876808841,"processedDockerfileHash":"fa53fc79b6987660e702ca1ad8cf712d","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM devgeniem/openresty-pagespeed\nMAINTAINER Onni Hakala <onni.hakala@geniem.com>\n#  #\n#   Only use these during installation\n#  #\nARG LANG=C.UTF-8\nARG DEBIAN_FRONTEND=noninteractive\n#  #\n#   Install php7 packages from dotdeb.org\n#   - Dotdeb is an extra repository providing up-to-date packages for your Debian servers\n#  #\nRUN apt-get update \\\n && apt-get install --no-install-recommends curl=7.88.1-7ubuntu1 nano=7.2-1 ca-certificates=20230311 git=1:2.39.2-1ubuntu1 mysql-client=8.0.32-0ubuntu4 msmtp=1.8.23-1 netcat less=590-1.2 libmcrypt-dev=2.5.8-7 -y \\\n && echo \"deb http://packages.dotdeb.org jessie all\" > /etc/apt/sources.list.d/dotdeb.list \\\n && curl -sS https://www.dotdeb.org/dotdeb.gpg | apt-key add - \\\n && apt-get update \\\n && apt-get install --no-install-recommends php7.0-cli php7.0-common php7.0-apcu php7.0-apcu-bc php7.0-curl php7.0-json php7.0-mcrypt php7.0-opcache php7.0-readline php7.0-xml php7.0-zip php7.0-fpm php7.0-redis php7.0-mongodb php7.0-mysqli php7.0-intl php7.0-gd php7.0-mbstring php7.0-soap php7.0-bcmath php7.0-curl php7.0-ldap php7.0-mcrypt php7.0-imagick libmagickwand-dev=8:6.9.11.60+dfsg-1.6 -y \\\n && cd /tmp \\\n && apt-get download cron \\\n && dpkg --force-all -i cron*.deb \\\n && mkdir -p /var/spool/cron/crontabs \\\n && apt-get clean \\\n && apt-get autoremove \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /usr/share/doc/* /var/log/apt/* /var/log/*.log\n#   Install helpers\nRUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer \\\n && composer global require hirak/prestissimo \\\n && curl -L https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar -o /usr/local/bin/wp-cli \\\n && chmod +rx /usr/local/bin/wp-cli \\\n && ln -s /usr/local/bin/wp-cli /usr/bin/wp-cli \\\n && curl -L https://raw.githubusercontent.com/kvz/cronlock/master/cronlock -o /usr/local/bin/cronlock \\\n && chmod +rx /usr/local/bin/cronlock \\\n && ln -s /usr/local/bin/cronlock /usr/bin/cronlock\n#  #\n#   Add Project files like nginx and php-fpm processes and configs\n#   Also custom scripts and bashrc\n#  #\nCOPY rootfs/ /\n#   Run small fixes\nRUN set -x \\\n && mkdir -p /var/www/uploads \\\n && ln -sf /usr/sbin/php-fpm7.0 /usr/sbin/php-fpm \\\n && ln -sf /usr/bin/wp /usr/local/bin/wp\n#   This is for your project root\nENV PROJECT_ROOT=\"/var/www/project\"\nENV TERM=\"xterm\" \\\n    MYSQL_PORT=\"3306\" \\\n    PORT=\"8080\" \\\n    WEB_USER=\"wordpress\" \\\n    WEB_GROUP=\"web\" \\\n    WEB_UID=\"1000\" \\\n    WEB_GID=\"1001\" \\\n    REDIS_PORT=\"6379\" \\\n    REDIS_DATABASE=\"0\" \\\n    REDIS_PASSWORD=\"\" \\\n    REDIS_SCHEME=\"tcp\" \\\n    NGINX_REDIS_CACHE_TTL_DEFAULT=\"900\" \\\n    NGINX_REDIS_CACHE_TTL_MAX=\"4h\" \\\n    CRONLOCK_HOST=\"\" \\\n    WEB_ROOT=\"${PROJECT_ROOT}/web\" \\\n    WP_CORE=\"${PROJECT_ROOT}/web/wp\" \\\n    NGINX_INCLUDE_DIR=\"/var/www/project/nginx\" \\\n    NGINX_MAX_BODY_SIZE=\"10M\" \\\n    NGINX_BODY_BUFFER_SIZE=\"32k\" \\\n    NGINX_FASTCGI_TIMEOUT=\"30\" \\\n    NGINX_ERROR_LEVEL=\"warn\" \\\n    NGINX_ERROR_LOG=\"stderr\" \\\n    NGINX_ACCESS_LOG=\"/dev/stdout\" \\\n    NGINX_CACHE_KEY=\"wp_:nginx:$real_scheme$request_method$host$request_uri\" \\\n    PHP_MEMORY_LIMIT=\"128M\" \\\n    PHP_MAX_INPUT_VARS=\"1000\" \\\n    PHP_ERROR_LOG=\"/proc/self/fd/1\" \\\n    PHP_ERROR_LOG_LEVEL=\"warning\" \\\n    PHP_ERROR_LOG_MAX_LEN=\"8192\" \\\n    PHP_SESSION_REDIS_DB=\"0\" \\\n    PHP_SESSION_HANDLER=\"files\" \\\n    PHP_OPCACHE_MAX_FILES=\"8000\" \\\n    PHP_OPCACHE_MAX_MEMORY=\"128\" \\\n    SMTP_HOST=\"172.17.0.1\" \\\n    UPLOADS_ROOT=\"/var/www/uploads\" \\\n    TZ=\"Europe/Helsinki\"\n#   Setup $TZ. Remember to run this again in your own build\nRUN dpkg-reconfigure tzdata \\\n && chmod +x /etc/cont-init.d/*\n#   Set default path to project folder for easier running commands in project\nWORKDIR ${PROJECT_ROOT}\nEXPOSE ${PORT}\nENTRYPOINT [\"/init\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM devgeniem/openresty-pagespeed\nMAINTAINER Onni Hakala <onni.hakala@geniem.com>\n# #\n#  Only use these during installation\n# #\nARG LANG=C.UTF-8\nARG DEBIAN_FRONTEND=noninteractive\n# #\n#  Install php7 packages from dotdeb.org\n#  - Dotdeb is an extra repository providing up-to-date packages for your Debian servers\n# #\nRUN apt-get update \\\n && apt-get install --no-install-recommends curl nano ca-certificates git mysql-client msmtp netcat less libmcrypt-dev -y \\\n && echo \"deb http://packages.dotdeb.org jessie all\" > /etc/apt/sources.list.d/dotdeb.list \\\n && curl -sS https://www.dotdeb.org/dotdeb.gpg | apt-key add - \\\n && apt-get update \\\n && apt-get install --no-install-recommends php7.0-cli php7.0-common php7.0-apcu php7.0-apcu-bc php7.0-curl php7.0-json php7.0-mcrypt php7.0-opcache php7.0-readline php7.0-xml php7.0-zip php7.0-fpm php7.0-redis php7.0-mongodb php7.0-mysqli php7.0-intl php7.0-gd php7.0-mbstring php7.0-soap php7.0-bcmath php7.0-curl php7.0-ldap php7.0-mcrypt php7.0-imagick libmagickwand-dev -y \\\n && cd /tmp \\\n && apt-get download cron \\\n && dpkg --force-all -i cron*.deb \\\n && mkdir -p /var/spool/cron/crontabs \\\n && apt-get clean \\\n && apt-get autoremove \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /usr/share/doc/* /var/log/apt/* /var/log/*.log\n#  Install helpers\nRUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer \\\n && composer global require hirak/prestissimo \\\n && curl -L https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar -o /usr/local/bin/wp-cli \\\n && chmod +rx /usr/local/bin/wp-cli \\\n && ln -s /usr/local/bin/wp-cli /usr/bin/wp-cli \\\n && curl -L https://raw.githubusercontent.com/kvz/cronlock/master/cronlock -o /usr/local/bin/cronlock \\\n && chmod +rx /usr/local/bin/cronlock \\\n && ln -s /usr/local/bin/cronlock /usr/bin/cronlock\n# #\n#  Add Project files like nginx and php-fpm processes and configs\n#  Also custom scripts and bashrc\n# #\nCOPY rootfs/ /\n#  Run small fixes\nRUN set -x \\\n && mkdir -p /var/www/uploads \\\n && ln -sf /usr/sbin/php-fpm7.0 /usr/sbin/php-fpm \\\n && ln -sf /usr/bin/wp /usr/local/bin/wp\n#  This is for your project root\nENV PROJECT_ROOT=\"/var/www/project\"\nENV TERM=\"xterm\" \\\n    MYSQL_PORT=\"3306\" \\\n    PORT=\"8080\" \\\n    WEB_USER=\"wordpress\" \\\n    WEB_GROUP=\"web\" \\\n    WEB_UID=\"1000\" \\\n    WEB_GID=\"1001\" \\\n    REDIS_PORT=\"6379\" \\\n    REDIS_DATABASE=\"0\" \\\n    REDIS_PASSWORD=\"\" \\\n    REDIS_SCHEME=\"tcp\" \\\n    NGINX_REDIS_CACHE_TTL_DEFAULT=\"900\" \\\n    NGINX_REDIS_CACHE_TTL_MAX=\"4h\" \\\n    CRONLOCK_HOST=\"\" \\\n    WEB_ROOT=\"${PROJECT_ROOT}/web\" \\\n    WP_CORE=\"${PROJECT_ROOT}/web/wp\" \\\n    NGINX_INCLUDE_DIR=\"/var/www/project/nginx\" \\\n    NGINX_MAX_BODY_SIZE=\"10M\" \\\n    NGINX_BODY_BUFFER_SIZE=\"32k\" \\\n    NGINX_FASTCGI_TIMEOUT=\"30\" \\\n    NGINX_ERROR_LEVEL=\"warn\" \\\n    NGINX_ERROR_LOG=\"stderr\" \\\n    NGINX_ACCESS_LOG=\"/dev/stdout\" \\\n    NGINX_CACHE_KEY=\"wp_:nginx:$real_scheme$request_method$host$request_uri\" \\\n    PHP_MEMORY_LIMIT=\"128M\" \\\n    PHP_MAX_INPUT_VARS=\"1000\" \\\n    PHP_ERROR_LOG=\"/proc/self/fd/1\" \\\n    PHP_ERROR_LOG_LEVEL=\"warning\" \\\n    PHP_ERROR_LOG_MAX_LEN=\"8192\" \\\n    PHP_SESSION_REDIS_DB=\"0\" \\\n    PHP_SESSION_HANDLER=\"files\" \\\n    PHP_OPCACHE_MAX_FILES=\"8000\" \\\n    PHP_OPCACHE_MAX_MEMORY=\"128\" \\\n    SMTP_HOST=\"172.17.0.1\" \\\n    UPLOADS_ROOT=\"/var/www/uploads\" \\\n    TZ=\"Europe/Helsinki\"\n#  Setup $TZ. Remember to run this again in your own build\nRUN dpkg-reconfigure tzdata \\\n && chmod +x /etc/cont-init.d/*\n#  Set default path to project folder for easier running commands in project\nWORKDIR ${PROJECT_ROOT}\nEXPOSE ${PORT}\nENTRYPOINT [\"/init\"]\n","injectedSmells":[],"originalDockerfileHash":"cad2f69894da19e595d857e0e7136889","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM devgeniem/openresty-pagespeed\nMAINTAINER Onni Hakala <onni.hakala@geniem.com>\n#  #\n#   Only use these during installation\n#  #\nARG LANG=C.UTF-8\nARG DEBIAN_FRONTEND=noninteractive\n#  #\n#   Install php7 packages from dotdeb.org\n#   - Dotdeb is an extra repository providing up-to-date packages for your Debian servers\n#  #\nRUN apt-get update \\\n && apt-get install --no-install-recommends curl nano ca-certificates git mysql-client msmtp netcat less libmcrypt-dev -y \\\n && echo \"deb http://packages.dotdeb.org jessie all\" > /etc/apt/sources.list.d/dotdeb.list \\\n && curl -sS https://www.dotdeb.org/dotdeb.gpg | apt-key add - \\\n && apt-get update \\\n && apt-get install --no-install-recommends php7.0-cli php7.0-common php7.0-apcu php7.0-apcu-bc php7.0-curl php7.0-json php7.0-mcrypt php7.0-opcache php7.0-readline php7.0-xml php7.0-zip php7.0-fpm php7.0-redis php7.0-mongodb php7.0-mysqli php7.0-intl php7.0-gd php7.0-mbstring php7.0-soap php7.0-bcmath php7.0-curl php7.0-ldap php7.0-mcrypt php7.0-imagick libmagickwand-dev -y \\\n && cd /tmp \\\n && apt-get download cron \\\n && dpkg --force-all -i cron*.deb \\\n && mkdir -p /var/spool/cron/crontabs \\\n && apt-get clean \\\n && apt-get autoremove \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /usr/share/doc/* /var/log/apt/* /var/log/*.log\n#   Install helpers\nRUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer \\\n && composer global require hirak/prestissimo \\\n && curl -L https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar -o /usr/local/bin/wp-cli \\\n && chmod +rx /usr/local/bin/wp-cli \\\n && ln -s /usr/local/bin/wp-cli /usr/bin/wp-cli \\\n && curl -L https://raw.githubusercontent.com/kvz/cronlock/master/cronlock -o /usr/local/bin/cronlock \\\n && chmod +rx /usr/local/bin/cronlock \\\n && ln -s /usr/local/bin/cronlock /usr/bin/cronlock\n#  #\n#   Add Project files like nginx and php-fpm processes and configs\n#   Also custom scripts and bashrc\n#  #\nCOPY rootfs/ /\n#   Run small fixes\nRUN set -x \\\n && mkdir -p /var/www/uploads \\\n && ln -sf /usr/sbin/php-fpm7.0 /usr/sbin/php-fpm \\\n && ln -sf /usr/bin/wp /usr/local/bin/wp\n#   This is for your project root\nENV PROJECT_ROOT=\"/var/www/project\"\nENV TERM=\"xterm\" \\\n    MYSQL_PORT=\"3306\" \\\n    PORT=\"8080\" \\\n    WEB_USER=\"wordpress\" \\\n    WEB_GROUP=\"web\" \\\n    WEB_UID=\"1000\" \\\n    WEB_GID=\"1001\" \\\n    REDIS_PORT=\"6379\" \\\n    REDIS_DATABASE=\"0\" \\\n    REDIS_PASSWORD=\"\" \\\n    REDIS_SCHEME=\"tcp\" \\\n    NGINX_REDIS_CACHE_TTL_DEFAULT=\"900\" \\\n    NGINX_REDIS_CACHE_TTL_MAX=\"4h\" \\\n    CRONLOCK_HOST=\"\" \\\n    WEB_ROOT=\"${PROJECT_ROOT}/web\" \\\n    WP_CORE=\"${PROJECT_ROOT}/web/wp\" \\\n    NGINX_INCLUDE_DIR=\"/var/www/project/nginx\" \\\n    NGINX_MAX_BODY_SIZE=\"10M\" \\\n    NGINX_BODY_BUFFER_SIZE=\"32k\" \\\n    NGINX_FASTCGI_TIMEOUT=\"30\" \\\n    NGINX_ERROR_LEVEL=\"warn\" \\\n    NGINX_ERROR_LOG=\"stderr\" \\\n    NGINX_ACCESS_LOG=\"/dev/stdout\" \\\n    NGINX_CACHE_KEY=\"wp_:nginx:$real_scheme$request_method$host$request_uri\" \\\n    PHP_MEMORY_LIMIT=\"128M\" \\\n    PHP_MAX_INPUT_VARS=\"1000\" \\\n    PHP_ERROR_LOG=\"/proc/self/fd/1\" \\\n    PHP_ERROR_LOG_LEVEL=\"warning\" \\\n    PHP_ERROR_LOG_MAX_LEN=\"8192\" \\\n    PHP_SESSION_REDIS_DB=\"0\" \\\n    PHP_SESSION_HANDLER=\"files\" \\\n    PHP_OPCACHE_MAX_FILES=\"8000\" \\\n    PHP_OPCACHE_MAX_MEMORY=\"128\" \\\n    SMTP_HOST=\"172.17.0.1\" \\\n    UPLOADS_ROOT=\"/var/www/uploads\" \\\n    TZ=\"Europe/Helsinki\"\n#   Setup $TZ. Remember to run this again in your own build\nRUN dpkg-reconfigure tzdata \\\n && chmod +x /etc/cont-init.d/*\n#   Set default path to project folder for easier running commands in project\nWORKDIR ${PROJECT_ROOT}\nEXPOSE ${PORT}\nENTRYPOINT [\"/init\"]\n","originalDockerfileUglifiedHash":"6dc308162c39e3b0fb4ba9d12530c59f","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/ef7dce78de01376b5f273cdfc1b4a4f77ff7848b.dockerfile"}