{"seed":545696992,"processedDockerfileHash":"a8a23d2d9a8ef4ef03a9e2c8e4bb9331","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Start with the \"official\" Elixir build (this simplifies quite a bit here).\n#   This uses the \"official\" Erlang build (right now at 19.1.5 and includes rebar 2 & 3) \n#   on top of Debian jessie.\nFROM elixir:1.4.0\nMAINTAINER Paul Lamb <paul@oil-law.com>\nENV REFRESHED_AT=\"2017-01-15\"\n#   2017-01-15 update to elixir 1.4.0\n#   2017-01-01 Switch to copying from \"official\" node \n#   2016-11-03 Switch to \"official\" Elixir Dockerfile for base and node 6.7.0\n#   2016-11-02 updated to Erlang 19 and Elixir 1.3\n#   2015-12-20 update Erlang to 18.* so that it will pick up the latest one (18.2 isn't in repo yet)\n#   Install hex\nRUN /usr/local/bin/mix local.hex --force \\\n && /usr/local/bin/mix hex.info\n#   -----------------------------------------------------------------------------\n#   node:6.9.2\n#   https://hub.docker.com/_/node/\nRUN apt-get update \\\n && apt-get install --no-install-recommends autoconf automake bzip2 file g++ gcc imagemagick libbz2-dev libc6-dev libcurl4-openssl-dev libdb-dev libevent-dev libffi-dev libgdbm-dev libgeoip-dev libglib2.0-dev libjpeg-dev libkrb5-dev liblzma-dev libmagickcore-dev libmagickwand-dev libmysqlclient-dev libncurses-dev libpng-dev libpq-dev libreadline-dev libsqlite3-dev libssl-dev libtool libwebp-dev libxml2-dev libxslt-dev libyaml-dev make patch xz-utils zlib1g-dev -y \\\n && rm -rf /var/lib/apt/lists/*\nRUN groupadd --gid 1000 node \\\n && useradd --uid 1000 --gid node --shell /bin/bash --create-home node\n#   gpg keys listed at https://github.com/nodejs/node\nRUN set -ex \\\n && for key in 9554F04D7259F04124DE6B476D5A82AC7E37093B 94AE36675C464D64BAFA68DD7434390BDBE9B9C5 0034A06D9D9B0064CE8ADF6BF1747F4AD2306D93 FD3A5288F042B6850C66B31F09FE44734EB7990E 71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 DD8F2338BAE7501E3DD5AC78C273792F7D83545D B9AE9905FFD7803F25714661B63B535A4C206CA9 C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8; do gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\" ; done\nENV NPM_CONFIG_LOGLEVEL=\"info\"\nENV NODE_VERSION=\"6.9.2\"\nRUN curl -SLO \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.xz\" \\\n && curl -SLO \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\" \\\n && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc \\\n && grep \" node-v$NODE_VERSION-linux-x64.tar.xz$\" SHASUMS256.txt | sha256sum -c - \\\n && tar -xJf \"node-v$NODE_VERSION-linux-x64.tar.xz\" -C /usr/local --strip-components=1 \\\n && rm \"node-v$NODE_VERSION-linux-x64.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt \\\n && ln -s /usr/local/bin/node /usr/local/bin/nodejs\n#   -----------------------------------------------------------------------------\n#   This prevents us from installing devDependencies\n#   This causes brunch to build minified and hashed assets\nENV MIX_ENV=\"prod\" \\\n    BRUNCH_ENV=\"production\"\nWORKDIR /app\nCOPY . /app\nRUN mix deps.get \\\n && mix deps.compile \\\n && mix compile\n#   install node dependencies and output static assets\n#   do this after mix deps.get since the phoenix & phoenix_html node modules reference\n#   files in these dependencies\nRUN npm install \\\n && npm rebuild node-sass \\\n && node node_modules/brunch/bin/brunch build \\\n && mix phoenix.digest\nCMD [\"bash\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Start with the \"official\" Elixir build (this simplifies quite a bit here).\n#  This uses the \"official\" Erlang build (right now at 19.1.5 and includes rebar 2 & 3) \n#  on top of Debian jessie.\nFROM elixir:1.4.0\nMAINTAINER Paul Lamb <paul@oil-law.com>\nENV REFRESHED_AT=\"2017-01-15\"\n#  2017-01-15 update to elixir 1.4.0\n#  2017-01-01 Switch to copying from \"official\" node \n#  2016-11-03 Switch to \"official\" Elixir Dockerfile for base and node 6.7.0\n#  2016-11-02 updated to Erlang 19 and Elixir 1.3\n#  2015-12-20 update Erlang to 18.* so that it will pick up the latest one (18.2 isn't in repo yet)\n#  Install hex\nRUN /usr/local/bin/mix local.hex --force \\\n && /usr/local/bin/mix hex.info\n#  -----------------------------------------------------------------------------\n#  node:6.9.2\n#  https://hub.docker.com/_/node/\nRUN apt-get update \\\n && apt-get install --no-install-recommends autoconf automake bzip2 file g++ gcc imagemagick libbz2-dev libc6-dev libcurl4-openssl-dev libdb-dev libevent-dev libffi-dev libgdbm-dev libgeoip-dev libglib2.0-dev libjpeg-dev libkrb5-dev liblzma-dev libmagickcore-dev libmagickwand-dev libmysqlclient-dev libncurses-dev libpng-dev libpq-dev libreadline-dev libsqlite3-dev libssl-dev libtool libwebp-dev libxml2-dev libxslt-dev libyaml-dev make patch xz-utils zlib1g-dev -y \\\n && rm -rf /var/lib/apt/lists/*\nRUN groupadd --gid 1000 node \\\n && useradd --uid 1000 --gid node --shell /bin/bash --create-home node\n#  gpg keys listed at https://github.com/nodejs/node\nRUN set -ex \\\n && for key in 9554F04D7259F04124DE6B476D5A82AC7E37093B 94AE36675C464D64BAFA68DD7434390BDBE9B9C5 0034A06D9D9B0064CE8ADF6BF1747F4AD2306D93 FD3A5288F042B6850C66B31F09FE44734EB7990E 71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 DD8F2338BAE7501E3DD5AC78C273792F7D83545D B9AE9905FFD7803F25714661B63B535A4C206CA9 C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8; do gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\" ; done\nENV NPM_CONFIG_LOGLEVEL=\"info\"\nENV NODE_VERSION=\"6.9.2\"\nRUN curl -SLO \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.xz\" \\\n && curl -SLO \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\" \\\n && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc \\\n && grep \" node-v$NODE_VERSION-linux-x64.tar.xz$\" SHASUMS256.txt | sha256sum -c - \\\n && tar -xJf \"node-v$NODE_VERSION-linux-x64.tar.xz\" -C /usr/local --strip-components=1 \\\n && rm \"node-v$NODE_VERSION-linux-x64.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt \\\n && ln -s /usr/local/bin/node /usr/local/bin/nodejs\n#  -----------------------------------------------------------------------------\n#  This prevents us from installing devDependencies\n#  This causes brunch to build minified and hashed assets\nENV MIX_ENV=\"prod\" \\\n    BRUNCH_ENV=\"production\"\nWORKDIR /app\nCOPY . /app\nRUN mix deps.get \\\n && mix deps.compile \\\n && mix compile\n#  install node dependencies and output static assets\n#  do this after mix deps.get since the phoenix & phoenix_html node modules reference\n#  files in these dependencies\nRUN npm install \\\n && npm rebuild node-sass \\\n && node node_modules/brunch/bin/brunch build \\\n && mix phoenix.digest\nCMD [\"bash\"]\n","injectedSmells":[],"originalDockerfileHash":"c1da704b9a1f391f7d2a3a572086ace0","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Start with the \"official\" Elixir build (this simplifies quite a bit here).\n#   This uses the \"official\" Erlang build (right now at 19.1.5 and includes rebar 2 & 3) \n#   on top of Debian jessie.\nFROM elixir:1.4.0\nMAINTAINER Paul Lamb <paul@oil-law.com>\nENV REFRESHED_AT=\"2017-01-15\"\n#   2017-01-15 update to elixir 1.4.0\n#   2017-01-01 Switch to copying from \"official\" node \n#   2016-11-03 Switch to \"official\" Elixir Dockerfile for base and node 6.7.0\n#   2016-11-02 updated to Erlang 19 and Elixir 1.3\n#   2015-12-20 update Erlang to 18.* so that it will pick up the latest one (18.2 isn't in repo yet)\n#   Install hex\nRUN /usr/local/bin/mix local.hex --force \\\n && /usr/local/bin/mix hex.info\n#   -----------------------------------------------------------------------------\n#   node:6.9.2\n#   https://hub.docker.com/_/node/\nRUN apt-get update \\\n && apt-get install --no-install-recommends autoconf automake bzip2 file g++ gcc imagemagick libbz2-dev libc6-dev libcurl4-openssl-dev libdb-dev libevent-dev libffi-dev libgdbm-dev libgeoip-dev libglib2.0-dev libjpeg-dev libkrb5-dev liblzma-dev libmagickcore-dev libmagickwand-dev libmysqlclient-dev libncurses-dev libpng-dev libpq-dev libreadline-dev libsqlite3-dev libssl-dev libtool libwebp-dev libxml2-dev libxslt-dev libyaml-dev make patch xz-utils zlib1g-dev -y \\\n && rm -rf /var/lib/apt/lists/*\nRUN groupadd --gid 1000 node \\\n && useradd --uid 1000 --gid node --shell /bin/bash --create-home node\n#   gpg keys listed at https://github.com/nodejs/node\nRUN set -ex \\\n && for key in 9554F04D7259F04124DE6B476D5A82AC7E37093B 94AE36675C464D64BAFA68DD7434390BDBE9B9C5 0034A06D9D9B0064CE8ADF6BF1747F4AD2306D93 FD3A5288F042B6850C66B31F09FE44734EB7990E 71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 DD8F2338BAE7501E3DD5AC78C273792F7D83545D B9AE9905FFD7803F25714661B63B535A4C206CA9 C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8; do gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\" ; done\nENV NPM_CONFIG_LOGLEVEL=\"info\"\nENV NODE_VERSION=\"6.9.2\"\nRUN curl -SLO \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.xz\" \\\n && curl -SLO \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\" \\\n && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc \\\n && grep \" node-v$NODE_VERSION-linux-x64.tar.xz$\" SHASUMS256.txt | sha256sum -c - \\\n && tar -xJf \"node-v$NODE_VERSION-linux-x64.tar.xz\" -C /usr/local --strip-components=1 \\\n && rm \"node-v$NODE_VERSION-linux-x64.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt \\\n && ln -s /usr/local/bin/node /usr/local/bin/nodejs\n#   -----------------------------------------------------------------------------\n#   This prevents us from installing devDependencies\n#   This causes brunch to build minified and hashed assets\nENV MIX_ENV=\"prod\" \\\n    BRUNCH_ENV=\"production\"\nWORKDIR /app\nCOPY . /app\nRUN mix deps.get \\\n && mix deps.compile \\\n && mix compile\n#   install node dependencies and output static assets\n#   do this after mix deps.get since the phoenix & phoenix_html node modules reference\n#   files in these dependencies\nRUN npm install \\\n && npm rebuild node-sass \\\n && node node_modules/brunch/bin/brunch build \\\n && mix phoenix.digest\nCMD [\"bash\"]\n","originalDockerfileUglifiedHash":"e372785fbfed91bc9c3772a5a8a74b11","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/9198442657e1dcf0771a4e38583dafc8fa9e87a6.dockerfile"}