{"seed":3748331489,"processedDockerfileHash":"5fd2092b12f2770f84dd1a9bcadc800a","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM ubuntu:16.04\nLABEL maintainer=\"Cong Xu <cong.xu@intel.com>\"\n#   This parameter MUST be set by parameterized_docker_build.sh\nARG TF_WHL_URL\n#   Optional parameters\nARG TF_BUILD_VERSION=r1.9\nARG PYTHON=\"python\"\nARG PYTHON_DEV=\"python-dev\"\nARG PIP=\"pip\"\n#   Pick up some TF dependencies\nRUN apt-get update \\\n && apt-get install --no-install-recommends build-essential=12.1ubuntu2 curl=7.47.0-1ubuntu2.19 libfreetype6-dev=2.6.1-0.1ubuntu2.5 libhdf5-serial-dev=1.8.16+docs-4ubuntu1.1 libpng12-dev=1.2.54-1ubuntu1.1 libzmq3-dev=4.1.4-7ubuntu0.1 pkg-config=0.29.1-0ubuntu1 python=2.7.12-1~16.04 rsync=3.1.1-3ubuntu1.3 software-properties-common=0.96.20.10 unzip=6.0-20ubuntu1.1 ${PYTHON_DEV} -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\nRUN curl -O https://bootstrap.pypa.io/get-pip.py \\\n && python get-pip.py \\\n && rm get-pip.py\nRUN ${PIP} --no-cache-dir install Pillow h5py ipykernel jupyter keras_applications==1.0.5 keras_preprocessing==1.0.3 matplotlib numpy pandas scipy sklearn \\\n && python -m ipykernel.kernelspec\nCOPY ${TF_WHL_URL} /\nRUN ${PIP} install --no-cache-dir --force-reinstall /${TF_WHL_URL} \\\n && rm -rf /${TF_WHL_URL}\nRUN if [ \"${PYTHON}\" = \"python3\" ] ; then ln -s -f /usr/bin/python3 /usr/bin/python ; fi\n#   Set up our notebook config.\nCOPY jupyter_notebook_config.py /root/.jupyter/\n#   Copy sample notebooks.\nCOPY notebooks /notebooks\n#   Jupyter has issues with being run directly:\n#     https://github.com/ipython/ipython/issues/7062\n#   We just add a little wrapper script.\nCOPY run_jupyter.sh /\nWORKDIR /root\n#   Install Open MPI\nRUN mkdir /tmp/openmpi \\\n && cd /tmp/openmpi \\\n && wget https://www.open-mpi.org/software/ompi/v3.0/downloads/openmpi-3.0.0.tar.gz \\\n && tar zxf openmpi-3.0.0.tar.gz \\\n && cd openmpi-3.0.0 \\\n && ./configure --enable-orterun-prefix-by-default \\\n && make -j $( nproc ;) all \\\n && make install \\\n && ldconfig \\\n && rm -rf /tmp/openmpi\n#   Create a wrapper for OpenMPI to allow running as root by default\nRUN mv /usr/local/bin/mpirun /usr/local/bin/mpirun.real \\\n && echo '#!/bin/bash' > /usr/local/bin/mpirun \\\n && echo 'mpirun.real --allow-run-as-root \"$@\"' >> /usr/local/bin/mpirun \\\n && chmod a+x /usr/local/bin/mpirun\n#   Configure OpenMPI to run good defaults:\nRUN echo \"btl_tcp_if_exclude = lo,docker0\" >> /usr/local/etc/openmpi-mca-params.conf\n#   Install Horovod\nRUN ${PIP} install --no-cache-dir horovod\n#   Install OpenSSH for MPI to communicate between containers\nRUN mkdir -p /var/run/sshd\n#   Allow OpenSSH to talk to containers without asking for confirmation\nRUN cat /etc/ssh/ssh_config | grep -v StrictHostKeyChecking > /etc/ssh/ssh_config.new \\\n && echo \" StrictHostKeyChecking no\" >> /etc/ssh/ssh_config.new \\\n && mv /etc/ssh/ssh_config.new /etc/ssh/ssh_config\n#   TensorBoard\nEXPOSE 6006/tcp\n#   IPython\nEXPOSE 8888/tcp\nWORKDIR \"/notebooks\"\nCMD [\"/run_jupyter.sh\", \"--allow-root\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:16.04\nLABEL maintainer=\"Cong Xu <cong.xu@intel.com>\"\n#  This parameter MUST be set by parameterized_docker_build.sh\nARG TF_WHL_URL\n#  Optional parameters\nARG TF_BUILD_VERSION=r1.9\nARG PYTHON=\"python\"\nARG PYTHON_DEV=\"python-dev\"\nARG PIP=\"pip\"\n#  Pick up some TF dependencies\nRUN apt-get update \\\n && apt-get install --no-install-recommends build-essential curl libfreetype6-dev libhdf5-serial-dev libpng12-dev libzmq3-dev pkg-config python rsync software-properties-common unzip ${PYTHON_DEV} -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\nRUN curl -O https://bootstrap.pypa.io/get-pip.py \\\n && python get-pip.py \\\n && rm get-pip.py\nRUN ${PIP} --no-cache-dir install Pillow h5py ipykernel jupyter keras_applications==1.0.5 keras_preprocessing==1.0.3 matplotlib numpy pandas scipy sklearn \\\n && python -m ipykernel.kernelspec\nCOPY ${TF_WHL_URL} /\nRUN ${PIP} install --no-cache-dir --force-reinstall /${TF_WHL_URL} \\\n && rm -rf /${TF_WHL_URL}\nRUN if [ \"${PYTHON}\" = \"python3\" ] ; then ln -s -f /usr/bin/python3 /usr/bin/python ; fi\n#  Set up our notebook config.\nCOPY jupyter_notebook_config.py /root/.jupyter/\n#  Copy sample notebooks.\nCOPY notebooks /notebooks\n#  Jupyter has issues with being run directly:\n#    https://github.com/ipython/ipython/issues/7062\n#  We just add a little wrapper script.\nCOPY run_jupyter.sh /\nWORKDIR /root\n#  Install Open MPI\nRUN mkdir /tmp/openmpi \\\n && cd /tmp/openmpi \\\n && wget https://www.open-mpi.org/software/ompi/v3.0/downloads/openmpi-3.0.0.tar.gz \\\n && tar zxf openmpi-3.0.0.tar.gz \\\n && cd openmpi-3.0.0 \\\n && ./configure --enable-orterun-prefix-by-default \\\n && make -j $( nproc ;) all \\\n && make install \\\n && ldconfig \\\n && rm -rf /tmp/openmpi\n#  Create a wrapper for OpenMPI to allow running as root by default\nRUN mv /usr/local/bin/mpirun /usr/local/bin/mpirun.real \\\n && echo '#!/bin/bash' > /usr/local/bin/mpirun \\\n && echo 'mpirun.real --allow-run-as-root \"$@\"' >> /usr/local/bin/mpirun \\\n && chmod a+x /usr/local/bin/mpirun\n#  Configure OpenMPI to run good defaults:\nRUN echo \"btl_tcp_if_exclude = lo,docker0\" >> /usr/local/etc/openmpi-mca-params.conf\n#  Install Horovod\nRUN ${PIP} install --no-cache-dir horovod\n#  Install OpenSSH for MPI to communicate between containers\nRUN mkdir -p /var/run/sshd\n#  Allow OpenSSH to talk to containers without asking for confirmation\nRUN cat /etc/ssh/ssh_config | grep -v StrictHostKeyChecking > /etc/ssh/ssh_config.new \\\n && echo \" StrictHostKeyChecking no\" >> /etc/ssh/ssh_config.new \\\n && mv /etc/ssh/ssh_config.new /etc/ssh/ssh_config\n#  TensorBoard\nEXPOSE 6006/tcp\n#  IPython\nEXPOSE 8888/tcp\nWORKDIR \"/notebooks\"\nCMD [\"/run_jupyter.sh\", \"--allow-root\"]\n","injectedSmells":[],"originalDockerfileHash":"d98d841dea0346191464eb4bdf6affe1","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:16.04\nLABEL maintainer=\"Cong Xu <cong.xu@intel.com>\"\n#   This parameter MUST be set by parameterized_docker_build.sh\nARG TF_WHL_URL\n#   Optional parameters\nARG TF_BUILD_VERSION=r1.9\nARG PYTHON=\"python\"\nARG PYTHON_DEV=\"python-dev\"\nARG PIP=\"pip\"\n#   Pick up some TF dependencies\nRUN apt-get update \\\n && apt-get install --no-install-recommends build-essential curl libfreetype6-dev libhdf5-serial-dev libpng12-dev libzmq3-dev pkg-config python rsync software-properties-common unzip ${PYTHON_DEV} -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\nRUN curl -O https://bootstrap.pypa.io/get-pip.py \\\n && python get-pip.py \\\n && rm get-pip.py\nRUN ${PIP} --no-cache-dir install Pillow h5py ipykernel jupyter keras_applications==1.0.5 keras_preprocessing==1.0.3 matplotlib numpy pandas scipy sklearn \\\n && python -m ipykernel.kernelspec\nCOPY ${TF_WHL_URL} /\nRUN ${PIP} install --no-cache-dir --force-reinstall /${TF_WHL_URL} \\\n && rm -rf /${TF_WHL_URL}\nRUN if [ \"${PYTHON}\" = \"python3\" ] ; then ln -s -f /usr/bin/python3 /usr/bin/python ; fi\n#   Set up our notebook config.\nCOPY jupyter_notebook_config.py /root/.jupyter/\n#   Copy sample notebooks.\nCOPY notebooks /notebooks\n#   Jupyter has issues with being run directly:\n#     https://github.com/ipython/ipython/issues/7062\n#   We just add a little wrapper script.\nCOPY run_jupyter.sh /\nWORKDIR /root\n#   Install Open MPI\nRUN mkdir /tmp/openmpi \\\n && cd /tmp/openmpi \\\n && wget https://www.open-mpi.org/software/ompi/v3.0/downloads/openmpi-3.0.0.tar.gz \\\n && tar zxf openmpi-3.0.0.tar.gz \\\n && cd openmpi-3.0.0 \\\n && ./configure --enable-orterun-prefix-by-default \\\n && make -j $( nproc ;) all \\\n && make install \\\n && ldconfig \\\n && rm -rf /tmp/openmpi\n#   Create a wrapper for OpenMPI to allow running as root by default\nRUN mv /usr/local/bin/mpirun /usr/local/bin/mpirun.real \\\n && echo '#!/bin/bash' > /usr/local/bin/mpirun \\\n && echo 'mpirun.real --allow-run-as-root \"$@\"' >> /usr/local/bin/mpirun \\\n && chmod a+x /usr/local/bin/mpirun\n#   Configure OpenMPI to run good defaults:\nRUN echo \"btl_tcp_if_exclude = lo,docker0\" >> /usr/local/etc/openmpi-mca-params.conf\n#   Install Horovod\nRUN ${PIP} install --no-cache-dir horovod\n#   Install OpenSSH for MPI to communicate between containers\nRUN mkdir -p /var/run/sshd\n#   Allow OpenSSH to talk to containers without asking for confirmation\nRUN cat /etc/ssh/ssh_config | grep -v StrictHostKeyChecking > /etc/ssh/ssh_config.new \\\n && echo \" StrictHostKeyChecking no\" >> /etc/ssh/ssh_config.new \\\n && mv /etc/ssh/ssh_config.new /etc/ssh/ssh_config\n#   TensorBoard\nEXPOSE 6006/tcp\n#   IPython\nEXPOSE 8888/tcp\nWORKDIR \"/notebooks\"\nCMD [\"/run_jupyter.sh\", \"--allow-root\"]\n","originalDockerfileUglifiedHash":"95a9587e1ae2c5972c0fa0408a6134de","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/2b11679f54c1199969dca888b286ffe50ff517cb.dockerfile"}