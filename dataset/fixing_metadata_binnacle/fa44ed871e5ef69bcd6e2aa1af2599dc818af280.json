{"seed":1075993626,"processedDockerfileHash":"35daa620760767e36c83b202a936df58","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-pip","pin-package-manager-versions-apk","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM alpine:3.7\nENV JAVA_HOME=\"/usr/lib/jvm/default-jvm\"\nENV BAZEL_VERSION=\"0.5.4\"\nWORKDIR /tmp\n#   Build directory trees\nRUN mkdir -p /opt\n#   Build and install Tensorflow/SyntaxNet\nRUN set -x \\\n && apk add bash=4.4.19-r1 build-base=0.5-r0 linux-headers=4.4.6-r2 python openjdk8=8.275.01-r0 wget=1.20.3-r0 zip=3.0-r4 --no-cache --update --virtual .builddeps.bazel \\\n && mkdir /tmp/bazel \\\n && wget -q -O /tmp/bazel-dist.zip https://github.com/bazelbuild/bazel/releases/download/${BAZEL_VERSION}/bazel-${BAZEL_VERSION}-dist.zip \\\n && unzip -q -d /tmp/bazel /tmp/bazel-dist.zip \\\n && cd /tmp/bazel \\\n && sed -i -e '/\"-std=c++0x\"/{h;s//\"-fpermissive\"/;x;G}' tools/cpp/cc_configure.bzl \\\n && sed -i -e '/#endif \\/\\/ COMPILER_MSVC/{h;s//#else/;G;s//#include <sys\\/stat.h>/;G;}' third_party/ijar/common.h \\\n && export EXTRA_BAZEL_ARGS=\"--jobs $( grep -c ^processor /proc/cpuinfo ;)\" \\\n && bash compile.sh \\\n && cp output/bazel /usr/local/bin/ \\\n && cd /tmp \\\n && apk add python py-pip jemalloc=5.0.1-r0 libc6-compat=1.1.18-r4 --no-cache --update \\\n && apk add hdf5 --no-cache --repository http://dl-cdn.alpinelinux.org/alpine/edge/testing/ \\\n && apk add hdf5-dev --no-cache --virtual .builddeps.edge --repository http://dl-cdn.alpinelinux.org/alpine/edge/testing/ \\\n && apk add git=2.15.4-r0 bash=4.4.19-r1 patch=2.7.6-r0 perl=5.26.3-r0 sed=4.4-r1 swig=3.0.12-r1 graphviz=2.40.1-r0 python-dev graphviz-dev=2.40.1-r0 --no-cache --virtual .builddeps.tensorflow \\\n && pip install wheel==0.40.0 mock==5.0.2 asciitree==0.3.3 numpy==1.24.2 h5py==3.8.0 autograd==1.1.13 protobuf==3.3.0 pygraphviz==1.10 backports.weakref==1.0.post1 -U \\\n && git clone --recursive https://github.com/tensorflow/models.git \\\n && cd /tmp/models/research/syntaxnet/tensorflow \\\n && echo | CC_OPT_FLAGS=-march=native PYTHON_BIN_PATH=$( which python ;) TF_NEED_MKL=0 TF_NEED_VERBS=0 TF_NEED_CUDA=0 TF_NEED_GCP=0 TF_NEED_JEMALLOC=0 TF_NEED_HDFS=0 TF_NEED_OPENCL=0 TF_ENABLE_XLA=0 ./configure \\\n && cd .. \\\n && CPU_COUNT=$( grep -c ^processor /proc/cpuinfo ;) \\\n && bazel test --local_resources 4096,$CPU_COUNT,1.0 ... \\\n && mkdir /tmp/syntaxnet_pkg \\\n && bazel-bin/dragnn/tools/build_pip_package --output-dir=/tmp/syntaxnet_pkg --include-tensorflow \\\n && pip install /tmp/syntaxnet_pkg/* \\\n && cd /opt \\\n && apk del .builddeps.bazel .builddeps.edge .builddeps.tensorflow \\\n && rm -rf /tmp/* \\\n && rm -rf /root/.cache/*\n#   Build directory trees for models and dragnn wrapper\nRUN set -x \\\n && mkdir -p /usr/local/tfmodels \\\n && mkdir -p /usr/lib/python2.7/site-packages/dragnn/wrapper\nCOPY wrapper.py /usr/lib/python2.7/site-packages/dragnn/wrapper/__init__.py\nWORKDIR /opt\nCMD [\"/bin/sh\"]\nRUN addgroup -S docker-user ; adduser -S -G docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM alpine:3.7\nENV JAVA_HOME=\"/usr/lib/jvm/default-jvm\"\nENV BAZEL_VERSION=\"0.5.4\"\nWORKDIR /tmp\n#  Build directory trees\nRUN mkdir -p /opt\n#  Build and install Tensorflow/SyntaxNet\nRUN set -x \\\n && apk --no-cache --update add --virtual .builddeps.bazel bash build-base linux-headers python openjdk8 wget zip \\\n && mkdir /tmp/bazel \\\n && wget -q -O /tmp/bazel-dist.zip https://github.com/bazelbuild/bazel/releases/download/${BAZEL_VERSION}/bazel-${BAZEL_VERSION}-dist.zip \\\n && unzip -q -d /tmp/bazel /tmp/bazel-dist.zip \\\n && cd /tmp/bazel \\\n && sed -i -e '/\"-std=c++0x\"/{h;s//\"-fpermissive\"/;x;G}' tools/cpp/cc_configure.bzl \\\n && sed -i -e '/#endif \\/\\/ COMPILER_MSVC/{h;s//#else/;G;s//#include <sys\\/stat.h>/;G;}' third_party/ijar/common.h \\\n && export EXTRA_BAZEL_ARGS=\"--jobs $( grep -c ^processor /proc/cpuinfo ;)\" \\\n && bash compile.sh \\\n && cp output/bazel /usr/local/bin/ \\\n && cd /tmp \\\n && apk --no-cache --update add python py-pip jemalloc libc6-compat \\\n && apk --no-cache add --repository http://dl-cdn.alpinelinux.org/alpine/edge/testing/ hdf5 \\\n && apk --no-cache add --virtual .builddeps.edge --repository http://dl-cdn.alpinelinux.org/alpine/edge/testing/ hdf5-dev \\\n && apk --no-cache add --virtual .builddeps.tensorflow git bash patch perl sed swig graphviz python-dev graphviz-dev \\\n && pip install wheel mock asciitree numpy h5py autograd==1.1.13 protobuf==3.3.0 pygraphviz backports.weakref -U \\\n && git clone --recursive https://github.com/tensorflow/models.git \\\n && cd /tmp/models/research/syntaxnet/tensorflow \\\n && echo | CC_OPT_FLAGS=-march=native PYTHON_BIN_PATH=$( which python ;) TF_NEED_MKL=0 TF_NEED_VERBS=0 TF_NEED_CUDA=0 TF_NEED_GCP=0 TF_NEED_JEMALLOC=0 TF_NEED_HDFS=0 TF_NEED_OPENCL=0 TF_ENABLE_XLA=0 ./configure \\\n && cd .. \\\n && CPU_COUNT=$( grep -c ^processor /proc/cpuinfo ;) \\\n && bazel test --local_resources 4096,$CPU_COUNT,1.0 ... \\\n && mkdir /tmp/syntaxnet_pkg \\\n && bazel-bin/dragnn/tools/build_pip_package --output-dir=/tmp/syntaxnet_pkg --include-tensorflow \\\n && pip install /tmp/syntaxnet_pkg/* \\\n && cd /opt \\\n && apk del .builddeps.bazel .builddeps.edge .builddeps.tensorflow \\\n && rm -rf /tmp/* \\\n && rm -rf /root/.cache/*\n#  Build directory trees for models and dragnn wrapper\nRUN set -x \\\n && mkdir -p /usr/local/tfmodels \\\n && mkdir -p /usr/lib/python2.7/site-packages/dragnn/wrapper\nCOPY wrapper.py /usr/lib/python2.7/site-packages/dragnn/wrapper/__init__.py\nWORKDIR /opt\nCMD [\"/bin/sh\"]\n","injectedSmells":[],"originalDockerfileHash":"f7479a88ece94b2dd27ab9c340225c1a","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM alpine:3.7\nENV JAVA_HOME=\"/usr/lib/jvm/default-jvm\"\nENV BAZEL_VERSION=\"0.5.4\"\nWORKDIR /tmp\n#   Build directory trees\nRUN mkdir -p /opt\n#   Build and install Tensorflow/SyntaxNet\nRUN set -x \\\n && apk --no-cache --update add --virtual .builddeps.bazel bash build-base linux-headers python openjdk8 wget zip \\\n && mkdir /tmp/bazel \\\n && wget -q -O /tmp/bazel-dist.zip https://github.com/bazelbuild/bazel/releases/download/${BAZEL_VERSION}/bazel-${BAZEL_VERSION}-dist.zip \\\n && unzip -q -d /tmp/bazel /tmp/bazel-dist.zip \\\n && cd /tmp/bazel \\\n && sed -i -e '/\"-std=c++0x\"/{h;s//\"-fpermissive\"/;x;G}' tools/cpp/cc_configure.bzl \\\n && sed -i -e '/#endif \\/\\/ COMPILER_MSVC/{h;s//#else/;G;s//#include <sys\\/stat.h>/;G;}' third_party/ijar/common.h \\\n && export EXTRA_BAZEL_ARGS=\"--jobs $( grep -c ^processor /proc/cpuinfo ;)\" \\\n && bash compile.sh \\\n && cp output/bazel /usr/local/bin/ \\\n && cd /tmp \\\n && apk --no-cache --update add python py-pip jemalloc libc6-compat \\\n && apk --no-cache add --repository http://dl-cdn.alpinelinux.org/alpine/edge/testing/ hdf5 \\\n && apk --no-cache add --virtual .builddeps.edge --repository http://dl-cdn.alpinelinux.org/alpine/edge/testing/ hdf5-dev \\\n && apk --no-cache add --virtual .builddeps.tensorflow git bash patch perl sed swig graphviz python-dev graphviz-dev \\\n && pip install wheel mock asciitree numpy h5py autograd==1.1.13 protobuf==3.3.0 pygraphviz backports.weakref -U \\\n && git clone --recursive https://github.com/tensorflow/models.git \\\n && cd /tmp/models/research/syntaxnet/tensorflow \\\n && echo | CC_OPT_FLAGS=-march=native PYTHON_BIN_PATH=$( which python ;) TF_NEED_MKL=0 TF_NEED_VERBS=0 TF_NEED_CUDA=0 TF_NEED_GCP=0 TF_NEED_JEMALLOC=0 TF_NEED_HDFS=0 TF_NEED_OPENCL=0 TF_ENABLE_XLA=0 ./configure \\\n && cd .. \\\n && CPU_COUNT=$( grep -c ^processor /proc/cpuinfo ;) \\\n && bazel test --local_resources 4096,$CPU_COUNT,1.0 ... \\\n && mkdir /tmp/syntaxnet_pkg \\\n && bazel-bin/dragnn/tools/build_pip_package --output-dir=/tmp/syntaxnet_pkg --include-tensorflow \\\n && pip install /tmp/syntaxnet_pkg/* \\\n && cd /opt \\\n && apk del .builddeps.bazel .builddeps.edge .builddeps.tensorflow \\\n && rm -rf /tmp/* \\\n && rm -rf /root/.cache/*\n#   Build directory trees for models and dragnn wrapper\nRUN set -x \\\n && mkdir -p /usr/local/tfmodels \\\n && mkdir -p /usr/lib/python2.7/site-packages/dragnn/wrapper\nCOPY wrapper.py /usr/lib/python2.7/site-packages/dragnn/wrapper/__init__.py\nWORKDIR /opt\nCMD [\"/bin/sh\"]\n","originalDockerfileUglifiedHash":"f446d271b356c9182d1bc8402bf4324f","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/fa44ed871e5ef69bcd6e2aa1af2599dc818af280.dockerfile"}