{"seed":3280153784,"processedDockerfileHash":"77ad0eeab09b2fbd98b0cfeb56881936","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["have-a-healthcheck","have-a-user"],"processedDockerfile":"#  ########################################################################################\n#   Dockerfile to run vitam on one server\n#   Based on CentOS\n#\n#   Maintained by Vitam Integration Team\n#   Image name: vitam/jenkins-slave-base\n#  ########################################################################################\n#   Set the base image to Centos 7\nFROM centos:7.4.1708\nMAINTAINER French Prime minister Office/SGMAP/DINSIC/Vitam Program <contact.vitam@culture.gouv.fr>\n#   Make sure the package repository and packages are up to date.\nRUN yum install -y epel-release \\\n && yum -y update \\\n && yum -y upgrade \\\n && yum clean all\n#  ###############################  Configure systemd  ###############################\n#   Hint for systemd that we are running inside a container\nENV container=\"docker\"\n#   Remove useless units\nRUN (cd /lib/systemd/system/sysinit.target.wants/ ;for i in *; do [ $i == systemd-tmpfiles-setup.service ] || rm -f $i ; done ) ; rm -f /lib/systemd/system/multi-user.target.wants/* ; rm -f /etc/systemd/system/*.wants/* ; rm -f /lib/systemd/system/local-fs.target.wants/* ; rm -f /lib/systemd/system/sockets.target.wants/*udev* ; rm -f /lib/systemd/system/sockets.target.wants/*initctl* ; rm -f /lib/systemd/system/basic.target.wants/* ; rm -f /lib/systemd/system/anaconda.target.wants/*\n#  ###############################  Install build tools (rpm / maven / java)  ###############################\nRUN yum install -y java-1.8.0-openjdk-devel rpm-build rpmdevtools initscripts.x86_64 golang npm \\\n && yum clean all\n#   Add Java to path\nENV JAVA_HOME=\"/usr/lib/jvm/java\"\n#   Install & configure maven\nRUN curl -k http://repo.maven.apache.org/maven2/org/apache/maven/apache-maven/3.3.9/apache-maven-3.3.9-bin.tar.gz --output /tmp/maven.tgz \\\n && tar xvzf /tmp/maven.tgz --directory /opt \\\n && rm -f /tmp/maven.tgz \\\n && ln -s /opt/apache-maven-3.3.9 /opt/maven \\\n && mkdir -p /devhome/.m2 \\\n && chmod -R 777 /devhome\n#   Add Maven & java to path\nENV M2_HOME=\"/opt/maven\"\nENV PATH=\"${M2_HOME}/bin:${JAVA_HOME}/bin:${PATH}\"\n#  ###############################  Install deployment tools  ###############################\n#   for sudo in automatic deployment ; note : ansible needs epel repo\nRUN yum install -y sudo ansible openssl which \\\n && yum clean all\n#  #################################  install git and vim  #################################\nRUN yum install -y git vim \\\n && yum clean all\n#  #################################  Declare local rpm repo  #################################\n#   Note : declare at the end ; else other yum commandes will fail. Ideally, we would need a \"createrepo\" here, but it wouldn't work, as the volume /code is normally mounter externally.\nRUN yum install -y createrepo \\\n && yum clean all\nCOPY rpm/devlocal.repo /etc/yum.repos.d/devlocal.repo\n#  ################################# Add dev helpers #################################\nCOPY rpm/vitam-build-repo /usr/bin\nCOPY vitam-deploy /usr/bin\nCOPY vitam-deploy-extra /usr/bin\nCOPY rpm/vitam-maven-build-only /usr/bin\nCOPY vitam-redeploy /usr/bin\nCOPY vitam-redeploy-extra /usr/bin\nCOPY vitam-command /usr/bin\nCOPY rpm/vitam-deploy-cots /usr/bin\nRUN chmod a+x /usr/bin/vitam-*\nCOPY rpm/profile-build-repo.sh /etc/profile.d\nCOPY profile-prompt-usage.sh /etc/profile.d\nCOPY .bashrc /devhome\nCOPY vitam-usage.txt /etc\nCOPY rpm/wheel-nopwd /etc/sudoers.d\nRUN chmod 664 /etc/sudoers.d/wheel-nopwd\n#   Disable fastestmirror ; helps gain several seconds per yum invocation\nCOPY rpm/fastestmirror.conf /etc/yum/pluginconf.d\nENV TERM=\"xterm\"\n#  #################################  CONTAINER SETTINGS  #################################\nVOLUME [ \"/sys/fs/cgroup\" ]\nVOLUME [ \"/code\" ]\nVOLUME [ \"/devhome/.m2\" ]\nWORKDIR /code\n#   Entry Point to systemd init\nCMD [\"/usr/sbin/init\"]\nCOPY vitam-stop /usr/bin\nCOPY vitam-start /usr/bin\nCOPY vitam-restart /usr/bin\nCOPY vitam-bench-ingest /usr/bin\nCOPY vitam-mongo-cli /usr/bin\nCOPY vitam-mongo-cli-rs /usr/bin\nCOPY rpm/vitam-recreate-repo /usr/bin\nRUN chmod a+x /usr/bin/vitam-*\nRUN chmod 644 /etc/sudoers.d/wheel-nopwd\nCOPY rpm/vitam-build-griffins /usr/bin\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"# ########################################################################################\n#  Dockerfile to run vitam on one server\n#  Based on CentOS\n#\n#  Maintained by Vitam Integration Team\n#  Image name: vitam/jenkins-slave-base\n# ########################################################################################\n#  Set the base image to Centos 7\nFROM centos:7.4.1708\nMAINTAINER French Prime minister Office/SGMAP/DINSIC/Vitam Program <contact.vitam@culture.gouv.fr>\n#  Make sure the package repository and packages are up to date.\nRUN yum install -y epel-release \\\n && yum -y update \\\n && yum -y upgrade \\\n && yum clean all\n# ###############################  Configure systemd  ###############################\n#  Hint for systemd that we are running inside a container\nENV container=\"docker\"\n#  Remove useless units\nRUN (cd /lib/systemd/system/sysinit.target.wants/ ;for i in *; do [ $i == systemd-tmpfiles-setup.service ] || rm -f $i ; done ) ; rm -f /lib/systemd/system/multi-user.target.wants/* ; rm -f /etc/systemd/system/*.wants/* ; rm -f /lib/systemd/system/local-fs.target.wants/* ; rm -f /lib/systemd/system/sockets.target.wants/*udev* ; rm -f /lib/systemd/system/sockets.target.wants/*initctl* ; rm -f /lib/systemd/system/basic.target.wants/* ; rm -f /lib/systemd/system/anaconda.target.wants/*\n# ###############################  Install build tools (rpm / maven / java)  ###############################\nRUN yum install -y java-1.8.0-openjdk-devel rpm-build rpmdevtools initscripts.x86_64 golang npm \\\n && yum clean all\n#  Add Java to path\nENV JAVA_HOME=\"/usr/lib/jvm/java\"\n#  Install & configure maven\nRUN curl -k http://repo.maven.apache.org/maven2/org/apache/maven/apache-maven/3.3.9/apache-maven-3.3.9-bin.tar.gz --output /tmp/maven.tgz \\\n && tar xvzf /tmp/maven.tgz --directory /opt \\\n && rm -f /tmp/maven.tgz \\\n && ln -s /opt/apache-maven-3.3.9 /opt/maven \\\n && mkdir -p /devhome/.m2 \\\n && chmod -R 777 /devhome\n#  Add Maven & java to path\nENV M2_HOME=\"/opt/maven\"\nENV PATH=\"${M2_HOME}/bin:${JAVA_HOME}/bin:${PATH}\"\n# ###############################  Install deployment tools  ###############################\n#  for sudo in automatic deployment ; note : ansible needs epel repo\nRUN yum install -y sudo ansible openssl which \\\n && yum clean all\n# #################################  install git and vim  #################################\nRUN yum install -y git vim \\\n && yum clean all\n# #################################  Declare local rpm repo  #################################\n#  Note : declare at the end ; else other yum commandes will fail. Ideally, we would need a \"createrepo\" here, but it wouldn't work, as the volume /code is normally mounter externally.\nRUN yum install -y createrepo \\\n && yum clean all\nCOPY rpm/devlocal.repo /etc/yum.repos.d/devlocal.repo\n# ################################# Add dev helpers #################################\nCOPY rpm/vitam-build-repo /usr/bin\nCOPY vitam-deploy /usr/bin\nCOPY vitam-deploy-extra /usr/bin\nCOPY rpm/vitam-maven-build-only /usr/bin\nCOPY vitam-redeploy /usr/bin\nCOPY vitam-redeploy-extra /usr/bin\nCOPY vitam-command /usr/bin\nCOPY rpm/vitam-deploy-cots /usr/bin\nRUN chmod a+x /usr/bin/vitam-*\nCOPY rpm/profile-build-repo.sh /etc/profile.d\nCOPY profile-prompt-usage.sh /etc/profile.d\nCOPY .bashrc /devhome\nCOPY vitam-usage.txt /etc\nCOPY rpm/wheel-nopwd /etc/sudoers.d\nRUN chmod 664 /etc/sudoers.d/wheel-nopwd\n#  Disable fastestmirror ; helps gain several seconds per yum invocation\nCOPY rpm/fastestmirror.conf /etc/yum/pluginconf.d\nENV TERM=\"xterm\"\n# #################################  CONTAINER SETTINGS  #################################\nVOLUME [ \"/sys/fs/cgroup\" ]\nVOLUME [ \"/code\" ]\nVOLUME [ \"/devhome/.m2\" ]\nWORKDIR /code\n#  Entry Point to systemd init\nCMD [\"/usr/sbin/init\"]\nCOPY vitam-stop /usr/bin\nCOPY vitam-start /usr/bin\nCOPY vitam-restart /usr/bin\nCOPY vitam-bench-ingest /usr/bin\nCOPY vitam-mongo-cli /usr/bin\nCOPY vitam-mongo-cli-rs /usr/bin\nCOPY rpm/vitam-recreate-repo /usr/bin\nRUN chmod a+x /usr/bin/vitam-*\nRUN chmod 644 /etc/sudoers.d/wheel-nopwd\nCOPY rpm/vitam-build-griffins /usr/bin\n","injectedSmells":[],"originalDockerfileHash":"1258c403f2d0d9f153a3eedcc3832cb8","successfullyInjectedSmells":[],"originalDockerfileUglified":"#  ########################################################################################\n#   Dockerfile to run vitam on one server\n#   Based on CentOS\n#\n#   Maintained by Vitam Integration Team\n#   Image name: vitam/jenkins-slave-base\n#  ########################################################################################\n#   Set the base image to Centos 7\nFROM centos:7.4.1708\nMAINTAINER French Prime minister Office/SGMAP/DINSIC/Vitam Program <contact.vitam@culture.gouv.fr>\n#   Make sure the package repository and packages are up to date.\nRUN yum install -y epel-release \\\n && yum -y update \\\n && yum -y upgrade \\\n && yum clean all\n#  ###############################  Configure systemd  ###############################\n#   Hint for systemd that we are running inside a container\nENV container=\"docker\"\n#   Remove useless units\nRUN (cd /lib/systemd/system/sysinit.target.wants/ ;for i in *; do [ $i == systemd-tmpfiles-setup.service ] || rm -f $i ; done ) ; rm -f /lib/systemd/system/multi-user.target.wants/* ; rm -f /etc/systemd/system/*.wants/* ; rm -f /lib/systemd/system/local-fs.target.wants/* ; rm -f /lib/systemd/system/sockets.target.wants/*udev* ; rm -f /lib/systemd/system/sockets.target.wants/*initctl* ; rm -f /lib/systemd/system/basic.target.wants/* ; rm -f /lib/systemd/system/anaconda.target.wants/*\n#  ###############################  Install build tools (rpm / maven / java)  ###############################\nRUN yum install -y java-1.8.0-openjdk-devel rpm-build rpmdevtools initscripts.x86_64 golang npm \\\n && yum clean all\n#   Add Java to path\nENV JAVA_HOME=\"/usr/lib/jvm/java\"\n#   Install & configure maven\nRUN curl -k http://repo.maven.apache.org/maven2/org/apache/maven/apache-maven/3.3.9/apache-maven-3.3.9-bin.tar.gz --output /tmp/maven.tgz \\\n && tar xvzf /tmp/maven.tgz --directory /opt \\\n && rm -f /tmp/maven.tgz \\\n && ln -s /opt/apache-maven-3.3.9 /opt/maven \\\n && mkdir -p /devhome/.m2 \\\n && chmod -R 777 /devhome\n#   Add Maven & java to path\nENV M2_HOME=\"/opt/maven\"\nENV PATH=\"${M2_HOME}/bin:${JAVA_HOME}/bin:${PATH}\"\n#  ###############################  Install deployment tools  ###############################\n#   for sudo in automatic deployment ; note : ansible needs epel repo\nRUN yum install -y sudo ansible openssl which \\\n && yum clean all\n#  #################################  install git and vim  #################################\nRUN yum install -y git vim \\\n && yum clean all\n#  #################################  Declare local rpm repo  #################################\n#   Note : declare at the end ; else other yum commandes will fail. Ideally, we would need a \"createrepo\" here, but it wouldn't work, as the volume /code is normally mounter externally.\nRUN yum install -y createrepo \\\n && yum clean all\nCOPY rpm/devlocal.repo /etc/yum.repos.d/devlocal.repo\n#  ################################# Add dev helpers #################################\nCOPY rpm/vitam-build-repo /usr/bin\nCOPY vitam-deploy /usr/bin\nCOPY vitam-deploy-extra /usr/bin\nCOPY rpm/vitam-maven-build-only /usr/bin\nCOPY vitam-redeploy /usr/bin\nCOPY vitam-redeploy-extra /usr/bin\nCOPY vitam-command /usr/bin\nCOPY rpm/vitam-deploy-cots /usr/bin\nRUN chmod a+x /usr/bin/vitam-*\nCOPY rpm/profile-build-repo.sh /etc/profile.d\nCOPY profile-prompt-usage.sh /etc/profile.d\nCOPY .bashrc /devhome\nCOPY vitam-usage.txt /etc\nCOPY rpm/wheel-nopwd /etc/sudoers.d\nRUN chmod 664 /etc/sudoers.d/wheel-nopwd\n#   Disable fastestmirror ; helps gain several seconds per yum invocation\nCOPY rpm/fastestmirror.conf /etc/yum/pluginconf.d\nENV TERM=\"xterm\"\n#  #################################  CONTAINER SETTINGS  #################################\nVOLUME [ \"/sys/fs/cgroup\" ]\nVOLUME [ \"/code\" ]\nVOLUME [ \"/devhome/.m2\" ]\nWORKDIR /code\n#   Entry Point to systemd init\nCMD [\"/usr/sbin/init\"]\nCOPY vitam-stop /usr/bin\nCOPY vitam-start /usr/bin\nCOPY vitam-restart /usr/bin\nCOPY vitam-bench-ingest /usr/bin\nCOPY vitam-mongo-cli /usr/bin\nCOPY vitam-mongo-cli-rs /usr/bin\nCOPY rpm/vitam-recreate-repo /usr/bin\nRUN chmod a+x /usr/bin/vitam-*\nRUN chmod 644 /etc/sudoers.d/wheel-nopwd\nCOPY rpm/vitam-build-griffins /usr/bin\n","originalDockerfileUglifiedHash":"0bb942cde19c48880eb7a084251437ca","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/654fd5994ffde9d22d5bf8af08d80f15582bf26e.dockerfile"}