{"seed":1541529385,"processedDockerfileHash":"7b1501d9e0b80d4d81b93590c7782675","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM centos:7\nRUN set -x \\\n && yum install epel-release -y\nRUN yum install -y ant boost-devel bzip2-devel curl expect fakeroot fuse-libs gcc gcc-c++ git gpg gtk3 java-1.8.0-openjdk java-1.8.0-openjdk-devel libcurl-devel libacl-devel libcap-devel libffi libuuid-devel libXcursor-devel libXrandr-devel libXScrnSaver-devel lsof make mariadb-libs openssl-devel pam-devel pango-devel patchelf postgresql-devel R rpmdevtools rpm-sign sudo wget xml-commons-apis zlib-devel libuser-devel\n#   add scl repo and install additional dependencies\nRUN yum install -y centos-release-scl\nRUN yum install -y llvm-toolset-7 devtoolset-3-gcc devtoolset-3-gcc-c++\n#   update environment to use new compiler\nENV PATH=\"/opt/rh/devtoolset-3/root/usr/bin:${PATH}\"\nENV CC=\"/opt/rh/devtoolset-3/root/usr/bin/gcc\"\nENV CXX=\"/opt/rh/devtoolset-3/root/usr/bin/c++\"\nENV CPP=\"/opt/rh/devtoolset-3/root/usr/bin/cpp\"\n#   sudo defaults to requiretty on centos7\nRUN sed -i 's/Defaults requiretty/Defaults !requiretty/' /etc/sudoers\n#  # run install-boost twice - boost exits 1 even though it has installed good enough for our uses.\n#  # https://github.com/rstudio/rstudio/blob/master/vagrant/provision-primary-user.sh#L12-L15\nCOPY dependencies/common/install-boost /tmp/\nRUN bash /tmp/install-boost || bash /tmp/install-boost\n#   install cmake\nCOPY package/linux/install-dependencies /tmp/\nRUN bash /tmp/install-dependencies\n#   install crashpad and its dependencies\nCOPY dependencies/common/install-crashpad /tmp/\nRUN scl enable llvm-toolset-7 \"/bin/bash /tmp/install-crashpad\"\n#   set github login from build argument if defined\nARG GITHUB_LOGIN\nENV RSTUDIO_GITHUB_LOGIN=\"$GITHUB_LOGIN\"\n#   install common dependencies\nRUN mkdir -p /opt/rstudio-tools/dependencies/common\nCOPY dependencies/common/* /opt/rstudio-tools/dependencies/common/\nRUN cd /opt/rstudio-tools/dependencies/common \\\n && scl enable llvm-toolset-7 \"/bin/bash ./install-common\"\n#   install Qt SDK\nCOPY dependencies/linux/install-qt-sdk /tmp/\nRUN mkdir -p /opt/RStudio-QtSDK \\\n && export QT_SDK_DIR=/opt/RStudio-QtSDK/Qt5.12.1 \\\n && export QT_QPA_PLATFORM=minimal \\\n && /tmp/install-qt-sdk\n#   remove any previous users with conflicting IDs\nARG JENKINS_GID=999\nARG JENKINS_UID=999\nCOPY docker/jenkins/*.sh /tmp/\nRUN /tmp/clean-uid.sh $JENKINS_UID \\\n && /tmp/clean-gid.sh $JENKINS_GID\n#   create jenkins user, make sudo. try to keep this toward the bottom for less cache busting\nRUN groupadd -g $JENKINS_GID jenkins \\\n && useradd -m -d /var/lib/jenkins -u $JENKINS_UID -g jenkins jenkins \\\n && echo \"jenkins ALL=(ALL) NOPASSWD: ALL\" >> /etc/sudoers\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM centos:7\nRUN set -x \\\n && yum install epel-release -y\nRUN yum install -y ant boost-devel bzip2-devel curl expect fakeroot fuse-libs gcc gcc-c++ git gpg gtk3 java-1.8.0-openjdk java-1.8.0-openjdk-devel libcurl-devel libacl-devel libcap-devel libffi libuuid-devel libXcursor-devel libXrandr-devel libXScrnSaver-devel lsof make mariadb-libs openssl-devel pam-devel pango-devel patchelf postgresql-devel R rpmdevtools rpm-sign sudo wget xml-commons-apis zlib-devel libuser-devel\n#  add scl repo and install additional dependencies\nRUN yum install -y centos-release-scl\nRUN yum install -y llvm-toolset-7 devtoolset-3-gcc devtoolset-3-gcc-c++\n#  update environment to use new compiler\nENV PATH=\"/opt/rh/devtoolset-3/root/usr/bin:${PATH}\"\nENV CC=\"/opt/rh/devtoolset-3/root/usr/bin/gcc\"\nENV CXX=\"/opt/rh/devtoolset-3/root/usr/bin/c++\"\nENV CPP=\"/opt/rh/devtoolset-3/root/usr/bin/cpp\"\n#  sudo defaults to requiretty on centos7\nRUN sed -i 's/Defaults requiretty/Defaults !requiretty/' /etc/sudoers\n# # run install-boost twice - boost exits 1 even though it has installed good enough for our uses.\n# # https://github.com/rstudio/rstudio/blob/master/vagrant/provision-primary-user.sh#L12-L15\nCOPY dependencies/common/install-boost /tmp/\nRUN bash /tmp/install-boost || bash /tmp/install-boost\n#  install cmake\nCOPY package/linux/install-dependencies /tmp/\nRUN bash /tmp/install-dependencies\n#  install crashpad and its dependencies\nCOPY dependencies/common/install-crashpad /tmp/\nRUN scl enable llvm-toolset-7 \"/bin/bash /tmp/install-crashpad\"\n#  set github login from build argument if defined\nARG GITHUB_LOGIN\nENV RSTUDIO_GITHUB_LOGIN=\"$GITHUB_LOGIN\"\n#  install common dependencies\nRUN mkdir -p /opt/rstudio-tools/dependencies/common\nCOPY dependencies/common/* /opt/rstudio-tools/dependencies/common/\nRUN cd /opt/rstudio-tools/dependencies/common \\\n && scl enable llvm-toolset-7 \"/bin/bash ./install-common\"\n#  install Qt SDK\nCOPY dependencies/linux/install-qt-sdk /tmp/\nRUN mkdir -p /opt/RStudio-QtSDK \\\n && export QT_SDK_DIR=/opt/RStudio-QtSDK/Qt5.12.1 \\\n && export QT_QPA_PLATFORM=minimal \\\n && /tmp/install-qt-sdk\n#  remove any previous users with conflicting IDs\nARG JENKINS_GID=999\nARG JENKINS_UID=999\nCOPY docker/jenkins/*.sh /tmp/\nRUN /tmp/clean-uid.sh $JENKINS_UID \\\n && /tmp/clean-gid.sh $JENKINS_GID\n#  create jenkins user, make sudo. try to keep this toward the bottom for less cache busting\nRUN groupadd -g $JENKINS_GID jenkins \\\n && useradd -m -d /var/lib/jenkins -u $JENKINS_UID -g jenkins jenkins \\\n && echo \"jenkins ALL=(ALL) NOPASSWD: ALL\" >> /etc/sudoers\n","injectedSmells":[],"originalDockerfileHash":"1b8c4d95fade440c893131e75be1df29","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM centos:7\nRUN set -x \\\n && yum install epel-release -y\nRUN yum install -y ant boost-devel bzip2-devel curl expect fakeroot fuse-libs gcc gcc-c++ git gpg gtk3 java-1.8.0-openjdk java-1.8.0-openjdk-devel libcurl-devel libacl-devel libcap-devel libffi libuuid-devel libXcursor-devel libXrandr-devel libXScrnSaver-devel lsof make mariadb-libs openssl-devel pam-devel pango-devel patchelf postgresql-devel R rpmdevtools rpm-sign sudo wget xml-commons-apis zlib-devel libuser-devel\n#   add scl repo and install additional dependencies\nRUN yum install -y centos-release-scl\nRUN yum install -y llvm-toolset-7 devtoolset-3-gcc devtoolset-3-gcc-c++\n#   update environment to use new compiler\nENV PATH=\"/opt/rh/devtoolset-3/root/usr/bin:${PATH}\"\nENV CC=\"/opt/rh/devtoolset-3/root/usr/bin/gcc\"\nENV CXX=\"/opt/rh/devtoolset-3/root/usr/bin/c++\"\nENV CPP=\"/opt/rh/devtoolset-3/root/usr/bin/cpp\"\n#   sudo defaults to requiretty on centos7\nRUN sed -i 's/Defaults requiretty/Defaults !requiretty/' /etc/sudoers\n#  # run install-boost twice - boost exits 1 even though it has installed good enough for our uses.\n#  # https://github.com/rstudio/rstudio/blob/master/vagrant/provision-primary-user.sh#L12-L15\nCOPY dependencies/common/install-boost /tmp/\nRUN bash /tmp/install-boost || bash /tmp/install-boost\n#   install cmake\nCOPY package/linux/install-dependencies /tmp/\nRUN bash /tmp/install-dependencies\n#   install crashpad and its dependencies\nCOPY dependencies/common/install-crashpad /tmp/\nRUN scl enable llvm-toolset-7 \"/bin/bash /tmp/install-crashpad\"\n#   set github login from build argument if defined\nARG GITHUB_LOGIN\nENV RSTUDIO_GITHUB_LOGIN=\"$GITHUB_LOGIN\"\n#   install common dependencies\nRUN mkdir -p /opt/rstudio-tools/dependencies/common\nCOPY dependencies/common/* /opt/rstudio-tools/dependencies/common/\nRUN cd /opt/rstudio-tools/dependencies/common \\\n && scl enable llvm-toolset-7 \"/bin/bash ./install-common\"\n#   install Qt SDK\nCOPY dependencies/linux/install-qt-sdk /tmp/\nRUN mkdir -p /opt/RStudio-QtSDK \\\n && export QT_SDK_DIR=/opt/RStudio-QtSDK/Qt5.12.1 \\\n && export QT_QPA_PLATFORM=minimal \\\n && /tmp/install-qt-sdk\n#   remove any previous users with conflicting IDs\nARG JENKINS_GID=999\nARG JENKINS_UID=999\nCOPY docker/jenkins/*.sh /tmp/\nRUN /tmp/clean-uid.sh $JENKINS_UID \\\n && /tmp/clean-gid.sh $JENKINS_GID\n#   create jenkins user, make sudo. try to keep this toward the bottom for less cache busting\nRUN groupadd -g $JENKINS_GID jenkins \\\n && useradd -m -d /var/lib/jenkins -u $JENKINS_UID -g jenkins jenkins \\\n && echo \"jenkins ALL=(ALL) NOPASSWD: ALL\" >> /etc/sudoers\n","originalDockerfileUglifiedHash":"dc747b05c2eeb7f5b9c09352a3f7bd88","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/c34fa37e14dffede21bd296f66afc818de6227c7.dockerfile"}