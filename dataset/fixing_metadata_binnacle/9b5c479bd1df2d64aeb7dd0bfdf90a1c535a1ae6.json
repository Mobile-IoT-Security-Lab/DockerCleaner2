{"seed":1679687927,"processedDockerfileHash":"e99fb479022d93307df0f98ff6899923","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM centos:centos6.8 AS builder\nLABEL maintener=\"Takeda Koji <takeda@leapmind.io>\"\n#  #######################################################\n#   The begining of builder image\n#  #######################################################\n#   basic software installation\nRUN yum -y update --exclude=kernel* --exclude=centos* \\\n && yum -y groupinstall \"Development Tools\" \\\n && yum -y install wget \\\n && yum -y install centos-release-scl-rh \\\n && yum -y install epel-release \\\n && yum -y install scl-utils \\\n && yum -y install gcc-c++ \\\n && yum -y install devtoolset-6-gcc-c++ \\\n && yum -y install git zlib-devel openssl-devel \\\n && yum -y install rh-python36-python \\\n && yum -y install rh-python36-python-devel \\\n && yum -y install libjpeg-devel cmake3 unzip \\\n && yum -y install xterm \\\n && yum -y install gperftools-libs \\\n && yum -y install mesa-libGL \\\n && yum -y install mesa-libGLU \\\n && yum -y install webkitgtk \\\n && yum -y install libyaml-devel \\\n && yum -y install ncurses-devel-5.7-4.20090207.el6\n#  COPY download /root/download\n#   Copy \"top directory of dlk\" of host to \"/root/dlk\" of guest \nCOPY . /root/dlk\nRUN cd /root/dlk/docker \\\n && mkdir work_tools \\\n && mv Quartus-lite-17.1.0.590-linux.tar work_tools \\\n && mv SoCEDSSetup-17.1.0.590-linux.run work_tools \\\n && cd work_tools \\\n && tar xvf Quartus-lite-17.1.0.590-linux.tar \\\n && ./setup.sh --mode unattended --installdir /opt/intelFPGA_lite/17.1 --accept_eula 1 --disable-components arria_lite,cyclone,cyclone10lp,max,max10 \\\n && ./SoCEDSSetup-17.1.0.590-linux.run --mode unattended --installdir /opt/intelFPGA/17.1 --accept_eula 1 \\\n && cd .. \\\n && rm -rf /root/dlk/docker/work_tools\n#   Download and Compilation of protobuf\nRUN mkdir /root/protobuf \\\n && cd /root/protobuf \\\n && wget https://github.com/google/protobuf/releases/download/v3.5.1/protobuf-cpp-3.5.1.zip \\\n && unzip protobuf-cpp-3.5.1.zip \\\n && cd protobuf-3.5.1 \\\n && mkdir /opt/protobuf \\\n && ./configure --prefix=/opt/protobuf \\\n && make -j16 \\\n && make install \\\n && ln -s /usr/bin/cmake3 /usr/local/bin/cmake\n#  ### Install x-compiler with Python26 and gcc4.4.7\n#   USER=xcomp DIR=build_ctng,install_ctng,build_xc\nRUN yum -y install gperf texinfo help2man ncurses-devel python-devel \\\n && useradd xcomp \\\n && mkdir /home/xcomp/build_ctng \\\n && cp /root/dlk/docker/lm_cross_arm.config /home/xcomp \\\n && chown -R xcomp:xcomp /home/xcomp\nUSER xcomp\nRUN cd /home/xcomp/build_ctng \\\n && wget http://crosstool-ng.org/download/crosstool-ng/crosstool-ng-1.23.0.tar.bz2 \\\n && tar xvjf crosstool-ng-1.23.0.tar.bz2 \\\n && cd crosstool-ng-1.23.0 \\\n && ./configure --prefix=/home/xcomp/install_ctng \\\n && make -j16 \\\n && make install \\\n && mkdir /home/xcomp/build_xc \\\n && cd /home/xcomp/build_xc \\\n && cp ../lm_cross_arm.config .config \\\n && unset LD_LIBRARY_PATH \\\n && unset LIBRARY_PATH \\\n && unset CPLUS_INCLUDE_PATH \\\n && /home/xcomp/install_ctng/bin/ct-ng build\nUSER root\nRUN chown -R root:root /home/xcomp/x-tools \\\n && mv /home/xcomp/x-tools /opt\n#   Compilation of LLVM. This is last because newer gcc is requred.\nRUN mkdir /root/src_llvm \\\n && cd /root/src_llvm \\\n && svn co http://llvm.org/svn/llvm-project/llvm/tags/RELEASE_501/final/ llvm-5.0.1 \\\n && cd llvm-5.0.1/tools \\\n && svn co http://llvm.org/svn/llvm-project/cfe/tags/RELEASE_501/final/ clang \\\n && mkdir /root/build_llvm \\\n && source scl_source enable rh-python36 \\\n && source scl_source enable devtoolset-6 \\\n && cd /root/build_llvm \\\n && cmake -G \"Unix Makefiles\" /root/src_llvm/llvm-5.0.1/ -DCMAKE_INSTALL_PREFIX=/opt/llvm -DCMAKE_BUILD_TYPE=Release -DLLVM_TARGETS_TO_BUILD=\"ARM;X86\" \\\n && make -j16 \\\n && make install\n#  #######################################################\n#   The begining of running image\n#  #######################################################\nFROM centos:centos6.8\n#   basic software installation\nRUN yum -y update --exclude=kernel* --exclude=centos* \\\n && yum -y groupinstall \"Development Tools\" \\\n && yum -y install centos-release-scl-rh \\\n && yum -y install epel-release \\\n && yum -y install scl-utils \\\n && yum -y install gcc-c++ \\\n && yum -y install devtoolset-6-gcc-c++ \\\n && yum -y install git zlib-devel openssl-devel \\\n && yum -y install rh-python36-python \\\n && yum -y install rh-python36-python-devel \\\n && yum -y install libjpeg-devel \\\n && yum -y install cmake3 \\\n && yum -y install unzip \\\n && yum -y install libyaml-devel \\\n && yum -y install ncurses-devel-5.7-4.20090207.el6\n#   For Intel Tools\nRUN yum -y install glibc.i686 \\\n && yum -y install glibc-devel.i686 \\\n && yum -y install libX11.i686 \\\n && yum -y install libXext.i686 \\\n && yum -y install libXft.i686 \\\n && yum -y install libgcc.i686 \\\n && yum -y install libgcc.x86_64 \\\n && yum -y install libstdc++.i686 \\\n && yum -y install libstdc++-devel.i686 \\\n && yum -y install ncurses-devel.i686 \\\n && yum -y install qt.i686 qt-x11.i686 \\\n && yum -y install xterm \\\n && yum -y install gperftools-libs \\\n && yum -y install mesa-libGL \\\n && yum -y install mesa-libGLU \\\n && yum -y install webkitgtk \\\n && yum clean all\n#  RUN mkdir /root/dlk\nCOPY --from=builder /root/dlk/docker/enable_tools.sh /etc/profile.d\nCOPY --from=builder /opt/protobuf /opt/protobuf\nCOPY --from=builder /opt/intelFPGA_lite/17.1 /opt/intelFPGA_lite/17.1\nCOPY --from=builder /opt/intelFPGA/17.1 /opt/intelFPGA/17.1\nCOPY --from=builder /opt/x-tools /opt/x-tools\nCOPY --from=builder /root/dlk /root/dlk\nCOPY --from=builder /opt/llvm /opt/llvm\nRUN ln -s /opt/x-tools/arm-unknown-linux-gnueabihf/bin/arm-unknown-linux-gnueabihf-g++ /usr/local/bin/arm-linux-gnueabihf-g++\nRUN ln -s /usr/bin/cmake3 /usr/local/bin/cmake\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM centos:centos6.8 AS builder\nLABEL maintener=\"Takeda Koji <takeda@leapmind.io>\"\n# #######################################################\n#  The begining of builder image\n# #######################################################\n#  basic software installation\nRUN yum -y update --exclude=kernel* --exclude=centos* \\\n && yum -y groupinstall \"Development Tools\" \\\n && yum -y install wget \\\n && yum -y install centos-release-scl-rh \\\n && yum -y install epel-release \\\n && yum -y install scl-utils \\\n && yum -y install gcc-c++ \\\n && yum -y install devtoolset-6-gcc-c++ \\\n && yum -y install git zlib-devel openssl-devel \\\n && yum -y install rh-python36-python \\\n && yum -y install rh-python36-python-devel \\\n && yum -y install libjpeg-devel cmake3 unzip \\\n && yum -y install xterm \\\n && yum -y install gperftools-libs \\\n && yum -y install mesa-libGL \\\n && yum -y install mesa-libGLU \\\n && yum -y install webkitgtk \\\n && yum -y install libyaml-devel \\\n && yum -y install ncurses-devel-5.7-4.20090207.el6\n# COPY download /root/download\n#  Copy \"top directory of dlk\" of host to \"/root/dlk\" of guest \nCOPY . /root/dlk\nRUN cd /root/dlk/docker \\\n && mkdir work_tools \\\n && mv Quartus-lite-17.1.0.590-linux.tar work_tools \\\n && mv SoCEDSSetup-17.1.0.590-linux.run work_tools \\\n && cd work_tools \\\n && tar xvf Quartus-lite-17.1.0.590-linux.tar \\\n && ./setup.sh --mode unattended --installdir /opt/intelFPGA_lite/17.1 --accept_eula 1 --disable-components arria_lite,cyclone,cyclone10lp,max,max10 \\\n && ./SoCEDSSetup-17.1.0.590-linux.run --mode unattended --installdir /opt/intelFPGA/17.1 --accept_eula 1 \\\n && cd .. \\\n && rm -rf /root/dlk/docker/work_tools\n#  Download and Compilation of protobuf\nRUN mkdir /root/protobuf \\\n && cd /root/protobuf \\\n && wget https://github.com/google/protobuf/releases/download/v3.5.1/protobuf-cpp-3.5.1.zip \\\n && unzip protobuf-cpp-3.5.1.zip \\\n && cd protobuf-3.5.1 \\\n && mkdir /opt/protobuf \\\n && ./configure --prefix=/opt/protobuf \\\n && make -j16 \\\n && make install \\\n && ln -s /usr/bin/cmake3 /usr/local/bin/cmake\n# ### Install x-compiler with Python26 and gcc4.4.7\n#  USER=xcomp DIR=build_ctng,install_ctng,build_xc\nRUN yum -y install gperf texinfo help2man ncurses-devel python-devel \\\n && useradd xcomp \\\n && mkdir /home/xcomp/build_ctng \\\n && cp /root/dlk/docker/lm_cross_arm.config /home/xcomp \\\n && chown -R xcomp:xcomp /home/xcomp\nUSER xcomp\nRUN cd /home/xcomp/build_ctng \\\n && wget http://crosstool-ng.org/download/crosstool-ng/crosstool-ng-1.23.0.tar.bz2 \\\n && tar xvjf crosstool-ng-1.23.0.tar.bz2 \\\n && cd crosstool-ng-1.23.0 \\\n && ./configure --prefix=/home/xcomp/install_ctng \\\n && make -j16 \\\n && make install \\\n && mkdir /home/xcomp/build_xc \\\n && cd /home/xcomp/build_xc \\\n && cp ../lm_cross_arm.config .config \\\n && unset LD_LIBRARY_PATH \\\n && unset LIBRARY_PATH \\\n && unset CPLUS_INCLUDE_PATH \\\n && /home/xcomp/install_ctng/bin/ct-ng build\nUSER root\nRUN chown -R root:root /home/xcomp/x-tools \\\n && mv /home/xcomp/x-tools /opt\n#  Compilation of LLVM. This is last because newer gcc is requred.\nRUN mkdir /root/src_llvm \\\n && cd /root/src_llvm \\\n && svn co http://llvm.org/svn/llvm-project/llvm/tags/RELEASE_501/final/ llvm-5.0.1 \\\n && cd llvm-5.0.1/tools \\\n && svn co http://llvm.org/svn/llvm-project/cfe/tags/RELEASE_501/final/ clang \\\n && mkdir /root/build_llvm \\\n && source scl_source enable rh-python36 \\\n && source scl_source enable devtoolset-6 \\\n && cd /root/build_llvm \\\n && cmake -G \"Unix Makefiles\" /root/src_llvm/llvm-5.0.1/ -DCMAKE_INSTALL_PREFIX=/opt/llvm -DCMAKE_BUILD_TYPE=Release -DLLVM_TARGETS_TO_BUILD=\"ARM;X86\" \\\n && make -j16 \\\n && make install\n# #######################################################\n#  The begining of running image\n# #######################################################\nFROM centos:centos6.8\n#  basic software installation\nRUN yum -y update --exclude=kernel* --exclude=centos* \\\n && yum -y groupinstall \"Development Tools\" \\\n && yum -y install centos-release-scl-rh \\\n && yum -y install epel-release \\\n && yum -y install scl-utils \\\n && yum -y install gcc-c++ \\\n && yum -y install devtoolset-6-gcc-c++ \\\n && yum -y install git zlib-devel openssl-devel \\\n && yum -y install rh-python36-python \\\n && yum -y install rh-python36-python-devel \\\n && yum -y install libjpeg-devel \\\n && yum -y install cmake3 \\\n && yum -y install unzip \\\n && yum -y install libyaml-devel \\\n && yum -y install ncurses-devel-5.7-4.20090207.el6\n#  For Intel Tools\nRUN yum -y install glibc.i686 \\\n && yum -y install glibc-devel.i686 \\\n && yum -y install libX11.i686 \\\n && yum -y install libXext.i686 \\\n && yum -y install libXft.i686 \\\n && yum -y install libgcc.i686 \\\n && yum -y install libgcc.x86_64 \\\n && yum -y install libstdc++.i686 \\\n && yum -y install libstdc++-devel.i686 \\\n && yum -y install ncurses-devel.i686 \\\n && yum -y install qt.i686 qt-x11.i686 \\\n && yum -y install xterm \\\n && yum -y install gperftools-libs \\\n && yum -y install mesa-libGL \\\n && yum -y install mesa-libGLU \\\n && yum -y install webkitgtk \\\n && yum clean all\n# RUN mkdir /root/dlk\nCOPY --from=builder /root/dlk/docker/enable_tools.sh /etc/profile.d\nCOPY --from=builder /opt/protobuf /opt/protobuf\nCOPY --from=builder /opt/intelFPGA_lite/17.1 /opt/intelFPGA_lite/17.1\nCOPY --from=builder /opt/intelFPGA/17.1 /opt/intelFPGA/17.1\nCOPY --from=builder /opt/x-tools /opt/x-tools\nCOPY --from=builder /root/dlk /root/dlk\nCOPY --from=builder /opt/llvm /opt/llvm\nRUN ln -s /opt/x-tools/arm-unknown-linux-gnueabihf/bin/arm-unknown-linux-gnueabihf-g++ /usr/local/bin/arm-linux-gnueabihf-g++\nRUN ln -s /usr/bin/cmake3 /usr/local/bin/cmake\n","injectedSmells":[],"originalDockerfileHash":"6daba109792247f12c7fca4f641e00f7","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM centos:centos6.8 AS builder\nLABEL maintener=\"Takeda Koji <takeda@leapmind.io>\"\n#  #######################################################\n#   The begining of builder image\n#  #######################################################\n#   basic software installation\nRUN yum -y update --exclude=kernel* --exclude=centos* \\\n && yum -y groupinstall \"Development Tools\" \\\n && yum -y install wget \\\n && yum -y install centos-release-scl-rh \\\n && yum -y install epel-release \\\n && yum -y install scl-utils \\\n && yum -y install gcc-c++ \\\n && yum -y install devtoolset-6-gcc-c++ \\\n && yum -y install git zlib-devel openssl-devel \\\n && yum -y install rh-python36-python \\\n && yum -y install rh-python36-python-devel \\\n && yum -y install libjpeg-devel cmake3 unzip \\\n && yum -y install xterm \\\n && yum -y install gperftools-libs \\\n && yum -y install mesa-libGL \\\n && yum -y install mesa-libGLU \\\n && yum -y install webkitgtk \\\n && yum -y install libyaml-devel \\\n && yum -y install ncurses-devel-5.7-4.20090207.el6\n#  COPY download /root/download\n#   Copy \"top directory of dlk\" of host to \"/root/dlk\" of guest \nCOPY . /root/dlk\nRUN cd /root/dlk/docker \\\n && mkdir work_tools \\\n && mv Quartus-lite-17.1.0.590-linux.tar work_tools \\\n && mv SoCEDSSetup-17.1.0.590-linux.run work_tools \\\n && cd work_tools \\\n && tar xvf Quartus-lite-17.1.0.590-linux.tar \\\n && ./setup.sh --mode unattended --installdir /opt/intelFPGA_lite/17.1 --accept_eula 1 --disable-components arria_lite,cyclone,cyclone10lp,max,max10 \\\n && ./SoCEDSSetup-17.1.0.590-linux.run --mode unattended --installdir /opt/intelFPGA/17.1 --accept_eula 1 \\\n && cd .. \\\n && rm -rf /root/dlk/docker/work_tools\n#   Download and Compilation of protobuf\nRUN mkdir /root/protobuf \\\n && cd /root/protobuf \\\n && wget https://github.com/google/protobuf/releases/download/v3.5.1/protobuf-cpp-3.5.1.zip \\\n && unzip protobuf-cpp-3.5.1.zip \\\n && cd protobuf-3.5.1 \\\n && mkdir /opt/protobuf \\\n && ./configure --prefix=/opt/protobuf \\\n && make -j16 \\\n && make install \\\n && ln -s /usr/bin/cmake3 /usr/local/bin/cmake\n#  ### Install x-compiler with Python26 and gcc4.4.7\n#   USER=xcomp DIR=build_ctng,install_ctng,build_xc\nRUN yum -y install gperf texinfo help2man ncurses-devel python-devel \\\n && useradd xcomp \\\n && mkdir /home/xcomp/build_ctng \\\n && cp /root/dlk/docker/lm_cross_arm.config /home/xcomp \\\n && chown -R xcomp:xcomp /home/xcomp\nUSER xcomp\nRUN cd /home/xcomp/build_ctng \\\n && wget http://crosstool-ng.org/download/crosstool-ng/crosstool-ng-1.23.0.tar.bz2 \\\n && tar xvjf crosstool-ng-1.23.0.tar.bz2 \\\n && cd crosstool-ng-1.23.0 \\\n && ./configure --prefix=/home/xcomp/install_ctng \\\n && make -j16 \\\n && make install \\\n && mkdir /home/xcomp/build_xc \\\n && cd /home/xcomp/build_xc \\\n && cp ../lm_cross_arm.config .config \\\n && unset LD_LIBRARY_PATH \\\n && unset LIBRARY_PATH \\\n && unset CPLUS_INCLUDE_PATH \\\n && /home/xcomp/install_ctng/bin/ct-ng build\nUSER root\nRUN chown -R root:root /home/xcomp/x-tools \\\n && mv /home/xcomp/x-tools /opt\n#   Compilation of LLVM. This is last because newer gcc is requred.\nRUN mkdir /root/src_llvm \\\n && cd /root/src_llvm \\\n && svn co http://llvm.org/svn/llvm-project/llvm/tags/RELEASE_501/final/ llvm-5.0.1 \\\n && cd llvm-5.0.1/tools \\\n && svn co http://llvm.org/svn/llvm-project/cfe/tags/RELEASE_501/final/ clang \\\n && mkdir /root/build_llvm \\\n && source scl_source enable rh-python36 \\\n && source scl_source enable devtoolset-6 \\\n && cd /root/build_llvm \\\n && cmake -G \"Unix Makefiles\" /root/src_llvm/llvm-5.0.1/ -DCMAKE_INSTALL_PREFIX=/opt/llvm -DCMAKE_BUILD_TYPE=Release -DLLVM_TARGETS_TO_BUILD=\"ARM;X86\" \\\n && make -j16 \\\n && make install\n#  #######################################################\n#   The begining of running image\n#  #######################################################\nFROM centos:centos6.8\n#   basic software installation\nRUN yum -y update --exclude=kernel* --exclude=centos* \\\n && yum -y groupinstall \"Development Tools\" \\\n && yum -y install centos-release-scl-rh \\\n && yum -y install epel-release \\\n && yum -y install scl-utils \\\n && yum -y install gcc-c++ \\\n && yum -y install devtoolset-6-gcc-c++ \\\n && yum -y install git zlib-devel openssl-devel \\\n && yum -y install rh-python36-python \\\n && yum -y install rh-python36-python-devel \\\n && yum -y install libjpeg-devel \\\n && yum -y install cmake3 \\\n && yum -y install unzip \\\n && yum -y install libyaml-devel \\\n && yum -y install ncurses-devel-5.7-4.20090207.el6\n#   For Intel Tools\nRUN yum -y install glibc.i686 \\\n && yum -y install glibc-devel.i686 \\\n && yum -y install libX11.i686 \\\n && yum -y install libXext.i686 \\\n && yum -y install libXft.i686 \\\n && yum -y install libgcc.i686 \\\n && yum -y install libgcc.x86_64 \\\n && yum -y install libstdc++.i686 \\\n && yum -y install libstdc++-devel.i686 \\\n && yum -y install ncurses-devel.i686 \\\n && yum -y install qt.i686 qt-x11.i686 \\\n && yum -y install xterm \\\n && yum -y install gperftools-libs \\\n && yum -y install mesa-libGL \\\n && yum -y install mesa-libGLU \\\n && yum -y install webkitgtk \\\n && yum clean all\n#  RUN mkdir /root/dlk\nCOPY --from=builder /root/dlk/docker/enable_tools.sh /etc/profile.d\nCOPY --from=builder /opt/protobuf /opt/protobuf\nCOPY --from=builder /opt/intelFPGA_lite/17.1 /opt/intelFPGA_lite/17.1\nCOPY --from=builder /opt/intelFPGA/17.1 /opt/intelFPGA/17.1\nCOPY --from=builder /opt/x-tools /opt/x-tools\nCOPY --from=builder /root/dlk /root/dlk\nCOPY --from=builder /opt/llvm /opt/llvm\nRUN ln -s /opt/x-tools/arm-unknown-linux-gnueabihf/bin/arm-unknown-linux-gnueabihf-g++ /usr/local/bin/arm-linux-gnueabihf-g++\nRUN ln -s /usr/bin/cmake3 /usr/local/bin/cmake\n","originalDockerfileUglifiedHash":"fcd5a0fa65b3330f375dec3e53b504e7","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/9b5c479bd1df2d64aeb7dd0bfdf90a1c535a1ae6.dockerfile"}