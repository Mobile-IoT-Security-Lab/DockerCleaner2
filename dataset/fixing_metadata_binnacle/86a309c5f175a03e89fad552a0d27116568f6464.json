{"seed":1558574375,"processedDockerfileHash":"82f1cc3bc7bcc21b761c65fd0b3fa826","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-npm","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM buildpack-deps:jessie-curl\n#   openjdk:8-jre\n#   A few problems with compiling Java from source:\n#    1. Oracle.  Licensing prevents us from redistributing the official JDK.\n#    2. Compiling OpenJDK also requires the JDK to be installed, and it gets\n#         really hairy.\nRUN apt-get update \\\n && apt-get install --no-install-recommends bzip2 unzip xz-utils -y \\\n && rm -rf /var/lib/apt/lists/*\nRUN echo 'deb http://deb.debian.org/debian jessie-backports main' > /etc/apt/sources.list.d/jessie-backports.list\n#   Default to UTF-8 file.encoding\nENV LANG=\"C.UTF-8\"\n#   add a simple script that can auto-detect the appropriate JAVA_HOME value\n#   based on whether the JDK or only the JRE is installed\nRUN { echo '#!/bin/sh' ;echo 'set -e' ;echo ;echo 'dirname \"$(dirname \"$(readlink -f \"$(which javac || which java)\")\")\"' ; } > /usr/local/bin/docker-java-home \\\n && chmod +x /usr/local/bin/docker-java-home\nENV JAVA_HOME=\"/usr/lib/jvm/java-8-openjdk-amd64/jre\"\nENV JAVA_VERSION=\"8u121\"\nENV JAVA_DEBIAN_VERSION=\"8u121-b13-1~bpo8+1\"\n#   see https://bugs.debian.org/775775\n#   and https://github.com/docker-library/java/issues/19#issuecomment-70546872\nENV CA_CERTIFICATES_JAVA_VERSION=\"20161107~bpo8+1\"\nRUN set -x \\\n && apt-get update \\\n && apt-get install --no-install-recommends openjdk-8-jre-headless=\"$JAVA_DEBIAN_VERSION\" ca-certificates-java=\"$CA_CERTIFICATES_JAVA_VERSION\" -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && [ \"$JAVA_HOME\" = \"$( docker-java-home ;)\" ]\n#   see CA_CERTIFICATES_JAVA_VERSION notes above\nRUN /var/lib/dpkg/info/ca-certificates-java.postinst configure\n#   If you're reading this and have any feedback on how this image could be\n#     improved, please open an issue or a pull request so we can discuss it!\n#   node:7.6\nRUN groupadd --gid 1000 node \\\n && useradd --uid 1000 --gid node --shell /bin/bash --create-home node\n#   gpg keys listed at https://github.com/nodejs/node\nRUN set -ex \\\n && for key in 9554F04D7259F04124DE6B476D5A82AC7E37093B 94AE36675C464D64BAFA68DD7434390BDBE9B9C5 0034A06D9D9B0064CE8ADF6BF1747F4AD2306D93 FD3A5288F042B6850C66B31F09FE44734EB7990E 71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 DD8F2338BAE7501E3DD5AC78C273792F7D83545D B9AE9905FFD7803F25714661B63B535A4C206CA9 C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 56730D5401028683275BD23C23EFEFE93C4CFFFE; do gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\" ; done\nENV NPM_CONFIG_LOGLEVEL=\"info\"\nENV NODE_VERSION=\"7.6.0\"\nRUN curl -SLO \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.xz\" \\\n && curl -SLO \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\" \\\n && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc \\\n && grep \" node-v$NODE_VERSION-linux-x64.tar.xz$\" SHASUMS256.txt | sha256sum -c - \\\n && tar -xJf \"node-v$NODE_VERSION-linux-x64.tar.xz\" -C /usr/local --strip-components=1 \\\n && rm \"node-v$NODE_VERSION-linux-x64.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt \\\n && ln -s /usr/local/bin/node /usr/local/bin/nodejs\nRUN npm install mocha@10.2.0 -g\n#   Create app directory\nRUN mkdir -p /usr/src/app/dynamodb_local\nWORKDIR /usr/src/app/dynamodb_local\nENV DYNAMODBCHECKSUM=\"d79732d7cd6e4b66fbf4bb7a7fc06cb75abbbe1bbbfb3d677a24815a1465a0b2 \"\nRUN curl https://s3-us-west-2.amazonaws.com/dynamodb-local/dynamodb_local_latest.tar.gz | tar xz\nWORKDIR /usr/src/app\n#   Install app dependencies\nCOPY package.json /usr/src/app/\nRUN npm install\n#   Bundle app source\nCOPY . /usr/src/app\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM buildpack-deps:jessie-curl\n#  openjdk:8-jre\n#  A few problems with compiling Java from source:\n#   1. Oracle.  Licensing prevents us from redistributing the official JDK.\n#   2. Compiling OpenJDK also requires the JDK to be installed, and it gets\n#        really hairy.\nRUN apt-get update \\\n && apt-get install --no-install-recommends bzip2 unzip xz-utils -y \\\n && rm -rf /var/lib/apt/lists/*\nRUN echo 'deb http://deb.debian.org/debian jessie-backports main' > /etc/apt/sources.list.d/jessie-backports.list\n#  Default to UTF-8 file.encoding\nENV LANG=\"C.UTF-8\"\n#  add a simple script that can auto-detect the appropriate JAVA_HOME value\n#  based on whether the JDK or only the JRE is installed\nRUN { echo '#!/bin/sh' ;echo 'set -e' ;echo ;echo 'dirname \"$(dirname \"$(readlink -f \"$(which javac || which java)\")\")\"' ; } > /usr/local/bin/docker-java-home \\\n && chmod +x /usr/local/bin/docker-java-home\nENV JAVA_HOME=\"/usr/lib/jvm/java-8-openjdk-amd64/jre\"\nENV JAVA_VERSION=\"8u121\"\nENV JAVA_DEBIAN_VERSION=\"8u121-b13-1~bpo8+1\"\n#  see https://bugs.debian.org/775775\n#  and https://github.com/docker-library/java/issues/19#issuecomment-70546872\nENV CA_CERTIFICATES_JAVA_VERSION=\"20161107~bpo8+1\"\nRUN set -x \\\n && apt-get update \\\n && apt-get install openjdk-8-jre-headless=\"$JAVA_DEBIAN_VERSION\" ca-certificates-java=\"$CA_CERTIFICATES_JAVA_VERSION\" -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && [ \"$JAVA_HOME\" = \"$( docker-java-home ;)\" ]\n#  see CA_CERTIFICATES_JAVA_VERSION notes above\nRUN /var/lib/dpkg/info/ca-certificates-java.postinst configure\n#  If you're reading this and have any feedback on how this image could be\n#    improved, please open an issue or a pull request so we can discuss it!\n#  node:7.6\nRUN groupadd --gid 1000 node \\\n && useradd --uid 1000 --gid node --shell /bin/bash --create-home node\n#  gpg keys listed at https://github.com/nodejs/node\nRUN set -ex \\\n && for key in 9554F04D7259F04124DE6B476D5A82AC7E37093B 94AE36675C464D64BAFA68DD7434390BDBE9B9C5 0034A06D9D9B0064CE8ADF6BF1747F4AD2306D93 FD3A5288F042B6850C66B31F09FE44734EB7990E 71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 DD8F2338BAE7501E3DD5AC78C273792F7D83545D B9AE9905FFD7803F25714661B63B535A4C206CA9 C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 56730D5401028683275BD23C23EFEFE93C4CFFFE; do gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\" ; done\nENV NPM_CONFIG_LOGLEVEL=\"info\"\nENV NODE_VERSION=\"7.6.0\"\nRUN curl -SLO \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.xz\" \\\n && curl -SLO \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\" \\\n && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc \\\n && grep \" node-v$NODE_VERSION-linux-x64.tar.xz$\" SHASUMS256.txt | sha256sum -c - \\\n && tar -xJf \"node-v$NODE_VERSION-linux-x64.tar.xz\" -C /usr/local --strip-components=1 \\\n && rm \"node-v$NODE_VERSION-linux-x64.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt \\\n && ln -s /usr/local/bin/node /usr/local/bin/nodejs\nRUN npm install mocha -g\n#  Create app directory\nRUN mkdir -p /usr/src/app/dynamodb_local\nWORKDIR /usr/src/app/dynamodb_local\nENV DYNAMODBCHECKSUM=\"d79732d7cd6e4b66fbf4bb7a7fc06cb75abbbe1bbbfb3d677a24815a1465a0b2 \"\nRUN curl https://s3-us-west-2.amazonaws.com/dynamodb-local/dynamodb_local_latest.tar.gz | tar xz\nWORKDIR /usr/src/app\n#  Install app dependencies\nCOPY package.json /usr/src/app/\nRUN npm install\n#  Bundle app source\nCOPY . /usr/src/app\n","injectedSmells":[],"originalDockerfileHash":"3c3ca3f78f2978c2deaab3f75ce5f527","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM buildpack-deps:jessie-curl\n#   openjdk:8-jre\n#   A few problems with compiling Java from source:\n#    1. Oracle.  Licensing prevents us from redistributing the official JDK.\n#    2. Compiling OpenJDK also requires the JDK to be installed, and it gets\n#         really hairy.\nRUN apt-get update \\\n && apt-get install --no-install-recommends bzip2 unzip xz-utils -y \\\n && rm -rf /var/lib/apt/lists/*\nRUN echo 'deb http://deb.debian.org/debian jessie-backports main' > /etc/apt/sources.list.d/jessie-backports.list\n#   Default to UTF-8 file.encoding\nENV LANG=\"C.UTF-8\"\n#   add a simple script that can auto-detect the appropriate JAVA_HOME value\n#   based on whether the JDK or only the JRE is installed\nRUN { echo '#!/bin/sh' ;echo 'set -e' ;echo ;echo 'dirname \"$(dirname \"$(readlink -f \"$(which javac || which java)\")\")\"' ; } > /usr/local/bin/docker-java-home \\\n && chmod +x /usr/local/bin/docker-java-home\nENV JAVA_HOME=\"/usr/lib/jvm/java-8-openjdk-amd64/jre\"\nENV JAVA_VERSION=\"8u121\"\nENV JAVA_DEBIAN_VERSION=\"8u121-b13-1~bpo8+1\"\n#   see https://bugs.debian.org/775775\n#   and https://github.com/docker-library/java/issues/19#issuecomment-70546872\nENV CA_CERTIFICATES_JAVA_VERSION=\"20161107~bpo8+1\"\nRUN set -x \\\n && apt-get update \\\n && apt-get install openjdk-8-jre-headless=\"$JAVA_DEBIAN_VERSION\" ca-certificates-java=\"$CA_CERTIFICATES_JAVA_VERSION\" -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && [ \"$JAVA_HOME\" = \"$( docker-java-home ;)\" ]\n#   see CA_CERTIFICATES_JAVA_VERSION notes above\nRUN /var/lib/dpkg/info/ca-certificates-java.postinst configure\n#   If you're reading this and have any feedback on how this image could be\n#     improved, please open an issue or a pull request so we can discuss it!\n#   node:7.6\nRUN groupadd --gid 1000 node \\\n && useradd --uid 1000 --gid node --shell /bin/bash --create-home node\n#   gpg keys listed at https://github.com/nodejs/node\nRUN set -ex \\\n && for key in 9554F04D7259F04124DE6B476D5A82AC7E37093B 94AE36675C464D64BAFA68DD7434390BDBE9B9C5 0034A06D9D9B0064CE8ADF6BF1747F4AD2306D93 FD3A5288F042B6850C66B31F09FE44734EB7990E 71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 DD8F2338BAE7501E3DD5AC78C273792F7D83545D B9AE9905FFD7803F25714661B63B535A4C206CA9 C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 56730D5401028683275BD23C23EFEFE93C4CFFFE; do gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\" ; done\nENV NPM_CONFIG_LOGLEVEL=\"info\"\nENV NODE_VERSION=\"7.6.0\"\nRUN curl -SLO \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.xz\" \\\n && curl -SLO \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\" \\\n && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc \\\n && grep \" node-v$NODE_VERSION-linux-x64.tar.xz$\" SHASUMS256.txt | sha256sum -c - \\\n && tar -xJf \"node-v$NODE_VERSION-linux-x64.tar.xz\" -C /usr/local --strip-components=1 \\\n && rm \"node-v$NODE_VERSION-linux-x64.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt \\\n && ln -s /usr/local/bin/node /usr/local/bin/nodejs\nRUN npm install mocha -g\n#   Create app directory\nRUN mkdir -p /usr/src/app/dynamodb_local\nWORKDIR /usr/src/app/dynamodb_local\nENV DYNAMODBCHECKSUM=\"d79732d7cd6e4b66fbf4bb7a7fc06cb75abbbe1bbbfb3d677a24815a1465a0b2 \"\nRUN curl https://s3-us-west-2.amazonaws.com/dynamodb-local/dynamodb_local_latest.tar.gz | tar xz\nWORKDIR /usr/src/app\n#   Install app dependencies\nCOPY package.json /usr/src/app/\nRUN npm install\n#   Bundle app source\nCOPY . /usr/src/app\n","originalDockerfileUglifiedHash":"cea3789af64c74ee21190ab7be52a06c","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/86a309c5f175a03e89fad552a0d27116568f6464.dockerfile"}