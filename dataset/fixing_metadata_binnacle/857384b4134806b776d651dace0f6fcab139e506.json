{"seed":3964302834,"processedDockerfileHash":"3cf058f000101c99d5ec94b6c20d9bab","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-gem","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Licensed under the Apache License, Version 2.0 (the \"License\");\n#   you may not use this file except in compliance with the License.\n#   You may obtain a copy of the License at\n#\n#       http://www.apache.org/licenses/LICENSE-2.0\n#\n#   Unless required by applicable law or agreed to in writing, software\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#   See the License for the specific language governing permissions and\n#   limitations under the License.\n#   Apache Thrift Docker build environment for Ubuntu\n#\n#   Known missing client libraries:\n#    - dotnetcore\nFROM buildpack-deps:trusty-scm\nMAINTAINER Apache Thrift <dev@thrift.apache.org>\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#   Add apt sources\n#   CMAKE\nRUN apt-get update \\\n && apt-get install --no-install-recommends software-properties-common -y \\\n && add-apt-repository -y ppa:george-edison55/cmake-3.x\n#   Erlang\nRUN echo 'deb http://packages.erlang-solutions.com/debian trusty contrib' > /etc/apt/sources.list.d/erlang_solutions.list \\\n && curl -sSL https://packages.erlang-solutions.com/debian/erlang_solutions.asc | apt-key add -\n#   Dart\nRUN curl https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \\\n && curl https://storage.googleapis.com/download.dartlang.org/linux/debian/dart_stable.list > /etc/apt/sources.list.d/dart_stable.list \\\n && sed -i /etc/apt/sources.list.d/dart_stable.list -e 's/https:/http:/g'\n#   Consider using mirror nearby when building locally\n#   TODO: Provide option via --build-arg=...\n#   RUN sed -i /etc/apt/sources.list -e 's!http://archive.ubuntu.com/ubuntu/!http://your/mirror/!g'\nRUN apt-get update \\\n && apt-get install --no-install-recommends bison build-essential clang cmake debhelper flex ninja-build pkg-config `` `` `` `` `` `` `` `` -y\nRUN apt-get install --no-install-recommends libboost-dev libboost-filesystem-dev libboost-program-options-dev libboost-system-dev libboost-test-dev libboost-thread-dev libevent-dev libssl-dev qt5-default qtbase5-dev qtbase5-dev-tools `` `` -y\nRUN apt-get install --no-install-recommends ant ant-optional openjdk-7-jdk maven `` -y\nRUN apt-get install --no-install-recommends python-all python-all-dbg python-all-dev python-pip python-setuptools python-twisted python-zope.interface python3-all python3-all-dbg python3-all-dev python3-setuptools python3-pip `` `` `` `` -y\nRUN apt-get install --no-install-recommends ruby ruby-dev ruby-bundler libbit-vector-perl libclass-accessor-class-perl libcrypt-ssleay-perl libio-socket-ssl-perl libnet-ssleay-perl `` `` -y\nRUN apt-get install --no-install-recommends php5 php5-dev php5-cli php-pear re2c phpunit libglib2.0-dev `` `` -y\nRUN apt-get update \\\n && apt-get install --no-install-recommends erlang-base erlang-eunit erlang-dev erlang-tools rebar `` -y\nRUN apt-get install --no-install-recommends ghc cabal-install neko neko-dev libneko0 `` `` -y\n#   Newer release of nodejs\nRUN curl -sL https://deb.nodesource.com/setup_4.x | bash\nRUN apt-get install --no-install-recommends nodejs `` -y\n#   Add mono package repository url to get latest version of mono\nRUN echo \"deb http://download.mono-project.com/repo/debian trusty main\" | tee /etc/apt/sources.list.d/mono.list\nRUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys A6A19B38D3D831EF\nRUN apt-get update \\\n && apt-get install --no-install-recommends mono-devel `` -y\nRUN apt-get install --no-install-recommends xdg-utils dart lua5.2 lua5.2-dev mingw32 mingw32-binutils mingw32-runtime nsis `` `` `` `` `` -y \\\n && rm -rf /var/cache/apt/* \\\n && rm -rf /var/lib/apt/lists/* \\\n && rm -rf /tmp/* \\\n && rm -rf /var/tmp/*\n#   Ruby\nRUN gem install bundler --version 2.4.12 --no-ri --no-rdoc\n#   Python optional dependencies\nRUN pip2 install -U ipaddress backports.ssl_match_hostname tornado\nRUN pip3 install -U backports.ssl_match_hostname tornado\n#   Go\nRUN curl -sSL https://storage.googleapis.com/golang/go1.4.3.linux-amd64.tar.gz | tar -C /usr/local/ -xz\nENV PATH=\"/usr/local/go/bin:$PATH\"\n#   Haxe\nRUN mkdir -p /usr/lib/haxe \\\n && wget -O - https://github.com/HaxeFoundation/haxe/releases/download/3.2.1/haxe-3.2.1-linux64.tar.gz | tar -C /usr/lib/haxe --strip-components=1 -xz \\\n && ln -s /usr/lib/haxe/haxe /usr/bin/haxe \\\n && ln -s /usr/lib/haxe/haxelib /usr/bin/haxelib \\\n && mkdir -p /usr/lib/haxe/lib \\\n && chmod -R 777 /usr/lib/haxe/lib \\\n && haxelib setup --always /usr/lib/haxe/lib \\\n && haxelib install --always hxcpp 3.4.64\n#   Node.js\n#   temporarily removed since this breaks the build (and is not needed to test C# code)\n#   RUN curl -sSL https://www.npmjs.com/install.sh | sh\n#   D\nRUN curl -sSL http://downloads.dlang.org/releases/2.x/2.070.0/dmd_2.070.0-0_amd64.deb -o /tmp/dmd_2.070.0-0_amd64.deb \\\n && dpkg -i /tmp/dmd_2.070.0-0_amd64.deb \\\n && rm /tmp/dmd_2.070.0-0_amd64.deb \\\n && curl -sSL https://github.com/D-Programming-Deimos/openssl/archive/master.tar.gz | tar xz \\\n && curl -sSL https://github.com/D-Programming-Deimos/libevent/archive/master.tar.gz | tar xz \\\n && mkdir -p /usr/include/dmd/druntime/import/deimos /usr/include/dmd/druntime/import/C \\\n && mv libevent-master/deimos/* openssl-master/deimos/* /usr/include/dmd/druntime/import/deimos/ \\\n && mv libevent-master/C/* openssl-master/C/* /usr/include/dmd/druntime/import/C/ \\\n && rm -rf libevent-master openssl-master \\\n && echo 'gcc -Wl,--no-as-needed $*' > /usr/local/bin/gcc-dmd \\\n && chmod 755 /usr/local/bin/gcc-dmd \\\n && echo 'CC=/usr/local/bin/gcc-dmd' >> /etc/dmd.conf\n#   Dart\nENV PATH=\"/usr/lib/dart/bin:$PATH\"\n#   OCaml\nRUN echo 'deb http://ppa.launchpad.net/avsm/ppa/ubuntu trusty main' > /etc/apt/sources.list.d/avsm-official-ocaml.list \\\n && gpg --keyserver keyserver.ubuntu.com --recv 61707B09 \\\n && gpg --export --armor 61707B09 | apt-key add - \\\n && apt-get update \\\n && apt-get install --no-install-recommends ocaml opam -y \\\n && opam init \\\n && opam install oasis\n#   Rust\nRUN curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain 1.17.0\nENV PATH=\"/root/.cargo/bin:$PATH\"\nENV THRIFT_ROOT=\"/thrift\"\nRUN mkdir -p $THRIFT_ROOT/src\nCOPY Dockerfile $THRIFT_ROOT/\nWORKDIR $THRIFT_ROOT/src\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Licensed under the Apache License, Version 2.0 (the \"License\");\n#  you may not use this file except in compliance with the License.\n#  You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n#  Unless required by applicable law or agreed to in writing, software\n#  distributed under the License is distributed on an \"AS IS\" BASIS,\n#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#  See the License for the specific language governing permissions and\n#  limitations under the License.\n#  Apache Thrift Docker build environment for Ubuntu\n#\n#  Known missing client libraries:\n#   - dotnetcore\nFROM buildpack-deps:trusty-scm\nMAINTAINER Apache Thrift <dev@thrift.apache.org>\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#  Add apt sources\n#  CMAKE\nRUN apt-get update \\\n && apt-get install --no-install-recommends software-properties-common -y \\\n && add-apt-repository -y ppa:george-edison55/cmake-3.x\n#  Erlang\nRUN echo 'deb http://packages.erlang-solutions.com/debian trusty contrib' > /etc/apt/sources.list.d/erlang_solutions.list \\\n && curl -sSL https://packages.erlang-solutions.com/debian/erlang_solutions.asc | apt-key add -\n#  Dart\nRUN curl https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \\\n && curl https://storage.googleapis.com/download.dartlang.org/linux/debian/dart_stable.list > /etc/apt/sources.list.d/dart_stable.list \\\n && sed -i /etc/apt/sources.list.d/dart_stable.list -e 's/https:/http:/g'\n#  Consider using mirror nearby when building locally\n#  TODO: Provide option via --build-arg=...\n#  RUN sed -i /etc/apt/sources.list -e 's!http://archive.ubuntu.com/ubuntu/!http://your/mirror/!g'\nRUN apt-get update \\\n && apt-get install --no-install-recommends bison build-essential clang cmake debhelper flex ninja-build pkg-config `` `` `` `` `` `` `` `` -y\nRUN apt-get install --no-install-recommends libboost-dev libboost-filesystem-dev libboost-program-options-dev libboost-system-dev libboost-test-dev libboost-thread-dev libevent-dev libssl-dev qt5-default qtbase5-dev qtbase5-dev-tools `` `` -y\nRUN apt-get install --no-install-recommends ant ant-optional openjdk-7-jdk maven `` -y\nRUN apt-get install --no-install-recommends python-all python-all-dbg python-all-dev python-pip python-setuptools python-twisted python-zope.interface python3-all python3-all-dbg python3-all-dev python3-setuptools python3-pip `` `` `` `` -y\nRUN apt-get install --no-install-recommends ruby ruby-dev ruby-bundler libbit-vector-perl libclass-accessor-class-perl libcrypt-ssleay-perl libio-socket-ssl-perl libnet-ssleay-perl `` `` -y\nRUN apt-get install --no-install-recommends php5 php5-dev php5-cli php-pear re2c phpunit libglib2.0-dev `` `` -y\nRUN apt-get update \\\n && apt-get install --no-install-recommends erlang-base erlang-eunit erlang-dev erlang-tools rebar `` -y\nRUN apt-get install --no-install-recommends ghc cabal-install neko neko-dev libneko0 `` `` -y\n#  Newer release of nodejs\nRUN curl -sL https://deb.nodesource.com/setup_4.x | bash\nRUN apt-get install --no-install-recommends nodejs `` -y\n#  Add mono package repository url to get latest version of mono\nRUN echo \"deb http://download.mono-project.com/repo/debian trusty main\" | tee /etc/apt/sources.list.d/mono.list\nRUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys A6A19B38D3D831EF\nRUN apt-get update \\\n && apt-get install --no-install-recommends mono-devel `` -y\nRUN apt-get install --no-install-recommends xdg-utils dart lua5.2 lua5.2-dev mingw32 mingw32-binutils mingw32-runtime nsis `` `` `` `` `` -y \\\n && rm -rf /var/cache/apt/* \\\n && rm -rf /var/lib/apt/lists/* \\\n && rm -rf /tmp/* \\\n && rm -rf /var/tmp/*\n#  Ruby\nRUN gem install bundler --no-ri --no-rdoc\n#  Python optional dependencies\nRUN pip2 install -U ipaddress backports.ssl_match_hostname tornado\nRUN pip3 install -U backports.ssl_match_hostname tornado\n#  Go\nRUN curl -sSL https://storage.googleapis.com/golang/go1.4.3.linux-amd64.tar.gz | tar -C /usr/local/ -xz\nENV PATH=\"/usr/local/go/bin:$PATH\"\n#  Haxe\nRUN mkdir -p /usr/lib/haxe \\\n && wget -O - https://github.com/HaxeFoundation/haxe/releases/download/3.2.1/haxe-3.2.1-linux64.tar.gz | tar -C /usr/lib/haxe --strip-components=1 -xz \\\n && ln -s /usr/lib/haxe/haxe /usr/bin/haxe \\\n && ln -s /usr/lib/haxe/haxelib /usr/bin/haxelib \\\n && mkdir -p /usr/lib/haxe/lib \\\n && chmod -R 777 /usr/lib/haxe/lib \\\n && haxelib setup --always /usr/lib/haxe/lib \\\n && haxelib install --always hxcpp 3.4.64\n#  Node.js\n#  temporarily removed since this breaks the build (and is not needed to test C# code)\n#  RUN curl -sSL https://www.npmjs.com/install.sh | sh\n#  D\nRUN curl -sSL http://downloads.dlang.org/releases/2.x/2.070.0/dmd_2.070.0-0_amd64.deb -o /tmp/dmd_2.070.0-0_amd64.deb \\\n && dpkg -i /tmp/dmd_2.070.0-0_amd64.deb \\\n && rm /tmp/dmd_2.070.0-0_amd64.deb \\\n && curl -sSL https://github.com/D-Programming-Deimos/openssl/archive/master.tar.gz | tar xz \\\n && curl -sSL https://github.com/D-Programming-Deimos/libevent/archive/master.tar.gz | tar xz \\\n && mkdir -p /usr/include/dmd/druntime/import/deimos /usr/include/dmd/druntime/import/C \\\n && mv libevent-master/deimos/* openssl-master/deimos/* /usr/include/dmd/druntime/import/deimos/ \\\n && mv libevent-master/C/* openssl-master/C/* /usr/include/dmd/druntime/import/C/ \\\n && rm -rf libevent-master openssl-master \\\n && echo 'gcc -Wl,--no-as-needed $*' > /usr/local/bin/gcc-dmd \\\n && chmod 755 /usr/local/bin/gcc-dmd \\\n && echo 'CC=/usr/local/bin/gcc-dmd' >> /etc/dmd.conf\n#  Dart\nENV PATH=\"/usr/lib/dart/bin:$PATH\"\n#  OCaml\nRUN echo 'deb http://ppa.launchpad.net/avsm/ppa/ubuntu trusty main' > /etc/apt/sources.list.d/avsm-official-ocaml.list \\\n && gpg --keyserver keyserver.ubuntu.com --recv 61707B09 \\\n && gpg --export --armor 61707B09 | apt-key add - \\\n && apt-get update \\\n && apt-get install ocaml opam -y \\\n && opam init \\\n && opam install oasis\n#  Rust\nRUN curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain 1.17.0\nENV PATH=\"/root/.cargo/bin:$PATH\"\nENV THRIFT_ROOT=\"/thrift\"\nRUN mkdir -p $THRIFT_ROOT/src\nCOPY Dockerfile $THRIFT_ROOT/\nWORKDIR $THRIFT_ROOT/src\n","injectedSmells":[],"originalDockerfileHash":"e3b5f78e872b768a83fb0608ec4a75f2","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Licensed under the Apache License, Version 2.0 (the \"License\");\n#   you may not use this file except in compliance with the License.\n#   You may obtain a copy of the License at\n#\n#       http://www.apache.org/licenses/LICENSE-2.0\n#\n#   Unless required by applicable law or agreed to in writing, software\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#   See the License for the specific language governing permissions and\n#   limitations under the License.\n#   Apache Thrift Docker build environment for Ubuntu\n#\n#   Known missing client libraries:\n#    - dotnetcore\nFROM buildpack-deps:trusty-scm\nMAINTAINER Apache Thrift <dev@thrift.apache.org>\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#   Add apt sources\n#   CMAKE\nRUN apt-get update \\\n && apt-get install --no-install-recommends software-properties-common -y \\\n && add-apt-repository -y ppa:george-edison55/cmake-3.x\n#   Erlang\nRUN echo 'deb http://packages.erlang-solutions.com/debian trusty contrib' > /etc/apt/sources.list.d/erlang_solutions.list \\\n && curl -sSL https://packages.erlang-solutions.com/debian/erlang_solutions.asc | apt-key add -\n#   Dart\nRUN curl https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \\\n && curl https://storage.googleapis.com/download.dartlang.org/linux/debian/dart_stable.list > /etc/apt/sources.list.d/dart_stable.list \\\n && sed -i /etc/apt/sources.list.d/dart_stable.list -e 's/https:/http:/g'\n#   Consider using mirror nearby when building locally\n#   TODO: Provide option via --build-arg=...\n#   RUN sed -i /etc/apt/sources.list -e 's!http://archive.ubuntu.com/ubuntu/!http://your/mirror/!g'\nRUN apt-get update \\\n && apt-get install --no-install-recommends bison build-essential clang cmake debhelper flex ninja-build pkg-config `` `` `` `` `` `` `` `` -y\nRUN apt-get install --no-install-recommends libboost-dev libboost-filesystem-dev libboost-program-options-dev libboost-system-dev libboost-test-dev libboost-thread-dev libevent-dev libssl-dev qt5-default qtbase5-dev qtbase5-dev-tools `` `` -y\nRUN apt-get install --no-install-recommends ant ant-optional openjdk-7-jdk maven `` -y\nRUN apt-get install --no-install-recommends python-all python-all-dbg python-all-dev python-pip python-setuptools python-twisted python-zope.interface python3-all python3-all-dbg python3-all-dev python3-setuptools python3-pip `` `` `` `` -y\nRUN apt-get install --no-install-recommends ruby ruby-dev ruby-bundler libbit-vector-perl libclass-accessor-class-perl libcrypt-ssleay-perl libio-socket-ssl-perl libnet-ssleay-perl `` `` -y\nRUN apt-get install --no-install-recommends php5 php5-dev php5-cli php-pear re2c phpunit libglib2.0-dev `` `` -y\nRUN apt-get update \\\n && apt-get install --no-install-recommends erlang-base erlang-eunit erlang-dev erlang-tools rebar `` -y\nRUN apt-get install --no-install-recommends ghc cabal-install neko neko-dev libneko0 `` `` -y\n#   Newer release of nodejs\nRUN curl -sL https://deb.nodesource.com/setup_4.x | bash\nRUN apt-get install --no-install-recommends nodejs `` -y\n#   Add mono package repository url to get latest version of mono\nRUN echo \"deb http://download.mono-project.com/repo/debian trusty main\" | tee /etc/apt/sources.list.d/mono.list\nRUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys A6A19B38D3D831EF\nRUN apt-get update \\\n && apt-get install --no-install-recommends mono-devel `` -y\nRUN apt-get install --no-install-recommends xdg-utils dart lua5.2 lua5.2-dev mingw32 mingw32-binutils mingw32-runtime nsis `` `` `` `` `` -y \\\n && rm -rf /var/cache/apt/* \\\n && rm -rf /var/lib/apt/lists/* \\\n && rm -rf /tmp/* \\\n && rm -rf /var/tmp/*\n#   Ruby\nRUN gem install bundler --no-ri --no-rdoc\n#   Python optional dependencies\nRUN pip2 install -U ipaddress backports.ssl_match_hostname tornado\nRUN pip3 install -U backports.ssl_match_hostname tornado\n#   Go\nRUN curl -sSL https://storage.googleapis.com/golang/go1.4.3.linux-amd64.tar.gz | tar -C /usr/local/ -xz\nENV PATH=\"/usr/local/go/bin:$PATH\"\n#   Haxe\nRUN mkdir -p /usr/lib/haxe \\\n && wget -O - https://github.com/HaxeFoundation/haxe/releases/download/3.2.1/haxe-3.2.1-linux64.tar.gz | tar -C /usr/lib/haxe --strip-components=1 -xz \\\n && ln -s /usr/lib/haxe/haxe /usr/bin/haxe \\\n && ln -s /usr/lib/haxe/haxelib /usr/bin/haxelib \\\n && mkdir -p /usr/lib/haxe/lib \\\n && chmod -R 777 /usr/lib/haxe/lib \\\n && haxelib setup --always /usr/lib/haxe/lib \\\n && haxelib install --always hxcpp 3.4.64\n#   Node.js\n#   temporarily removed since this breaks the build (and is not needed to test C# code)\n#   RUN curl -sSL https://www.npmjs.com/install.sh | sh\n#   D\nRUN curl -sSL http://downloads.dlang.org/releases/2.x/2.070.0/dmd_2.070.0-0_amd64.deb -o /tmp/dmd_2.070.0-0_amd64.deb \\\n && dpkg -i /tmp/dmd_2.070.0-0_amd64.deb \\\n && rm /tmp/dmd_2.070.0-0_amd64.deb \\\n && curl -sSL https://github.com/D-Programming-Deimos/openssl/archive/master.tar.gz | tar xz \\\n && curl -sSL https://github.com/D-Programming-Deimos/libevent/archive/master.tar.gz | tar xz \\\n && mkdir -p /usr/include/dmd/druntime/import/deimos /usr/include/dmd/druntime/import/C \\\n && mv libevent-master/deimos/* openssl-master/deimos/* /usr/include/dmd/druntime/import/deimos/ \\\n && mv libevent-master/C/* openssl-master/C/* /usr/include/dmd/druntime/import/C/ \\\n && rm -rf libevent-master openssl-master \\\n && echo 'gcc -Wl,--no-as-needed $*' > /usr/local/bin/gcc-dmd \\\n && chmod 755 /usr/local/bin/gcc-dmd \\\n && echo 'CC=/usr/local/bin/gcc-dmd' >> /etc/dmd.conf\n#   Dart\nENV PATH=\"/usr/lib/dart/bin:$PATH\"\n#   OCaml\nRUN echo 'deb http://ppa.launchpad.net/avsm/ppa/ubuntu trusty main' > /etc/apt/sources.list.d/avsm-official-ocaml.list \\\n && gpg --keyserver keyserver.ubuntu.com --recv 61707B09 \\\n && gpg --export --armor 61707B09 | apt-key add - \\\n && apt-get update \\\n && apt-get install ocaml opam -y \\\n && opam init \\\n && opam install oasis\n#   Rust\nRUN curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain 1.17.0\nENV PATH=\"/root/.cargo/bin:$PATH\"\nENV THRIFT_ROOT=\"/thrift\"\nRUN mkdir -p $THRIFT_ROOT/src\nCOPY Dockerfile $THRIFT_ROOT/\nWORKDIR $THRIFT_ROOT/src\n","originalDockerfileUglifiedHash":"fedfee97524fa17c5e464ce39b88c9c3","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/857384b4134806b776d651dace0f6fcab139e506.dockerfile"}