{"seed":4162943236,"processedDockerfileHash":"f46c1f456c5ef3f88622097bbf3cda14","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-pip","pin-package-manager-versions-apk","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Copyright 2019 Finiz Open Source Software\n#   Licensed under the Apache License, Version 2.0 (the \"License\");\n#   you may not use this file except in compliance with the License.\n#   You may obtain a copy of the License at\n#       http://www.apache.org/licenses/LICENSE-2.0\n#   Unless required by applicable law or agreed to in writing, software\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#   See the License for the specific language governing permissions and\n#   limitations under the License.\n#   From Alpine official image\nFROM alpine:latest\n#   Maintainer\nLABEL maintainer=\"Finiz Open Source Software <developer@finiz.in.th>\"\n#   Update apk repositories to be latest\nRUN apk update\n#   Install git\nRUN apk add git=2.38.4-r1\n#   Install and config Supervisor\nRUN apk add python py2-pip\nRUN pip install wheel==0.40.0\nRUN pip install supervisor==4.2.5 supervisor-stdout==0.1.1\nCOPY ./supervisord.conf /etc/supervisord.conf\nCOPY ./supervisord-dev.conf /etc/supervisord-dev.conf\n#   Avoid ERROR: invoke-rc.d: policy-rc.d denied execution of start.\nRUN echo \"#!/bin/sh\\nexit 0\" > /usr/sbin/policy-rc.d\n#   Install Nginx\nRUN apk add nginx=1.22.1-r0\n#   Override Nginx's default config\nRUN rm -rf /etc/nginx/conf.d/default.conf\nCOPY nginx/default.conf /etc/nginx/conf.d/default.conf\n#   Build Node.js 10.15.x\nENV NODE_VERSION=\"10.15.1\"\nRUN addgroup -g 1000 node \\\n && adduser -u 1000 -G node -s /bin/sh -D node \\\n && apk add libstdc++=12.2.1_git20220924-r4 --no-cache \\\n && apk add binutils-gold=2.39-r2 curl=7.88.1-r1 g++=12.2.1_git20220924-r4 gcc=12.2.1_git20220924-r4 gnupg=2.2.40-r0 libgcc=12.2.1_git20220924-r4 linux-headers=5.19.5-r0 make=4.3-r1 python --no-cache --virtual .build-deps \\\n && for key in 94AE36675C464D64BAFA68DD7434390BDBE9B9C5 FD3A5288F042B6850C66B31F09FE44734EB7990E 71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 DD8F2338BAE7501E3DD5AC78C273792F7D83545D C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 B9AE9905FFD7803F25714661B63B535A4C206CA9 77984A986EBC2AA786BC0F66B01FBB92821C587A 8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600 4ED778F539E3634C779C87C6D7062848A1AB005C A48C2BEE680E841632CD4E44F07496B3EB3C1762 B9E2F5981AA6E0CD28160D9FF13993A75599653C; do gpg --batch --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys \"$key\" || gpg --batch --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys \"$key\" || gpg --batch --keyserver hkp://pgp.mit.edu:80 --recv-keys \"$key\" ; done \\\n && curl -fsSLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION.tar.xz\" \\\n && curl -fsSLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\" \\\n && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc \\\n && grep \" node-v$NODE_VERSION.tar.xz$\" SHASUMS256.txt | sha256sum -c - \\\n && tar -xf \"node-v$NODE_VERSION.tar.xz\" \\\n && cd \"node-v$NODE_VERSION\" \\\n && ./configure \\\n && make -j$( getconf _NPROCESSORS_ONLN ;) \\\n && make install \\\n && apk del .build-deps \\\n && cd .. \\\n && rm -Rf \"node-v$NODE_VERSION\" \\\n && rm \"node-v$NODE_VERSION.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt\n#   Build Yarn Package Manager 1.13.x\nENV YARN_VERSION=\"1.13.0\"\nRUN apk add curl=7.88.1-r1 gnupg=2.2.40-r0 tar=1.34-r2 --no-cache --virtual .build-deps-yarn \\\n && for key in 6A010C5166006599AA17F08146C2130DFD2497F5; do gpg --batch --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys \"$key\" || gpg --batch --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys \"$key\" || gpg --batch --keyserver hkp://pgp.mit.edu:80 --recv-keys \"$key\" ; done \\\n && curl -fsSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz\" \\\n && curl -fsSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz.asc\" \\\n && gpg --batch --verify yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz \\\n && mkdir -p /opt \\\n && tar -xzf yarn-v$YARN_VERSION.tar.gz -C /opt/ \\\n && ln -s /opt/yarn-v$YARN_VERSION/bin/yarn /usr/local/bin/yarn \\\n && ln -s /opt/yarn-v$YARN_VERSION/bin/yarnpkg /usr/local/bin/yarnpkg \\\n && rm yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz \\\n && apk del .build-deps-yarn\n#   Add Node.js app\nCOPY app /app\n#   Install app packages\nWORKDIR /app\nRUN yarn\n#   Build app packages\nRUN yarn build\n#   Install Bash Shell\nRUN apk add bash=5.2.15-r0 --update\n#   Clean up\nRUN rm -rf /var/cache/apk/*\n#   Add a startup script\nCOPY ./start.sh /start.sh\nRUN chmod 755 /start.sh\n#   Expose Nginx port\nEXPOSE 8080/tcp\n#   Run the startup script\nWORKDIR /\nCMD [\"/start.sh\"]\nRUN addgroup -S docker-user ; adduser -S -G docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Copyright 2019 Finiz Open Source Software\n#  Licensed under the Apache License, Version 2.0 (the \"License\");\n#  you may not use this file except in compliance with the License.\n#  You may obtain a copy of the License at\n#      http://www.apache.org/licenses/LICENSE-2.0\n#  Unless required by applicable law or agreed to in writing, software\n#  distributed under the License is distributed on an \"AS IS\" BASIS,\n#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#  See the License for the specific language governing permissions and\n#  limitations under the License.\n#  From Alpine official image\nFROM alpine:latest\n#  Maintainer\nLABEL maintainer=\"Finiz Open Source Software <developer@finiz.in.th>\"\n#  Update apk repositories to be latest\nRUN apk update\n#  Install git\nRUN apk add git\n#  Install and config Supervisor\nRUN apk add python py2-pip\nRUN pip install wheel\nRUN pip install supervisor supervisor-stdout\nADD ./supervisord.conf /etc/supervisord.conf\nADD ./supervisord-dev.conf /etc/supervisord-dev.conf\n#  Avoid ERROR: invoke-rc.d: policy-rc.d denied execution of start.\nRUN echo \"#!/bin/sh\\nexit 0\" > /usr/sbin/policy-rc.d\n#  Install Nginx\nRUN apk add nginx\n#  Override Nginx's default config\nRUN rm -rf /etc/nginx/conf.d/default.conf\nADD nginx/default.conf /etc/nginx/conf.d/default.conf\n#  Build Node.js 10.15.x\nENV NODE_VERSION=\"10.15.1\"\nRUN addgroup -g 1000 node \\\n && adduser -u 1000 -G node -s /bin/sh -D node \\\n && apk add --no-cache libstdc++ \\\n && apk add --no-cache --virtual .build-deps binutils-gold curl g++ gcc gnupg libgcc linux-headers make python \\\n && for key in 94AE36675C464D64BAFA68DD7434390BDBE9B9C5 FD3A5288F042B6850C66B31F09FE44734EB7990E 71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 DD8F2338BAE7501E3DD5AC78C273792F7D83545D C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 B9AE9905FFD7803F25714661B63B535A4C206CA9 77984A986EBC2AA786BC0F66B01FBB92821C587A 8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600 4ED778F539E3634C779C87C6D7062848A1AB005C A48C2BEE680E841632CD4E44F07496B3EB3C1762 B9E2F5981AA6E0CD28160D9FF13993A75599653C; do gpg --batch --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys \"$key\" || gpg --batch --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys \"$key\" || gpg --batch --keyserver hkp://pgp.mit.edu:80 --recv-keys \"$key\" ; done \\\n && curl -fsSLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION.tar.xz\" \\\n && curl -fsSLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\" \\\n && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc \\\n && grep \" node-v$NODE_VERSION.tar.xz$\" SHASUMS256.txt | sha256sum -c - \\\n && tar -xf \"node-v$NODE_VERSION.tar.xz\" \\\n && cd \"node-v$NODE_VERSION\" \\\n && ./configure \\\n && make -j$( getconf _NPROCESSORS_ONLN ;) \\\n && make install \\\n && apk del .build-deps \\\n && cd .. \\\n && rm -Rf \"node-v$NODE_VERSION\" \\\n && rm \"node-v$NODE_VERSION.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt\n#  Build Yarn Package Manager 1.13.x\nENV YARN_VERSION=\"1.13.0\"\nRUN apk add --no-cache --virtual .build-deps-yarn curl gnupg tar \\\n && for key in 6A010C5166006599AA17F08146C2130DFD2497F5; do gpg --batch --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys \"$key\" || gpg --batch --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys \"$key\" || gpg --batch --keyserver hkp://pgp.mit.edu:80 --recv-keys \"$key\" ; done \\\n && curl -fsSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz\" \\\n && curl -fsSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz.asc\" \\\n && gpg --batch --verify yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz \\\n && mkdir -p /opt \\\n && tar -xzf yarn-v$YARN_VERSION.tar.gz -C /opt/ \\\n && ln -s /opt/yarn-v$YARN_VERSION/bin/yarn /usr/local/bin/yarn \\\n && ln -s /opt/yarn-v$YARN_VERSION/bin/yarnpkg /usr/local/bin/yarnpkg \\\n && rm yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz \\\n && apk del .build-deps-yarn\n#  Add Node.js app\nCOPY app /app\n#  Install app packages\nWORKDIR /app\nRUN yarn\n#  Build app packages\nRUN yarn build\n#  Install Bash Shell\nRUN apk add --update bash\n#  Clean up\nRUN rm -rf /var/cache/apk/*\n#  Add a startup script\nADD ./start.sh /start.sh\nRUN chmod 755 /start.sh\n#  Expose Nginx port\nEXPOSE 8080/tcp\n#  Run the startup script\nWORKDIR /\nCMD [\"/start.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"af604624595a6998b34d13c2f8217904","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Copyright 2019 Finiz Open Source Software\n#   Licensed under the Apache License, Version 2.0 (the \"License\");\n#   you may not use this file except in compliance with the License.\n#   You may obtain a copy of the License at\n#       http://www.apache.org/licenses/LICENSE-2.0\n#   Unless required by applicable law or agreed to in writing, software\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#   See the License for the specific language governing permissions and\n#   limitations under the License.\n#   From Alpine official image\nFROM alpine:latest\n#   Maintainer\nLABEL maintainer=\"Finiz Open Source Software <developer@finiz.in.th>\"\n#   Update apk repositories to be latest\nRUN apk update\n#   Install git\nRUN apk add git\n#   Install and config Supervisor\nRUN apk add python py2-pip\nRUN pip install wheel\nRUN pip install supervisor supervisor-stdout\nADD ./supervisord.conf /etc/supervisord.conf\nADD ./supervisord-dev.conf /etc/supervisord-dev.conf\n#   Avoid ERROR: invoke-rc.d: policy-rc.d denied execution of start.\nRUN echo \"#!/bin/sh\\nexit 0\" > /usr/sbin/policy-rc.d\n#   Install Nginx\nRUN apk add nginx\n#   Override Nginx's default config\nRUN rm -rf /etc/nginx/conf.d/default.conf\nADD nginx/default.conf /etc/nginx/conf.d/default.conf\n#   Build Node.js 10.15.x\nENV NODE_VERSION=\"10.15.1\"\nRUN addgroup -g 1000 node \\\n && adduser -u 1000 -G node -s /bin/sh -D node \\\n && apk add --no-cache libstdc++ \\\n && apk add --no-cache --virtual .build-deps binutils-gold curl g++ gcc gnupg libgcc linux-headers make python \\\n && for key in 94AE36675C464D64BAFA68DD7434390BDBE9B9C5 FD3A5288F042B6850C66B31F09FE44734EB7990E 71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 DD8F2338BAE7501E3DD5AC78C273792F7D83545D C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 B9AE9905FFD7803F25714661B63B535A4C206CA9 77984A986EBC2AA786BC0F66B01FBB92821C587A 8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600 4ED778F539E3634C779C87C6D7062848A1AB005C A48C2BEE680E841632CD4E44F07496B3EB3C1762 B9E2F5981AA6E0CD28160D9FF13993A75599653C; do gpg --batch --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys \"$key\" || gpg --batch --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys \"$key\" || gpg --batch --keyserver hkp://pgp.mit.edu:80 --recv-keys \"$key\" ; done \\\n && curl -fsSLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION.tar.xz\" \\\n && curl -fsSLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\" \\\n && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc \\\n && grep \" node-v$NODE_VERSION.tar.xz$\" SHASUMS256.txt | sha256sum -c - \\\n && tar -xf \"node-v$NODE_VERSION.tar.xz\" \\\n && cd \"node-v$NODE_VERSION\" \\\n && ./configure \\\n && make -j$( getconf _NPROCESSORS_ONLN ;) \\\n && make install \\\n && apk del .build-deps \\\n && cd .. \\\n && rm -Rf \"node-v$NODE_VERSION\" \\\n && rm \"node-v$NODE_VERSION.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt\n#   Build Yarn Package Manager 1.13.x\nENV YARN_VERSION=\"1.13.0\"\nRUN apk add --no-cache --virtual .build-deps-yarn curl gnupg tar \\\n && for key in 6A010C5166006599AA17F08146C2130DFD2497F5; do gpg --batch --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys \"$key\" || gpg --batch --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys \"$key\" || gpg --batch --keyserver hkp://pgp.mit.edu:80 --recv-keys \"$key\" ; done \\\n && curl -fsSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz\" \\\n && curl -fsSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz.asc\" \\\n && gpg --batch --verify yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz \\\n && mkdir -p /opt \\\n && tar -xzf yarn-v$YARN_VERSION.tar.gz -C /opt/ \\\n && ln -s /opt/yarn-v$YARN_VERSION/bin/yarn /usr/local/bin/yarn \\\n && ln -s /opt/yarn-v$YARN_VERSION/bin/yarnpkg /usr/local/bin/yarnpkg \\\n && rm yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz \\\n && apk del .build-deps-yarn\n#   Add Node.js app\nCOPY app /app\n#   Install app packages\nWORKDIR /app\nRUN yarn\n#   Build app packages\nRUN yarn build\n#   Install Bash Shell\nRUN apk add --update bash\n#   Clean up\nRUN rm -rf /var/cache/apk/*\n#   Add a startup script\nADD ./start.sh /start.sh\nRUN chmod 755 /start.sh\n#   Expose Nginx port\nEXPOSE 8080/tcp\n#   Run the startup script\nWORKDIR /\nCMD [\"/start.sh\"]\n","originalDockerfileUglifiedHash":"bf0adbfac57a9be449878710ab7cd3cb","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/ac703cb135bf76a8bc160f09fed49533dcbaf490.dockerfile"}