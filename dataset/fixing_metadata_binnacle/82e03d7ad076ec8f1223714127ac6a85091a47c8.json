{"seed":1546187818,"processedDockerfileHash":"c9e613c107f8c4264aee2a767251bfc5","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM nvidia/cuda:9.1-base\nLABEL maintainer=\"Sebastian Ramirez <tiangolo@gmail.com>\"\n#   Install buildpack-deps:latest with its base image parts, as it is the base for official Python\n#   buildpack-deps:curl https://github.com/docker-library/buildpack-deps/blob/master/stretch/curl/Dockerfile\nRUN apt-get update \\\n && apt-get install --no-install-recommends ca-certificates curl netbase wget -y \\\n && rm -rf /var/lib/apt/lists/*\nRUN set -ex ; if ! command -v gpg > /dev/null; then apt-get update ;apt-get install --no-install-recommends gnupg dirmngr -y ;rm -rf /var/lib/apt/lists/* ; fi\n#   End buildpack-deps:curl\n#   buildpack-deps:scm https://github.com/docker-library/buildpack-deps/blob/master/stretch/scm/Dockerfile\n#   procps is very common in build systems, and is a reasonably small package\nRUN apt-get update \\\n && apt-get install --no-install-recommends bzr git mercurial openssh-client subversion procps -y \\\n && rm -rf /var/lib/apt/lists/*\n#   End buildpack-deps:scm\n#   buildpack-deps:latest https://github.com/docker-library/buildpack-deps/blob/master/stretch/Dockerfile\nRUN set -ex ; apt-get update ; apt-get install --no-install-recommends autoconf automake bzip2 dpkg-dev file g++ gcc imagemagick libbz2-dev libc6-dev libcurl4-openssl-dev libdb-dev libevent-dev libffi-dev libgdbm-dev libgeoip-dev libglib2.0-dev libgmp-dev libjpeg-dev libkrb5-dev liblzma-dev libmagickcore-dev libmagickwand-dev libncurses5-dev libncursesw5-dev libpng-dev libpq-dev libreadline-dev libsqlite3-dev libssl-dev libtool libwebp-dev libxml2-dev libxslt-dev libyaml-dev make patch unzip xz-utils zlib1g-dev $( if apt-cache show 'default-libmysqlclient-dev' 2> /dev/null | grep -q '^Version:' ; then echo 'default-libmysqlclient-dev' ; else echo 'libmysqlclient-dev' ; fi ;) -y ; rm -rf /var/lib/apt/lists/*\n#   End buildpack-deps:latest\nENV PYTHON_VERSION=\"3.7\"\n#   Conda, fragments from: https://github.com/ContinuumIO/docker-images/blob/master/miniconda3/Dockerfile\n#   Explicit install of Python 3.7 with:\n#   /opt/conda/bin/conda install -y python=$PYTHON_VERSION && \\\nENV LANG=\"C.UTF-8\" \\\n    LC_ALL=\"C.UTF-8\"\nENV PATH=\"/opt/conda/bin:$PATH\"\nRUN apt-get update --fix-missing \\\n && apt-get install --no-install-recommends wget bzip2 ca-certificates curl git -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\nRUN wget --quiet https://repo.anaconda.com/miniconda/Miniconda3-4.5.12-Linux-x86_64.sh -O ~/miniconda.sh \\\n && /bin/bash ~/miniconda.sh -b -p /opt/conda \\\n && rm ~/miniconda.sh \\\n && /opt/conda/bin/conda install -y python=$PYTHON_VERSION \\\n && /opt/conda/bin/conda clean -tipsy \\\n && ln -s /opt/conda/etc/profile.d/conda.sh /etc/profile.d/conda.sh \\\n && echo \". /opt/conda/etc/profile.d/conda.sh\" >> ~/.bashrc \\\n && echo \"conda activate base\" >> ~/.bashrc\n#   End Conda\n#   Tini: https://github.com/krallin/tini\nENV TINI_VERSION=\"v0.18.0\"\nRUN which wget &> /dev/null || apt-get install --no-install-recommends wget=1.20.3 ; wget --no-verbose --output-document /tini https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini\nRUN chmod +x /tini\nENTRYPOINT [\"/tini\", \"--\"]\n#   End Tini\nCOPY ./start.sh /start.sh\nRUN chmod +x /start.sh\nCMD [\"/start.sh\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM nvidia/cuda:9.1-base\nLABEL maintainer=\"Sebastian Ramirez <tiangolo@gmail.com>\"\n#  Install buildpack-deps:latest with its base image parts, as it is the base for official Python\n#  buildpack-deps:curl https://github.com/docker-library/buildpack-deps/blob/master/stretch/curl/Dockerfile\nRUN apt-get update \\\n && apt-get install --no-install-recommends ca-certificates curl netbase wget -y \\\n && rm -rf /var/lib/apt/lists/*\nRUN set -ex ; if ! command -v gpg > /dev/null; then apt-get update ;apt-get install --no-install-recommends gnupg dirmngr -y ;rm -rf /var/lib/apt/lists/* ; fi\n#  End buildpack-deps:curl\n#  buildpack-deps:scm https://github.com/docker-library/buildpack-deps/blob/master/stretch/scm/Dockerfile\n#  procps is very common in build systems, and is a reasonably small package\nRUN apt-get update \\\n && apt-get install --no-install-recommends bzr git mercurial openssh-client subversion procps -y \\\n && rm -rf /var/lib/apt/lists/*\n#  End buildpack-deps:scm\n#  buildpack-deps:latest https://github.com/docker-library/buildpack-deps/blob/master/stretch/Dockerfile\nRUN set -ex ; apt-get update ; apt-get install --no-install-recommends autoconf automake bzip2 dpkg-dev file g++ gcc imagemagick libbz2-dev libc6-dev libcurl4-openssl-dev libdb-dev libevent-dev libffi-dev libgdbm-dev libgeoip-dev libglib2.0-dev libgmp-dev libjpeg-dev libkrb5-dev liblzma-dev libmagickcore-dev libmagickwand-dev libncurses5-dev libncursesw5-dev libpng-dev libpq-dev libreadline-dev libsqlite3-dev libssl-dev libtool libwebp-dev libxml2-dev libxslt-dev libyaml-dev make patch unzip xz-utils zlib1g-dev $( if apt-cache show 'default-libmysqlclient-dev' 2> /dev/null | grep -q '^Version:' ; then echo 'default-libmysqlclient-dev' ; else echo 'libmysqlclient-dev' ; fi ;) -y ; rm -rf /var/lib/apt/lists/*\n#  End buildpack-deps:latest\nENV PYTHON_VERSION=\"3.7\"\n#  Conda, fragments from: https://github.com/ContinuumIO/docker-images/blob/master/miniconda3/Dockerfile\n#  Explicit install of Python 3.7 with:\n#  /opt/conda/bin/conda install -y python=$PYTHON_VERSION && \\\nENV LANG=\"C.UTF-8\" \\\n    LC_ALL=\"C.UTF-8\"\nENV PATH=\"/opt/conda/bin:$PATH\"\nRUN apt-get update --fix-missing \\\n && apt-get install wget bzip2 ca-certificates curl git -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\nRUN wget --quiet https://repo.anaconda.com/miniconda/Miniconda3-4.5.12-Linux-x86_64.sh -O ~/miniconda.sh \\\n && /bin/bash ~/miniconda.sh -b -p /opt/conda \\\n && rm ~/miniconda.sh \\\n && /opt/conda/bin/conda install -y python=$PYTHON_VERSION \\\n && /opt/conda/bin/conda clean -tipsy \\\n && ln -s /opt/conda/etc/profile.d/conda.sh /etc/profile.d/conda.sh \\\n && echo \". /opt/conda/etc/profile.d/conda.sh\" >> ~/.bashrc \\\n && echo \"conda activate base\" >> ~/.bashrc\n#  End Conda\n#  Tini: https://github.com/krallin/tini\nENV TINI_VERSION=\"v0.18.0\"\nADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini /tini\nRUN chmod +x /tini\nENTRYPOINT [\"/tini\", \"--\"]\n#  End Tini\nCOPY ./start.sh /start.sh\nRUN chmod +x /start.sh\nCMD [\"/start.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"ee54a1096fc7f96ca3bcd12d5c28f42a","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM nvidia/cuda:9.1-base\nLABEL maintainer=\"Sebastian Ramirez <tiangolo@gmail.com>\"\n#   Install buildpack-deps:latest with its base image parts, as it is the base for official Python\n#   buildpack-deps:curl https://github.com/docker-library/buildpack-deps/blob/master/stretch/curl/Dockerfile\nRUN apt-get update \\\n && apt-get install --no-install-recommends ca-certificates curl netbase wget -y \\\n && rm -rf /var/lib/apt/lists/*\nRUN set -ex ; if ! command -v gpg > /dev/null; then apt-get update ;apt-get install --no-install-recommends gnupg dirmngr -y ;rm -rf /var/lib/apt/lists/* ; fi\n#   End buildpack-deps:curl\n#   buildpack-deps:scm https://github.com/docker-library/buildpack-deps/blob/master/stretch/scm/Dockerfile\n#   procps is very common in build systems, and is a reasonably small package\nRUN apt-get update \\\n && apt-get install --no-install-recommends bzr git mercurial openssh-client subversion procps -y \\\n && rm -rf /var/lib/apt/lists/*\n#   End buildpack-deps:scm\n#   buildpack-deps:latest https://github.com/docker-library/buildpack-deps/blob/master/stretch/Dockerfile\nRUN set -ex ; apt-get update ; apt-get install --no-install-recommends autoconf automake bzip2 dpkg-dev file g++ gcc imagemagick libbz2-dev libc6-dev libcurl4-openssl-dev libdb-dev libevent-dev libffi-dev libgdbm-dev libgeoip-dev libglib2.0-dev libgmp-dev libjpeg-dev libkrb5-dev liblzma-dev libmagickcore-dev libmagickwand-dev libncurses5-dev libncursesw5-dev libpng-dev libpq-dev libreadline-dev libsqlite3-dev libssl-dev libtool libwebp-dev libxml2-dev libxslt-dev libyaml-dev make patch unzip xz-utils zlib1g-dev $( if apt-cache show 'default-libmysqlclient-dev' 2> /dev/null | grep -q '^Version:' ; then echo 'default-libmysqlclient-dev' ; else echo 'libmysqlclient-dev' ; fi ;) -y ; rm -rf /var/lib/apt/lists/*\n#   End buildpack-deps:latest\nENV PYTHON_VERSION=\"3.7\"\n#   Conda, fragments from: https://github.com/ContinuumIO/docker-images/blob/master/miniconda3/Dockerfile\n#   Explicit install of Python 3.7 with:\n#   /opt/conda/bin/conda install -y python=$PYTHON_VERSION && \\\nENV LANG=\"C.UTF-8\" \\\n    LC_ALL=\"C.UTF-8\"\nENV PATH=\"/opt/conda/bin:$PATH\"\nRUN apt-get update --fix-missing \\\n && apt-get install wget bzip2 ca-certificates curl git -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\nRUN wget --quiet https://repo.anaconda.com/miniconda/Miniconda3-4.5.12-Linux-x86_64.sh -O ~/miniconda.sh \\\n && /bin/bash ~/miniconda.sh -b -p /opt/conda \\\n && rm ~/miniconda.sh \\\n && /opt/conda/bin/conda install -y python=$PYTHON_VERSION \\\n && /opt/conda/bin/conda clean -tipsy \\\n && ln -s /opt/conda/etc/profile.d/conda.sh /etc/profile.d/conda.sh \\\n && echo \". /opt/conda/etc/profile.d/conda.sh\" >> ~/.bashrc \\\n && echo \"conda activate base\" >> ~/.bashrc\n#   End Conda\n#   Tini: https://github.com/krallin/tini\nENV TINI_VERSION=\"v0.18.0\"\nADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini /tini\nRUN chmod +x /tini\nENTRYPOINT [\"/tini\", \"--\"]\n#   End Tini\nCOPY ./start.sh /start.sh\nRUN chmod +x /start.sh\nCMD [\"/start.sh\"]\n","originalDockerfileUglifiedHash":"22ba99bcb7bba7457b19c0338a1b85f6","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/82e03d7ad076ec8f1223714127ac6a85091a47c8.dockerfile"}