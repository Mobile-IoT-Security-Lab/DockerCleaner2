{"seed":733543404,"processedDockerfileHash":"1f09f6d73afe2074c80dad396abec0b3","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   1 \"Dockerfile.in\"\n#   1 \"<built-in>\"\n#   1 \"<command-line>\"\n#   31 \"<command-line>\"\n#   1 \"/usr/include/stdc-predef.h\" 1 3 4\n#   32 \"<command-line>\" 2\n#   1 \"Dockerfile.in\"\nFROM php:5.5-fpm-alpine\n#   1 \"../maintainer.docker\" 1\nMAINTAINER \"daper <david@daper.email>\"\n#   5 \"Dockerfile.in\" 2\n#   1 \"../install-packages.docker\" 1\nRUN printf \"\\n%s\\n%s\" \"@edge http://dl-cdn.alpinelinux.org/alpine/edge/main\" \"@testing http://dl-cdn.alpinelinux.org/alpine/edge/testing\" >> /etc/apk/repositories \\\n && apk --update upgrade \\\n && apk add autoconf=2.71-r1 automake=1.16.5-r1 make=4.3-r1 gcc=12.2.1_git20220924-r4 g++=12.2.1_git20220924-r4 libtool=2.4.7-r1 pkgconfig libmcrypt-dev=2.5.8-r10 re2c=3.0-r0 libressl@edge libressl-dev@edge git=2.38.4-r1 zlib-dev=1.2.13-r0 xdg-utils=1.1.3-r4 libpng-dev=1.6.38-r0 freetype-dev=2.12.1-r0 libjpeg-turbo-dev=2.1.4-r0 openssh-client libxslt-dev=1.1.37-r1 ca-certificates=20220614-r4 gmp-dev=6.2.1-r2 \\\n && update-ca-certificates\n#   7 \"Dockerfile.in\" 2\n#   1 \"../ext/common.docker\" 1\nRUN docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \\\n && docker-php-ext-install -j$( grep -c ^processor /proc/cpuinfo 2> /dev/null || 1 ;) gd curl mcrypt mysqli pdo_mysql bcmath zip xml xmlreader xmlwriter simplexml soap json iconv fileinfo dom xsl pcntl pdo sockets gmp\n#   9 \"Dockerfile.in\" 2\n#   1 \"../ext/amqp.docker\" 1\nRUN apk add rabbitmq-c@testing rabbitmq-c-dev@testing \\\n && pecl install amqp \\\n && docker-php-ext-enable amqp\n#   10 \"Dockerfile.in\" 2\n#   1 \"../ext/raphf.docker\" 1\nRUN pecl install raphf-1.1.2 \\\n && docker-php-ext-enable raphf\n#   11 \"Dockerfile.in\" 2\n#   1 \"../ext/memcached.docker\" 1\n#   14 \"../ext/memcached.docker\"\nRUN apk add cyrus-sasl-dev=2.1.28-r3 libmemcached-dev=1.0.18-r5 \\\n && git clone \"https://github.com/php-memcached-dev/php-memcached.git\" \\\n && cd php-memcached \\\n && phpize \\\n && ./configure --disable-memcached-sasl \\\n && make \\\n && make install \\\n && docker-php-ext-enable memcached\n#   12 \"Dockerfile.in\" 2\n#   1 \"../ext/mongodb.docker\" 1\nRUN pecl install mongodb \\\n && docker-php-ext-enable mongodb\n#   13 \"Dockerfile.in\" 2\n#   1 \"../ext/apcu.docker\" 1\nRUN pecl install apcu-4.0.11 \\\n && docker-php-ext-enable apcu\n#   14 \"Dockerfile.in\" 2\n#   1 \"../ext/xdebug.docker\" 1\n#   10 \"../ext/xdebug.docker\"\nRUN pecl install xdebug \\\n && docker-php-ext-enable xdebug\n#   15 \"Dockerfile.in\" 2\n#   1 \"../ext/ssh2.docker\" 1\n#   11 \"../ext/ssh2.docker\"\nRUN apk add libssh2-dev@edge \\\n && pecl install ssh2 \\\n && docker-php-ext-enable ssh2\n#   16 \"Dockerfile.in\" 2\n#   1 \"../ext/redis.docker\" 1\nRUN pecl install redis-2.2.8 \\\n && docker-php-ext-enable redis\n#   17 \"Dockerfile.in\" 2\n#   1 \"../composer.docker\" 1\nRUN curl -sS \"https://getcomposer.org/installer\" | php\nRUN mv composer.phar /usr/local/bin/composer\n#   19 \"Dockerfile.in\" 2\n#   1 \"../conf.docker\" 1\nCOPY php.ini /usr/local/etc/php/conf.d/custom.ini\nCOPY fpm.conf /usr/local/etc/php-fpm.d/zzz-fpm.conf\nWORKDIR /var/www\n#   21 \"Dockerfile.in\" 2\n#   1 \"../clean.docker\" 1\nRUN rm -rf /var/cache/apk \\\n && mkdir -p /var/cache/apk\n#   22 \"Dockerfile.in\" 2\nRUN addgroup -S docker-user ; adduser -S -G docker-user docker-user\nUSER docker-user\nHEALTHCHECK CMD curl --fail http://127.0.0.1:80 || exit 1\n","originalDockerfile":"#  1 \"Dockerfile.in\"\n#  1 \"<built-in>\"\n#  1 \"<command-line>\"\n#  31 \"<command-line>\"\n#  1 \"/usr/include/stdc-predef.h\" 1 3 4\n#  32 \"<command-line>\" 2\n#  1 \"Dockerfile.in\"\nFROM php:5.5-fpm-alpine\n#  1 \"../maintainer.docker\" 1\nMAINTAINER \"daper <david@daper.email>\"\n#  5 \"Dockerfile.in\" 2\n#  1 \"../install-packages.docker\" 1\nRUN printf \"\\n%s\\n%s\" \"@edge http://dl-cdn.alpinelinux.org/alpine/edge/main\" \"@testing http://dl-cdn.alpinelinux.org/alpine/edge/testing\" >> /etc/apk/repositories \\\n && apk --update upgrade \\\n && apk add autoconf automake make gcc g++ libtool pkgconfig libmcrypt-dev re2c libressl@edge libressl-dev@edge git zlib-dev xdg-utils libpng-dev freetype-dev libjpeg-turbo-dev openssh-client libxslt-dev ca-certificates gmp-dev \\\n && update-ca-certificates\n#  7 \"Dockerfile.in\" 2\n#  1 \"../ext/common.docker\" 1\nRUN docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \\\n && docker-php-ext-install -j$( grep -c ^processor /proc/cpuinfo 2> /dev/null || 1 ;) gd curl mcrypt mysqli pdo_mysql bcmath zip xml xmlreader xmlwriter simplexml soap json iconv fileinfo dom xsl pcntl pdo sockets gmp\n#  9 \"Dockerfile.in\" 2\n#  1 \"../ext/amqp.docker\" 1\nRUN apk add rabbitmq-c@testing rabbitmq-c-dev@testing \\\n && pecl install amqp \\\n && docker-php-ext-enable amqp\n#  10 \"Dockerfile.in\" 2\n#  1 \"../ext/raphf.docker\" 1\nRUN pecl install raphf-1.1.2 \\\n && docker-php-ext-enable raphf\n#  11 \"Dockerfile.in\" 2\n#  1 \"../ext/memcached.docker\" 1\n#  14 \"../ext/memcached.docker\"\nRUN apk add cyrus-sasl-dev libmemcached-dev \\\n && git clone \"https://github.com/php-memcached-dev/php-memcached.git\" \\\n && cd php-memcached \\\n && phpize \\\n && ./configure --disable-memcached-sasl \\\n && make \\\n && make install \\\n && docker-php-ext-enable memcached\n#  12 \"Dockerfile.in\" 2\n#  1 \"../ext/mongodb.docker\" 1\nRUN pecl install mongodb \\\n && docker-php-ext-enable mongodb\n#  13 \"Dockerfile.in\" 2\n#  1 \"../ext/apcu.docker\" 1\nRUN pecl install apcu-4.0.11 \\\n && docker-php-ext-enable apcu\n#  14 \"Dockerfile.in\" 2\n#  1 \"../ext/xdebug.docker\" 1\n#  10 \"../ext/xdebug.docker\"\nRUN pecl install xdebug \\\n && docker-php-ext-enable xdebug\n#  15 \"Dockerfile.in\" 2\n#  1 \"../ext/ssh2.docker\" 1\n#  11 \"../ext/ssh2.docker\"\nRUN apk add libssh2-dev@edge \\\n && pecl install ssh2 \\\n && docker-php-ext-enable ssh2\n#  16 \"Dockerfile.in\" 2\n#  1 \"../ext/redis.docker\" 1\nRUN pecl install redis-2.2.8 \\\n && docker-php-ext-enable redis\n#  17 \"Dockerfile.in\" 2\n#  1 \"../composer.docker\" 1\nRUN curl -sS \"https://getcomposer.org/installer\" | php\nRUN mv composer.phar /usr/local/bin/composer\n#  19 \"Dockerfile.in\" 2\n#  1 \"../conf.docker\" 1\nCOPY php.ini /usr/local/etc/php/conf.d/custom.ini\nCOPY fpm.conf /usr/local/etc/php-fpm.d/zzz-fpm.conf\nWORKDIR /var/www\n#  21 \"Dockerfile.in\" 2\n#  1 \"../clean.docker\" 1\nRUN rm -rf /var/cache/apk \\\n && mkdir -p /var/cache/apk\n#  22 \"Dockerfile.in\" 2\n","injectedSmells":[],"originalDockerfileHash":"78b9259321437a155903821a2bb8fbec","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   1 \"Dockerfile.in\"\n#   1 \"<built-in>\"\n#   1 \"<command-line>\"\n#   31 \"<command-line>\"\n#   1 \"/usr/include/stdc-predef.h\" 1 3 4\n#   32 \"<command-line>\" 2\n#   1 \"Dockerfile.in\"\nFROM php:5.5-fpm-alpine\n#   1 \"../maintainer.docker\" 1\nMAINTAINER \"daper <david@daper.email>\"\n#   5 \"Dockerfile.in\" 2\n#   1 \"../install-packages.docker\" 1\nRUN printf \"\\n%s\\n%s\" \"@edge http://dl-cdn.alpinelinux.org/alpine/edge/main\" \"@testing http://dl-cdn.alpinelinux.org/alpine/edge/testing\" >> /etc/apk/repositories \\\n && apk --update upgrade \\\n && apk add autoconf automake make gcc g++ libtool pkgconfig libmcrypt-dev re2c libressl@edge libressl-dev@edge git zlib-dev xdg-utils libpng-dev freetype-dev libjpeg-turbo-dev openssh-client libxslt-dev ca-certificates gmp-dev \\\n && update-ca-certificates\n#   7 \"Dockerfile.in\" 2\n#   1 \"../ext/common.docker\" 1\nRUN docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \\\n && docker-php-ext-install -j$( grep -c ^processor /proc/cpuinfo 2> /dev/null || 1 ;) gd curl mcrypt mysqli pdo_mysql bcmath zip xml xmlreader xmlwriter simplexml soap json iconv fileinfo dom xsl pcntl pdo sockets gmp\n#   9 \"Dockerfile.in\" 2\n#   1 \"../ext/amqp.docker\" 1\nRUN apk add rabbitmq-c@testing rabbitmq-c-dev@testing \\\n && pecl install amqp \\\n && docker-php-ext-enable amqp\n#   10 \"Dockerfile.in\" 2\n#   1 \"../ext/raphf.docker\" 1\nRUN pecl install raphf-1.1.2 \\\n && docker-php-ext-enable raphf\n#   11 \"Dockerfile.in\" 2\n#   1 \"../ext/memcached.docker\" 1\n#   14 \"../ext/memcached.docker\"\nRUN apk add cyrus-sasl-dev libmemcached-dev \\\n && git clone \"https://github.com/php-memcached-dev/php-memcached.git\" \\\n && cd php-memcached \\\n && phpize \\\n && ./configure --disable-memcached-sasl \\\n && make \\\n && make install \\\n && docker-php-ext-enable memcached\n#   12 \"Dockerfile.in\" 2\n#   1 \"../ext/mongodb.docker\" 1\nRUN pecl install mongodb \\\n && docker-php-ext-enable mongodb\n#   13 \"Dockerfile.in\" 2\n#   1 \"../ext/apcu.docker\" 1\nRUN pecl install apcu-4.0.11 \\\n && docker-php-ext-enable apcu\n#   14 \"Dockerfile.in\" 2\n#   1 \"../ext/xdebug.docker\" 1\n#   10 \"../ext/xdebug.docker\"\nRUN pecl install xdebug \\\n && docker-php-ext-enable xdebug\n#   15 \"Dockerfile.in\" 2\n#   1 \"../ext/ssh2.docker\" 1\n#   11 \"../ext/ssh2.docker\"\nRUN apk add libssh2-dev@edge \\\n && pecl install ssh2 \\\n && docker-php-ext-enable ssh2\n#   16 \"Dockerfile.in\" 2\n#   1 \"../ext/redis.docker\" 1\nRUN pecl install redis-2.2.8 \\\n && docker-php-ext-enable redis\n#   17 \"Dockerfile.in\" 2\n#   1 \"../composer.docker\" 1\nRUN curl -sS \"https://getcomposer.org/installer\" | php\nRUN mv composer.phar /usr/local/bin/composer\n#   19 \"Dockerfile.in\" 2\n#   1 \"../conf.docker\" 1\nCOPY php.ini /usr/local/etc/php/conf.d/custom.ini\nCOPY fpm.conf /usr/local/etc/php-fpm.d/zzz-fpm.conf\nWORKDIR /var/www\n#   21 \"Dockerfile.in\" 2\n#   1 \"../clean.docker\" 1\nRUN rm -rf /var/cache/apk \\\n && mkdir -p /var/cache/apk\n#   22 \"Dockerfile.in\" 2\n","originalDockerfileUglifiedHash":"5dfadc225703e8f7ad7e89a6f2965d19","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/631ede0c16148a236f9a4c091b7e6860ca7da1f2.dockerfile"}