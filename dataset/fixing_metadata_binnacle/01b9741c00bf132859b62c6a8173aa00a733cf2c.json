{"seed":3718999422,"processedDockerfileHash":"5d79aa959e5e618b16929ec55f9cdb0f","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM gcr.io/google-appengine/debian9:latest\n#   add our user and group first to make sure their IDs get assigned consistently, regardless of whatever dependencies get added\nRUN groupadd -r mysql \\\n && useradd -r -g mysql mysql\n#   add gosu for easy step-down from root\nENV GOSU_VERSION=\"1.10\"\nENV GOSU_GPG=\"B42F6819007F00F88E364FD4036A9C25BF357DD4\"\nRUN set -x \\\n && apt-get update \\\n && apt-get install --no-install-recommends ca-certificates=20230311 wget=1.21.3-1ubuntu1 numactl=2.0.16-1 gnupg=2.2.40-1ubuntu2 dirmngr=2.2.40-1ubuntu2 -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;)\" \\\n && wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;).asc\" \\\n && wget -O /usr/local/src/gosu.tar.gz \"https://github.com/tianon/gosu/archive/$GOSU_VERSION.tar.gz\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && found='' \\\n && for server in pool.sks-keyservers.net na.pool.sks-keyservers.net eu.pool.sks-keyservers.net oc.pool.sks-keyservers.net ha.pool.sks-keyservers.net hkp://p80.pool.sks-keyservers.net:80 hkp://keyserver.ubuntu.com:80 pgp.mit.edu; do gpg --no-tty --keyserver $server --recv-keys $GOSU_GPG \\\n && found=yes \\\n && break ; done ; test -n \"$found\" \\\n && gpg --no-tty --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \\\n && rm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc \\\n && chmod +x /usr/local/bin/gosu \\\n && gosu nobody true \\\n && apt-get purge -y --auto-remove ca-certificates wget\nRUN mkdir /docker-entrypoint-initdb.d\nRUN apt-get update \\\n && apt-get install --no-install-recommends pwgen=2.08-2build1 openssl=3.0.8-1ubuntu1 perl=5.36.0-7 -y \\\n && rm -rf /var/lib/apt/lists/*\nENV MYSQL_GPG=\"A4A9406876FCBD3C456770C88C718D3B5072E1F5\"\nRUN set -ex ; key='A4A9406876FCBD3C456770C88C718D3B5072E1F5' ; export GNUPGHOME=\"$( mktemp -d ;)\" ; found='' \\\n && for server in pool.sks-keyservers.net na.pool.sks-keyservers.net eu.pool.sks-keyservers.net oc.pool.sks-keyservers.net ha.pool.sks-keyservers.net hkp://p80.pool.sks-keyservers.net:80 hkp://keyserver.ubuntu.com:80 pgp.mit.edu; do gpg --no-tty --keyserver $server --recv-keys $MYSQL_GPG \\\n && found=yes \\\n && break ; done ; test -n \"$found\" ; gpg --no-tty --export \"$MYSQL_GPG\" > /etc/apt/trusted.gpg.d/mysql.gpg; rm -rf \"$GNUPGHOME\" ; apt-key list > /dev/null\nENV MYSQL_MAJOR=\"5.7\"\nENV MYSQL_VERSION=\"5.7.26-1debian9\"\nRUN DEBIAN_RELASE=$( cat /etc/*-release | grep PRETTY_NAME | sed 's/.*(//;s/).*//' ;) \\\n && echo \"deb http://repo.mysql.com/apt/debian/ $DEBIAN_RELASE mysql-${MYSQL_MAJOR}\" > /etc/apt/sources.list.d/mysql.list\n#   the \"/var/lib/mysql\" stuff here is because the mysql-server postinst doesn't have an explicit way to disable the mysql_install_db codepath besides having a database already \"configured\" (ie, stuff in /var/lib/mysql/mysql)\n#   also, we set debconf keys to make APT a little quieter\nRUN { echo mysql-community-server mysql-community-server/data-dir select '' ;echo mysql-community-server mysql-community-server/root-pass password '' ;echo mysql-community-server mysql-community-server/re-root-pass password '' ;echo mysql-community-server mysql-community-server/remove-test-db select false ; } | debconf-set-selections \\\n && apt-get update \\\n && apt-get install --no-install-recommends mysql-server=\"${MYSQL_VERSION}\" -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && rm -rf /var/lib/mysql \\\n && mkdir -p /var/lib/mysql /var/run/mysqld \\\n && chown -R mysql:mysql /var/lib/mysql /var/run/mysqld \\\n && chmod 777 /var/run/mysqld\n#   comment out a few problematic configuration values\n#   don't reverse lookup hostnames, they are usually another container\nRUN sed -Ei 's/^(bind-address|log)/#&/' /etc/mysql/mysql.conf.d/mysqld.cnf \\\n && echo '[mysqld]\\nskip-host-cache\\nskip-name-resolve' > /etc/mysql/conf.d/docker.cnf\nVOLUME /var/lib/mysql\nCOPY docker-entrypoint.sh /usr/local/bin/\nRUN ln -s usr/local/bin/docker-entrypoint.sh /entrypoint.sh\nENTRYPOINT [\"docker-entrypoint.sh\"]\nEXPOSE 3306/tcp\nCMD [\"mysqld\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM gcr.io/google-appengine/debian9:latest\n#  add our user and group first to make sure their IDs get assigned consistently, regardless of whatever dependencies get added\nRUN groupadd -r mysql \\\n && useradd -r -g mysql mysql\n#  add gosu for easy step-down from root\nENV GOSU_VERSION=\"1.10\"\nENV GOSU_GPG=\"B42F6819007F00F88E364FD4036A9C25BF357DD4\"\nRUN set -x \\\n && apt-get update \\\n && apt-get install --no-install-recommends ca-certificates wget numactl gnupg dirmngr -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;)\" \\\n && wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;).asc\" \\\n && wget -O /usr/local/src/gosu.tar.gz \"https://github.com/tianon/gosu/archive/$GOSU_VERSION.tar.gz\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && found='' \\\n && for server in pool.sks-keyservers.net na.pool.sks-keyservers.net eu.pool.sks-keyservers.net oc.pool.sks-keyservers.net ha.pool.sks-keyservers.net hkp://p80.pool.sks-keyservers.net:80 hkp://keyserver.ubuntu.com:80 pgp.mit.edu; do gpg --no-tty --keyserver $server --recv-keys $GOSU_GPG \\\n && found=yes \\\n && break ; done ; test -n \"$found\" \\\n && gpg --no-tty --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \\\n && rm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc \\\n && chmod +x /usr/local/bin/gosu \\\n && gosu nobody true \\\n && apt-get purge -y --auto-remove ca-certificates wget\nRUN mkdir /docker-entrypoint-initdb.d\nRUN apt-get update \\\n && apt-get install --no-install-recommends pwgen openssl perl -y \\\n && rm -rf /var/lib/apt/lists/*\nENV MYSQL_GPG=\"A4A9406876FCBD3C456770C88C718D3B5072E1F5\"\nRUN set -ex ; key='A4A9406876FCBD3C456770C88C718D3B5072E1F5' ; export GNUPGHOME=\"$( mktemp -d ;)\" ; found='' \\\n && for server in pool.sks-keyservers.net na.pool.sks-keyservers.net eu.pool.sks-keyservers.net oc.pool.sks-keyservers.net ha.pool.sks-keyservers.net hkp://p80.pool.sks-keyservers.net:80 hkp://keyserver.ubuntu.com:80 pgp.mit.edu; do gpg --no-tty --keyserver $server --recv-keys $MYSQL_GPG \\\n && found=yes \\\n && break ; done ; test -n \"$found\" ; gpg --no-tty --export \"$MYSQL_GPG\" > /etc/apt/trusted.gpg.d/mysql.gpg; rm -rf \"$GNUPGHOME\" ; apt-key list > /dev/null\nENV MYSQL_MAJOR=\"5.7\"\nENV MYSQL_VERSION=\"5.7.26-1debian9\"\nRUN DEBIAN_RELASE=$( cat /etc/*-release | grep PRETTY_NAME | sed 's/.*(//;s/).*//' ;) \\\n && echo \"deb http://repo.mysql.com/apt/debian/ $DEBIAN_RELASE mysql-${MYSQL_MAJOR}\" > /etc/apt/sources.list.d/mysql.list\n#  the \"/var/lib/mysql\" stuff here is because the mysql-server postinst doesn't have an explicit way to disable the mysql_install_db codepath besides having a database already \"configured\" (ie, stuff in /var/lib/mysql/mysql)\n#  also, we set debconf keys to make APT a little quieter\nRUN { echo mysql-community-server mysql-community-server/data-dir select '' ;echo mysql-community-server mysql-community-server/root-pass password '' ;echo mysql-community-server mysql-community-server/re-root-pass password '' ;echo mysql-community-server mysql-community-server/remove-test-db select false ; } | debconf-set-selections \\\n && apt-get update \\\n && apt-get install mysql-server=\"${MYSQL_VERSION}\" -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && rm -rf /var/lib/mysql \\\n && mkdir -p /var/lib/mysql /var/run/mysqld \\\n && chown -R mysql:mysql /var/lib/mysql /var/run/mysqld \\\n && chmod 777 /var/run/mysqld\n#  comment out a few problematic configuration values\n#  don't reverse lookup hostnames, they are usually another container\nRUN sed -Ei 's/^(bind-address|log)/#&/' /etc/mysql/mysql.conf.d/mysqld.cnf \\\n && echo '[mysqld]\\nskip-host-cache\\nskip-name-resolve' > /etc/mysql/conf.d/docker.cnf\nVOLUME /var/lib/mysql\nCOPY docker-entrypoint.sh /usr/local/bin/\nRUN ln -s usr/local/bin/docker-entrypoint.sh /entrypoint.sh\nENTRYPOINT [\"docker-entrypoint.sh\"]\nEXPOSE 3306/tcp\nCMD [\"mysqld\"]\n","injectedSmells":[],"originalDockerfileHash":"894b58237c1b7a58f8dee5f0ddab6d7e","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM gcr.io/google-appengine/debian9:latest\n#   add our user and group first to make sure their IDs get assigned consistently, regardless of whatever dependencies get added\nRUN groupadd -r mysql \\\n && useradd -r -g mysql mysql\n#   add gosu for easy step-down from root\nENV GOSU_VERSION=\"1.10\"\nENV GOSU_GPG=\"B42F6819007F00F88E364FD4036A9C25BF357DD4\"\nRUN set -x \\\n && apt-get update \\\n && apt-get install --no-install-recommends ca-certificates wget numactl gnupg dirmngr -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;)\" \\\n && wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;).asc\" \\\n && wget -O /usr/local/src/gosu.tar.gz \"https://github.com/tianon/gosu/archive/$GOSU_VERSION.tar.gz\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && found='' \\\n && for server in pool.sks-keyservers.net na.pool.sks-keyservers.net eu.pool.sks-keyservers.net oc.pool.sks-keyservers.net ha.pool.sks-keyservers.net hkp://p80.pool.sks-keyservers.net:80 hkp://keyserver.ubuntu.com:80 pgp.mit.edu; do gpg --no-tty --keyserver $server --recv-keys $GOSU_GPG \\\n && found=yes \\\n && break ; done ; test -n \"$found\" \\\n && gpg --no-tty --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \\\n && rm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc \\\n && chmod +x /usr/local/bin/gosu \\\n && gosu nobody true \\\n && apt-get purge -y --auto-remove ca-certificates wget\nRUN mkdir /docker-entrypoint-initdb.d\nRUN apt-get update \\\n && apt-get install --no-install-recommends pwgen openssl perl -y \\\n && rm -rf /var/lib/apt/lists/*\nENV MYSQL_GPG=\"A4A9406876FCBD3C456770C88C718D3B5072E1F5\"\nRUN set -ex ; key='A4A9406876FCBD3C456770C88C718D3B5072E1F5' ; export GNUPGHOME=\"$( mktemp -d ;)\" ; found='' \\\n && for server in pool.sks-keyservers.net na.pool.sks-keyservers.net eu.pool.sks-keyservers.net oc.pool.sks-keyservers.net ha.pool.sks-keyservers.net hkp://p80.pool.sks-keyservers.net:80 hkp://keyserver.ubuntu.com:80 pgp.mit.edu; do gpg --no-tty --keyserver $server --recv-keys $MYSQL_GPG \\\n && found=yes \\\n && break ; done ; test -n \"$found\" ; gpg --no-tty --export \"$MYSQL_GPG\" > /etc/apt/trusted.gpg.d/mysql.gpg; rm -rf \"$GNUPGHOME\" ; apt-key list > /dev/null\nENV MYSQL_MAJOR=\"5.7\"\nENV MYSQL_VERSION=\"5.7.26-1debian9\"\nRUN DEBIAN_RELASE=$( cat /etc/*-release | grep PRETTY_NAME | sed 's/.*(//;s/).*//' ;) \\\n && echo \"deb http://repo.mysql.com/apt/debian/ $DEBIAN_RELASE mysql-${MYSQL_MAJOR}\" > /etc/apt/sources.list.d/mysql.list\n#   the \"/var/lib/mysql\" stuff here is because the mysql-server postinst doesn't have an explicit way to disable the mysql_install_db codepath besides having a database already \"configured\" (ie, stuff in /var/lib/mysql/mysql)\n#   also, we set debconf keys to make APT a little quieter\nRUN { echo mysql-community-server mysql-community-server/data-dir select '' ;echo mysql-community-server mysql-community-server/root-pass password '' ;echo mysql-community-server mysql-community-server/re-root-pass password '' ;echo mysql-community-server mysql-community-server/remove-test-db select false ; } | debconf-set-selections \\\n && apt-get update \\\n && apt-get install mysql-server=\"${MYSQL_VERSION}\" -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && rm -rf /var/lib/mysql \\\n && mkdir -p /var/lib/mysql /var/run/mysqld \\\n && chown -R mysql:mysql /var/lib/mysql /var/run/mysqld \\\n && chmod 777 /var/run/mysqld\n#   comment out a few problematic configuration values\n#   don't reverse lookup hostnames, they are usually another container\nRUN sed -Ei 's/^(bind-address|log)/#&/' /etc/mysql/mysql.conf.d/mysqld.cnf \\\n && echo '[mysqld]\\nskip-host-cache\\nskip-name-resolve' > /etc/mysql/conf.d/docker.cnf\nVOLUME /var/lib/mysql\nCOPY docker-entrypoint.sh /usr/local/bin/\nRUN ln -s usr/local/bin/docker-entrypoint.sh /entrypoint.sh\nENTRYPOINT [\"docker-entrypoint.sh\"]\nEXPOSE 3306/tcp\nCMD [\"mysqld\"]\n","originalDockerfileUglifiedHash":"6682d60c930e2c2d12312eda766269e1","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/01b9741c00bf132859b62c6a8173aa00a733cf2c.dockerfile"}