{"seed":2958302191,"processedDockerfileHash":"220abfa4e09a3c79045ac8d91de2bdef","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM maven:3.6.0-jdk-8-alpine\n#  ####ELASTICSEARCH#####\n#   ensure elasticsearch user exists\nRUN addgroup -S elasticsearch \\\n && adduser -S -G elasticsearch elasticsearch\n#   grab su-exec for easy step-down from root\n#   and bash for \"bin/elasticsearch\" among others\nRUN apk add bash procps 'su-exec>=0.2' --no-cache\n#   https://artifacts.elastic.co/GPG-KEY-elasticsearch\nENV GPG_KEY=\"46095ACC8548582C1A2699A9D27D666CD88E42B4\"\nWORKDIR /usr/share/elasticsearch\nENV PATH=\"/usr/share/elasticsearch/bin:$PATH\"\nENV ELASTICSEARCH_VERSION=\"5.6.14\"\nENV ELASTICSEARCH_TARBALL=\"https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-5.6.14.tar.gz\" \\\n    ELASTICSEARCH_TARBALL_ASC=\"https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-5.6.14.tar.gz.asc\" \\\n    ELASTICSEARCH_TARBALL_SHA1=\"392e98ebd549aba91f3041c59fe0d7be1abbd229\"\nRUN set -ex ; apk add ca-certificates gnupg openssl tar --no-cache --virtual .fetch-deps ; wget -O elasticsearch.tar.gz \"$ELASTICSEARCH_TARBALL\" ; if [ \"$ELASTICSEARCH_TARBALL_SHA1\" ] ; then echo \"$ELASTICSEARCH_TARBALL_SHA1 *elasticsearch.tar.gz\" | sha1sum -c - ; fi ; if [ \"$ELASTICSEARCH_TARBALL_ASC\" ] ; then wget -O elasticsearch.tar.gz.asc \"$ELASTICSEARCH_TARBALL_ASC\" ;export GNUPGHOME=\"$( mktemp -d ;)\" ;gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$GPG_KEY\" ;gpg --batch --verify elasticsearch.tar.gz.asc elasticsearch.tar.gz ;rm -rf \"$GNUPGHOME\" elasticsearch.tar.gz.asc ; fi ; tar -xf elasticsearch.tar.gz --strip-components=1 ; rm elasticsearch.tar.gz ; apk del .fetch-deps ; mkdir -p ./plugins ; for path in ./data ./logs ./config ./config/scripts; do mkdir -p \"$path\" ;chown -R elasticsearch:elasticsearch \"$path\" ; done ; export ES_JAVA_OPTS='-Xms32m -Xmx32m' ; if [ \"${ELASTICSEARCH_VERSION%%.*}\" -gt 1 ] ; then elasticsearch --version ; else elasticsearch -v ; fi\n#  ####TOMCAT#####\nENV CATALINA_HOME=\"/usr/local/tomcat\"\nENV PATH=\"$CATALINA_HOME/bin:$PATH\"\nRUN mkdir -p \"$CATALINA_HOME\"\nWORKDIR $CATALINA_HOME\n#   let \"Tomcat Native\" live somewhere isolated\nENV TOMCAT_NATIVE_LIBDIR=\"$CATALINA_HOME/native-jni-lib\"\nENV LD_LIBRARY_PATH=\"${LD_LIBRARY_PATH:+$LD_LIBRARY_PATH:}$TOMCAT_NATIVE_LIBDIR\"\n#   see https://www.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/KEYS\n#   see also \"update.sh\" (https://github.com/docker-library/tomcat/blob/master/update.sh)\nENV GPG_KEYS=\"05AB33110949707C93A279E3D3EFE6B686867BA6 07E48665A34DCAFAE522E5E6266191C37C037D42 47309207D818FFD8DCD3F83F1931D684307A10A5 541FBE7D8F78B25E055DDEE13C370389288584E7 61B832AC2F1C5A90F0F9B00A1C506407564C17A3 79F7026C690BAA50B92CD8B66A3AD3F4F22C4FED 9BA44C2621385CB966EBA586F72C284D731FABEE A27677289986DB50844682F8ACB77FC2E86E29AC A9C5DF4D22E99998D9875A5110C01C5A2F6059E7 DCFD35E0BF8CA7344752DE8B6FB21E8933C60243 F3A04C595DB5B6A5F1ECA43E3B7BBB100D811BBE F7DA48BB64BCB84ECBA7EE6935CD23C10D498E23\"\nENV TOMCAT_MAJOR=\"9\"\nENV TOMCAT_VERSION=\"9.0.16\"\nENV TOMCAT_SHA512=\"3e398e2343d1afc16a5f0cbfa8516db9db59ea8686d7d817eafa11c1465b71b711ccb2cae8437d5c32442b3a3f6cd3dbf15285eb35a28fcdb42c19793e0ff64e\"\nENV TOMCAT_TGZ_URLS=\"https://www.apache.org/dyn/closer.cgi?action=download&filename=tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz  https://www-us.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz  https://www.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz  https://archive.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz\"\nENV TOMCAT_ASC_URLS=\"https://www.apache.org/dyn/closer.cgi?action=download&filename=tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz.asc  https://www-us.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz.asc  https://www.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz.asc  https://archive.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz.asc\"\nRUN set -eux ; apk add gnupg ca-certificates openssl --no-cache --virtual .fetch-deps ; export GNUPGHOME=\"$( mktemp -d ;)\" ; for key in $GPG_KEYS; do gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\" ; done ; success= ; for url in $TOMCAT_TGZ_URLS; do if wget -O tomcat.tar.gz \"$url\" ; then success=1 ;break ; fi ; done ; [ -n \"$success\" ] ; echo \"$TOMCAT_SHA512 *tomcat.tar.gz\" | sha512sum -c - ; success= ; for url in $TOMCAT_ASC_URLS; do if wget -O tomcat.tar.gz.asc \"$url\" ; then success=1 ;break ; fi ; done ; [ -n \"$success\" ] ; gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz ; tar -xvf tomcat.tar.gz --strip-components=1 ; rm bin/*.bat ; rm tomcat.tar.gz* ; command -v gpgconf \\\n && gpgconf --kill all || : ; rm -rf \"$GNUPGHOME\" ; nativeBuildDir=\"$( mktemp -d ;)\" ; tar -xvf bin/tomcat-native.tar.gz -C \"$nativeBuildDir\" --strip-components=1 ; apk add apr-dev coreutils dpkg-dev dpkg gcc libc-dev make openssl-dev \"openjdk${JAVA_VERSION%%[-~bu]*}\"=\"$JAVA_ALPINE_VERSION\" --no-cache --virtual .native-build-deps ; (export CATALINA_HOME=\"$PWD\" ;cd \"$nativeBuildDir/native\" ;gnuArch=\"$( dpkg-architecture --query DEB_BUILD_GNU_TYPE ;)\" ;./configure --build=\"$gnuArch\" --libdir=\"$TOMCAT_NATIVE_LIBDIR\" --prefix=\"$CATALINA_HOME\" --with-apr=\"$( which apr-1-config ;)\" --with-java-home=\"$( docker-java-home ;)\" --with-ssl=yes ;make -j \"$( nproc ;)\" ;make install ) ; rm -rf \"$nativeBuildDir\" ; rm bin/tomcat-native.tar.gz ; runDeps=\"$( scanelf --needed --nobanner --format '%n#p' --recursive \"$TOMCAT_NATIVE_LIBDIR\" | tr ',' '\\n' | sort -u | awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' ;)\" ; apk add $runDeps --virtual .tomcat-native-rundeps ; apk del .fetch-deps .native-build-deps ; apk add bash --no-cache ; find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' + ; chmod -R +rX . ; chmod 777 logs work\n#   verify Tomcat Native is working properly\nRUN set -e \\\n && nativeLines=\"$( catalina.sh configtest 2>&1;)\" \\\n && nativeLines=\"$( echo \"$nativeLines\" | grep 'Apache Tomcat Native' ;)\" \\\n && nativeLines=\"$( echo \"$nativeLines\" | sort -u ;)\" \\\n && if ! echo \"$nativeLines\" | grep 'INFO: Loaded APR based Apache Tomcat Native library' >&2; then echo \"$nativeLines\" >&2;exit 1 ; fi\nRUN apk add git --no-cache\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM maven:3.6.0-jdk-8-alpine\n# ####ELASTICSEARCH#####\n#  ensure elasticsearch user exists\nRUN addgroup -S elasticsearch \\\n && adduser -S -G elasticsearch elasticsearch\n#  grab su-exec for easy step-down from root\n#  and bash for \"bin/elasticsearch\" among others\nRUN apk add --no-cache 'su-exec>=0.2' bash procps\n#  https://artifacts.elastic.co/GPG-KEY-elasticsearch\nENV GPG_KEY=\"46095ACC8548582C1A2699A9D27D666CD88E42B4\"\nWORKDIR /usr/share/elasticsearch\nENV PATH=\"/usr/share/elasticsearch/bin:$PATH\"\nENV ELASTICSEARCH_VERSION=\"5.6.14\"\nENV ELASTICSEARCH_TARBALL=\"https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-5.6.14.tar.gz\" \\\n    ELASTICSEARCH_TARBALL_ASC=\"https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-5.6.14.tar.gz.asc\" \\\n    ELASTICSEARCH_TARBALL_SHA1=\"392e98ebd549aba91f3041c59fe0d7be1abbd229\"\nRUN set -ex ; apk add --no-cache --virtual .fetch-deps ca-certificates gnupg openssl tar ; wget -O elasticsearch.tar.gz \"$ELASTICSEARCH_TARBALL\" ; if [ \"$ELASTICSEARCH_TARBALL_SHA1\" ] ; then echo \"$ELASTICSEARCH_TARBALL_SHA1 *elasticsearch.tar.gz\" | sha1sum -c - ; fi ; if [ \"$ELASTICSEARCH_TARBALL_ASC\" ] ; then wget -O elasticsearch.tar.gz.asc \"$ELASTICSEARCH_TARBALL_ASC\" ;export GNUPGHOME=\"$( mktemp -d ;)\" ;gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$GPG_KEY\" ;gpg --batch --verify elasticsearch.tar.gz.asc elasticsearch.tar.gz ;rm -rf \"$GNUPGHOME\" elasticsearch.tar.gz.asc ; fi ; tar -xf elasticsearch.tar.gz --strip-components=1 ; rm elasticsearch.tar.gz ; apk del .fetch-deps ; mkdir -p ./plugins ; for path in ./data ./logs ./config ./config/scripts; do mkdir -p \"$path\" ;chown -R elasticsearch:elasticsearch \"$path\" ; done ; export ES_JAVA_OPTS='-Xms32m -Xmx32m' ; if [ \"${ELASTICSEARCH_VERSION%%.*}\" -gt 1 ] ; then elasticsearch --version ; else elasticsearch -v ; fi\n# ####TOMCAT#####\nENV CATALINA_HOME=\"/usr/local/tomcat\"\nENV PATH=\"$CATALINA_HOME/bin:$PATH\"\nRUN mkdir -p \"$CATALINA_HOME\"\nWORKDIR $CATALINA_HOME\n#  let \"Tomcat Native\" live somewhere isolated\nENV TOMCAT_NATIVE_LIBDIR=\"$CATALINA_HOME/native-jni-lib\"\nENV LD_LIBRARY_PATH=\"${LD_LIBRARY_PATH:+$LD_LIBRARY_PATH:}$TOMCAT_NATIVE_LIBDIR\"\n#  see https://www.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/KEYS\n#  see also \"update.sh\" (https://github.com/docker-library/tomcat/blob/master/update.sh)\nENV GPG_KEYS=\"05AB33110949707C93A279E3D3EFE6B686867BA6 07E48665A34DCAFAE522E5E6266191C37C037D42 47309207D818FFD8DCD3F83F1931D684307A10A5 541FBE7D8F78B25E055DDEE13C370389288584E7 61B832AC2F1C5A90F0F9B00A1C506407564C17A3 79F7026C690BAA50B92CD8B66A3AD3F4F22C4FED 9BA44C2621385CB966EBA586F72C284D731FABEE A27677289986DB50844682F8ACB77FC2E86E29AC A9C5DF4D22E99998D9875A5110C01C5A2F6059E7 DCFD35E0BF8CA7344752DE8B6FB21E8933C60243 F3A04C595DB5B6A5F1ECA43E3B7BBB100D811BBE F7DA48BB64BCB84ECBA7EE6935CD23C10D498E23\"\nENV TOMCAT_MAJOR=\"9\"\nENV TOMCAT_VERSION=\"9.0.16\"\nENV TOMCAT_SHA512=\"3e398e2343d1afc16a5f0cbfa8516db9db59ea8686d7d817eafa11c1465b71b711ccb2cae8437d5c32442b3a3f6cd3dbf15285eb35a28fcdb42c19793e0ff64e\"\nENV TOMCAT_TGZ_URLS=\"https://www.apache.org/dyn/closer.cgi?action=download&filename=tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz  https://www-us.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz  https://www.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz  https://archive.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz\"\nENV TOMCAT_ASC_URLS=\"https://www.apache.org/dyn/closer.cgi?action=download&filename=tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz.asc  https://www-us.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz.asc  https://www.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz.asc  https://archive.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz.asc\"\nRUN set -eux ; apk add --no-cache --virtual .fetch-deps gnupg ca-certificates openssl ; export GNUPGHOME=\"$( mktemp -d ;)\" ; for key in $GPG_KEYS; do gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\" ; done ; success= ; for url in $TOMCAT_TGZ_URLS; do if wget -O tomcat.tar.gz \"$url\" ; then success=1 ;break ; fi ; done ; [ -n \"$success\" ] ; echo \"$TOMCAT_SHA512 *tomcat.tar.gz\" | sha512sum -c - ; success= ; for url in $TOMCAT_ASC_URLS; do if wget -O tomcat.tar.gz.asc \"$url\" ; then success=1 ;break ; fi ; done ; [ -n \"$success\" ] ; gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz ; tar -xvf tomcat.tar.gz --strip-components=1 ; rm bin/*.bat ; rm tomcat.tar.gz* ; command -v gpgconf \\\n && gpgconf --kill all || : ; rm -rf \"$GNUPGHOME\" ; nativeBuildDir=\"$( mktemp -d ;)\" ; tar -xvf bin/tomcat-native.tar.gz -C \"$nativeBuildDir\" --strip-components=1 ; apk add --no-cache --virtual .native-build-deps apr-dev coreutils dpkg-dev dpkg gcc libc-dev make \"openjdk${JAVA_VERSION%%[-~bu]*}\"=\"$JAVA_ALPINE_VERSION\" openssl-dev ; (export CATALINA_HOME=\"$PWD\" ;cd \"$nativeBuildDir/native\" ;gnuArch=\"$( dpkg-architecture --query DEB_BUILD_GNU_TYPE ;)\" ;./configure --build=\"$gnuArch\" --libdir=\"$TOMCAT_NATIVE_LIBDIR\" --prefix=\"$CATALINA_HOME\" --with-apr=\"$( which apr-1-config ;)\" --with-java-home=\"$( docker-java-home ;)\" --with-ssl=yes ;make -j \"$( nproc ;)\" ;make install ) ; rm -rf \"$nativeBuildDir\" ; rm bin/tomcat-native.tar.gz ; runDeps=\"$( scanelf --needed --nobanner --format '%n#p' --recursive \"$TOMCAT_NATIVE_LIBDIR\" | tr ',' '\\n' | sort -u | awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' ;)\" ; apk add --virtual .tomcat-native-rundeps $runDeps ; apk del .fetch-deps .native-build-deps ; apk add --no-cache bash ; find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' + ; chmod -R +rX . ; chmod 777 logs work\n#  verify Tomcat Native is working properly\nRUN set -e \\\n && nativeLines=\"$( catalina.sh configtest 2>&1;)\" \\\n && nativeLines=\"$( echo \"$nativeLines\" | grep 'Apache Tomcat Native' ;)\" \\\n && nativeLines=\"$( echo \"$nativeLines\" | sort -u ;)\" \\\n && if ! echo \"$nativeLines\" | grep 'INFO: Loaded APR based Apache Tomcat Native library' >&2; then echo \"$nativeLines\" >&2;exit 1 ; fi\nRUN apk add --no-cache git\n","injectedSmells":[],"originalDockerfileHash":"bc5c207ef68c7006693ed98db0541bef","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM maven:3.6.0-jdk-8-alpine\n#  ####ELASTICSEARCH#####\n#   ensure elasticsearch user exists\nRUN addgroup -S elasticsearch \\\n && adduser -S -G elasticsearch elasticsearch\n#   grab su-exec for easy step-down from root\n#   and bash for \"bin/elasticsearch\" among others\nRUN apk add --no-cache 'su-exec>=0.2' bash procps\n#   https://artifacts.elastic.co/GPG-KEY-elasticsearch\nENV GPG_KEY=\"46095ACC8548582C1A2699A9D27D666CD88E42B4\"\nWORKDIR /usr/share/elasticsearch\nENV PATH=\"/usr/share/elasticsearch/bin:$PATH\"\nENV ELASTICSEARCH_VERSION=\"5.6.14\"\nENV ELASTICSEARCH_TARBALL=\"https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-5.6.14.tar.gz\" \\\n    ELASTICSEARCH_TARBALL_ASC=\"https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-5.6.14.tar.gz.asc\" \\\n    ELASTICSEARCH_TARBALL_SHA1=\"392e98ebd549aba91f3041c59fe0d7be1abbd229\"\nRUN set -ex ; apk add --no-cache --virtual .fetch-deps ca-certificates gnupg openssl tar ; wget -O elasticsearch.tar.gz \"$ELASTICSEARCH_TARBALL\" ; if [ \"$ELASTICSEARCH_TARBALL_SHA1\" ] ; then echo \"$ELASTICSEARCH_TARBALL_SHA1 *elasticsearch.tar.gz\" | sha1sum -c - ; fi ; if [ \"$ELASTICSEARCH_TARBALL_ASC\" ] ; then wget -O elasticsearch.tar.gz.asc \"$ELASTICSEARCH_TARBALL_ASC\" ;export GNUPGHOME=\"$( mktemp -d ;)\" ;gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$GPG_KEY\" ;gpg --batch --verify elasticsearch.tar.gz.asc elasticsearch.tar.gz ;rm -rf \"$GNUPGHOME\" elasticsearch.tar.gz.asc ; fi ; tar -xf elasticsearch.tar.gz --strip-components=1 ; rm elasticsearch.tar.gz ; apk del .fetch-deps ; mkdir -p ./plugins ; for path in ./data ./logs ./config ./config/scripts; do mkdir -p \"$path\" ;chown -R elasticsearch:elasticsearch \"$path\" ; done ; export ES_JAVA_OPTS='-Xms32m -Xmx32m' ; if [ \"${ELASTICSEARCH_VERSION%%.*}\" -gt 1 ] ; then elasticsearch --version ; else elasticsearch -v ; fi\n#  ####TOMCAT#####\nENV CATALINA_HOME=\"/usr/local/tomcat\"\nENV PATH=\"$CATALINA_HOME/bin:$PATH\"\nRUN mkdir -p \"$CATALINA_HOME\"\nWORKDIR $CATALINA_HOME\n#   let \"Tomcat Native\" live somewhere isolated\nENV TOMCAT_NATIVE_LIBDIR=\"$CATALINA_HOME/native-jni-lib\"\nENV LD_LIBRARY_PATH=\"${LD_LIBRARY_PATH:+$LD_LIBRARY_PATH:}$TOMCAT_NATIVE_LIBDIR\"\n#   see https://www.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/KEYS\n#   see also \"update.sh\" (https://github.com/docker-library/tomcat/blob/master/update.sh)\nENV GPG_KEYS=\"05AB33110949707C93A279E3D3EFE6B686867BA6 07E48665A34DCAFAE522E5E6266191C37C037D42 47309207D818FFD8DCD3F83F1931D684307A10A5 541FBE7D8F78B25E055DDEE13C370389288584E7 61B832AC2F1C5A90F0F9B00A1C506407564C17A3 79F7026C690BAA50B92CD8B66A3AD3F4F22C4FED 9BA44C2621385CB966EBA586F72C284D731FABEE A27677289986DB50844682F8ACB77FC2E86E29AC A9C5DF4D22E99998D9875A5110C01C5A2F6059E7 DCFD35E0BF8CA7344752DE8B6FB21E8933C60243 F3A04C595DB5B6A5F1ECA43E3B7BBB100D811BBE F7DA48BB64BCB84ECBA7EE6935CD23C10D498E23\"\nENV TOMCAT_MAJOR=\"9\"\nENV TOMCAT_VERSION=\"9.0.16\"\nENV TOMCAT_SHA512=\"3e398e2343d1afc16a5f0cbfa8516db9db59ea8686d7d817eafa11c1465b71b711ccb2cae8437d5c32442b3a3f6cd3dbf15285eb35a28fcdb42c19793e0ff64e\"\nENV TOMCAT_TGZ_URLS=\"https://www.apache.org/dyn/closer.cgi?action=download&filename=tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz  https://www-us.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz  https://www.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz  https://archive.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz\"\nENV TOMCAT_ASC_URLS=\"https://www.apache.org/dyn/closer.cgi?action=download&filename=tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz.asc  https://www-us.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz.asc  https://www.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz.asc  https://archive.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz.asc\"\nRUN set -eux ; apk add --no-cache --virtual .fetch-deps gnupg ca-certificates openssl ; export GNUPGHOME=\"$( mktemp -d ;)\" ; for key in $GPG_KEYS; do gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\" ; done ; success= ; for url in $TOMCAT_TGZ_URLS; do if wget -O tomcat.tar.gz \"$url\" ; then success=1 ;break ; fi ; done ; [ -n \"$success\" ] ; echo \"$TOMCAT_SHA512 *tomcat.tar.gz\" | sha512sum -c - ; success= ; for url in $TOMCAT_ASC_URLS; do if wget -O tomcat.tar.gz.asc \"$url\" ; then success=1 ;break ; fi ; done ; [ -n \"$success\" ] ; gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz ; tar -xvf tomcat.tar.gz --strip-components=1 ; rm bin/*.bat ; rm tomcat.tar.gz* ; command -v gpgconf \\\n && gpgconf --kill all || : ; rm -rf \"$GNUPGHOME\" ; nativeBuildDir=\"$( mktemp -d ;)\" ; tar -xvf bin/tomcat-native.tar.gz -C \"$nativeBuildDir\" --strip-components=1 ; apk add --no-cache --virtual .native-build-deps apr-dev coreutils dpkg-dev dpkg gcc libc-dev make \"openjdk${JAVA_VERSION%%[-~bu]*}\"=\"$JAVA_ALPINE_VERSION\" openssl-dev ; (export CATALINA_HOME=\"$PWD\" ;cd \"$nativeBuildDir/native\" ;gnuArch=\"$( dpkg-architecture --query DEB_BUILD_GNU_TYPE ;)\" ;./configure --build=\"$gnuArch\" --libdir=\"$TOMCAT_NATIVE_LIBDIR\" --prefix=\"$CATALINA_HOME\" --with-apr=\"$( which apr-1-config ;)\" --with-java-home=\"$( docker-java-home ;)\" --with-ssl=yes ;make -j \"$( nproc ;)\" ;make install ) ; rm -rf \"$nativeBuildDir\" ; rm bin/tomcat-native.tar.gz ; runDeps=\"$( scanelf --needed --nobanner --format '%n#p' --recursive \"$TOMCAT_NATIVE_LIBDIR\" | tr ',' '\\n' | sort -u | awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' ;)\" ; apk add --virtual .tomcat-native-rundeps $runDeps ; apk del .fetch-deps .native-build-deps ; apk add --no-cache bash ; find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' + ; chmod -R +rX . ; chmod 777 logs work\n#   verify Tomcat Native is working properly\nRUN set -e \\\n && nativeLines=\"$( catalina.sh configtest 2>&1;)\" \\\n && nativeLines=\"$( echo \"$nativeLines\" | grep 'Apache Tomcat Native' ;)\" \\\n && nativeLines=\"$( echo \"$nativeLines\" | sort -u ;)\" \\\n && if ! echo \"$nativeLines\" | grep 'INFO: Loaded APR based Apache Tomcat Native library' >&2; then echo \"$nativeLines\" >&2;exit 1 ; fi\nRUN apk add --no-cache git\n","originalDockerfileUglifiedHash":"b7d7598be9cd6c2aff26f01856a97744","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/5edd60932a8d9321f6304404fd4aa06d3cbadc4c.dockerfile"}