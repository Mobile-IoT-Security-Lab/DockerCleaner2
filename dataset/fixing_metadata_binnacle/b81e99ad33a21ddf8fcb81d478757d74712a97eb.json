{"seed":1793689508,"processedDockerfileHash":"a38b0b3e95990a8bfb1d053e600ff771","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM phusion/baseimage:0.9.22\nRUN apt-get update \\\n && apt-get install --no-install-recommends ca-certificates curl phantomjs=2.1.1+dfsg-1 libc6-dev libfontconfig1 mysql-client tzdata -y \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#   Give children processes 1 minute to timeout\nENV KILL_PROCESS_TIMEOUT=\"60\"\n#   Give all other processes (such as those which have been forked) 2 minutes to timeout\nENV KILL_ALL_PROCESSES_TIMEOUT=\"120\"\n#  FROM sgrio/java-oracle:jdk_8\n#  # start from https://github.com/sgr-io/docker-java-oracle/blob/master/jdk/Dockerfile\nENV DEBIAN_FRONTEND=\"noninteractive\"\nENV VERSION=\"8\"\nENV UPDATE=\"171\"\nENV BUILD=\"11\"\nENV SIG=\"512cd62ec5174c3487ac17c61aaa89e8\"\nENV JAVA_HOME=\"/usr/lib/jvm/java-${VERSION}-oracle\"\nENV JRE_HOME=\"${JAVA_HOME}/jre\"\n#   install of ca-certificates and curl moved to single RUN apt... command above\n#  RUN apt-get update && apt-get install ca-certificates curl \\\n#    -y --no-install-recommends && \\\nRUN curl --silent --location --retry 3 --cacert /etc/ssl/certs/GeoTrust_Global_CA.pem --header \"Cookie: oraclelicense=accept-securebackup-cookie;\" http://download.oracle.com/otn-pub/java/jdk/\"${VERSION}\"u\"${UPDATE}\"-b\"${BUILD}\"/\"${SIG}\"/jdk-\"${VERSION}\"u\"${UPDATE}\"-linux-x64.tar.gz | tar xz -C /tmp \\\n && mkdir -p /usr/lib/jvm \\\n && mv /tmp/jdk1.${VERSION}.0_${UPDATE} \"${JAVA_HOME}\" \\\n && apt-get autoclean \\\n && apt-get --purge -y autoremove \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\nRUN update-alternatives --install \"/usr/bin/java\" \"java\" \"${JRE_HOME}/bin/java\" 1 \\\n && update-alternatives --install \"/usr/bin/javaws\" \"javaws\" \"${JRE_HOME}/bin/javaws\" 1 \\\n && update-alternatives --install \"/usr/bin/javac\" \"javac\" \"${JAVA_HOME}/bin/javac\" 1 \\\n && update-alternatives --set java \"${JRE_HOME}/bin/java\" \\\n && update-alternatives --set javaws \"${JRE_HOME}/bin/javaws\" \\\n && update-alternatives --set javac \"${JAVA_HOME}/bin/javac\"\n#  # end from https://github.com/sgr-io/docker-java-oracle/blob/master/jdk/Dockerfile\nENV ROOT_HOME=\"/root\"\nENV USER_HOME=\"/home/looker\"\nENV APP_HOME=\"$USER_HOME/looker\"\n#   Unneeded - already Etc/UTC\n#   RUN echo Etc/UTC > /etc/timezone \nRUN groupadd looker \\\n && useradd -m -g looker -s /bin/bash looker\n#   Replace content of policy-rc.d in order to allow services to start.\n#   See here: https://askubuntu.com/questions/365911/why-the-services-do-not-start-at-installation\nCOPY templates/policy-rc.d /usr/sbin/policy-rc.d\nCOPY templates/90-looker.conf /etc/sysctl.d/90-looker.conf\nRUN chmod 644 /etc/sysctl.d/90-looker.conf\nRUN echo \"looker soft nofile 4096\\nlooker hard nofile 4096\" >> /etc/security/limits.conf\nRUN mkdir -p $APP_HOME\nWORKDIR $APP_HOME\nCOPY templates/provision.yml templates/lookerstart.cfg templates/looker_jar_loc.txt $APP_HOME/\nENV LOOKER_VERSION=\"looker-latest\"\nRUN mkdir /etc/service/looker\nCOPY templates/looker_run.sh /etc/service/looker/run\nRUN chmod +x /etc/service/looker/run\nRUN set -a \\\n && curl https://raw.githubusercontent.com/looker/customer-scripts/master/startup_scripts/looker > $APP_HOME/looker\nRUN curl `cat $APP_HOME/looker_jar_loc.txt `/looker-latest.jar > $APP_HOME/looker.jar\nRUN chown -R looker:looker $USER_HOME \\\n && chmod 0755 $APP_HOME/looker\nVOLUME \"$APP_HOME\"\n#   Confifure cron to manage log files\nRUN /bin/bash -c \"set -o pipefail \\\n && echo $'9 1 * * * find $APP_HOME/log -name \\'looker.log.????????\\' -mtime +7 -exec gzip \\'{}\\' \\; > /dev/null\\n29 1 * * * find $APP_HOME/log -name \\'looker.log.????????.gz\\' -mtime +28 -exec rm -f \\'{}\\' \\; > /dev/null' | crontab -u looker -\"\n#   ENV INTERNODE_PORT 1551\n#   EXPOSE 1551\n#   ENV QUEUE_PORT 61616\n#   EXPOSE 61616\nENV PORT=\"9999\"\nEXPOSE 9999/tcp\nENV API_PORT=\"19999\"\nEXPOSE 19999/tcp\nCMD [\"/sbin/my_init\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM phusion/baseimage:0.9.22\nRUN apt-get update \\\n && apt-get install ca-certificates curl phantomjs=2.1.1+dfsg-1 libc6-dev libfontconfig1 mysql-client tzdata -y \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#  Give children processes 1 minute to timeout\nENV KILL_PROCESS_TIMEOUT=\"60\"\n#  Give all other processes (such as those which have been forked) 2 minutes to timeout\nENV KILL_ALL_PROCESSES_TIMEOUT=\"120\"\n# FROM sgrio/java-oracle:jdk_8\n# # start from https://github.com/sgr-io/docker-java-oracle/blob/master/jdk/Dockerfile\nENV DEBIAN_FRONTEND=\"noninteractive\"\nENV VERSION=\"8\"\nENV UPDATE=\"171\"\nENV BUILD=\"11\"\nENV SIG=\"512cd62ec5174c3487ac17c61aaa89e8\"\nENV JAVA_HOME=\"/usr/lib/jvm/java-${VERSION}-oracle\"\nENV JRE_HOME=\"${JAVA_HOME}/jre\"\n#  install of ca-certificates and curl moved to single RUN apt... command above\n# RUN apt-get update && apt-get install ca-certificates curl \\\n#   -y --no-install-recommends && \\\nRUN curl --silent --location --retry 3 --cacert /etc/ssl/certs/GeoTrust_Global_CA.pem --header \"Cookie: oraclelicense=accept-securebackup-cookie;\" http://download.oracle.com/otn-pub/java/jdk/\"${VERSION}\"u\"${UPDATE}\"-b\"${BUILD}\"/\"${SIG}\"/jdk-\"${VERSION}\"u\"${UPDATE}\"-linux-x64.tar.gz | tar xz -C /tmp \\\n && mkdir -p /usr/lib/jvm \\\n && mv /tmp/jdk1.${VERSION}.0_${UPDATE} \"${JAVA_HOME}\" \\\n && apt-get autoclean \\\n && apt-get --purge -y autoremove \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\nRUN update-alternatives --install \"/usr/bin/java\" \"java\" \"${JRE_HOME}/bin/java\" 1 \\\n && update-alternatives --install \"/usr/bin/javaws\" \"javaws\" \"${JRE_HOME}/bin/javaws\" 1 \\\n && update-alternatives --install \"/usr/bin/javac\" \"javac\" \"${JAVA_HOME}/bin/javac\" 1 \\\n && update-alternatives --set java \"${JRE_HOME}/bin/java\" \\\n && update-alternatives --set javaws \"${JRE_HOME}/bin/javaws\" \\\n && update-alternatives --set javac \"${JAVA_HOME}/bin/javac\"\n# # end from https://github.com/sgr-io/docker-java-oracle/blob/master/jdk/Dockerfile\nENV ROOT_HOME=\"/root\"\nENV USER_HOME=\"/home/looker\"\nENV APP_HOME=\"$USER_HOME/looker\"\n#  Unneeded - already Etc/UTC\n#  RUN echo Etc/UTC > /etc/timezone \nRUN groupadd looker \\\n && useradd -m -g looker -s /bin/bash looker\n#  Replace content of policy-rc.d in order to allow services to start.\n#  See here: https://askubuntu.com/questions/365911/why-the-services-do-not-start-at-installation\nCOPY templates/policy-rc.d /usr/sbin/policy-rc.d\nCOPY templates/90-looker.conf /etc/sysctl.d/90-looker.conf\nRUN chmod 644 /etc/sysctl.d/90-looker.conf\nRUN echo \"looker soft nofile 4096\\nlooker hard nofile 4096\" >> /etc/security/limits.conf\nRUN mkdir -p $APP_HOME\nWORKDIR $APP_HOME\nCOPY templates/provision.yml templates/lookerstart.cfg templates/looker_jar_loc.txt $APP_HOME/\nENV LOOKER_VERSION=\"looker-latest\"\nRUN mkdir /etc/service/looker\nCOPY templates/looker_run.sh /etc/service/looker/run\nRUN chmod +x /etc/service/looker/run\nRUN set -a \\\n && curl https://raw.githubusercontent.com/looker/customer-scripts/master/startup_scripts/looker > $APP_HOME/looker\nRUN curl `cat $APP_HOME/looker_jar_loc.txt `/looker-latest.jar > $APP_HOME/looker.jar\nRUN chown -R looker:looker $USER_HOME \\\n && chmod 0755 $APP_HOME/looker\nVOLUME \"$APP_HOME\"\n#  Confifure cron to manage log files\nRUN /bin/bash -c \"set -o pipefail \\\n && echo $'9 1 * * * find $APP_HOME/log -name \\'looker.log.????????\\' -mtime +7 -exec gzip \\'{}\\' \\; > /dev/null\\n29 1 * * * find $APP_HOME/log -name \\'looker.log.????????.gz\\' -mtime +28 -exec rm -f \\'{}\\' \\; > /dev/null' | crontab -u looker -\"\n#  ENV INTERNODE_PORT 1551\n#  EXPOSE 1551\n#  ENV QUEUE_PORT 61616\n#  EXPOSE 61616\nENV PORT=\"9999\"\nEXPOSE 9999/tcp\nENV API_PORT=\"19999\"\nEXPOSE 19999/tcp\nCMD [\"/sbin/my_init\"]\n","injectedSmells":[],"originalDockerfileHash":"7901dc4cca0f75378e94fe946ae987a4","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM phusion/baseimage:0.9.22\nRUN apt-get update \\\n && apt-get install ca-certificates curl phantomjs=2.1.1+dfsg-1 libc6-dev libfontconfig1 mysql-client tzdata -y \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#   Give children processes 1 minute to timeout\nENV KILL_PROCESS_TIMEOUT=\"60\"\n#   Give all other processes (such as those which have been forked) 2 minutes to timeout\nENV KILL_ALL_PROCESSES_TIMEOUT=\"120\"\n#  FROM sgrio/java-oracle:jdk_8\n#  # start from https://github.com/sgr-io/docker-java-oracle/blob/master/jdk/Dockerfile\nENV DEBIAN_FRONTEND=\"noninteractive\"\nENV VERSION=\"8\"\nENV UPDATE=\"171\"\nENV BUILD=\"11\"\nENV SIG=\"512cd62ec5174c3487ac17c61aaa89e8\"\nENV JAVA_HOME=\"/usr/lib/jvm/java-${VERSION}-oracle\"\nENV JRE_HOME=\"${JAVA_HOME}/jre\"\n#   install of ca-certificates and curl moved to single RUN apt... command above\n#  RUN apt-get update && apt-get install ca-certificates curl \\\n#    -y --no-install-recommends && \\\nRUN curl --silent --location --retry 3 --cacert /etc/ssl/certs/GeoTrust_Global_CA.pem --header \"Cookie: oraclelicense=accept-securebackup-cookie;\" http://download.oracle.com/otn-pub/java/jdk/\"${VERSION}\"u\"${UPDATE}\"-b\"${BUILD}\"/\"${SIG}\"/jdk-\"${VERSION}\"u\"${UPDATE}\"-linux-x64.tar.gz | tar xz -C /tmp \\\n && mkdir -p /usr/lib/jvm \\\n && mv /tmp/jdk1.${VERSION}.0_${UPDATE} \"${JAVA_HOME}\" \\\n && apt-get autoclean \\\n && apt-get --purge -y autoremove \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\nRUN update-alternatives --install \"/usr/bin/java\" \"java\" \"${JRE_HOME}/bin/java\" 1 \\\n && update-alternatives --install \"/usr/bin/javaws\" \"javaws\" \"${JRE_HOME}/bin/javaws\" 1 \\\n && update-alternatives --install \"/usr/bin/javac\" \"javac\" \"${JAVA_HOME}/bin/javac\" 1 \\\n && update-alternatives --set java \"${JRE_HOME}/bin/java\" \\\n && update-alternatives --set javaws \"${JRE_HOME}/bin/javaws\" \\\n && update-alternatives --set javac \"${JAVA_HOME}/bin/javac\"\n#  # end from https://github.com/sgr-io/docker-java-oracle/blob/master/jdk/Dockerfile\nENV ROOT_HOME=\"/root\"\nENV USER_HOME=\"/home/looker\"\nENV APP_HOME=\"$USER_HOME/looker\"\n#   Unneeded - already Etc/UTC\n#   RUN echo Etc/UTC > /etc/timezone \nRUN groupadd looker \\\n && useradd -m -g looker -s /bin/bash looker\n#   Replace content of policy-rc.d in order to allow services to start.\n#   See here: https://askubuntu.com/questions/365911/why-the-services-do-not-start-at-installation\nCOPY templates/policy-rc.d /usr/sbin/policy-rc.d\nCOPY templates/90-looker.conf /etc/sysctl.d/90-looker.conf\nRUN chmod 644 /etc/sysctl.d/90-looker.conf\nRUN echo \"looker soft nofile 4096\\nlooker hard nofile 4096\" >> /etc/security/limits.conf\nRUN mkdir -p $APP_HOME\nWORKDIR $APP_HOME\nCOPY templates/provision.yml templates/lookerstart.cfg templates/looker_jar_loc.txt $APP_HOME/\nENV LOOKER_VERSION=\"looker-latest\"\nRUN mkdir /etc/service/looker\nCOPY templates/looker_run.sh /etc/service/looker/run\nRUN chmod +x /etc/service/looker/run\nRUN set -a \\\n && curl https://raw.githubusercontent.com/looker/customer-scripts/master/startup_scripts/looker > $APP_HOME/looker\nRUN curl `cat $APP_HOME/looker_jar_loc.txt `/looker-latest.jar > $APP_HOME/looker.jar\nRUN chown -R looker:looker $USER_HOME \\\n && chmod 0755 $APP_HOME/looker\nVOLUME \"$APP_HOME\"\n#   Confifure cron to manage log files\nRUN /bin/bash -c \"set -o pipefail \\\n && echo $'9 1 * * * find $APP_HOME/log -name \\'looker.log.????????\\' -mtime +7 -exec gzip \\'{}\\' \\; > /dev/null\\n29 1 * * * find $APP_HOME/log -name \\'looker.log.????????.gz\\' -mtime +28 -exec rm -f \\'{}\\' \\; > /dev/null' | crontab -u looker -\"\n#   ENV INTERNODE_PORT 1551\n#   EXPOSE 1551\n#   ENV QUEUE_PORT 61616\n#   EXPOSE 61616\nENV PORT=\"9999\"\nEXPOSE 9999/tcp\nENV API_PORT=\"19999\"\nEXPOSE 19999/tcp\nCMD [\"/sbin/my_init\"]\n","originalDockerfileUglifiedHash":"a8aaf34f708b798729e262b960b4f8cc","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/b81e99ad33a21ddf8fcb81d478757d74712a97eb.dockerfile"}