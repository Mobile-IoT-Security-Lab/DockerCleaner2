{"seed":1925557088,"processedDockerfileHash":"9ced7c7e5feae163dcbcdf26c610812f","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","have-a-healthcheck","have-a-user"],"processedDockerfile":"#  upstream https://github.com/docker-library/percona/blob/master/5.6/Dockerfile\n#   vim:set ft=dockerfile:\nFROM debian:jessie\nMAINTAINER 若虚 <slpcat@qq.com>\n#   Container variables\nENV TERM=\"xterm\" \\\n    LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US:en\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    TIMEZONE=\"Asia/Shanghai\"\nRUN echo 'deb http://mirrors.aliyun.com/debian jessie-backports main' > /etc/apt/sources.list.d/backports.list \\\n && sed -i 's/deb.debian.org/mirrors.aliyun.com/' /etc/apt/sources.list \\\n && sed -i 's/security.debian.org/mirrors.aliyun.com\\/debian-security/' /etc/apt/sources.list\n#   Set timezone and locales\nRUN echo \"${TIMEZONE}\" > /etc/timezone \\\n && echo \"$LANG UTF-8\" > /etc/locale.gen \\\n && : \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -yq apt-utils dialog vim-tiny locales \\\n && ln -sf /usr/share/zoneinfo/${TIMEZONE} /etc/localtime \\\n && update-locale LANG=$LANG \\\n && locale-gen $LANG \\\n && DEBIAN_FRONTEND=noninteractive dpkg-reconfigure locales\n#   Install required packages\nRUN apt-get dist-upgrade -y\n#   add our user and group first to make sure their IDs get assigned consistently, regardless of whatever dependencies get added\nRUN groupadd -r mysql \\\n && useradd -r -g mysql mysql\n#   add gosu for easy step-down from root\nENV GOSU_VERSION=\"1.7\"\nRUN set -x \\\n && apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends ca-certificates wget -y ) \\\n && rm -rf /var/lib/apt/lists/* \\\n && wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;)\" \\\n && wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;).asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 \\\n && gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \\\n && rm -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc \\\n && chmod +x /usr/local/bin/gosu \\\n && gosu nobody true \\\n && apt-get purge -y --auto-remove ca-certificates wget\nRUN mkdir /docker-entrypoint-initdb.d\n#   install \"pwgen\" for randomizing passwords\n#   install \"apt-transport-https\" for Percona's repo (switched to https-only)\nRUN apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends apt-transport-https ca-certificates pwgen -y ) \\\n && rm -rf /var/lib/apt/lists/*\nENV GPG_KEYS=\"430BDF5C56E7C94E848EE60C1C4CBDCDCD2EFD2A  4D1BB29D63D98E422B2113B19334A25F8507EFA5\"\nRUN set -ex ; export GNUPGHOME=\"$( mktemp -d ;)\" ; for key in $GPG_KEYS; do gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\" ; done ; gpg --export $GPG_KEYS > /etc/apt/trusted.gpg.d/percona.gpg; rm -r \"$GNUPGHOME\" ; apt-key list\nRUN echo 'deb https://repo.percona.com/apt jessie main' > /etc/apt/sources.list.d/percona.list\nENV PERCONA_MAJOR=\"5.6\"\nENV PERCONA_VERSION=\"5.6.40-84.0-1.jessie\"\n#   the \"/var/lib/mysql\" stuff here is because the mysql-server postinst doesn't have an explicit way to disable the mysql_install_db codepath besides having a database already \"configured\" (ie, stuff in /var/lib/mysql/mysql)\n#   also, we set debconf keys to make APT a little quieter\nRUN { for key in percona-server-server/root_password percona-server-server/root_password_again \"percona-server-server-$PERCONA_MAJOR/root-pass\" \"percona-server-server-$PERCONA_MAJOR/re-root-pass\"; do echo \"percona-server-server-$PERCONA_MAJOR\" \"$key\" password 'unused' ; done ; } | debconf-set-selections \\\n && apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends percona-server-server-$PERCONA_MAJOR=$PERCONA_VERSION -y ) \\\n && rm -rf /var/lib/apt/lists/* \\\n && sed -ri 's/^user\\s/#&/' /etc/mysql/my.cnf \\\n && rm -rf /var/lib/mysql \\\n && mkdir -p /var/lib/mysql /var/run/mysqld \\\n && chown -R mysql:mysql /var/lib/mysql /var/run/mysqld \\\n && chmod 777 /var/run/mysqld \\\n && find /etc/mysql/ -name '*.cnf' -print0 | xargs -0 grep -lZE '^(bind-address|log)' | xargs -rt -0 sed -Ei 's/^(bind-address|log)/#&/' \\\n && echo '[mysqld]\\nskip-host-cache\\nskip-name-resolve' > /etc/mysql/conf.d/docker.cnf\nVOLUME [\"/var/lib/mysql\", \"/var/log/mysql\"]\nCOPY docker-entrypoint.sh /usr/local/bin/\nRUN ln -s usr/local/bin/docker-entrypoint.sh /\nENTRYPOINT [\"docker-entrypoint.sh\"]\nEXPOSE 3306/tcp\nCMD [\"mysqld\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"# upstream https://github.com/docker-library/percona/blob/master/5.6/Dockerfile\n#  vim:set ft=dockerfile:\nFROM debian:jessie\nMAINTAINER 若虚 <slpcat@qq.com>\n#  Container variables\nENV TERM=\"xterm\" \\\n    LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US:en\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    TIMEZONE=\"Asia/Shanghai\"\nRUN echo 'deb http://mirrors.aliyun.com/debian jessie-backports main' > /etc/apt/sources.list.d/backports.list \\\n && sed -i 's/deb.debian.org/mirrors.aliyun.com/' /etc/apt/sources.list \\\n && sed -i 's/security.debian.org/mirrors.aliyun.com\\/debian-security/' /etc/apt/sources.list\n#  Set timezone and locales\nRUN echo \"${TIMEZONE}\" > /etc/timezone \\\n && echo \"$LANG UTF-8\" > /etc/locale.gen \\\n && apt-get update -q \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -yq apt-utils dialog vim-tiny locales \\\n && ln -sf /usr/share/zoneinfo/${TIMEZONE} /etc/localtime \\\n && update-locale LANG=$LANG \\\n && locale-gen $LANG \\\n && DEBIAN_FRONTEND=noninteractive dpkg-reconfigure locales\n#  Install required packages\nRUN apt-get dist-upgrade -y\n#  add our user and group first to make sure their IDs get assigned consistently, regardless of whatever dependencies get added\nRUN groupadd -r mysql \\\n && useradd -r -g mysql mysql\n#  add gosu for easy step-down from root\nENV GOSU_VERSION=\"1.7\"\nRUN set -x \\\n && apt-get update \\\n && apt-get install --no-install-recommends ca-certificates wget -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;)\" \\\n && wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;).asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 \\\n && gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \\\n && rm -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc \\\n && chmod +x /usr/local/bin/gosu \\\n && gosu nobody true \\\n && apt-get purge -y --auto-remove ca-certificates wget\nRUN mkdir /docker-entrypoint-initdb.d\n#  install \"pwgen\" for randomizing passwords\n#  install \"apt-transport-https\" for Percona's repo (switched to https-only)\nRUN apt-get update \\\n && apt-get install --no-install-recommends apt-transport-https ca-certificates pwgen -y \\\n && rm -rf /var/lib/apt/lists/*\nENV GPG_KEYS=\"430BDF5C56E7C94E848EE60C1C4CBDCDCD2EFD2A  4D1BB29D63D98E422B2113B19334A25F8507EFA5\"\nRUN set -ex ; export GNUPGHOME=\"$( mktemp -d ;)\" ; for key in $GPG_KEYS; do gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\" ; done ; gpg --export $GPG_KEYS > /etc/apt/trusted.gpg.d/percona.gpg; rm -r \"$GNUPGHOME\" ; apt-key list\nRUN echo 'deb https://repo.percona.com/apt jessie main' > /etc/apt/sources.list.d/percona.list\nENV PERCONA_MAJOR=\"5.6\"\nENV PERCONA_VERSION=\"5.6.40-84.0-1.jessie\"\n#  the \"/var/lib/mysql\" stuff here is because the mysql-server postinst doesn't have an explicit way to disable the mysql_install_db codepath besides having a database already \"configured\" (ie, stuff in /var/lib/mysql/mysql)\n#  also, we set debconf keys to make APT a little quieter\nRUN { for key in percona-server-server/root_password percona-server-server/root_password_again \"percona-server-server-$PERCONA_MAJOR/root-pass\" \"percona-server-server-$PERCONA_MAJOR/re-root-pass\"; do echo \"percona-server-server-$PERCONA_MAJOR\" \"$key\" password 'unused' ; done ; } | debconf-set-selections \\\n && apt-get update \\\n && apt-get install percona-server-server-$PERCONA_MAJOR=$PERCONA_VERSION -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && sed -ri 's/^user\\s/#&/' /etc/mysql/my.cnf \\\n && rm -rf /var/lib/mysql \\\n && mkdir -p /var/lib/mysql /var/run/mysqld \\\n && chown -R mysql:mysql /var/lib/mysql /var/run/mysqld \\\n && chmod 777 /var/run/mysqld \\\n && find /etc/mysql/ -name '*.cnf' -print0 | xargs -0 grep -lZE '^(bind-address|log)' | xargs -rt -0 sed -Ei 's/^(bind-address|log)/#&/' \\\n && echo '[mysqld]\\nskip-host-cache\\nskip-name-resolve' > /etc/mysql/conf.d/docker.cnf\nVOLUME [\"/var/lib/mysql\", \"/var/log/mysql\"]\nCOPY docker-entrypoint.sh /usr/local/bin/\nRUN ln -s usr/local/bin/docker-entrypoint.sh /\nENTRYPOINT [\"docker-entrypoint.sh\"]\nEXPOSE 3306/tcp\nCMD [\"mysqld\"]\n","injectedSmells":[],"originalDockerfileHash":"b9108cea92ca270858c22f6272c5ab60","successfullyInjectedSmells":[],"originalDockerfileUglified":"#  upstream https://github.com/docker-library/percona/blob/master/5.6/Dockerfile\n#   vim:set ft=dockerfile:\nFROM debian:jessie\nMAINTAINER 若虚 <slpcat@qq.com>\n#   Container variables\nENV TERM=\"xterm\" \\\n    LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US:en\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    TIMEZONE=\"Asia/Shanghai\"\nRUN echo 'deb http://mirrors.aliyun.com/debian jessie-backports main' > /etc/apt/sources.list.d/backports.list \\\n && sed -i 's/deb.debian.org/mirrors.aliyun.com/' /etc/apt/sources.list \\\n && sed -i 's/security.debian.org/mirrors.aliyun.com\\/debian-security/' /etc/apt/sources.list\n#   Set timezone and locales\nRUN echo \"${TIMEZONE}\" > /etc/timezone \\\n && echo \"$LANG UTF-8\" > /etc/locale.gen \\\n && apt-get update -q \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -yq apt-utils dialog vim-tiny locales \\\n && ln -sf /usr/share/zoneinfo/${TIMEZONE} /etc/localtime \\\n && update-locale LANG=$LANG \\\n && locale-gen $LANG \\\n && DEBIAN_FRONTEND=noninteractive dpkg-reconfigure locales\n#   Install required packages\nRUN apt-get dist-upgrade -y\n#   add our user and group first to make sure their IDs get assigned consistently, regardless of whatever dependencies get added\nRUN groupadd -r mysql \\\n && useradd -r -g mysql mysql\n#   add gosu for easy step-down from root\nENV GOSU_VERSION=\"1.7\"\nRUN set -x \\\n && apt-get update \\\n && apt-get install --no-install-recommends ca-certificates wget -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;)\" \\\n && wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;).asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 \\\n && gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \\\n && rm -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc \\\n && chmod +x /usr/local/bin/gosu \\\n && gosu nobody true \\\n && apt-get purge -y --auto-remove ca-certificates wget\nRUN mkdir /docker-entrypoint-initdb.d\n#   install \"pwgen\" for randomizing passwords\n#   install \"apt-transport-https\" for Percona's repo (switched to https-only)\nRUN apt-get update \\\n && apt-get install --no-install-recommends apt-transport-https ca-certificates pwgen -y \\\n && rm -rf /var/lib/apt/lists/*\nENV GPG_KEYS=\"430BDF5C56E7C94E848EE60C1C4CBDCDCD2EFD2A  4D1BB29D63D98E422B2113B19334A25F8507EFA5\"\nRUN set -ex ; export GNUPGHOME=\"$( mktemp -d ;)\" ; for key in $GPG_KEYS; do gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\" ; done ; gpg --export $GPG_KEYS > /etc/apt/trusted.gpg.d/percona.gpg; rm -r \"$GNUPGHOME\" ; apt-key list\nRUN echo 'deb https://repo.percona.com/apt jessie main' > /etc/apt/sources.list.d/percona.list\nENV PERCONA_MAJOR=\"5.6\"\nENV PERCONA_VERSION=\"5.6.40-84.0-1.jessie\"\n#   the \"/var/lib/mysql\" stuff here is because the mysql-server postinst doesn't have an explicit way to disable the mysql_install_db codepath besides having a database already \"configured\" (ie, stuff in /var/lib/mysql/mysql)\n#   also, we set debconf keys to make APT a little quieter\nRUN { for key in percona-server-server/root_password percona-server-server/root_password_again \"percona-server-server-$PERCONA_MAJOR/root-pass\" \"percona-server-server-$PERCONA_MAJOR/re-root-pass\"; do echo \"percona-server-server-$PERCONA_MAJOR\" \"$key\" password 'unused' ; done ; } | debconf-set-selections \\\n && apt-get update \\\n && apt-get install percona-server-server-$PERCONA_MAJOR=$PERCONA_VERSION -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && sed -ri 's/^user\\s/#&/' /etc/mysql/my.cnf \\\n && rm -rf /var/lib/mysql \\\n && mkdir -p /var/lib/mysql /var/run/mysqld \\\n && chown -R mysql:mysql /var/lib/mysql /var/run/mysqld \\\n && chmod 777 /var/run/mysqld \\\n && find /etc/mysql/ -name '*.cnf' -print0 | xargs -0 grep -lZE '^(bind-address|log)' | xargs -rt -0 sed -Ei 's/^(bind-address|log)/#&/' \\\n && echo '[mysqld]\\nskip-host-cache\\nskip-name-resolve' > /etc/mysql/conf.d/docker.cnf\nVOLUME [\"/var/lib/mysql\", \"/var/log/mysql\"]\nCOPY docker-entrypoint.sh /usr/local/bin/\nRUN ln -s usr/local/bin/docker-entrypoint.sh /\nENTRYPOINT [\"docker-entrypoint.sh\"]\nEXPOSE 3306/tcp\nCMD [\"mysqld\"]\n","originalDockerfileUglifiedHash":"ce33d8c9fd8f64dfaca99730780db50e","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/822e4517fd040a4dfb7ea6d3d4303da6d6437b10.dockerfile"}