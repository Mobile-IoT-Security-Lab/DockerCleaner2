{"seed":3319433303,"processedDockerfileHash":"15339b995d1a6553016bc89ec3c119f9","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-pip","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   This image contains all the libs and environment necessary for compiling and running Faster R-CNN\nFROM 10.11.3.8:5000/nvidia/cuda:8.0-cudnn6-devel-ubuntu16.04\n#  FROM nvidia/cuda:8.0-cudnn6-devel-ubuntu16.04\nENV LD_LIBRARY_PATH=\"/usr/local/cuda/lib64:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:$LD_LIBRARY_PATH\" \\\n    PATH=\"/usr/local/cuda-8.0/bin:$PATH\"\nENV LC_ALL=\"C\"\nRUN sed -i 's/archive.ubuntu.com/mirrors.ustc.edu.cn/g' /etc/apt/sources.list \\\n && apt-get update \\\n && apt-get install --no-install-recommends build-essential cmake git wget libatlas-base-dev libboost-all-dev libgflags-dev libgoogle-glog-dev libhdf5-serial-dev libleveldb-dev liblmdb-dev libopencv-dev libprotobuf-dev libsnappy-dev protobuf-compiler python-dev python-numpy python-pip python-setuptools python-scipy nano libopenblas-dev liblapack-dev python-tk openssh-client openssh-server autossh expect -y \\\n && apt-get install --no-install-recommends libboost-all-dev \\\n && apt-get install --no-install-recommends libopenblas-dev liblapack-dev libatlas-base-dev libgflags-dev libgoogle-glog-dev liblmdb-dev gfortran \\\n && apt-get install --no-install-recommends build-essential git libprotobuf-dev libleveldb-dev libsnappy-dev libopencv-dev libboost-all-dev libhdf5-serial-dev libgflags-dev libgoogle-glog-dev liblmdb-dev protobuf-compiler protobuf-c-compiler libyaml-dev libffi-dev libssl-dev python-dev python-pip python3-pip python3-tk python-tk liblmdb-dev time vim screen tmux -y\nRUN mkdir ~/.pip \\\n && echo \"[global]\" > ~/.pip/pip.conf \\\n && echo \"index-url=https://pypi.tuna.tsinghua.edu.cn/simple\" >> ~/.pip/pip.conf \\\n && echo \"format = columns\" >> ~/.pip/pip.conf\nRUN pip install pip==23.1 --upgrade \\\n && pip3 install --upgrade pip\nRUN pip2 install scikit-image Cython numpy==1.15.2 absl-py==0.2.2 albumentations==0.1.2 cupy-cuda80==4.4.1 cycler==0.10.0 jupyter jupyter-tensorboard==0.1.8 Keras==2.2.0 opencv-python==3.4.2.17 scipy matplotlib==2.2.3 ipython==5.6.0 h5py leveldb networkx nose python-dateutil pandas protobuf python-gflags pyyaml Pillow six decorator==4.3.0 opencv-python easydict lmdb sklearn scikit-image h5py leveldb imageio cython packaging SimpleITK pydicom tqdm cffi tensorboardX urllib3 visdom fire git+https://github.com/pytorch/tnt.git@master tqdm ipdb virtualenv tensorflow-gpu==1.4.0 tensorboard==1.11.0 torch==0.4.0 torchvision \\\n && pip3 install tqdm fire SimpleITK pydicom lmdb Cython imageio easydict pandas medicaltorch jupyter scikit-image pillow dominate requests cffi dlib tensorflow-gpu==1.4.0 tensorboard==1.11.0 torch==0.4.1 torchvision datetime scipy matplotlib opencv-python\nWORKDIR /opt\nRUN git clone https://github.com/NVIDIA/nccl.git \\\n && cd nccl \\\n && make -j install \\\n && cd .. \\\n && rm -rf nccl\nWORKDIR /\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  This image contains all the libs and environment necessary for compiling and running Faster R-CNN\nFROM 10.11.3.8:5000/nvidia/cuda:8.0-cudnn6-devel-ubuntu16.04\n# FROM nvidia/cuda:8.0-cudnn6-devel-ubuntu16.04\nENV LD_LIBRARY_PATH=\"/usr/local/cuda/lib64:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:$LD_LIBRARY_PATH\" \\\n    PATH=\"/usr/local/cuda-8.0/bin:$PATH\"\nENV LC_ALL=\"C\"\nRUN sed -i 's/archive.ubuntu.com/mirrors.ustc.edu.cn/g' /etc/apt/sources.list \\\n && apt-get update \\\n && apt-get install --no-install-recommends build-essential cmake git wget libatlas-base-dev libboost-all-dev libgflags-dev libgoogle-glog-dev libhdf5-serial-dev libleveldb-dev liblmdb-dev libopencv-dev libprotobuf-dev libsnappy-dev protobuf-compiler python-dev python-numpy python-pip python-setuptools python-scipy nano libopenblas-dev liblapack-dev python-tk openssh-client openssh-server autossh expect -y \\\n && apt-get install --no-install-recommends libboost-all-dev \\\n && apt-get install libopenblas-dev liblapack-dev libatlas-base-dev libgflags-dev libgoogle-glog-dev liblmdb-dev gfortran \\\n && apt-get install build-essential git libprotobuf-dev libleveldb-dev libsnappy-dev libopencv-dev libboost-all-dev libhdf5-serial-dev libgflags-dev libgoogle-glog-dev liblmdb-dev protobuf-compiler protobuf-c-compiler libyaml-dev libffi-dev libssl-dev python-dev python-pip python3-pip python3-tk python-tk liblmdb-dev time vim screen tmux -y\nRUN mkdir ~/.pip \\\n && echo \"[global]\" > ~/.pip/pip.conf \\\n && echo \"index-url=https://pypi.tuna.tsinghua.edu.cn/simple\" >> ~/.pip/pip.conf \\\n && echo \"format = columns\" >> ~/.pip/pip.conf\nRUN pip install pip --upgrade \\\n && pip3 install --upgrade pip\nRUN pip2 install scikit-image Cython numpy==1.15.2 absl-py==0.2.2 albumentations==0.1.2 cupy-cuda80==4.4.1 cycler==0.10.0 jupyter jupyter-tensorboard==0.1.8 Keras==2.2.0 opencv-python==3.4.2.17 scipy matplotlib==2.2.3 ipython==5.6.0 h5py leveldb networkx nose python-dateutil pandas protobuf python-gflags pyyaml Pillow six decorator==4.3.0 opencv-python easydict lmdb sklearn scikit-image h5py leveldb imageio cython packaging SimpleITK pydicom tqdm cffi tensorboardX urllib3 visdom fire git+https://github.com/pytorch/tnt.git@master tqdm ipdb virtualenv tensorflow-gpu==1.4.0 tensorboard==1.11.0 torch==0.4.0 torchvision \\\n && pip3 install tqdm fire SimpleITK pydicom lmdb Cython imageio easydict pandas medicaltorch jupyter scikit-image pillow dominate requests cffi dlib tensorflow-gpu==1.4.0 tensorboard==1.11.0 torch==0.4.1 torchvision datetime scipy matplotlib opencv-python\nWORKDIR /opt\nRUN git clone https://github.com/NVIDIA/nccl.git \\\n && cd nccl \\\n && make -j install \\\n && cd .. \\\n && rm -rf nccl\nWORKDIR /\n","injectedSmells":[],"originalDockerfileHash":"bbffd47206dd4520c26e4f23c5da8857","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   This image contains all the libs and environment necessary for compiling and running Faster R-CNN\nFROM 10.11.3.8:5000/nvidia/cuda:8.0-cudnn6-devel-ubuntu16.04\n#  FROM nvidia/cuda:8.0-cudnn6-devel-ubuntu16.04\nENV LD_LIBRARY_PATH=\"/usr/local/cuda/lib64:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:$LD_LIBRARY_PATH\" \\\n    PATH=\"/usr/local/cuda-8.0/bin:$PATH\"\nENV LC_ALL=\"C\"\nRUN sed -i 's/archive.ubuntu.com/mirrors.ustc.edu.cn/g' /etc/apt/sources.list \\\n && apt-get update \\\n && apt-get install --no-install-recommends build-essential cmake git wget libatlas-base-dev libboost-all-dev libgflags-dev libgoogle-glog-dev libhdf5-serial-dev libleveldb-dev liblmdb-dev libopencv-dev libprotobuf-dev libsnappy-dev protobuf-compiler python-dev python-numpy python-pip python-setuptools python-scipy nano libopenblas-dev liblapack-dev python-tk openssh-client openssh-server autossh expect -y \\\n && apt-get install --no-install-recommends libboost-all-dev \\\n && apt-get install libopenblas-dev liblapack-dev libatlas-base-dev libgflags-dev libgoogle-glog-dev liblmdb-dev gfortran \\\n && apt-get install build-essential git libprotobuf-dev libleveldb-dev libsnappy-dev libopencv-dev libboost-all-dev libhdf5-serial-dev libgflags-dev libgoogle-glog-dev liblmdb-dev protobuf-compiler protobuf-c-compiler libyaml-dev libffi-dev libssl-dev python-dev python-pip python3-pip python3-tk python-tk liblmdb-dev time vim screen tmux -y\nRUN mkdir ~/.pip \\\n && echo \"[global]\" > ~/.pip/pip.conf \\\n && echo \"index-url=https://pypi.tuna.tsinghua.edu.cn/simple\" >> ~/.pip/pip.conf \\\n && echo \"format = columns\" >> ~/.pip/pip.conf\nRUN pip install pip --upgrade \\\n && pip3 install --upgrade pip\nRUN pip2 install scikit-image Cython numpy==1.15.2 absl-py==0.2.2 albumentations==0.1.2 cupy-cuda80==4.4.1 cycler==0.10.0 jupyter jupyter-tensorboard==0.1.8 Keras==2.2.0 opencv-python==3.4.2.17 scipy matplotlib==2.2.3 ipython==5.6.0 h5py leveldb networkx nose python-dateutil pandas protobuf python-gflags pyyaml Pillow six decorator==4.3.0 opencv-python easydict lmdb sklearn scikit-image h5py leveldb imageio cython packaging SimpleITK pydicom tqdm cffi tensorboardX urllib3 visdom fire git+https://github.com/pytorch/tnt.git@master tqdm ipdb virtualenv tensorflow-gpu==1.4.0 tensorboard==1.11.0 torch==0.4.0 torchvision \\\n && pip3 install tqdm fire SimpleITK pydicom lmdb Cython imageio easydict pandas medicaltorch jupyter scikit-image pillow dominate requests cffi dlib tensorflow-gpu==1.4.0 tensorboard==1.11.0 torch==0.4.1 torchvision datetime scipy matplotlib opencv-python\nWORKDIR /opt\nRUN git clone https://github.com/NVIDIA/nccl.git \\\n && cd nccl \\\n && make -j install \\\n && cd .. \\\n && rm -rf nccl\nWORKDIR /\n","originalDockerfileUglifiedHash":"b1feb69412706730692112c9ab419acb","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/c642f294b982e31326b6a6b4b95578b6e00e2bd9.dockerfile"}