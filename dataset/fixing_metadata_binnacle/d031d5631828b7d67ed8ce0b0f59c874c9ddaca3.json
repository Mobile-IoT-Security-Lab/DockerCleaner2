{"seed":4130609099,"processedDockerfileHash":"472e2f0d6896e2d0d7ee2b34edcd39bd","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","pin-package-manager-versions-npm","use-copy-instead-of-add","have-a-healthcheck"],"processedDockerfile":"FROM ubuntu:18.04\n#   Application parameters and variables\nENV NODE_ENV=\"production\"\nENV HOST=\"0.0.0.0\"\nENV PORT=\"3000\"\nENV application_directory=\"/usr/src/app\"\nENV ENABLE_XVBF=\"true\"\nENV CHROMEDRIVER_SKIP_DOWNLOAD=\"true\"\n#   Build Args\nARG USE_CHROME_STABLE\n#   Configuration for Chrome\nENV CONNECTION_TIMEOUT=\"60000\"\nENV CHROME_PATH=\"/usr/bin/google-chrome\"\nENV USE_CHROME_STABLE=\"${USE_CHROME_STABLE}\"\nRUN mkdir -p $application_directory\nWORKDIR $application_directory\n#   Install app dependencies\nCOPY package.json .\nCOPY tsconfig.json .\n#   Bundle app source\nCOPY . .\n#   Dependencies + NodeJS\nRUN apt-get update -qq \\\n && echo \"ttf-mscorefonts-installer msttcorefonts/accepted-mscorefonts-eula select true\" | debconf-set-selections \\\n && apt-get install --no-install-recommends software-properties-common=0.96.24.32.20 -y -qq \\\n && apt-add-repository \"deb http://archive.canonical.com/ubuntu $( lsb_release -sc ;) partner\" \\\n && apt-add-repository ppa:malteworld/ppa \\\n && apt-get update -qq \\\n && apt-get install --no-install-recommends adobe-flashplugin msttcorefonts fonts-noto-color-emoji=0~20180810-0ubuntu1 fonts-noto-cjk=1:20190409+repack1-0ubuntu0.18.04 fonts-liberation=1:1.07.4-7~18.04.1 fonts-thai-tlwg=1:0.6.4-2 fonts-indic=2:1.2 fontconfig=2.12.6-0ubuntu2 libappindicator3-1=12.10.1+18.04.20200408.1-0ubuntu1 pdftk unzip=6.0-21ubuntu1.2 locales=2.27-3ubuntu1.6 gconf-service=3.2.6-4ubuntu1 libasound2=1.1.3-5ubuntu0.6 libatk1.0-0=2.28.1-1 libc6=2.27-3ubuntu1.6 libcairo2=1.15.10-2ubuntu0.1 libcups2=2.2.7-1ubuntu2.9 libdbus-1-3=1.12.2-1ubuntu1.4 libexpat1=2.2.5-3ubuntu0.9 libfontconfig1=2.12.6-0ubuntu2 libgcc1=1:8.4.0-1ubuntu1~18.04 libgconf-2-4=3.2.6-4ubuntu1 libgdk-pixbuf2.0-0=2.36.11-2 libglib2.0-0=2.56.4-0ubuntu0.18.04.9 libgtk-3-0=3.22.30-1ubuntu4 libnspr4=2:4.18-1ubuntu1 libpango-1.0-0=1.40.14-1ubuntu0.1 libpangocairo-1.0-0=1.40.14-1ubuntu0.1 libstdc++6=8.4.0-1ubuntu1~18.04 libx11-6=2:1.6.4-3ubuntu0.4 libx11-xcb1=2:1.6.4-3ubuntu0.4 libxcb1=1.13-2~ubuntu18.04 libxcomposite1=1:0.4.4-2 libxcursor1=1:1.1.15-1 libxdamage1=1:1.1.4-3 libxext6=2:1.3.3-1 libxfixes3=1:5.0.3-1 libxi6=2:1.7.9-1 libxrandr2=2:1.5.1-1 libxrender1=1:0.9.10-1 libxss1=1:1.2.2-1 libxtst6=2:1.2.3-1 ca-certificates=20211016ubuntu0.18.04.1 libappindicator1=12.10.1+18.04.20200408.1-0ubuntu1 libnss3=2:3.35-2ubuntu2.16 lsb-release=9.20170808ubuntu1 xdg-utils=1.1.2-1ubuntu2.5 wget=1.19.4-1ubuntu2.2 xvfb=2:1.19.6-1ubuntu4.14 curl=7.58.0-2ubuntu3.24 -y -qq \\\n && curl --silent --location https://deb.nodesource.com/setup_10.x | bash - \\\n && apt-get install --no-install-recommends nodejs=8.10.0~dfsg-2ubuntu0.4 -y -qq \\\n && apt-get install --no-install-recommends build-essential=12.4ubuntu1 -y -qq \\\n && fc-cache -f -v\n#   It's a good idea to use dumb-init to help prevent zombie chrome processes.\nRUN which wget &> /dev/null || apt-get install --no-install-recommends wget=1.20.3 ; wget --no-verbose --output-document /usr/local/bin/dumb-init https://github.com/Yelp/dumb-init/releases/download/v1.2.0/dumb-init_1.2.0_amd64\nRUN chmod +x /usr/local/bin/dumb-init\n#   Install Chrome Stable when specified\nRUN if [ \"$USE_CHROME_STABLE\" = \"true\" ] ; then cd /tmp \\\n && wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb \\\n && dpkg -i google-chrome-stable_current_amd64.deb ; fi\n#   Build\nRUN if [ \"$USE_CHROME_STABLE\" = \"true\" ] ; then export PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true ; fi \\\n && npm install typescript@5.0.4 @types/node -g \\\n && npm install \\\n && npm run build \\\n && npm run symlink-chrome \\\n && npm run install-chromedriver \\\n && npm run meta\n#   Cleanup\nRUN apt-get -qq clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#   Add user\nRUN groupadd -r blessuser \\\n && useradd -r -g blessuser -G audio,video blessuser \\\n && mkdir -p /home/blessuser/Downloads \\\n && chown -R blessuser:blessuser /home/blessuser \\\n && chown -R blessuser:blessuser $application_directory\n#   Run everything after as non-privileged user.\nUSER blessuser\n#   Expose the web-socket and HTTP ports\nEXPOSE 3000/tcp\nENTRYPOINT [\"dumb-init\", \"--\"]\nCMD [\"node\", \"./build/index.js\"]\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:18.04\n#  Application parameters and variables\nENV NODE_ENV=\"production\"\nENV HOST=\"0.0.0.0\"\nENV PORT=\"3000\"\nENV application_directory=\"/usr/src/app\"\nENV ENABLE_XVBF=\"true\"\nENV CHROMEDRIVER_SKIP_DOWNLOAD=\"true\"\n#  Build Args\nARG USE_CHROME_STABLE\n#  Configuration for Chrome\nENV CONNECTION_TIMEOUT=\"60000\"\nENV CHROME_PATH=\"/usr/bin/google-chrome\"\nENV USE_CHROME_STABLE=\"${USE_CHROME_STABLE}\"\nRUN mkdir -p $application_directory\nWORKDIR $application_directory\n#  Install app dependencies\nCOPY package.json .\nCOPY tsconfig.json .\n#  Bundle app source\nCOPY . .\n#  Dependencies + NodeJS\nRUN apt-get update -qq \\\n && echo \"ttf-mscorefonts-installer msttcorefonts/accepted-mscorefonts-eula select true\" | debconf-set-selections \\\n && apt-get install software-properties-common -y -qq \\\n && apt-add-repository \"deb http://archive.canonical.com/ubuntu $( lsb_release -sc ;) partner\" \\\n && apt-add-repository ppa:malteworld/ppa \\\n && apt-get update -qq \\\n && apt-get install adobe-flashplugin msttcorefonts fonts-noto-color-emoji fonts-noto-cjk fonts-liberation fonts-thai-tlwg fonts-indic fontconfig libappindicator3-1 pdftk unzip locales gconf-service libasound2 libatk1.0-0 libc6 libcairo2 libcups2 libdbus-1-3 libexpat1 libfontconfig1 libgcc1 libgconf-2-4 libgdk-pixbuf2.0-0 libglib2.0-0 libgtk-3-0 libnspr4 libpango-1.0-0 libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1 libxcb1 libxcomposite1 libxcursor1 libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 libxtst6 ca-certificates libappindicator1 libnss3 lsb-release xdg-utils wget xvfb curl -y -qq \\\n && curl --silent --location https://deb.nodesource.com/setup_10.x | bash - \\\n && apt-get install nodejs -y -qq \\\n && apt-get install build-essential -y -qq \\\n && fc-cache -f -v\n#  It's a good idea to use dumb-init to help prevent zombie chrome processes.\nADD https://github.com/Yelp/dumb-init/releases/download/v1.2.0/dumb-init_1.2.0_amd64 /usr/local/bin/dumb-init\nRUN chmod +x /usr/local/bin/dumb-init\n#  Install Chrome Stable when specified\nRUN if [ \"$USE_CHROME_STABLE\" = \"true\" ] ; then cd /tmp \\\n && wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb \\\n && dpkg -i google-chrome-stable_current_amd64.deb ; fi\n#  Build\nRUN if [ \"$USE_CHROME_STABLE\" = \"true\" ] ; then export PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true ; fi \\\n && npm install typescript @types/node -g \\\n && npm install \\\n && npm run build \\\n && npm run symlink-chrome \\\n && npm run install-chromedriver \\\n && npm run meta\n#  Cleanup\nRUN apt-get -qq clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#  Add user\nRUN groupadd -r blessuser \\\n && useradd -r -g blessuser -G audio,video blessuser \\\n && mkdir -p /home/blessuser/Downloads \\\n && chown -R blessuser:blessuser /home/blessuser \\\n && chown -R blessuser:blessuser $application_directory\n#  Run everything after as non-privileged user.\nUSER blessuser\n#  Expose the web-socket and HTTP ports\nEXPOSE 3000/tcp\nENTRYPOINT [\"dumb-init\", \"--\"]\nCMD [\"node\", \"./build/index.js\"]\n","injectedSmells":[],"originalDockerfileHash":"9141f543843d4451b00615e4f63417cb","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:18.04\n#   Application parameters and variables\nENV NODE_ENV=\"production\"\nENV HOST=\"0.0.0.0\"\nENV PORT=\"3000\"\nENV application_directory=\"/usr/src/app\"\nENV ENABLE_XVBF=\"true\"\nENV CHROMEDRIVER_SKIP_DOWNLOAD=\"true\"\n#   Build Args\nARG USE_CHROME_STABLE\n#   Configuration for Chrome\nENV CONNECTION_TIMEOUT=\"60000\"\nENV CHROME_PATH=\"/usr/bin/google-chrome\"\nENV USE_CHROME_STABLE=\"${USE_CHROME_STABLE}\"\nRUN mkdir -p $application_directory\nWORKDIR $application_directory\n#   Install app dependencies\nCOPY package.json .\nCOPY tsconfig.json .\n#   Bundle app source\nCOPY . .\n#   Dependencies + NodeJS\nRUN apt-get update -qq \\\n && echo \"ttf-mscorefonts-installer msttcorefonts/accepted-mscorefonts-eula select true\" | debconf-set-selections \\\n && apt-get install software-properties-common -y -qq \\\n && apt-add-repository \"deb http://archive.canonical.com/ubuntu $( lsb_release -sc ;) partner\" \\\n && apt-add-repository ppa:malteworld/ppa \\\n && apt-get update -qq \\\n && apt-get install adobe-flashplugin msttcorefonts fonts-noto-color-emoji fonts-noto-cjk fonts-liberation fonts-thai-tlwg fonts-indic fontconfig libappindicator3-1 pdftk unzip locales gconf-service libasound2 libatk1.0-0 libc6 libcairo2 libcups2 libdbus-1-3 libexpat1 libfontconfig1 libgcc1 libgconf-2-4 libgdk-pixbuf2.0-0 libglib2.0-0 libgtk-3-0 libnspr4 libpango-1.0-0 libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1 libxcb1 libxcomposite1 libxcursor1 libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 libxtst6 ca-certificates libappindicator1 libnss3 lsb-release xdg-utils wget xvfb curl -y -qq \\\n && curl --silent --location https://deb.nodesource.com/setup_10.x | bash - \\\n && apt-get install nodejs -y -qq \\\n && apt-get install build-essential -y -qq \\\n && fc-cache -f -v\n#   It's a good idea to use dumb-init to help prevent zombie chrome processes.\nADD https://github.com/Yelp/dumb-init/releases/download/v1.2.0/dumb-init_1.2.0_amd64 /usr/local/bin/dumb-init\nRUN chmod +x /usr/local/bin/dumb-init\n#   Install Chrome Stable when specified\nRUN if [ \"$USE_CHROME_STABLE\" = \"true\" ] ; then cd /tmp \\\n && wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb \\\n && dpkg -i google-chrome-stable_current_amd64.deb ; fi\n#   Build\nRUN if [ \"$USE_CHROME_STABLE\" = \"true\" ] ; then export PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true ; fi \\\n && npm install typescript @types/node -g \\\n && npm install \\\n && npm run build \\\n && npm run symlink-chrome \\\n && npm run install-chromedriver \\\n && npm run meta\n#   Cleanup\nRUN apt-get -qq clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#   Add user\nRUN groupadd -r blessuser \\\n && useradd -r -g blessuser -G audio,video blessuser \\\n && mkdir -p /home/blessuser/Downloads \\\n && chown -R blessuser:blessuser /home/blessuser \\\n && chown -R blessuser:blessuser $application_directory\n#   Run everything after as non-privileged user.\nUSER blessuser\n#   Expose the web-socket and HTTP ports\nEXPOSE 3000/tcp\nENTRYPOINT [\"dumb-init\", \"--\"]\nCMD [\"node\", \"./build/index.js\"]\n","originalDockerfileUglifiedHash":"48e13f24ef27111784865f5180664415","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/d031d5631828b7d67ed8ce0b0f59c874c9ddaca3.dockerfile"}