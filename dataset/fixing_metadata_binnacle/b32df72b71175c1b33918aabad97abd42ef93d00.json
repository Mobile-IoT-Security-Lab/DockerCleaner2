{"seed":3635190255,"processedDockerfileHash":"fc8504e4102ad5e046b7390660921641","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM nvidia/cuda:8.0-cudnn7-devel-ubuntu16.04\nRUN echo 'building GPU DeepDetect image'\nMAINTAINER Emmanuel Benazera \"beniz@droidnik.fr\"\nLABEL description=\"DeepDetect deep learning server & API / GPU version\"\nRUN ln -sf /dev/stdout /var/log/deepdetect.log\nRUN ln -sf /dev/stderr /var/log/deepdetect.log\nRUN useradd -ms /bin/bash dd\nRUN apt-get update \\\n && apt-get install --no-install-recommends git cmake automake build-essential openjdk-8-jdk pkg-config zip g++ zlib1g-dev libgoogle-glog-dev libgflags-dev libeigen3-dev libopencv-dev libcppnetlib-dev libboost-dev libboost-iostreams-dev libcurlpp-dev libcurl4-openssl-dev protobuf-compiler libopenblas-dev libhdf5-dev libprotobuf-dev libleveldb-dev libsnappy-dev liblmdb-dev libutfcpp-dev wget autoconf libtool-bin python-numpy swig python-dev python-setuptools python-wheel unzip libgoogle-perftools-dev screen vim strace curl libarchive-dev libspdlog-dev python-setuptools python-dev bash-completion ca-certificates -y \\\n && wget -O /tmp/bazel.deb https://github.com/bazelbuild/bazel/releases/download/0.8.1/bazel_0.8.1-linux-x86_64.deb \\\n && dpkg -i /tmp/bazel.deb \\\n && apt-get remove -y libcurlpp0 \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\nWORKDIR /opt\nRUN wget -O /opt/curlpp-v0.8.1.zip https://github.com/jpbarrette/curlpp/archive/v0.8.1.zip \\\n && unzip curlpp-v0.8.1.zip \\\n && cd curlpp-0.8.1 \\\n && cmake . \\\n && make install \\\n && cp /usr/local/lib/libcurlpp.* /usr/lib/ \\\n && cd /opt \\\n && rm -rf curlpp-0.8.1 curlpp-v0.8.1.zip\n#   Temporary work around to fix https://github.com/tensorflow/tensorflow/issues/8264\nRUN if [ ! -f /usr/local/cuda/include/cudnn.h -a -f /usr/include/cudnn.h ] ; then ln -s /usr/include/cudnn.h /usr/local/cuda/include/ ; fi \\\n && if [ ! -f /usr/local/cuda/lib64/libcudnn.so -a -f /usr/lib/x86_64-linux-gnu/libcudnn.so ] ; then ln -s /usr/lib/x86_64-linux-gnu/libcudnn* /usr/local/cuda/lib64/ ; fi\nWORKDIR /opt\nRUN git clone https://github.com/beniz/deepdetect.git \\\n && cd deepdetect \\\n && mkdir build\nWORKDIR /opt/deepdetect/build\nRUN export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/cuda/lib64\nRUN echo \"/usr/local/cuda-8.0/targets/x86_64-linux/lib/stubs\" > /etc/ld.so.conf.d/cuda-8.0-stubs.conf \\\n && ldconfig\nRUN cmake .. -DUSE_TF=ON -DUSE_TF_CPU_ONLY=ON -DUSE_CUDNN=ON -DUSE_XGBOOST=ON -DUSE_SIMSEARCH=ON -DUSE_TSNE=ON -DCUDA_ARCH=\"-gencode arch=compute_30,code=sm_30 -gencode arch=compute_35,code=sm_35 -gencode arch=compute_50,code=sm_50 -gencode arch=compute_52,code=sm_52 -gencode arch=compute_53,code=sm_53 -gencode arch=compute_61,code=sm_61\" \\\n && make\n#   external volume to be mapped, e.g. for models or training data\nRUN mkdir /data\nVOLUME [\"/data\"]\n#   include a few image models within the image\nRUN mkdir /opt/models\nWORKDIR /opt/models\nRUN mkdir ggnet \\\n && cd ggnet \\\n && wget http://www.deepdetect.com/models/ggnet/bvlc_googlenet.caffemodel\nRUN mkdir resnet_50 \\\n && cd resnet_50 \\\n && wget http://www.deepdetect.com/models/resnet/ResNet-50-model.caffemodel \\\n && wget http://www.deepdetect.com/models/resnet/ResNet_mean.binaryproto\nRUN mv /opt/models/resnet_50/ResNet_mean.binaryproto /opt/models/resnet_50/mean.binaryproto\nRUN cp /opt/deepdetect/datasets/imagenet/corresp_ilsvrc12.txt /opt/models/ggnet/corresp.txt\nRUN cp /opt/deepdetect/datasets/imagenet/corresp_ilsvrc12.txt /opt/models/resnet_50/corresp.txt\nRUN cp /opt/deepdetect/templates/caffe/googlenet/*prototxt /opt/models/ggnet/\nRUN cp /opt/deepdetect/templates/caffe/resnet_50/*prototxt /opt/models/resnet_50/\n#   permissions\nRUN chown -R dd:dd /opt/deepdetect\nRUN chown -R dd:dd /opt/models\nWORKDIR /opt/deepdetect/build/main\nCMD ./dede -host 0.0.0.0\nEXPOSE 8080/tcp\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM nvidia/cuda:8.0-cudnn7-devel-ubuntu16.04\nRUN echo 'building GPU DeepDetect image'\nMAINTAINER Emmanuel Benazera \"beniz@droidnik.fr\"\nLABEL description=\"DeepDetect deep learning server & API / GPU version\"\nRUN ln -sf /dev/stdout /var/log/deepdetect.log\nRUN ln -sf /dev/stderr /var/log/deepdetect.log\nRUN useradd -ms /bin/bash dd\nRUN apt-get update \\\n && apt-get install --no-install-recommends git cmake automake build-essential openjdk-8-jdk pkg-config zip g++ zlib1g-dev libgoogle-glog-dev libgflags-dev libeigen3-dev libopencv-dev libcppnetlib-dev libboost-dev libboost-iostreams-dev libcurlpp-dev libcurl4-openssl-dev protobuf-compiler libopenblas-dev libhdf5-dev libprotobuf-dev libleveldb-dev libsnappy-dev liblmdb-dev libutfcpp-dev wget autoconf libtool-bin python-numpy swig python-dev python-setuptools python-wheel unzip libgoogle-perftools-dev screen vim strace curl libarchive-dev libspdlog-dev python-setuptools python-dev bash-completion ca-certificates -y \\\n && wget -O /tmp/bazel.deb https://github.com/bazelbuild/bazel/releases/download/0.8.1/bazel_0.8.1-linux-x86_64.deb \\\n && dpkg -i /tmp/bazel.deb \\\n && apt-get remove -y libcurlpp0 \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\nWORKDIR /opt\nRUN wget -O /opt/curlpp-v0.8.1.zip https://github.com/jpbarrette/curlpp/archive/v0.8.1.zip \\\n && unzip curlpp-v0.8.1.zip \\\n && cd curlpp-0.8.1 \\\n && cmake . \\\n && make install \\\n && cp /usr/local/lib/libcurlpp.* /usr/lib/ \\\n && cd /opt \\\n && rm -rf curlpp-0.8.1 curlpp-v0.8.1.zip\n#  Temporary work around to fix https://github.com/tensorflow/tensorflow/issues/8264\nRUN if [ ! -f /usr/local/cuda/include/cudnn.h -a -f /usr/include/cudnn.h ] ; then ln -s /usr/include/cudnn.h /usr/local/cuda/include/ ; fi \\\n && if [ ! -f /usr/local/cuda/lib64/libcudnn.so -a -f /usr/lib/x86_64-linux-gnu/libcudnn.so ] ; then ln -s /usr/lib/x86_64-linux-gnu/libcudnn* /usr/local/cuda/lib64/ ; fi\nWORKDIR /opt\nRUN git clone https://github.com/beniz/deepdetect.git \\\n && cd deepdetect \\\n && mkdir build\nWORKDIR /opt/deepdetect/build\nRUN export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/cuda/lib64\nRUN echo \"/usr/local/cuda-8.0/targets/x86_64-linux/lib/stubs\" > /etc/ld.so.conf.d/cuda-8.0-stubs.conf \\\n && ldconfig\nRUN cmake .. -DUSE_TF=ON -DUSE_TF_CPU_ONLY=ON -DUSE_CUDNN=ON -DUSE_XGBOOST=ON -DUSE_SIMSEARCH=ON -DUSE_TSNE=ON -DCUDA_ARCH=\"-gencode arch=compute_30,code=sm_30 -gencode arch=compute_35,code=sm_35 -gencode arch=compute_50,code=sm_50 -gencode arch=compute_52,code=sm_52 -gencode arch=compute_53,code=sm_53 -gencode arch=compute_61,code=sm_61\" \\\n && make\n#  external volume to be mapped, e.g. for models or training data\nRUN mkdir /data\nVOLUME [\"/data\"]\n#  include a few image models within the image\nRUN mkdir /opt/models\nWORKDIR /opt/models\nRUN mkdir ggnet \\\n && cd ggnet \\\n && wget http://www.deepdetect.com/models/ggnet/bvlc_googlenet.caffemodel\nRUN mkdir resnet_50 \\\n && cd resnet_50 \\\n && wget http://www.deepdetect.com/models/resnet/ResNet-50-model.caffemodel \\\n && wget http://www.deepdetect.com/models/resnet/ResNet_mean.binaryproto\nRUN mv /opt/models/resnet_50/ResNet_mean.binaryproto /opt/models/resnet_50/mean.binaryproto\nRUN cp /opt/deepdetect/datasets/imagenet/corresp_ilsvrc12.txt /opt/models/ggnet/corresp.txt\nRUN cp /opt/deepdetect/datasets/imagenet/corresp_ilsvrc12.txt /opt/models/resnet_50/corresp.txt\nRUN cp /opt/deepdetect/templates/caffe/googlenet/*prototxt /opt/models/ggnet/\nRUN cp /opt/deepdetect/templates/caffe/resnet_50/*prototxt /opt/models/resnet_50/\n#  permissions\nRUN chown -R dd:dd /opt/deepdetect\nRUN chown -R dd:dd /opt/models\nWORKDIR /opt/deepdetect/build/main\nCMD ./dede -host 0.0.0.0\nEXPOSE 8080/tcp\n","injectedSmells":[],"originalDockerfileHash":"a8ead5683caee34480587277d8ac99ef","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM nvidia/cuda:8.0-cudnn7-devel-ubuntu16.04\nRUN echo 'building GPU DeepDetect image'\nMAINTAINER Emmanuel Benazera \"beniz@droidnik.fr\"\nLABEL description=\"DeepDetect deep learning server & API / GPU version\"\nRUN ln -sf /dev/stdout /var/log/deepdetect.log\nRUN ln -sf /dev/stderr /var/log/deepdetect.log\nRUN useradd -ms /bin/bash dd\nRUN apt-get update \\\n && apt-get install --no-install-recommends git cmake automake build-essential openjdk-8-jdk pkg-config zip g++ zlib1g-dev libgoogle-glog-dev libgflags-dev libeigen3-dev libopencv-dev libcppnetlib-dev libboost-dev libboost-iostreams-dev libcurlpp-dev libcurl4-openssl-dev protobuf-compiler libopenblas-dev libhdf5-dev libprotobuf-dev libleveldb-dev libsnappy-dev liblmdb-dev libutfcpp-dev wget autoconf libtool-bin python-numpy swig python-dev python-setuptools python-wheel unzip libgoogle-perftools-dev screen vim strace curl libarchive-dev libspdlog-dev python-setuptools python-dev bash-completion ca-certificates -y \\\n && wget -O /tmp/bazel.deb https://github.com/bazelbuild/bazel/releases/download/0.8.1/bazel_0.8.1-linux-x86_64.deb \\\n && dpkg -i /tmp/bazel.deb \\\n && apt-get remove -y libcurlpp0 \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\nWORKDIR /opt\nRUN wget -O /opt/curlpp-v0.8.1.zip https://github.com/jpbarrette/curlpp/archive/v0.8.1.zip \\\n && unzip curlpp-v0.8.1.zip \\\n && cd curlpp-0.8.1 \\\n && cmake . \\\n && make install \\\n && cp /usr/local/lib/libcurlpp.* /usr/lib/ \\\n && cd /opt \\\n && rm -rf curlpp-0.8.1 curlpp-v0.8.1.zip\n#   Temporary work around to fix https://github.com/tensorflow/tensorflow/issues/8264\nRUN if [ ! -f /usr/local/cuda/include/cudnn.h -a -f /usr/include/cudnn.h ] ; then ln -s /usr/include/cudnn.h /usr/local/cuda/include/ ; fi \\\n && if [ ! -f /usr/local/cuda/lib64/libcudnn.so -a -f /usr/lib/x86_64-linux-gnu/libcudnn.so ] ; then ln -s /usr/lib/x86_64-linux-gnu/libcudnn* /usr/local/cuda/lib64/ ; fi\nWORKDIR /opt\nRUN git clone https://github.com/beniz/deepdetect.git \\\n && cd deepdetect \\\n && mkdir build\nWORKDIR /opt/deepdetect/build\nRUN export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/cuda/lib64\nRUN echo \"/usr/local/cuda-8.0/targets/x86_64-linux/lib/stubs\" > /etc/ld.so.conf.d/cuda-8.0-stubs.conf \\\n && ldconfig\nRUN cmake .. -DUSE_TF=ON -DUSE_TF_CPU_ONLY=ON -DUSE_CUDNN=ON -DUSE_XGBOOST=ON -DUSE_SIMSEARCH=ON -DUSE_TSNE=ON -DCUDA_ARCH=\"-gencode arch=compute_30,code=sm_30 -gencode arch=compute_35,code=sm_35 -gencode arch=compute_50,code=sm_50 -gencode arch=compute_52,code=sm_52 -gencode arch=compute_53,code=sm_53 -gencode arch=compute_61,code=sm_61\" \\\n && make\n#   external volume to be mapped, e.g. for models or training data\nRUN mkdir /data\nVOLUME [\"/data\"]\n#   include a few image models within the image\nRUN mkdir /opt/models\nWORKDIR /opt/models\nRUN mkdir ggnet \\\n && cd ggnet \\\n && wget http://www.deepdetect.com/models/ggnet/bvlc_googlenet.caffemodel\nRUN mkdir resnet_50 \\\n && cd resnet_50 \\\n && wget http://www.deepdetect.com/models/resnet/ResNet-50-model.caffemodel \\\n && wget http://www.deepdetect.com/models/resnet/ResNet_mean.binaryproto\nRUN mv /opt/models/resnet_50/ResNet_mean.binaryproto /opt/models/resnet_50/mean.binaryproto\nRUN cp /opt/deepdetect/datasets/imagenet/corresp_ilsvrc12.txt /opt/models/ggnet/corresp.txt\nRUN cp /opt/deepdetect/datasets/imagenet/corresp_ilsvrc12.txt /opt/models/resnet_50/corresp.txt\nRUN cp /opt/deepdetect/templates/caffe/googlenet/*prototxt /opt/models/ggnet/\nRUN cp /opt/deepdetect/templates/caffe/resnet_50/*prototxt /opt/models/resnet_50/\n#   permissions\nRUN chown -R dd:dd /opt/deepdetect\nRUN chown -R dd:dd /opt/models\nWORKDIR /opt/deepdetect/build/main\nCMD ./dede -host 0.0.0.0\nEXPOSE 8080/tcp\n","originalDockerfileUglifiedHash":"9947d8d8ca1bff17bc88bf428064a0a3","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/b32df72b71175c1b33918aabad97abd42ef93d00.dockerfile"}