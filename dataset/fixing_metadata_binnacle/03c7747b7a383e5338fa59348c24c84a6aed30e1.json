{"seed":4249437330,"processedDockerfileHash":"a8916e17fe82824fc7f057bac4b627c3","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM ubuntu:18.04\nARG OUR_IMAGE_VERSION=v2.2.6\nARG OUR_IMAGE_TAG=${OUR_IMAGE_TAG:-$OUR_IMAGE_VERSION}\n#   flag for apt-get - affects only build time\nARG DEBIAN_FRONTEND=noninteractive\nARG DOCKRUN_PREFIX=\"dockrun_\"\nARG hack_OUR_IMAGE=\"t3docs/render-documentation:${OUR_IMAGE_TAG}\"\nARG hack_OUR_IMAGE_SHORT=\"t3rd\"\nARG OUR_IMAGE_SLOGAN=\"t3rd - TYPO3 render documentation\"\nENV LC_ALL=\"C.UTF-8\" \\\n    LANG=\"C.UTF-8\" \\\n    HOME=\"/ALL/userhome\" \\\n    TOOLCHAIN_VERSION=\"2.6.1\" \\\n    TOOLCHAIN_UNPACKED=\"Toolchain_RenderDocumentation-2.6.1\" \\\n    TOOLCHAIN_URL=\"https://github.com/marble/Toolchain_RenderDocumentation/archive/v2.6.1.zip\" \\\n    TYPOSCRIPT_PY_VERSION=\"v2.2.4\" \\\n    TYPOSCRIPT_PY_URL=\"https://raw.githubusercontent.com/TYPO3-Documentation/Pygments-TypoScript-Lexer/v2.2.4/typoscript.py\" \\\n    OUR_IMAGE=\"$hack_OUR_IMAGE\" \\\n    OUR_IMAGE_SHORT=\"$hack_OUR_IMAGE_SHORT\" \\\n    THEME_VERSION=\"3.6.16\" \\\n    THEME_MTIME=\"1530870718\"\nLABEL Maintainer=\"TYPO3 Documentation Team\" \\\n      Description=\"This image renders TYPO3 documentation.\" \\\n      Vendor=\"t3docs\" \\\n      Version=\"$OUR_IMAGE_VERSION\"\nCOPY ALL-for-build /ALL\nWORKDIR /ALL/venv\nRUN true \"Create executable COMMENT as a workaround to allow commenting here\" \\\n && cp /bin/true /bin/COMMENT \\\n && COMMENT \"Garantee folders\" \\\n && mkdir /PROJECT \\\n && mkdir /RESULT \\\n && COMMENT \"Avoid GIT bug\" \\\n && cp /ALL/global-gitconfig.cfg /root/.gitconfig \\\n && cp /ALL/global-gitconfig.cfg /.gitconfig \\\n && chmod 666 /.gitconfig \\\n && COMMENT \"Make sure other users can write\" \\\n && chmod -R o+w /ALL/Makedir /ALL/dummy_webroot /RESULT \\\n && COMMENT \"Install and upgrade system packages\" \\\n && apt-get update \\\n && apt-get upgrade -qy \\\n && apt-get install --no-install-recommends python-pip=9.0.1-2.3~ubuntu1.18.04.8 -yq \\\n && COMMENT \"What the toolchains needs\" \\\n && apt-get install --no-install-recommends moreutils=0.60-1 pandoc=1.19.2.4~dfsg-1build4 rsync=3.1.2-2.1ubuntu1.6 tidy=1:5.2.0-2 unzip=6.0-21ubuntu1.2 wget=1.19.4-1ubuntu2.2 -yq \\\n && COMMENT \"What we need - convenience tools\" \\\n && apt-get install --no-install-recommends less=487-0.1 nano=2.9.3-2 ncdu=1.12-1 -yq \\\n && COMMENT \"Try extra cleaning besides /etc/apt/apt.conf.d/docker-clean\" \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* \\\n && COMMENT \"Python stuff\" \\\n && /usr/bin/pip install --upgrade pip \\\n && apt-get remove python-pip -y \\\n && /usr/local/bin/pip install --upgrade pipenv \\\n && COMMENT \"Disable /ALL/venv/Pipfile.lock - it didn't work reliably\" \\\n && rm -f Pipfile.lock.DISABLED \\\n && if [ -f \"Pipfile.lock\" ] ; then mv Pipfile.lock Pipfile.lock.DISABLED ; fi \\\n && COMMENT \"Install from /ALL/venv/Pipfile\" \\\n && pipenv install \\\n && echo source $( pipenv --venv ;)/bin/activate >> $HOME/.bashrc \\\n && COMMENT \"Provide some special files\" \\\n && wget https://raw.githubusercontent.com/TYPO3-Documentation/typo3-docs-typo3-org-resources/master/userroot/scripts/bin/check_include_files.py --quiet --output-document /usr/local/bin/check_include_files.py \\\n && wget https://raw.githubusercontent.com/TYPO3-Documentation/typo3-docs-typo3-org-resources/master/userroot/scripts/bin/conf-2017-09.py --quiet --output-document /ALL/Makedir/conf-2017-09.py \\\n && wget https://raw.githubusercontent.com/TYPO3-Documentation/typo3-docs-typo3-org-resources/master/userroot/scripts/config/_htaccess-2016-08.txt --quiet --output-document /ALL/Makedir/_htaccess \\\n && wget https://github.com/etobi/Typo3ExtensionUtils/raw/master/bin/t3xutils.phar --quiet --output-document /usr/local/bin/t3xutils.phar \\\n && chmod +x /usr/local/bin/t3xutils.phar \\\n && COMMENT \"All files of the theme of a given theme version should have the\" \\\n && COMMENT \"same mtime (last commit) to not turn off Sphinx caching\" \\\n && python=$( pipenv --venv ;)/bin/python \\\n && destdir=$( dirname $( $python -c \"import t3SphinxThemeRtd; print t3SphinxThemeRtd.__file__\" ;) ;) \\\n && find $destdir -exec touch --no-create --time=mtime --date=\"$( date --rfc-2822 --date=@$THEME_MTIME ;)\" {}\nENTRYPOINT [\"/ALL/Menu/mainmenu.sh\"]\nCMD []\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:18.04\nARG OUR_IMAGE_VERSION=v2.2.6\nARG OUR_IMAGE_TAG=${OUR_IMAGE_TAG:-$OUR_IMAGE_VERSION}\n#  flag for apt-get - affects only build time\nARG DEBIAN_FRONTEND=noninteractive\nARG DOCKRUN_PREFIX=\"dockrun_\"\nARG hack_OUR_IMAGE=\"t3docs/render-documentation:${OUR_IMAGE_TAG}\"\nARG hack_OUR_IMAGE_SHORT=\"t3rd\"\nARG OUR_IMAGE_SLOGAN=\"t3rd - TYPO3 render documentation\"\nENV LC_ALL=\"C.UTF-8\" \\\n    LANG=\"C.UTF-8\" \\\n    HOME=\"/ALL/userhome\" \\\n    TOOLCHAIN_VERSION=\"2.6.1\" \\\n    TOOLCHAIN_UNPACKED=\"Toolchain_RenderDocumentation-2.6.1\" \\\n    TOOLCHAIN_URL=\"https://github.com/marble/Toolchain_RenderDocumentation/archive/v2.6.1.zip\" \\\n    TYPOSCRIPT_PY_VERSION=\"v2.2.4\" \\\n    TYPOSCRIPT_PY_URL=\"https://raw.githubusercontent.com/TYPO3-Documentation/Pygments-TypoScript-Lexer/v2.2.4/typoscript.py\" \\\n    OUR_IMAGE=\"$hack_OUR_IMAGE\" \\\n    OUR_IMAGE_SHORT=\"$hack_OUR_IMAGE_SHORT\" \\\n    THEME_VERSION=\"3.6.16\" \\\n    THEME_MTIME=\"1530870718\"\nLABEL Maintainer=\"TYPO3 Documentation Team\" \\\n      Description=\"This image renders TYPO3 documentation.\" \\\n      Vendor=\"t3docs\" \\\n      Version=\"$OUR_IMAGE_VERSION\"\nCOPY ALL-for-build /ALL\nWORKDIR /ALL/venv\nRUN true \"Create executable COMMENT as a workaround to allow commenting here\" \\\n && cp /bin/true /bin/COMMENT \\\n && COMMENT \"Garantee folders\" \\\n && mkdir /PROJECT \\\n && mkdir /RESULT \\\n && COMMENT \"Avoid GIT bug\" \\\n && cp /ALL/global-gitconfig.cfg /root/.gitconfig \\\n && cp /ALL/global-gitconfig.cfg /.gitconfig \\\n && chmod 666 /.gitconfig \\\n && COMMENT \"Make sure other users can write\" \\\n && chmod -R o+w /ALL/Makedir /ALL/dummy_webroot /RESULT \\\n && COMMENT \"Install and upgrade system packages\" \\\n && apt-get update \\\n && apt-get upgrade -qy \\\n && apt-get install python-pip -yq \\\n && COMMENT \"What the toolchains needs\" \\\n && apt-get install --no-install-recommends moreutils pandoc rsync tidy unzip wget -yq \\\n && COMMENT \"What we need - convenience tools\" \\\n && apt-get install --no-install-recommends less nano ncdu -yq \\\n && COMMENT \"Try extra cleaning besides /etc/apt/apt.conf.d/docker-clean\" \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* \\\n && COMMENT \"Python stuff\" \\\n && /usr/bin/pip install --upgrade pip \\\n && apt-get remove python-pip -y \\\n && /usr/local/bin/pip install --upgrade pipenv \\\n && COMMENT \"Disable /ALL/venv/Pipfile.lock - it didn't work reliably\" \\\n && rm -f Pipfile.lock.DISABLED \\\n && if [ -f \"Pipfile.lock\" ] ; then mv Pipfile.lock Pipfile.lock.DISABLED ; fi \\\n && COMMENT \"Install from /ALL/venv/Pipfile\" \\\n && pipenv install \\\n && echo source $( pipenv --venv ;)/bin/activate >> $HOME/.bashrc \\\n && COMMENT \"Provide some special files\" \\\n && wget https://raw.githubusercontent.com/TYPO3-Documentation/typo3-docs-typo3-org-resources/master/userroot/scripts/bin/check_include_files.py --quiet --output-document /usr/local/bin/check_include_files.py \\\n && wget https://raw.githubusercontent.com/TYPO3-Documentation/typo3-docs-typo3-org-resources/master/userroot/scripts/bin/conf-2017-09.py --quiet --output-document /ALL/Makedir/conf-2017-09.py \\\n && wget https://raw.githubusercontent.com/TYPO3-Documentation/typo3-docs-typo3-org-resources/master/userroot/scripts/config/_htaccess-2016-08.txt --quiet --output-document /ALL/Makedir/_htaccess \\\n && wget https://github.com/etobi/Typo3ExtensionUtils/raw/master/bin/t3xutils.phar --quiet --output-document /usr/local/bin/t3xutils.phar \\\n && chmod +x /usr/local/bin/t3xutils.phar \\\n && COMMENT \"All files of the theme of a given theme version should have the\" \\\n && COMMENT \"same mtime (last commit) to not turn off Sphinx caching\" \\\n && python=$( pipenv --venv ;)/bin/python \\\n && destdir=$( dirname $( $python -c \"import t3SphinxThemeRtd; print t3SphinxThemeRtd.__file__\" ;) ;) \\\n && find $destdir -exec touch --no-create --time=mtime --date=\"$( date --rfc-2822 --date=@$THEME_MTIME ;)\" {} ; \\\n && COMMENT \"Update TypoScript lexer for highlighting. It comes with Sphinx\" \\\n && COMMENT \"but isn't up to date there. So we use it from our own repo.\" \\\n && COMMENT \"usually: /usr/local/lib/python2.7/site-packages/pygments/lexers\" \\\n && python=$( pipenv --venv ;)/bin/python \\\n && destdir=$( dirname $( $python -c \"import pygments; print pygments.__file__\" ;) ;)/lexers \\\n && rm $destdir/typoscript.* \\\n && wget $TYPOSCRIPT_PY_URL --quiet --output-document $destdir/typoscript.py \\\n && curdir=$( pwd ;) ; cd $destdir ; $python _mapping.py ; cd $curdir \\\n && COMMENT \"Provide the toolchain\" \\\n && wget ${TOOLCHAIN_URL} -qO /ALL/Downloads/Toolchain_RenderDocumentation.zip \\\n && unzip /ALL/Downloads/Toolchain_RenderDocumentation.zip -d /ALL/Toolchains \\\n && mv /ALL/Toolchains/${TOOLCHAIN_UNPACKED} /ALL/Toolchains/RenderDocumentation \\\n && rm /ALL/Downloads/Toolchain_RenderDocumentation.zip \\\n && COMMENT \"Download latex files, since we can still render Latex without drawbacks\" \\\n && wget https://github.com/TYPO3-Documentation/latex.typo3/archive/v1.1.0.zip -qO /tmp/latex.typo3-v1.1.0.zip \\\n && unzip /tmp/latex.typo3-v1.1.0.zip -d /tmp \\\n && mv /tmp/latex.typo3-1.1.0 /ALL/Downloads/latex.typo3 \\\n && COMMENT \"Final cleanup\" \\\n && apt-get clean \\\n && rm -rf /tmp/* \\\n && COMMENT \"Memorize the settings in the container\" \\\n && echo \"export DEBIAN_FRONTEND=\\\"${DEBIAN_FRONTEND}\\\"\" >> /ALL/Downloads/envvars.sh \\\n && echo \"export DOCKRUN_PREFIX=\\\"${DOCKRUN_PREFIX}\\\"\" >> /ALL/Downloads/envvars.sh \\\n && echo \"export OUR_IMAGE=\\\"${OUR_IMAGE}\\\"\" >> /ALL/Downloads/envvars.sh \\\n && echo \"export OUR_IMAGE_SHORT=\\\"${OUR_IMAGE_SHORT}\\\"\" >> /ALL/Downloads/envvars.sh \\\n && echo \"export OUR_IMAGE_SLOGAN=\\\"${OUR_IMAGE_SLOGAN}\\\"\" >> /ALL/Downloads/envvars.sh \\\n && echo \"export OUR_IMAGE_TAG=\\\"${OUR_IMAGE_TAG}\\\"\" >> /ALL/Downloads/envvars.sh \\\n && echo \"export OUR_IMAGE_VERSION=\\\"${OUR_IMAGE_VERSION}\\\"\" >> /ALL/Downloads/envvars.sh \\\n && echo \"export TOOLCHAIN_URL=\\\"${TOOLCHAIN_URL}\\\"\" >> /ALL/Downloads/envvars.sh \\\n && COMMENT \"Let's have some debug info\" \\\n && echo \" debug_info DEBIAN_FRONTEND....: ${DEBIAN_FRONTEND}\\n debug_info DOCKRUN_PREFIX.....: ${DOCKRUN_PREFIX}\\n debug_info OUR_IMAGE..........: ${OUR_IMAGE}\\n debug_info OUR_IMAGE_SHORT....: ${OUR_IMAGE_SHORT}\\n debug_info OUR_IMAGE_SLOGAN...: ${OUR_IMAGE_SLOGAN}\\n debug_info OUR_IMAGE_TAG......: ${OUR_IMAGE_TAG}\\n debug_info OUR_IMAGE_VERSION..: ${OUR_IMAGE_VERSION}\\n debug_info TOOLCHAIN_URL......: ${TOOLCHAIN_URL}\\n \\n Versions used for $OUR_IMAGE_VERSION:\\n Sphinx theme t3SphinxThemeRtd $THEME_VERSION mtime:$THEME_MTIME\\n Toolchain RenderDocumentation $TOOLCHAIN_VERSION\\n Toolchain tool TCT 0.3.0\\n TYPO3-Documentation typo3.latex v1.1.0\\n TypoScript lexer typoscript.py $TYPOSCRIPT_PY_VERSION\\n\" | cut -b 7- > /ALL/Downloads/buildinfo.txt \\\n && cat /ALL/Downloads/buildinfo.txt\nENTRYPOINT [\"/ALL/Menu/mainmenu.sh\"]\nCMD []\n","injectedSmells":[],"originalDockerfileHash":"70e427ae4a024249ede46d8cfd494492","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:18.04\nARG OUR_IMAGE_VERSION=v2.2.6\nARG OUR_IMAGE_TAG=${OUR_IMAGE_TAG:-$OUR_IMAGE_VERSION}\n#   flag for apt-get - affects only build time\nARG DEBIAN_FRONTEND=noninteractive\nARG DOCKRUN_PREFIX=\"dockrun_\"\nARG hack_OUR_IMAGE=\"t3docs/render-documentation:${OUR_IMAGE_TAG}\"\nARG hack_OUR_IMAGE_SHORT=\"t3rd\"\nARG OUR_IMAGE_SLOGAN=\"t3rd - TYPO3 render documentation\"\nENV LC_ALL=\"C.UTF-8\" \\\n    LANG=\"C.UTF-8\" \\\n    HOME=\"/ALL/userhome\" \\\n    TOOLCHAIN_VERSION=\"2.6.1\" \\\n    TOOLCHAIN_UNPACKED=\"Toolchain_RenderDocumentation-2.6.1\" \\\n    TOOLCHAIN_URL=\"https://github.com/marble/Toolchain_RenderDocumentation/archive/v2.6.1.zip\" \\\n    TYPOSCRIPT_PY_VERSION=\"v2.2.4\" \\\n    TYPOSCRIPT_PY_URL=\"https://raw.githubusercontent.com/TYPO3-Documentation/Pygments-TypoScript-Lexer/v2.2.4/typoscript.py\" \\\n    OUR_IMAGE=\"$hack_OUR_IMAGE\" \\\n    OUR_IMAGE_SHORT=\"$hack_OUR_IMAGE_SHORT\" \\\n    THEME_VERSION=\"3.6.16\" \\\n    THEME_MTIME=\"1530870718\"\nLABEL Maintainer=\"TYPO3 Documentation Team\" \\\n      Description=\"This image renders TYPO3 documentation.\" \\\n      Vendor=\"t3docs\" \\\n      Version=\"$OUR_IMAGE_VERSION\"\nCOPY ALL-for-build /ALL\nWORKDIR /ALL/venv\nRUN true \"Create executable COMMENT as a workaround to allow commenting here\" \\\n && cp /bin/true /bin/COMMENT \\\n && COMMENT \"Garantee folders\" \\\n && mkdir /PROJECT \\\n && mkdir /RESULT \\\n && COMMENT \"Avoid GIT bug\" \\\n && cp /ALL/global-gitconfig.cfg /root/.gitconfig \\\n && cp /ALL/global-gitconfig.cfg /.gitconfig \\\n && chmod 666 /.gitconfig \\\n && COMMENT \"Make sure other users can write\" \\\n && chmod -R o+w /ALL/Makedir /ALL/dummy_webroot /RESULT \\\n && COMMENT \"Install and upgrade system packages\" \\\n && apt-get update \\\n && apt-get upgrade -qy \\\n && apt-get install python-pip -yq \\\n && COMMENT \"What the toolchains needs\" \\\n && apt-get install --no-install-recommends moreutils pandoc rsync tidy unzip wget -yq \\\n && COMMENT \"What we need - convenience tools\" \\\n && apt-get install --no-install-recommends less nano ncdu -yq \\\n && COMMENT \"Try extra cleaning besides /etc/apt/apt.conf.d/docker-clean\" \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* \\\n && COMMENT \"Python stuff\" \\\n && /usr/bin/pip install --upgrade pip \\\n && apt-get remove python-pip -y \\\n && /usr/local/bin/pip install --upgrade pipenv \\\n && COMMENT \"Disable /ALL/venv/Pipfile.lock - it didn't work reliably\" \\\n && rm -f Pipfile.lock.DISABLED \\\n && if [ -f \"Pipfile.lock\" ] ; then mv Pipfile.lock Pipfile.lock.DISABLED ; fi \\\n && COMMENT \"Install from /ALL/venv/Pipfile\" \\\n && pipenv install \\\n && echo source $( pipenv --venv ;)/bin/activate >> $HOME/.bashrc \\\n && COMMENT \"Provide some special files\" \\\n && wget https://raw.githubusercontent.com/TYPO3-Documentation/typo3-docs-typo3-org-resources/master/userroot/scripts/bin/check_include_files.py --quiet --output-document /usr/local/bin/check_include_files.py \\\n && wget https://raw.githubusercontent.com/TYPO3-Documentation/typo3-docs-typo3-org-resources/master/userroot/scripts/bin/conf-2017-09.py --quiet --output-document /ALL/Makedir/conf-2017-09.py \\\n && wget https://raw.githubusercontent.com/TYPO3-Documentation/typo3-docs-typo3-org-resources/master/userroot/scripts/config/_htaccess-2016-08.txt --quiet --output-document /ALL/Makedir/_htaccess \\\n && wget https://github.com/etobi/Typo3ExtensionUtils/raw/master/bin/t3xutils.phar --quiet --output-document /usr/local/bin/t3xutils.phar \\\n && chmod +x /usr/local/bin/t3xutils.phar \\\n && COMMENT \"All files of the theme of a given theme version should have the\" \\\n && COMMENT \"same mtime (last commit) to not turn off Sphinx caching\" \\\n && python=$( pipenv --venv ;)/bin/python \\\n && destdir=$( dirname $( $python -c \"import t3SphinxThemeRtd; print t3SphinxThemeRtd.__file__\" ;) ;) \\\n && find $destdir -exec touch --no-create --time=mtime --date=\"$( date --rfc-2822 --date=@$THEME_MTIME ;)\" {}\nENTRYPOINT [\"/ALL/Menu/mainmenu.sh\"]\nCMD []\n","originalDockerfileUglifiedHash":"467b553d9092eca3762e9bfedf3984fb","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/03c7747b7a383e5338fa59348c24c84a6aed30e1.dockerfile"}