{"seed":1425268642,"processedDockerfileHash":"545c653d930a5341e7a652e3fa800c97","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM ubuntu:16.04\nMAINTAINER The Analytics-Zoo Authors https://github.com/intel-analytics/analytics-zoo\nWORKDIR /opt/work\nENV JAVA_7_HOME=\"/opt/work/jdk7\"\nENV JAVA_8_HOME=\"/opt/work/jdk8\"\nENV JAVA_HOME=\"${JAVA_8_HOME}\"\nENV SCALA_HOME=\"/opt/work/scala\"\nENV CONDA_HOME=\"/opt/work/conda\"\nENV JENKINS_HOME=\"/opt/work/jenkins\"\nENV SPARK_1_6_HOME=\"/opt/work/spark-1.6.3\"\nENV SPARK_2_1_HOME=\"/opt/work/spark-2.1.3\"\nENV SPARK_2_2_HOME=\"/opt/work/spark-2.2.2\"\nENV SPARK_2_3_HOME=\"/opt/work/spark-2.3.2\"\nENV SPARK_2_4_HOME=\"/opt/work/spark-2.4.0\"\nENV PATH=\"$SCALA_HOME/bin:${JAVA_HOME}/bin:${CONDA_HOME}/bin:${PATH}\"\nENV LANG=\"en_US.UTF-8\"\nENV LC_ALL=\"en_US.UTF-8\"\nCOPY ./run-slave.sh /opt/work/jenkins/run-slave.sh\nCOPY ./slave.groovy /opt/work/jenkins/slave.groovy\nRUN apt-get update --fix-missing \\\n && apt-get install --no-install-recommends vim=2:7.4.1689-3ubuntu1.5 curl=7.47.0-1ubuntu2.19 nano=2.5.3-2ubuntu2 wget=1.17.1-1ubuntu1.5 unzip=6.0-20ubuntu1.1 maven=3.3.9-3 git=1:2.7.4-0ubuntu1.10 bzip2=1.0.6-8ubuntu0.2 -y \\\n && apt-get install --no-install-recommends locales=2.23-0ubuntu11.3 -y \\\n && locale-gen en_US.UTF-8 \\\n && apt-get install --no-install-recommends build-essential=12.1ubuntu2 -y \\\n && apt-get install --no-install-recommends protobuf-compiler=2.6.1-1.3 libprotoc-dev=2.6.1-1.3 -y \\\n && apt-get install --no-install-recommends libgtk2.0-dev=2.24.30-1ubuntu1.16.04.2 -y\n#  jdk8\nRUN wget https://build.funtoo.org/distfiles/oracle-java/jdk-8u152-linux-x64.tar.gz \\\n && gunzip jdk-8u152-linux-x64.tar.gz \\\n && tar -xf jdk-8u152-linux-x64.tar -C /opt \\\n && rm jdk-8u152-linux-x64.tar \\\n && ln -s /opt/jdk1.8.0_152 ${JAVA_8_HOME} \\\n && wget https://build.funtoo.org/distfiles/oracle-java/jdk-7u80-linux-x64.tar.gz \\\n && gunzip jdk-7u80-linux-x64.tar.gz \\\n && tar -xf jdk-7u80-linux-x64.tar -C /opt \\\n && rm jdk-7u80-linux-x64.tar \\\n && ln -s /opt/jdk1.7.0_80 ${JAVA_7_HOME} \\\n && wget https://downloads.lightbend.com/scala/2.11.8/scala-2.11.8.tgz \\\n && gunzip scala-2.11.8.tgz \\\n && tar -xf scala-2.11.8.tar -C /opt \\\n && rm scala-2.11.8.tar \\\n && ln -s /opt/scala-2.11.8 ${SCALA_HOME} \\\n && chmod a+x /opt/work/jenkins/run-slave.sh \\\n && chmod a+x /opt/work/jenkins/slave.groovy \\\n && wget http://repo.jenkins-ci.org/releases/org/jenkins-ci/main/remoting/3.14/remoting-3.14.jar \\\n && mv remoting-3.14.jar ${JENKINS_HOME} \\\n && wget http://archive.apache.org/dist/spark/spark-1.6.3/spark-1.6.3-bin-hadoop2.6.tgz \\\n && tar -xf spark-1.6.3-bin-hadoop2.6.tgz -C /opt/work \\\n && rm spark-1.6.3-bin-hadoop2.6.tgz \\\n && ln -s /opt/work/spark-1.6.3-bin-hadoop2.6 ${SPARK_1_6_HOME} \\\n && wget http://archive.apache.org/dist/spark/spark-2.1.3/spark-2.1.3-bin-hadoop2.7.tgz \\\n && tar -xf spark-2.1.3-bin-hadoop2.7.tgz -C /opt/work \\\n && rm spark-2.1.3-bin-hadoop2.7.tgz \\\n && ln -s /opt/work/spark-2.1.3-bin-hadoop2.7 ${SPARK_2_1_HOME} \\\n && wget http://archive.apache.org/dist/spark/spark-2.2.2/spark-2.2.2-bin-hadoop2.7.tgz \\\n && tar -xf spark-2.2.2-bin-hadoop2.7.tgz -C /opt/work \\\n && rm spark-2.2.2-bin-hadoop2.7.tgz \\\n && ln -s /opt/work/spark-2.2.2-bin-hadoop2.7 ${SPARK_2_2_HOME} \\\n && wget http://archive.apache.org/dist/spark/spark-2.3.2/spark-2.3.2-bin-hadoop2.7.tgz \\\n && tar -xf spark-2.3.2-bin-hadoop2.7.tgz -C /opt/work \\\n && rm spark-2.3.2-bin-hadoop2.7.tgz \\\n && ln -s /opt/work/spark-2.3.2-bin-hadoop2.7 ${SPARK_2_3_HOME} \\\n && wget http://archive.apache.org/dist/spark/spark-2.4.0/spark-2.4.0-bin-hadoop2.7.tgz \\\n && tar -xf spark-2.4.0-bin-hadoop2.7.tgz -C /opt/work \\\n && rm spark-2.4.0-bin-hadoop2.7.tgz \\\n && ln -s /opt/work/spark-2.4.0-bin-hadoop2.7 ${SPARK_2_4_HOME} \\\n && wget https://cmake.org/files/v3.12/cmake-3.12.1.tar.gz \\\n && tar xf cmake-3.12.1.tar.gz \\\n && cd cmake-3.12.1 \\\n && ./configure \\\n && make -j16 \\\n && make install \\\n && cd .. \\\n && wget https://repo.continuum.io/miniconda/Miniconda3-4.3.31-Linux-x86_64.sh \\\n && /bin/bash Miniconda3-4.3.31-Linux-x86_64.sh -f -b -p ${CONDA_HOME} \\\n && rm Miniconda3-4.3.31-Linux-x86_64.sh \\\n && conda config --system --prepend channels conda-forge \\\n && conda config --system --set auto_update_conda false \\\n && conda config --system --set show_channel_urls true \\\n && conda update --all --quiet --yes \\\n && conda clean -tipsy\n#  TENSORFLOW MODELS\nENV PYTHONPATH=\"/opt/work/models/research/slim:${PYTHONPATH}\"\nRUN git clone https://github.com/tensorflow/models.git\n#  keras=1.2.2\nRUN export TENSOR_FLOW_VERION=1.10.0 \\\n && export KERAS_VERSION=1.2.2 \\\n && conda create -y -n py27 python=2.7 \\\n && conda install -y -n py27 -c conda-forge mkdocs scipy pandas scikit-learn matplotlib seaborn jupyter plotly nltk twine pytest pytest-xdist h5py moviepy libprotobuf tensorflow==$TENSOR_FLOW_VERION keras==$KERAS_VERSION typing protobuf numpy pyyaml mkl mkl-include mkl-service setuptools cmake cffi robotframework requests networkx==2.2 tensorboard \\\n && conda install -y -n py27 --channel https://conda.anaconda.org/menpo opencv3 \\\n && conda install -y -n py27 -c mingfeima mkldnn \\\n && conda install -y -n py27 -c pytorch pytorch-cpu=1.0.0 torchvision-cpu=0.2.1 \\\n && /bin/bash -c \"source activate py27 \\\n && pip install onnx==1.3.0 \\\n && source deactivate\" \\\n && conda create -y -n py35 python=3.5 \\\n && conda install -y -n py35 -c conda-forge mkdocs scipy pandas scikit-learn matplotlib seaborn jupyter plotly nltk twine pytest pytest-xdist h5py moviepy imageio-ffmpeg typing numpy pyyaml mkl mkl-include mkl-service setuptools cmake cffi robotframework requests networkx==2.2 tensorboard libprotobuf protobuf tensorflow==$TENSOR_FLOW_VERION keras==$KERAS_VERSION \\\n && conda install -y -n py35 -c anaconda protobuf \\\n && conda install -y -n py35 --channel https://conda.anaconda.org/menpo opencv3 \\\n && conda install -y -n py35 -c mingfeima mkldnn \\\n && conda install -y -n py35 -c pytorch pytorch-cpu=1.0.0 torchvision-cpu=0.2.1 \\\n && /bin/bash -c \"source activate py35 \\\n && pip install onnx==1.3.0 \\\n && source deactivate\" \\\n && conda create -y -n py36 python=3.6 \\\n && conda install -y -n py36 -c conda-forge mkdocs scipy pandas scikit-learn matplotlib seaborn jupyter plotly nltk twine pytest pytest-xdist h5py moviepy imageio-ffmpeg typing numpy pyyaml mkl mkl-include mkl-service setuptools cmake cffi robotframework requests networkx==2.2 tensorboard libprotobuf protobuf tensorflow==$TENSOR_FLOW_VERION keras==$KERAS_VERSION \\\n && conda install -y -n py36 -c anaconda protobuf \\\n && conda install -y -n py36 --channel https://conda.anaconda.org/menpo opencv3 \\\n && conda install -y -n py36 -c mingfeima mkldnn \\\n && conda install -y -n py36 -c pytorch pytorch-cpu=1.0.0 torchvision-cpu=0.2.1 \\\n && /bin/bash -c \"source activate py36 \\\n && pip install onnx==1.3.0 \\\n && source deactivate\" \\\n && export TENSOR_FLOW_VERION=1.10.0 \\\n && export KERAS_VERSION=2.1.6 \\\n && conda create -y -n py27k216 python=2.7 mkdocs scipy pandas scikit-learn matplotlib seaborn jupyter \\\n && conda install -y -n py27k216 plotly nltk twine pytest pytest-xdist h5py moviepy \\\n && conda install -y -n py27k216 -c conda-forge tensorflow==$TENSOR_FLOW_VERION keras==$KERAS_VERSION \\\n && conda install -y -n py27k216 -c conda-forge opencv==3.4.1 \\\n && conda install -y -n py27k216 typing protobuf numpy pyyaml mkl mkl-include setuptools cmake cffi \\\n && conda install -y -n py27k216 -c mingfeima mkldnn \\\n && conda install -y -n py27k216 -c conda-forge robotframework requests \\\n && conda create -y -n py35k216 python=3.5 mkdocs scipy pandas scikit-learn matplotlib seaborn jupyter \\\n && conda install -y -n py35k216 plotly nltk twine pytest pytest-xdist h5py moviepy \\\n && conda install -y -n py35k216 -c conda-forge tensorflow==$TENSOR_FLOW_VERION keras==$KERAS_VERSION \\\n && conda install -y -n py35k216 -c conda-forge opencv==3.4.1 \\\n && conda install -y -n py35k216 typing protobuf numpy pyyaml mkl mkl-include setuptools cmake cffi \\\n && conda install -y -n py35k216 -c mingfeima mkldnn \\\n && conda install -y -n py35k216 -c conda-forge robotframework requests \\\n && conda create -y -n py36k216 python=3.6 mkdocs scipy pandas scikit-learn matplotlib seaborn jupyter \\\n && conda install -y -n py36k216 plotly nltk twine pytest pytest-xdist h5py moviepy \\\n && conda install -y -n py36k216 -c conda-forge tensorflow==$TENSOR_FLOW_VERION keras==$KERAS_VERSION \\\n && conda install -y -n py36k216 -c conda-forge opencv==3.4.1 \\\n && conda install -y -n py36k216 typing protobuf numpy pyyaml mkl mkl-include setuptools cmake cffi \\\n && conda install -y -n py36k216 -c mingfeima mkldnn \\\n && conda install -y -n py36k216 -c conda-forge robotframework requests\nCMD [\"/opt/work/jenkins/run-slave.sh\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:16.04\nMAINTAINER The Analytics-Zoo Authors https://github.com/intel-analytics/analytics-zoo\nWORKDIR /opt/work\nENV JAVA_7_HOME=\"/opt/work/jdk7\"\nENV JAVA_8_HOME=\"/opt/work/jdk8\"\nENV JAVA_HOME=\"${JAVA_8_HOME}\"\nENV SCALA_HOME=\"/opt/work/scala\"\nENV CONDA_HOME=\"/opt/work/conda\"\nENV JENKINS_HOME=\"/opt/work/jenkins\"\nENV SPARK_1_6_HOME=\"/opt/work/spark-1.6.3\"\nENV SPARK_2_1_HOME=\"/opt/work/spark-2.1.3\"\nENV SPARK_2_2_HOME=\"/opt/work/spark-2.2.2\"\nENV SPARK_2_3_HOME=\"/opt/work/spark-2.3.2\"\nENV SPARK_2_4_HOME=\"/opt/work/spark-2.4.0\"\nENV PATH=\"$SCALA_HOME/bin:${JAVA_HOME}/bin:${CONDA_HOME}/bin:${PATH}\"\nENV LANG=\"en_US.UTF-8\"\nENV LC_ALL=\"en_US.UTF-8\"\nADD ./run-slave.sh /opt/work/jenkins/run-slave.sh\nADD ./slave.groovy /opt/work/jenkins/slave.groovy\nRUN apt-get update --fix-missing \\\n && apt-get install vim curl nano wget unzip maven git bzip2 -y \\\n && apt-get install locales -y \\\n && locale-gen en_US.UTF-8 \\\n && apt-get install build-essential -y \\\n && apt-get install protobuf-compiler libprotoc-dev -y \\\n && apt-get install libgtk2.0-dev -y\n# jdk8\nRUN wget https://build.funtoo.org/distfiles/oracle-java/jdk-8u152-linux-x64.tar.gz \\\n && gunzip jdk-8u152-linux-x64.tar.gz \\\n && tar -xf jdk-8u152-linux-x64.tar -C /opt \\\n && rm jdk-8u152-linux-x64.tar \\\n && ln -s /opt/jdk1.8.0_152 ${JAVA_8_HOME} \\\n && wget https://build.funtoo.org/distfiles/oracle-java/jdk-7u80-linux-x64.tar.gz \\\n && gunzip jdk-7u80-linux-x64.tar.gz \\\n && tar -xf jdk-7u80-linux-x64.tar -C /opt \\\n && rm jdk-7u80-linux-x64.tar \\\n && ln -s /opt/jdk1.7.0_80 ${JAVA_7_HOME} \\\n && wget https://downloads.lightbend.com/scala/2.11.8/scala-2.11.8.tgz \\\n && gunzip scala-2.11.8.tgz \\\n && tar -xf scala-2.11.8.tar -C /opt \\\n && rm scala-2.11.8.tar \\\n && ln -s /opt/scala-2.11.8 ${SCALA_HOME} \\\n && chmod a+x /opt/work/jenkins/run-slave.sh \\\n && chmod a+x /opt/work/jenkins/slave.groovy \\\n && wget http://repo.jenkins-ci.org/releases/org/jenkins-ci/main/remoting/3.14/remoting-3.14.jar \\\n && mv remoting-3.14.jar ${JENKINS_HOME} \\\n && wget http://archive.apache.org/dist/spark/spark-1.6.3/spark-1.6.3-bin-hadoop2.6.tgz \\\n && tar -xf spark-1.6.3-bin-hadoop2.6.tgz -C /opt/work \\\n && rm spark-1.6.3-bin-hadoop2.6.tgz \\\n && ln -s /opt/work/spark-1.6.3-bin-hadoop2.6 ${SPARK_1_6_HOME} \\\n && wget http://archive.apache.org/dist/spark/spark-2.1.3/spark-2.1.3-bin-hadoop2.7.tgz \\\n && tar -xf spark-2.1.3-bin-hadoop2.7.tgz -C /opt/work \\\n && rm spark-2.1.3-bin-hadoop2.7.tgz \\\n && ln -s /opt/work/spark-2.1.3-bin-hadoop2.7 ${SPARK_2_1_HOME} \\\n && wget http://archive.apache.org/dist/spark/spark-2.2.2/spark-2.2.2-bin-hadoop2.7.tgz \\\n && tar -xf spark-2.2.2-bin-hadoop2.7.tgz -C /opt/work \\\n && rm spark-2.2.2-bin-hadoop2.7.tgz \\\n && ln -s /opt/work/spark-2.2.2-bin-hadoop2.7 ${SPARK_2_2_HOME} \\\n && wget http://archive.apache.org/dist/spark/spark-2.3.2/spark-2.3.2-bin-hadoop2.7.tgz \\\n && tar -xf spark-2.3.2-bin-hadoop2.7.tgz -C /opt/work \\\n && rm spark-2.3.2-bin-hadoop2.7.tgz \\\n && ln -s /opt/work/spark-2.3.2-bin-hadoop2.7 ${SPARK_2_3_HOME} \\\n && wget http://archive.apache.org/dist/spark/spark-2.4.0/spark-2.4.0-bin-hadoop2.7.tgz \\\n && tar -xf spark-2.4.0-bin-hadoop2.7.tgz -C /opt/work \\\n && rm spark-2.4.0-bin-hadoop2.7.tgz \\\n && ln -s /opt/work/spark-2.4.0-bin-hadoop2.7 ${SPARK_2_4_HOME} \\\n && wget https://cmake.org/files/v3.12/cmake-3.12.1.tar.gz \\\n && tar xf cmake-3.12.1.tar.gz \\\n && cd cmake-3.12.1 \\\n && ./configure \\\n && make -j16 \\\n && make install \\\n && cd .. \\\n && wget https://repo.continuum.io/miniconda/Miniconda3-4.3.31-Linux-x86_64.sh \\\n && /bin/bash Miniconda3-4.3.31-Linux-x86_64.sh -f -b -p ${CONDA_HOME} \\\n && rm Miniconda3-4.3.31-Linux-x86_64.sh \\\n && conda config --system --prepend channels conda-forge \\\n && conda config --system --set auto_update_conda false \\\n && conda config --system --set show_channel_urls true \\\n && conda update --all --quiet --yes \\\n && conda clean -tipsy\n# TENSORFLOW MODELS\nENV PYTHONPATH=\"/opt/work/models/research/slim:${PYTHONPATH}\"\nRUN git clone https://github.com/tensorflow/models.git\n# keras=1.2.2\nRUN export TENSOR_FLOW_VERION=1.10.0 \\\n && export KERAS_VERSION=1.2.2 \\\n && conda create -y -n py27 python=2.7 \\\n && conda install -y -n py27 -c conda-forge mkdocs scipy pandas scikit-learn matplotlib seaborn jupyter plotly nltk twine pytest pytest-xdist h5py moviepy libprotobuf tensorflow==$TENSOR_FLOW_VERION keras==$KERAS_VERSION typing protobuf numpy pyyaml mkl mkl-include mkl-service setuptools cmake cffi robotframework requests networkx==2.2 tensorboard \\\n && conda install -y -n py27 --channel https://conda.anaconda.org/menpo opencv3 \\\n && conda install -y -n py27 -c mingfeima mkldnn \\\n && conda install -y -n py27 -c pytorch pytorch-cpu=1.0.0 torchvision-cpu=0.2.1 \\\n && /bin/bash -c \"source activate py27 \\\n && pip install onnx==1.3.0 \\\n && source deactivate\" \\\n && conda create -y -n py35 python=3.5 \\\n && conda install -y -n py35 -c conda-forge mkdocs scipy pandas scikit-learn matplotlib seaborn jupyter plotly nltk twine pytest pytest-xdist h5py moviepy imageio-ffmpeg typing numpy pyyaml mkl mkl-include mkl-service setuptools cmake cffi robotframework requests networkx==2.2 tensorboard libprotobuf protobuf tensorflow==$TENSOR_FLOW_VERION keras==$KERAS_VERSION \\\n && conda install -y -n py35 -c anaconda protobuf \\\n && conda install -y -n py35 --channel https://conda.anaconda.org/menpo opencv3 \\\n && conda install -y -n py35 -c mingfeima mkldnn \\\n && conda install -y -n py35 -c pytorch pytorch-cpu=1.0.0 torchvision-cpu=0.2.1 \\\n && /bin/bash -c \"source activate py35 \\\n && pip install onnx==1.3.0 \\\n && source deactivate\" \\\n && conda create -y -n py36 python=3.6 \\\n && conda install -y -n py36 -c conda-forge mkdocs scipy pandas scikit-learn matplotlib seaborn jupyter plotly nltk twine pytest pytest-xdist h5py moviepy imageio-ffmpeg typing numpy pyyaml mkl mkl-include mkl-service setuptools cmake cffi robotframework requests networkx==2.2 tensorboard libprotobuf protobuf tensorflow==$TENSOR_FLOW_VERION keras==$KERAS_VERSION \\\n && conda install -y -n py36 -c anaconda protobuf \\\n && conda install -y -n py36 --channel https://conda.anaconda.org/menpo opencv3 \\\n && conda install -y -n py36 -c mingfeima mkldnn \\\n && conda install -y -n py36 -c pytorch pytorch-cpu=1.0.0 torchvision-cpu=0.2.1 \\\n && /bin/bash -c \"source activate py36 \\\n && pip install onnx==1.3.0 \\\n && source deactivate\" \\\n && export TENSOR_FLOW_VERION=1.10.0 \\\n && export KERAS_VERSION=2.1.6 \\\n && conda create -y -n py27k216 python=2.7 mkdocs scipy pandas scikit-learn matplotlib seaborn jupyter \\\n && conda install -y -n py27k216 plotly nltk twine pytest pytest-xdist h5py moviepy \\\n && conda install -y -n py27k216 -c conda-forge tensorflow==$TENSOR_FLOW_VERION keras==$KERAS_VERSION \\\n && conda install -y -n py27k216 -c conda-forge opencv==3.4.1 \\\n && conda install -y -n py27k216 typing protobuf numpy pyyaml mkl mkl-include setuptools cmake cffi \\\n && conda install -y -n py27k216 -c mingfeima mkldnn \\\n && conda install -y -n py27k216 -c conda-forge robotframework requests \\\n && conda create -y -n py35k216 python=3.5 mkdocs scipy pandas scikit-learn matplotlib seaborn jupyter \\\n && conda install -y -n py35k216 plotly nltk twine pytest pytest-xdist h5py moviepy \\\n && conda install -y -n py35k216 -c conda-forge tensorflow==$TENSOR_FLOW_VERION keras==$KERAS_VERSION \\\n && conda install -y -n py35k216 -c conda-forge opencv==3.4.1 \\\n && conda install -y -n py35k216 typing protobuf numpy pyyaml mkl mkl-include setuptools cmake cffi \\\n && conda install -y -n py35k216 -c mingfeima mkldnn \\\n && conda install -y -n py35k216 -c conda-forge robotframework requests \\\n && conda create -y -n py36k216 python=3.6 mkdocs scipy pandas scikit-learn matplotlib seaborn jupyter \\\n && conda install -y -n py36k216 plotly nltk twine pytest pytest-xdist h5py moviepy \\\n && conda install -y -n py36k216 -c conda-forge tensorflow==$TENSOR_FLOW_VERION keras==$KERAS_VERSION \\\n && conda install -y -n py36k216 -c conda-forge opencv==3.4.1 \\\n && conda install -y -n py36k216 typing protobuf numpy pyyaml mkl mkl-include setuptools cmake cffi \\\n && conda install -y -n py36k216 -c mingfeima mkldnn \\\n && conda install -y -n py36k216 -c conda-forge robotframework requests\nCMD [\"/opt/work/jenkins/run-slave.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"f46dee2f053f0e8174fe8cba54f3dfa2","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:16.04\nMAINTAINER The Analytics-Zoo Authors https://github.com/intel-analytics/analytics-zoo\nWORKDIR /opt/work\nENV JAVA_7_HOME=\"/opt/work/jdk7\"\nENV JAVA_8_HOME=\"/opt/work/jdk8\"\nENV JAVA_HOME=\"${JAVA_8_HOME}\"\nENV SCALA_HOME=\"/opt/work/scala\"\nENV CONDA_HOME=\"/opt/work/conda\"\nENV JENKINS_HOME=\"/opt/work/jenkins\"\nENV SPARK_1_6_HOME=\"/opt/work/spark-1.6.3\"\nENV SPARK_2_1_HOME=\"/opt/work/spark-2.1.3\"\nENV SPARK_2_2_HOME=\"/opt/work/spark-2.2.2\"\nENV SPARK_2_3_HOME=\"/opt/work/spark-2.3.2\"\nENV SPARK_2_4_HOME=\"/opt/work/spark-2.4.0\"\nENV PATH=\"$SCALA_HOME/bin:${JAVA_HOME}/bin:${CONDA_HOME}/bin:${PATH}\"\nENV LANG=\"en_US.UTF-8\"\nENV LC_ALL=\"en_US.UTF-8\"\nADD ./run-slave.sh /opt/work/jenkins/run-slave.sh\nADD ./slave.groovy /opt/work/jenkins/slave.groovy\nRUN apt-get update --fix-missing \\\n && apt-get install vim curl nano wget unzip maven git bzip2 -y \\\n && apt-get install locales -y \\\n && locale-gen en_US.UTF-8 \\\n && apt-get install build-essential -y \\\n && apt-get install protobuf-compiler libprotoc-dev -y \\\n && apt-get install libgtk2.0-dev -y\n#  jdk8\nRUN wget https://build.funtoo.org/distfiles/oracle-java/jdk-8u152-linux-x64.tar.gz \\\n && gunzip jdk-8u152-linux-x64.tar.gz \\\n && tar -xf jdk-8u152-linux-x64.tar -C /opt \\\n && rm jdk-8u152-linux-x64.tar \\\n && ln -s /opt/jdk1.8.0_152 ${JAVA_8_HOME} \\\n && wget https://build.funtoo.org/distfiles/oracle-java/jdk-7u80-linux-x64.tar.gz \\\n && gunzip jdk-7u80-linux-x64.tar.gz \\\n && tar -xf jdk-7u80-linux-x64.tar -C /opt \\\n && rm jdk-7u80-linux-x64.tar \\\n && ln -s /opt/jdk1.7.0_80 ${JAVA_7_HOME} \\\n && wget https://downloads.lightbend.com/scala/2.11.8/scala-2.11.8.tgz \\\n && gunzip scala-2.11.8.tgz \\\n && tar -xf scala-2.11.8.tar -C /opt \\\n && rm scala-2.11.8.tar \\\n && ln -s /opt/scala-2.11.8 ${SCALA_HOME} \\\n && chmod a+x /opt/work/jenkins/run-slave.sh \\\n && chmod a+x /opt/work/jenkins/slave.groovy \\\n && wget http://repo.jenkins-ci.org/releases/org/jenkins-ci/main/remoting/3.14/remoting-3.14.jar \\\n && mv remoting-3.14.jar ${JENKINS_HOME} \\\n && wget http://archive.apache.org/dist/spark/spark-1.6.3/spark-1.6.3-bin-hadoop2.6.tgz \\\n && tar -xf spark-1.6.3-bin-hadoop2.6.tgz -C /opt/work \\\n && rm spark-1.6.3-bin-hadoop2.6.tgz \\\n && ln -s /opt/work/spark-1.6.3-bin-hadoop2.6 ${SPARK_1_6_HOME} \\\n && wget http://archive.apache.org/dist/spark/spark-2.1.3/spark-2.1.3-bin-hadoop2.7.tgz \\\n && tar -xf spark-2.1.3-bin-hadoop2.7.tgz -C /opt/work \\\n && rm spark-2.1.3-bin-hadoop2.7.tgz \\\n && ln -s /opt/work/spark-2.1.3-bin-hadoop2.7 ${SPARK_2_1_HOME} \\\n && wget http://archive.apache.org/dist/spark/spark-2.2.2/spark-2.2.2-bin-hadoop2.7.tgz \\\n && tar -xf spark-2.2.2-bin-hadoop2.7.tgz -C /opt/work \\\n && rm spark-2.2.2-bin-hadoop2.7.tgz \\\n && ln -s /opt/work/spark-2.2.2-bin-hadoop2.7 ${SPARK_2_2_HOME} \\\n && wget http://archive.apache.org/dist/spark/spark-2.3.2/spark-2.3.2-bin-hadoop2.7.tgz \\\n && tar -xf spark-2.3.2-bin-hadoop2.7.tgz -C /opt/work \\\n && rm spark-2.3.2-bin-hadoop2.7.tgz \\\n && ln -s /opt/work/spark-2.3.2-bin-hadoop2.7 ${SPARK_2_3_HOME} \\\n && wget http://archive.apache.org/dist/spark/spark-2.4.0/spark-2.4.0-bin-hadoop2.7.tgz \\\n && tar -xf spark-2.4.0-bin-hadoop2.7.tgz -C /opt/work \\\n && rm spark-2.4.0-bin-hadoop2.7.tgz \\\n && ln -s /opt/work/spark-2.4.0-bin-hadoop2.7 ${SPARK_2_4_HOME} \\\n && wget https://cmake.org/files/v3.12/cmake-3.12.1.tar.gz \\\n && tar xf cmake-3.12.1.tar.gz \\\n && cd cmake-3.12.1 \\\n && ./configure \\\n && make -j16 \\\n && make install \\\n && cd .. \\\n && wget https://repo.continuum.io/miniconda/Miniconda3-4.3.31-Linux-x86_64.sh \\\n && /bin/bash Miniconda3-4.3.31-Linux-x86_64.sh -f -b -p ${CONDA_HOME} \\\n && rm Miniconda3-4.3.31-Linux-x86_64.sh \\\n && conda config --system --prepend channels conda-forge \\\n && conda config --system --set auto_update_conda false \\\n && conda config --system --set show_channel_urls true \\\n && conda update --all --quiet --yes \\\n && conda clean -tipsy\n#  TENSORFLOW MODELS\nENV PYTHONPATH=\"/opt/work/models/research/slim:${PYTHONPATH}\"\nRUN git clone https://github.com/tensorflow/models.git\n#  keras=1.2.2\nRUN export TENSOR_FLOW_VERION=1.10.0 \\\n && export KERAS_VERSION=1.2.2 \\\n && conda create -y -n py27 python=2.7 \\\n && conda install -y -n py27 -c conda-forge mkdocs scipy pandas scikit-learn matplotlib seaborn jupyter plotly nltk twine pytest pytest-xdist h5py moviepy libprotobuf tensorflow==$TENSOR_FLOW_VERION keras==$KERAS_VERSION typing protobuf numpy pyyaml mkl mkl-include mkl-service setuptools cmake cffi robotframework requests networkx==2.2 tensorboard \\\n && conda install -y -n py27 --channel https://conda.anaconda.org/menpo opencv3 \\\n && conda install -y -n py27 -c mingfeima mkldnn \\\n && conda install -y -n py27 -c pytorch pytorch-cpu=1.0.0 torchvision-cpu=0.2.1 \\\n && /bin/bash -c \"source activate py27 \\\n && pip install onnx==1.3.0 \\\n && source deactivate\" \\\n && conda create -y -n py35 python=3.5 \\\n && conda install -y -n py35 -c conda-forge mkdocs scipy pandas scikit-learn matplotlib seaborn jupyter plotly nltk twine pytest pytest-xdist h5py moviepy imageio-ffmpeg typing numpy pyyaml mkl mkl-include mkl-service setuptools cmake cffi robotframework requests networkx==2.2 tensorboard libprotobuf protobuf tensorflow==$TENSOR_FLOW_VERION keras==$KERAS_VERSION \\\n && conda install -y -n py35 -c anaconda protobuf \\\n && conda install -y -n py35 --channel https://conda.anaconda.org/menpo opencv3 \\\n && conda install -y -n py35 -c mingfeima mkldnn \\\n && conda install -y -n py35 -c pytorch pytorch-cpu=1.0.0 torchvision-cpu=0.2.1 \\\n && /bin/bash -c \"source activate py35 \\\n && pip install onnx==1.3.0 \\\n && source deactivate\" \\\n && conda create -y -n py36 python=3.6 \\\n && conda install -y -n py36 -c conda-forge mkdocs scipy pandas scikit-learn matplotlib seaborn jupyter plotly nltk twine pytest pytest-xdist h5py moviepy imageio-ffmpeg typing numpy pyyaml mkl mkl-include mkl-service setuptools cmake cffi robotframework requests networkx==2.2 tensorboard libprotobuf protobuf tensorflow==$TENSOR_FLOW_VERION keras==$KERAS_VERSION \\\n && conda install -y -n py36 -c anaconda protobuf \\\n && conda install -y -n py36 --channel https://conda.anaconda.org/menpo opencv3 \\\n && conda install -y -n py36 -c mingfeima mkldnn \\\n && conda install -y -n py36 -c pytorch pytorch-cpu=1.0.0 torchvision-cpu=0.2.1 \\\n && /bin/bash -c \"source activate py36 \\\n && pip install onnx==1.3.0 \\\n && source deactivate\" \\\n && export TENSOR_FLOW_VERION=1.10.0 \\\n && export KERAS_VERSION=2.1.6 \\\n && conda create -y -n py27k216 python=2.7 mkdocs scipy pandas scikit-learn matplotlib seaborn jupyter \\\n && conda install -y -n py27k216 plotly nltk twine pytest pytest-xdist h5py moviepy \\\n && conda install -y -n py27k216 -c conda-forge tensorflow==$TENSOR_FLOW_VERION keras==$KERAS_VERSION \\\n && conda install -y -n py27k216 -c conda-forge opencv==3.4.1 \\\n && conda install -y -n py27k216 typing protobuf numpy pyyaml mkl mkl-include setuptools cmake cffi \\\n && conda install -y -n py27k216 -c mingfeima mkldnn \\\n && conda install -y -n py27k216 -c conda-forge robotframework requests \\\n && conda create -y -n py35k216 python=3.5 mkdocs scipy pandas scikit-learn matplotlib seaborn jupyter \\\n && conda install -y -n py35k216 plotly nltk twine pytest pytest-xdist h5py moviepy \\\n && conda install -y -n py35k216 -c conda-forge tensorflow==$TENSOR_FLOW_VERION keras==$KERAS_VERSION \\\n && conda install -y -n py35k216 -c conda-forge opencv==3.4.1 \\\n && conda install -y -n py35k216 typing protobuf numpy pyyaml mkl mkl-include setuptools cmake cffi \\\n && conda install -y -n py35k216 -c mingfeima mkldnn \\\n && conda install -y -n py35k216 -c conda-forge robotframework requests \\\n && conda create -y -n py36k216 python=3.6 mkdocs scipy pandas scikit-learn matplotlib seaborn jupyter \\\n && conda install -y -n py36k216 plotly nltk twine pytest pytest-xdist h5py moviepy \\\n && conda install -y -n py36k216 -c conda-forge tensorflow==$TENSOR_FLOW_VERION keras==$KERAS_VERSION \\\n && conda install -y -n py36k216 -c conda-forge opencv==3.4.1 \\\n && conda install -y -n py36k216 typing protobuf numpy pyyaml mkl mkl-include setuptools cmake cffi \\\n && conda install -y -n py36k216 -c mingfeima mkldnn \\\n && conda install -y -n py36k216 -c conda-forge robotframework requests\nCMD [\"/opt/work/jenkins/run-slave.sh\"]\n","originalDockerfileUglifiedHash":"2102ab18b850561ac81a0891a23dc348","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/c3e2c8e9f2dab95ee3a56595591cf2970c713cca.dockerfile"}