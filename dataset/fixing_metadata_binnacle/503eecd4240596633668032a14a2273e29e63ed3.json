{"seed":2550779197,"processedDockerfileHash":"29977acb41c58a4002e46c9d5c90f1e9","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-pip","pin-package-manager-versions-gem","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Licensed under the Apache License, Version 2.0 (the \"License\");\n#   you may not use this file except in compliance with the License.\n#   You may obtain a copy of the License at\n#\n#       http://www.apache.org/licenses/LICENSE-2.0\n#\n#   Unless required by applicable law or agreed to in writing, software\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#   See the License for the specific language governing permissions and\n#   limitations under the License.\n#   Apache Thrift Docker build environment for Debian Stretch\n#\n#   Known issues:\n#   - d: deimos for libevent and openssl disabled - build errors\n#   - dotnetcore, because netcore is for 1.0.0-preview and 2.0.0 is out\n#   - rust: cargo not in debian repo - perhaps not needed?\nFROM buildpack-deps:stretch-scm\nMAINTAINER Apache Thrift <dev@thrift.apache.org>\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#  ## Add apt repos\nRUN apt-get update \\\n && apt-get install --no-install-recommends apt apt-transport-https curl wget apt-utils -y\n#   D\nRUN wget http://master.dl.sourceforge.net/project/d-apt/files/d-apt.list -O /etc/apt/sources.list.d/d-apt.list \\\n && apt-get update \\\n && apt-get install --no-install-recommends d-apt-keyring -y --allow-unauthenticated --reinstall\n#   Dart\nRUN curl https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \\\n && curl https://storage.googleapis.com/download.dartlang.org/linux/debian/dart_stable.list > /etc/apt/sources.list.d/dart_stable.list \\\n && sed -i /etc/apt/sources.list.d/dart_stable.list -e 's/https:/http:/g'\n#   dotnet (core) 2.0.0 - project isn't ready for this yet:\n#   RUN curl https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > /etc/apt/trusted.gpg.d/microsoft.gpg && \\\n#       echo \"deb [arch=amd64] https://packages.microsoft.com/repos/microsoft-ubuntu-xenial-prod xenial main\" > /etc/apt/sources.list.d/dotnetdev.list\n#   node.js (this step runs apt-get update internally)\nRUN curl -sL https://deb.nodesource.com/setup_8.x | bash\n#  ## install general dependencies\nRUN apt-get install --no-install-recommends bash-completion bison build-essential clang cmake debhelper flex gdb ninja-build pkg-config valgrind vim `` -y\n#  ## languages\nRUN apt-get install --no-install-recommends libboost-dev libboost-filesystem-dev libboost-program-options-dev libboost-system-dev libboost-test-dev libboost-thread-dev libevent-dev libssl-dev qt5-default qtbase5-dev qtbase5-dev-tools `` -y\nRUN apt-get install --no-install-recommends mono-devel `` -y\nRUN apt-get install --no-install-recommends dmd-bin libevent-dev libssl-dev xdg-utils `` -y\n#   libevent deimos disabled - build errors\n#   RUN mkdir -p /usr/include/dmd/druntime/import/deimos /usr/include/dmd/druntime/import/C && \\\n#       curl -sSL https://github.com/D-Programming-Deimos/libevent/archive/master.tar.gz| tar xz && \\\n#       mv libevent-master/deimos/* /usr/include/dmd/druntime/import/deimos/ && \\\n#       mv libevent-master/C/* /usr/include/dmd/druntime/import/C/ && \\\n#       rm -rf libevent-master\n#   openssl deimos doesn't work with openssl-1.1.0 - disabling it for now:\n#   RUN curl -sSL https://github.com/D-Programming-Deimos/openssl/archive/master.tar.gz| tar xz && \\\n#       mv openssl-master/deimos/* /usr/include/dmd/druntime/import/deimos/ && \\\n#       mv openssl-master/C/* /usr/include/dmd/druntime/import/C/ && \\\n#       rm -rf openssl-master\nRUN apt-get install --no-install-recommends dart `` -y\nENV PATH=\"/usr/lib/dart/bin:$PATH\"\n#   project isn't ready for this quite yet:\n#   RUN apt-get install -y --no-install-recommends \\\n#   `# dotnet core dependencies` \\\n#         dotnet-sdk-2.0.0\nRUN apt-get install --no-install-recommends erlang-base erlang-eunit erlang-dev erlang-tools rebar `` -y\nRUN apt-get install --no-install-recommends libglib2.0-dev `` -y\nRUN apt-get install --no-install-recommends golang-go `` -y\nRUN apt-get install --no-install-recommends ghc cabal-install `` -y\nRUN apt-get install --no-install-recommends haxe neko neko-dev `` -y\nRUN haxelib setup --always /usr/share/haxe/lib \\\n && haxelib install --always hxcpp\nRUN apt-get install --no-install-recommends ant ant-optional openjdk-8-jdk maven `` -y\nRUN apt-get install --no-install-recommends lua5.2 lua5.2-dev `` -y\n#   https://bugs.launchpad.net/ubuntu/+source/lua5.3/+bug/1707212\n#   same for debian stretch\n#   lua5.3 does not install alternatives so stick with 5.2 here\nRUN apt-get install --no-install-recommends nodejs `` -y\nRUN apt-get install --no-install-recommends ocaml opam `` -y \\\n && opam init --yes \\\n && opam install --yes oasis\nRUN apt-get install --no-install-recommends libbit-vector-perl libclass-accessor-class-perl libcrypt-ssleay-perl libio-socket-ssl-perl libnet-ssleay-perl `` -y\nRUN apt-get install --no-install-recommends php7.0 php7.0-cli php7.0-dev php-pear re2c phpunit `` -y\nRUN apt-get install --no-install-recommends python-all python-all-dbg python-all-dev python-backports.ssl-match-hostname python-ipaddress python-pip python-setuptools python-six python-tornado python-twisted python-wheel python-zope.interface python3-all python3-all-dbg python3-all-dev python3-setuptools python3-six python3-tornado python3-twisted python3-wheel python3-zope.interface `` -y \\\n && pip install backports.ssl_match_hostname==3.7.0.1 --upgrade\nRUN apt-get install --no-install-recommends ruby ruby-dev ruby-bundler `` -y\nRUN gem install bundler --version 2.4.12 --no-ri --no-rdoc\nRUN apt-get install --no-install-recommends rustc `` -y\n#   Update anything else left hanging\nRUN apt-get dist-upgrade -y\n#   Clean up\nRUN rm -rf /var/cache/apt/* \\\n && rm -rf /var/lib/apt/lists/* \\\n && rm -rf /tmp/* \\\n && rm -rf /var/tmp/*\nENV THRIFT_ROOT=\"/thrift\"\nRUN mkdir -p $THRIFT_ROOT/src\nCOPY Dockerfile $THRIFT_ROOT/\nWORKDIR $THRIFT_ROOT/src\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Licensed under the Apache License, Version 2.0 (the \"License\");\n#  you may not use this file except in compliance with the License.\n#  You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n#  Unless required by applicable law or agreed to in writing, software\n#  distributed under the License is distributed on an \"AS IS\" BASIS,\n#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#  See the License for the specific language governing permissions and\n#  limitations under the License.\n#  Apache Thrift Docker build environment for Debian Stretch\n#\n#  Known issues:\n#  - d: deimos for libevent and openssl disabled - build errors\n#  - dotnetcore, because netcore is for 1.0.0-preview and 2.0.0 is out\n#  - rust: cargo not in debian repo - perhaps not needed?\nFROM buildpack-deps:stretch-scm\nMAINTAINER Apache Thrift <dev@thrift.apache.org>\nENV DEBIAN_FRONTEND=\"noninteractive\"\n# ## Add apt repos\nRUN apt-get update \\\n && apt-get install --no-install-recommends apt apt-transport-https curl wget apt-utils -y\n#  D\nRUN wget http://master.dl.sourceforge.net/project/d-apt/files/d-apt.list -O /etc/apt/sources.list.d/d-apt.list \\\n && apt-get update \\\n && apt-get install d-apt-keyring -y --allow-unauthenticated --reinstall\n#  Dart\nRUN curl https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \\\n && curl https://storage.googleapis.com/download.dartlang.org/linux/debian/dart_stable.list > /etc/apt/sources.list.d/dart_stable.list \\\n && sed -i /etc/apt/sources.list.d/dart_stable.list -e 's/https:/http:/g'\n#  dotnet (core) 2.0.0 - project isn't ready for this yet:\n#  RUN curl https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > /etc/apt/trusted.gpg.d/microsoft.gpg && \\\n#      echo \"deb [arch=amd64] https://packages.microsoft.com/repos/microsoft-ubuntu-xenial-prod xenial main\" > /etc/apt/sources.list.d/dotnetdev.list\n#  node.js (this step runs apt-get update internally)\nRUN curl -sL https://deb.nodesource.com/setup_8.x | bash\n# ## install general dependencies\nRUN apt-get install --no-install-recommends bash-completion bison build-essential clang cmake debhelper flex gdb ninja-build pkg-config valgrind vim `` -y\n# ## languages\nRUN apt-get install --no-install-recommends libboost-dev libboost-filesystem-dev libboost-program-options-dev libboost-system-dev libboost-test-dev libboost-thread-dev libevent-dev libssl-dev qt5-default qtbase5-dev qtbase5-dev-tools `` -y\nRUN apt-get install --no-install-recommends mono-devel `` -y\nRUN apt-get install --no-install-recommends dmd-bin libevent-dev libssl-dev xdg-utils `` -y\n#  libevent deimos disabled - build errors\n#  RUN mkdir -p /usr/include/dmd/druntime/import/deimos /usr/include/dmd/druntime/import/C && \\\n#      curl -sSL https://github.com/D-Programming-Deimos/libevent/archive/master.tar.gz| tar xz && \\\n#      mv libevent-master/deimos/* /usr/include/dmd/druntime/import/deimos/ && \\\n#      mv libevent-master/C/* /usr/include/dmd/druntime/import/C/ && \\\n#      rm -rf libevent-master\n#  openssl deimos doesn't work with openssl-1.1.0 - disabling it for now:\n#  RUN curl -sSL https://github.com/D-Programming-Deimos/openssl/archive/master.tar.gz| tar xz && \\\n#      mv openssl-master/deimos/* /usr/include/dmd/druntime/import/deimos/ && \\\n#      mv openssl-master/C/* /usr/include/dmd/druntime/import/C/ && \\\n#      rm -rf openssl-master\nRUN apt-get install --no-install-recommends dart `` -y\nENV PATH=\"/usr/lib/dart/bin:$PATH\"\n#  project isn't ready for this quite yet:\n#  RUN apt-get install -y --no-install-recommends \\\n#  `# dotnet core dependencies` \\\n#        dotnet-sdk-2.0.0\nRUN apt-get install --no-install-recommends erlang-base erlang-eunit erlang-dev erlang-tools rebar `` -y\nRUN apt-get install --no-install-recommends libglib2.0-dev `` -y\nRUN apt-get install --no-install-recommends golang-go `` -y\nRUN apt-get install --no-install-recommends ghc cabal-install `` -y\nRUN apt-get install --no-install-recommends haxe neko neko-dev `` -y\nRUN haxelib setup --always /usr/share/haxe/lib \\\n && haxelib install --always hxcpp\nRUN apt-get install --no-install-recommends ant ant-optional openjdk-8-jdk maven `` -y\nRUN apt-get install --no-install-recommends lua5.2 lua5.2-dev `` -y\n#  https://bugs.launchpad.net/ubuntu/+source/lua5.3/+bug/1707212\n#  same for debian stretch\n#  lua5.3 does not install alternatives so stick with 5.2 here\nRUN apt-get install --no-install-recommends nodejs `` -y\nRUN apt-get install --no-install-recommends ocaml opam `` -y \\\n && opam init --yes \\\n && opam install --yes oasis\nRUN apt-get install --no-install-recommends libbit-vector-perl libclass-accessor-class-perl libcrypt-ssleay-perl libio-socket-ssl-perl libnet-ssleay-perl `` -y\nRUN apt-get install --no-install-recommends php7.0 php7.0-cli php7.0-dev php-pear re2c phpunit `` -y\nRUN apt-get install --no-install-recommends python-all python-all-dbg python-all-dev python-backports.ssl-match-hostname python-ipaddress python-pip python-setuptools python-six python-tornado python-twisted python-wheel python-zope.interface python3-all python3-all-dbg python3-all-dev python3-setuptools python3-six python3-tornado python3-twisted python3-wheel python3-zope.interface `` -y \\\n && pip install backports.ssl_match_hostname --upgrade\nRUN apt-get install --no-install-recommends ruby ruby-dev ruby-bundler `` -y\nRUN gem install bundler --no-ri --no-rdoc\nRUN apt-get install --no-install-recommends rustc `` -y\n#  Update anything else left hanging\nRUN apt-get dist-upgrade -y\n#  Clean up\nRUN rm -rf /var/cache/apt/* \\\n && rm -rf /var/lib/apt/lists/* \\\n && rm -rf /tmp/* \\\n && rm -rf /var/tmp/*\nENV THRIFT_ROOT=\"/thrift\"\nRUN mkdir -p $THRIFT_ROOT/src\nCOPY Dockerfile $THRIFT_ROOT/\nWORKDIR $THRIFT_ROOT/src\n","injectedSmells":[],"originalDockerfileHash":"8f50161db0758e0c927e8c609809cd3d","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Licensed under the Apache License, Version 2.0 (the \"License\");\n#   you may not use this file except in compliance with the License.\n#   You may obtain a copy of the License at\n#\n#       http://www.apache.org/licenses/LICENSE-2.0\n#\n#   Unless required by applicable law or agreed to in writing, software\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#   See the License for the specific language governing permissions and\n#   limitations under the License.\n#   Apache Thrift Docker build environment for Debian Stretch\n#\n#   Known issues:\n#   - d: deimos for libevent and openssl disabled - build errors\n#   - dotnetcore, because netcore is for 1.0.0-preview and 2.0.0 is out\n#   - rust: cargo not in debian repo - perhaps not needed?\nFROM buildpack-deps:stretch-scm\nMAINTAINER Apache Thrift <dev@thrift.apache.org>\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#  ## Add apt repos\nRUN apt-get update \\\n && apt-get install --no-install-recommends apt apt-transport-https curl wget apt-utils -y\n#   D\nRUN wget http://master.dl.sourceforge.net/project/d-apt/files/d-apt.list -O /etc/apt/sources.list.d/d-apt.list \\\n && apt-get update \\\n && apt-get install d-apt-keyring -y --allow-unauthenticated --reinstall\n#   Dart\nRUN curl https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \\\n && curl https://storage.googleapis.com/download.dartlang.org/linux/debian/dart_stable.list > /etc/apt/sources.list.d/dart_stable.list \\\n && sed -i /etc/apt/sources.list.d/dart_stable.list -e 's/https:/http:/g'\n#   dotnet (core) 2.0.0 - project isn't ready for this yet:\n#   RUN curl https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > /etc/apt/trusted.gpg.d/microsoft.gpg && \\\n#       echo \"deb [arch=amd64] https://packages.microsoft.com/repos/microsoft-ubuntu-xenial-prod xenial main\" > /etc/apt/sources.list.d/dotnetdev.list\n#   node.js (this step runs apt-get update internally)\nRUN curl -sL https://deb.nodesource.com/setup_8.x | bash\n#  ## install general dependencies\nRUN apt-get install --no-install-recommends bash-completion bison build-essential clang cmake debhelper flex gdb ninja-build pkg-config valgrind vim `` -y\n#  ## languages\nRUN apt-get install --no-install-recommends libboost-dev libboost-filesystem-dev libboost-program-options-dev libboost-system-dev libboost-test-dev libboost-thread-dev libevent-dev libssl-dev qt5-default qtbase5-dev qtbase5-dev-tools `` -y\nRUN apt-get install --no-install-recommends mono-devel `` -y\nRUN apt-get install --no-install-recommends dmd-bin libevent-dev libssl-dev xdg-utils `` -y\n#   libevent deimos disabled - build errors\n#   RUN mkdir -p /usr/include/dmd/druntime/import/deimos /usr/include/dmd/druntime/import/C && \\\n#       curl -sSL https://github.com/D-Programming-Deimos/libevent/archive/master.tar.gz| tar xz && \\\n#       mv libevent-master/deimos/* /usr/include/dmd/druntime/import/deimos/ && \\\n#       mv libevent-master/C/* /usr/include/dmd/druntime/import/C/ && \\\n#       rm -rf libevent-master\n#   openssl deimos doesn't work with openssl-1.1.0 - disabling it for now:\n#   RUN curl -sSL https://github.com/D-Programming-Deimos/openssl/archive/master.tar.gz| tar xz && \\\n#       mv openssl-master/deimos/* /usr/include/dmd/druntime/import/deimos/ && \\\n#       mv openssl-master/C/* /usr/include/dmd/druntime/import/C/ && \\\n#       rm -rf openssl-master\nRUN apt-get install --no-install-recommends dart `` -y\nENV PATH=\"/usr/lib/dart/bin:$PATH\"\n#   project isn't ready for this quite yet:\n#   RUN apt-get install -y --no-install-recommends \\\n#   `# dotnet core dependencies` \\\n#         dotnet-sdk-2.0.0\nRUN apt-get install --no-install-recommends erlang-base erlang-eunit erlang-dev erlang-tools rebar `` -y\nRUN apt-get install --no-install-recommends libglib2.0-dev `` -y\nRUN apt-get install --no-install-recommends golang-go `` -y\nRUN apt-get install --no-install-recommends ghc cabal-install `` -y\nRUN apt-get install --no-install-recommends haxe neko neko-dev `` -y\nRUN haxelib setup --always /usr/share/haxe/lib \\\n && haxelib install --always hxcpp\nRUN apt-get install --no-install-recommends ant ant-optional openjdk-8-jdk maven `` -y\nRUN apt-get install --no-install-recommends lua5.2 lua5.2-dev `` -y\n#   https://bugs.launchpad.net/ubuntu/+source/lua5.3/+bug/1707212\n#   same for debian stretch\n#   lua5.3 does not install alternatives so stick with 5.2 here\nRUN apt-get install --no-install-recommends nodejs `` -y\nRUN apt-get install --no-install-recommends ocaml opam `` -y \\\n && opam init --yes \\\n && opam install --yes oasis\nRUN apt-get install --no-install-recommends libbit-vector-perl libclass-accessor-class-perl libcrypt-ssleay-perl libio-socket-ssl-perl libnet-ssleay-perl `` -y\nRUN apt-get install --no-install-recommends php7.0 php7.0-cli php7.0-dev php-pear re2c phpunit `` -y\nRUN apt-get install --no-install-recommends python-all python-all-dbg python-all-dev python-backports.ssl-match-hostname python-ipaddress python-pip python-setuptools python-six python-tornado python-twisted python-wheel python-zope.interface python3-all python3-all-dbg python3-all-dev python3-setuptools python3-six python3-tornado python3-twisted python3-wheel python3-zope.interface `` -y \\\n && pip install backports.ssl_match_hostname --upgrade\nRUN apt-get install --no-install-recommends ruby ruby-dev ruby-bundler `` -y\nRUN gem install bundler --no-ri --no-rdoc\nRUN apt-get install --no-install-recommends rustc `` -y\n#   Update anything else left hanging\nRUN apt-get dist-upgrade -y\n#   Clean up\nRUN rm -rf /var/cache/apt/* \\\n && rm -rf /var/lib/apt/lists/* \\\n && rm -rf /tmp/* \\\n && rm -rf /var/tmp/*\nENV THRIFT_ROOT=\"/thrift\"\nRUN mkdir -p $THRIFT_ROOT/src\nCOPY Dockerfile $THRIFT_ROOT/\nWORKDIR $THRIFT_ROOT/src\n","originalDockerfileUglifiedHash":"6862edef427532ef4ff9c04f31339b99","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/503eecd4240596633668032a14a2273e29e63ed3.dockerfile"}