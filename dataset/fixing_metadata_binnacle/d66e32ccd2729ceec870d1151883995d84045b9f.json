{"seed":3446354824,"processedDockerfileHash":"a1a873a07eabd6f0f6a766fc26c53445","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","have-a-healthcheck"],"processedDockerfile":"#   Copyright (c) Jupyter Development Team.\n#   Distributed under the terms of the Modified BSD License.\nFROM digitalanatomist/base-notebook-CUDA10-ubuntu18.04:latest\nMAINTAINER Samir Jabari <samir.jabari@fau.de>\n#  MAINTAINER aburnap@mit.edu\n#  MAINTAINER Jupyter Project <jupyter@googlegroups.com>\n#   For CUDA profiling, TensorFlow requires CUPTI.\nENV LD_LIBRARY_PATH=\"/usr/local/cuda/extras/CUPTI/lib64:$LD_LIBRARY_PATH\"\nENV CUDA_HOME=\"/usr/local/cuda\"\nENV CUDA_ROOT=\"$CUDA_HOME\"\nENV PATH=\"$PATH:$CUDA_ROOT/bin:$HOME/bin\"\nENV LD_LIBRARY_PATH=\"$LD_LIBRARY_PATH:$CUDA_ROOT/lib64\"\nUSER root\nRUN :\nRUN ln -sf /usr/bin/python3.6 /usr/local/bin/python3 \\\n && ln -sf /usr/local/bin/pip /usr/local/bin/pip3\n#   Install all OS dependencies for fully functional notebook server\nRUN apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends build-essential=12.9ubuntu3 git=1:2.39.2-1ubuntu1 curl=7.88.1-7ubuntu1 freeglut3-dev=3.4.0-1 libcupti-dev=11.8.87~11.8.0-2ubuntu1 libcurl3-dev libfreetype6-dev=2.12.1+dfsg-4 libzmq3-dev=4.3.4-6 pkg-config=1.8.1-1ubuntu2 unzip=6.0-27ubuntu1 rsync=3.2.7-1 software-properties-common=0.99.35 inkscape=1.2.2-2ubuntu1 jed=1:0.99.20~pre.178+dfsg-1 libsm6=2:1.2.3-1build2 libxext-dev=2:1.3.4-1build1 libxrender1=1:0.9.10-1.1 lmodern=2.005-1 pandoc=2.17.1.1-1.1ubuntu1 vim=2:9.0.1000-4ubuntu2 libpng-dev=1.6.39-2 g++=4:12.2.0-3ubuntu1 gfortran=4:12.2.0-3ubuntu1 libffi-dev=3.4.4-1 libhdf5-dev=1.10.8+repack1-1ubuntu1 libjpeg-dev=8c-2ubuntu11 liblcms2-dev=2.14-2 libopenblas-dev=0.3.21+ds-4 liblapack-dev=3.11.0-2 libssl-dev=3.0.8-1ubuntu1 libtiff5-dev=4.5.0-4ubuntu1 libwebp-dev=1.2.4-0.1build1 nano=7.2-1 libopenslide-dev=3.4.1+dfsg-6build1 wget=1.21.3-1ubuntu1 zlib1g-dev=1:1.2.13.dfsg-1ubuntu4 qt5-default libvtk6-dev libopenexr-dev=3.1.5-4 libgdal-dev=3.6.2+dfsg-1build1 libdc1394-22-dev libavcodec-dev=7:5.1.2-3ubuntu1 libavformat-dev=7:5.1.2-3ubuntu1 libswscale-dev=7:5.1.2-3ubuntu1 libtheora-dev=1.1.1+dfsg.1-16.1 libvorbis-dev=1.3.7-1build2 libxvidcore-dev=2:1.3.7-1 libx264-dev=2:0.164.3095+gitbaee400-2build1 yasm=1.3.0-4 libopencore-amrnb-dev=0.1.6-1 libopencore-amrwb-dev=0.1.6-1 libv4l-dev=1.22.1-5build1 libxine2-dev=1.2.13-1 libtbb-dev=2021.8.0-1ubuntu2 libeigen3-dev=3.4.0-4 ant=1.10.13-1 default-jdk=2:1.17-74 doxygen=1.9.4-4 bc=1.07.1-3build1 cmake=3.25.1-1 python-dev python-tk python-setuptools python-numpy python-scipy python-nose python-h5py python-skimage python-matplotlib python-pandas python-sklearn python-sympy python3-dev=3.11.2-1 python3-tk=3.11.2-2 python3-setuptools=66.1.1-1 python3-numpy=1:1.24.2-1 python3-scipy=1.10.1-1 python3-nose=1.3.7-9 python3-h5py=3.7.0-8 python3-skimage=0.19.3-8build1 python3-matplotlib=3.5.2-4ubuntu1 python3-pandas=1.5.3+dfsg-2 python3-sklearn=1.2.1+dfsg-1build1 python3-sympy=1.11.1-1 -y ) \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n#   Installing OpenSlide\nRUN apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends openslide-tools=3.4.1+dfsg-6build1 -y )\nRUN apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends python3-openslide=1.2.0-1build2 -y ) \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n#   Installing Libvips\nRUN apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends libvips libvips-dev=8.14.1-3 libvips-tools=8.14.1-3 libopenslide-dev=3.4.1+dfsg-6build1 -y )\nRUN /opt/conda/envs/deep_learning_python3/bin/python -m pip install scikit-image pandas tqdm imgaug kaggle pydicom tensorboardX tensorflow-tensorboard sklearn plotly pretrainedmodels seaborn keras skorch ignite graphviz sklearn_pandas isoweek pandas_summary spacy pypng torchtext Pillow h5py ipykernel jupyter matplotlib numpy scipy bcolz Cython path.py six sphinx wheel pygments Flask statsmodels ipython scikit-learn zmq openslide-python jupyter-tensorboard \\\n && fix-permissions $CONDA_DIR \\\n && fix-permissions /home/$NB_USER\nRUN /opt/conda/envs/deep_learning_python2/bin/python -m pip install scikit-image pandas tqdm imgaug kaggle pydicom tensorboardX tensorflow-tensorboard sklearn plotly pretrainedmodels seaborn keras skorch ignite graphviz sklearn_pandas isoweek pandas_summary spacy pypng torchtext Pillow h5py ipykernel jupyter matplotlib numpy scipy bcolz Cython path.py six sphinx wheel pygments Flask statsmodels ipython scikit-learn zmq openslide-python jupyter-tensorboard \\\n && fix-permissions $CONDA_DIR \\\n && fix-permissions /home/$NB_USER\n#   Installing OpenCV TensorFlow Kerasand Pytorch into the environments\nRUN conda install -n deep_learning_python2 -y opencv tensorboard tensorflow-gpu=1.12.0 keras pytorch torchvision cuda100 -c pytorch \\\n && fix-permissions $CONDA_DIR \\\n && fix-permissions /home/$NB_USER\nRUN conda install -n deep_learning_python3 opencv tensorboard tensorflow-gpu=1.12.0 keras pytorch torchvision cuda100 -c pytorch \\\n && fix-permissions $CONDA_DIR \\\n && fix-permissions /home/$NB_USER\nRUN conda install --yes 'tensorflow-gpu==1.11.0' \\\n && fix-permissions $CONDA_DIR \\\n && fix-permissions /home/$NB_USER\n#   Import matplotlib the first time to build the font cache.\n#  ENV XDG_CACHE_HOME /home/$NB_USER/.cache/\n#  RUN MPLBACKEND=Agg python -c \"import matplotlib.pyplot\" && \\\n#  fix-permissions /home/$NB_USER\n#   Install facets which does not have a pip or conda package at the moment\n#  RUN cd /tmp && \\\n#      git clone https://github.com/PAIR-code/facets.git && \\\n#      cd facets && \\\n#      /opt/conda/envs/deep_learning_python2/bin/ jupyter nbextension install facets-dist/ --sys-prefix && \\\n#      /opt/conda/envs/deep_learning_python3/bin/ jupyter nbextension install facets-dist/ --sys-prefix && \\\n#      rm -rf facets && \\\n#      fix-permissions $CONDA_DIR &&\\\n#      fix-permissions /home/$NB_USER\nRUN python3.6 -m pip install --upgrade --force-reinstall --no-cache-dir --ignore-installed --pre jupyter-tensorboard \\\n && fix-permissions $CONDA_DIR \\\n && fix-permissions /home/$NB_USER\nEXPOSE 5000/tcp 6006/tcp\nUSER root\n#   Autodetects jupyterhub and standalone modes\n#  COPY jupyter_notebook_config.py /root/.jupyter/\n#  COPY run_jupyter.sh /usr/local/bin/\n#  RUN chmod +x /usr/local/bin/run_jupyter.sh\n#  CMD [\"/usr/local/bin/run_jupyter.sh\", \"--allow-root\"]\nUSER $NB_USER\nCMD [\"start-notebook.sh\"]\n#  COPY start-notebook.sh /usr/local/bin/\n#  USER $NB_USER\n#   cleanup\n#  RUN \tapt-get autoremove -y && \\\n#   apt-get autoclean && \\\n#   apt-get clean && \\\n#  rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Copyright (c) Jupyter Development Team.\n#  Distributed under the terms of the Modified BSD License.\nFROM digitalanatomist/base-notebook-CUDA10-ubuntu18.04:latest\nMAINTAINER Samir Jabari <samir.jabari@fau.de>\n# MAINTAINER aburnap@mit.edu\n# MAINTAINER Jupyter Project <jupyter@googlegroups.com>\n#  For CUDA profiling, TensorFlow requires CUPTI.\nENV LD_LIBRARY_PATH=\"/usr/local/cuda/extras/CUPTI/lib64:$LD_LIBRARY_PATH\"\nENV CUDA_HOME=\"/usr/local/cuda\"\nENV CUDA_ROOT=\"$CUDA_HOME\"\nENV PATH=\"$PATH:$CUDA_ROOT/bin:$HOME/bin\"\nENV LD_LIBRARY_PATH=\"$LD_LIBRARY_PATH:$CUDA_ROOT/lib64\"\nUSER root\nRUN apt-get update\nRUN ln -sf /usr/bin/python3.6 /usr/local/bin/python3 \\\n && ln -sf /usr/local/bin/pip /usr/local/bin/pip3\n#  Install all OS dependencies for fully functional notebook server\nRUN apt-get update \\\n && apt-get install --no-install-recommends build-essential git curl freeglut3-dev libcupti-dev libcurl3-dev libfreetype6-dev libzmq3-dev pkg-config unzip rsync software-properties-common inkscape jed libsm6 libxext-dev libxrender1 lmodern pandoc vim libpng-dev g++ gfortran libffi-dev libhdf5-dev libjpeg-dev liblcms2-dev libopenblas-dev liblapack-dev libssl-dev libtiff5-dev libwebp-dev nano libopenslide-dev wget zlib1g-dev qt5-default libvtk6-dev libopenexr-dev libgdal-dev libdc1394-22-dev libavcodec-dev libavformat-dev libswscale-dev libtheora-dev libvorbis-dev libxvidcore-dev libx264-dev yasm libopencore-amrnb-dev libopencore-amrwb-dev libv4l-dev libxine2-dev libtbb-dev libeigen3-dev ant default-jdk doxygen bc cmake python-dev python-tk python-setuptools python-numpy python-scipy python-nose python-h5py python-skimage python-matplotlib python-pandas python-sklearn python-sympy python3-dev python3-tk python3-setuptools python3-numpy python3-scipy python3-nose python3-h5py python3-skimage python3-matplotlib python3-pandas python3-sklearn python3-sympy -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n#  Installing OpenSlide\nRUN apt-get update \\\n && apt-get install openslide-tools -y\nRUN apt-get update \\\n && apt-get install python3-openslide -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n#  Installing Libvips\nRUN apt-get update \\\n && apt-get install -y libvips libvips-dev libvips-tools libopenslide-dev\nRUN /opt/conda/envs/deep_learning_python3/bin/python -m pip install scikit-image pandas tqdm imgaug kaggle pydicom tensorboardX tensorflow-tensorboard sklearn plotly pretrainedmodels seaborn keras skorch ignite graphviz sklearn_pandas isoweek pandas_summary spacy pypng torchtext Pillow h5py ipykernel jupyter matplotlib numpy scipy bcolz Cython path.py six sphinx wheel pygments Flask statsmodels ipython scikit-learn zmq openslide-python jupyter-tensorboard \\\n && fix-permissions $CONDA_DIR \\\n && fix-permissions /home/$NB_USER\nRUN /opt/conda/envs/deep_learning_python2/bin/python -m pip install scikit-image pandas tqdm imgaug kaggle pydicom tensorboardX tensorflow-tensorboard sklearn plotly pretrainedmodels seaborn keras skorch ignite graphviz sklearn_pandas isoweek pandas_summary spacy pypng torchtext Pillow h5py ipykernel jupyter matplotlib numpy scipy bcolz Cython path.py six sphinx wheel pygments Flask statsmodels ipython scikit-learn zmq openslide-python jupyter-tensorboard \\\n && fix-permissions $CONDA_DIR \\\n && fix-permissions /home/$NB_USER\n#  Installing OpenCV TensorFlow Kerasand Pytorch into the environments\nRUN conda install -n deep_learning_python2 -y opencv tensorboard tensorflow-gpu=1.12.0 keras pytorch torchvision cuda100 -c pytorch \\\n && fix-permissions $CONDA_DIR \\\n && fix-permissions /home/$NB_USER\nRUN conda install -n deep_learning_python3 opencv tensorboard tensorflow-gpu=1.12.0 keras pytorch torchvision cuda100 -c pytorch \\\n && fix-permissions $CONDA_DIR \\\n && fix-permissions /home/$NB_USER\nRUN conda install --yes 'tensorflow-gpu==1.11.0' \\\n && fix-permissions $CONDA_DIR \\\n && fix-permissions /home/$NB_USER\n#  Import matplotlib the first time to build the font cache.\n# ENV XDG_CACHE_HOME /home/$NB_USER/.cache/\n# RUN MPLBACKEND=Agg python -c \"import matplotlib.pyplot\" && \\\n# fix-permissions /home/$NB_USER\n#  Install facets which does not have a pip or conda package at the moment\n# RUN cd /tmp && \\\n#     git clone https://github.com/PAIR-code/facets.git && \\\n#     cd facets && \\\n#     /opt/conda/envs/deep_learning_python2/bin/ jupyter nbextension install facets-dist/ --sys-prefix && \\\n#     /opt/conda/envs/deep_learning_python3/bin/ jupyter nbextension install facets-dist/ --sys-prefix && \\\n#     rm -rf facets && \\\n#     fix-permissions $CONDA_DIR &&\\\n#     fix-permissions /home/$NB_USER\nRUN python3.6 -m pip install --upgrade --force-reinstall --no-cache-dir --ignore-installed --pre jupyter-tensorboard \\\n && fix-permissions $CONDA_DIR \\\n && fix-permissions /home/$NB_USER\nEXPOSE 5000/tcp 6006/tcp\nUSER root\n#  Autodetects jupyterhub and standalone modes\n# COPY jupyter_notebook_config.py /root/.jupyter/\n# COPY run_jupyter.sh /usr/local/bin/\n# RUN chmod +x /usr/local/bin/run_jupyter.sh\n# CMD [\"/usr/local/bin/run_jupyter.sh\", \"--allow-root\"]\nUSER $NB_USER\nCMD [\"start-notebook.sh\"]\n# COPY start-notebook.sh /usr/local/bin/\n# USER $NB_USER\n#  cleanup\n# RUN \tapt-get autoremove -y && \\\n#  apt-get autoclean && \\\n#  apt-get clean && \\\n# rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n","injectedSmells":[],"originalDockerfileHash":"346d2f40e8585b3c4a5bd6bacd6b3388","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Copyright (c) Jupyter Development Team.\n#   Distributed under the terms of the Modified BSD License.\nFROM digitalanatomist/base-notebook-CUDA10-ubuntu18.04:latest\nMAINTAINER Samir Jabari <samir.jabari@fau.de>\n#  MAINTAINER aburnap@mit.edu\n#  MAINTAINER Jupyter Project <jupyter@googlegroups.com>\n#   For CUDA profiling, TensorFlow requires CUPTI.\nENV LD_LIBRARY_PATH=\"/usr/local/cuda/extras/CUPTI/lib64:$LD_LIBRARY_PATH\"\nENV CUDA_HOME=\"/usr/local/cuda\"\nENV CUDA_ROOT=\"$CUDA_HOME\"\nENV PATH=\"$PATH:$CUDA_ROOT/bin:$HOME/bin\"\nENV LD_LIBRARY_PATH=\"$LD_LIBRARY_PATH:$CUDA_ROOT/lib64\"\nUSER root\nRUN apt-get update\nRUN ln -sf /usr/bin/python3.6 /usr/local/bin/python3 \\\n && ln -sf /usr/local/bin/pip /usr/local/bin/pip3\n#   Install all OS dependencies for fully functional notebook server\nRUN apt-get update \\\n && apt-get install --no-install-recommends build-essential git curl freeglut3-dev libcupti-dev libcurl3-dev libfreetype6-dev libzmq3-dev pkg-config unzip rsync software-properties-common inkscape jed libsm6 libxext-dev libxrender1 lmodern pandoc vim libpng-dev g++ gfortran libffi-dev libhdf5-dev libjpeg-dev liblcms2-dev libopenblas-dev liblapack-dev libssl-dev libtiff5-dev libwebp-dev nano libopenslide-dev wget zlib1g-dev qt5-default libvtk6-dev libopenexr-dev libgdal-dev libdc1394-22-dev libavcodec-dev libavformat-dev libswscale-dev libtheora-dev libvorbis-dev libxvidcore-dev libx264-dev yasm libopencore-amrnb-dev libopencore-amrwb-dev libv4l-dev libxine2-dev libtbb-dev libeigen3-dev ant default-jdk doxygen bc cmake python-dev python-tk python-setuptools python-numpy python-scipy python-nose python-h5py python-skimage python-matplotlib python-pandas python-sklearn python-sympy python3-dev python3-tk python3-setuptools python3-numpy python3-scipy python3-nose python3-h5py python3-skimage python3-matplotlib python3-pandas python3-sklearn python3-sympy -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n#   Installing OpenSlide\nRUN apt-get update \\\n && apt-get install openslide-tools -y\nRUN apt-get update \\\n && apt-get install python3-openslide -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n#   Installing Libvips\nRUN apt-get update \\\n && apt-get install libvips libvips-dev libvips-tools libopenslide-dev -y\nRUN /opt/conda/envs/deep_learning_python3/bin/python -m pip install scikit-image pandas tqdm imgaug kaggle pydicom tensorboardX tensorflow-tensorboard sklearn plotly pretrainedmodels seaborn keras skorch ignite graphviz sklearn_pandas isoweek pandas_summary spacy pypng torchtext Pillow h5py ipykernel jupyter matplotlib numpy scipy bcolz Cython path.py six sphinx wheel pygments Flask statsmodels ipython scikit-learn zmq openslide-python jupyter-tensorboard \\\n && fix-permissions $CONDA_DIR \\\n && fix-permissions /home/$NB_USER\nRUN /opt/conda/envs/deep_learning_python2/bin/python -m pip install scikit-image pandas tqdm imgaug kaggle pydicom tensorboardX tensorflow-tensorboard sklearn plotly pretrainedmodels seaborn keras skorch ignite graphviz sklearn_pandas isoweek pandas_summary spacy pypng torchtext Pillow h5py ipykernel jupyter matplotlib numpy scipy bcolz Cython path.py six sphinx wheel pygments Flask statsmodels ipython scikit-learn zmq openslide-python jupyter-tensorboard \\\n && fix-permissions $CONDA_DIR \\\n && fix-permissions /home/$NB_USER\n#   Installing OpenCV TensorFlow Kerasand Pytorch into the environments\nRUN conda install -n deep_learning_python2 -y opencv tensorboard tensorflow-gpu=1.12.0 keras pytorch torchvision cuda100 -c pytorch \\\n && fix-permissions $CONDA_DIR \\\n && fix-permissions /home/$NB_USER\nRUN conda install -n deep_learning_python3 opencv tensorboard tensorflow-gpu=1.12.0 keras pytorch torchvision cuda100 -c pytorch \\\n && fix-permissions $CONDA_DIR \\\n && fix-permissions /home/$NB_USER\nRUN conda install --yes 'tensorflow-gpu==1.11.0' \\\n && fix-permissions $CONDA_DIR \\\n && fix-permissions /home/$NB_USER\n#   Import matplotlib the first time to build the font cache.\n#  ENV XDG_CACHE_HOME /home/$NB_USER/.cache/\n#  RUN MPLBACKEND=Agg python -c \"import matplotlib.pyplot\" && \\\n#  fix-permissions /home/$NB_USER\n#   Install facets which does not have a pip or conda package at the moment\n#  RUN cd /tmp && \\\n#      git clone https://github.com/PAIR-code/facets.git && \\\n#      cd facets && \\\n#      /opt/conda/envs/deep_learning_python2/bin/ jupyter nbextension install facets-dist/ --sys-prefix && \\\n#      /opt/conda/envs/deep_learning_python3/bin/ jupyter nbextension install facets-dist/ --sys-prefix && \\\n#      rm -rf facets && \\\n#      fix-permissions $CONDA_DIR &&\\\n#      fix-permissions /home/$NB_USER\nRUN python3.6 -m pip install --upgrade --force-reinstall --no-cache-dir --ignore-installed --pre jupyter-tensorboard \\\n && fix-permissions $CONDA_DIR \\\n && fix-permissions /home/$NB_USER\nEXPOSE 5000/tcp 6006/tcp\nUSER root\n#   Autodetects jupyterhub and standalone modes\n#  COPY jupyter_notebook_config.py /root/.jupyter/\n#  COPY run_jupyter.sh /usr/local/bin/\n#  RUN chmod +x /usr/local/bin/run_jupyter.sh\n#  CMD [\"/usr/local/bin/run_jupyter.sh\", \"--allow-root\"]\nUSER $NB_USER\nCMD [\"start-notebook.sh\"]\n#  COPY start-notebook.sh /usr/local/bin/\n#  USER $NB_USER\n#   cleanup\n#  RUN \tapt-get autoremove -y && \\\n#   apt-get autoclean && \\\n#   apt-get clean && \\\n#  rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n","originalDockerfileUglifiedHash":"b9ae98063bcab2bfbaba3c53d2627e5c","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/d66e32ccd2729ceec870d1151883995d84045b9f.dockerfile"}