{"seed":2436204327,"processedDockerfileHash":"d6bebd717ad01dbbd34fd7b7b82fed36","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM ubuntu:16.04 AS ubuntu1604-nojava\nENV DEBIAN_FRONTEND=\"noninteractive\"\nCOPY --from=gcr.io/bazel-public/base:bazelisk /usr/local/bin/bazel /usr/local/bin/bazel\nCOPY --from=gcr.io/bazel-public/base:buildifier /usr/local/bin/buildifier /usr/local/bin/buildifier\nCOPY --from=gcr.io/bazel-public/base:github-release /usr/local/bin/github-release /usr/local/bin/github-release\nCOPY --from=gcr.io/bazel-public/base:saucelabs /usr/local/bin/sc /usr/local/bin/sc\n#  ## Install required packages.\nRUN dpkg --add-architecture i386 \\\n && apt-get update -qqy \\\n && echo \"Installing base packages\" \\\n && apt-get install --no-install-recommends apt-utils=1.2.35 curl=7.47.0-1ubuntu2.19 lsb-release=9.20160110ubuntu0.2 software-properties-common=0.96.20.10 -qqy \\\n && echo \"Installing packages required by Bazel\" \\\n && apt-get install --no-install-recommends build-essential=12.1ubuntu2 clang=1:3.8-33ubuntu3.1 curl=7.47.0-1ubuntu2.19 ed=1.10-2 git=1:2.7.4-0ubuntu1.10 iproute2=4.3.0-1ubuntu3.16.04.5 iputils-ping=3:20121221-5ubuntu2 netcat-openbsd=1.105-7ubuntu1 python=2.7.12-1~16.04 python-dev=2.7.12-1~16.04 python3=3.5.1-3 python3-dev=3.5.1-3 unzip=6.0-20ubuntu1.1 wget=1.17.1-1ubuntu1.5 xvfb=2:1.18.4-0ubuntu0.12 zip=3.0-11 zlib1g-dev=1:1.2.8.dfsg-2ubuntu4.3 -qqy \\\n && echo \"Installing packages required by Android SDK\" \\\n && apt-get install --no-install-recommends expect=5.45-7 libbz2-1.0:i386 libncurses5:i386 libstdc++6:i386 libz1:i386 -qqy \\\n && echo \"Installing packages required by Tensorflow\" \\\n && apt-get install --no-install-recommends libcurl3-dev swig=3.0.8-0ubuntu3 python-enum34=1.1.2-1 python-mock=1.3.0-2.1ubuntu1 python-numpy=1:1.11.0-1ubuntu1 python-pip=8.1.1-2ubuntu0.6 python-wheel=0.29.0-1 python3-mock=1.3.0-2.1ubuntu1 python3-numpy=1:1.11.0-1ubuntu1 python3-pip=8.1.1-2ubuntu0.6 python3-wheel=0.29.0-1 -qqy \\\n && echo \"Installing packages required by Envoy\" \\\n && apt-get install --no-install-recommends automake=1:1.15-4ubuntu1 autotools-dev=20150820.1 cmake=3.5.1-1ubuntu3 libtool=2.4.6-0.1 m4=1.4.17-5 ninja-build=1.5.1-0.1ubuntu1 -qqy \\\n && echo \"Installing packages required by Android emulator\" \\\n && apt-get install --no-install-recommends cpio=2.11+dfsg-5ubuntu1.1 cpu-checker=0.7-0ubuntu7 lsof=4.89+dfsg-0.1 qemu-kvm=1:2.5+dfsg-5ubuntu10.51 qemu-system-x86=1:2.5+dfsg-5ubuntu10.51 unzip=6.0-20ubuntu1.1 xvfb=2:1.18.4-0ubuntu0.12 -qqy \\\n && echo \"Installing packages required by Bazel release process\" \\\n && apt-get install --no-install-recommends devscripts=2.16.2ubuntu3 gnupg=1.4.20-1ubuntu3.3 pandoc=1.16.0.2~dfsg-1 reprepro=4.17.0-1 -qqy \\\n && echo \"Installing packages required by C++ coverage tests\" \\\n && apt-get install --no-install-recommends lcov=1.12-2 llvm=1:3.8-33ubuntu3.1 -qqy \\\n && echo \"Installing packages required by Swift toolchain\" \\\n && apt-get install --no-install-recommends clang=1:3.8-33ubuntu3.1 libicu-dev=55.1-7ubuntu0.5 -qqy \\\n && echo \"Installing packages required by rules_webtesting\" \\\n && apt-get install --no-install-recommends python-urllib3=1.13.1-2ubuntu0.16.04.4 python3-urllib3=1.13.1-2ubuntu0.16.04.4 -qqy \\\n && echo \"Installing packages required by Kythe\" \\\n && apt-get install --no-install-recommends bison=2:3.0.4.dfsg-1 flex=2.6.0-11 uuid-dev=2.27.1-6ubuntu3.10 asciidoc=8.6.9-3 graphviz=2.38.0-12ubuntu2.1 source-highlight=3.1.8-1.1 -qqy \\\n && echo \"Installing packages required by upb\" \\\n && apt-get install --no-install-recommends libreadline-dev=6.3-8ubuntu2 -qqy \\\n && echo \"Installing packages required by Bazel (Ubuntu 14.04 and 16.04 only)\" \\\n && apt-get install --no-install-recommends realpath=8.25-2ubuntu3~16.04 libssl-dev=1.0.2g-1ubuntu4.20 -qqy \\\n && apt-get -qqy purge apport \\\n && rm -rf /var/lib/apt/lists/*\n#  ## Install Python packages required by Tensorflow.\nRUN pip install keras_applications==1.0.8 keras_preprocessing==1.1.2 future==0.18.3 \\\n && pip3 install keras_applications keras_preprocessing future\n#  ## Install Google Cloud SDK.\n#  ## https://cloud.google.com/sdk/docs/quickstart-debian-ubuntu\nRUN export CLOUD_SDK_REPO=\"cloud-sdk-$( lsb_release -c -s ;)\" \\\n && echo \"deb http://packages.cloud.google.com/apt $CLOUD_SDK_REPO main\" | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list \\\n && curl -L https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add - \\\n && apt-get update -qqy \\\n && apt-get install --no-install-recommends google-cloud-sdk -qqy \\\n && rm -rf /var/lib/apt/lists/*\n#  ## Install Docker.\nRUN apt-get update -qqy \\\n && apt-get install --no-install-recommends apt-transport-https=1.2.35 ca-certificates=20210119~16.04.1 -qqy \\\n && curl -sSL https://download.docker.com/linux/ubuntu/gpg | apt-key add - \\\n && add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu $( lsb_release -cs ;) stable\" \\\n && apt-get update -qqy \\\n && apt-get install --no-install-recommends docker-ce -qqy \\\n && rm -rf /var/lib/apt/lists/*\n#  ## Install Node.js and packages required by Gerrit.\n#  ## (see https://gerrit.googlesource.com/gerrit/+show/master/polygerrit-ui/README.md)\nRUN curl -L https://deb.nodesource.com/setup_10.x | bash - \\\n && apt-get update -qqy \\\n && apt-get install --no-install-recommends nodejs=4.2.6~dfsg-1ubuntu4.2 -qqy \\\n && npm install typescript@5.0.4 polylint@2.10.4 polymer-cli@1.9.11 web-component-tester@6.8.0 eslint@\"=4.19.0\" eslint-config-google@\"=0.12.0\" eslint-plugin-html@\"=5.0.3\" eslint-plugin-promise@\"=4.0.1\" fried-twinkie@\"^0.2.2\" --unsafe-perm -g \\\n && rm -rf /var/lib/apt/lists/*\n#  ## Install Python (required by our own bazelci.py script).\nRUN export PYTHON_VERSION=\"3.6.8\" \\\n && mkdir -p /usr/local/src \\\n && cd /usr/local/src \\\n && curl -LO \"https://www.python.org/ftp/python/${PYTHON_VERSION}/Python-${PYTHON_VERSION}.tar.xz\" \\\n && tar xfJ \"Python-${PYTHON_VERSION}.tar.xz\" \\\n && rm \"Python-${PYTHON_VERSION}.tar.xz\" \\\n && cd \"Python-${PYTHON_VERSION}\" \\\n && echo \"_ssl _ssl.c -DUSE_SSL -I/usr/include -I/usr/include/openssl -L/usr/lib -lssl -lcrypto\" >> Modules/Setup.dist \\\n && echo \"Compiling Python ${PYTHON_VERSION} ...\" \\\n && ./configure --quiet --enable-ipv6 \\\n && make -s -j all \\\n && echo \"Installing Python ${PYTHON_VERSION} ...\" \\\n && make -s altinstall \\\n && pip3.6 install requests uritemplate pyyaml github3.py \\\n && rm -rf \"/usr/local/src/Python-${PYTHON_VERSION}\"\n#  ## Install Go.\nENV GO_HOME=\"\\\"/opt/go1.12.6.linux-amd64\\\"\"\nENV PATH=\"\\\"${PATH}:${GO_HOME}/bin\\\"\"\n#  ## Install Swift toolchain (required by rules_swift).\nENV SWIFT_HOME=\"\\\"/opt/swift-4.2.1-RELEASE-ubuntu16.04\\\"\"\nENV PATH=\"\\\"${PATH}:${SWIFT_HOME}/usr/bin\\\"\"\nFROM ubuntu1604-nojava AS ubuntu1604-java8\nRUN apt-get update -qqy \\\n && apt-get install --no-install-recommends openjdk-8-jdk=8u292-b10-0ubuntu1~16.04.1 -qqy \\\n && rm -rf /var/lib/apt/lists/*\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:16.04 AS ubuntu1604-nojava\nENV DEBIAN_FRONTEND=\"noninteractive\"\nCOPY --from=gcr.io/bazel-public/base:bazelisk /usr/local/bin/bazel /usr/local/bin/bazel\nCOPY --from=gcr.io/bazel-public/base:buildifier /usr/local/bin/buildifier /usr/local/bin/buildifier\nCOPY --from=gcr.io/bazel-public/base:github-release /usr/local/bin/github-release /usr/local/bin/github-release\nCOPY --from=gcr.io/bazel-public/base:saucelabs /usr/local/bin/sc /usr/local/bin/sc\n# ## Install required packages.\nRUN dpkg --add-architecture i386 \\\n && apt-get update -qqy \\\n && echo \"Installing base packages\" \\\n && apt-get install apt-utils curl lsb-release software-properties-common -qqy \\\n && echo \"Installing packages required by Bazel\" \\\n && apt-get install build-essential clang curl ed git iproute2 iputils-ping netcat-openbsd python python-dev python3 python3-dev unzip wget xvfb zip zlib1g-dev -qqy \\\n && echo \"Installing packages required by Android SDK\" \\\n && apt-get install expect libbz2-1.0:i386 libncurses5:i386 libstdc++6:i386 libz1:i386 -qqy \\\n && echo \"Installing packages required by Tensorflow\" \\\n && apt-get install libcurl3-dev swig python-enum34 python-mock python-numpy python-pip python-wheel python3-mock python3-numpy python3-pip python3-wheel -qqy \\\n && echo \"Installing packages required by Envoy\" \\\n && apt-get install automake autotools-dev cmake libtool m4 ninja-build -qqy \\\n && echo \"Installing packages required by Android emulator\" \\\n && apt-get install cpio cpu-checker lsof qemu-kvm qemu-system-x86 unzip xvfb -qqy \\\n && echo \"Installing packages required by Bazel release process\" \\\n && apt-get install devscripts gnupg pandoc reprepro -qqy \\\n && echo \"Installing packages required by C++ coverage tests\" \\\n && apt-get install lcov llvm -qqy \\\n && echo \"Installing packages required by Swift toolchain\" \\\n && apt-get install clang libicu-dev -qqy \\\n && echo \"Installing packages required by rules_webtesting\" \\\n && apt-get install python-urllib3 python3-urllib3 -qqy \\\n && echo \"Installing packages required by Kythe\" \\\n && apt-get install bison flex uuid-dev asciidoc graphviz source-highlight -qqy \\\n && echo \"Installing packages required by upb\" \\\n && apt-get install libreadline-dev -qqy \\\n && echo \"Installing packages required by Bazel (Ubuntu 14.04 and 16.04 only)\" \\\n && apt-get install realpath libssl-dev -qqy \\\n && apt-get -qqy purge apport \\\n && rm -rf /var/lib/apt/lists/*\n# ## Install Python packages required by Tensorflow.\nRUN pip install keras_applications keras_preprocessing future \\\n && pip3 install keras_applications keras_preprocessing future\n# ## Install Google Cloud SDK.\n# ## https://cloud.google.com/sdk/docs/quickstart-debian-ubuntu\nRUN export CLOUD_SDK_REPO=\"cloud-sdk-$( lsb_release -c -s ;)\" \\\n && echo \"deb http://packages.cloud.google.com/apt $CLOUD_SDK_REPO main\" | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list \\\n && curl -L https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add - \\\n && apt-get update -qqy \\\n && apt-get install google-cloud-sdk -qqy \\\n && rm -rf /var/lib/apt/lists/*\n# ## Install Docker.\nRUN apt-get update -qqy \\\n && apt-get install apt-transport-https ca-certificates -qqy \\\n && curl -sSL https://download.docker.com/linux/ubuntu/gpg | apt-key add - \\\n && add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu $( lsb_release -cs ;) stable\" \\\n && apt-get update -qqy \\\n && apt-get install docker-ce -qqy \\\n && rm -rf /var/lib/apt/lists/*\n# ## Install Node.js and packages required by Gerrit.\n# ## (see https://gerrit.googlesource.com/gerrit/+show/master/polygerrit-ui/README.md)\nRUN curl -L https://deb.nodesource.com/setup_10.x | bash - \\\n && apt-get update -qqy \\\n && apt-get install nodejs -qqy \\\n && npm install typescript polylint polymer-cli web-component-tester@6.8.0 eslint@\"=4.19.0\" eslint-config-google@\"=0.12.0\" eslint-plugin-html@\"=5.0.3\" eslint-plugin-promise@\"=4.0.1\" fried-twinkie@\"^0.2.2\" --unsafe-perm -g \\\n && rm -rf /var/lib/apt/lists/*\n# ## Install Python (required by our own bazelci.py script).\nRUN export PYTHON_VERSION=\"3.6.8\" \\\n && mkdir -p /usr/local/src \\\n && cd /usr/local/src \\\n && curl -LO \"https://www.python.org/ftp/python/${PYTHON_VERSION}/Python-${PYTHON_VERSION}.tar.xz\" \\\n && tar xfJ \"Python-${PYTHON_VERSION}.tar.xz\" \\\n && rm \"Python-${PYTHON_VERSION}.tar.xz\" \\\n && cd \"Python-${PYTHON_VERSION}\" \\\n && echo \"_ssl _ssl.c -DUSE_SSL -I/usr/include -I/usr/include/openssl -L/usr/lib -lssl -lcrypto\" >> Modules/Setup.dist \\\n && echo \"Compiling Python ${PYTHON_VERSION} ...\" \\\n && ./configure --quiet --enable-ipv6 \\\n && make -s -j all \\\n && echo \"Installing Python ${PYTHON_VERSION} ...\" \\\n && make -s altinstall \\\n && pip3.6 install requests uritemplate pyyaml github3.py \\\n && rm -rf \"/usr/local/src/Python-${PYTHON_VERSION}\"\n# ## Install Go.\nENV GO_HOME=\"\\\"/opt/go1.12.6.linux-amd64\\\"\"\nENV PATH=\"\\\"${PATH}:${GO_HOME}/bin\\\"\"\n# ## Install Swift toolchain (required by rules_swift).\nENV SWIFT_HOME=\"\\\"/opt/swift-4.2.1-RELEASE-ubuntu16.04\\\"\"\nENV PATH=\"\\\"${PATH}:${SWIFT_HOME}/usr/bin\\\"\"\nFROM ubuntu1604-nojava AS ubuntu1604-java8\nRUN apt-get update -qqy \\\n && apt-get install openjdk-8-jdk -qqy \\\n && rm -rf /var/lib/apt/lists/*\n","injectedSmells":[],"originalDockerfileHash":"ec24f4f085968eeea11b78c191358727","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:16.04 AS ubuntu1604-nojava\nENV DEBIAN_FRONTEND=\"noninteractive\"\nCOPY --from=gcr.io/bazel-public/base:bazelisk /usr/local/bin/bazel /usr/local/bin/bazel\nCOPY --from=gcr.io/bazel-public/base:buildifier /usr/local/bin/buildifier /usr/local/bin/buildifier\nCOPY --from=gcr.io/bazel-public/base:github-release /usr/local/bin/github-release /usr/local/bin/github-release\nCOPY --from=gcr.io/bazel-public/base:saucelabs /usr/local/bin/sc /usr/local/bin/sc\n#  ## Install required packages.\nRUN dpkg --add-architecture i386 \\\n && apt-get update -qqy \\\n && echo \"Installing base packages\" \\\n && apt-get install apt-utils curl lsb-release software-properties-common -qqy \\\n && echo \"Installing packages required by Bazel\" \\\n && apt-get install build-essential clang curl ed git iproute2 iputils-ping netcat-openbsd python python-dev python3 python3-dev unzip wget xvfb zip zlib1g-dev -qqy \\\n && echo \"Installing packages required by Android SDK\" \\\n && apt-get install expect libbz2-1.0:i386 libncurses5:i386 libstdc++6:i386 libz1:i386 -qqy \\\n && echo \"Installing packages required by Tensorflow\" \\\n && apt-get install libcurl3-dev swig python-enum34 python-mock python-numpy python-pip python-wheel python3-mock python3-numpy python3-pip python3-wheel -qqy \\\n && echo \"Installing packages required by Envoy\" \\\n && apt-get install automake autotools-dev cmake libtool m4 ninja-build -qqy \\\n && echo \"Installing packages required by Android emulator\" \\\n && apt-get install cpio cpu-checker lsof qemu-kvm qemu-system-x86 unzip xvfb -qqy \\\n && echo \"Installing packages required by Bazel release process\" \\\n && apt-get install devscripts gnupg pandoc reprepro -qqy \\\n && echo \"Installing packages required by C++ coverage tests\" \\\n && apt-get install lcov llvm -qqy \\\n && echo \"Installing packages required by Swift toolchain\" \\\n && apt-get install clang libicu-dev -qqy \\\n && echo \"Installing packages required by rules_webtesting\" \\\n && apt-get install python-urllib3 python3-urllib3 -qqy \\\n && echo \"Installing packages required by Kythe\" \\\n && apt-get install bison flex uuid-dev asciidoc graphviz source-highlight -qqy \\\n && echo \"Installing packages required by upb\" \\\n && apt-get install libreadline-dev -qqy \\\n && echo \"Installing packages required by Bazel (Ubuntu 14.04 and 16.04 only)\" \\\n && apt-get install realpath libssl-dev -qqy \\\n && apt-get -qqy purge apport \\\n && rm -rf /var/lib/apt/lists/*\n#  ## Install Python packages required by Tensorflow.\nRUN pip install keras_applications keras_preprocessing future \\\n && pip3 install keras_applications keras_preprocessing future\n#  ## Install Google Cloud SDK.\n#  ## https://cloud.google.com/sdk/docs/quickstart-debian-ubuntu\nRUN export CLOUD_SDK_REPO=\"cloud-sdk-$( lsb_release -c -s ;)\" \\\n && echo \"deb http://packages.cloud.google.com/apt $CLOUD_SDK_REPO main\" | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list \\\n && curl -L https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add - \\\n && apt-get update -qqy \\\n && apt-get install google-cloud-sdk -qqy \\\n && rm -rf /var/lib/apt/lists/*\n#  ## Install Docker.\nRUN apt-get update -qqy \\\n && apt-get install apt-transport-https ca-certificates -qqy \\\n && curl -sSL https://download.docker.com/linux/ubuntu/gpg | apt-key add - \\\n && add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu $( lsb_release -cs ;) stable\" \\\n && apt-get update -qqy \\\n && apt-get install docker-ce -qqy \\\n && rm -rf /var/lib/apt/lists/*\n#  ## Install Node.js and packages required by Gerrit.\n#  ## (see https://gerrit.googlesource.com/gerrit/+show/master/polygerrit-ui/README.md)\nRUN curl -L https://deb.nodesource.com/setup_10.x | bash - \\\n && apt-get update -qqy \\\n && apt-get install nodejs -qqy \\\n && npm install typescript polylint polymer-cli web-component-tester@6.8.0 eslint@\"=4.19.0\" eslint-config-google@\"=0.12.0\" eslint-plugin-html@\"=5.0.3\" eslint-plugin-promise@\"=4.0.1\" fried-twinkie@\"^0.2.2\" --unsafe-perm -g \\\n && rm -rf /var/lib/apt/lists/*\n#  ## Install Python (required by our own bazelci.py script).\nRUN export PYTHON_VERSION=\"3.6.8\" \\\n && mkdir -p /usr/local/src \\\n && cd /usr/local/src \\\n && curl -LO \"https://www.python.org/ftp/python/${PYTHON_VERSION}/Python-${PYTHON_VERSION}.tar.xz\" \\\n && tar xfJ \"Python-${PYTHON_VERSION}.tar.xz\" \\\n && rm \"Python-${PYTHON_VERSION}.tar.xz\" \\\n && cd \"Python-${PYTHON_VERSION}\" \\\n && echo \"_ssl _ssl.c -DUSE_SSL -I/usr/include -I/usr/include/openssl -L/usr/lib -lssl -lcrypto\" >> Modules/Setup.dist \\\n && echo \"Compiling Python ${PYTHON_VERSION} ...\" \\\n && ./configure --quiet --enable-ipv6 \\\n && make -s -j all \\\n && echo \"Installing Python ${PYTHON_VERSION} ...\" \\\n && make -s altinstall \\\n && pip3.6 install requests uritemplate pyyaml github3.py \\\n && rm -rf \"/usr/local/src/Python-${PYTHON_VERSION}\"\n#  ## Install Go.\nENV GO_HOME=\"\\\"/opt/go1.12.6.linux-amd64\\\"\"\nENV PATH=\"\\\"${PATH}:${GO_HOME}/bin\\\"\"\n#  ## Install Swift toolchain (required by rules_swift).\nENV SWIFT_HOME=\"\\\"/opt/swift-4.2.1-RELEASE-ubuntu16.04\\\"\"\nENV PATH=\"\\\"${PATH}:${SWIFT_HOME}/usr/bin\\\"\"\nFROM ubuntu1604-nojava AS ubuntu1604-java8\nRUN apt-get update -qqy \\\n && apt-get install openjdk-8-jdk -qqy \\\n && rm -rf /var/lib/apt/lists/*\n","originalDockerfileUglifiedHash":"99837fd3104e50a5d5f5204ce3306210","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/8663cdf419e4fbe5c750dc18bac1a5ebf575eb8e.dockerfile"}