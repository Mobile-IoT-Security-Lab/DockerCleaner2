{"seed":555290316,"processedDockerfileHash":"d101664f319d2e7732a8d58ab6499b43","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   vim:set ft=dockerfile:\nFROM debian:jessie\n#   add our user and group first to make sure their IDs get assigned consistently, regardless of whatever dependencies get added\nRUN groupadd -r mysql \\\n && useradd -r -g mysql mysql\n#   add gosu for easy step-down from root\nENV GOSU_VERSION=\"1.10\"\nRUN set -ex ; fetchDeps=' ca-certificates wget ' ; apt-get update ; apt-get install --no-install-recommends $fetchDeps -y ; rm -rf /var/lib/apt/lists/* ; dpkgArch=\"$( dpkg --print-architecture | awk -F- '{ print $NF }' ;)\" ; wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\" ; wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\" ; export GNUPGHOME=\"$( mktemp -d ;)\" ; gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 ; gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu ; rm -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc ; chmod +x /usr/local/bin/gosu ; gosu nobody true ; apt-get purge -y --auto-remove $fetchDeps\nRUN mkdir /docker-entrypoint-initdb.d\n#   install \"pwgen\" for randomizing passwords\n#   install \"apt-transport-https\" for Percona's repo (switched to https-only)\nRUN apt-get update \\\n && apt-get install --no-install-recommends apt-transport-https ca-certificates pwgen -y \\\n && rm -rf /var/lib/apt/lists/*\nENV GPG_KEYS=\"199369E5404BD5FC7D2FE43BCBCB082A1BB943DB  430BDF5C56E7C94E848EE60C1C4CBDCDCD2EFD2A  4D1BB29D63D98E422B2113B19334A25F8507EFA5\"\nRUN set -ex ; export GNUPGHOME=\"$( mktemp -d ;)\" ; for key in $GPG_KEYS; do gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\" ; done ; gpg --export $GPG_KEYS > /etc/apt/trusted.gpg.d/mariadb.gpg; rm -r \"$GNUPGHOME\" ; apt-key list\n#   add Percona's repo for xtrabackup (which is useful for Galera)\nRUN echo \"deb https://repo.percona.com/apt jessie main\" > /etc/apt/sources.list.d/percona.list \\\n && { echo 'Package: *' ;echo 'Pin: release o=Percona Development Team' ;echo 'Pin-Priority: 998' ; } > /etc/apt/preferences.d/percona\nENV MARIADB_MAJOR=\"10.2\"\nENV MARIADB_VERSION=\"10.2.4+maria~jessie\"\n#  http://ftp.hosteurope.de/mirror/archive.mariadb.org/mariadb-10.2.4/repo/debian\n#  RUN echo \"deb http://ftp.osuosl.org/pub/mariadb/repo/$MARIADB_MAJOR/debian jessie main\" > /etc/apt/sources.list.d/mariadb.list \\\nRUN echo \"deb http://ftp.hosteurope.de/mirror/archive.mariadb.org/mariadb-10.2.4/repo/debian jessie main\" > /etc/apt/sources.list.d/mariadb.list \\\n && { echo 'Package: *' ;echo 'Pin: release o=MariaDB' ;echo 'Pin-Priority: 999' ; } > /etc/apt/preferences.d/mariadb\n#   add repository pinning to make sure dependencies from this MariaDB repo are preferred over Debian dependencies\n#    libmariadbclient18 : Depends: libmysqlclient18 (= 5.5.42+maria-1~wheezy) but 5.5.43-0+deb7u1 is to be installed\n#   the \"/var/lib/mysql\" stuff here is because the mysql-server postinst doesn't have an explicit way to disable the mysql_install_db codepath besides having a database already \"configured\" (ie, stuff in /var/lib/mysql/mysql)\n#   also, we set debconf keys to make APT a little quieter\nRUN { echo \"mariadb-server-$MARIADB_MAJOR\" mysql-server/root_password password 'unused' ;echo \"mariadb-server-$MARIADB_MAJOR\" mysql-server/root_password_again password 'unused' ; } | debconf-set-selections \\\n && apt-get update \\\n && apt-get install --no-install-recommends percona-xtrabackup-24 socat \"mariadb-server=$MARIADB_VERSION\" -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && sed -ri 's/^user\\s/#&/' /etc/mysql/my.cnf /etc/mysql/conf.d/* \\\n && rm -rf /var/lib/mysql \\\n && mkdir -p /var/lib/mysql /var/run/mysqld \\\n && chown -R mysql:mysql /var/lib/mysql /var/run/mysqld \\\n && chmod 777 /var/run/mysqld \\\n && find /etc/mysql/ -name '*.cnf' -print0 | xargs -0 grep -lZE '^(bind-address|log)' | xargs -rt -0 sed -Ei 's/^(bind-address|log)/#&/' \\\n && echo '[mysqld]\\nskip-host-cache\\nskip-name-resolve' > /etc/mysql/conf.d/docker.cnf\nVOLUME /var/lib/mysql\nCOPY docker-entrypoint.sh /usr/local/bin/\nRUN chmod +x /usr/local/bin/docker-entrypoint.sh\nRUN ln -s usr/local/bin/docker-entrypoint.sh /\nENTRYPOINT [\"docker-entrypoint.sh\"]\nEXPOSE 3306/tcp\nCMD [\"mysqld\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  vim:set ft=dockerfile:\nFROM debian:jessie\n#  add our user and group first to make sure their IDs get assigned consistently, regardless of whatever dependencies get added\nRUN groupadd -r mysql \\\n && useradd -r -g mysql mysql\n#  add gosu for easy step-down from root\nENV GOSU_VERSION=\"1.10\"\nRUN set -ex ; fetchDeps=' ca-certificates wget ' ; apt-get update ; apt-get install --no-install-recommends $fetchDeps -y ; rm -rf /var/lib/apt/lists/* ; dpkgArch=\"$( dpkg --print-architecture | awk -F- '{ print $NF }' ;)\" ; wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\" ; wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\" ; export GNUPGHOME=\"$( mktemp -d ;)\" ; gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 ; gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu ; rm -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc ; chmod +x /usr/local/bin/gosu ; gosu nobody true ; apt-get purge -y --auto-remove $fetchDeps\nRUN mkdir /docker-entrypoint-initdb.d\n#  install \"pwgen\" for randomizing passwords\n#  install \"apt-transport-https\" for Percona's repo (switched to https-only)\nRUN apt-get update \\\n && apt-get install --no-install-recommends apt-transport-https ca-certificates pwgen -y \\\n && rm -rf /var/lib/apt/lists/*\nENV GPG_KEYS=\"199369E5404BD5FC7D2FE43BCBCB082A1BB943DB  430BDF5C56E7C94E848EE60C1C4CBDCDCD2EFD2A  4D1BB29D63D98E422B2113B19334A25F8507EFA5\"\nRUN set -ex ; export GNUPGHOME=\"$( mktemp -d ;)\" ; for key in $GPG_KEYS; do gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\" ; done ; gpg --export $GPG_KEYS > /etc/apt/trusted.gpg.d/mariadb.gpg; rm -r \"$GNUPGHOME\" ; apt-key list\n#  add Percona's repo for xtrabackup (which is useful for Galera)\nRUN echo \"deb https://repo.percona.com/apt jessie main\" > /etc/apt/sources.list.d/percona.list \\\n && { echo 'Package: *' ;echo 'Pin: release o=Percona Development Team' ;echo 'Pin-Priority: 998' ; } > /etc/apt/preferences.d/percona\nENV MARIADB_MAJOR=\"10.2\"\nENV MARIADB_VERSION=\"10.2.4+maria~jessie\"\n# http://ftp.hosteurope.de/mirror/archive.mariadb.org/mariadb-10.2.4/repo/debian\n# RUN echo \"deb http://ftp.osuosl.org/pub/mariadb/repo/$MARIADB_MAJOR/debian jessie main\" > /etc/apt/sources.list.d/mariadb.list \\\nRUN echo \"deb http://ftp.hosteurope.de/mirror/archive.mariadb.org/mariadb-10.2.4/repo/debian jessie main\" > /etc/apt/sources.list.d/mariadb.list \\\n && { echo 'Package: *' ;echo 'Pin: release o=MariaDB' ;echo 'Pin-Priority: 999' ; } > /etc/apt/preferences.d/mariadb\n#  add repository pinning to make sure dependencies from this MariaDB repo are preferred over Debian dependencies\n#   libmariadbclient18 : Depends: libmysqlclient18 (= 5.5.42+maria-1~wheezy) but 5.5.43-0+deb7u1 is to be installed\n#  the \"/var/lib/mysql\" stuff here is because the mysql-server postinst doesn't have an explicit way to disable the mysql_install_db codepath besides having a database already \"configured\" (ie, stuff in /var/lib/mysql/mysql)\n#  also, we set debconf keys to make APT a little quieter\nRUN { echo \"mariadb-server-$MARIADB_MAJOR\" mysql-server/root_password password 'unused' ;echo \"mariadb-server-$MARIADB_MAJOR\" mysql-server/root_password_again password 'unused' ; } | debconf-set-selections \\\n && apt-get update \\\n && apt-get install percona-xtrabackup-24 socat \"mariadb-server=$MARIADB_VERSION\" -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && sed -ri 's/^user\\s/#&/' /etc/mysql/my.cnf /etc/mysql/conf.d/* \\\n && rm -rf /var/lib/mysql \\\n && mkdir -p /var/lib/mysql /var/run/mysqld \\\n && chown -R mysql:mysql /var/lib/mysql /var/run/mysqld \\\n && chmod 777 /var/run/mysqld \\\n && find /etc/mysql/ -name '*.cnf' -print0 | xargs -0 grep -lZE '^(bind-address|log)' | xargs -rt -0 sed -Ei 's/^(bind-address|log)/#&/' \\\n && echo '[mysqld]\\nskip-host-cache\\nskip-name-resolve' > /etc/mysql/conf.d/docker.cnf\nVOLUME /var/lib/mysql\nCOPY docker-entrypoint.sh /usr/local/bin/\nRUN chmod +x /usr/local/bin/docker-entrypoint.sh\nRUN ln -s usr/local/bin/docker-entrypoint.sh /\nENTRYPOINT [\"docker-entrypoint.sh\"]\nEXPOSE 3306/tcp\nCMD [\"mysqld\"]\n","injectedSmells":[],"originalDockerfileHash":"2d1758424404fb3fcc639a9721190ecc","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   vim:set ft=dockerfile:\nFROM debian:jessie\n#   add our user and group first to make sure their IDs get assigned consistently, regardless of whatever dependencies get added\nRUN groupadd -r mysql \\\n && useradd -r -g mysql mysql\n#   add gosu for easy step-down from root\nENV GOSU_VERSION=\"1.10\"\nRUN set -ex ; fetchDeps=' ca-certificates wget ' ; apt-get update ; apt-get install --no-install-recommends $fetchDeps -y ; rm -rf /var/lib/apt/lists/* ; dpkgArch=\"$( dpkg --print-architecture | awk -F- '{ print $NF }' ;)\" ; wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\" ; wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\" ; export GNUPGHOME=\"$( mktemp -d ;)\" ; gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 ; gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu ; rm -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc ; chmod +x /usr/local/bin/gosu ; gosu nobody true ; apt-get purge -y --auto-remove $fetchDeps\nRUN mkdir /docker-entrypoint-initdb.d\n#   install \"pwgen\" for randomizing passwords\n#   install \"apt-transport-https\" for Percona's repo (switched to https-only)\nRUN apt-get update \\\n && apt-get install --no-install-recommends apt-transport-https ca-certificates pwgen -y \\\n && rm -rf /var/lib/apt/lists/*\nENV GPG_KEYS=\"199369E5404BD5FC7D2FE43BCBCB082A1BB943DB  430BDF5C56E7C94E848EE60C1C4CBDCDCD2EFD2A  4D1BB29D63D98E422B2113B19334A25F8507EFA5\"\nRUN set -ex ; export GNUPGHOME=\"$( mktemp -d ;)\" ; for key in $GPG_KEYS; do gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\" ; done ; gpg --export $GPG_KEYS > /etc/apt/trusted.gpg.d/mariadb.gpg; rm -r \"$GNUPGHOME\" ; apt-key list\n#   add Percona's repo for xtrabackup (which is useful for Galera)\nRUN echo \"deb https://repo.percona.com/apt jessie main\" > /etc/apt/sources.list.d/percona.list \\\n && { echo 'Package: *' ;echo 'Pin: release o=Percona Development Team' ;echo 'Pin-Priority: 998' ; } > /etc/apt/preferences.d/percona\nENV MARIADB_MAJOR=\"10.2\"\nENV MARIADB_VERSION=\"10.2.4+maria~jessie\"\n#  http://ftp.hosteurope.de/mirror/archive.mariadb.org/mariadb-10.2.4/repo/debian\n#  RUN echo \"deb http://ftp.osuosl.org/pub/mariadb/repo/$MARIADB_MAJOR/debian jessie main\" > /etc/apt/sources.list.d/mariadb.list \\\nRUN echo \"deb http://ftp.hosteurope.de/mirror/archive.mariadb.org/mariadb-10.2.4/repo/debian jessie main\" > /etc/apt/sources.list.d/mariadb.list \\\n && { echo 'Package: *' ;echo 'Pin: release o=MariaDB' ;echo 'Pin-Priority: 999' ; } > /etc/apt/preferences.d/mariadb\n#   add repository pinning to make sure dependencies from this MariaDB repo are preferred over Debian dependencies\n#    libmariadbclient18 : Depends: libmysqlclient18 (= 5.5.42+maria-1~wheezy) but 5.5.43-0+deb7u1 is to be installed\n#   the \"/var/lib/mysql\" stuff here is because the mysql-server postinst doesn't have an explicit way to disable the mysql_install_db codepath besides having a database already \"configured\" (ie, stuff in /var/lib/mysql/mysql)\n#   also, we set debconf keys to make APT a little quieter\nRUN { echo \"mariadb-server-$MARIADB_MAJOR\" mysql-server/root_password password 'unused' ;echo \"mariadb-server-$MARIADB_MAJOR\" mysql-server/root_password_again password 'unused' ; } | debconf-set-selections \\\n && apt-get update \\\n && apt-get install percona-xtrabackup-24 socat \"mariadb-server=$MARIADB_VERSION\" -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && sed -ri 's/^user\\s/#&/' /etc/mysql/my.cnf /etc/mysql/conf.d/* \\\n && rm -rf /var/lib/mysql \\\n && mkdir -p /var/lib/mysql /var/run/mysqld \\\n && chown -R mysql:mysql /var/lib/mysql /var/run/mysqld \\\n && chmod 777 /var/run/mysqld \\\n && find /etc/mysql/ -name '*.cnf' -print0 | xargs -0 grep -lZE '^(bind-address|log)' | xargs -rt -0 sed -Ei 's/^(bind-address|log)/#&/' \\\n && echo '[mysqld]\\nskip-host-cache\\nskip-name-resolve' > /etc/mysql/conf.d/docker.cnf\nVOLUME /var/lib/mysql\nCOPY docker-entrypoint.sh /usr/local/bin/\nRUN chmod +x /usr/local/bin/docker-entrypoint.sh\nRUN ln -s usr/local/bin/docker-entrypoint.sh /\nENTRYPOINT [\"docker-entrypoint.sh\"]\nEXPOSE 3306/tcp\nCMD [\"mysqld\"]\n","originalDockerfileUglifiedHash":"68d94bbede61152a82f1cdc91d95a43a","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/6df1b456e16f426e4b4f6a51f15cacd92e47b743.dockerfile"}