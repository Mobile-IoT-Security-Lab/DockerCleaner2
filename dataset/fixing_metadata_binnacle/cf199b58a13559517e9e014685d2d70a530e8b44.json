{"seed":57844214,"processedDockerfileHash":"fe2f5d647e0a33f7d5d05d9de7b2b47c","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   -- base image stage\n#   -- create a base image, containing the bulk of the configuration\n#   -- used for setting up a Jenkins server. Copy most of the groovy\n#   -- config scripts into the image. Due to the fact that some scripts\n#   -- will conflict with eachother, the base image will be used to\n#   -- create individual 'shard' containers, using Docker multi-stage\n#   -- builds. The scripts that create conflicts should be copied into\n#   -- these individual shard images.\nFROM ubuntu:16.04 AS base\nUSER root\nRUN apt-get update -y \\\n && apt-get install --no-install-recommends openjdk-8-jdk=8u292-b10-0ubuntu1~16.04.1 -y \\\n && apt-get install --no-install-recommends curl=7.47.0-1ubuntu2.19 -y \\\n && apt-get install --no-install-recommends git=1:2.7.4-0ubuntu1.10 -y \\\n && apt-get install --no-install-recommends sudo=1.8.16-0ubuntu1.10 -y \\\n && apt-get install --no-install-recommends python-pip=8.1.1-2ubuntu0.6 -y \\\n && apt-get install --no-install-recommends openssh-server=1:7.2p2-4ubuntu2.10 -y \\\n && apt-get install --no-install-recommends vim=2:7.4.1689-3ubuntu1.5 -y\nRUN mkdir /var/run/sshd\nCOPY ssh/jc_rsa.pub /root/.ssh/jc_rsa.pub\nRUN cat root/.ssh/jc_rsa.pub >> ~/.ssh/authorized_keys \\\n && chmod go-w ~/ \\\n && chmod 700 ~/.ssh \\\n && chmod 600 ~/.ssh/authorized_keys\nEXPOSE 22/tcp\nARG JENKINS_VERSION\nARG JENKINS_WAR_SOURCE\nRUN mkdir /usr/share/jenkins \\\n && curl \"${JENKINS_WAR_SOURCE}/${JENKINS_VERSION}.war\" -L -o /usr/share/jenkins/jenkins.war\nEXPOSE 8080/tcp\nENV JENKINS_HOME=\"/var/lib/jenkins\"\nENV JAVA_HOME=\"/usr/lib/jvm/java-8-openjdk-amd64\"\nARG CONFIG_PATH\nENV JENKINS_CONFIG_PATH=\"$JENKINS_HOME/init-configs\"\nARG user=jenkins\nARG group=jenkins\nARG uid=1000\nARG gid=1000\nRUN groupadd -g ${gid} ${group} \\\n && useradd -d \"$JENKINS_HOME\" -u ${uid} -g ${gid} -m -s /bin/bash ${user}\nRUN mkdir -p $JENKINS_HOME/init.groovy.d \\\n && mkdir $JENKINS_HOME/plugins \\\n && mkdir $JENKINS_HOME/utils \\\n && mkdir $JENKINS_HOME/git \\\n && mkdir -p /var/log/jenkins\nCOPY plugins $JENKINS_HOME/plugins/\nCOPY utils/ $JENKINS_HOME/utils/\nCOPY ${CONFIG_PATH} $JENKINS_HOME/init-configs/\nCOPY src/main/groovy/1addJarsToClasspath.groovy src/main/groovy/2checkInstalledPlugins.groovy src/main/groovy/3importCredentials.groovy src/main/groovy/3installGroovy.groovy src/main/groovy/3installPython.groovy src/main/groovy/3mainConfiguration.groovy src/main/groovy/3setGlobalProperties.groovy src/main/groovy/3shutdownCLI.groovy src/main/groovy/4configureEc2Plugin.groovy src/main/groovy/4configureGHPRB.groovy src/main/groovy/4configureGit.groovy src/main/groovy/4configureGithub.groovy src/main/groovy/4configureHipChat.groovy src/main/groovy/4configureJobConfigHistory.groovy src/main/groovy/4configureMailerPlugin.groovy src/main/groovy/4configureMaskPasswords.groovy src/main/groovy/4configureSecurity.groovy src/main/groovy/4configureSlack.groovy src/main/groovy/4configureSplunk.groovy src/main/groovy/5addSeedJob.groovy src/main/groovy/5configureEmailExtension.groovy src/main/groovy/5createLoggers.groovy $JENKINS_HOME/init.groovy.d/\n#   -- test shard #1\n#   -- copy the unique scripts used to configure a Jenkins container for\n#   -- running the tests specifed with the environment variable\n#   -- 'TEST_SHARD=shard_1'\nFROM base AS shard_1\nCOPY src/main/groovy/4configureGHOAuth.groovy $JENKINS_HOME/init.groovy.d/\nRUN chown -R jenkins:jenkins $JENKINS_HOME /var/log/jenkins\nCMD [\"/usr/sbin/sshd\", \"-D\"]\n#   -- test shard #2\n#   -- copy the unique scripts used to configure a Jenkins container for\n#   -- running the tests specifed with the environment variable\n#   -- 'TEST_SHARD=shard_2'\nFROM base AS shard_2\nCOPY src/main/groovy/4configureSAML.groovy src/main/groovy/3addUsers.groovy $JENKINS_HOME/init.groovy.d/\nRUN chown -R jenkins:jenkins $JENKINS_HOME /var/log/jenkins\nCMD [\"/usr/sbin/sshd\", \"-D\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  -- base image stage\n#  -- create a base image, containing the bulk of the configuration\n#  -- used for setting up a Jenkins server. Copy most of the groovy\n#  -- config scripts into the image. Due to the fact that some scripts\n#  -- will conflict with eachother, the base image will be used to\n#  -- create individual 'shard' containers, using Docker multi-stage\n#  -- builds. The scripts that create conflicts should be copied into\n#  -- these individual shard images.\nFROM ubuntu:16.04 AS base\nUSER root\nRUN apt-get update -y \\\n && apt-get install openjdk-8-jdk -y \\\n && apt-get install curl -y \\\n && apt-get install git -y \\\n && apt-get install sudo -y \\\n && apt-get install python-pip -y \\\n && apt-get install openssh-server -y \\\n && apt-get install vim -y\nRUN mkdir /var/run/sshd\nADD ssh/jc_rsa.pub /root/.ssh/jc_rsa.pub\nRUN cat root/.ssh/jc_rsa.pub >> ~/.ssh/authorized_keys \\\n && chmod go-w ~/ \\\n && chmod 700 ~/.ssh \\\n && chmod 600 ~/.ssh/authorized_keys\nEXPOSE 22/tcp\nARG JENKINS_VERSION\nARG JENKINS_WAR_SOURCE\nRUN mkdir /usr/share/jenkins \\\n && curl \"${JENKINS_WAR_SOURCE}/${JENKINS_VERSION}.war\" -L -o /usr/share/jenkins/jenkins.war\nEXPOSE 8080/tcp\nENV JENKINS_HOME=\"/var/lib/jenkins\"\nENV JAVA_HOME=\"/usr/lib/jvm/java-8-openjdk-amd64\"\nARG CONFIG_PATH\nENV JENKINS_CONFIG_PATH=\"$JENKINS_HOME/init-configs\"\nARG user=jenkins\nARG group=jenkins\nARG uid=1000\nARG gid=1000\nRUN groupadd -g ${gid} ${group} \\\n && useradd -d \"$JENKINS_HOME\" -u ${uid} -g ${gid} -m -s /bin/bash ${user}\nRUN mkdir -p $JENKINS_HOME/init.groovy.d \\\n && mkdir $JENKINS_HOME/plugins \\\n && mkdir $JENKINS_HOME/utils \\\n && mkdir $JENKINS_HOME/git \\\n && mkdir -p /var/log/jenkins\nCOPY plugins $JENKINS_HOME/plugins/\nCOPY utils/ $JENKINS_HOME/utils/\nCOPY ${CONFIG_PATH} $JENKINS_HOME/init-configs/\nCOPY src/main/groovy/1addJarsToClasspath.groovy src/main/groovy/2checkInstalledPlugins.groovy src/main/groovy/3importCredentials.groovy src/main/groovy/3installGroovy.groovy src/main/groovy/3installPython.groovy src/main/groovy/3mainConfiguration.groovy src/main/groovy/3setGlobalProperties.groovy src/main/groovy/3shutdownCLI.groovy src/main/groovy/4configureEc2Plugin.groovy src/main/groovy/4configureGHPRB.groovy src/main/groovy/4configureGit.groovy src/main/groovy/4configureGithub.groovy src/main/groovy/4configureHipChat.groovy src/main/groovy/4configureJobConfigHistory.groovy src/main/groovy/4configureMailerPlugin.groovy src/main/groovy/4configureMaskPasswords.groovy src/main/groovy/4configureSecurity.groovy src/main/groovy/4configureSlack.groovy src/main/groovy/4configureSplunk.groovy src/main/groovy/5addSeedJob.groovy src/main/groovy/5configureEmailExtension.groovy src/main/groovy/5createLoggers.groovy $JENKINS_HOME/init.groovy.d/\n#  -- test shard #1\n#  -- copy the unique scripts used to configure a Jenkins container for\n#  -- running the tests specifed with the environment variable\n#  -- 'TEST_SHARD=shard_1'\nFROM base AS shard_1\nCOPY src/main/groovy/4configureGHOAuth.groovy $JENKINS_HOME/init.groovy.d/\nRUN chown -R jenkins:jenkins $JENKINS_HOME /var/log/jenkins\nCMD [\"/usr/sbin/sshd\", \"-D\"]\n#  -- test shard #2\n#  -- copy the unique scripts used to configure a Jenkins container for\n#  -- running the tests specifed with the environment variable\n#  -- 'TEST_SHARD=shard_2'\nFROM base AS shard_2\nCOPY src/main/groovy/4configureSAML.groovy src/main/groovy/3addUsers.groovy $JENKINS_HOME/init.groovy.d/\nRUN chown -R jenkins:jenkins $JENKINS_HOME /var/log/jenkins\nCMD [\"/usr/sbin/sshd\", \"-D\"]\n","injectedSmells":[],"originalDockerfileHash":"b86e0344c38eecedfed595fd0372a1f6","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   -- base image stage\n#   -- create a base image, containing the bulk of the configuration\n#   -- used for setting up a Jenkins server. Copy most of the groovy\n#   -- config scripts into the image. Due to the fact that some scripts\n#   -- will conflict with eachother, the base image will be used to\n#   -- create individual 'shard' containers, using Docker multi-stage\n#   -- builds. The scripts that create conflicts should be copied into\n#   -- these individual shard images.\nFROM ubuntu:16.04 AS base\nUSER root\nRUN apt-get update -y \\\n && apt-get install openjdk-8-jdk -y \\\n && apt-get install curl -y \\\n && apt-get install git -y \\\n && apt-get install sudo -y \\\n && apt-get install python-pip -y \\\n && apt-get install openssh-server -y \\\n && apt-get install vim -y\nRUN mkdir /var/run/sshd\nADD ssh/jc_rsa.pub /root/.ssh/jc_rsa.pub\nRUN cat root/.ssh/jc_rsa.pub >> ~/.ssh/authorized_keys \\\n && chmod go-w ~/ \\\n && chmod 700 ~/.ssh \\\n && chmod 600 ~/.ssh/authorized_keys\nEXPOSE 22/tcp\nARG JENKINS_VERSION\nARG JENKINS_WAR_SOURCE\nRUN mkdir /usr/share/jenkins \\\n && curl \"${JENKINS_WAR_SOURCE}/${JENKINS_VERSION}.war\" -L -o /usr/share/jenkins/jenkins.war\nEXPOSE 8080/tcp\nENV JENKINS_HOME=\"/var/lib/jenkins\"\nENV JAVA_HOME=\"/usr/lib/jvm/java-8-openjdk-amd64\"\nARG CONFIG_PATH\nENV JENKINS_CONFIG_PATH=\"$JENKINS_HOME/init-configs\"\nARG user=jenkins\nARG group=jenkins\nARG uid=1000\nARG gid=1000\nRUN groupadd -g ${gid} ${group} \\\n && useradd -d \"$JENKINS_HOME\" -u ${uid} -g ${gid} -m -s /bin/bash ${user}\nRUN mkdir -p $JENKINS_HOME/init.groovy.d \\\n && mkdir $JENKINS_HOME/plugins \\\n && mkdir $JENKINS_HOME/utils \\\n && mkdir $JENKINS_HOME/git \\\n && mkdir -p /var/log/jenkins\nCOPY plugins $JENKINS_HOME/plugins/\nCOPY utils/ $JENKINS_HOME/utils/\nCOPY ${CONFIG_PATH} $JENKINS_HOME/init-configs/\nCOPY src/main/groovy/1addJarsToClasspath.groovy src/main/groovy/2checkInstalledPlugins.groovy src/main/groovy/3importCredentials.groovy src/main/groovy/3installGroovy.groovy src/main/groovy/3installPython.groovy src/main/groovy/3mainConfiguration.groovy src/main/groovy/3setGlobalProperties.groovy src/main/groovy/3shutdownCLI.groovy src/main/groovy/4configureEc2Plugin.groovy src/main/groovy/4configureGHPRB.groovy src/main/groovy/4configureGit.groovy src/main/groovy/4configureGithub.groovy src/main/groovy/4configureHipChat.groovy src/main/groovy/4configureJobConfigHistory.groovy src/main/groovy/4configureMailerPlugin.groovy src/main/groovy/4configureMaskPasswords.groovy src/main/groovy/4configureSecurity.groovy src/main/groovy/4configureSlack.groovy src/main/groovy/4configureSplunk.groovy src/main/groovy/5addSeedJob.groovy src/main/groovy/5configureEmailExtension.groovy src/main/groovy/5createLoggers.groovy $JENKINS_HOME/init.groovy.d/\n#   -- test shard #1\n#   -- copy the unique scripts used to configure a Jenkins container for\n#   -- running the tests specifed with the environment variable\n#   -- 'TEST_SHARD=shard_1'\nFROM base AS shard_1\nCOPY src/main/groovy/4configureGHOAuth.groovy $JENKINS_HOME/init.groovy.d/\nRUN chown -R jenkins:jenkins $JENKINS_HOME /var/log/jenkins\nCMD [\"/usr/sbin/sshd\", \"-D\"]\n#   -- test shard #2\n#   -- copy the unique scripts used to configure a Jenkins container for\n#   -- running the tests specifed with the environment variable\n#   -- 'TEST_SHARD=shard_2'\nFROM base AS shard_2\nCOPY src/main/groovy/4configureSAML.groovy src/main/groovy/3addUsers.groovy $JENKINS_HOME/init.groovy.d/\nRUN chown -R jenkins:jenkins $JENKINS_HOME /var/log/jenkins\nCMD [\"/usr/sbin/sshd\", \"-D\"]\n","originalDockerfileUglifiedHash":"27c3f33ae208df7171e1923dde6f16c4","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/cf199b58a13559517e9e014685d2d70a530e8b44.dockerfile"}