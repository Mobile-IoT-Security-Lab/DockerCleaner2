{"seed":2409474239,"processedDockerfileHash":"4d90e19fc66e762fbae22258fc127bc5","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM alpine:3.10 AS base\nLABEL maintainer=\"Denys Zhdanov <denis.zhdanov@gmail.com>\"\nRUN true \\\n && apk add cairo=1.16.0-r3 collectd=5.8.1-r1 collectd-disk=5.8.1-r1 collectd-nginx=5.8.1-r1 findutils=4.6.0-r1 librrd=1.7.2-r0 logrotate=3.15.0-r0 memcached=1.5.16-r0 nginx=1.16.1-r3 nodejs=10.24.1-r0 npm=10.24.1-r0 py3-pyldap=3.2.0-r0 redis=5.0.11-r0 runit=2.1.2-r3 sqlite=3.28.0-r3 expect=5.45.4-r0 dcron=4.5-r4 py-mysqldb=1.2.5-r1 mysql-dev mysql-client=10.3.29-r0 postgresql-dev=11.12-r0 postgresql-client=11.12-r0 --no-cache \\\n && rm -rf /etc/nginx/conf.d/default.conf \\\n && mkdir -p /var/log/carbon /var/log/graphite\nFROM base AS build\nLABEL maintainer=\"Denys Zhdanov <denis.zhdanov@gmail.com>\"\nRUN true \\\n && apk add alpine-sdk=1.0-r0 git=2.22.5-r0 libffi-dev=3.2.1-r6 pkgconfig py3-cairo=1.16.3-r1 py3-pip py3-pyldap=3.2.0-r0 py3-virtualenv=16.0.0-r1 py-rrd=1.7.2-r0 py-mysqldb=1.2.5-r1 openldap-dev=2.4.48-r2 python3-dev=3.7.10-r0 rrdtool-dev=1.7.2-r0 wget=1.20.3-r0 --update \\\n && virtualenv /opt/graphite \\\n && . /opt/graphite/bin/activate \\\n && pip3 install django==1.11.21 django-statsd-mozilla fadvise gunicorn msgpack-python redis rrdtool python-ldap mysqlclient psycopg2\nARG version=1.1.5\n#   install whisper\nARG whisper_version=${version}\nARG whisper_repo=https://github.com/graphite-project/whisper.git\nRUN git clone -b ${whisper_version} --depth 1 ${whisper_repo} /usr/local/src/whisper \\\n && cd /usr/local/src/whisper \\\n && . /opt/graphite/bin/activate \\\n && python3 ./setup.py install\n#   install carbon\nARG carbon_version=${version}\nARG carbon_repo=https://github.com/graphite-project/carbon.git\nRUN . /opt/graphite/bin/activate \\\n && git clone -b ${carbon_version} --depth 1 ${carbon_repo} /usr/local/src/carbon \\\n && cd /usr/local/src/carbon \\\n && pip3 install -r requirements.txt \\\n && python3 ./setup.py install\n#   install graphite\nARG graphite_version=${version}\nARG graphite_repo=https://github.com/graphite-project/graphite-web.git\nRUN . /opt/graphite/bin/activate \\\n && git clone -b ${graphite_version} --depth 1 ${graphite_repo} /usr/local/src/graphite-web \\\n && cd /usr/local/src/graphite-web \\\n && pip3 install -r requirements.txt \\\n && python3 ./setup.py install\n#   install statsd (as we have to use this ugly way)\nARG statsd_version=8d5363cb109cc6363661a1d5813e0b96787c4411\nARG statsd_repo=https://github.com/etsy/statsd.git\nWORKDIR /opt\nRUN git clone \"${statsd_repo}\" \\\n && cd /opt/statsd \\\n && git checkout \"${statsd_version}\" \\\n && npm install\nCOPY conf/opt/graphite/conf/ /opt/defaultconf/graphite/\nCOPY conf/opt/graphite/webapp/graphite/local_settings.py /opt/defaultconf/graphite/local_settings.py\n#   config graphite\nCOPY conf/opt/graphite/conf/*.conf /opt/graphite/conf/\nCOPY conf/opt/graphite/webapp/graphite/local_settings.py /opt/graphite/webapp/graphite/local_settings.py\nWORKDIR /opt/graphite/webapp\nRUN mkdir -p /var/log/graphite/ \\\n && PYTHONPATH=/opt/graphite/webapp /opt/graphite/bin/django-admin.py collectstatic --noinput --settings=graphite.settings\n#   config statsd\nCOPY conf/opt/statsd/config/ /opt/defaultconf/statsd/config/\nFROM base AS production\nLABEL maintainer=\"Denys Zhdanov <denis.zhdanov@gmail.com>\"\nENV STATSD_INTERFACE=\"udp\"\nCOPY conf /\n#   copy /opt from build image\nCOPY --from=build /opt /opt\n#   defaults\nEXPOSE 80/tcp 2003-2004 2013-2014 2023-2024 8080/tcp 8125/tcp 8125/udp 8126/tcp\nVOLUME [\"/opt/graphite/conf\", \"/opt/graphite/storage\", \"/opt/graphite/webapp/graphite/functions/custom\", \"/etc/nginx\", \"/opt/statsd/config\", \"/etc/logrotate.d\", \"/var/log\", \"/var/lib/redis\"]\nSTOPSIGNAL SIGHUP\nENTRYPOINT [\"/entrypoint\"]\nRUN addgroup -S docker-user ; adduser -S -G docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM alpine:3.10 AS base\nLABEL maintainer=\"Denys Zhdanov <denis.zhdanov@gmail.com>\"\nRUN true \\\n && apk add --no-cache cairo collectd collectd-disk collectd-nginx findutils librrd logrotate memcached nginx nodejs npm py3-pyldap redis runit sqlite expect dcron py-mysqldb mysql-dev mysql-client postgresql-dev postgresql-client \\\n && rm -rf /etc/nginx/conf.d/default.conf \\\n && mkdir -p /var/log/carbon /var/log/graphite\nFROM base AS build\nLABEL maintainer=\"Denys Zhdanov <denis.zhdanov@gmail.com>\"\nRUN true \\\n && apk add --update alpine-sdk git libffi-dev pkgconfig py3-cairo py3-pip py3-pyldap py3-virtualenv py-rrd py-mysqldb openldap-dev python3-dev rrdtool-dev wget \\\n && virtualenv /opt/graphite \\\n && . /opt/graphite/bin/activate \\\n && pip3 install django==1.11.21 django-statsd-mozilla fadvise gunicorn msgpack-python redis rrdtool python-ldap mysqlclient psycopg2\nARG version=1.1.5\n#  install whisper\nARG whisper_version=${version}\nARG whisper_repo=https://github.com/graphite-project/whisper.git\nRUN git clone -b ${whisper_version} --depth 1 ${whisper_repo} /usr/local/src/whisper \\\n && cd /usr/local/src/whisper \\\n && . /opt/graphite/bin/activate \\\n && python3 ./setup.py install\n#  install carbon\nARG carbon_version=${version}\nARG carbon_repo=https://github.com/graphite-project/carbon.git\nRUN . /opt/graphite/bin/activate \\\n && git clone -b ${carbon_version} --depth 1 ${carbon_repo} /usr/local/src/carbon \\\n && cd /usr/local/src/carbon \\\n && pip3 install -r requirements.txt \\\n && python3 ./setup.py install\n#  install graphite\nARG graphite_version=${version}\nARG graphite_repo=https://github.com/graphite-project/graphite-web.git\nRUN . /opt/graphite/bin/activate \\\n && git clone -b ${graphite_version} --depth 1 ${graphite_repo} /usr/local/src/graphite-web \\\n && cd /usr/local/src/graphite-web \\\n && pip3 install -r requirements.txt \\\n && python3 ./setup.py install\n#  install statsd (as we have to use this ugly way)\nARG statsd_version=8d5363cb109cc6363661a1d5813e0b96787c4411\nARG statsd_repo=https://github.com/etsy/statsd.git\nWORKDIR /opt\nRUN git clone \"${statsd_repo}\" \\\n && cd /opt/statsd \\\n && git checkout \"${statsd_version}\" \\\n && npm install\nCOPY conf/opt/graphite/conf/ /opt/defaultconf/graphite/\nCOPY conf/opt/graphite/webapp/graphite/local_settings.py /opt/defaultconf/graphite/local_settings.py\n#  config graphite\nCOPY conf/opt/graphite/conf/*.conf /opt/graphite/conf/\nCOPY conf/opt/graphite/webapp/graphite/local_settings.py /opt/graphite/webapp/graphite/local_settings.py\nWORKDIR /opt/graphite/webapp\nRUN mkdir -p /var/log/graphite/ \\\n && PYTHONPATH=/opt/graphite/webapp /opt/graphite/bin/django-admin.py collectstatic --noinput --settings=graphite.settings\n#  config statsd\nCOPY conf/opt/statsd/config/ /opt/defaultconf/statsd/config/\nFROM base AS production\nLABEL maintainer=\"Denys Zhdanov <denis.zhdanov@gmail.com>\"\nENV STATSD_INTERFACE=\"udp\"\nCOPY conf /\n#  copy /opt from build image\nCOPY --from=build /opt /opt\n#  defaults\nEXPOSE 80/tcp 2003-2004 2013-2014 2023-2024 8080/tcp 8125/tcp 8125/udp 8126/tcp\nVOLUME [\"/opt/graphite/conf\", \"/opt/graphite/storage\", \"/opt/graphite/webapp/graphite/functions/custom\", \"/etc/nginx\", \"/opt/statsd/config\", \"/etc/logrotate.d\", \"/var/log\", \"/var/lib/redis\"]\nSTOPSIGNAL SIGHUP\nENTRYPOINT [\"/entrypoint\"]\n","injectedSmells":[],"originalDockerfileHash":"ae6bcc643acf824108e928bc8f9da8bf","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM alpine:3.10 AS base\nLABEL maintainer=\"Denys Zhdanov <denis.zhdanov@gmail.com>\"\nRUN true \\\n && apk add --no-cache cairo collectd collectd-disk collectd-nginx findutils librrd logrotate memcached nginx nodejs npm py3-pyldap redis runit sqlite expect dcron py-mysqldb mysql-dev mysql-client postgresql-dev postgresql-client \\\n && rm -rf /etc/nginx/conf.d/default.conf \\\n && mkdir -p /var/log/carbon /var/log/graphite\nFROM base AS build\nLABEL maintainer=\"Denys Zhdanov <denis.zhdanov@gmail.com>\"\nRUN true \\\n && apk add --update alpine-sdk git libffi-dev pkgconfig py3-cairo py3-pip py3-pyldap py3-virtualenv py-rrd py-mysqldb openldap-dev python3-dev rrdtool-dev wget \\\n && virtualenv /opt/graphite \\\n && . /opt/graphite/bin/activate \\\n && pip3 install django==1.11.21 django-statsd-mozilla fadvise gunicorn msgpack-python redis rrdtool python-ldap mysqlclient psycopg2\nARG version=1.1.5\n#   install whisper\nARG whisper_version=${version}\nARG whisper_repo=https://github.com/graphite-project/whisper.git\nRUN git clone -b ${whisper_version} --depth 1 ${whisper_repo} /usr/local/src/whisper \\\n && cd /usr/local/src/whisper \\\n && . /opt/graphite/bin/activate \\\n && python3 ./setup.py install\n#   install carbon\nARG carbon_version=${version}\nARG carbon_repo=https://github.com/graphite-project/carbon.git\nRUN . /opt/graphite/bin/activate \\\n && git clone -b ${carbon_version} --depth 1 ${carbon_repo} /usr/local/src/carbon \\\n && cd /usr/local/src/carbon \\\n && pip3 install -r requirements.txt \\\n && python3 ./setup.py install\n#   install graphite\nARG graphite_version=${version}\nARG graphite_repo=https://github.com/graphite-project/graphite-web.git\nRUN . /opt/graphite/bin/activate \\\n && git clone -b ${graphite_version} --depth 1 ${graphite_repo} /usr/local/src/graphite-web \\\n && cd /usr/local/src/graphite-web \\\n && pip3 install -r requirements.txt \\\n && python3 ./setup.py install\n#   install statsd (as we have to use this ugly way)\nARG statsd_version=8d5363cb109cc6363661a1d5813e0b96787c4411\nARG statsd_repo=https://github.com/etsy/statsd.git\nWORKDIR /opt\nRUN git clone \"${statsd_repo}\" \\\n && cd /opt/statsd \\\n && git checkout \"${statsd_version}\" \\\n && npm install\nCOPY conf/opt/graphite/conf/ /opt/defaultconf/graphite/\nCOPY conf/opt/graphite/webapp/graphite/local_settings.py /opt/defaultconf/graphite/local_settings.py\n#   config graphite\nCOPY conf/opt/graphite/conf/*.conf /opt/graphite/conf/\nCOPY conf/opt/graphite/webapp/graphite/local_settings.py /opt/graphite/webapp/graphite/local_settings.py\nWORKDIR /opt/graphite/webapp\nRUN mkdir -p /var/log/graphite/ \\\n && PYTHONPATH=/opt/graphite/webapp /opt/graphite/bin/django-admin.py collectstatic --noinput --settings=graphite.settings\n#   config statsd\nCOPY conf/opt/statsd/config/ /opt/defaultconf/statsd/config/\nFROM base AS production\nLABEL maintainer=\"Denys Zhdanov <denis.zhdanov@gmail.com>\"\nENV STATSD_INTERFACE=\"udp\"\nCOPY conf /\n#   copy /opt from build image\nCOPY --from=build /opt /opt\n#   defaults\nEXPOSE 80/tcp 2003-2004 2013-2014 2023-2024 8080/tcp 8125/tcp 8125/udp 8126/tcp\nVOLUME [\"/opt/graphite/conf\", \"/opt/graphite/storage\", \"/opt/graphite/webapp/graphite/functions/custom\", \"/etc/nginx\", \"/opt/statsd/config\", \"/etc/logrotate.d\", \"/var/log\", \"/var/lib/redis\"]\nSTOPSIGNAL SIGHUP\nENTRYPOINT [\"/entrypoint\"]\n","originalDockerfileUglifiedHash":"4a9a6fc9a8ffd7bb4a7b6ac9e1d4cfb7","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/a8b03eed7c6dee0f6f10d6a355e981f75f6ac5ca.dockerfile"}