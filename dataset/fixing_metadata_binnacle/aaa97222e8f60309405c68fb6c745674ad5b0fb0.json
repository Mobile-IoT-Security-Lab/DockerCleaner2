{"seed":363398796,"processedDockerfileHash":"82604d3496b13dbb7e4d7700ebc52e9a","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM slicer/buildenv-qt5-centos7:latest\n#   Slicer master 2019-06-24\nENV SLICER_VERSION=\"28337\"\nRUN cd /usr/src \\\n && svn checkout -r ${SLICER_VERSION} http://svn.slicer.org/Slicer4/trunk Slicer \\\n && rm -rf /usr/src/Slicer/.svn \\\n && mkdir /usr/src/Slicer-build \\\n && cd /usr/src/Slicer-build \\\n && cmake -G Ninja -DCMAKE_BUILD_TYPE:STRING=Release -DQt5_DIR:PATH=${Qt5_DIR} -DSlicer_BUILD_ITKPython:BOOL=OFF -DSlicer_INSTALL_ITKPython:BOOL=OFF /usr/src/Slicer \\\n && cd /usr/src/Slicer-build \\\n && ninja -t commands Slicer | csplit - '/Slicer-mkdir/' \\\n && echo '#!/bin/bash' > BuildSlicerDependencies.sh \\\n && echo \"set -e\" >> BuildSlicerDependencies.sh \\\n && echo \"set -x\" >> BuildSlicerDependencies.sh \\\n && echo \"set -o pipefail\" >> BuildSlicerDependencies.sh \\\n && echo \"set -o\" >> BuildSlicerDependencies.sh \\\n && while IFS='' read -r line || [[ -n \"$line\" ]] ; do echo \"$line || exit $?\" >> BuildSlicerDependencies.sh; done < xx00 \\\n && chmod +x BuildSlicerDependencies.sh \\\n && rm xx00 \\\n && echo '#!/bin/bash' > BuildSlicer.sh \\\n && echo \"set -e\" >> BuildSlicer.sh \\\n && echo \"set -x\" >> BuildSlicer.sh \\\n && echo \"set -o pipefail\" >> BuildSlicer.sh \\\n && echo \"set -o\" >> BuildSlicer.sh \\\n && head -n 5 xx01 > xx01-no-slicer-build \\\n && while IFS='' read -r line || [[ -n \"$line\" ]] ; do echo \"$line || exit $?\" >> BuildSlicer.sh; done < xx01-no-slicer-build \\\n && echo \"cmake --build /usr/src/Slicer-build/Slicer-build -- $BUILD_TOOL_FLAGS\" >> BuildSlicer.sh \\\n && echo \"cmake --build /usr/src/Slicer-build/Slicer-build --target package -- $BUILD_TOOL_FLAGS | tee /usr/src/Slicer-build/Slicer-build/PACKAGES.txt\" >> BuildSlicer.sh \\\n && echo \"cat /usr/src/Slicer-build/Slicer-build/PACKAGES.txt | gawk 'match($0, /CPack: - package: (.*) generated/, a) {print a[1]}' > /usr/src/Slicer-build/Slicer-build/PACKAGE_FILE.txt\" >> BuildSlicer.sh \\\n && chmod +x BuildSlicer.sh \\\n && rm xx01 xx01-no-slicer-build \\\n && ./BuildSlicerDependencies.sh \\\n && find . -name '*.o' -delete \\\n && find . -name .git -type d -prune -exec rm -rf \"{}\"\nWORKDIR /usr/src/Slicer-build\n#   Build-time metadata as defined at http://label-schema.org\n#   BUILD_DATE is omitted to avoid unneeded rebuild\nARG IMAGE\nARG VCS_REF\nARG VCS_URL\nLABEL org.label-schema.name=\"$IMAGE\" \\\n      org.label-schema.vcs-ref=\"$VCS_REF\" \\\n      org.label-schema.vcs-url=\"$VCS_URL\" \\\n      org.label-schema.schema-version=\"1.0\" \\\n      maintainer=\"3D Slicer Community <slicer-devel@bwh.harvard.edu>\"\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM slicer/buildenv-qt5-centos7:latest\n#  Slicer master 2019-06-24\nENV SLICER_VERSION=\"28337\"\nRUN cd /usr/src \\\n && svn checkout -r ${SLICER_VERSION} http://svn.slicer.org/Slicer4/trunk Slicer \\\n && rm -rf /usr/src/Slicer/.svn \\\n && mkdir /usr/src/Slicer-build \\\n && cd /usr/src/Slicer-build \\\n && cmake -G Ninja -DCMAKE_BUILD_TYPE:STRING=Release -DQt5_DIR:PATH=${Qt5_DIR} -DSlicer_BUILD_ITKPython:BOOL=OFF -DSlicer_INSTALL_ITKPython:BOOL=OFF /usr/src/Slicer \\\n && cd /usr/src/Slicer-build \\\n && ninja -t commands Slicer | csplit - '/Slicer-mkdir/' \\\n && echo '#!/bin/bash' > BuildSlicerDependencies.sh \\\n && echo \"set -e\" >> BuildSlicerDependencies.sh \\\n && echo \"set -x\" >> BuildSlicerDependencies.sh \\\n && echo \"set -o pipefail\" >> BuildSlicerDependencies.sh \\\n && echo \"set -o\" >> BuildSlicerDependencies.sh \\\n && while IFS='' read -r line || [[ -n \"$line\" ]] ; do echo \"$line || exit $?\" >> BuildSlicerDependencies.sh; done < xx00 \\\n && chmod +x BuildSlicerDependencies.sh \\\n && rm xx00 \\\n && echo '#!/bin/bash' > BuildSlicer.sh \\\n && echo \"set -e\" >> BuildSlicer.sh \\\n && echo \"set -x\" >> BuildSlicer.sh \\\n && echo \"set -o pipefail\" >> BuildSlicer.sh \\\n && echo \"set -o\" >> BuildSlicer.sh \\\n && head -n 5 xx01 > xx01-no-slicer-build \\\n && while IFS='' read -r line || [[ -n \"$line\" ]] ; do echo \"$line || exit $?\" >> BuildSlicer.sh; done < xx01-no-slicer-build \\\n && echo \"cmake --build /usr/src/Slicer-build/Slicer-build -- $BUILD_TOOL_FLAGS\" >> BuildSlicer.sh \\\n && echo \"cmake --build /usr/src/Slicer-build/Slicer-build --target package -- $BUILD_TOOL_FLAGS | tee /usr/src/Slicer-build/Slicer-build/PACKAGES.txt\" >> BuildSlicer.sh \\\n && echo \"cat /usr/src/Slicer-build/Slicer-build/PACKAGES.txt | gawk 'match($0, /CPack: - package: (.*) generated/, a) {print a[1]}' > /usr/src/Slicer-build/Slicer-build/PACKAGE_FILE.txt\" >> BuildSlicer.sh \\\n && chmod +x BuildSlicer.sh \\\n && rm xx01 xx01-no-slicer-build \\\n && ./BuildSlicerDependencies.sh \\\n && find . -name '*.o' -delete \\\n && find . -name .git -type d -prune -exec rm -rf \"{}\" ; \\\n && rm -f *.cmake *.txt *.applied *.updated *.in *.tcl Makefile \\\n && rm -f *.tgz *.tar.gz *.zip \\\n && rm -rf CMakeFiles \\\n && find . -maxdepth 1 -type d -name python-install -o -type d -name \"python-*\" -exec rm -rf \"{}\" ; \\\n && rm -rf NUMPY \\\n && rm -rf SimpleITK* \\\n && rm -rf Python-2* \\\n && find . -maxdepth 1 -type d -name Slicer-prefix -o -type d -name \"*-prefix\" -exec rm -rf \"{}\" ; \\\n && rm -rf bzip2 bzip2-build curl curl-build LibArchive LibArchive-build PCRE PCRE-build Swig Swig-build zlib zlib-build \\\n && mkdir -p ITK-build/Wrapping \\\n && find ITK-build/Wrapping -name '*.cpp' -delete -o -name '*.xml' -delete \\\n && rm -rf ITK-build/Wrapping/Generators/castxml* \\\n && find CTK -name '*.cpp' -delete \\\n && find DCMTK -name '*.cc' -delete \\\n && find ITK -name '*.cxx' -delete -o -name '*.cpp' -delete \\\n && find VTK -name '*.cxx' -delete -o -name '*.cpp' -delete \\\n && rm -rf CTK-build/PythonQt/generated* \\\n && rm -rf /usr/src/Slicer\nWORKDIR /usr/src/Slicer-build\n#  Build-time metadata as defined at http://label-schema.org\n#  BUILD_DATE is omitted to avoid unneeded rebuild\nARG IMAGE\nARG VCS_REF\nARG VCS_URL\nLABEL org.label-schema.name=\"$IMAGE\" \\\n      org.label-schema.vcs-ref=\"$VCS_REF\" \\\n      org.label-schema.vcs-url=\"$VCS_URL\" \\\n      org.label-schema.schema-version=\"1.0\" \\\n      maintainer=\"3D Slicer Community <slicer-devel@bwh.harvard.edu>\"\n","injectedSmells":[],"originalDockerfileHash":"057ae7c94303b0c4b5c1a0c015a9068c","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM slicer/buildenv-qt5-centos7:latest\n#   Slicer master 2019-06-24\nENV SLICER_VERSION=\"28337\"\nRUN cd /usr/src \\\n && svn checkout -r ${SLICER_VERSION} http://svn.slicer.org/Slicer4/trunk Slicer \\\n && rm -rf /usr/src/Slicer/.svn \\\n && mkdir /usr/src/Slicer-build \\\n && cd /usr/src/Slicer-build \\\n && cmake -G Ninja -DCMAKE_BUILD_TYPE:STRING=Release -DQt5_DIR:PATH=${Qt5_DIR} -DSlicer_BUILD_ITKPython:BOOL=OFF -DSlicer_INSTALL_ITKPython:BOOL=OFF /usr/src/Slicer \\\n && cd /usr/src/Slicer-build \\\n && ninja -t commands Slicer | csplit - '/Slicer-mkdir/' \\\n && echo '#!/bin/bash' > BuildSlicerDependencies.sh \\\n && echo \"set -e\" >> BuildSlicerDependencies.sh \\\n && echo \"set -x\" >> BuildSlicerDependencies.sh \\\n && echo \"set -o pipefail\" >> BuildSlicerDependencies.sh \\\n && echo \"set -o\" >> BuildSlicerDependencies.sh \\\n && while IFS='' read -r line || [[ -n \"$line\" ]] ; do echo \"$line || exit $?\" >> BuildSlicerDependencies.sh; done < xx00 \\\n && chmod +x BuildSlicerDependencies.sh \\\n && rm xx00 \\\n && echo '#!/bin/bash' > BuildSlicer.sh \\\n && echo \"set -e\" >> BuildSlicer.sh \\\n && echo \"set -x\" >> BuildSlicer.sh \\\n && echo \"set -o pipefail\" >> BuildSlicer.sh \\\n && echo \"set -o\" >> BuildSlicer.sh \\\n && head -n 5 xx01 > xx01-no-slicer-build \\\n && while IFS='' read -r line || [[ -n \"$line\" ]] ; do echo \"$line || exit $?\" >> BuildSlicer.sh; done < xx01-no-slicer-build \\\n && echo \"cmake --build /usr/src/Slicer-build/Slicer-build -- $BUILD_TOOL_FLAGS\" >> BuildSlicer.sh \\\n && echo \"cmake --build /usr/src/Slicer-build/Slicer-build --target package -- $BUILD_TOOL_FLAGS | tee /usr/src/Slicer-build/Slicer-build/PACKAGES.txt\" >> BuildSlicer.sh \\\n && echo \"cat /usr/src/Slicer-build/Slicer-build/PACKAGES.txt | gawk 'match($0, /CPack: - package: (.*) generated/, a) {print a[1]}' > /usr/src/Slicer-build/Slicer-build/PACKAGE_FILE.txt\" >> BuildSlicer.sh \\\n && chmod +x BuildSlicer.sh \\\n && rm xx01 xx01-no-slicer-build \\\n && ./BuildSlicerDependencies.sh \\\n && find . -name '*.o' -delete \\\n && find . -name .git -type d -prune -exec rm -rf \"{}\"\nWORKDIR /usr/src/Slicer-build\n#   Build-time metadata as defined at http://label-schema.org\n#   BUILD_DATE is omitted to avoid unneeded rebuild\nARG IMAGE\nARG VCS_REF\nARG VCS_URL\nLABEL org.label-schema.name=\"$IMAGE\" \\\n      org.label-schema.vcs-ref=\"$VCS_REF\" \\\n      org.label-schema.vcs-url=\"$VCS_URL\" \\\n      org.label-schema.schema-version=\"1.0\" \\\n      maintainer=\"3D Slicer Community <slicer-devel@bwh.harvard.edu>\"\n","originalDockerfileUglifiedHash":"0b365dc076477db19e1b65d8db6fefad","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/aaa97222e8f60309405c68fb6c745674ad5b0fb0.dockerfile"}