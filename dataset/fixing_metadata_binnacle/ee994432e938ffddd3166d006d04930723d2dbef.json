{"seed":1720409994,"processedDockerfileHash":"9d87b48a8f9ad640d0abbe158630195d","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-pip","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM python:2.7\nRUN usermod -d /home www-data \\\n && chown www-data:www-data /home\n#   Install dependancies\nRUN apt-get update \\\n && apt-get install --no-install-recommends curl git libev4 libev-dev libevent-dev libxml2-dev libxslt1-dev zlib1g-dev cron rsyslog libfreetype6-dev libxft-dev gfortran libopenblas-dev liblapack-dev build-essential libssl-dev libffi-dev python-dev par2 -y \\\n && apt-get clean \\\n && apt-get autoremove -y \\\n && rm -rf /var/lib/apt/lists/*\nRUN rm -rf /etc/cron.daily/* /etc/cron.hourly/* /etc/cron.monthly/* /etc/cron.weekly/*\n#   grab gosu for easy step-down from root\nENV GOSU_VERSION=\"1.4\"\nRUN gpg --keyserver pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 \\\n && curl -o /usr/local/bin/gosu -SL \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;)\" \\\n && curl -o /usr/local/bin/gosu.asc -SL \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;).asc\" \\\n && gpg --verify /usr/local/bin/gosu.asc \\\n && rm /usr/local/bin/gosu.asc \\\n && chmod +x /usr/local/bin/gosu\n#   https://github.com/nodejs/docker-node/blob/9c25cbe93f9108fd1e506d14228afe4a3d04108f/8.2/Dockerfile\n#   gpg keys listed at https://github.com/nodejs/node#release-team\nRUN set -ex \\\n && for key in 9554F04D7259F04124DE6B476D5A82AC7E37093B 94AE36675C464D64BAFA68DD7434390BDBE9B9C5 FD3A5288F042B6850C66B31F09FE44734EB7990E 71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 DD8F2338BAE7501E3DD5AC78C273792F7D83545D B9AE9905FFD7803F25714661B63B535A4C206CA9 C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 56730D5401028683275BD23C23EFEFE93C4CFFFE; do gpg --keyserver pgp.mit.edu --recv-keys \"$key\" || gpg --keyserver keyserver.pgp.com --recv-keys \"$key\" || gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\" ; done\nENV NPM_CONFIG_LOGLEVEL=\"info\"\nENV NODE_VERSION=\"8.2.1\"\nRUN ARCH= \\\n && dpkgArch=\"$( dpkg --print-architecture ;)\" \\\n && case \"${dpkgArch##*-}\" in (amd64) ARCH='x64' ;;(ppc64el) ARCH='ppc64le' ;;(*) echo \"unsupported architecture\" ; exit 1 ;; esac \\\n && curl -SLO \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-$ARCH.tar.xz\" \\\n && curl -SLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\" \\\n && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc \\\n && grep \" node-v$NODE_VERSION-linux-$ARCH.tar.xz$\" SHASUMS256.txt | sha256sum -c - \\\n && tar -xJf \"node-v$NODE_VERSION-linux-$ARCH.tar.xz\" -C /usr/local --strip-components=1 \\\n && rm \"node-v$NODE_VERSION-linux-$ARCH.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt \\\n && ln -s /usr/local/bin/node /usr/local/bin/nodejs\nENV SOURCE_BRANCH=\"develop\"\n#   ENV SOURCE_BRANCH master\nENV SOURCE_REPO=\"https://github.com/CenterForOpenScience/osf.io.git\"\nENV WHEELHOUSE=\"/home/.cache/wheelhouse\"\nENV UPDATE_CMD=\"'invoke clean && invoke wheelhouse --release && invoke requirements --release'\"\nRUN chmod 600 /etc/crontab\nRUN pip install pip==23.1 -U\nRUN pip install invoke==0.13.0 uwsgi==2.0.10\nWORKDIR /code\n#   perform an initial build to cache long running compilations\nRUN git clone -b $SOURCE_BRANCH $SOURCE_REPO . \\\n && cp website/settings/local-dist.py website/settings/local.py \\\n && chown -R www-data:www-data /code\n#   numpy is a pre-req to scipy\nRUN pip wheel numpy==1.8.0 --wheel-dir=/home/.cache/wheelhouse\nRUN pip install numpy==1.8.0\nRUN invoke wheelhouse --release\nRUN invoke requirements --release\nCOPY entrypoint.sh /entrypoint.sh\nRUN chmod +x /entrypoint.sh\nENTRYPOINT [\"/entrypoint.sh\"]\nVOLUME /code\nVOLUME /celery\nCMD [\"invoke\", \"celery_worker\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM python:2.7\nRUN usermod -d /home www-data \\\n && chown www-data:www-data /home\n#  Install dependancies\nRUN apt-get update \\\n && apt-get install curl git libev4 libev-dev libevent-dev libxml2-dev libxslt1-dev zlib1g-dev cron rsyslog libfreetype6-dev libxft-dev gfortran libopenblas-dev liblapack-dev build-essential libssl-dev libffi-dev python-dev par2 -y \\\n && apt-get clean \\\n && apt-get autoremove -y \\\n && rm -rf /var/lib/apt/lists/*\nRUN rm -rf /etc/cron.daily/* /etc/cron.hourly/* /etc/cron.monthly/* /etc/cron.weekly/*\n#  grab gosu for easy step-down from root\nENV GOSU_VERSION=\"1.4\"\nRUN gpg --keyserver pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 \\\n && curl -o /usr/local/bin/gosu -SL \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;)\" \\\n && curl -o /usr/local/bin/gosu.asc -SL \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;).asc\" \\\n && gpg --verify /usr/local/bin/gosu.asc \\\n && rm /usr/local/bin/gosu.asc \\\n && chmod +x /usr/local/bin/gosu\n#  https://github.com/nodejs/docker-node/blob/9c25cbe93f9108fd1e506d14228afe4a3d04108f/8.2/Dockerfile\n#  gpg keys listed at https://github.com/nodejs/node#release-team\nRUN set -ex \\\n && for key in 9554F04D7259F04124DE6B476D5A82AC7E37093B 94AE36675C464D64BAFA68DD7434390BDBE9B9C5 FD3A5288F042B6850C66B31F09FE44734EB7990E 71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 DD8F2338BAE7501E3DD5AC78C273792F7D83545D B9AE9905FFD7803F25714661B63B535A4C206CA9 C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 56730D5401028683275BD23C23EFEFE93C4CFFFE; do gpg --keyserver pgp.mit.edu --recv-keys \"$key\" || gpg --keyserver keyserver.pgp.com --recv-keys \"$key\" || gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\" ; done\nENV NPM_CONFIG_LOGLEVEL=\"info\"\nENV NODE_VERSION=\"8.2.1\"\nRUN ARCH= \\\n && dpkgArch=\"$( dpkg --print-architecture ;)\" \\\n && case \"${dpkgArch##*-}\" in (amd64) ARCH='x64' ;;(ppc64el) ARCH='ppc64le' ;;(*) echo \"unsupported architecture\" ; exit 1 ;; esac \\\n && curl -SLO \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-$ARCH.tar.xz\" \\\n && curl -SLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\" \\\n && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc \\\n && grep \" node-v$NODE_VERSION-linux-$ARCH.tar.xz$\" SHASUMS256.txt | sha256sum -c - \\\n && tar -xJf \"node-v$NODE_VERSION-linux-$ARCH.tar.xz\" -C /usr/local --strip-components=1 \\\n && rm \"node-v$NODE_VERSION-linux-$ARCH.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt \\\n && ln -s /usr/local/bin/node /usr/local/bin/nodejs\nENV SOURCE_BRANCH=\"develop\"\n#  ENV SOURCE_BRANCH master\nENV SOURCE_REPO=\"https://github.com/CenterForOpenScience/osf.io.git\"\nENV WHEELHOUSE=\"/home/.cache/wheelhouse\"\nENV UPDATE_CMD=\"'invoke clean && invoke wheelhouse --release && invoke requirements --release'\"\nRUN chmod 600 /etc/crontab\nRUN pip install pip -U\nRUN pip install invoke==0.13.0 uwsgi==2.0.10\nWORKDIR /code\n#  perform an initial build to cache long running compilations\nRUN git clone -b $SOURCE_BRANCH $SOURCE_REPO . \\\n && cp website/settings/local-dist.py website/settings/local.py \\\n && chown -R www-data:www-data /code\n#  numpy is a pre-req to scipy\nRUN pip wheel numpy==1.8.0 --wheel-dir=/home/.cache/wheelhouse\nRUN pip install numpy==1.8.0\nRUN invoke wheelhouse --release\nRUN invoke requirements --release\nCOPY entrypoint.sh /entrypoint.sh\nRUN chmod +x /entrypoint.sh\nENTRYPOINT [\"/entrypoint.sh\"]\nVOLUME /code\nVOLUME /celery\nCMD [\"invoke\", \"celery_worker\"]\n","injectedSmells":[],"originalDockerfileHash":"6ab6cb8ffb402f3fccc787e7668b5f8a","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM python:2.7\nRUN usermod -d /home www-data \\\n && chown www-data:www-data /home\n#   Install dependancies\nRUN apt-get update \\\n && apt-get install curl git libev4 libev-dev libevent-dev libxml2-dev libxslt1-dev zlib1g-dev cron rsyslog libfreetype6-dev libxft-dev gfortran libopenblas-dev liblapack-dev build-essential libssl-dev libffi-dev python-dev par2 -y \\\n && apt-get clean \\\n && apt-get autoremove -y \\\n && rm -rf /var/lib/apt/lists/*\nRUN rm -rf /etc/cron.daily/* /etc/cron.hourly/* /etc/cron.monthly/* /etc/cron.weekly/*\n#   grab gosu for easy step-down from root\nENV GOSU_VERSION=\"1.4\"\nRUN gpg --keyserver pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 \\\n && curl -o /usr/local/bin/gosu -SL \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;)\" \\\n && curl -o /usr/local/bin/gosu.asc -SL \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;).asc\" \\\n && gpg --verify /usr/local/bin/gosu.asc \\\n && rm /usr/local/bin/gosu.asc \\\n && chmod +x /usr/local/bin/gosu\n#   https://github.com/nodejs/docker-node/blob/9c25cbe93f9108fd1e506d14228afe4a3d04108f/8.2/Dockerfile\n#   gpg keys listed at https://github.com/nodejs/node#release-team\nRUN set -ex \\\n && for key in 9554F04D7259F04124DE6B476D5A82AC7E37093B 94AE36675C464D64BAFA68DD7434390BDBE9B9C5 FD3A5288F042B6850C66B31F09FE44734EB7990E 71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 DD8F2338BAE7501E3DD5AC78C273792F7D83545D B9AE9905FFD7803F25714661B63B535A4C206CA9 C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 56730D5401028683275BD23C23EFEFE93C4CFFFE; do gpg --keyserver pgp.mit.edu --recv-keys \"$key\" || gpg --keyserver keyserver.pgp.com --recv-keys \"$key\" || gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\" ; done\nENV NPM_CONFIG_LOGLEVEL=\"info\"\nENV NODE_VERSION=\"8.2.1\"\nRUN ARCH= \\\n && dpkgArch=\"$( dpkg --print-architecture ;)\" \\\n && case \"${dpkgArch##*-}\" in (amd64) ARCH='x64' ;;(ppc64el) ARCH='ppc64le' ;;(*) echo \"unsupported architecture\" ; exit 1 ;; esac \\\n && curl -SLO \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-$ARCH.tar.xz\" \\\n && curl -SLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\" \\\n && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc \\\n && grep \" node-v$NODE_VERSION-linux-$ARCH.tar.xz$\" SHASUMS256.txt | sha256sum -c - \\\n && tar -xJf \"node-v$NODE_VERSION-linux-$ARCH.tar.xz\" -C /usr/local --strip-components=1 \\\n && rm \"node-v$NODE_VERSION-linux-$ARCH.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt \\\n && ln -s /usr/local/bin/node /usr/local/bin/nodejs\nENV SOURCE_BRANCH=\"develop\"\n#   ENV SOURCE_BRANCH master\nENV SOURCE_REPO=\"https://github.com/CenterForOpenScience/osf.io.git\"\nENV WHEELHOUSE=\"/home/.cache/wheelhouse\"\nENV UPDATE_CMD=\"'invoke clean && invoke wheelhouse --release && invoke requirements --release'\"\nRUN chmod 600 /etc/crontab\nRUN pip install pip -U\nRUN pip install invoke==0.13.0 uwsgi==2.0.10\nWORKDIR /code\n#   perform an initial build to cache long running compilations\nRUN git clone -b $SOURCE_BRANCH $SOURCE_REPO . \\\n && cp website/settings/local-dist.py website/settings/local.py \\\n && chown -R www-data:www-data /code\n#   numpy is a pre-req to scipy\nRUN pip wheel numpy==1.8.0 --wheel-dir=/home/.cache/wheelhouse\nRUN pip install numpy==1.8.0\nRUN invoke wheelhouse --release\nRUN invoke requirements --release\nCOPY entrypoint.sh /entrypoint.sh\nRUN chmod +x /entrypoint.sh\nENTRYPOINT [\"/entrypoint.sh\"]\nVOLUME /code\nVOLUME /celery\nCMD [\"invoke\", \"celery_worker\"]\n","originalDockerfileUglifiedHash":"2671a318d52d9c5222dbc4d5c675d5c2","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/ee994432e938ffddd3166d006d04930723d2dbef.dockerfile"}