{"seed":2541505260,"processedDockerfileHash":"ac109734bb3fc3f3c69430efcc2141c5","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM ubuntu\nEXPOSE 8080/tcp\n#  add ppa for newer compiler\nRUN apt-get update ; apt-get install --no-install-recommends software-properties-common=0.99.35 python-software-properties -y ; add-apt-repository -y ppa:ubuntu-toolchain-r/test ; apt-get update -o Dir::Etc::sourcelist=\"sources.list.d/ubuntu-toolchain-r-test-$( lsb_release -c -s ;).list\" -o Dir::Etc::sourceparts=\"-\" -o APT::Get::List-Cleanup=\"0\"\n#  grab all of the dependencies\nRUN apt-get install --no-install-recommends autoconf=2.71-3 automake=1:1.16.5-1.3 libtool=2.4.7-5 make=4.3-4.1build1 gcc-4.9 g++-4.9 libboost1.54-dev libboost-program-options1.54-dev libboost-filesystem1.54-dev libboost-system1.54-dev libboost-thread1.54-dev protobuf-compiler=3.21.12-1ubuntu7 libprotobuf-dev=3.21.12-1ubuntu7 lua5.2=5.2.4-3 liblua5.2-dev=5.2.4-3 git=1:2.39.2-1ubuntu1 firefox=1:1snap1-0ubuntu3 libsqlite3-dev=3.40.1-1 libspatialite-dev=5.0.1-3 libgeos-dev=3.11.1-1 libgeos++-dev=3.11.1-1 libcurl4-openssl-dev=7.88.1-7ubuntu1 git=1:2.39.2-1ubuntu1 wget=1.21.3-1ubuntu1 -y\n#  use newer compiler\nRUN update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.9 90 ; update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-4.9 90\nWORKDIR /opt\nRUN git clone --depth=1 --recurse-submodules --single-branch --branch=master https://github.com/zeromq/libzmq.git\nWORKDIR /opt/libzmq\nRUN ./autogen.sh\nRUN ./configure --without-libsodium --without-documentation ; make install\nWORKDIR /opt\n#  grab prime_server API:\nRUN git clone --depth=1 --recurse-submodules --single-branch --branch=master https://github.com/kevinkreiser/prime_server.git\nWORKDIR /opt/prime_server\nRUN ./autogen.sh ; ./configure ; make install\nWORKDIR /opt\n#  grab midgard\nRUN git clone --recurse-submodules https://github.com/valhalla/midgard\nWORKDIR /opt/midgard\nRUN ./autogen.sh ; ./configure CPPFLAGS=-DBOOST_SPIRIT_THREADSAFE ; make ; make install\nWORKDIR /opt\n#  grab baldr\nRUN git clone --recurse-submodules https://github.com/valhalla/baldr\nWORKDIR /opt/baldr\nRUN ./autogen.sh ; ./configure CPPFLAGS=-DBOOST_SPIRIT_THREADSAFE ; make ; make install\nWORKDIR /opt\n#  grab sif\nRUN git clone --recurse-submodules https://github.com/valhalla/sif\nWORKDIR /opt/sif\nRUN ./autogen.sh ; ./configure CPPFLAGS=-DBOOST_SPIRIT_THREADSAFE ; make ; make install\nWORKDIR /opt\n#  grab skadi\nRUN git clone --recurse-submodules https://github.com/valhalla/skadi\nWORKDIR /opt/skadi\nRUN ./autogen.sh ; ./configure CPPFLAGS=-DBOOST_SPIRIT_THREADSAFE ; make ; make install\nWORKDIR /opt\n#  grab mjolnir\nRUN git clone --recurse-submodules https://github.com/valhalla/mjolnir\nWORKDIR /opt/mjolnir\nRUN ./autogen.sh ; ./configure CPPFLAGS=-DBOOST_SPIRIT_THREADSAFE ; make ; make install\nWORKDIR /opt\n#  grab loki\nRUN git clone --recurse-submodules https://github.com/valhalla/loki\nWORKDIR /opt/loki\nRUN ./autogen.sh ; ./configure CPPFLAGS=-DBOOST_SPIRIT_THREADSAFE ; make ; make install\nWORKDIR /opt\n#  grab yaml-cpp\nRUN git clone https://github.com/jbeder/yaml-cpp.git\nRUN mkdir yaml-cpp/build\nRUN apt-get install --no-install-recommends cmake=3.25.1-1 -y\nWORKDIR /opt/yaml-cpp/build\nRUN cmake ../ ; make ; make install\nWORKDIR /opt\n#  grab odin\nRUN git clone https://github.com/valhalla/odin.git\nWORKDIR /opt/odin\nRUN scripts/dependencies.sh ; ./scripts/install.sh\nWORKDIR /opt\n#  grab thor\nRUN git clone --recurse-submodules https://github.com/valhalla/thor.git\nWORKDIR /opt/thor\nRUN ./autogen.sh ; ./configure CPPFLAGS=-DBOOST_SPIRIT_THREADSAFE ; make ; make install\nWORKDIR /opt\n#  grab tyr\nRUN git clone --recurse-submodules https://github.com/valhalla/tyr.git\nWORKDIR /opt/tyr\nRUN ./autogen.sh ; ./configure CPPFLAGS=-DBOOST_SPIRIT_THREADSAFE ; make ; make install\nWORKDIR /opt\n#  grab tools\nRUN git clone --recurse-submodules https://github.com/valhalla/tools.git\nWORKDIR /opt/tools\nRUN ./autogen.sh ; ./configure CPPFLAGS=-DBOOST_SPIRIT_THREADSAFE ; make ; make install\nWORKDIR /opt\nCOPY scripts /opt/scripts\n#  Run the server\nCMD chmod 777 /opt/scripts/*\nWORKDIR /opt/tyr\nEXPOSE 8002/tcp\nEXPOSE 8080/tcp\nCMD LD_LIBRARY_PATH=/usr/lib:/usr/local/lib /opt/tools/tyr_simple_service /data/valhalla/valhalla.json\n#  CMD LD_LIBRARY_PATH=/usr/lib:/usr/local/lib tyr/tyr_simple_service tyr/conf/valhalla.json\n#\n#\n#\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu\nEXPOSE 8080/tcp\n# add ppa for newer compiler\nRUN apt-get update ; apt-get install software-properties-common python-software-properties -y ; add-apt-repository -y ppa:ubuntu-toolchain-r/test ; apt-get update -o Dir::Etc::sourcelist=\"sources.list.d/ubuntu-toolchain-r-test-$( lsb_release -c -s ;).list\" -o Dir::Etc::sourceparts=\"-\" -o APT::Get::List-Cleanup=\"0\"\n# grab all of the dependencies\nRUN apt-get install autoconf automake libtool make gcc-4.9 g++-4.9 libboost1.54-dev libboost-program-options1.54-dev libboost-filesystem1.54-dev libboost-system1.54-dev libboost-thread1.54-dev protobuf-compiler libprotobuf-dev lua5.2 liblua5.2-dev git firefox libsqlite3-dev libspatialite-dev libgeos-dev libgeos++-dev libcurl4-openssl-dev git wget -y\n# use newer compiler\nRUN update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.9 90 ; update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-4.9 90\nWORKDIR /opt\nRUN git clone --depth=1 --recurse-submodules --single-branch --branch=master https://github.com/zeromq/libzmq.git\nWORKDIR /opt/libzmq\nRUN ./autogen.sh\nRUN ./configure --without-libsodium --without-documentation ; make install\nWORKDIR /opt\n# grab prime_server API:\nRUN git clone --depth=1 --recurse-submodules --single-branch --branch=master https://github.com/kevinkreiser/prime_server.git\nWORKDIR /opt/prime_server\nRUN ./autogen.sh ; ./configure ; make install\nWORKDIR /opt\n# grab midgard\nRUN git clone --recurse-submodules https://github.com/valhalla/midgard\nWORKDIR /opt/midgard\nRUN ./autogen.sh ; ./configure CPPFLAGS=-DBOOST_SPIRIT_THREADSAFE ; make ; make install\nWORKDIR /opt\n# grab baldr\nRUN git clone --recurse-submodules https://github.com/valhalla/baldr\nWORKDIR /opt/baldr\nRUN ./autogen.sh ; ./configure CPPFLAGS=-DBOOST_SPIRIT_THREADSAFE ; make ; make install\nWORKDIR /opt\n# grab sif\nRUN git clone --recurse-submodules https://github.com/valhalla/sif\nWORKDIR /opt/sif\nRUN ./autogen.sh ; ./configure CPPFLAGS=-DBOOST_SPIRIT_THREADSAFE ; make ; make install\nWORKDIR /opt\n# grab skadi\nRUN git clone --recurse-submodules https://github.com/valhalla/skadi\nWORKDIR /opt/skadi\nRUN ./autogen.sh ; ./configure CPPFLAGS=-DBOOST_SPIRIT_THREADSAFE ; make ; make install\nWORKDIR /opt\n# grab mjolnir\nRUN git clone --recurse-submodules https://github.com/valhalla/mjolnir\nWORKDIR /opt/mjolnir\nRUN ./autogen.sh ; ./configure CPPFLAGS=-DBOOST_SPIRIT_THREADSAFE ; make ; make install\nWORKDIR /opt\n# grab loki\nRUN git clone --recurse-submodules https://github.com/valhalla/loki\nWORKDIR /opt/loki\nRUN ./autogen.sh ; ./configure CPPFLAGS=-DBOOST_SPIRIT_THREADSAFE ; make ; make install\nWORKDIR /opt\n# grab yaml-cpp\nRUN git clone https://github.com/jbeder/yaml-cpp.git\nRUN mkdir yaml-cpp/build\nRUN apt-get install cmake -y\nWORKDIR /opt/yaml-cpp/build\nRUN cmake ../ ; make ; make install\nWORKDIR /opt\n# grab odin\nRUN git clone https://github.com/valhalla/odin.git\nWORKDIR /opt/odin\nRUN scripts/dependencies.sh ; ./scripts/install.sh\nWORKDIR /opt\n# grab thor\nRUN git clone --recurse-submodules https://github.com/valhalla/thor.git\nWORKDIR /opt/thor\nRUN ./autogen.sh ; ./configure CPPFLAGS=-DBOOST_SPIRIT_THREADSAFE ; make ; make install\nWORKDIR /opt\n# grab tyr\nRUN git clone --recurse-submodules https://github.com/valhalla/tyr.git\nWORKDIR /opt/tyr\nRUN ./autogen.sh ; ./configure CPPFLAGS=-DBOOST_SPIRIT_THREADSAFE ; make ; make install\nWORKDIR /opt\n# grab tools\nRUN git clone --recurse-submodules https://github.com/valhalla/tools.git\nWORKDIR /opt/tools\nRUN ./autogen.sh ; ./configure CPPFLAGS=-DBOOST_SPIRIT_THREADSAFE ; make ; make install\nWORKDIR /opt\nADD scripts /opt/scripts\n# Run the server\nCMD chmod 777 /opt/scripts/*\nWORKDIR /opt/tyr\nEXPOSE 8002/tcp\nEXPOSE 8080/tcp\nCMD LD_LIBRARY_PATH=/usr/lib:/usr/local/lib /opt/tools/tyr_simple_service /data/valhalla/valhalla.json\n# CMD LD_LIBRARY_PATH=/usr/lib:/usr/local/lib tyr/tyr_simple_service tyr/conf/valhalla.json\n#\n#\n#\n","injectedSmells":[],"originalDockerfileHash":"447f13cf927335ac6b039a62977c4aec","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu\nEXPOSE 8080/tcp\n#  add ppa for newer compiler\nRUN apt-get update ; apt-get install software-properties-common python-software-properties -y ; add-apt-repository -y ppa:ubuntu-toolchain-r/test ; apt-get update -o Dir::Etc::sourcelist=\"sources.list.d/ubuntu-toolchain-r-test-$( lsb_release -c -s ;).list\" -o Dir::Etc::sourceparts=\"-\" -o APT::Get::List-Cleanup=\"0\"\n#  grab all of the dependencies\nRUN apt-get install autoconf automake libtool make gcc-4.9 g++-4.9 libboost1.54-dev libboost-program-options1.54-dev libboost-filesystem1.54-dev libboost-system1.54-dev libboost-thread1.54-dev protobuf-compiler libprotobuf-dev lua5.2 liblua5.2-dev git firefox libsqlite3-dev libspatialite-dev libgeos-dev libgeos++-dev libcurl4-openssl-dev git wget -y\n#  use newer compiler\nRUN update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.9 90 ; update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-4.9 90\nWORKDIR /opt\nRUN git clone --depth=1 --recurse-submodules --single-branch --branch=master https://github.com/zeromq/libzmq.git\nWORKDIR /opt/libzmq\nRUN ./autogen.sh\nRUN ./configure --without-libsodium --without-documentation ; make install\nWORKDIR /opt\n#  grab prime_server API:\nRUN git clone --depth=1 --recurse-submodules --single-branch --branch=master https://github.com/kevinkreiser/prime_server.git\nWORKDIR /opt/prime_server\nRUN ./autogen.sh ; ./configure ; make install\nWORKDIR /opt\n#  grab midgard\nRUN git clone --recurse-submodules https://github.com/valhalla/midgard\nWORKDIR /opt/midgard\nRUN ./autogen.sh ; ./configure CPPFLAGS=-DBOOST_SPIRIT_THREADSAFE ; make ; make install\nWORKDIR /opt\n#  grab baldr\nRUN git clone --recurse-submodules https://github.com/valhalla/baldr\nWORKDIR /opt/baldr\nRUN ./autogen.sh ; ./configure CPPFLAGS=-DBOOST_SPIRIT_THREADSAFE ; make ; make install\nWORKDIR /opt\n#  grab sif\nRUN git clone --recurse-submodules https://github.com/valhalla/sif\nWORKDIR /opt/sif\nRUN ./autogen.sh ; ./configure CPPFLAGS=-DBOOST_SPIRIT_THREADSAFE ; make ; make install\nWORKDIR /opt\n#  grab skadi\nRUN git clone --recurse-submodules https://github.com/valhalla/skadi\nWORKDIR /opt/skadi\nRUN ./autogen.sh ; ./configure CPPFLAGS=-DBOOST_SPIRIT_THREADSAFE ; make ; make install\nWORKDIR /opt\n#  grab mjolnir\nRUN git clone --recurse-submodules https://github.com/valhalla/mjolnir\nWORKDIR /opt/mjolnir\nRUN ./autogen.sh ; ./configure CPPFLAGS=-DBOOST_SPIRIT_THREADSAFE ; make ; make install\nWORKDIR /opt\n#  grab loki\nRUN git clone --recurse-submodules https://github.com/valhalla/loki\nWORKDIR /opt/loki\nRUN ./autogen.sh ; ./configure CPPFLAGS=-DBOOST_SPIRIT_THREADSAFE ; make ; make install\nWORKDIR /opt\n#  grab yaml-cpp\nRUN git clone https://github.com/jbeder/yaml-cpp.git\nRUN mkdir yaml-cpp/build\nRUN apt-get install cmake -y\nWORKDIR /opt/yaml-cpp/build\nRUN cmake ../ ; make ; make install\nWORKDIR /opt\n#  grab odin\nRUN git clone https://github.com/valhalla/odin.git\nWORKDIR /opt/odin\nRUN scripts/dependencies.sh ; ./scripts/install.sh\nWORKDIR /opt\n#  grab thor\nRUN git clone --recurse-submodules https://github.com/valhalla/thor.git\nWORKDIR /opt/thor\nRUN ./autogen.sh ; ./configure CPPFLAGS=-DBOOST_SPIRIT_THREADSAFE ; make ; make install\nWORKDIR /opt\n#  grab tyr\nRUN git clone --recurse-submodules https://github.com/valhalla/tyr.git\nWORKDIR /opt/tyr\nRUN ./autogen.sh ; ./configure CPPFLAGS=-DBOOST_SPIRIT_THREADSAFE ; make ; make install\nWORKDIR /opt\n#  grab tools\nRUN git clone --recurse-submodules https://github.com/valhalla/tools.git\nWORKDIR /opt/tools\nRUN ./autogen.sh ; ./configure CPPFLAGS=-DBOOST_SPIRIT_THREADSAFE ; make ; make install\nWORKDIR /opt\nADD scripts /opt/scripts\n#  Run the server\nCMD chmod 777 /opt/scripts/*\nWORKDIR /opt/tyr\nEXPOSE 8002/tcp\nEXPOSE 8080/tcp\nCMD LD_LIBRARY_PATH=/usr/lib:/usr/local/lib /opt/tools/tyr_simple_service /data/valhalla/valhalla.json\n#  CMD LD_LIBRARY_PATH=/usr/lib:/usr/local/lib tyr/tyr_simple_service tyr/conf/valhalla.json\n#\n#\n#\n","originalDockerfileUglifiedHash":"d1ecd1120b09889a204885f6be5f14d0","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/17542b1da24f72fe75d85308911f3be4298641e6.dockerfile"}