{"seed":2288807653,"processedDockerfileHash":"9f1586967baff85cc2659aff3f8a4179","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM nvidia/cuda:9.0-cudnn7-devel-ubuntu16.04\nMAINTAINER nejumi <dr_jingles@mac.com>\nARG DEBIAN_FRONTEND=noninteractive\nRUN apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends software-properties-common -y ) \\\n && add-apt-repository ppa:git-core/ppa \\\n && apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends git build-essential cmake -y ) \\\n && git --version\nRUN apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends curl wget bzip2 ca-certificates libglib2.0-0 libxext6 libsm6 libxrender1 git vim mercurial subversion cmake libboost-dev libboost-system-dev libboost-filesystem-dev gcc g++ -y )\n#   Add OpenCL ICD files for LightGBM\nRUN mkdir -p /etc/OpenCL/vendors \\\n && echo \"libnvidia-opencl.so.1\" > /etc/OpenCL/vendors/nvidia.icd\n#  #############################################################################\n#   TINI\n#  #############################################################################\n#   Install tini\nENV TINI_VERSION=\"v0.14.0\"\nRUN which wget &> /dev/null || (apt-get update ;apt-get install --no-install-recommends wget=1.20.3 ) ; wget --no-verbose --output-document /tini https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini\nRUN chmod +x /tini\n#  #############################################################################\n#   anaconda python\n#  #############################################################################\nRUN apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends wget bzip2 ca-certificates -y ) \\\n && rm -rf /var/lib/apt/lists/*\nRUN wget https://repo.continuum.io/archive/Anaconda3-5.2.0-Linux-x86_64.sh \\\n && /bin/bash Anaconda3-5.2.0-Linux-x86_64.sh -b -p /opt/conda \\\n && rm Anaconda3-5.2.0-Linux-x86_64.sh\nENV PATH=\"/opt/conda/bin:$PATH\"\nRUN pip install pip==23.1 --upgrade\nRUN : \\\n && rm /opt/conda/lib/libstdc++* \\\n && rm /opt/conda/lib/libgomp.* \\\n && ln -s /usr/lib/x86_64-linux-gnu/libgomp.so.1 /opt/conda/lib/libgomp.so.1 \\\n && ln -s /usr/lib/x86_64-linux-gnu/libstdc++.so.6 /opt/conda/lib/libstdc++.so.6\n#  #############################################################################\n#   LightGBM-GPU\n#  #############################################################################\nRUN cd /usr/local/src \\\n && mkdir lightgbm \\\n && cd lightgbm \\\n && git clone --recursive https://github.com/Microsoft/LightGBM \\\n && cd LightGBM \\\n && mkdir build \\\n && cd build \\\n && cmake -DUSE_GPU=1 -DOpenCL_LIBRARY=/usr/local/cuda/lib64/libOpenCL.so -DOpenCL_INCLUDE_DIR=/usr/local/cuda/include/ .. \\\n && make OPENCL_HEADERS=/usr/local/cuda-8.0/targets/x86_64-linux/include LIBOPENCL=/usr/local/cuda-8.0/targets/x86_64-linux/lib\nENV PATH=\"/usr/local/src/lightgbm/LightGBM:${PATH}\"\nRUN /bin/bash -c \"cd /usr/local/src/lightgbm/LightGBM/python-package \\\n && python setup.py install --precompile\"\n#  #############################################################################\n#   XGBoost-GPU\n#  #############################################################################\nRUN cd /usr/local/src \\\n && git clone --recursive https://github.com/dmlc/xgboost \\\n && cd xgboost \\\n && mkdir build \\\n && cd build \\\n && cmake .. -DPLUGIN_UPDATER_GPU=ON \\\n && make -j4 \\\n && cd ../python-package \\\n && python3 setup.py install\n#  #############################################################################\n#   keras\n#  #############################################################################\nRUN cd /usr/local/src \\\n && pip install tensorflow-gpu==2.12.0 --no-cache-dir -I -U\nRUN pip install keras==2.12.0\n#  #############################################################################\n#   other libraries\n#  #############################################################################\nRUN cd /usr/local/src \\\n && pip install catboost==1.1.1 kaggle==1.5.13 umap-learn==0.5.3 tqdm==4.65.0 nltk==3.8.1 hdbscan==0.8.29 spacy==3.5.2 category_encoders==2.6.0 gensim==4.3.1 optuna==3.1.1 cupy==12.0.0\nRUN python -m spacy download en\nRUN cd /usr/local/src \\\n && pip install torch==2.0.0 torchvision==0.15.1\nRUN cd /usr/local/src \\\n && pip install git+https://github.com/hyperopt/hyperopt.git\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM nvidia/cuda:9.0-cudnn7-devel-ubuntu16.04\nMAINTAINER nejumi <dr_jingles@mac.com>\nARG DEBIAN_FRONTEND=noninteractive\nRUN apt-get update \\\n && apt-get install software-properties-common -y \\\n && add-apt-repository ppa:git-core/ppa \\\n && apt-get update \\\n && apt-get install git build-essential cmake -y \\\n && git --version\nRUN apt-get update \\\n && apt-get install curl wget bzip2 ca-certificates libglib2.0-0 libxext6 libsm6 libxrender1 git vim mercurial subversion cmake libboost-dev libboost-system-dev libboost-filesystem-dev gcc g++ -y\n#  Add OpenCL ICD files for LightGBM\nRUN mkdir -p /etc/OpenCL/vendors \\\n && echo \"libnvidia-opencl.so.1\" > /etc/OpenCL/vendors/nvidia.icd\n# #############################################################################\n#  TINI\n# #############################################################################\n#  Install tini\nENV TINI_VERSION=\"v0.14.0\"\nADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini /tini\nRUN chmod +x /tini\n# #############################################################################\n#  anaconda python\n# #############################################################################\nRUN apt-get update \\\n && apt-get install wget bzip2 ca-certificates -y \\\n && rm -rf /var/lib/apt/lists/*\nRUN wget https://repo.continuum.io/archive/Anaconda3-5.2.0-Linux-x86_64.sh \\\n && /bin/bash Anaconda3-5.2.0-Linux-x86_64.sh -b -p /opt/conda \\\n && rm Anaconda3-5.2.0-Linux-x86_64.sh\nENV PATH=\"/opt/conda/bin:$PATH\"\nRUN pip install pip --upgrade\nRUN apt-get update \\\n && rm /opt/conda/lib/libstdc++* \\\n && rm /opt/conda/lib/libgomp.* \\\n && ln -s /usr/lib/x86_64-linux-gnu/libgomp.so.1 /opt/conda/lib/libgomp.so.1 \\\n && ln -s /usr/lib/x86_64-linux-gnu/libstdc++.so.6 /opt/conda/lib/libstdc++.so.6\n# #############################################################################\n#  LightGBM-GPU\n# #############################################################################\nRUN cd /usr/local/src \\\n && mkdir lightgbm \\\n && cd lightgbm \\\n && git clone --recursive https://github.com/Microsoft/LightGBM \\\n && cd LightGBM \\\n && mkdir build \\\n && cd build \\\n && cmake -DUSE_GPU=1 -DOpenCL_LIBRARY=/usr/local/cuda/lib64/libOpenCL.so -DOpenCL_INCLUDE_DIR=/usr/local/cuda/include/ .. \\\n && make OPENCL_HEADERS=/usr/local/cuda-8.0/targets/x86_64-linux/include LIBOPENCL=/usr/local/cuda-8.0/targets/x86_64-linux/lib\nENV PATH=\"/usr/local/src/lightgbm/LightGBM:${PATH}\"\nRUN /bin/bash -c \"cd /usr/local/src/lightgbm/LightGBM/python-package \\\n && python setup.py install --precompile\"\n# #############################################################################\n#  XGBoost-GPU\n# #############################################################################\nRUN cd /usr/local/src \\\n && git clone --recursive https://github.com/dmlc/xgboost \\\n && cd xgboost \\\n && mkdir build \\\n && cd build \\\n && cmake .. -DPLUGIN_UPDATER_GPU=ON \\\n && make -j4 \\\n && cd ../python-package \\\n && python3 setup.py install\n# #############################################################################\n#  keras\n# #############################################################################\nRUN cd /usr/local/src \\\n && pip install tensorflow-gpu --no-cache-dir -I -U\nRUN pip install keras\n# #############################################################################\n#  other libraries\n# #############################################################################\nRUN cd /usr/local/src \\\n && pip install catboost kaggle umap-learn tqdm nltk hdbscan spacy category_encoders gensim optuna cupy\nRUN python -m spacy download en\nRUN cd /usr/local/src \\\n && pip install torch torchvision\nRUN cd /usr/local/src \\\n && pip install git+https://github.com/hyperopt/hyperopt.git\n","injectedSmells":[],"originalDockerfileHash":"207da391219b4d88b1c7dc6e886c6ee5","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM nvidia/cuda:9.0-cudnn7-devel-ubuntu16.04\nMAINTAINER nejumi <dr_jingles@mac.com>\nARG DEBIAN_FRONTEND=noninteractive\nRUN apt-get update \\\n && apt-get install software-properties-common -y \\\n && add-apt-repository ppa:git-core/ppa \\\n && apt-get update \\\n && apt-get install git build-essential cmake -y \\\n && git --version\nRUN apt-get update \\\n && apt-get install curl wget bzip2 ca-certificates libglib2.0-0 libxext6 libsm6 libxrender1 git vim mercurial subversion cmake libboost-dev libboost-system-dev libboost-filesystem-dev gcc g++ -y\n#   Add OpenCL ICD files for LightGBM\nRUN mkdir -p /etc/OpenCL/vendors \\\n && echo \"libnvidia-opencl.so.1\" > /etc/OpenCL/vendors/nvidia.icd\n#  #############################################################################\n#   TINI\n#  #############################################################################\n#   Install tini\nENV TINI_VERSION=\"v0.14.0\"\nADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini /tini\nRUN chmod +x /tini\n#  #############################################################################\n#   anaconda python\n#  #############################################################################\nRUN apt-get update \\\n && apt-get install wget bzip2 ca-certificates -y \\\n && rm -rf /var/lib/apt/lists/*\nRUN wget https://repo.continuum.io/archive/Anaconda3-5.2.0-Linux-x86_64.sh \\\n && /bin/bash Anaconda3-5.2.0-Linux-x86_64.sh -b -p /opt/conda \\\n && rm Anaconda3-5.2.0-Linux-x86_64.sh\nENV PATH=\"/opt/conda/bin:$PATH\"\nRUN pip install pip --upgrade\nRUN apt-get update \\\n && rm /opt/conda/lib/libstdc++* \\\n && rm /opt/conda/lib/libgomp.* \\\n && ln -s /usr/lib/x86_64-linux-gnu/libgomp.so.1 /opt/conda/lib/libgomp.so.1 \\\n && ln -s /usr/lib/x86_64-linux-gnu/libstdc++.so.6 /opt/conda/lib/libstdc++.so.6\n#  #############################################################################\n#   LightGBM-GPU\n#  #############################################################################\nRUN cd /usr/local/src \\\n && mkdir lightgbm \\\n && cd lightgbm \\\n && git clone --recursive https://github.com/Microsoft/LightGBM \\\n && cd LightGBM \\\n && mkdir build \\\n && cd build \\\n && cmake -DUSE_GPU=1 -DOpenCL_LIBRARY=/usr/local/cuda/lib64/libOpenCL.so -DOpenCL_INCLUDE_DIR=/usr/local/cuda/include/ .. \\\n && make OPENCL_HEADERS=/usr/local/cuda-8.0/targets/x86_64-linux/include LIBOPENCL=/usr/local/cuda-8.0/targets/x86_64-linux/lib\nENV PATH=\"/usr/local/src/lightgbm/LightGBM:${PATH}\"\nRUN /bin/bash -c \"cd /usr/local/src/lightgbm/LightGBM/python-package \\\n && python setup.py install --precompile\"\n#  #############################################################################\n#   XGBoost-GPU\n#  #############################################################################\nRUN cd /usr/local/src \\\n && git clone --recursive https://github.com/dmlc/xgboost \\\n && cd xgboost \\\n && mkdir build \\\n && cd build \\\n && cmake .. -DPLUGIN_UPDATER_GPU=ON \\\n && make -j4 \\\n && cd ../python-package \\\n && python3 setup.py install\n#  #############################################################################\n#   keras\n#  #############################################################################\nRUN cd /usr/local/src \\\n && pip install tensorflow-gpu --no-cache-dir -I -U\nRUN pip install keras\n#  #############################################################################\n#   other libraries\n#  #############################################################################\nRUN cd /usr/local/src \\\n && pip install catboost kaggle umap-learn tqdm nltk hdbscan spacy category_encoders gensim optuna cupy\nRUN python -m spacy download en\nRUN cd /usr/local/src \\\n && pip install torch torchvision\nRUN cd /usr/local/src \\\n && pip install git+https://github.com/hyperopt/hyperopt.git\n","originalDockerfileUglifiedHash":"b0e909dc74349b634fd9c1a8d14d5ea0","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/5e45dd33a5d1b1511c4fba48bd766d02cde8a966.dockerfile"}