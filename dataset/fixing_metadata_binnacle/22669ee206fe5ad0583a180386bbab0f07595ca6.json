{"seed":3155465515,"processedDockerfileHash":"05c6a372d85bba6c5b8931a0748c9856","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-pip","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Dockerfile that builds a minimal container for IPython + narrative\n#\n#   Requires a narrative base images that contains runtime dependencies.\n#\n#   Steve Chan sychan@lbl.gov\n#\n#   Copyright 2013 The Regents of the University of California,\n#                  Lawrence Berkeley National Laboratory\n#                  United States Department of Energy\n#            \t The DOE Systems Biology Knowledgebase (KBase)\n#   Made available under the KBase Open Source License\n#\nFROM kbase/narrbase:5.2\n#   These ARGs values are passed in via the docker build command\nARG BUILD_DATE\nARG VCS_REF\nARG BRANCH=develop\nARG NARRATIVE_VERSION\nARG SKIP_MINIFY\nEXPOSE 8888/tcp\n#   Remove Debian's older Tornado package - updated/removed in the narrbase package\n#  RUN DEBIAN_FRONTEND=noninteractive apt-get remove -y python-tornado\nRUN echo Skip=$SKIP_MINIFY\n#   install pyopenssl cryptography idna and requests is the same as installing\n#   requests[security]\nRUN conda install -c conda-forge ndg-httpsclient pyasn1 pyopenssl cryptography idna requests beautifulsoup4 html5lib\n#   TEMPORARY!\n#   Update bs4 and pandas to resolve inability to run them\n#  RUN DEBIAN_FRONTEND=noninteractive apt-get install -y python-dev libffi-dev libssl-dev \\\n#      && pip install pyopenssl ndg-httpsclient pyasn1 \\\n#      && pip install requests --upgrade \\\n#      && pip install 'requests[security]' --upgrade \\\n#      && pip install 'beautifulsoup4' --upgrade \\\n#      && pip install 'html5lib' --upgrade\n#   Copy in the narrative repo\nCOPY ./ /kb/dev_container/narrative\nCOPY ./kbase-logdb.conf /tmp/kbase-logdb.conf\nCOPY ./deployment/ /kb/deployment/\nWORKDIR /kb/dev_container/narrative\n#   Generate a version file that we can scrape later\nRUN mkdir -p /kb/deployment/ui-common/ \\\n && ./src/scripts/kb-update-config -f src/config.json.templ -o /kb/deployment/ui-common/narrative_version\n#   Install Javascript dependencies\nRUN npm install \\\n && ./node_modules/.bin/bower install --allow-root --config.interactive=false\n#   Compile Javascript down into an itty-bitty ball unless SKIP_MINIFY is non-empty\n#   (commented out for now)\n#   RUN cd kbase-extension/\n#   src/notebook/ipython_profiles/profile_narrative/kbase_templates && npm install && grunt build\nRUN [ -n \"$SKIP_MINIFY\" ] || grunt minify\n#   Add Tini. Tini operates as a process subreaper for jupyter. This prevents\n#   kernel crashes. See Jupyter Notebook known issues here:˜\n#   http://jupyter-notebook.readthedocs.org/en/latest/public_server.html#known-issues\n#   ENV TINI_VERSION v0.8.4\n#   ADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini /usr/bin/tini\n#   RUN chmod +x /usr/bin/tini\nRUN /bin/bash scripts/install_narrative_docker.sh\n#   RUN ./fixupURL.sh && chmod 666 /kb/dev_container/narrative/src/config.json\nRUN pip install jupyter-console==6.6.3\nWORKDIR /tmp\nRUN chown -R nobody:www-data /kb/dev_container/narrative/src/notebook/ipython_profiles /tmp/narrative /kb/dev_container/narrative/kbase-extension ; find / -xdev\n#   Set a default value for the environment variable VERSION_CHECK that gets expanded in the config.json.templ\n#   into the location to check for a new narrative version. Normally we would put this in the template itself\n#   but since the raw template is consumed at build time as a JSON file, a template with a default string would\n#   cause JSON parsing to fail - GRRRRR!!!\nENV VERSION_CHECK=\"/narrative_version\"\n#   Set the default environment to be CI, can be overriden by passing new CONFIG_ENV setting at container start\nENV CONFIG_ENV=\"ci\"\nUSER root\nLABEL org.label-schema.build-date=\"$BUILD_DATE\" \\\n      org.label-schema.vcs-url=\"https://github.com/kbase/narrative.git\" \\\n      org.label-schema.vcs-ref=\"$VCS_REF\" \\\n      org.label-schema.schema-version=\"1.0.0-rc1\" \\\n      us.kbase.vcs-branch=\"$BRANCH\" \\\n      us.kbase.narrative-version=\"$NARRATIVE_VERSION\" \\\n      maintainer=\"William Riehl wjriehl@lbl.gov\"\n#   ENTRYPOINT [\"/usr/bin/tini\", \"--\"]\n#   The entrypoint can be set to \"headless-narrative\" to run headlessly\nENTRYPOINT [\"/kb/deployment/bin/dockerize\"]\nCMD [\"--template\", \"/kb/dev_container/narrative/src/config.json.templ:/kb/dev_container/narrative/src/config.json\", \"--template\", \"/kb/dev_container/narrative/src/config.json.templ:/kb/dev_container/narrative/kbase-extension/static/kbase/config/config.json\", \"-euid\", \"65534\", \"-egid\", \"65534\", \"kbase-narrative\"]\n#  ONBUILD USER root\n#  ONBUILD ADD url.cfg /kb/dev_container/narrative/url.cfg\n#  ONBUILD RUN cd /kb/dev_container/narrative && ./fixupURL.sh\n#  ONBUILD USER nobody\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Dockerfile that builds a minimal container for IPython + narrative\n#\n#  Requires a narrative base images that contains runtime dependencies.\n#\n#  Steve Chan sychan@lbl.gov\n#\n#  Copyright 2013 The Regents of the University of California,\n#                 Lawrence Berkeley National Laboratory\n#                 United States Department of Energy\n#           \t The DOE Systems Biology Knowledgebase (KBase)\n#  Made available under the KBase Open Source License\n#\nFROM kbase/narrbase:5.2\n#  These ARGs values are passed in via the docker build command\nARG BUILD_DATE\nARG VCS_REF\nARG BRANCH=develop\nARG NARRATIVE_VERSION\nARG SKIP_MINIFY\nEXPOSE 8888/tcp\n#  Remove Debian's older Tornado package - updated/removed in the narrbase package\n# RUN DEBIAN_FRONTEND=noninteractive apt-get remove -y python-tornado\nRUN echo Skip=$SKIP_MINIFY\n#  install pyopenssl cryptography idna and requests is the same as installing\n#  requests[security]\nRUN conda install -c conda-forge ndg-httpsclient pyasn1 pyopenssl cryptography idna requests beautifulsoup4 html5lib\n#  TEMPORARY!\n#  Update bs4 and pandas to resolve inability to run them\n# RUN DEBIAN_FRONTEND=noninteractive apt-get install -y python-dev libffi-dev libssl-dev \\\n#     && pip install pyopenssl ndg-httpsclient pyasn1 \\\n#     && pip install requests --upgrade \\\n#     && pip install 'requests[security]' --upgrade \\\n#     && pip install 'beautifulsoup4' --upgrade \\\n#     && pip install 'html5lib' --upgrade\n#  Copy in the narrative repo\nADD ./ /kb/dev_container/narrative\nADD ./kbase-logdb.conf /tmp/kbase-logdb.conf\nADD ./deployment/ /kb/deployment/\nWORKDIR /kb/dev_container/narrative\n#  Generate a version file that we can scrape later\nRUN mkdir -p /kb/deployment/ui-common/ \\\n && ./src/scripts/kb-update-config -f src/config.json.templ -o /kb/deployment/ui-common/narrative_version\n#  Install Javascript dependencies\nRUN npm install \\\n && ./node_modules/.bin/bower install --allow-root --config.interactive=false\n#  Compile Javascript down into an itty-bitty ball unless SKIP_MINIFY is non-empty\n#  (commented out for now)\n#  RUN cd kbase-extension/\n#  src/notebook/ipython_profiles/profile_narrative/kbase_templates && npm install && grunt build\nRUN [ -n \"$SKIP_MINIFY\" ] || grunt minify\n#  Add Tini. Tini operates as a process subreaper for jupyter. This prevents\n#  kernel crashes. See Jupyter Notebook known issues here:˜\n#  http://jupyter-notebook.readthedocs.org/en/latest/public_server.html#known-issues\n#  ENV TINI_VERSION v0.8.4\n#  ADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini /usr/bin/tini\n#  RUN chmod +x /usr/bin/tini\nRUN /bin/bash scripts/install_narrative_docker.sh\n#  RUN ./fixupURL.sh && chmod 666 /kb/dev_container/narrative/src/config.json\nRUN pip install jupyter-console\nWORKDIR /tmp\nRUN chown -R nobody:www-data /kb/dev_container/narrative/src/notebook/ipython_profiles /tmp/narrative /kb/dev_container/narrative/kbase-extension ; find / -xdev ( -perm -4000 ) -type f -print -exec rm {} ;\n#  Set a default value for the environment variable VERSION_CHECK that gets expanded in the config.json.templ\n#  into the location to check for a new narrative version. Normally we would put this in the template itself\n#  but since the raw template is consumed at build time as a JSON file, a template with a default string would\n#  cause JSON parsing to fail - GRRRRR!!!\nENV VERSION_CHECK=\"/narrative_version\"\n#  Set the default environment to be CI, can be overriden by passing new CONFIG_ENV setting at container start\nENV CONFIG_ENV=\"ci\"\nUSER root\nLABEL org.label-schema.build-date=\"$BUILD_DATE\" \\\n      org.label-schema.vcs-url=\"https://github.com/kbase/narrative.git\" \\\n      org.label-schema.vcs-ref=\"$VCS_REF\" \\\n      org.label-schema.schema-version=\"1.0.0-rc1\" \\\n      us.kbase.vcs-branch=\"$BRANCH\" \\\n      us.kbase.narrative-version=\"$NARRATIVE_VERSION\" \\\n      maintainer=\"William Riehl wjriehl@lbl.gov\"\n#  ENTRYPOINT [\"/usr/bin/tini\", \"--\"]\n#  The entrypoint can be set to \"headless-narrative\" to run headlessly\nENTRYPOINT [\"/kb/deployment/bin/dockerize\"]\nCMD [\"--template\", \"/kb/dev_container/narrative/src/config.json.templ:/kb/dev_container/narrative/src/config.json\", \"--template\", \"/kb/dev_container/narrative/src/config.json.templ:/kb/dev_container/narrative/kbase-extension/static/kbase/config/config.json\", \"-euid\", \"65534\", \"-egid\", \"65534\", \"kbase-narrative\"]\n# ONBUILD USER root\n# ONBUILD ADD url.cfg /kb/dev_container/narrative/url.cfg\n# ONBUILD RUN cd /kb/dev_container/narrative && ./fixupURL.sh\n# ONBUILD USER nobody\n","injectedSmells":[],"originalDockerfileHash":"28ec0c5362f5487e99b986bbbc14952b","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Dockerfile that builds a minimal container for IPython + narrative\n#\n#   Requires a narrative base images that contains runtime dependencies.\n#\n#   Steve Chan sychan@lbl.gov\n#\n#   Copyright 2013 The Regents of the University of California,\n#                  Lawrence Berkeley National Laboratory\n#                  United States Department of Energy\n#            \t The DOE Systems Biology Knowledgebase (KBase)\n#   Made available under the KBase Open Source License\n#\nFROM kbase/narrbase:5.2\n#   These ARGs values are passed in via the docker build command\nARG BUILD_DATE\nARG VCS_REF\nARG BRANCH=develop\nARG NARRATIVE_VERSION\nARG SKIP_MINIFY\nEXPOSE 8888/tcp\n#   Remove Debian's older Tornado package - updated/removed in the narrbase package\n#  RUN DEBIAN_FRONTEND=noninteractive apt-get remove -y python-tornado\nRUN echo Skip=$SKIP_MINIFY\n#   install pyopenssl cryptography idna and requests is the same as installing\n#   requests[security]\nRUN conda install -c conda-forge ndg-httpsclient pyasn1 pyopenssl cryptography idna requests beautifulsoup4 html5lib\n#   TEMPORARY!\n#   Update bs4 and pandas to resolve inability to run them\n#  RUN DEBIAN_FRONTEND=noninteractive apt-get install -y python-dev libffi-dev libssl-dev \\\n#      && pip install pyopenssl ndg-httpsclient pyasn1 \\\n#      && pip install requests --upgrade \\\n#      && pip install 'requests[security]' --upgrade \\\n#      && pip install 'beautifulsoup4' --upgrade \\\n#      && pip install 'html5lib' --upgrade\n#   Copy in the narrative repo\nADD ./ /kb/dev_container/narrative\nADD ./kbase-logdb.conf /tmp/kbase-logdb.conf\nADD ./deployment/ /kb/deployment/\nWORKDIR /kb/dev_container/narrative\n#   Generate a version file that we can scrape later\nRUN mkdir -p /kb/deployment/ui-common/ \\\n && ./src/scripts/kb-update-config -f src/config.json.templ -o /kb/deployment/ui-common/narrative_version\n#   Install Javascript dependencies\nRUN npm install \\\n && ./node_modules/.bin/bower install --allow-root --config.interactive=false\n#   Compile Javascript down into an itty-bitty ball unless SKIP_MINIFY is non-empty\n#   (commented out for now)\n#   RUN cd kbase-extension/\n#   src/notebook/ipython_profiles/profile_narrative/kbase_templates && npm install && grunt build\nRUN [ -n \"$SKIP_MINIFY\" ] || grunt minify\n#   Add Tini. Tini operates as a process subreaper for jupyter. This prevents\n#   kernel crashes. See Jupyter Notebook known issues here:˜\n#   http://jupyter-notebook.readthedocs.org/en/latest/public_server.html#known-issues\n#   ENV TINI_VERSION v0.8.4\n#   ADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini /usr/bin/tini\n#   RUN chmod +x /usr/bin/tini\nRUN /bin/bash scripts/install_narrative_docker.sh\n#   RUN ./fixupURL.sh && chmod 666 /kb/dev_container/narrative/src/config.json\nRUN pip install jupyter-console\nWORKDIR /tmp\nRUN chown -R nobody:www-data /kb/dev_container/narrative/src/notebook/ipython_profiles /tmp/narrative /kb/dev_container/narrative/kbase-extension ; find / -xdev\n#   Set a default value for the environment variable VERSION_CHECK that gets expanded in the config.json.templ\n#   into the location to check for a new narrative version. Normally we would put this in the template itself\n#   but since the raw template is consumed at build time as a JSON file, a template with a default string would\n#   cause JSON parsing to fail - GRRRRR!!!\nENV VERSION_CHECK=\"/narrative_version\"\n#   Set the default environment to be CI, can be overriden by passing new CONFIG_ENV setting at container start\nENV CONFIG_ENV=\"ci\"\nUSER root\nLABEL org.label-schema.build-date=\"$BUILD_DATE\" \\\n      org.label-schema.vcs-url=\"https://github.com/kbase/narrative.git\" \\\n      org.label-schema.vcs-ref=\"$VCS_REF\" \\\n      org.label-schema.schema-version=\"1.0.0-rc1\" \\\n      us.kbase.vcs-branch=\"$BRANCH\" \\\n      us.kbase.narrative-version=\"$NARRATIVE_VERSION\" \\\n      maintainer=\"William Riehl wjriehl@lbl.gov\"\n#   ENTRYPOINT [\"/usr/bin/tini\", \"--\"]\n#   The entrypoint can be set to \"headless-narrative\" to run headlessly\nENTRYPOINT [\"/kb/deployment/bin/dockerize\"]\nCMD [\"--template\", \"/kb/dev_container/narrative/src/config.json.templ:/kb/dev_container/narrative/src/config.json\", \"--template\", \"/kb/dev_container/narrative/src/config.json.templ:/kb/dev_container/narrative/kbase-extension/static/kbase/config/config.json\", \"-euid\", \"65534\", \"-egid\", \"65534\", \"kbase-narrative\"]\n#  ONBUILD USER root\n#  ONBUILD ADD url.cfg /kb/dev_container/narrative/url.cfg\n#  ONBUILD RUN cd /kb/dev_container/narrative && ./fixupURL.sh\n#  ONBUILD USER nobody\n","originalDockerfileUglifiedHash":"bb082a4d49b80d766137b9d37954385f","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/22669ee206fe5ad0583a180386bbab0f07595ca6.dockerfile"}