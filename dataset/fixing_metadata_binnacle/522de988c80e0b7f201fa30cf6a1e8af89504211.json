{"seed":1671788888,"processedDockerfileHash":"5457c67578429d93eac3476099b7d1be","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM ubuntu:16.04\nMAINTAINER Andrew Beveridge <andrew@beveridge.uk>\nENV REFRESHED_AT=\"2017-05-20\"\nENV HTTPD_PREFIX=\"/etc/apache2\"\n#   Suppress warnings from apt about lack of Dialog\nENV DEBIAN_FRONTEND=\"noninteractive\"\nLABEL maintainer=\"Andrew Beveridge <andrew@beveridge.uk>\" \\\n      org.label-schema.docker.dockerfile=\"/Dockerfile\" \\\n      org.label-schema.name=\"Ubuntu 16.04 with Apache2.4 and PHP 7, optimised using PHP-FPM\" \\\n      org.label-schema.url=\"https://andrewbeveridge.co.uk\" \\\n      org.label-schema.vcs-url=\"https://github.com/beveradb/docker-apache-php7-fpm.git\"\n#   Initial apt update\nRUN apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends apt-utils=1.2.35 -y )\n#   Install common / shared packages\nRUN (apt-get update ;apt-get install --no-install-recommends curl=7.47.0-1ubuntu2.19 git=1:2.7.4-0ubuntu1.10 zip=3.0-11 unzip=6.0-20ubuntu1.1 vim=2:7.4.1689-3ubuntu1.5 locales=2.23-0ubuntu11.3 software-properties-common=0.96.20.10 python-software-properties=0.96.20.10 -y )\n#   Set up locales\nRUN locale-gen en_US.UTF-8\nENV LANG=\"C.UTF-8\"\nENV LANGUAGE=\"C.UTF-8\"\nENV LC_ALL=\"C.UTF-8\"\nRUN /usr/sbin/update-locale\n#   Add repository for latest built PHP packages, e.g. 7.1 which isn't otherwise available in Xenial repositories\nRUN add-apt-repository ppa:ondrej/php\nRUN :\n#   Install PHP 7.1 with FPM and other various commonly used modules, including MySQL client\nRUN (apt-get update ;apt-get install --no-install-recommends php7.1-bcmath php7.1-bz2 php7.1-cli php7.1-common php7.1-curl php7.1-dev php7.1-fpm php7.1-gd php7.1-gmp php7.1-imap php7.1-intl php7.1-json php7.1-ldap php7.1-mbstring php7.1-mcrypt php7.1-mysql php7.1-odbc php7.1-opcache php7.1-pgsql php7.1-phpdbg php7.1-pspell php7.1-readline php7.1-recode php7.1-soap php7.1-sqlite3 php7.1-tidy php7.1-xml php7.1-xmlrpc php7.1-xsl php7.1-zip -y --allow-downgrades --allow-remove-essential --allow-change-held-packages )\n#   Install Apache2 with FastCGI module and MySQL client for convenience\nRUN (apt-get update ;apt-get install --no-install-recommends apache2=2.4.18-2ubuntu3.17 libapache2-mod-fastcgi=2.4.7~0910052141-1.2 apache2-utils=2.4.18-2ubuntu3.17 libmysqlclient-dev=5.7.33-0ubuntu0.16.04.1 mariadb-client=10.0.38-0ubuntu0.16.04.1 -y --allow-downgrades --allow-remove-essential --allow-change-held-packages )\n#   Modify PHP-FPM configuration files to set common properties and listen on socket\nRUN sed -i \"s/;date.timezone =.*/date.timezone = UTC/\" /etc/php/7.1/cli/php.ini\nRUN sed -i \"s/;date.timezone =.*/date.timezone = UTC/\" /etc/php/7.1/fpm/php.ini\nRUN sed -i \"s/display_errors = Off/display_errors = On/\" /etc/php/7.1/fpm/php.ini\nRUN sed -i \"s/upload_max_filesize = .*/upload_max_filesize = 10M/\" /etc/php/7.1/fpm/php.ini\nRUN sed -i \"s/post_max_size = .*/post_max_size = 12M/\" /etc/php/7.1/fpm/php.ini\nRUN sed -i \"s/;cgi.fix_pathinfo=1/cgi.fix_pathinfo=0/\" /etc/php/7.1/fpm/php.ini\nRUN sed -i -e \"s/pid =.*/pid = \\/var\\/run\\/php7.1-fpm.pid/\" /etc/php/7.1/fpm/php-fpm.conf\nRUN sed -i -e \"s/error_log =.*/error_log = \\/proc\\/self\\/fd\\/2/\" /etc/php/7.1/fpm/php-fpm.conf\n#   RUN sed -i -e \"s/;daemonize\\s*=\\s*yes/daemonize = no/g\" /etc/php/7.1/fpm/php-fpm.conf\nRUN sed -i \"s/listen = .*/listen = \\/var\\/run\\/php\\/php7.1-fpm.sock/\" /etc/php/7.1/fpm/pool.d/www.conf\nRUN sed -i \"s/;catch_workers_output = .*/catch_workers_output = yes/\" /etc/php/7.1/fpm/pool.d/www.conf\n#   Install Composer globally\nRUN curl -sS https://getcomposer.org/installer | php \\\n && mv composer.phar /usr/local/bin/composer \\\n && chmod a+x /usr/local/bin/composer\n#  Change ports\nCOPY ./ports.conf /etc/apache2/ports.conf\nRUN rm /var/www/html/index.html\nCOPY ./000-default.conf /etc/apache2/sites-enabled/000-default.conf\n#   Remove default Apache VirtualHost, configs, and mods not needed\nWORKDIR $HTTPD_PREFIX\nRUN rm -f sites-enabled/000-default.conf conf-enabled/serve-cgi-bin.conf mods-enabled/autoindex.conf mods-enabled/autoindex.load\n#   Enable additional configs and mods\nRUN ln -s $HTTPD_PREFIX/mods-available/expires.load $HTTPD_PREFIX/mods-enabled/expires.load \\\n && ln -s $HTTPD_PREFIX/mods-available/headers.load $HTTPD_PREFIX/mods-enabled/headers.load \\\n && ln -s $HTTPD_PREFIX/mods-available/rewrite.load $HTTPD_PREFIX/mods-enabled/rewrite.load\n#   Configure Apache to use our PHP-FPM socket for all PHP files\n#  COPY php7.1-fpm.conf /etc/apache2/conf-available/php7.1-fpm.conf\nRUN a2enconf php7.1-fpm\n#   Copy file to execute\nCOPY /source/www /var/www\nRUN chmod 777 /var/www/html/upload\n#   Enable Apache modules and configuration\nRUN a2dismod mpm_event\nRUN a2enmod alias actions fastcgi proxy_fcgi setenvif mpm_worker\n#   Clean up apt cache and temp files to save disk space\nRUN apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#   Symlink apache access and error logs to stdout/stderr so Docker logs shows them\nRUN ln -sf /dev/stdout /var/log/apache2/access.log\nRUN ln -sf /dev/stdout /var/log/apache2/other_vhosts_access.log\nRUN ln -sf /dev/stderr /var/log/apache2/error.log\n#  Install phantomjs\nCOPY phantomjs /usr/local/share/phantomjs\nRUN chmod 777 /usr/local/share/phantomjs/bin/phantomjs\nRUN ln -sf /usr/local/share/phantomjs/bin/phantomjs /usr/local/bin\n#  Run crontab\nRUN (apt-get update ;apt-get install --no-install-recommends cron=3.0pl1-128ubuntu2 )\nCOPY crontab /etc/cron.d/simple-cron\nRUN chmod +x /var/www/crondel.sh\nRUN chmod 0644 /etc/cron.d/simple-cron\nRUN touch /var/log/cron.log\n#  Run shell\nRUN chmod 777 /var/www/cron350.sh\nRUN chmod 777 /var/www/cron.php\nRUN chmod 777 /var/www/something.js\nCOPY shell.sh /var/www/shell.sh\nCOPY goodjobnowgetyoursfl4g /goodjobnowgetyoursfl4g\nRUN chmod +r /goodjobnowgetyoursfl4g\nRUN chmod 777 /var/www/shell.sh\n#   Start PHP-FPM worker service and run Apache in foreground so any error output is sent to stdout for Docker logs\nCMD cron \\\n && tail -f /var/log/cron.log\nCMD /var/www/shell.sh \\\n && service php7.1-fpm start \\\n && service cron start \\\n && /usr/sbin/apache2ctl -D FOREGROUND\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:16.04\nMAINTAINER Andrew Beveridge <andrew@beveridge.uk>\nENV REFRESHED_AT=\"2017-05-20\"\nENV HTTPD_PREFIX=\"/etc/apache2\"\n#  Suppress warnings from apt about lack of Dialog\nENV DEBIAN_FRONTEND=\"noninteractive\"\nLABEL maintainer=\"Andrew Beveridge <andrew@beveridge.uk>\" \\\n      org.label-schema.docker.dockerfile=\"/Dockerfile\" \\\n      org.label-schema.name=\"Ubuntu 16.04 with Apache2.4 and PHP 7, optimised using PHP-FPM\" \\\n      org.label-schema.url=\"https://andrewbeveridge.co.uk\" \\\n      org.label-schema.vcs-url=\"https://github.com/beveradb/docker-apache-php7-fpm.git\"\n#  Initial apt update\nRUN apt-get update \\\n && apt-get install apt-utils -y\n#  Install common / shared packages\nRUN apt-get install curl git zip unzip vim locales software-properties-common python-software-properties -y\n#  Set up locales\nRUN locale-gen en_US.UTF-8\nENV LANG=\"C.UTF-8\"\nENV LANGUAGE=\"C.UTF-8\"\nENV LC_ALL=\"C.UTF-8\"\nRUN /usr/sbin/update-locale\n#  Add repository for latest built PHP packages, e.g. 7.1 which isn't otherwise available in Xenial repositories\nRUN add-apt-repository ppa:ondrej/php\nRUN apt-get update\n#  Install PHP 7.1 with FPM and other various commonly used modules, including MySQL client\nRUN apt-get install php7.1-bcmath php7.1-bz2 php7.1-cli php7.1-common php7.1-curl php7.1-dev php7.1-fpm php7.1-gd php7.1-gmp php7.1-imap php7.1-intl php7.1-json php7.1-ldap php7.1-mbstring php7.1-mcrypt php7.1-mysql php7.1-odbc php7.1-opcache php7.1-pgsql php7.1-phpdbg php7.1-pspell php7.1-readline php7.1-recode php7.1-soap php7.1-sqlite3 php7.1-tidy php7.1-xml php7.1-xmlrpc php7.1-xsl php7.1-zip -y --allow-downgrades --allow-remove-essential --allow-change-held-packages\n#  Install Apache2 with FastCGI module and MySQL client for convenience\nRUN apt-get install apache2 libapache2-mod-fastcgi apache2-utils libmysqlclient-dev mariadb-client -y --allow-downgrades --allow-remove-essential --allow-change-held-packages\n#  Modify PHP-FPM configuration files to set common properties and listen on socket\nRUN sed -i \"s/;date.timezone =.*/date.timezone = UTC/\" /etc/php/7.1/cli/php.ini\nRUN sed -i \"s/;date.timezone =.*/date.timezone = UTC/\" /etc/php/7.1/fpm/php.ini\nRUN sed -i \"s/display_errors = Off/display_errors = On/\" /etc/php/7.1/fpm/php.ini\nRUN sed -i \"s/upload_max_filesize = .*/upload_max_filesize = 10M/\" /etc/php/7.1/fpm/php.ini\nRUN sed -i \"s/post_max_size = .*/post_max_size = 12M/\" /etc/php/7.1/fpm/php.ini\nRUN sed -i \"s/;cgi.fix_pathinfo=1/cgi.fix_pathinfo=0/\" /etc/php/7.1/fpm/php.ini\nRUN sed -i -e \"s/pid =.*/pid = \\/var\\/run\\/php7.1-fpm.pid/\" /etc/php/7.1/fpm/php-fpm.conf\nRUN sed -i -e \"s/error_log =.*/error_log = \\/proc\\/self\\/fd\\/2/\" /etc/php/7.1/fpm/php-fpm.conf\n#  RUN sed -i -e \"s/;daemonize\\s*=\\s*yes/daemonize = no/g\" /etc/php/7.1/fpm/php-fpm.conf\nRUN sed -i \"s/listen = .*/listen = \\/var\\/run\\/php\\/php7.1-fpm.sock/\" /etc/php/7.1/fpm/pool.d/www.conf\nRUN sed -i \"s/;catch_workers_output = .*/catch_workers_output = yes/\" /etc/php/7.1/fpm/pool.d/www.conf\n#  Install Composer globally\nRUN curl -sS https://getcomposer.org/installer | php \\\n && mv composer.phar /usr/local/bin/composer \\\n && chmod a+x /usr/local/bin/composer\n# Change ports\nCOPY ./ports.conf /etc/apache2/ports.conf\nRUN rm /var/www/html/index.html\nCOPY ./000-default.conf /etc/apache2/sites-enabled/000-default.conf\n#  Remove default Apache VirtualHost, configs, and mods not needed\nWORKDIR $HTTPD_PREFIX\nRUN rm -f sites-enabled/000-default.conf conf-enabled/serve-cgi-bin.conf mods-enabled/autoindex.conf mods-enabled/autoindex.load\n#  Enable additional configs and mods\nRUN ln -s $HTTPD_PREFIX/mods-available/expires.load $HTTPD_PREFIX/mods-enabled/expires.load \\\n && ln -s $HTTPD_PREFIX/mods-available/headers.load $HTTPD_PREFIX/mods-enabled/headers.load \\\n && ln -s $HTTPD_PREFIX/mods-available/rewrite.load $HTTPD_PREFIX/mods-enabled/rewrite.load\n#  Configure Apache to use our PHP-FPM socket for all PHP files\n# COPY php7.1-fpm.conf /etc/apache2/conf-available/php7.1-fpm.conf\nRUN a2enconf php7.1-fpm\n#  Copy file to execute\nCOPY /source/www /var/www\nRUN chmod 777 /var/www/html/upload\n#  Enable Apache modules and configuration\nRUN a2dismod mpm_event\nRUN a2enmod alias actions fastcgi proxy_fcgi setenvif mpm_worker\n#  Clean up apt cache and temp files to save disk space\nRUN apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#  Symlink apache access and error logs to stdout/stderr so Docker logs shows them\nRUN ln -sf /dev/stdout /var/log/apache2/access.log\nRUN ln -sf /dev/stdout /var/log/apache2/other_vhosts_access.log\nRUN ln -sf /dev/stderr /var/log/apache2/error.log\n# Install phantomjs\nCOPY phantomjs /usr/local/share/phantomjs\nRUN chmod 777 /usr/local/share/phantomjs/bin/phantomjs\nRUN ln -sf /usr/local/share/phantomjs/bin/phantomjs /usr/local/bin\n# Run crontab\nRUN apt-get install cron\nADD crontab /etc/cron.d/simple-cron\nRUN chmod +x /var/www/crondel.sh\nRUN chmod 0644 /etc/cron.d/simple-cron\nRUN touch /var/log/cron.log\n# Run shell\nRUN chmod 777 /var/www/cron350.sh\nRUN chmod 777 /var/www/cron.php\nRUN chmod 777 /var/www/something.js\nADD shell.sh /var/www/shell.sh\nADD goodjobnowgetyoursfl4g /goodjobnowgetyoursfl4g\nRUN chmod +r /goodjobnowgetyoursfl4g\nRUN chmod 777 /var/www/shell.sh\n#  Start PHP-FPM worker service and run Apache in foreground so any error output is sent to stdout for Docker logs\nCMD cron \\\n && tail -f /var/log/cron.log\nCMD /var/www/shell.sh \\\n && service php7.1-fpm start \\\n && service cron start \\\n && /usr/sbin/apache2ctl -D FOREGROUND\n","injectedSmells":[],"originalDockerfileHash":"bbdbc86aa5d2b24ff1134b5963a57958","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:16.04\nMAINTAINER Andrew Beveridge <andrew@beveridge.uk>\nENV REFRESHED_AT=\"2017-05-20\"\nENV HTTPD_PREFIX=\"/etc/apache2\"\n#   Suppress warnings from apt about lack of Dialog\nENV DEBIAN_FRONTEND=\"noninteractive\"\nLABEL maintainer=\"Andrew Beveridge <andrew@beveridge.uk>\" \\\n      org.label-schema.docker.dockerfile=\"/Dockerfile\" \\\n      org.label-schema.name=\"Ubuntu 16.04 with Apache2.4 and PHP 7, optimised using PHP-FPM\" \\\n      org.label-schema.url=\"https://andrewbeveridge.co.uk\" \\\n      org.label-schema.vcs-url=\"https://github.com/beveradb/docker-apache-php7-fpm.git\"\n#   Initial apt update\nRUN apt-get update \\\n && apt-get install apt-utils -y\n#   Install common / shared packages\nRUN apt-get install curl git zip unzip vim locales software-properties-common python-software-properties -y\n#   Set up locales\nRUN locale-gen en_US.UTF-8\nENV LANG=\"C.UTF-8\"\nENV LANGUAGE=\"C.UTF-8\"\nENV LC_ALL=\"C.UTF-8\"\nRUN /usr/sbin/update-locale\n#   Add repository for latest built PHP packages, e.g. 7.1 which isn't otherwise available in Xenial repositories\nRUN add-apt-repository ppa:ondrej/php\nRUN apt-get update\n#   Install PHP 7.1 with FPM and other various commonly used modules, including MySQL client\nRUN apt-get install php7.1-bcmath php7.1-bz2 php7.1-cli php7.1-common php7.1-curl php7.1-dev php7.1-fpm php7.1-gd php7.1-gmp php7.1-imap php7.1-intl php7.1-json php7.1-ldap php7.1-mbstring php7.1-mcrypt php7.1-mysql php7.1-odbc php7.1-opcache php7.1-pgsql php7.1-phpdbg php7.1-pspell php7.1-readline php7.1-recode php7.1-soap php7.1-sqlite3 php7.1-tidy php7.1-xml php7.1-xmlrpc php7.1-xsl php7.1-zip -y --allow-downgrades --allow-remove-essential --allow-change-held-packages\n#   Install Apache2 with FastCGI module and MySQL client for convenience\nRUN apt-get install apache2 libapache2-mod-fastcgi apache2-utils libmysqlclient-dev mariadb-client -y --allow-downgrades --allow-remove-essential --allow-change-held-packages\n#   Modify PHP-FPM configuration files to set common properties and listen on socket\nRUN sed -i \"s/;date.timezone =.*/date.timezone = UTC/\" /etc/php/7.1/cli/php.ini\nRUN sed -i \"s/;date.timezone =.*/date.timezone = UTC/\" /etc/php/7.1/fpm/php.ini\nRUN sed -i \"s/display_errors = Off/display_errors = On/\" /etc/php/7.1/fpm/php.ini\nRUN sed -i \"s/upload_max_filesize = .*/upload_max_filesize = 10M/\" /etc/php/7.1/fpm/php.ini\nRUN sed -i \"s/post_max_size = .*/post_max_size = 12M/\" /etc/php/7.1/fpm/php.ini\nRUN sed -i \"s/;cgi.fix_pathinfo=1/cgi.fix_pathinfo=0/\" /etc/php/7.1/fpm/php.ini\nRUN sed -i -e \"s/pid =.*/pid = \\/var\\/run\\/php7.1-fpm.pid/\" /etc/php/7.1/fpm/php-fpm.conf\nRUN sed -i -e \"s/error_log =.*/error_log = \\/proc\\/self\\/fd\\/2/\" /etc/php/7.1/fpm/php-fpm.conf\n#   RUN sed -i -e \"s/;daemonize\\s*=\\s*yes/daemonize = no/g\" /etc/php/7.1/fpm/php-fpm.conf\nRUN sed -i \"s/listen = .*/listen = \\/var\\/run\\/php\\/php7.1-fpm.sock/\" /etc/php/7.1/fpm/pool.d/www.conf\nRUN sed -i \"s/;catch_workers_output = .*/catch_workers_output = yes/\" /etc/php/7.1/fpm/pool.d/www.conf\n#   Install Composer globally\nRUN curl -sS https://getcomposer.org/installer | php \\\n && mv composer.phar /usr/local/bin/composer \\\n && chmod a+x /usr/local/bin/composer\n#  Change ports\nCOPY ./ports.conf /etc/apache2/ports.conf\nRUN rm /var/www/html/index.html\nCOPY ./000-default.conf /etc/apache2/sites-enabled/000-default.conf\n#   Remove default Apache VirtualHost, configs, and mods not needed\nWORKDIR $HTTPD_PREFIX\nRUN rm -f sites-enabled/000-default.conf conf-enabled/serve-cgi-bin.conf mods-enabled/autoindex.conf mods-enabled/autoindex.load\n#   Enable additional configs and mods\nRUN ln -s $HTTPD_PREFIX/mods-available/expires.load $HTTPD_PREFIX/mods-enabled/expires.load \\\n && ln -s $HTTPD_PREFIX/mods-available/headers.load $HTTPD_PREFIX/mods-enabled/headers.load \\\n && ln -s $HTTPD_PREFIX/mods-available/rewrite.load $HTTPD_PREFIX/mods-enabled/rewrite.load\n#   Configure Apache to use our PHP-FPM socket for all PHP files\n#  COPY php7.1-fpm.conf /etc/apache2/conf-available/php7.1-fpm.conf\nRUN a2enconf php7.1-fpm\n#   Copy file to execute\nCOPY /source/www /var/www\nRUN chmod 777 /var/www/html/upload\n#   Enable Apache modules and configuration\nRUN a2dismod mpm_event\nRUN a2enmod alias actions fastcgi proxy_fcgi setenvif mpm_worker\n#   Clean up apt cache and temp files to save disk space\nRUN apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#   Symlink apache access and error logs to stdout/stderr so Docker logs shows them\nRUN ln -sf /dev/stdout /var/log/apache2/access.log\nRUN ln -sf /dev/stdout /var/log/apache2/other_vhosts_access.log\nRUN ln -sf /dev/stderr /var/log/apache2/error.log\n#  Install phantomjs\nCOPY phantomjs /usr/local/share/phantomjs\nRUN chmod 777 /usr/local/share/phantomjs/bin/phantomjs\nRUN ln -sf /usr/local/share/phantomjs/bin/phantomjs /usr/local/bin\n#  Run crontab\nRUN apt-get install cron\nADD crontab /etc/cron.d/simple-cron\nRUN chmod +x /var/www/crondel.sh\nRUN chmod 0644 /etc/cron.d/simple-cron\nRUN touch /var/log/cron.log\n#  Run shell\nRUN chmod 777 /var/www/cron350.sh\nRUN chmod 777 /var/www/cron.php\nRUN chmod 777 /var/www/something.js\nADD shell.sh /var/www/shell.sh\nADD goodjobnowgetyoursfl4g /goodjobnowgetyoursfl4g\nRUN chmod +r /goodjobnowgetyoursfl4g\nRUN chmod 777 /var/www/shell.sh\n#   Start PHP-FPM worker service and run Apache in foreground so any error output is sent to stdout for Docker logs\nCMD cron \\\n && tail -f /var/log/cron.log\nCMD /var/www/shell.sh \\\n && service php7.1-fpm start \\\n && service cron start \\\n && /usr/sbin/apache2ctl -D FOREGROUND\n","originalDockerfileUglifiedHash":"f4cadf1589c9d36f13f4b49c9edecd1d","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/522de988c80e0b7f201fa30cf6a1e8af89504211.dockerfile"}