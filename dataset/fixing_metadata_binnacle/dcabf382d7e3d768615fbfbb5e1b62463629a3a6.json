{"seed":1779719344,"processedDockerfileHash":"7c296044b8dde33a152e656f1466e887","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","do-not-have-secrets","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   -*- coding: utf-8 -*-\n#\n#      LinOTP - the open source solution for two factor authentication\n#      Copyright (C) 2016 - 2018 KeyIdentity GmbH\n#\n#      This file is part of LinOTP server.\n#\n#      This program is free software: you can redistribute it and/or\n#      modify it under the terms of the GNU Affero General Public\n#      License, version 3, as published by the Free Software Foundation.\n#\n#      This program is distributed in the hope that it will be useful,\n#      but WITHOUT ANY WARRANTY; without even the implied warranty of\n#      MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n#      GNU Affero General Public License for more details.\n#\n#      You should have received a copy of the\n#                 GNU Affero General Public License\n#      along with this program.  If not, see <http://www.gnu.org/licenses/>.\n#\n#\n#      E-mail: linotp@keyidentity.com\n#      Contact: www.linotp.org\n#      Support: www.keyidentity.com\n#\n#\n#   LinOTP Docker build script\nARG BASE_IMAGE\nFROM $BASE_IMAGE\nARG DEBIAN_MIRROR=deb.debian.org\nARG DEBIAN_RELEASE_NAME\nARG DEPENDENCY_SOURCE\nARG DEPENDENCY_GPG_KEYID\nARG DEPENDENCY_COMPONENT\nARG DEPENDENCY_GPG_KEY_URL\n#   The following environment variables can be set to\n#   configure the runtime behaviour of the container.\n#   Most of these should be self explanitory.\n#\n#   To disable HTTP authentication for the manage UI,\n#   set LINOTP_APACHE_AUTH=false.\n#\n#   To use a MySQL database:\n#    LINOTP_DB_TYPE=mysql\n#   and also substitute suitable values:\n#    LINOTP_DB_HOST=hostname\n#    LINOTP_DB_PORT=3306\n#    LINOTP_DB_USER=user\n#    LINOTP_DB_PASSWORD=password\n#    LINOTP_DB_NAME=database-name\n#\n#   Unencrypted healthchecks can be performed by\n#   checking http://HOSTNAME:81/validate/ok\n#\n#   To send LinOTP logs directly to\n#   Logstash, set LOGSTASH_HOST and\n#   LOGSTASH_PORT to point to your\n#   Logstash collector. You can optionally\n#   add additional tags with the\n#   LOGSTASH_TAGS setting. This is a Python\n#   list. For example:\n#     LOGSTASH_HOST=logstash1\n#     LOGSTASH_PORT=5000\n#     LOGSTASH_TAGS=('instance1', 'server1')\n#\n#   To change the location of the database\n#   encryption key file, set\n#     SECRET_FILE_LOCATION=/path/to/encKey\n# A secret has been removed here. Please do not provide secrets from the Dockerfile as these will leak into the metadata of the resulting docker image. To provide secrets the --secret flag of the docker build command can be used (https://docs.docker.com/develop/develop-images/build_enhancements/#new-docker-build-secret-information).\nENV TZ=\"Europe/Berlin\" \\\n    LINOTP_USER=\"linotp\" \\\n    LINOTP_DB_TYPE=\"sqlite\" \\\n    LINOTP_DB_NAME=\"//tmp/linotp.db\" \\\n    LINOTP_DB_HOST=\"dbhost\" \\\n    LINOTP_DB_PORT=\"3306\" \\\n    LINOTP_DB_USER=\"dbuser\" \\\n    LINOTP_ADMIN_USER=\"admin\" \\\n    LINOTP_APACHE_AUTH=\"true\" \\\n    LINOTP_APACHE_SSL=\"true\" \\\n    LINOTP_APACHE_HSTS=\"true\" \\\n    LINOTP_LOGLEVEL=\"INFO\" \\\n    LINOTP_CONSOLE_LOGLEVEL=\"DEBUG\" \\\n    SQLALCHEMY_LOGLEVEL=\"ERROR\" \\\n    APACHE_LOGLEVEL=\"info\" \\\n    LOGSTASH_HOST=\"\" \\\n    LOGSTASH_PORT=\"\" \\\n    LOGSTASH_TAGS=\"()\" \\\n    SECRET_FILE_LOCATION=\"\"\n#   Internal environment variables used by the docker images\nENV LINOTP_INI_TEMPLATE=\"/etc/linotp/linotp-docker.ini.tmpl\" \\\n    LINOTP_HOME=\"/opt/linotp\" \\\n    DEBIAN_FRONTEND=\"noninteractive\"\nRUN echo 'APT::Install-Recommends \"0\"; \\n APT::Get::Assume-Yes \"true\"; \\n APT::Install-Suggests \"0\";' > /etc/apt/apt.conf.d/01buildconfig\nRUN sed \"s#http://deb\\.debian\\.org/#http://${DEBIAN_MIRROR}/#\" < /etc/apt/sources.list > /etc/apt/sources.list.new \\\n && mv -f /etc/apt/sources.list.new /etc/apt/sources.list\nRUN apt-get update \\\n && apt-get install --no-install-recommends curl=7.88.1-7ubuntu1 gnupg2=2.2.40-1ubuntu2 dirmngr=2.2.40-1ubuntu2 --yes\nRUN test -z \"$DEPENDENCY_SOURCE\" || echo \"deb $DEPENDENCY_SOURCE $DEBIAN_RELEASE_NAME $DEPENDENCY_COMPONENT\" > /etc/apt/sources.list.d/kideps.list\nRUN test -z \"$DEPENDENCY_GPG_KEYID\" || apt-key adv --keyserver hkp://hkps.pool.sks-keyservers.net --recv-keys $DEPENDENCY_GPG_KEYID\nRUN test -z \"$DEPENDENCY_GPG_KEY_URL\" || curl $DEPENDENCY_GPG_KEY_URL | apt-key adv --import\n#   Install some dependencies which will be cached. This does not\n#   need to be an exhaustive list because apt will install any\n#   missing packages.\n#   RUN \\\n#       apt-get update \\\n#       && extraPackages=' \\\n#   \tmake \\\n#   \tpython-psycopg2 \\\n#       ' \\\n#       && apt-get install \\\n#   \t\t$extraPackages \\\n#   \t\tadduser debconf openssl pwgen python-beaker python-configobj \\\n#   \t\tpython-decorator python-docutils python-formencode python-httplib2 \\\n#   \t\tpython-ldap python-m2crypto python-mako python-mysqldb python-netaddr \\\n#   \t\tpython-paste python-pastedeploy python-pastescript python-pygments python-pylons \\\n#   \t\tpython-pyrad python-qrcode python-routes python-simplejson \\\n#   \t\tpython-sqlalchemy python-tempita python-weberror python-webhelpers python-webob \\\n#   \t\tapache2 libapache2-mod-wsgi python-pycryptodomex python-pysodium python-requests\n#   Install linotp packages from local files.\nCOPY apt /opt/linotp/apt\nRUN echo \"linotp linotp/apache/activate boolean true\" > /opt/linotp/apt/debconf-selections \\\n && echo \"linotp linotp/apache/ssl_create boolean true\" >> /opt/linotp/apt/debconf-selections \\\n && debconf-set-selections /opt/linotp/apt/debconf-selections \\\n && echo \"deb [trusted=yes] file:/opt/linotp/apt ./\" > /etc/apt/sources.list.d/linotp-local.list \\\n && (echo \"Package: *\" ;echo \"Pin: origin \\\"\\\"\" ;echo \"Pin-Priority: 900\" ) > /etc/apt/preferences.d/linotp \\\n && apt-get update \\\n && apt-get install --no-install-recommends linotp python-logstash \\\n && rm /etc/apt/sources.list.d/linotp-local.list \\\n && rm -r /opt/linotp/apt /etc/apache2/sites-enabled/000-default.conf \\\n && rm /etc/linotp2/linotp.ini /etc/linotp2/encKey /etc/linotp2/*.pem\nWORKDIR $LINOTP_HOME\n#   Get dockerfy and configuration template files from build context\nCOPY *.tmpl /etc/linotp2/\nCOPY dockerfy /usr/local/bin/\nCOPY linotp-create-htdigest /usr/local/bin/\nRUN chmod 755 /usr/local/bin/linotp-create-htdigest\nENTRYPOINT [\"/usr/local/bin/dockerfy\", \"--template\", \"/etc/linotp2/linotp-docker.ini.tmpl:/etc/linotp2/linotp.ini\", \"--template\", \"/etc/linotp2/apache-docker.conf.tmpl:/etc/apache2/sites-enabled/linotp2.conf\", \"--run\", \"/var/lib/dpkg/info/linotp.postinst\", \"configure\", \"--\", \"--run\", \"/bin/grep\", \"url\", \"/etc/linotp2/linotp.ini\", \"--\", \"--run\", \"mkdir\", \"-p\", \"/etc/ssl/private\", \"/etc/ssl/certs\", \"--\", \"--run\", \"/bin/sh\", \"-c\", \"openssl\", \"req\", \"-new\", \"-x509\", \"-newkey\", \"rsa:2048\", \"-subj\", \"/CN=`hostname\", \"`.`dnsdomainname\", \"`\", \"-days\", \"768\", \"-out\", \"/etc/ssl/certs/linotpserver.pem\", \"-keyout\", \"/etc/ssl/private/linotpserver.key\", \"-nodes\", \"--\", \"--run\", \"/usr/local/bin/linotp-create-htdigest\", \"{{\", \".Env.LINOTP_ADMIN_USER\", \"}}\", \"{{\", \".Env.LINOTP_ADMIN_PASSWORD\", \"}}\", \"--\", \"--run\", \"/bin/sh\", \"-c\", \"if\", \"[\", \"{{\", \".Env.LINOTP_DB_TYPE\", \"}}\", \"!=\", \"sqlite\", \"]\"]\nCMD [\"/usr/sbin/apache2ctl\", \"-DFOREGROUND\"]\nCOPY ./se_mypasswd /etc/se_mypasswd\n#   Listen on apache port (https 443 by default - see LINOTP_APACHE_SSL and APACHE_PORT)\nEXPOSE 80/tcp 81/tcp 443/tcp\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  -*- coding: utf-8 -*-\n#\n#     LinOTP - the open source solution for two factor authentication\n#     Copyright (C) 2016 - 2018 KeyIdentity GmbH\n#\n#     This file is part of LinOTP server.\n#\n#     This program is free software: you can redistribute it and/or\n#     modify it under the terms of the GNU Affero General Public\n#     License, version 3, as published by the Free Software Foundation.\n#\n#     This program is distributed in the hope that it will be useful,\n#     but WITHOUT ANY WARRANTY; without even the implied warranty of\n#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n#     GNU Affero General Public License for more details.\n#\n#     You should have received a copy of the\n#                GNU Affero General Public License\n#     along with this program.  If not, see <http://www.gnu.org/licenses/>.\n#\n#\n#     E-mail: linotp@keyidentity.com\n#     Contact: www.linotp.org\n#     Support: www.keyidentity.com\n#\n#\n#  LinOTP Docker build script\nARG BASE_IMAGE\nFROM $BASE_IMAGE\nARG DEBIAN_MIRROR=deb.debian.org\nARG DEBIAN_RELEASE_NAME\nARG DEPENDENCY_SOURCE\nARG DEPENDENCY_GPG_KEYID\nARG DEPENDENCY_COMPONENT\nARG DEPENDENCY_GPG_KEY_URL\n#  The following environment variables can be set to\n#  configure the runtime behaviour of the container.\n#  Most of these should be self explanitory.\n#\n#  To disable HTTP authentication for the manage UI,\n#  set LINOTP_APACHE_AUTH=false.\n#\n#  To use a MySQL database:\n#   LINOTP_DB_TYPE=mysql\n#  and also substitute suitable values:\n#   LINOTP_DB_HOST=hostname\n#   LINOTP_DB_PORT=3306\n#   LINOTP_DB_USER=user\n#   LINOTP_DB_PASSWORD=password\n#   LINOTP_DB_NAME=database-name\n#\n#  Unencrypted healthchecks can be performed by\n#  checking http://HOSTNAME:81/validate/ok\n#\n#  To send LinOTP logs directly to\n#  Logstash, set LOGSTASH_HOST and\n#  LOGSTASH_PORT to point to your\n#  Logstash collector. You can optionally\n#  add additional tags with the\n#  LOGSTASH_TAGS setting. This is a Python\n#  list. For example:\n#    LOGSTASH_HOST=logstash1\n#    LOGSTASH_PORT=5000\n#    LOGSTASH_TAGS=('instance1', 'server1')\n#\n#  To change the location of the database\n#  encryption key file, set\n#    SECRET_FILE_LOCATION=/path/to/encKey\nENV TZ=\"Europe/Berlin\" \\\n    LINOTP_USER=\"linotp\" \\\n    LINOTP_DB_TYPE=\"sqlite\" \\\n    LINOTP_DB_NAME=\"//tmp/linotp.db\" \\\n    LINOTP_DB_HOST=\"dbhost\" \\\n    LINOTP_DB_PORT=\"3306\" \\\n    LINOTP_DB_USER=\"dbuser\" \\\n    LINOTP_DB_PASSWORD=\"dbpass\" \\\n    LINOTP_ADMIN_USER=\"admin\" \\\n    LINOTP_ADMIN_PASSWORD=\"admin\" \\\n    LINOTP_APACHE_AUTH=\"true\" \\\n    LINOTP_APACHE_SSL=\"true\" \\\n    LINOTP_APACHE_HSTS=\"true\" \\\n    LINOTP_LOGLEVEL=\"INFO\" \\\n    LINOTP_CONSOLE_LOGLEVEL=\"DEBUG\" \\\n    SQLALCHEMY_LOGLEVEL=\"ERROR\" \\\n    APACHE_LOGLEVEL=\"info\" \\\n    LOGSTASH_HOST=\"\" \\\n    LOGSTASH_PORT=\"\" \\\n    LOGSTASH_TAGS=\"()\" \\\n    SECRET_FILE_LOCATION=\"\"\n#  Internal environment variables used by the docker images\nENV LINOTP_INI_TEMPLATE=\"/etc/linotp/linotp-docker.ini.tmpl\" \\\n    LINOTP_HOME=\"/opt/linotp\" \\\n    DEBIAN_FRONTEND=\"noninteractive\"\nRUN echo 'APT::Install-Recommends \"0\"; \\n APT::Get::Assume-Yes \"true\"; \\n APT::Install-Suggests \"0\";' > /etc/apt/apt.conf.d/01buildconfig\nRUN sed \"s#http://deb\\.debian\\.org/#http://${DEBIAN_MIRROR}/#\" < /etc/apt/sources.list > /etc/apt/sources.list.new \\\n && mv -f /etc/apt/sources.list.new /etc/apt/sources.list\nRUN apt-get update \\\n && apt-get install --no-install-recommends curl gnupg2 dirmngr --yes\nRUN test -z \"$DEPENDENCY_SOURCE\" || echo \"deb $DEPENDENCY_SOURCE $DEBIAN_RELEASE_NAME $DEPENDENCY_COMPONENT\" > /etc/apt/sources.list.d/kideps.list\nRUN test -z \"$DEPENDENCY_GPG_KEYID\" || apt-key adv --keyserver hkp://hkps.pool.sks-keyservers.net --recv-keys $DEPENDENCY_GPG_KEYID\nRUN test -z \"$DEPENDENCY_GPG_KEY_URL\" || curl $DEPENDENCY_GPG_KEY_URL | apt-key adv --import\n#  Install some dependencies which will be cached. This does not\n#  need to be an exhaustive list because apt will install any\n#  missing packages.\n#  RUN \\\n#      apt-get update \\\n#      && extraPackages=' \\\n#  \tmake \\\n#  \tpython-psycopg2 \\\n#      ' \\\n#      && apt-get install \\\n#  \t\t$extraPackages \\\n#  \t\tadduser debconf openssl pwgen python-beaker python-configobj \\\n#  \t\tpython-decorator python-docutils python-formencode python-httplib2 \\\n#  \t\tpython-ldap python-m2crypto python-mako python-mysqldb python-netaddr \\\n#  \t\tpython-paste python-pastedeploy python-pastescript python-pygments python-pylons \\\n#  \t\tpython-pyrad python-qrcode python-routes python-simplejson \\\n#  \t\tpython-sqlalchemy python-tempita python-weberror python-webhelpers python-webob \\\n#  \t\tapache2 libapache2-mod-wsgi python-pycryptodomex python-pysodium python-requests\n#  Install linotp packages from local files.\nCOPY apt /opt/linotp/apt\nRUN echo \"linotp linotp/apache/activate boolean true\" > /opt/linotp/apt/debconf-selections \\\n && echo \"linotp linotp/apache/ssl_create boolean true\" >> /opt/linotp/apt/debconf-selections \\\n && debconf-set-selections /opt/linotp/apt/debconf-selections \\\n && echo \"deb [trusted=yes] file:/opt/linotp/apt ./\" > /etc/apt/sources.list.d/linotp-local.list \\\n && (echo \"Package: *\" ;echo \"Pin: origin \\\"\\\"\" ;echo \"Pin-Priority: 900\" ) > /etc/apt/preferences.d/linotp \\\n && apt-get update \\\n && apt-get install linotp python-logstash \\\n && rm /etc/apt/sources.list.d/linotp-local.list \\\n && rm -r /opt/linotp/apt /etc/apache2/sites-enabled/000-default.conf \\\n && rm /etc/linotp2/linotp.ini /etc/linotp2/encKey /etc/linotp2/*.pem\nWORKDIR $LINOTP_HOME\n#  Get dockerfy and configuration template files from build context\nCOPY *.tmpl /etc/linotp2/\nCOPY dockerfy /usr/local/bin/\nCOPY linotp-create-htdigest /usr/local/bin/\nRUN chmod 755 /usr/local/bin/linotp-create-htdigest\nENTRYPOINT [\"/usr/local/bin/dockerfy\", \"--template\", \"/etc/linotp2/linotp-docker.ini.tmpl:/etc/linotp2/linotp.ini\", \"--template\", \"/etc/linotp2/apache-docker.conf.tmpl:/etc/apache2/sites-enabled/linotp2.conf\", \"--run\", \"/var/lib/dpkg/info/linotp.postinst\", \"configure\", \"--\", \"--run\", \"/bin/grep\", \"url\", \"/etc/linotp2/linotp.ini\", \"--\", \"--run\", \"mkdir\", \"-p\", \"/etc/ssl/private\", \"/etc/ssl/certs\", \"--\", \"--run\", \"/bin/sh\", \"-c\", \"openssl\", \"req\", \"-new\", \"-x509\", \"-newkey\", \"rsa:2048\", \"-subj\", \"/CN=`hostname\", \"`.`dnsdomainname\", \"`\", \"-days\", \"768\", \"-out\", \"/etc/ssl/certs/linotpserver.pem\", \"-keyout\", \"/etc/ssl/private/linotpserver.key\", \"-nodes\", \"--\", \"--run\", \"/usr/local/bin/linotp-create-htdigest\", \"{{\", \".Env.LINOTP_ADMIN_USER\", \"}}\", \"{{\", \".Env.LINOTP_ADMIN_PASSWORD\", \"}}\", \"--\", \"--run\", \"/bin/sh\", \"-c\", \"if\", \"[\", \"{{\", \".Env.LINOTP_DB_TYPE\", \"}}\", \"!=\", \"sqlite\", \"]\"]\nCMD [\"/usr/sbin/apache2ctl\", \"-DFOREGROUND\"]\nCOPY ./se_mypasswd /etc/se_mypasswd\n#  Listen on apache port (https 443 by default - see LINOTP_APACHE_SSL and APACHE_PORT)\nEXPOSE 80/tcp 81/tcp 443/tcp\n","injectedSmells":[],"originalDockerfileHash":"3a24027b394bb85378ebb8466a145cb0","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   -*- coding: utf-8 -*-\n#\n#      LinOTP - the open source solution for two factor authentication\n#      Copyright (C) 2016 - 2018 KeyIdentity GmbH\n#\n#      This file is part of LinOTP server.\n#\n#      This program is free software: you can redistribute it and/or\n#      modify it under the terms of the GNU Affero General Public\n#      License, version 3, as published by the Free Software Foundation.\n#\n#      This program is distributed in the hope that it will be useful,\n#      but WITHOUT ANY WARRANTY; without even the implied warranty of\n#      MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n#      GNU Affero General Public License for more details.\n#\n#      You should have received a copy of the\n#                 GNU Affero General Public License\n#      along with this program.  If not, see <http://www.gnu.org/licenses/>.\n#\n#\n#      E-mail: linotp@keyidentity.com\n#      Contact: www.linotp.org\n#      Support: www.keyidentity.com\n#\n#\n#   LinOTP Docker build script\nARG BASE_IMAGE\nFROM $BASE_IMAGE\nARG DEBIAN_MIRROR=deb.debian.org\nARG DEBIAN_RELEASE_NAME\nARG DEPENDENCY_SOURCE\nARG DEPENDENCY_GPG_KEYID\nARG DEPENDENCY_COMPONENT\nARG DEPENDENCY_GPG_KEY_URL\n#   The following environment variables can be set to\n#   configure the runtime behaviour of the container.\n#   Most of these should be self explanitory.\n#\n#   To disable HTTP authentication for the manage UI,\n#   set LINOTP_APACHE_AUTH=false.\n#\n#   To use a MySQL database:\n#    LINOTP_DB_TYPE=mysql\n#   and also substitute suitable values:\n#    LINOTP_DB_HOST=hostname\n#    LINOTP_DB_PORT=3306\n#    LINOTP_DB_USER=user\n#    LINOTP_DB_PASSWORD=password\n#    LINOTP_DB_NAME=database-name\n#\n#   Unencrypted healthchecks can be performed by\n#   checking http://HOSTNAME:81/validate/ok\n#\n#   To send LinOTP logs directly to\n#   Logstash, set LOGSTASH_HOST and\n#   LOGSTASH_PORT to point to your\n#   Logstash collector. You can optionally\n#   add additional tags with the\n#   LOGSTASH_TAGS setting. This is a Python\n#   list. For example:\n#     LOGSTASH_HOST=logstash1\n#     LOGSTASH_PORT=5000\n#     LOGSTASH_TAGS=('instance1', 'server1')\n#\n#   To change the location of the database\n#   encryption key file, set\n#     SECRET_FILE_LOCATION=/path/to/encKey\nENV TZ=\"Europe/Berlin\" \\\n    LINOTP_USER=\"linotp\" \\\n    LINOTP_DB_TYPE=\"sqlite\" \\\n    LINOTP_DB_NAME=\"//tmp/linotp.db\" \\\n    LINOTP_DB_HOST=\"dbhost\" \\\n    LINOTP_DB_PORT=\"3306\" \\\n    LINOTP_DB_USER=\"dbuser\" \\\n    LINOTP_DB_PASSWORD=\"dbpass\" \\\n    LINOTP_ADMIN_USER=\"admin\" \\\n    LINOTP_ADMIN_PASSWORD=\"admin\" \\\n    LINOTP_APACHE_AUTH=\"true\" \\\n    LINOTP_APACHE_SSL=\"true\" \\\n    LINOTP_APACHE_HSTS=\"true\" \\\n    LINOTP_LOGLEVEL=\"INFO\" \\\n    LINOTP_CONSOLE_LOGLEVEL=\"DEBUG\" \\\n    SQLALCHEMY_LOGLEVEL=\"ERROR\" \\\n    APACHE_LOGLEVEL=\"info\" \\\n    LOGSTASH_HOST=\"\" \\\n    LOGSTASH_PORT=\"\" \\\n    LOGSTASH_TAGS=\"()\" \\\n    SECRET_FILE_LOCATION=\"\"\n#   Internal environment variables used by the docker images\nENV LINOTP_INI_TEMPLATE=\"/etc/linotp/linotp-docker.ini.tmpl\" \\\n    LINOTP_HOME=\"/opt/linotp\" \\\n    DEBIAN_FRONTEND=\"noninteractive\"\nRUN echo 'APT::Install-Recommends \"0\"; \\n APT::Get::Assume-Yes \"true\"; \\n APT::Install-Suggests \"0\";' > /etc/apt/apt.conf.d/01buildconfig\nRUN sed \"s#http://deb\\.debian\\.org/#http://${DEBIAN_MIRROR}/#\" < /etc/apt/sources.list > /etc/apt/sources.list.new \\\n && mv -f /etc/apt/sources.list.new /etc/apt/sources.list\nRUN apt-get update \\\n && apt-get install --no-install-recommends curl gnupg2 dirmngr --yes\nRUN test -z \"$DEPENDENCY_SOURCE\" || echo \"deb $DEPENDENCY_SOURCE $DEBIAN_RELEASE_NAME $DEPENDENCY_COMPONENT\" > /etc/apt/sources.list.d/kideps.list\nRUN test -z \"$DEPENDENCY_GPG_KEYID\" || apt-key adv --keyserver hkp://hkps.pool.sks-keyservers.net --recv-keys $DEPENDENCY_GPG_KEYID\nRUN test -z \"$DEPENDENCY_GPG_KEY_URL\" || curl $DEPENDENCY_GPG_KEY_URL | apt-key adv --import\n#   Install some dependencies which will be cached. This does not\n#   need to be an exhaustive list because apt will install any\n#   missing packages.\n#   RUN \\\n#       apt-get update \\\n#       && extraPackages=' \\\n#   \tmake \\\n#   \tpython-psycopg2 \\\n#       ' \\\n#       && apt-get install \\\n#   \t\t$extraPackages \\\n#   \t\tadduser debconf openssl pwgen python-beaker python-configobj \\\n#   \t\tpython-decorator python-docutils python-formencode python-httplib2 \\\n#   \t\tpython-ldap python-m2crypto python-mako python-mysqldb python-netaddr \\\n#   \t\tpython-paste python-pastedeploy python-pastescript python-pygments python-pylons \\\n#   \t\tpython-pyrad python-qrcode python-routes python-simplejson \\\n#   \t\tpython-sqlalchemy python-tempita python-weberror python-webhelpers python-webob \\\n#   \t\tapache2 libapache2-mod-wsgi python-pycryptodomex python-pysodium python-requests\n#   Install linotp packages from local files.\nCOPY apt /opt/linotp/apt\nRUN echo \"linotp linotp/apache/activate boolean true\" > /opt/linotp/apt/debconf-selections \\\n && echo \"linotp linotp/apache/ssl_create boolean true\" >> /opt/linotp/apt/debconf-selections \\\n && debconf-set-selections /opt/linotp/apt/debconf-selections \\\n && echo \"deb [trusted=yes] file:/opt/linotp/apt ./\" > /etc/apt/sources.list.d/linotp-local.list \\\n && (echo \"Package: *\" ;echo \"Pin: origin \\\"\\\"\" ;echo \"Pin-Priority: 900\" ) > /etc/apt/preferences.d/linotp \\\n && apt-get update \\\n && apt-get install linotp python-logstash \\\n && rm /etc/apt/sources.list.d/linotp-local.list \\\n && rm -r /opt/linotp/apt /etc/apache2/sites-enabled/000-default.conf \\\n && rm /etc/linotp2/linotp.ini /etc/linotp2/encKey /etc/linotp2/*.pem\nWORKDIR $LINOTP_HOME\n#   Get dockerfy and configuration template files from build context\nCOPY *.tmpl /etc/linotp2/\nCOPY dockerfy /usr/local/bin/\nCOPY linotp-create-htdigest /usr/local/bin/\nRUN chmod 755 /usr/local/bin/linotp-create-htdigest\nENTRYPOINT [\"/usr/local/bin/dockerfy\", \"--template\", \"/etc/linotp2/linotp-docker.ini.tmpl:/etc/linotp2/linotp.ini\", \"--template\", \"/etc/linotp2/apache-docker.conf.tmpl:/etc/apache2/sites-enabled/linotp2.conf\", \"--run\", \"/var/lib/dpkg/info/linotp.postinst\", \"configure\", \"--\", \"--run\", \"/bin/grep\", \"url\", \"/etc/linotp2/linotp.ini\", \"--\", \"--run\", \"mkdir\", \"-p\", \"/etc/ssl/private\", \"/etc/ssl/certs\", \"--\", \"--run\", \"/bin/sh\", \"-c\", \"openssl\", \"req\", \"-new\", \"-x509\", \"-newkey\", \"rsa:2048\", \"-subj\", \"/CN=`hostname\", \"`.`dnsdomainname\", \"`\", \"-days\", \"768\", \"-out\", \"/etc/ssl/certs/linotpserver.pem\", \"-keyout\", \"/etc/ssl/private/linotpserver.key\", \"-nodes\", \"--\", \"--run\", \"/usr/local/bin/linotp-create-htdigest\", \"{{\", \".Env.LINOTP_ADMIN_USER\", \"}}\", \"{{\", \".Env.LINOTP_ADMIN_PASSWORD\", \"}}\", \"--\", \"--run\", \"/bin/sh\", \"-c\", \"if\", \"[\", \"{{\", \".Env.LINOTP_DB_TYPE\", \"}}\", \"!=\", \"sqlite\", \"]\"]\nCMD [\"/usr/sbin/apache2ctl\", \"-DFOREGROUND\"]\nCOPY ./se_mypasswd /etc/se_mypasswd\n#   Listen on apache port (https 443 by default - see LINOTP_APACHE_SSL and APACHE_PORT)\nEXPOSE 80/tcp 81/tcp 443/tcp\n","originalDockerfileUglifiedHash":"3ca8f56a7201c5a74da8ef97589c6dd4","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/dcabf382d7e3d768615fbfbb5e1b62463629a3a6.dockerfile"}