{"seed":2461123407,"processedDockerfileHash":"d86ca5144cc49a72f86093d94eb7857c","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apt-get","have-a-healthcheck"],"processedDockerfile":"#   Copyright 2018 AT&T Intellectual Property.  All other rights reserved.\n#\n#   Licensed under the Apache License, Version 2.0 (the \"License\");\n#   you may not use this file except in compliance with the License.\n#   You may obtain a copy of the License at\n#\n#       http://www.apache.org/licenses/LICENSE-2.0\n#\n#   Unless required by applicable law or agreed to in writing, software\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#   See the License for the specific language governing permissions and\n#   limitations under the License.\n#   Docker image to run Airflow on Kubernetes\nARG FROM=ubuntu:16.04\nFROM ${FROM}\nLABEL org.opencontainers.image.authors=\"airship-discuss@lists.airshipit.org, irc://#airshipit@freenode\"\nLABEL org.opencontainers.image.url=\"https://airshipit.org\"\nLABEL org.opencontainers.image.documentation=\"https://airship-shipyard.readthedocs.org\"\nLABEL org.opencontainers.image.source=\"https://opendev.org/airship/shipyard\"\nLABEL org.opencontainers.image.vendor=\"The Airship Authors\"\nLABEL org.opencontainers.image.licenses=\"Apache-2.0\"\n#   Do not prompt user for choices on installation/configuration of packages\n#   Set port 8080 for Airflow Web\n#   Set port 5555 for Airflow Flower\n#   Set port 8793 for Airflow Worker\nENV container=\"docker\"\nENV WEB_PORT=\"8080\"\nENV FLOWER_PORT=\"5555\"\nENV WORKER_PORT=\"8793\"\nENV SLUGIFY_USES_TEXT_UNIDECODE=\"yes\"\n#   Expose port for applications\nEXPOSE $WEB_PORT\nEXPOSE $FLOWER_PORT\nEXPOSE $WORKER_PORT\n#   Set ARG for usage during build\nARG AIRFLOW_HOME=/usr/local/airflow\nARG DEBIAN_FRONTEND=noninteractive\nARG ctx_base=src/bin\n#   Kubectl version\nARG KUBECTL_VERSION=1.10.2\nRUN set -ex \\\n && apt-get update -qq \\\n && apt-get install --no-install-recommends ca-certificates=20230311 curl=7.88.1-7ubuntu1 git=1:2.39.2-1ubuntu1 g++=4:12.2.0-3ubuntu1 libffi-dev=3.4.4-1 libssl-dev=3.0.8-1ubuntu1 libpq-dev=15.2-1 locales=2.37-0ubuntu2 netcat netbase=6.4 python3=3.11.2-1 python3-setuptools=66.1.1-1 python3-pip=23.0.1+dfsg-1 python3-dev=3.11.2-1 python3-dateutil=2.8.2-1 make=4.3-4.1build1 -y \\\n && python3 -m pip install -U pip \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /usr/share/man /usr/share/doc /usr/share/doc-base\n#   Things that change mostly infrequently\nRUN useradd -ms /bin/bash -d ${AIRFLOW_HOME} airflow \\\n && curl -L -o /usr/local/bin/kubectl https://storage.googleapis.com/kubernetes-release/release/v${KUBECTL_VERSION}/bin/linux/amd64/kubectl \\\n && chmod +x /usr/local/bin/kubectl\n#   Dependency requirements\n#   Note - removing snakebite (python 2 vs. 3). See:\n#      https://github.com/puckel/docker-airflow/issues/77\nCOPY images/airflow/requirements.txt /tmp/\nRUN pip3 install -r /tmp/requirements.txt --no-cache-dir \\\n && pip3 uninstall -y snakebite || true\n#   Copy scripts used in the container:\nCOPY images/airflow/script/*.sh ${AIRFLOW_HOME}/\n#   Copy configuration (e.g. logging config for Airflow):\nCOPY images/airflow/config/*.py ${AIRFLOW_HOME}/config/\n#   Change permissions\nRUN chown -R airflow: ${AIRFLOW_HOME}\n#   Setting the version explicitly for PBR\nENV PBR_VERSION=\"0.1a1\"\n#   Shipyard\n#\n#   Shipyard provides core functionality used by the Airflow plugins/operators\n#   Since Shipyard and Airflow are built together as images, this should prevent\n#   stale or out-of-date code between these parts.\n#   Shipyard requirements, source and installation\nCOPY ${ctx_base}/shipyard_airflow/requirements.txt /tmp/api_requirements.txt\nRUN pip3 install -r /tmp/api_requirements.txt --no-cache-dir\nCOPY ${ctx_base}/shipyard_airflow /tmp/shipyard/\nRUN cd /tmp/shipyard \\\n && python3 setup.py install\n#   Note: The value for the dags and plugins directories that are sourced\n#   from the values.yaml of the Shipyard Helm chart need to align with these\n#   directories. If they do not, airflow will not find the intended dags and\n#   plugins.\n#\n#   Note: In the case of building images using the provided Makefile, a test is\n#   run against the built-in dags provided with Airflow. Since there is no Helm\n#   chart to reconfigure the airflow.cfg with these directories, these dags and\n#   plugins are not known to Airflow during the image test.\n#\n#   Copy the plugins and dags that will be used by this Airflow image:\nCOPY ${ctx_base}/shipyard_airflow/shipyard_airflow/plugins ${AIRFLOW_HOME}/plugins/\nCOPY ${ctx_base}/shipyard_airflow/shipyard_airflow/dags ${AIRFLOW_HOME}/dags/\n#   Set work directory\nUSER airflow\nWORKDIR ${AIRFLOW_HOME}\n#   Execute entrypoint\nENTRYPOINT [\"./entrypoint.sh\"]\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Copyright 2018 AT&T Intellectual Property.  All other rights reserved.\n#\n#  Licensed under the Apache License, Version 2.0 (the \"License\");\n#  you may not use this file except in compliance with the License.\n#  You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n#  Unless required by applicable law or agreed to in writing, software\n#  distributed under the License is distributed on an \"AS IS\" BASIS,\n#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#  See the License for the specific language governing permissions and\n#  limitations under the License.\n#  Docker image to run Airflow on Kubernetes\nARG FROM=ubuntu:16.04\nFROM ${FROM}\nLABEL org.opencontainers.image.authors=\"airship-discuss@lists.airshipit.org, irc://#airshipit@freenode\"\nLABEL org.opencontainers.image.url=\"https://airshipit.org\"\nLABEL org.opencontainers.image.documentation=\"https://airship-shipyard.readthedocs.org\"\nLABEL org.opencontainers.image.source=\"https://opendev.org/airship/shipyard\"\nLABEL org.opencontainers.image.vendor=\"The Airship Authors\"\nLABEL org.opencontainers.image.licenses=\"Apache-2.0\"\n#  Do not prompt user for choices on installation/configuration of packages\n#  Set port 8080 for Airflow Web\n#  Set port 5555 for Airflow Flower\n#  Set port 8793 for Airflow Worker\nENV container=\"docker\"\nENV WEB_PORT=\"8080\"\nENV FLOWER_PORT=\"5555\"\nENV WORKER_PORT=\"8793\"\nENV SLUGIFY_USES_TEXT_UNIDECODE=\"yes\"\n#  Expose port for applications\nEXPOSE $WEB_PORT\nEXPOSE $FLOWER_PORT\nEXPOSE $WORKER_PORT\n#  Set ARG for usage during build\nARG AIRFLOW_HOME=/usr/local/airflow\nARG DEBIAN_FRONTEND=noninteractive\nARG ctx_base=src/bin\n#  Kubectl version\nARG KUBECTL_VERSION=1.10.2\nRUN set -ex \\\n && apt-get update -qq \\\n && apt-get install --no-install-recommends ca-certificates curl git g++ libffi-dev libssl-dev libpq-dev locales netcat netbase python3 python3-setuptools python3-pip python3-dev python3-dateutil make -y \\\n && python3 -m pip install -U pip \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /usr/share/man /usr/share/doc /usr/share/doc-base\n#  Things that change mostly infrequently\nRUN useradd -ms /bin/bash -d ${AIRFLOW_HOME} airflow \\\n && curl -L -o /usr/local/bin/kubectl https://storage.googleapis.com/kubernetes-release/release/v${KUBECTL_VERSION}/bin/linux/amd64/kubectl \\\n && chmod +x /usr/local/bin/kubectl\n#  Dependency requirements\n#  Note - removing snakebite (python 2 vs. 3). See:\n#     https://github.com/puckel/docker-airflow/issues/77\nCOPY images/airflow/requirements.txt /tmp/\nRUN pip3 install -r /tmp/requirements.txt --no-cache-dir \\\n && pip3 uninstall -y snakebite || true\n#  Copy scripts used in the container:\nCOPY images/airflow/script/*.sh ${AIRFLOW_HOME}/\n#  Copy configuration (e.g. logging config for Airflow):\nCOPY images/airflow/config/*.py ${AIRFLOW_HOME}/config/\n#  Change permissions\nRUN chown -R airflow: ${AIRFLOW_HOME}\n#  Setting the version explicitly for PBR\nENV PBR_VERSION=\"0.1a1\"\n#  Shipyard\n#\n#  Shipyard provides core functionality used by the Airflow plugins/operators\n#  Since Shipyard and Airflow are built together as images, this should prevent\n#  stale or out-of-date code between these parts.\n#  Shipyard requirements, source and installation\nCOPY ${ctx_base}/shipyard_airflow/requirements.txt /tmp/api_requirements.txt\nRUN pip3 install -r /tmp/api_requirements.txt --no-cache-dir\nCOPY ${ctx_base}/shipyard_airflow /tmp/shipyard/\nRUN cd /tmp/shipyard \\\n && python3 setup.py install\n#  Note: The value for the dags and plugins directories that are sourced\n#  from the values.yaml of the Shipyard Helm chart need to align with these\n#  directories. If they do not, airflow will not find the intended dags and\n#  plugins.\n#\n#  Note: In the case of building images using the provided Makefile, a test is\n#  run against the built-in dags provided with Airflow. Since there is no Helm\n#  chart to reconfigure the airflow.cfg with these directories, these dags and\n#  plugins are not known to Airflow during the image test.\n#\n#  Copy the plugins and dags that will be used by this Airflow image:\nCOPY ${ctx_base}/shipyard_airflow/shipyard_airflow/plugins ${AIRFLOW_HOME}/plugins/\nCOPY ${ctx_base}/shipyard_airflow/shipyard_airflow/dags ${AIRFLOW_HOME}/dags/\n#  Set work directory\nUSER airflow\nWORKDIR ${AIRFLOW_HOME}\n#  Execute entrypoint\nENTRYPOINT [\"./entrypoint.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"e1dead1a69c239c81fc99b3b92b1c34f","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Copyright 2018 AT&T Intellectual Property.  All other rights reserved.\n#\n#   Licensed under the Apache License, Version 2.0 (the \"License\");\n#   you may not use this file except in compliance with the License.\n#   You may obtain a copy of the License at\n#\n#       http://www.apache.org/licenses/LICENSE-2.0\n#\n#   Unless required by applicable law or agreed to in writing, software\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#   See the License for the specific language governing permissions and\n#   limitations under the License.\n#   Docker image to run Airflow on Kubernetes\nARG FROM=ubuntu:16.04\nFROM ${FROM}\nLABEL org.opencontainers.image.authors=\"airship-discuss@lists.airshipit.org, irc://#airshipit@freenode\"\nLABEL org.opencontainers.image.url=\"https://airshipit.org\"\nLABEL org.opencontainers.image.documentation=\"https://airship-shipyard.readthedocs.org\"\nLABEL org.opencontainers.image.source=\"https://opendev.org/airship/shipyard\"\nLABEL org.opencontainers.image.vendor=\"The Airship Authors\"\nLABEL org.opencontainers.image.licenses=\"Apache-2.0\"\n#   Do not prompt user for choices on installation/configuration of packages\n#   Set port 8080 for Airflow Web\n#   Set port 5555 for Airflow Flower\n#   Set port 8793 for Airflow Worker\nENV container=\"docker\"\nENV WEB_PORT=\"8080\"\nENV FLOWER_PORT=\"5555\"\nENV WORKER_PORT=\"8793\"\nENV SLUGIFY_USES_TEXT_UNIDECODE=\"yes\"\n#   Expose port for applications\nEXPOSE $WEB_PORT\nEXPOSE $FLOWER_PORT\nEXPOSE $WORKER_PORT\n#   Set ARG for usage during build\nARG AIRFLOW_HOME=/usr/local/airflow\nARG DEBIAN_FRONTEND=noninteractive\nARG ctx_base=src/bin\n#   Kubectl version\nARG KUBECTL_VERSION=1.10.2\nRUN set -ex \\\n && apt-get update -qq \\\n && apt-get install --no-install-recommends ca-certificates curl git g++ libffi-dev libssl-dev libpq-dev locales netcat netbase python3 python3-setuptools python3-pip python3-dev python3-dateutil make -y \\\n && python3 -m pip install -U pip \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /usr/share/man /usr/share/doc /usr/share/doc-base\n#   Things that change mostly infrequently\nRUN useradd -ms /bin/bash -d ${AIRFLOW_HOME} airflow \\\n && curl -L -o /usr/local/bin/kubectl https://storage.googleapis.com/kubernetes-release/release/v${KUBECTL_VERSION}/bin/linux/amd64/kubectl \\\n && chmod +x /usr/local/bin/kubectl\n#   Dependency requirements\n#   Note - removing snakebite (python 2 vs. 3). See:\n#      https://github.com/puckel/docker-airflow/issues/77\nCOPY images/airflow/requirements.txt /tmp/\nRUN pip3 install -r /tmp/requirements.txt --no-cache-dir \\\n && pip3 uninstall -y snakebite || true\n#   Copy scripts used in the container:\nCOPY images/airflow/script/*.sh ${AIRFLOW_HOME}/\n#   Copy configuration (e.g. logging config for Airflow):\nCOPY images/airflow/config/*.py ${AIRFLOW_HOME}/config/\n#   Change permissions\nRUN chown -R airflow: ${AIRFLOW_HOME}\n#   Setting the version explicitly for PBR\nENV PBR_VERSION=\"0.1a1\"\n#   Shipyard\n#\n#   Shipyard provides core functionality used by the Airflow plugins/operators\n#   Since Shipyard and Airflow are built together as images, this should prevent\n#   stale or out-of-date code between these parts.\n#   Shipyard requirements, source and installation\nCOPY ${ctx_base}/shipyard_airflow/requirements.txt /tmp/api_requirements.txt\nRUN pip3 install -r /tmp/api_requirements.txt --no-cache-dir\nCOPY ${ctx_base}/shipyard_airflow /tmp/shipyard/\nRUN cd /tmp/shipyard \\\n && python3 setup.py install\n#   Note: The value for the dags and plugins directories that are sourced\n#   from the values.yaml of the Shipyard Helm chart need to align with these\n#   directories. If they do not, airflow will not find the intended dags and\n#   plugins.\n#\n#   Note: In the case of building images using the provided Makefile, a test is\n#   run against the built-in dags provided with Airflow. Since there is no Helm\n#   chart to reconfigure the airflow.cfg with these directories, these dags and\n#   plugins are not known to Airflow during the image test.\n#\n#   Copy the plugins and dags that will be used by this Airflow image:\nCOPY ${ctx_base}/shipyard_airflow/shipyard_airflow/plugins ${AIRFLOW_HOME}/plugins/\nCOPY ${ctx_base}/shipyard_airflow/shipyard_airflow/dags ${AIRFLOW_HOME}/dags/\n#   Set work directory\nUSER airflow\nWORKDIR ${AIRFLOW_HOME}\n#   Execute entrypoint\nENTRYPOINT [\"./entrypoint.sh\"]\n","originalDockerfileUglifiedHash":"7d4f0068ebd3b382a4536c866594b0b6","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/985d70263bd3a2846c7787c1343bf02996819ee7.dockerfile"}