{"seed":768380434,"processedDockerfileHash":"d8b762c5eef7d2ffd74d6bd9c35bfeb1","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-pip","have-a-healthcheck"],"processedDockerfile":"FROM centos:7\nMAINTAINER Jemish Patel <jpatel@pivotal.io>\n#   install document with yum\nRUN sed -i 's/tsflags=nodocs//g' /etc/yum.conf\n#   add yum repo for libhdfs3\n#  RUN curl -L \"https://bintray.com/wangzw/rpm/rpm\" -o /etc/yum.repos.d/bintray-wangzw-rpm.repo\nRUN rpm -iUvh http://dl.fedoraproject.org/pub/epel/7/x86_64/e/epel-release-7-8.noarch.rpm \\\n && yum history sync \\\n && yum -y update \\\n && yum clean all\n#   install software we need to build\nRUN yum -y swap -- remove systemd-container systemd-container-libs -- install systemd systemd-libs \\\n && yum makecache \\\n && yum install -y man passwd sudo tar which git mlocate links make bzip2 net-tools autoconf automake libtool m4 gcc gcc-c++ gdb bison flex cmake3 gperf maven indent libuuid-devel krb5-devel libgsasl-devel expat-devel libxml2-devel perl-ExtUtils-Embed pam-devel python-devel libcurl-devel snappy-devel thrift-devel libyaml-devel libevent-devel bzip2-devel openssl-devel openldap-devel protobuf-devel readline-devel net-snmp-devel apr-devel libesmtp-devel xerces-c-devel python-pip json-c-devel libhdfs3-devel apache-ivy java-1.7.0-openjdk-devel libffi libffi-devel unzip openssh-clients openssh-server R tcpdump wget bsdtar perl-JSON \\\n && yum clean all\n#   install python module\nRUN yum makecache \\\n && yum install -y postgresql-devel \\\n && pip install pip==23.1 --retries=50 --timeout=300 --upgrade \\\n && pip install pg8000==1.29.4 simplejson==3.19.1 unittest2==1.1.0 pycrypto==2.6.1 pygresql==5.2.4 pyyaml==6.0 lockfile==0.12.2 paramiko==3.1.0 psi==0.3b3 --retries=50 --timeout=300 \\\n && pip install http://darcs.idyll.org/~t/projects/figleaf-0.6.1.tar.gz --retries=50 --timeout=300 \\\n && pip install http://sourceforge.net/projects/pychecker/files/pychecker/0.8.19/pychecker-0.8.19.tar.gz/download --retries=50 --timeout=300 \\\n && pip install numpy==1.24.2 scipy==1.10.1 matplotlib==3.7.1 plotly==5.14.1 psycopg2==2.9.6 queries==2.1.1 pandas==2.0.0 sqlalchemy==2.0.9 redis==4.5.4 python-dotenv==1.0.0 --retries=50 --timeout=300 \\\n && yum clean all\n#   setup ssh server and keys for root\nRUN sshd-keygen \\\n && ssh-keygen -t rsa -N \"\" -f ~/.ssh/id_rsa \\\n && cat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys \\\n && chmod 0600 ~/.ssh/authorized_keys\n#   setup JAVA_HOME for all users\nRUN echo \"#!/bin/sh\" > /etc/profile.d/java.sh \\\n && echo \"export JAVA_HOME=/etc/alternatives/java_sdk\" >> /etc/profile.d/java.sh \\\n && chmod a+x /etc/profile.d/java.sh\n#  link correct cmake\nRUN cd /usr/bin/ \\\n && ln -s cmake3 cmake \\\n && ln -s ccmake3 ccmake \\\n && ln -s cpack3 cpack \\\n && ln -s ctest3 ctest\n#   install libyarn\n#  RUN mkdir -p /tmp/build && \\\n#   cd /tmp/build && git clone --depth=1 https://github.com/apache/incubator-hawq.git . && cd depends/libyarn && mkdir build && cd build && \\\n#   ../bootstrap --prefix=/usr && make -j4 && make install && ldconfig && \\\n#   rm -rf /tmp/build\n#   install libhdfs3\n#  RUN mkdir -p /tmp/build && \\\n#   cd /tmp/build && git clone --recursive --depth=1 https://github.com/apache/incubator-hawq.git . && cd depends/libhdfs3 && mkdir build && cd build && \\\n#  ../bootstrap --prefix=/data/hdb2 && make && make install && ldconfig && \\\n#  rm -rf /tmp/build\n#   sudo should not require tty\nRUN sed -i -e 's|Defaults requiretty|#Defaults requiretty|' /etc/sudoers\n#   set USER env\nRUN echo \"#!/bin/bash\" > /etc/profile.d/user.sh \\\n && echo \"export USER=\\`whoami\\`\" >> /etc/profile.d/user.sh \\\n && chmod a+x /etc/profile.d/user.sh\nENV BASEDIR=\"/data\"\nRUN mkdir -p /data \\\n && chmod 777 /data\nUSER root\n#   install HDP 2.4.0.0\nRUN curl -L \"http://public-repo-1.hortonworks.com/HDP/centos7/2.x/updates/2.4.0.0/hdp.repo\" -o /etc/yum.repos.d/hdp.repo \\\n && yum -y update \\\n && yum install -y hadoop hadoop-hdfs hadoop-libhdfs hadoop-yarn hadoop-mapreduce hadoop-client hdp-select \\\n && yum clean all\nRUN ln -s /usr/hdp/current/hadoop-hdfs-namenode/../hadoop/sbin/hadoop-daemon.sh /usr/bin/hadoop-daemon.sh\n#   create user gpadmin since HAWQ cannot run under root\nRUN groupadd -g 1000 gpadmin \\\n && useradd -u 1000 -g 1000 -G hdfs,hadoop gpadmin \\\n && echo \"gpadmin ALL=(ALL) NOPASSWD: ALL\" > /etc/sudoers.d/gpadmin\nCOPY conf/* /etc/hadoop/conf/\nCOPY entrypoint.sh /usr/bin/entrypoint.sh\nCOPY start-hdfs.sh /usr/bin/start-hdfs.sh\nCOPY start-hdb2.sh /usr/bin/start-hdb.sh\nCOPY start-zepp.sh /usr/bin/start-zepp.sh\nCOPY start-scdf.sh /usr/bin/start-scdf.sh\nCOPY madlib-1.9-1.x86_64.rpm /tmp/madlib-1.9-1.x86_64.rpm\n#   Install HDB2\nUSER gpadmin\n#   setup ssh client keys for gpadmin\nRUN ssh-keygen -t rsa -N \"\" -f ~/.ssh/id_rsa \\\n && cat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys \\\n && chmod 0600 ~/.ssh/authorized_keys\nRUN git clone https://github.com/apache/incubator-hawq.git /data/hawq \\\n && cd /data/hawq \\\n && ./configure --prefix=/data/hdb2 --with-python --with-r --with-ldap --with-pam --with-gssapi --with-openssl --with-krb5 --enable-orca --enable-debug \\\n && make -j4 \\\n && make install \\\n && make clean\n#   Install PXf\nUSER root\nRUN cd /data/hawq/pxf \\\n && ./gradlew clean tomcatRpm release -x test -Dhd=hdp \\\n && cd /data/hawq/pxf/distributions/ \\\n && rpm -i *.rpm \\\n && cd /data/hawq/pxf/build/distributions/ \\\n && rpm -i --force --nodeps pxf*.rpm \\\n && cd /data/hawq/pxf/ \\\n && ./gradlew clean \\\n && rm -rf /data/hawq/pxf/distributions \\\n && rm -rf /data/hawq \\\n && yum history sync \\\n && yum clean all\n#   Adding PXF User to superuser group for HDFS access\nRUN groupadd supergroup \\\n && usermod -G supergroup -a pxf\n#   Install SCDF\nRUN git clone https://github.com/spring-cloud/spring-cloud-dataflow.git /data/scdf \\\n && cd /data/scdf \\\n && ./mvnw clean install \\\n && cp /data/scdf/spring-cloud-dataflow-server-local/target/spring-cloud-dataflow-server-local-*.BUILD-SNAPSHOT.jar /data/ \\\n && cp /data/scdf/spring-cloud-dataflow-shell/target/spring-cloud-dataflow-shell-*.BUILD-SNAPSHOT.jar /data/ \\\n && ./mvnw clean \\\n && rm -rf /data/scdf\nUSER gpadmin\nWORKDIR /data\n#  EXPOSE 5432 22 8020 51200\nENTRYPOINT [\"entrypoint.sh\"]\nCMD [\"bash\"]\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM centos:7\nMAINTAINER Jemish Patel <jpatel@pivotal.io>\n#  install document with yum\nRUN sed -i 's/tsflags=nodocs//g' /etc/yum.conf\n#  add yum repo for libhdfs3\n# RUN curl -L \"https://bintray.com/wangzw/rpm/rpm\" -o /etc/yum.repos.d/bintray-wangzw-rpm.repo\nRUN rpm -iUvh http://dl.fedoraproject.org/pub/epel/7/x86_64/e/epel-release-7-8.noarch.rpm \\\n && yum history sync \\\n && yum -y update \\\n && yum clean all\n#  install software we need to build\nRUN yum -y swap -- remove systemd-container systemd-container-libs -- install systemd systemd-libs \\\n && yum makecache \\\n && yum install -y man passwd sudo tar which git mlocate links make bzip2 net-tools autoconf automake libtool m4 gcc gcc-c++ gdb bison flex cmake3 gperf maven indent libuuid-devel krb5-devel libgsasl-devel expat-devel libxml2-devel perl-ExtUtils-Embed pam-devel python-devel libcurl-devel snappy-devel thrift-devel libyaml-devel libevent-devel bzip2-devel openssl-devel openldap-devel protobuf-devel readline-devel net-snmp-devel apr-devel libesmtp-devel xerces-c-devel python-pip json-c-devel libhdfs3-devel apache-ivy java-1.7.0-openjdk-devel libffi libffi-devel unzip openssh-clients openssh-server R tcpdump wget bsdtar perl-JSON \\\n && yum clean all\n#  install python module\nRUN yum makecache \\\n && yum install -y postgresql-devel \\\n && pip install pip --retries=50 --timeout=300 --upgrade \\\n && pip install pg8000 simplejson unittest2 pycrypto pygresql pyyaml lockfile paramiko psi --retries=50 --timeout=300 \\\n && pip install http://darcs.idyll.org/~t/projects/figleaf-0.6.1.tar.gz --retries=50 --timeout=300 \\\n && pip install http://sourceforge.net/projects/pychecker/files/pychecker/0.8.19/pychecker-0.8.19.tar.gz/download --retries=50 --timeout=300 \\\n && pip install numpy scipy matplotlib plotly psycopg2 queries pandas sqlalchemy redis python-dotenv --retries=50 --timeout=300 \\\n && yum clean all\n#  setup ssh server and keys for root\nRUN sshd-keygen \\\n && ssh-keygen -t rsa -N \"\" -f ~/.ssh/id_rsa \\\n && cat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys \\\n && chmod 0600 ~/.ssh/authorized_keys\n#  setup JAVA_HOME for all users\nRUN echo \"#!/bin/sh\" > /etc/profile.d/java.sh \\\n && echo \"export JAVA_HOME=/etc/alternatives/java_sdk\" >> /etc/profile.d/java.sh \\\n && chmod a+x /etc/profile.d/java.sh\n# link correct cmake\nRUN cd /usr/bin/ \\\n && ln -s cmake3 cmake \\\n && ln -s ccmake3 ccmake \\\n && ln -s cpack3 cpack \\\n && ln -s ctest3 ctest\n#  install libyarn\n# RUN mkdir -p /tmp/build && \\\n#  cd /tmp/build && git clone --depth=1 https://github.com/apache/incubator-hawq.git . && cd depends/libyarn && mkdir build && cd build && \\\n#  ../bootstrap --prefix=/usr && make -j4 && make install && ldconfig && \\\n#  rm -rf /tmp/build\n#  install libhdfs3\n# RUN mkdir -p /tmp/build && \\\n#  cd /tmp/build && git clone --recursive --depth=1 https://github.com/apache/incubator-hawq.git . && cd depends/libhdfs3 && mkdir build && cd build && \\\n# ../bootstrap --prefix=/data/hdb2 && make && make install && ldconfig && \\\n# rm -rf /tmp/build\n#  sudo should not require tty\nRUN sed -i -e 's|Defaults requiretty|#Defaults requiretty|' /etc/sudoers\n#  set USER env\nRUN echo \"#!/bin/bash\" > /etc/profile.d/user.sh \\\n && echo \"export USER=\\`whoami\\`\" >> /etc/profile.d/user.sh \\\n && chmod a+x /etc/profile.d/user.sh\nENV BASEDIR=\"/data\"\nRUN mkdir -p /data \\\n && chmod 777 /data\nUSER root\n#  install HDP 2.4.0.0\nRUN curl -L \"http://public-repo-1.hortonworks.com/HDP/centos7/2.x/updates/2.4.0.0/hdp.repo\" -o /etc/yum.repos.d/hdp.repo \\\n && yum -y update \\\n && yum install -y hadoop hadoop-hdfs hadoop-libhdfs hadoop-yarn hadoop-mapreduce hadoop-client hdp-select \\\n && yum clean all\nRUN ln -s /usr/hdp/current/hadoop-hdfs-namenode/../hadoop/sbin/hadoop-daemon.sh /usr/bin/hadoop-daemon.sh\n#  create user gpadmin since HAWQ cannot run under root\nRUN groupadd -g 1000 gpadmin \\\n && useradd -u 1000 -g 1000 -G hdfs,hadoop gpadmin \\\n && echo \"gpadmin ALL=(ALL) NOPASSWD: ALL\" > /etc/sudoers.d/gpadmin\nCOPY conf/* /etc/hadoop/conf/\nCOPY entrypoint.sh /usr/bin/entrypoint.sh\nCOPY start-hdfs.sh /usr/bin/start-hdfs.sh\nCOPY start-hdb2.sh /usr/bin/start-hdb.sh\nCOPY start-zepp.sh /usr/bin/start-zepp.sh\nCOPY start-scdf.sh /usr/bin/start-scdf.sh\nCOPY madlib-1.9-1.x86_64.rpm /tmp/madlib-1.9-1.x86_64.rpm\n#  Install HDB2\nUSER gpadmin\n#  setup ssh client keys for gpadmin\nRUN ssh-keygen -t rsa -N \"\" -f ~/.ssh/id_rsa \\\n && cat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys \\\n && chmod 0600 ~/.ssh/authorized_keys\nRUN git clone https://github.com/apache/incubator-hawq.git /data/hawq \\\n && cd /data/hawq \\\n && ./configure --prefix=/data/hdb2 --with-python --with-r --with-ldap --with-pam --with-gssapi --with-openssl --with-krb5 --enable-orca --enable-debug \\\n && make -j4 \\\n && make install \\\n && make clean\n#  Install PXf\nUSER root\nRUN cd /data/hawq/pxf \\\n && ./gradlew clean tomcatRpm release -x test -Dhd=hdp \\\n && cd /data/hawq/pxf/distributions/ \\\n && rpm -i *.rpm \\\n && cd /data/hawq/pxf/build/distributions/ \\\n && rpm -i --force --nodeps pxf*.rpm \\\n && cd /data/hawq/pxf/ \\\n && ./gradlew clean \\\n && rm -rf /data/hawq/pxf/distributions \\\n && rm -rf /data/hawq \\\n && yum history sync \\\n && yum clean all\n#  Adding PXF User to superuser group for HDFS access\nRUN groupadd supergroup \\\n && usermod -G supergroup -a pxf\n#  Install SCDF\nRUN git clone https://github.com/spring-cloud/spring-cloud-dataflow.git /data/scdf \\\n && cd /data/scdf \\\n && ./mvnw clean install \\\n && cp /data/scdf/spring-cloud-dataflow-server-local/target/spring-cloud-dataflow-server-local-*.BUILD-SNAPSHOT.jar /data/ \\\n && cp /data/scdf/spring-cloud-dataflow-shell/target/spring-cloud-dataflow-shell-*.BUILD-SNAPSHOT.jar /data/ \\\n && ./mvnw clean \\\n && rm -rf /data/scdf\nUSER gpadmin\nWORKDIR /data\n# EXPOSE 5432 22 8020 51200\nENTRYPOINT [\"entrypoint.sh\"]\nCMD [\"bash\"]\n","injectedSmells":[],"originalDockerfileHash":"383b8cbef50f776ec36186172dcc8e12","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM centos:7\nMAINTAINER Jemish Patel <jpatel@pivotal.io>\n#   install document with yum\nRUN sed -i 's/tsflags=nodocs//g' /etc/yum.conf\n#   add yum repo for libhdfs3\n#  RUN curl -L \"https://bintray.com/wangzw/rpm/rpm\" -o /etc/yum.repos.d/bintray-wangzw-rpm.repo\nRUN rpm -iUvh http://dl.fedoraproject.org/pub/epel/7/x86_64/e/epel-release-7-8.noarch.rpm \\\n && yum history sync \\\n && yum -y update \\\n && yum clean all\n#   install software we need to build\nRUN yum -y swap -- remove systemd-container systemd-container-libs -- install systemd systemd-libs \\\n && yum makecache \\\n && yum install -y man passwd sudo tar which git mlocate links make bzip2 net-tools autoconf automake libtool m4 gcc gcc-c++ gdb bison flex cmake3 gperf maven indent libuuid-devel krb5-devel libgsasl-devel expat-devel libxml2-devel perl-ExtUtils-Embed pam-devel python-devel libcurl-devel snappy-devel thrift-devel libyaml-devel libevent-devel bzip2-devel openssl-devel openldap-devel protobuf-devel readline-devel net-snmp-devel apr-devel libesmtp-devel xerces-c-devel python-pip json-c-devel libhdfs3-devel apache-ivy java-1.7.0-openjdk-devel libffi libffi-devel unzip openssh-clients openssh-server R tcpdump wget bsdtar perl-JSON \\\n && yum clean all\n#   install python module\nRUN yum makecache \\\n && yum install -y postgresql-devel \\\n && pip install pip --retries=50 --timeout=300 --upgrade \\\n && pip install pg8000 simplejson unittest2 pycrypto pygresql pyyaml lockfile paramiko psi --retries=50 --timeout=300 \\\n && pip install http://darcs.idyll.org/~t/projects/figleaf-0.6.1.tar.gz --retries=50 --timeout=300 \\\n && pip install http://sourceforge.net/projects/pychecker/files/pychecker/0.8.19/pychecker-0.8.19.tar.gz/download --retries=50 --timeout=300 \\\n && pip install numpy scipy matplotlib plotly psycopg2 queries pandas sqlalchemy redis python-dotenv --retries=50 --timeout=300 \\\n && yum clean all\n#   setup ssh server and keys for root\nRUN sshd-keygen \\\n && ssh-keygen -t rsa -N \"\" -f ~/.ssh/id_rsa \\\n && cat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys \\\n && chmod 0600 ~/.ssh/authorized_keys\n#   setup JAVA_HOME for all users\nRUN echo \"#!/bin/sh\" > /etc/profile.d/java.sh \\\n && echo \"export JAVA_HOME=/etc/alternatives/java_sdk\" >> /etc/profile.d/java.sh \\\n && chmod a+x /etc/profile.d/java.sh\n#  link correct cmake\nRUN cd /usr/bin/ \\\n && ln -s cmake3 cmake \\\n && ln -s ccmake3 ccmake \\\n && ln -s cpack3 cpack \\\n && ln -s ctest3 ctest\n#   install libyarn\n#  RUN mkdir -p /tmp/build && \\\n#   cd /tmp/build && git clone --depth=1 https://github.com/apache/incubator-hawq.git . && cd depends/libyarn && mkdir build && cd build && \\\n#   ../bootstrap --prefix=/usr && make -j4 && make install && ldconfig && \\\n#   rm -rf /tmp/build\n#   install libhdfs3\n#  RUN mkdir -p /tmp/build && \\\n#   cd /tmp/build && git clone --recursive --depth=1 https://github.com/apache/incubator-hawq.git . && cd depends/libhdfs3 && mkdir build && cd build && \\\n#  ../bootstrap --prefix=/data/hdb2 && make && make install && ldconfig && \\\n#  rm -rf /tmp/build\n#   sudo should not require tty\nRUN sed -i -e 's|Defaults requiretty|#Defaults requiretty|' /etc/sudoers\n#   set USER env\nRUN echo \"#!/bin/bash\" > /etc/profile.d/user.sh \\\n && echo \"export USER=\\`whoami\\`\" >> /etc/profile.d/user.sh \\\n && chmod a+x /etc/profile.d/user.sh\nENV BASEDIR=\"/data\"\nRUN mkdir -p /data \\\n && chmod 777 /data\nUSER root\n#   install HDP 2.4.0.0\nRUN curl -L \"http://public-repo-1.hortonworks.com/HDP/centos7/2.x/updates/2.4.0.0/hdp.repo\" -o /etc/yum.repos.d/hdp.repo \\\n && yum -y update \\\n && yum install -y hadoop hadoop-hdfs hadoop-libhdfs hadoop-yarn hadoop-mapreduce hadoop-client hdp-select \\\n && yum clean all\nRUN ln -s /usr/hdp/current/hadoop-hdfs-namenode/../hadoop/sbin/hadoop-daemon.sh /usr/bin/hadoop-daemon.sh\n#   create user gpadmin since HAWQ cannot run under root\nRUN groupadd -g 1000 gpadmin \\\n && useradd -u 1000 -g 1000 -G hdfs,hadoop gpadmin \\\n && echo \"gpadmin ALL=(ALL) NOPASSWD: ALL\" > /etc/sudoers.d/gpadmin\nCOPY conf/* /etc/hadoop/conf/\nCOPY entrypoint.sh /usr/bin/entrypoint.sh\nCOPY start-hdfs.sh /usr/bin/start-hdfs.sh\nCOPY start-hdb2.sh /usr/bin/start-hdb.sh\nCOPY start-zepp.sh /usr/bin/start-zepp.sh\nCOPY start-scdf.sh /usr/bin/start-scdf.sh\nCOPY madlib-1.9-1.x86_64.rpm /tmp/madlib-1.9-1.x86_64.rpm\n#   Install HDB2\nUSER gpadmin\n#   setup ssh client keys for gpadmin\nRUN ssh-keygen -t rsa -N \"\" -f ~/.ssh/id_rsa \\\n && cat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys \\\n && chmod 0600 ~/.ssh/authorized_keys\nRUN git clone https://github.com/apache/incubator-hawq.git /data/hawq \\\n && cd /data/hawq \\\n && ./configure --prefix=/data/hdb2 --with-python --with-r --with-ldap --with-pam --with-gssapi --with-openssl --with-krb5 --enable-orca --enable-debug \\\n && make -j4 \\\n && make install \\\n && make clean\n#   Install PXf\nUSER root\nRUN cd /data/hawq/pxf \\\n && ./gradlew clean tomcatRpm release -x test -Dhd=hdp \\\n && cd /data/hawq/pxf/distributions/ \\\n && rpm -i *.rpm \\\n && cd /data/hawq/pxf/build/distributions/ \\\n && rpm -i --force --nodeps pxf*.rpm \\\n && cd /data/hawq/pxf/ \\\n && ./gradlew clean \\\n && rm -rf /data/hawq/pxf/distributions \\\n && rm -rf /data/hawq \\\n && yum history sync \\\n && yum clean all\n#   Adding PXF User to superuser group for HDFS access\nRUN groupadd supergroup \\\n && usermod -G supergroup -a pxf\n#   Install SCDF\nRUN git clone https://github.com/spring-cloud/spring-cloud-dataflow.git /data/scdf \\\n && cd /data/scdf \\\n && ./mvnw clean install \\\n && cp /data/scdf/spring-cloud-dataflow-server-local/target/spring-cloud-dataflow-server-local-*.BUILD-SNAPSHOT.jar /data/ \\\n && cp /data/scdf/spring-cloud-dataflow-shell/target/spring-cloud-dataflow-shell-*.BUILD-SNAPSHOT.jar /data/ \\\n && ./mvnw clean \\\n && rm -rf /data/scdf\nUSER gpadmin\nWORKDIR /data\n#  EXPOSE 5432 22 8020 51200\nENTRYPOINT [\"entrypoint.sh\"]\nCMD [\"bash\"]\n","originalDockerfileUglifiedHash":"b4292d246b29968e408054807e7d35e7","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/2c92e3f1e96bb33fc7f29394a5eb7f11e0e7f088.dockerfile"}