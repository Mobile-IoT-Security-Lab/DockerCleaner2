{"seed":1199703097,"processedDockerfileHash":"6303124be9e89ac7a5b7ace0e5c77c09","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Copyright 2018 Cargill Incorporated\n#\n#   Licensed under the Apache License, Version 2.0 (the \"License\");\n#   you may not use this file except in compliance with the License.\n#   You may obtain a copy of the License at\n#\n#       http://www.apache.org/licenses/LICENSE-2.0\n#\n#   Unless required by applicable law or agreed to in writing, software\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#   See the License for the specific language governing permissions and\n#   limitations under the License.\n#   docker build -f examples/noop_go/Dockerfile-installed-bionic -t sawtooth-noop-tp-go .\n#   -------------=== noop-tp-go build ===-------------\nFROM ubuntu:bionic AS noop-tp-go-builder\nENV VERSION=\"AUTO_STRICT\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends gnupg=2.2.4-1ubuntu1.6 -y\nRUN echo \"deb [arch=amd64] http://repo.sawtooth.me/ubuntu/ci bionic universe\" >> /etc/apt/sources.list \\\n && echo \"deb http://archive.ubuntu.com/ubuntu bionic-backports universe\" >> /etc/apt/sources.list \\\n && echo 'deb http://ppa.launchpad.net/gophers/archive/ubuntu bionic main' >> /etc/apt/sources.list \\\n && (apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 8AA7AF1F1091A5FD || apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 8AA7AF1F1091A5FD ) \\\n && (apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 308C15A29AD198E9 || apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 308C15A29AD198E9 ) \\\n && apt-get update \\\n && apt-get install --no-install-recommends build-essential=12.4ubuntu1 golang-1.11-go git=1:2.17.1-1ubuntu0.17 libssl-dev=1.1.1-1ubuntu2.1~18.04.21 libzmq3-dev=4.2.5-1ubuntu0.2 openssl=1.1.1-1ubuntu2.1~18.04.21 python3-grpcio-tools -y -q \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\nENV GOPATH=\"/go:/go/src/github.com/hyperledger/sawtooth-sdk-go:/go/src/github.com/hyperledger/sawtooth-sdk-go/examples/noop_go/\"\nENV PATH=\"$PATH:/project/bin:/go/bin:/usr/lib/go-1.11/bin\"\nRUN mkdir /go\nRUN go get -u github.com/golang/protobuf/proto github.com/golang/protobuf/protoc-gen-go github.com/pebbe/zmq4 github.com/brianolson/cbor_go github.com/satori/go.uuid github.com/btcsuite/btcd/btcec github.com/jessevdk/go-flags github.com/pelletier/go-toml github.com/golang/mock/gomock github.com/golang/mock/mockgen golang.org/x/crypto/ripemd160 golang.org/x/crypto/ssh\nCOPY . /go/src/github.com/hyperledger/sawtooth-sdk-go\nWORKDIR /go/src/github.com/hyperledger/sawtooth-sdk-go\nRUN go generate \\\n && cd examples/noop_go \\\n && if [ -d \"bin\" ] ; then rm -rf bin ; fi \\\n && mkdir bin \\\n && cd src/sawtooth_noop \\\n && go build -o /go/src/github.com/hyperledger/sawtooth-sdk-go/examples/noop_go/bin/noop-tp-go\nRUN pkg=noop_go \\\n && GO_TP_DASH=$( echo $pkg | sed s/_/-/ ;) \\\n && CHANGELOG_DIR=\"debian/usr/share/doc/sawtooth-tp-$GO_TP_DASH\" \\\n && ST_VERSION=$( bin/get_version ;) \\\n && cd examples/$pkg \\\n && if [ -d \"debian\" ] ; then rm -rf debian ; fi \\\n && mkdir -p debian/DEBIAN \\\n && mkdir -p $CHANGELOG_DIR \\\n && cp packaging/ubuntu/* debian \\\n && sed -i -e\"s/@VERSION@/$ST_VERSION/\" debian/control \\\n && sed -i -e\"s/@VERSION@/$ST_VERSION/\" debian/changelog \\\n && cp debian/changelog $CHANGELOG_DIR \\\n && mv debian/changelog $CHANGELOG_DIR/changelog.Debian \\\n && gzip --best $CHANGELOG_DIR/changelog \\\n && gzip --best $CHANGELOG_DIR/changelog.Debian \\\n && mv debian/control debian/DEBIAN \\\n && mv debian/postinst debian/DEBIAN \\\n && PACKAGENAME=$( awk '/^Package:/ { print $2 }' debian/DEBIAN/control ;) \\\n && PACKAGEVERSION=$( dpkg-parsechangelog -S version -l $CHANGELOG_DIR/changelog.gz ;) \\\n && PACKAGEARCH=$( dpkg-architecture -qDEB_BUILD_ARCH ;) \\\n && mkdir debian/usr/bin \\\n && cp -R bin/ debian/usr/ \\\n && cp -R packaging/systemd/* debian/ \\\n && fakeroot dpkg-deb --build debian \\\n && echo -- \\\n && echo \"${PACKAGENAME}_${PACKAGEVERSION}_${PACKAGEARCH}.deb\" \\\n && echo -- \\\n && mv debian.deb \"${PACKAGENAME}_${PACKAGEVERSION}_${PACKAGEARCH}.deb\"\n#   -------------=== sawtooth-noop-tp-go build ===-------------\nFROM ubuntu:bionic\nRUN apt-get update \\\n && apt-get install --no-install-recommends systemd=237-3ubuntu10.57 -y\nCOPY --from=noop-tp-go-builder /go/src/github.com/hyperledger/sawtooth-sdk-go/examples/noop_go/sawtooth-noop-tp-go_*.deb /tmp\nRUN apt-get update \\\n && dpkg -i /tmp/sawtooth-*.deb || true \\\n && apt-get install --no-install-recommends -f -y\nCMD [\"noop-tp-go\", \"-vv\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Copyright 2018 Cargill Incorporated\n#\n#  Licensed under the Apache License, Version 2.0 (the \"License\");\n#  you may not use this file except in compliance with the License.\n#  You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n#  Unless required by applicable law or agreed to in writing, software\n#  distributed under the License is distributed on an \"AS IS\" BASIS,\n#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#  See the License for the specific language governing permissions and\n#  limitations under the License.\n#  docker build -f examples/noop_go/Dockerfile-installed-bionic -t sawtooth-noop-tp-go .\n#  -------------=== noop-tp-go build ===-------------\nFROM ubuntu:bionic AS noop-tp-go-builder\nENV VERSION=\"AUTO_STRICT\"\nRUN apt-get update \\\n && apt-get install gnupg -y\nRUN echo \"deb [arch=amd64] http://repo.sawtooth.me/ubuntu/ci bionic universe\" >> /etc/apt/sources.list \\\n && echo \"deb http://archive.ubuntu.com/ubuntu bionic-backports universe\" >> /etc/apt/sources.list \\\n && echo 'deb http://ppa.launchpad.net/gophers/archive/ubuntu bionic main' >> /etc/apt/sources.list \\\n && (apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 8AA7AF1F1091A5FD || apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 8AA7AF1F1091A5FD ) \\\n && (apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 308C15A29AD198E9 || apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 308C15A29AD198E9 ) \\\n && apt-get update \\\n && apt-get install build-essential golang-1.11-go git libssl-dev libzmq3-dev openssl python3-grpcio-tools -y -q \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\nENV GOPATH=\"/go:/go/src/github.com/hyperledger/sawtooth-sdk-go:/go/src/github.com/hyperledger/sawtooth-sdk-go/examples/noop_go/\"\nENV PATH=\"$PATH:/project/bin:/go/bin:/usr/lib/go-1.11/bin\"\nRUN mkdir /go\nRUN go get -u github.com/golang/protobuf/proto github.com/golang/protobuf/protoc-gen-go github.com/pebbe/zmq4 github.com/brianolson/cbor_go github.com/satori/go.uuid github.com/btcsuite/btcd/btcec github.com/jessevdk/go-flags github.com/pelletier/go-toml github.com/golang/mock/gomock github.com/golang/mock/mockgen golang.org/x/crypto/ripemd160 golang.org/x/crypto/ssh\nCOPY . /go/src/github.com/hyperledger/sawtooth-sdk-go\nWORKDIR /go/src/github.com/hyperledger/sawtooth-sdk-go\nRUN go generate \\\n && cd examples/noop_go \\\n && if [ -d \"bin\" ] ; then rm -rf bin ; fi \\\n && mkdir bin \\\n && cd src/sawtooth_noop \\\n && go build -o /go/src/github.com/hyperledger/sawtooth-sdk-go/examples/noop_go/bin/noop-tp-go\nRUN pkg=noop_go \\\n && GO_TP_DASH=$( echo $pkg | sed s/_/-/ ;) \\\n && CHANGELOG_DIR=\"debian/usr/share/doc/sawtooth-tp-$GO_TP_DASH\" \\\n && ST_VERSION=$( bin/get_version ;) \\\n && cd examples/$pkg \\\n && if [ -d \"debian\" ] ; then rm -rf debian ; fi \\\n && mkdir -p debian/DEBIAN \\\n && mkdir -p $CHANGELOG_DIR \\\n && cp packaging/ubuntu/* debian \\\n && sed -i -e\"s/@VERSION@/$ST_VERSION/\" debian/control \\\n && sed -i -e\"s/@VERSION@/$ST_VERSION/\" debian/changelog \\\n && cp debian/changelog $CHANGELOG_DIR \\\n && mv debian/changelog $CHANGELOG_DIR/changelog.Debian \\\n && gzip --best $CHANGELOG_DIR/changelog \\\n && gzip --best $CHANGELOG_DIR/changelog.Debian \\\n && mv debian/control debian/DEBIAN \\\n && mv debian/postinst debian/DEBIAN \\\n && PACKAGENAME=$( awk '/^Package:/ { print $2 }' debian/DEBIAN/control ;) \\\n && PACKAGEVERSION=$( dpkg-parsechangelog -S version -l $CHANGELOG_DIR/changelog.gz ;) \\\n && PACKAGEARCH=$( dpkg-architecture -qDEB_BUILD_ARCH ;) \\\n && mkdir debian/usr/bin \\\n && cp -R bin/ debian/usr/ \\\n && cp -R packaging/systemd/* debian/ \\\n && fakeroot dpkg-deb --build debian \\\n && echo -- \\\n && echo \"${PACKAGENAME}_${PACKAGEVERSION}_${PACKAGEARCH}.deb\" \\\n && echo -- \\\n && mv debian.deb \"${PACKAGENAME}_${PACKAGEVERSION}_${PACKAGEARCH}.deb\"\n#  -------------=== sawtooth-noop-tp-go build ===-------------\nFROM ubuntu:bionic\nRUN apt-get update \\\n && apt-get install systemd -y\nCOPY --from=noop-tp-go-builder /go/src/github.com/hyperledger/sawtooth-sdk-go/examples/noop_go/sawtooth-noop-tp-go_*.deb /tmp\nRUN apt-get update \\\n && dpkg -i /tmp/sawtooth-*.deb || true \\\n && apt-get install -f -y\nCMD [\"noop-tp-go\", \"-vv\"]\n","injectedSmells":[],"originalDockerfileHash":"4166e1271591bdf6a667bf0a47820439","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Copyright 2018 Cargill Incorporated\n#\n#   Licensed under the Apache License, Version 2.0 (the \"License\");\n#   you may not use this file except in compliance with the License.\n#   You may obtain a copy of the License at\n#\n#       http://www.apache.org/licenses/LICENSE-2.0\n#\n#   Unless required by applicable law or agreed to in writing, software\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#   See the License for the specific language governing permissions and\n#   limitations under the License.\n#   docker build -f examples/noop_go/Dockerfile-installed-bionic -t sawtooth-noop-tp-go .\n#   -------------=== noop-tp-go build ===-------------\nFROM ubuntu:bionic AS noop-tp-go-builder\nENV VERSION=\"AUTO_STRICT\"\nRUN apt-get update \\\n && apt-get install gnupg -y\nRUN echo \"deb [arch=amd64] http://repo.sawtooth.me/ubuntu/ci bionic universe\" >> /etc/apt/sources.list \\\n && echo \"deb http://archive.ubuntu.com/ubuntu bionic-backports universe\" >> /etc/apt/sources.list \\\n && echo 'deb http://ppa.launchpad.net/gophers/archive/ubuntu bionic main' >> /etc/apt/sources.list \\\n && (apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 8AA7AF1F1091A5FD || apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 8AA7AF1F1091A5FD ) \\\n && (apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 308C15A29AD198E9 || apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 308C15A29AD198E9 ) \\\n && apt-get update \\\n && apt-get install build-essential golang-1.11-go git libssl-dev libzmq3-dev openssl python3-grpcio-tools -y -q \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\nENV GOPATH=\"/go:/go/src/github.com/hyperledger/sawtooth-sdk-go:/go/src/github.com/hyperledger/sawtooth-sdk-go/examples/noop_go/\"\nENV PATH=\"$PATH:/project/bin:/go/bin:/usr/lib/go-1.11/bin\"\nRUN mkdir /go\nRUN go get -u github.com/golang/protobuf/proto github.com/golang/protobuf/protoc-gen-go github.com/pebbe/zmq4 github.com/brianolson/cbor_go github.com/satori/go.uuid github.com/btcsuite/btcd/btcec github.com/jessevdk/go-flags github.com/pelletier/go-toml github.com/golang/mock/gomock github.com/golang/mock/mockgen golang.org/x/crypto/ripemd160 golang.org/x/crypto/ssh\nCOPY . /go/src/github.com/hyperledger/sawtooth-sdk-go\nWORKDIR /go/src/github.com/hyperledger/sawtooth-sdk-go\nRUN go generate \\\n && cd examples/noop_go \\\n && if [ -d \"bin\" ] ; then rm -rf bin ; fi \\\n && mkdir bin \\\n && cd src/sawtooth_noop \\\n && go build -o /go/src/github.com/hyperledger/sawtooth-sdk-go/examples/noop_go/bin/noop-tp-go\nRUN pkg=noop_go \\\n && GO_TP_DASH=$( echo $pkg | sed s/_/-/ ;) \\\n && CHANGELOG_DIR=\"debian/usr/share/doc/sawtooth-tp-$GO_TP_DASH\" \\\n && ST_VERSION=$( bin/get_version ;) \\\n && cd examples/$pkg \\\n && if [ -d \"debian\" ] ; then rm -rf debian ; fi \\\n && mkdir -p debian/DEBIAN \\\n && mkdir -p $CHANGELOG_DIR \\\n && cp packaging/ubuntu/* debian \\\n && sed -i -e\"s/@VERSION@/$ST_VERSION/\" debian/control \\\n && sed -i -e\"s/@VERSION@/$ST_VERSION/\" debian/changelog \\\n && cp debian/changelog $CHANGELOG_DIR \\\n && mv debian/changelog $CHANGELOG_DIR/changelog.Debian \\\n && gzip --best $CHANGELOG_DIR/changelog \\\n && gzip --best $CHANGELOG_DIR/changelog.Debian \\\n && mv debian/control debian/DEBIAN \\\n && mv debian/postinst debian/DEBIAN \\\n && PACKAGENAME=$( awk '/^Package:/ { print $2 }' debian/DEBIAN/control ;) \\\n && PACKAGEVERSION=$( dpkg-parsechangelog -S version -l $CHANGELOG_DIR/changelog.gz ;) \\\n && PACKAGEARCH=$( dpkg-architecture -qDEB_BUILD_ARCH ;) \\\n && mkdir debian/usr/bin \\\n && cp -R bin/ debian/usr/ \\\n && cp -R packaging/systemd/* debian/ \\\n && fakeroot dpkg-deb --build debian \\\n && echo -- \\\n && echo \"${PACKAGENAME}_${PACKAGEVERSION}_${PACKAGEARCH}.deb\" \\\n && echo -- \\\n && mv debian.deb \"${PACKAGENAME}_${PACKAGEVERSION}_${PACKAGEARCH}.deb\"\n#   -------------=== sawtooth-noop-tp-go build ===-------------\nFROM ubuntu:bionic\nRUN apt-get update \\\n && apt-get install systemd -y\nCOPY --from=noop-tp-go-builder /go/src/github.com/hyperledger/sawtooth-sdk-go/examples/noop_go/sawtooth-noop-tp-go_*.deb /tmp\nRUN apt-get update \\\n && dpkg -i /tmp/sawtooth-*.deb || true \\\n && apt-get install -f -y\nCMD [\"noop-tp-go\", \"-vv\"]\n","originalDockerfileUglifiedHash":"917e07585dd518ca254eb7c16a7d02fa","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/9f0df5e1cdea7c8264e36414674f38ba49e0a15b.dockerfile"}