{"seed":1021392377,"processedDockerfileHash":"fbb064a3efe033be75ee9e7007d3d468","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Licensed to the Apache Software Foundation (ASF) under one\n#   or more contributor license agreements.  See the NOTICE file\n#   distributed with this work for additional information\n#   regarding copyright ownership.  The ASF licenses this file\n#   to you under the Apache License, Version 2.0 (the\n#   \"License\"); you may not use this file except in compliance\n#   with the License.  You may obtain a copy of the License at\n#   \n#     http://www.apache.org/licenses/LICENSE-2.0\n#   \n#   Unless required by applicable law or agreed to in writing,\n#   software distributed under the License is distributed on an\n#   \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n#   KIND, either express or implied.  See the License for the\n#   specific language governing permissions and limitations\n#   under the License.\n#   Celix android builder\n#   \n#   Howto:\n#\n#   Build docker image -> docker build -t celix-android-builder - < Dockerfile.Android\n#   Run docker image -> docker run --name builder celix-android-builder\n#   Extract filesystem -> docker export builder > fs.tar\n#   Extract /build dir from tar -> tar xf fs.tar build/output/celix\n#\n#\nFROM ubuntu:14.04\nMAINTAINER Bjoern Petri <bjoern.petri@sundevil.de>\nENV ARCH=\"armv7\"\nENV PLATFORM=\"android-18\"\nENV ANDROID_STANDALONE_TOOLCHAIN=\"/build/toolchain-arm\"\nENV ANDROID_CMAKE_HOME=\"/build/resources/android-cmake\"\nENV SYSROOT=\"$ANDROID_STANDALONE_TOOLCHAIN/sysroot\"\nENV PATH=\"$ANDROID_STANDALONE_TOOLCHAIN/bin:$ANDROID_STANDALONE_TOOLCHAIN/usr/local/bin:$PATH\"\nENV PATH=\"$PATH:/build/resources/android-ndk-r10e\"\nENV CROSS_COMPILE=\"arm-linux-androideabi\"\nENV CC=\"arm-linux-androideabi-gcc\"\nENV CCX=\"arm-linux-androideabi-g++\"\nENV AR=\"arm-linux-androideabi-ar\"\nENV AS=\"arm-linux-androideabi-as\"\nENV LD=\"arm-linux-androideabi-ld\"\nENV RANLIB=\"arm-linux-androideabi-ranlib\"\nENV NM=\"arm-linux-androideabi-nm\"\nENV STRIP=\"arm-linux-androideabi-strip\"\nENV CHOST=\"arm-linux-androideabi\"\n#   install needed tools\nRUN apt-get update \\\n && apt-get install --no-install-recommends software-properties-common=0.92.37.8 -y \\\n && add-apt-repository ppa:george-edison55/cmake-3.x \\\n && apt-get clean\nRUN apt-get update \\\n && apt-get install --no-install-recommends automake=1:1.14.1-2ubuntu1 build-essential=11.6ubuntu6 wget=1.15-1ubuntu1.14.04.5 p7zip-full=9.20.1~dfsg.1-4+deb7u3build0.14.04.1 bash=4.3-7ubuntu1.7 curl=7.35.0-1ubuntu2.20 cmake=2.8.12.2-0ubuntu3 git=1:1.9.1-1ubuntu0.10 vim=2:7.4.052-1ubuntu3.1 zip=3.0-8 -y \\\n && apt-get clean\nRUN mkdir -p build/output\nWORKDIR /build/resources\n#   Extracting ndk/sdk\n#   create standalone toolchain\nRUN curl -L -O http://dl.google.com/android/ndk/android-ndk-r10e-linux-x86_64.bin \\\n && chmod a+x android-ndk-r10e-linux-x86_64.bin \\\n && 7z x android-ndk-r10e-linux-x86_64.bin > /dev/null \\\n && bash android-ndk-r10e/build/tools/make-standalone-toolchain.sh --verbose --platform=$PLATFORM --install-dir=$ANDROID_STANDALONE_TOOLCHAIN --arch=arm --toolchain=arm-linux-androideabi-4.9 --system=linux-x86_64\n#   uuid\nRUN curl -L -O http://downloads.sourceforge.net/libuuid/libuuid-1.0.3.tar.gz \\\n && tar -xvzf libuuid-1.0.3.tar.gz \\\n && cd libuuid-1.0.3 \\\n && ./configure --host=arm-linux-androideabi --disable-shared --enable-static --prefix=/build/output/uuid \\\n && make \\\n && make install\n#   zlib\nRUN curl -L -O http://zlib.net/zlib-1.2.11.tar.gz \\\n && tar -xvzf zlib-*.tar.gz \\\n && cd zlib-* \\\n && ./configure --prefix=/build/output/zlib \\\n && make \\\n && make install\n#   curl\nRUN curl -L -O http://curl.haxx.se/download/curl-7.38.0.tar.gz \\\n && tar -xvzf curl-7.38.0.tar.gz \\\n && cd curl-7.38.0 \\\n && ./configure --host=arm-linux-androideabi --disable-shared --enable-static --disable-dependency-tracking --with-zlib=`pwd `/../../output/zlib --without-ca-bundle --without-ca-path --disable-ftp --disable-file --disable-ldap --disable-ldaps --disable-rtsp --disable-proxy --disable-dict --disable-telnet --disable-tftp --disable-pop3 --disable-imap --disable-smtp --disable-gopher --disable-sspi --disable-manual --target=arm-linux-androideabi --build=x86_64-unknown-linux-gnu --prefix=/build/output/curl \\\n && make \\\n && make install\n#   jansson\nRUN curl -L -O http://www.digip.org/jansson/releases/jansson-2.7.tar.bz2 \\\n && tar -xvjf jansson-2.7.tar.bz2 \\\n && cd jansson-2.7 \\\n && ./configure --host=arm-linux-androideabi --disable-shared --enable-static --prefix=/build/output/jansson \\\n && make \\\n && make install\n#   libmxl2\nRUN curl -L -O http://xmlsoft.org/sources/libxml2-2.7.2.tar.gz \\\n && curl -L -O https://raw.githubusercontent.com/bpetri/libxml2_android/master/config.guess \\\n && curl -L -O https://raw.githubusercontent.com/bpetri/libxml2_android/master/config.sub \\\n && curl -L -O https://raw.githubusercontent.com/bpetri/libxml2_android/master/libxml2.patch \\\n && tar -xvzf libxml2-2.7.2.tar.gz \\\n && cp config.guess config.sub libxml2-2.7.2 \\\n && patch -p1 < libxml2.patch \\\n && cd libxml2-2.7.2 \\\n && ./configure --host=arm-linux-androideabi --disable-shared --enable-static --prefix=/build/output/libxml2 \\\n && make \\\n && make install\n#   libffi\nRUN curl -L -O ftp://sourceware.org/pub/libffi/libffi-3.2.1.tar.gz \\\n && tar -xvzf libffi-3.2.1.tar.gz \\\n && cd libffi-3.2.1 \\\n && ./configure --host=arm-linux-androideabi --disable-shared --enable-static --prefix=/build/output/libffi \\\n && echo \"#define FFI_MMAP_EXEC_WRIT 1\" >> ./arm-unknown-linux-androideabi/fficonfig.h \\\n && echo \"#define FFI_MMAP_EXEC_SELINUX 0\" >> ./arm-unknown-linux-androideabi/fficonfig.h \\\n && make \\\n && make install\n#   finally add celix src\nRUN git clone -b develop --single-branch https://github.com/apache/celix.git celix\nCMD mkdir -p celix/build-android \\\n && cd celix/build-android \\\n && cmake -DANDROID=TRUE -DENABLE_TESTING=OFF -DBUILD_EXAMPLES=OFF -DBUILD_DEPENDENCY_MANAGER_CXX=OFF -DBUILD_REMOTE_SERVICE_ADMIN=ON -DBUILD_REMOTE_SHELL=ON -DBUILD_RSA_DISCOVERY_CONFIGURED=ON -DBUILD_RSA_DISCOVERY_ETCD=ON -DBUILD_RSA_EXAMPLES=ON -DBUILD_RSA_REMOTE_SERVICE_ADMIN_HTTP=ON -DBUILD_RSA_REMOTE_SERVICE_ADMIN_DFI=OFF -DBUILD_RSA_TOPOLOGY_MANAGER=ON -DFFI_LIBRARY=/build/output/libffi/lib/libffi.a -DFFI_INCLUDE_DIR=/build/output/libffi/lib/libffi-3.2.1/include -DJANSSON_LIBRARY=/build/output/jansson/lib/libjansson.a -DJANSSON_INCLUDE_DIR=/build/output/jansson/include -DCURL_LIBRARY=/build/output/curl/lib/libcurl.a -DCURL_INCLUDE_DIR=/build/output/curl/include -DLIBXML2_LIBRARIES=/build/output/libxml2/lib/libxml2.a -DLIBXML2_INCLUDE_DIR=/build/output/libxml2/include/libxml2 -DZLIB_LIBRARY=/build/output/zlib/lib/libz.a -DZLIB_INCLUDE_DIR=/build/output/zlib/include -DUUID_LIBRARY=/build/output/uuid/lib/libuuid.a -DUUID_INCLUDE_DIR=/build/output/uuid/include -DCMAKE_INSTALL_PREFIX:PATH=/build/output/celix .. \\\n && make \\\n && make install\n#   done\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Licensed to the Apache Software Foundation (ASF) under one\n#  or more contributor license agreements.  See the NOTICE file\n#  distributed with this work for additional information\n#  regarding copyright ownership.  The ASF licenses this file\n#  to you under the Apache License, Version 2.0 (the\n#  \"License\"); you may not use this file except in compliance\n#  with the License.  You may obtain a copy of the License at\n#  \n#    http://www.apache.org/licenses/LICENSE-2.0\n#  \n#  Unless required by applicable law or agreed to in writing,\n#  software distributed under the License is distributed on an\n#  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n#  KIND, either express or implied.  See the License for the\n#  specific language governing permissions and limitations\n#  under the License.\n#  Celix android builder\n#  \n#  Howto:\n#\n#  Build docker image -> docker build -t celix-android-builder - < Dockerfile.Android\n#  Run docker image -> docker run --name builder celix-android-builder\n#  Extract filesystem -> docker export builder > fs.tar\n#  Extract /build dir from tar -> tar xf fs.tar build/output/celix\n#\n#\nFROM ubuntu:14.04\nMAINTAINER Bjoern Petri <bjoern.petri@sundevil.de>\nENV ARCH=\"armv7\"\nENV PLATFORM=\"android-18\"\nENV ANDROID_STANDALONE_TOOLCHAIN=\"/build/toolchain-arm\"\nENV ANDROID_CMAKE_HOME=\"/build/resources/android-cmake\"\nENV SYSROOT=\"$ANDROID_STANDALONE_TOOLCHAIN/sysroot\"\nENV PATH=\"$ANDROID_STANDALONE_TOOLCHAIN/bin:$ANDROID_STANDALONE_TOOLCHAIN/usr/local/bin:$PATH\"\nENV PATH=\"$PATH:/build/resources/android-ndk-r10e\"\nENV CROSS_COMPILE=\"arm-linux-androideabi\"\nENV CC=\"arm-linux-androideabi-gcc\"\nENV CCX=\"arm-linux-androideabi-g++\"\nENV AR=\"arm-linux-androideabi-ar\"\nENV AS=\"arm-linux-androideabi-as\"\nENV LD=\"arm-linux-androideabi-ld\"\nENV RANLIB=\"arm-linux-androideabi-ranlib\"\nENV NM=\"arm-linux-androideabi-nm\"\nENV STRIP=\"arm-linux-androideabi-strip\"\nENV CHOST=\"arm-linux-androideabi\"\n#  install needed tools\nRUN apt-get update \\\n && apt-get install software-properties-common -y \\\n && add-apt-repository ppa:george-edison55/cmake-3.x \\\n && apt-get clean\nRUN apt-get update \\\n && apt-get install automake build-essential wget p7zip-full bash curl cmake git vim zip -y \\\n && apt-get clean\nRUN mkdir -p build/output\nWORKDIR /build/resources\n#  Extracting ndk/sdk\n#  create standalone toolchain\nRUN curl -L -O http://dl.google.com/android/ndk/android-ndk-r10e-linux-x86_64.bin \\\n && chmod a+x android-ndk-r10e-linux-x86_64.bin \\\n && 7z x android-ndk-r10e-linux-x86_64.bin > /dev/null \\\n && bash android-ndk-r10e/build/tools/make-standalone-toolchain.sh --verbose --platform=$PLATFORM --install-dir=$ANDROID_STANDALONE_TOOLCHAIN --arch=arm --toolchain=arm-linux-androideabi-4.9 --system=linux-x86_64\n#  uuid\nRUN curl -L -O http://downloads.sourceforge.net/libuuid/libuuid-1.0.3.tar.gz \\\n && tar -xvzf libuuid-1.0.3.tar.gz \\\n && cd libuuid-1.0.3 \\\n && ./configure --host=arm-linux-androideabi --disable-shared --enable-static --prefix=/build/output/uuid \\\n && make \\\n && make install\n#  zlib\nRUN curl -L -O http://zlib.net/zlib-1.2.11.tar.gz \\\n && tar -xvzf zlib-*.tar.gz \\\n && cd zlib-* \\\n && ./configure --prefix=/build/output/zlib \\\n && make \\\n && make install\n#  curl\nRUN curl -L -O http://curl.haxx.se/download/curl-7.38.0.tar.gz \\\n && tar -xvzf curl-7.38.0.tar.gz \\\n && cd curl-7.38.0 \\\n && ./configure --host=arm-linux-androideabi --disable-shared --enable-static --disable-dependency-tracking --with-zlib=`pwd `/../../output/zlib --without-ca-bundle --without-ca-path --disable-ftp --disable-file --disable-ldap --disable-ldaps --disable-rtsp --disable-proxy --disable-dict --disable-telnet --disable-tftp --disable-pop3 --disable-imap --disable-smtp --disable-gopher --disable-sspi --disable-manual --target=arm-linux-androideabi --build=x86_64-unknown-linux-gnu --prefix=/build/output/curl \\\n && make \\\n && make install\n#  jansson\nRUN curl -L -O http://www.digip.org/jansson/releases/jansson-2.7.tar.bz2 \\\n && tar -xvjf jansson-2.7.tar.bz2 \\\n && cd jansson-2.7 \\\n && ./configure --host=arm-linux-androideabi --disable-shared --enable-static --prefix=/build/output/jansson \\\n && make \\\n && make install\n#  libmxl2\nRUN curl -L -O http://xmlsoft.org/sources/libxml2-2.7.2.tar.gz \\\n && curl -L -O https://raw.githubusercontent.com/bpetri/libxml2_android/master/config.guess \\\n && curl -L -O https://raw.githubusercontent.com/bpetri/libxml2_android/master/config.sub \\\n && curl -L -O https://raw.githubusercontent.com/bpetri/libxml2_android/master/libxml2.patch \\\n && tar -xvzf libxml2-2.7.2.tar.gz \\\n && cp config.guess config.sub libxml2-2.7.2 \\\n && patch -p1 < libxml2.patch \\\n && cd libxml2-2.7.2 \\\n && ./configure --host=arm-linux-androideabi --disable-shared --enable-static --prefix=/build/output/libxml2 \\\n && make \\\n && make install\n#  libffi\nRUN curl -L -O ftp://sourceware.org/pub/libffi/libffi-3.2.1.tar.gz \\\n && tar -xvzf libffi-3.2.1.tar.gz \\\n && cd libffi-3.2.1 \\\n && ./configure --host=arm-linux-androideabi --disable-shared --enable-static --prefix=/build/output/libffi \\\n && echo \"#define FFI_MMAP_EXEC_WRIT 1\" >> ./arm-unknown-linux-androideabi/fficonfig.h \\\n && echo \"#define FFI_MMAP_EXEC_SELINUX 0\" >> ./arm-unknown-linux-androideabi/fficonfig.h \\\n && make \\\n && make install\n#  finally add celix src\nRUN git clone -b develop --single-branch https://github.com/apache/celix.git celix\nCMD mkdir -p celix/build-android \\\n && cd celix/build-android \\\n && cmake -DANDROID=TRUE -DENABLE_TESTING=OFF -DBUILD_EXAMPLES=OFF -DBUILD_DEPENDENCY_MANAGER_CXX=OFF -DBUILD_REMOTE_SERVICE_ADMIN=ON -DBUILD_REMOTE_SHELL=ON -DBUILD_RSA_DISCOVERY_CONFIGURED=ON -DBUILD_RSA_DISCOVERY_ETCD=ON -DBUILD_RSA_EXAMPLES=ON -DBUILD_RSA_REMOTE_SERVICE_ADMIN_HTTP=ON -DBUILD_RSA_REMOTE_SERVICE_ADMIN_DFI=OFF -DBUILD_RSA_TOPOLOGY_MANAGER=ON -DFFI_LIBRARY=/build/output/libffi/lib/libffi.a -DFFI_INCLUDE_DIR=/build/output/libffi/lib/libffi-3.2.1/include -DJANSSON_LIBRARY=/build/output/jansson/lib/libjansson.a -DJANSSON_INCLUDE_DIR=/build/output/jansson/include -DCURL_LIBRARY=/build/output/curl/lib/libcurl.a -DCURL_INCLUDE_DIR=/build/output/curl/include -DLIBXML2_LIBRARIES=/build/output/libxml2/lib/libxml2.a -DLIBXML2_INCLUDE_DIR=/build/output/libxml2/include/libxml2 -DZLIB_LIBRARY=/build/output/zlib/lib/libz.a -DZLIB_INCLUDE_DIR=/build/output/zlib/include -DUUID_LIBRARY=/build/output/uuid/lib/libuuid.a -DUUID_INCLUDE_DIR=/build/output/uuid/include -DCMAKE_INSTALL_PREFIX:PATH=/build/output/celix .. \\\n && make \\\n && make install\n#  done\n","injectedSmells":[],"originalDockerfileHash":"f95b81e2943fdfb4c8bd62a33ce135f9","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Licensed to the Apache Software Foundation (ASF) under one\n#   or more contributor license agreements.  See the NOTICE file\n#   distributed with this work for additional information\n#   regarding copyright ownership.  The ASF licenses this file\n#   to you under the Apache License, Version 2.0 (the\n#   \"License\"); you may not use this file except in compliance\n#   with the License.  You may obtain a copy of the License at\n#   \n#     http://www.apache.org/licenses/LICENSE-2.0\n#   \n#   Unless required by applicable law or agreed to in writing,\n#   software distributed under the License is distributed on an\n#   \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n#   KIND, either express or implied.  See the License for the\n#   specific language governing permissions and limitations\n#   under the License.\n#   Celix android builder\n#   \n#   Howto:\n#\n#   Build docker image -> docker build -t celix-android-builder - < Dockerfile.Android\n#   Run docker image -> docker run --name builder celix-android-builder\n#   Extract filesystem -> docker export builder > fs.tar\n#   Extract /build dir from tar -> tar xf fs.tar build/output/celix\n#\n#\nFROM ubuntu:14.04\nMAINTAINER Bjoern Petri <bjoern.petri@sundevil.de>\nENV ARCH=\"armv7\"\nENV PLATFORM=\"android-18\"\nENV ANDROID_STANDALONE_TOOLCHAIN=\"/build/toolchain-arm\"\nENV ANDROID_CMAKE_HOME=\"/build/resources/android-cmake\"\nENV SYSROOT=\"$ANDROID_STANDALONE_TOOLCHAIN/sysroot\"\nENV PATH=\"$ANDROID_STANDALONE_TOOLCHAIN/bin:$ANDROID_STANDALONE_TOOLCHAIN/usr/local/bin:$PATH\"\nENV PATH=\"$PATH:/build/resources/android-ndk-r10e\"\nENV CROSS_COMPILE=\"arm-linux-androideabi\"\nENV CC=\"arm-linux-androideabi-gcc\"\nENV CCX=\"arm-linux-androideabi-g++\"\nENV AR=\"arm-linux-androideabi-ar\"\nENV AS=\"arm-linux-androideabi-as\"\nENV LD=\"arm-linux-androideabi-ld\"\nENV RANLIB=\"arm-linux-androideabi-ranlib\"\nENV NM=\"arm-linux-androideabi-nm\"\nENV STRIP=\"arm-linux-androideabi-strip\"\nENV CHOST=\"arm-linux-androideabi\"\n#   install needed tools\nRUN apt-get update \\\n && apt-get install software-properties-common -y \\\n && add-apt-repository ppa:george-edison55/cmake-3.x \\\n && apt-get clean\nRUN apt-get update \\\n && apt-get install automake build-essential wget p7zip-full bash curl cmake git vim zip -y \\\n && apt-get clean\nRUN mkdir -p build/output\nWORKDIR /build/resources\n#   Extracting ndk/sdk\n#   create standalone toolchain\nRUN curl -L -O http://dl.google.com/android/ndk/android-ndk-r10e-linux-x86_64.bin \\\n && chmod a+x android-ndk-r10e-linux-x86_64.bin \\\n && 7z x android-ndk-r10e-linux-x86_64.bin > /dev/null \\\n && bash android-ndk-r10e/build/tools/make-standalone-toolchain.sh --verbose --platform=$PLATFORM --install-dir=$ANDROID_STANDALONE_TOOLCHAIN --arch=arm --toolchain=arm-linux-androideabi-4.9 --system=linux-x86_64\n#   uuid\nRUN curl -L -O http://downloads.sourceforge.net/libuuid/libuuid-1.0.3.tar.gz \\\n && tar -xvzf libuuid-1.0.3.tar.gz \\\n && cd libuuid-1.0.3 \\\n && ./configure --host=arm-linux-androideabi --disable-shared --enable-static --prefix=/build/output/uuid \\\n && make \\\n && make install\n#   zlib\nRUN curl -L -O http://zlib.net/zlib-1.2.11.tar.gz \\\n && tar -xvzf zlib-*.tar.gz \\\n && cd zlib-* \\\n && ./configure --prefix=/build/output/zlib \\\n && make \\\n && make install\n#   curl\nRUN curl -L -O http://curl.haxx.se/download/curl-7.38.0.tar.gz \\\n && tar -xvzf curl-7.38.0.tar.gz \\\n && cd curl-7.38.0 \\\n && ./configure --host=arm-linux-androideabi --disable-shared --enable-static --disable-dependency-tracking --with-zlib=`pwd `/../../output/zlib --without-ca-bundle --without-ca-path --disable-ftp --disable-file --disable-ldap --disable-ldaps --disable-rtsp --disable-proxy --disable-dict --disable-telnet --disable-tftp --disable-pop3 --disable-imap --disable-smtp --disable-gopher --disable-sspi --disable-manual --target=arm-linux-androideabi --build=x86_64-unknown-linux-gnu --prefix=/build/output/curl \\\n && make \\\n && make install\n#   jansson\nRUN curl -L -O http://www.digip.org/jansson/releases/jansson-2.7.tar.bz2 \\\n && tar -xvjf jansson-2.7.tar.bz2 \\\n && cd jansson-2.7 \\\n && ./configure --host=arm-linux-androideabi --disable-shared --enable-static --prefix=/build/output/jansson \\\n && make \\\n && make install\n#   libmxl2\nRUN curl -L -O http://xmlsoft.org/sources/libxml2-2.7.2.tar.gz \\\n && curl -L -O https://raw.githubusercontent.com/bpetri/libxml2_android/master/config.guess \\\n && curl -L -O https://raw.githubusercontent.com/bpetri/libxml2_android/master/config.sub \\\n && curl -L -O https://raw.githubusercontent.com/bpetri/libxml2_android/master/libxml2.patch \\\n && tar -xvzf libxml2-2.7.2.tar.gz \\\n && cp config.guess config.sub libxml2-2.7.2 \\\n && patch -p1 < libxml2.patch \\\n && cd libxml2-2.7.2 \\\n && ./configure --host=arm-linux-androideabi --disable-shared --enable-static --prefix=/build/output/libxml2 \\\n && make \\\n && make install\n#   libffi\nRUN curl -L -O ftp://sourceware.org/pub/libffi/libffi-3.2.1.tar.gz \\\n && tar -xvzf libffi-3.2.1.tar.gz \\\n && cd libffi-3.2.1 \\\n && ./configure --host=arm-linux-androideabi --disable-shared --enable-static --prefix=/build/output/libffi \\\n && echo \"#define FFI_MMAP_EXEC_WRIT 1\" >> ./arm-unknown-linux-androideabi/fficonfig.h \\\n && echo \"#define FFI_MMAP_EXEC_SELINUX 0\" >> ./arm-unknown-linux-androideabi/fficonfig.h \\\n && make \\\n && make install\n#   finally add celix src\nRUN git clone -b develop --single-branch https://github.com/apache/celix.git celix\nCMD mkdir -p celix/build-android \\\n && cd celix/build-android \\\n && cmake -DANDROID=TRUE -DENABLE_TESTING=OFF -DBUILD_EXAMPLES=OFF -DBUILD_DEPENDENCY_MANAGER_CXX=OFF -DBUILD_REMOTE_SERVICE_ADMIN=ON -DBUILD_REMOTE_SHELL=ON -DBUILD_RSA_DISCOVERY_CONFIGURED=ON -DBUILD_RSA_DISCOVERY_ETCD=ON -DBUILD_RSA_EXAMPLES=ON -DBUILD_RSA_REMOTE_SERVICE_ADMIN_HTTP=ON -DBUILD_RSA_REMOTE_SERVICE_ADMIN_DFI=OFF -DBUILD_RSA_TOPOLOGY_MANAGER=ON -DFFI_LIBRARY=/build/output/libffi/lib/libffi.a -DFFI_INCLUDE_DIR=/build/output/libffi/lib/libffi-3.2.1/include -DJANSSON_LIBRARY=/build/output/jansson/lib/libjansson.a -DJANSSON_INCLUDE_DIR=/build/output/jansson/include -DCURL_LIBRARY=/build/output/curl/lib/libcurl.a -DCURL_INCLUDE_DIR=/build/output/curl/include -DLIBXML2_LIBRARIES=/build/output/libxml2/lib/libxml2.a -DLIBXML2_INCLUDE_DIR=/build/output/libxml2/include/libxml2 -DZLIB_LIBRARY=/build/output/zlib/lib/libz.a -DZLIB_INCLUDE_DIR=/build/output/zlib/include -DUUID_LIBRARY=/build/output/uuid/lib/libuuid.a -DUUID_INCLUDE_DIR=/build/output/uuid/include -DCMAKE_INSTALL_PREFIX:PATH=/build/output/celix .. \\\n && make \\\n && make install\n#   done\n","originalDockerfileUglifiedHash":"268b142fed664e0748ee1338541fcb52","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/b37d712fe5b8f734e33af590d5796e51432c28ad.dockerfile"}