{"seed":936034748,"processedDockerfileHash":"ef87b8a1db4b6e8fe849a7d2becd40a2","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","have-a-healthcheck","have-a-user"],"processedDockerfile":"ARG PHP_VERSION=7.2\nARG ALPINE_VERSION=3.8\nFROM php:${PHP_VERSION}-fpm-alpine${ALPINE_VERSION} AS base\nMAINTAINER Pablo Nieto, pnieto@teltek.es\nARG APCU_VERSION=5.1.12\nARG PHP_MONGODB_VERSION=1.5.3\nARG XDEBUG_VERSION=2.6.1\nRUN apk add libgcc libstdc++ ca-certificates libcrypto1.0 libssl1.0 libgomp expat python py-setuptools py-argparse py2-pip py-gflags --no-cache --update\nRUN pip install google-api-python-client==1.2\nCOPY --from=jrottenberg/ffmpeg:4.0-alpine /usr/local /usr/local\nRUN apk add acl file gettext git --no-cache\nRUN set -eux ; apk add icu-dev openldap-dev gettext-dev libpng-dev expat-dev libzip-dev zlib-dev libxml2-dev libxslt-dev jpeg-dev freetype-dev $PHPIZE_DEPS --no-cache --virtual .build-deps ; docker-php-ext-configure zip --with-libzip ; freetype-config --cflags ; mkdir -p /opt/ffmpeg/include ; ln -s /usr/include/freetype2 /opt/ffmpeg/include/freetype2 ; docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ -with-png-dir=/usr/include ; docker-php-ext-install -j$( nproc ;) intl exif ldap gettext pcntl gd shmop sockets sysvmsg sysvsem sysvshm zip wddx xsl ; pecl install apcu-${APCU_VERSION} mongodb-${PHP_MONGODB_VERSION} xdebug-${XDEBUG_VERSION} ; pecl clear-cache ; docker-php-ext-enable apcu opcache mongodb ; runDeps=\"$( scanelf --needed --nobanner --format '%n#p' --recursive /usr/local/lib/php/extensions | tr ',' '\\n' | sort -u | awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' ;)\" ; apk add $runDeps --no-cache --virtual .api-phpexts-rundeps ; apk del .build-deps\nCOPY --from=composer:latest /usr/bin/composer /usr/bin/composer\nCOPY php.ini /usr/local/etc/php/php.ini\n#   https://getcomposer.org/doc/03-cli.md#composer-allow-superuser\nENV COMPOSER_ALLOW_SUPERUSER=\"1\"\nRUN set -eux ; composer global require \"rubenrua/symfony-clean-tags-composer-plugin\" --prefer-dist --no-progress --no-suggest --classmap-authoritative\n#   Download and install pumukit to get the composer cache and improve build times\nRUN git clone https://github.com/pumukit/pumukit /srv/pumukit ; cd /srv/pumukit ; composer install -a -n --no-scripts\nRUN rm -rf /srv/pumukit/*\nENV PATH=\"${PATH}:/root/.composer/vendor/bin\"\nWORKDIR /srv/pumukit\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\nHEALTHCHECK CMD curl --fail http://127.0.0.1:80 || exit 1\n","originalDockerfile":"ARG PHP_VERSION=7.2\nARG ALPINE_VERSION=3.8\nFROM php:${PHP_VERSION}-fpm-alpine${ALPINE_VERSION} AS base\nMAINTAINER Pablo Nieto, pnieto@teltek.es\nARG APCU_VERSION=5.1.12\nARG PHP_MONGODB_VERSION=1.5.3\nARG XDEBUG_VERSION=2.6.1\nRUN apk add --no-cache --update libgcc libstdc++ ca-certificates libcrypto1.0 libssl1.0 libgomp expat python py-setuptools py-argparse py2-pip py-gflags\nRUN pip install google-api-python-client==1.2\nCOPY --from=jrottenberg/ffmpeg:4.0-alpine /usr/local /usr/local\nRUN apk add --no-cache acl file gettext git\nRUN set -eux ; apk add --no-cache --virtual .build-deps $PHPIZE_DEPS icu-dev openldap-dev gettext-dev libpng-dev expat-dev libzip-dev zlib-dev libxml2-dev libxslt-dev jpeg-dev freetype-dev ; docker-php-ext-configure zip --with-libzip ; freetype-config --cflags ; mkdir -p /opt/ffmpeg/include ; ln -s /usr/include/freetype2 /opt/ffmpeg/include/freetype2 ; docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ -with-png-dir=/usr/include ; docker-php-ext-install -j$( nproc ;) intl exif ldap gettext pcntl gd shmop sockets sysvmsg sysvsem sysvshm zip wddx xsl ; pecl install apcu-${APCU_VERSION} mongodb-${PHP_MONGODB_VERSION} xdebug-${XDEBUG_VERSION} ; pecl clear-cache ; docker-php-ext-enable apcu opcache mongodb ; runDeps=\"$( scanelf --needed --nobanner --format '%n#p' --recursive /usr/local/lib/php/extensions | tr ',' '\\n' | sort -u | awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' ;)\" ; apk add --no-cache --virtual .api-phpexts-rundeps $runDeps ; apk del .build-deps\nCOPY --from=composer:latest /usr/bin/composer /usr/bin/composer\nCOPY php.ini /usr/local/etc/php/php.ini\n#  https://getcomposer.org/doc/03-cli.md#composer-allow-superuser\nENV COMPOSER_ALLOW_SUPERUSER=\"1\"\nRUN set -eux ; composer global require \"rubenrua/symfony-clean-tags-composer-plugin\" --prefer-dist --no-progress --no-suggest --classmap-authoritative\n#  Download and install pumukit to get the composer cache and improve build times\nRUN git clone https://github.com/pumukit/pumukit /srv/pumukit ; cd /srv/pumukit ; composer install -a -n --no-scripts\nRUN rm -rf /srv/pumukit/*\nENV PATH=\"${PATH}:/root/.composer/vendor/bin\"\nWORKDIR /srv/pumukit\n","injectedSmells":[],"originalDockerfileHash":"673d5e3e70ce2b3cf8f87c0737cac1bc","successfullyInjectedSmells":[],"originalDockerfileUglified":"ARG PHP_VERSION=7.2\nARG ALPINE_VERSION=3.8\nFROM php:${PHP_VERSION}-fpm-alpine${ALPINE_VERSION} AS base\nMAINTAINER Pablo Nieto, pnieto@teltek.es\nARG APCU_VERSION=5.1.12\nARG PHP_MONGODB_VERSION=1.5.3\nARG XDEBUG_VERSION=2.6.1\nRUN apk add --no-cache --update libgcc libstdc++ ca-certificates libcrypto1.0 libssl1.0 libgomp expat python py-setuptools py-argparse py2-pip py-gflags\nRUN pip install google-api-python-client==1.2\nCOPY --from=jrottenberg/ffmpeg:4.0-alpine /usr/local /usr/local\nRUN apk add --no-cache acl file gettext git\nRUN set -eux ; apk add --no-cache --virtual .build-deps $PHPIZE_DEPS icu-dev openldap-dev gettext-dev libpng-dev expat-dev libzip-dev zlib-dev libxml2-dev libxslt-dev jpeg-dev freetype-dev ; docker-php-ext-configure zip --with-libzip ; freetype-config --cflags ; mkdir -p /opt/ffmpeg/include ; ln -s /usr/include/freetype2 /opt/ffmpeg/include/freetype2 ; docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ -with-png-dir=/usr/include ; docker-php-ext-install -j$( nproc ;) intl exif ldap gettext pcntl gd shmop sockets sysvmsg sysvsem sysvshm zip wddx xsl ; pecl install apcu-${APCU_VERSION} mongodb-${PHP_MONGODB_VERSION} xdebug-${XDEBUG_VERSION} ; pecl clear-cache ; docker-php-ext-enable apcu opcache mongodb ; runDeps=\"$( scanelf --needed --nobanner --format '%n#p' --recursive /usr/local/lib/php/extensions | tr ',' '\\n' | sort -u | awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' ;)\" ; apk add --no-cache --virtual .api-phpexts-rundeps $runDeps ; apk del .build-deps\nCOPY --from=composer:latest /usr/bin/composer /usr/bin/composer\nCOPY php.ini /usr/local/etc/php/php.ini\n#   https://getcomposer.org/doc/03-cli.md#composer-allow-superuser\nENV COMPOSER_ALLOW_SUPERUSER=\"1\"\nRUN set -eux ; composer global require \"rubenrua/symfony-clean-tags-composer-plugin\" --prefer-dist --no-progress --no-suggest --classmap-authoritative\n#   Download and install pumukit to get the composer cache and improve build times\nRUN git clone https://github.com/pumukit/pumukit /srv/pumukit ; cd /srv/pumukit ; composer install -a -n --no-scripts\nRUN rm -rf /srv/pumukit/*\nENV PATH=\"${PATH}:/root/.composer/vendor/bin\"\nWORKDIR /srv/pumukit\n","originalDockerfileUglifiedHash":"f64f5d23324c631c661c881fcde3a4ef","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/9a0783838ee3f7ef7d8c46b7744a973864028de9.dockerfile"}