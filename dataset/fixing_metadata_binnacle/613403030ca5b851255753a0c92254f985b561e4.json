{"seed":2195333861,"processedDockerfileHash":"d0eb12538dd1ccdcedb3e6e4e0184bcf","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-npm","pin-package-manager-versions-apk","have-a-healthcheck"],"processedDockerfile":"FROM codeclimate/alpine-ruby:b38\nMAINTAINER Plataformatec <opensource@plataformatec.com.br>\n#   Based on https://github.com/toy/image_optim_pack/pull/5\nENV JPEGOPTIM_VERSION=\"1.4.3\" \\\n    PNGCRUSH_VERSION=\"1.7.88\" \\\n    ZOPFLI_VERSION=\"1.0.1\" \\\n    ADVANCECOMP_VERSION=\"1.20\" \\\n    JHEAD_VERSION=\"3.00\" \\\n    GIFSICLE_VERSION=\"1.88\" \\\n    OPTIPNG_VERSION=\"0.7.5\" \\\n    PNGQUANT_VERSION=\"2.5.2\" \\\n    JPEGARCHIVE_VERSION=\"2.1.1\" \\\n    MOZJPEG_VERSION=\"3.1\" \\\n    IJG_VERSION=\"9a\" \\\n    PNGOUT_VERSION=\"20150319\" \\\n    SKIP_IMAGE_OPTIM_PACK=\"1\"\nWORKDIR /tmp\n#   This step installs all external utilities, leaving only the\n#   compiled/installed binaries behind in order minimize the\n#   footprint of the image layer.\nRUN apk update \\\n && apk add libstdc++ libjpeg-turbo libpng nodejs \\\n && apk add build-base libjpeg-turbo-dev zlib-dev bash libpng-dev pkgconfig autoconf automake libtool nasm curl --virtual build-dependencies \\\n && curl -L -O https://github.com/amadvance/advancecomp/releases/download/v$ADVANCECOMP_VERSION/advancecomp-$ADVANCECOMP_VERSION.tar.gz \\\n && tar zxf advancecomp-$ADVANCECOMP_VERSION.tar.gz \\\n && cd advancecomp-$ADVANCECOMP_VERSION \\\n && ./configure \\\n && make \\\n && make install \\\n && cd .. \\\n && curl -O https://www.lcdf.org/gifsicle/gifsicle-$GIFSICLE_VERSION.tar.gz \\\n && tar zxf gifsicle-$GIFSICLE_VERSION.tar.gz \\\n && cd gifsicle-$GIFSICLE_VERSION \\\n && ./configure \\\n && make \\\n && make install \\\n && cd .. \\\n && curl -O http://www.sentex.net/~mwandel/jhead/jhead-$JHEAD_VERSION.tar.gz \\\n && tar zxf jhead-$JHEAD_VERSION.tar.gz \\\n && cd jhead-$JHEAD_VERSION \\\n && make \\\n && make install \\\n && cd .. \\\n && curl -O http://www.kokkonen.net/tjko/src/jpegoptim-$JPEGOPTIM_VERSION.tar.gz \\\n && tar zxf jpegoptim-$JPEGOPTIM_VERSION.tar.gz \\\n && cd jpegoptim-$JPEGOPTIM_VERSION \\\n && ./configure \\\n && make \\\n && make install \\\n && cd .. \\\n && curl -L -O https://github.com/mozilla/mozjpeg/archive/v$MOZJPEG_VERSION.tar.gz \\\n && tar zxf v$MOZJPEG_VERSION.tar.gz \\\n && cd mozjpeg-$MOZJPEG_VERSION \\\n && autoreconf -fiv \\\n && ./configure \\\n && make \\\n && make install \\\n && cd .. \\\n && curl -L -O https://github.com/danielgtaylor/jpeg-archive/archive/$JPEGARCHIVE_VERSION.tar.gz \\\n && tar zxf $JPEGARCHIVE_VERSION.tar.gz \\\n && cd jpeg-archive-$JPEGARCHIVE_VERSION \\\n && make \\\n && make install \\\n && cd .. \\\n && curl -O http://www.ijg.org/files/jpegsrc.v$IJG_VERSION.tar.gz \\\n && tar zxf jpegsrc.v$IJG_VERSION.tar.gz \\\n && cd jpeg-$IJG_VERSION \\\n && ./configure \\\n && make \\\n && make install \\\n && cd .. \\\n && curl -L -O http://downloads.sourceforge.net/project/optipng/OptiPNG/optipng-$OPTIPNG_VERSION/optipng-$OPTIPNG_VERSION.tar.gz \\\n && tar zxf optipng-$OPTIPNG_VERSION.tar.gz \\\n && cd optipng-$OPTIPNG_VERSION \\\n && ./configure \\\n && make \\\n && make install \\\n && cd .. \\\n && curl -O http://static.jonof.id.au/dl/kenutils/pngout-$PNGOUT_VERSION-linux-static.tar.gz \\\n && tar zxf pngout-$PNGOUT_VERSION-linux-static.tar.gz \\\n && cd pngout-$PNGOUT_VERSION-linux-static \\\n && cp -f x86_64/pngout-static /usr/local/bin/pngout \\\n && cd .. \\\n && curl -L -O http://pngquant.org/pngquant-$PNGQUANT_VERSION-src.tar.bz2 \\\n && tar xjf pngquant-$PNGQUANT_VERSION-src.tar.bz2 \\\n && cd pngquant-$PNGQUANT_VERSION \\\n && ./configure \\\n && make \\\n && make install \\\n && cd .. \\\n && npm install svgo@3.0.2 -g\nWORKDIR /usr/src/app\nCOPY Gemfile /usr/src/app/\nCOPY Gemfile.lock /usr/src/app/\nRUN apk add ruby ruby-dev ruby-bundler --update \\\n && bundle install -j 4 \\\n && rm -rf /usr/share/ri \\\n && rm -rf /tmp/* \\\n && apk del build-dependencies\nRUN adduser -u 9000 -D app\nCOPY . /usr/src/app\nRUN chown -R app:app /usr/src/app\nUSER app\nCMD [\"/usr/src/app/bin/engine-image-optim\"]\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM codeclimate/alpine-ruby:b38\nMAINTAINER Plataformatec <opensource@plataformatec.com.br>\n#  Based on https://github.com/toy/image_optim_pack/pull/5\nENV JPEGOPTIM_VERSION=\"1.4.3\" \\\n    PNGCRUSH_VERSION=\"1.7.88\" \\\n    ZOPFLI_VERSION=\"1.0.1\" \\\n    ADVANCECOMP_VERSION=\"1.20\" \\\n    JHEAD_VERSION=\"3.00\" \\\n    GIFSICLE_VERSION=\"1.88\" \\\n    OPTIPNG_VERSION=\"0.7.5\" \\\n    PNGQUANT_VERSION=\"2.5.2\" \\\n    JPEGARCHIVE_VERSION=\"2.1.1\" \\\n    MOZJPEG_VERSION=\"3.1\" \\\n    IJG_VERSION=\"9a\" \\\n    PNGOUT_VERSION=\"20150319\" \\\n    SKIP_IMAGE_OPTIM_PACK=\"1\"\nWORKDIR /tmp\n#  This step installs all external utilities, leaving only the\n#  compiled/installed binaries behind in order minimize the\n#  footprint of the image layer.\nRUN apk update \\\n && apk add libstdc++ libjpeg-turbo libpng nodejs \\\n && apk add --virtual build-dependencies build-base libjpeg-turbo-dev zlib-dev bash libpng-dev pkgconfig autoconf automake libtool nasm curl \\\n && curl -L -O https://github.com/amadvance/advancecomp/releases/download/v$ADVANCECOMP_VERSION/advancecomp-$ADVANCECOMP_VERSION.tar.gz \\\n && tar zxf advancecomp-$ADVANCECOMP_VERSION.tar.gz \\\n && cd advancecomp-$ADVANCECOMP_VERSION \\\n && ./configure \\\n && make \\\n && make install \\\n && cd .. \\\n && curl -O https://www.lcdf.org/gifsicle/gifsicle-$GIFSICLE_VERSION.tar.gz \\\n && tar zxf gifsicle-$GIFSICLE_VERSION.tar.gz \\\n && cd gifsicle-$GIFSICLE_VERSION \\\n && ./configure \\\n && make \\\n && make install \\\n && cd .. \\\n && curl -O http://www.sentex.net/~mwandel/jhead/jhead-$JHEAD_VERSION.tar.gz \\\n && tar zxf jhead-$JHEAD_VERSION.tar.gz \\\n && cd jhead-$JHEAD_VERSION \\\n && make \\\n && make install \\\n && cd .. \\\n && curl -O http://www.kokkonen.net/tjko/src/jpegoptim-$JPEGOPTIM_VERSION.tar.gz \\\n && tar zxf jpegoptim-$JPEGOPTIM_VERSION.tar.gz \\\n && cd jpegoptim-$JPEGOPTIM_VERSION \\\n && ./configure \\\n && make \\\n && make install \\\n && cd .. \\\n && curl -L -O https://github.com/mozilla/mozjpeg/archive/v$MOZJPEG_VERSION.tar.gz \\\n && tar zxf v$MOZJPEG_VERSION.tar.gz \\\n && cd mozjpeg-$MOZJPEG_VERSION \\\n && autoreconf -fiv \\\n && ./configure \\\n && make \\\n && make install \\\n && cd .. \\\n && curl -L -O https://github.com/danielgtaylor/jpeg-archive/archive/$JPEGARCHIVE_VERSION.tar.gz \\\n && tar zxf $JPEGARCHIVE_VERSION.tar.gz \\\n && cd jpeg-archive-$JPEGARCHIVE_VERSION \\\n && make \\\n && make install \\\n && cd .. \\\n && curl -O http://www.ijg.org/files/jpegsrc.v$IJG_VERSION.tar.gz \\\n && tar zxf jpegsrc.v$IJG_VERSION.tar.gz \\\n && cd jpeg-$IJG_VERSION \\\n && ./configure \\\n && make \\\n && make install \\\n && cd .. \\\n && curl -L -O http://downloads.sourceforge.net/project/optipng/OptiPNG/optipng-$OPTIPNG_VERSION/optipng-$OPTIPNG_VERSION.tar.gz \\\n && tar zxf optipng-$OPTIPNG_VERSION.tar.gz \\\n && cd optipng-$OPTIPNG_VERSION \\\n && ./configure \\\n && make \\\n && make install \\\n && cd .. \\\n && curl -O http://static.jonof.id.au/dl/kenutils/pngout-$PNGOUT_VERSION-linux-static.tar.gz \\\n && tar zxf pngout-$PNGOUT_VERSION-linux-static.tar.gz \\\n && cd pngout-$PNGOUT_VERSION-linux-static \\\n && cp -f x86_64/pngout-static /usr/local/bin/pngout \\\n && cd .. \\\n && curl -L -O http://pngquant.org/pngquant-$PNGQUANT_VERSION-src.tar.bz2 \\\n && tar xjf pngquant-$PNGQUANT_VERSION-src.tar.bz2 \\\n && cd pngquant-$PNGQUANT_VERSION \\\n && ./configure \\\n && make \\\n && make install \\\n && cd .. \\\n && npm install svgo -g\nWORKDIR /usr/src/app\nCOPY Gemfile /usr/src/app/\nCOPY Gemfile.lock /usr/src/app/\nRUN apk --update add ruby ruby-dev ruby-bundler \\\n && bundle install -j 4 \\\n && rm -rf /usr/share/ri \\\n && rm -rf /tmp/* \\\n && apk del build-dependencies\nRUN adduser -u 9000 -D app\nCOPY . /usr/src/app\nRUN chown -R app:app /usr/src/app\nUSER app\nCMD [\"/usr/src/app/bin/engine-image-optim\"]\n","injectedSmells":[],"originalDockerfileHash":"8c917547462f5f072bfdeeed82da22e5","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM codeclimate/alpine-ruby:b38\nMAINTAINER Plataformatec <opensource@plataformatec.com.br>\n#   Based on https://github.com/toy/image_optim_pack/pull/5\nENV JPEGOPTIM_VERSION=\"1.4.3\" \\\n    PNGCRUSH_VERSION=\"1.7.88\" \\\n    ZOPFLI_VERSION=\"1.0.1\" \\\n    ADVANCECOMP_VERSION=\"1.20\" \\\n    JHEAD_VERSION=\"3.00\" \\\n    GIFSICLE_VERSION=\"1.88\" \\\n    OPTIPNG_VERSION=\"0.7.5\" \\\n    PNGQUANT_VERSION=\"2.5.2\" \\\n    JPEGARCHIVE_VERSION=\"2.1.1\" \\\n    MOZJPEG_VERSION=\"3.1\" \\\n    IJG_VERSION=\"9a\" \\\n    PNGOUT_VERSION=\"20150319\" \\\n    SKIP_IMAGE_OPTIM_PACK=\"1\"\nWORKDIR /tmp\n#   This step installs all external utilities, leaving only the\n#   compiled/installed binaries behind in order minimize the\n#   footprint of the image layer.\nRUN apk update \\\n && apk add libstdc++ libjpeg-turbo libpng nodejs \\\n && apk add --virtual build-dependencies build-base libjpeg-turbo-dev zlib-dev bash libpng-dev pkgconfig autoconf automake libtool nasm curl \\\n && curl -L -O https://github.com/amadvance/advancecomp/releases/download/v$ADVANCECOMP_VERSION/advancecomp-$ADVANCECOMP_VERSION.tar.gz \\\n && tar zxf advancecomp-$ADVANCECOMP_VERSION.tar.gz \\\n && cd advancecomp-$ADVANCECOMP_VERSION \\\n && ./configure \\\n && make \\\n && make install \\\n && cd .. \\\n && curl -O https://www.lcdf.org/gifsicle/gifsicle-$GIFSICLE_VERSION.tar.gz \\\n && tar zxf gifsicle-$GIFSICLE_VERSION.tar.gz \\\n && cd gifsicle-$GIFSICLE_VERSION \\\n && ./configure \\\n && make \\\n && make install \\\n && cd .. \\\n && curl -O http://www.sentex.net/~mwandel/jhead/jhead-$JHEAD_VERSION.tar.gz \\\n && tar zxf jhead-$JHEAD_VERSION.tar.gz \\\n && cd jhead-$JHEAD_VERSION \\\n && make \\\n && make install \\\n && cd .. \\\n && curl -O http://www.kokkonen.net/tjko/src/jpegoptim-$JPEGOPTIM_VERSION.tar.gz \\\n && tar zxf jpegoptim-$JPEGOPTIM_VERSION.tar.gz \\\n && cd jpegoptim-$JPEGOPTIM_VERSION \\\n && ./configure \\\n && make \\\n && make install \\\n && cd .. \\\n && curl -L -O https://github.com/mozilla/mozjpeg/archive/v$MOZJPEG_VERSION.tar.gz \\\n && tar zxf v$MOZJPEG_VERSION.tar.gz \\\n && cd mozjpeg-$MOZJPEG_VERSION \\\n && autoreconf -fiv \\\n && ./configure \\\n && make \\\n && make install \\\n && cd .. \\\n && curl -L -O https://github.com/danielgtaylor/jpeg-archive/archive/$JPEGARCHIVE_VERSION.tar.gz \\\n && tar zxf $JPEGARCHIVE_VERSION.tar.gz \\\n && cd jpeg-archive-$JPEGARCHIVE_VERSION \\\n && make \\\n && make install \\\n && cd .. \\\n && curl -O http://www.ijg.org/files/jpegsrc.v$IJG_VERSION.tar.gz \\\n && tar zxf jpegsrc.v$IJG_VERSION.tar.gz \\\n && cd jpeg-$IJG_VERSION \\\n && ./configure \\\n && make \\\n && make install \\\n && cd .. \\\n && curl -L -O http://downloads.sourceforge.net/project/optipng/OptiPNG/optipng-$OPTIPNG_VERSION/optipng-$OPTIPNG_VERSION.tar.gz \\\n && tar zxf optipng-$OPTIPNG_VERSION.tar.gz \\\n && cd optipng-$OPTIPNG_VERSION \\\n && ./configure \\\n && make \\\n && make install \\\n && cd .. \\\n && curl -O http://static.jonof.id.au/dl/kenutils/pngout-$PNGOUT_VERSION-linux-static.tar.gz \\\n && tar zxf pngout-$PNGOUT_VERSION-linux-static.tar.gz \\\n && cd pngout-$PNGOUT_VERSION-linux-static \\\n && cp -f x86_64/pngout-static /usr/local/bin/pngout \\\n && cd .. \\\n && curl -L -O http://pngquant.org/pngquant-$PNGQUANT_VERSION-src.tar.bz2 \\\n && tar xjf pngquant-$PNGQUANT_VERSION-src.tar.bz2 \\\n && cd pngquant-$PNGQUANT_VERSION \\\n && ./configure \\\n && make \\\n && make install \\\n && cd .. \\\n && npm install svgo -g\nWORKDIR /usr/src/app\nCOPY Gemfile /usr/src/app/\nCOPY Gemfile.lock /usr/src/app/\nRUN apk --update add ruby ruby-dev ruby-bundler \\\n && bundle install -j 4 \\\n && rm -rf /usr/share/ri \\\n && rm -rf /tmp/* \\\n && apk del build-dependencies\nRUN adduser -u 9000 -D app\nCOPY . /usr/src/app\nRUN chown -R app:app /usr/src/app\nUSER app\nCMD [\"/usr/src/app/bin/engine-image-optim\"]\n","originalDockerfileUglifiedHash":"364c283826eb96ba1122638147edf8e5","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/613403030ca5b851255753a0c92254f985b561e4.dockerfile"}