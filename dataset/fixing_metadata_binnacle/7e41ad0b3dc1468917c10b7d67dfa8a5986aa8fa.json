{"seed":2365178014,"processedDockerfileHash":"fffc62ea7e3fe2479a6183af655c8fcf","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"#\n#   Creates pseudo distributed hadoop 2.7.1\n#\nFROM sequenceiq/pam:centos-6.5\nMAINTAINER \"Mansour Raad\" mraad@esri.com\nUSER root\n#   install dev tools\nRUN yum clean all ; rpm --rebuilddb ; yum install -y curl which tar sudo openssh-server openssh-clients rsync\n#   update libselinux. see https://github.com/sequenceiq/hadoop-docker/issues/14\nRUN yum update -y libselinux\n#   passwordless ssh\nRUN ssh-keygen -q -N \"\" -t dsa -f /etc/ssh/ssh_host_dsa_key\nRUN ssh-keygen -q -N \"\" -t rsa -f /etc/ssh/ssh_host_rsa_key\nRUN ssh-keygen -q -N \"\" -t rsa -f /root/.ssh/id_rsa\nRUN cp /root/.ssh/id_rsa.pub /root/.ssh/authorized_keys\n#   java 1.7\n#   RUN curl -LO 'http://download.oracle.com/otn-pub/java/jdk/7u79-b15/jdk-7u79-linux-x64.rpm' -H 'Cookie: oraclelicense=accept-securebackup-cookie'\n#   RUN rpm -i jdk-7u79-linux-x64.rpm\n#   RUN rm jdk-7u79-linux-x64.rpm\n#   java 1.8\nRUN curl -LO 'http://download.oracle.com/otn-pub/java/jdk/8u111-b14/jdk-8u111-linux-x64.rpm' -H 'Cookie: oraclelicense=accept-securebackup-cookie'\nRUN rpm -i jdk-8u111-linux-x64.rpm\nRUN rm jdk-8u111-linux-x64.rpm\nENV JAVA_HOME=\"/usr/java/default\"\nENV PATH=\"$PATH:$JAVA_HOME/bin\"\nRUN rm /usr/bin/java \\\n && ln -s $JAVA_HOME/bin/java /usr/bin/java\n#   download native support\nRUN mkdir -p /tmp/native\n#   RUN curl -Ls http://dl.bintray.com/sequenceiq/sequenceiq-bin/hadoop-native-64-2.7.0.tar | tar -x -C /tmp/native\nRUN curl -Ls https://github.com/sequenceiq/docker-hadoop-build/releases/download/v2.7.1/hadoop-native-64-2.7.1.tgz | tar -xz -C /tmp/native\n#   hadoop\nRUN curl -s http://www.us.apache.org/dist/hadoop/common/hadoop-2.7.1/hadoop-2.7.1.tar.gz | tar -xz -C /usr/local\nRUN cd /usr/local \\\n && ln -s hadoop-2.7.1 hadoop\n#   spark 1.4.1\n#   RUN curl -s http://d3kbcqa49mib13.cloudfront.net/spark-1.4.1-bin-hadoop2.6.tgz | tar -xz -C /usr/local\n#   RUN cd /usr/local && ln -s spark-1.4.1-bin-hadoop2.6 spark\n#   spark 1.6.2\nRUN curl -s http://d3kbcqa49mib13.cloudfront.net/spark-1.6.2-bin-hadoop2.6.tgz | tar -xz -C /usr/local\nRUN cd /usr/local \\\n && ln -s spark-1.6.2-bin-hadoop2.6 spark\nENV SPARK_HOME=\"/usr/local/spark\"\nENV HADOOP_PREFIX=\"/usr/local/hadoop\"\nENV HADOOP_COMMON_HOME=\"/usr/local/hadoop\"\nENV HADOOP_HDFS_HOME=\"/usr/local/hadoop\"\nENV HADOOP_MAPRED_HOME=\"/usr/local/hadoop\"\nENV HADOOP_YARN_HOME=\"/usr/local/hadoop\"\nENV HADOOP_CONF_DIR=\"/usr/local/hadoop/etc/hadoop\"\nENV YARN_CONF_DIR=\"/usr/local/hadoop/etc/hadoop\"\nENV LD_LIBRARY_PATH=\"/usr/local/hadoop/lib/native\"\nENV PATH=\"$PATH:$SPARK_HOME/bin:$HADOOP_PREFIX/bin\"\nRUN sed -i '/^export JAVA_HOME/ s:.*:export JAVA_HOME=/usr/java/default\\nexport HADOOP_PREFIX=/usr/local/hadoop\\nexport HADOOP_HOME=/usr/local/hadoop\\n:' /usr/local/hadoop/etc/hadoop/hadoop-env.sh\nRUN sed -i '/^export HADOOP_CONF_DIR/ s:.*:export HADOOP_CONF_DIR=/usr/local/hadoop/etc/hadoop/:' /usr/local/hadoop/etc/hadoop/hadoop-env.sh\n#   fixing the libhadoop.so like a boss - review this\nRUN rm -rf /usr/local/hadoop/lib/native \\\n && mv /tmp/native /usr/local/hadoop/lib \\\n && echo -e \"\\nlog4j.logger.org.apache.hadoop.util.NativeCodeLoader=ERROR\" >> /usr/local/hadoop/etc/hadoop/log4j.properties\n#   pseudo distributed\nCOPY core-site-template.xml /usr/local/hadoop/etc/hadoop/core-site-template.xml\nCOPY hdfs-site-template.xml /usr/local/hadoop/etc/hadoop/hdfs-site-template.xml\nCOPY yarn-site-template.xml /usr/local/hadoop/etc/hadoop/yarn-site-template.xml\nRUN sed s/HOSTNAME/localhost/ /usr/local/hadoop/etc/hadoop/core-site-template.xml > /usr/local/hadoop/etc/hadoop/core-site.xml\nRUN sed s/HOSTNAME/localhost/ /usr/local/hadoop/etc/hadoop/hdfs-site-template.xml > /usr/local/hadoop/etc/hadoop/hdfs-site.xml\nRUN /usr/local/hadoop/bin/hdfs namenode -format\nCOPY ssh_config /root/.ssh/config\nRUN chmod 600 /root/.ssh/config\nRUN chown root:root /root/.ssh/config\nCOPY bootstrap.sh /etc/bootstrap.sh\nRUN chown root:root /etc/bootstrap.sh\nRUN chmod 700 /etc/bootstrap.sh\nENV BOOTSTRAP=\"/etc/bootstrap.sh\"\n#   working around docker.io build error\nRUN ls -la /usr/local/hadoop/etc/hadoop/*-env.sh\nRUN chmod +x /usr/local/hadoop/etc/hadoop/*-env.sh\nRUN ls -la /usr/local/hadoop/etc/hadoop/*-env.sh\n#   fix the 254 error code\nRUN sed -i \"/^[^#]*UsePAM/ s/.*/#&/\" /etc/ssh/sshd_config\nRUN echo \"UsePAM no\" >> /etc/ssh/sshd_config\nRUN echo \"Port 2122\" >> /etc/ssh/sshd_config\nRUN service sshd start \\\n && /usr/local/hadoop/etc/hadoop/hadoop-env.sh \\\n && /usr/local/hadoop/sbin/start-dfs.sh \\\n && /usr/local/hadoop/bin/hdfs dfs -mkdir -p /user/root \\\n && /usr/local/hadoop/bin/hdfs dfs -chmod a+rwx /user/root \\\n && /usr/local/hadoop/bin/hdfs dfs -put /usr/local/spark/lib /spark\nCMD [\"/etc/bootstrap.sh\", \"-d\"]\n#   HDFS ports\nEXPOSE 9000/tcp 50010/tcp 50020/tcp 50070/tcp 50075/tcp 50090/tcp\n#   YARN ports\nEXPOSE 8030/tcp 8031/tcp 8032/tcp 8033/tcp 8040/tcp 8042/tcp 8088/tcp\n#   Other ports\nEXPOSE 2122/tcp 7077/tcp 8080/tcp 8081/tcp\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#\n#  Creates pseudo distributed hadoop 2.7.1\n#\nFROM sequenceiq/pam:centos-6.5\nMAINTAINER \"Mansour Raad\" mraad@esri.com\nUSER root\n#  install dev tools\nRUN yum clean all ; rpm --rebuilddb ; yum install -y curl which tar sudo openssh-server openssh-clients rsync\n#  update libselinux. see https://github.com/sequenceiq/hadoop-docker/issues/14\nRUN yum update -y libselinux\n#  passwordless ssh\nRUN ssh-keygen -q -N \"\" -t dsa -f /etc/ssh/ssh_host_dsa_key\nRUN ssh-keygen -q -N \"\" -t rsa -f /etc/ssh/ssh_host_rsa_key\nRUN ssh-keygen -q -N \"\" -t rsa -f /root/.ssh/id_rsa\nRUN cp /root/.ssh/id_rsa.pub /root/.ssh/authorized_keys\n#  java 1.7\n#  RUN curl -LO 'http://download.oracle.com/otn-pub/java/jdk/7u79-b15/jdk-7u79-linux-x64.rpm' -H 'Cookie: oraclelicense=accept-securebackup-cookie'\n#  RUN rpm -i jdk-7u79-linux-x64.rpm\n#  RUN rm jdk-7u79-linux-x64.rpm\n#  java 1.8\nRUN curl -LO 'http://download.oracle.com/otn-pub/java/jdk/8u111-b14/jdk-8u111-linux-x64.rpm' -H 'Cookie: oraclelicense=accept-securebackup-cookie'\nRUN rpm -i jdk-8u111-linux-x64.rpm\nRUN rm jdk-8u111-linux-x64.rpm\nENV JAVA_HOME=\"/usr/java/default\"\nENV PATH=\"$PATH:$JAVA_HOME/bin\"\nRUN rm /usr/bin/java \\\n && ln -s $JAVA_HOME/bin/java /usr/bin/java\n#  download native support\nRUN mkdir -p /tmp/native\n#  RUN curl -Ls http://dl.bintray.com/sequenceiq/sequenceiq-bin/hadoop-native-64-2.7.0.tar | tar -x -C /tmp/native\nRUN curl -Ls https://github.com/sequenceiq/docker-hadoop-build/releases/download/v2.7.1/hadoop-native-64-2.7.1.tgz | tar -xz -C /tmp/native\n#  hadoop\nRUN curl -s http://www.us.apache.org/dist/hadoop/common/hadoop-2.7.1/hadoop-2.7.1.tar.gz | tar -xz -C /usr/local\nRUN cd /usr/local \\\n && ln -s hadoop-2.7.1 hadoop\n#  spark 1.4.1\n#  RUN curl -s http://d3kbcqa49mib13.cloudfront.net/spark-1.4.1-bin-hadoop2.6.tgz | tar -xz -C /usr/local\n#  RUN cd /usr/local && ln -s spark-1.4.1-bin-hadoop2.6 spark\n#  spark 1.6.2\nRUN curl -s http://d3kbcqa49mib13.cloudfront.net/spark-1.6.2-bin-hadoop2.6.tgz | tar -xz -C /usr/local\nRUN cd /usr/local \\\n && ln -s spark-1.6.2-bin-hadoop2.6 spark\nENV SPARK_HOME=\"/usr/local/spark\"\nENV HADOOP_PREFIX=\"/usr/local/hadoop\"\nENV HADOOP_COMMON_HOME=\"/usr/local/hadoop\"\nENV HADOOP_HDFS_HOME=\"/usr/local/hadoop\"\nENV HADOOP_MAPRED_HOME=\"/usr/local/hadoop\"\nENV HADOOP_YARN_HOME=\"/usr/local/hadoop\"\nENV HADOOP_CONF_DIR=\"/usr/local/hadoop/etc/hadoop\"\nENV YARN_CONF_DIR=\"/usr/local/hadoop/etc/hadoop\"\nENV LD_LIBRARY_PATH=\"/usr/local/hadoop/lib/native\"\nENV PATH=\"$PATH:$SPARK_HOME/bin:$HADOOP_PREFIX/bin\"\nRUN sed -i '/^export JAVA_HOME/ s:.*:export JAVA_HOME=/usr/java/default\\nexport HADOOP_PREFIX=/usr/local/hadoop\\nexport HADOOP_HOME=/usr/local/hadoop\\n:' /usr/local/hadoop/etc/hadoop/hadoop-env.sh\nRUN sed -i '/^export HADOOP_CONF_DIR/ s:.*:export HADOOP_CONF_DIR=/usr/local/hadoop/etc/hadoop/:' /usr/local/hadoop/etc/hadoop/hadoop-env.sh\n#  fixing the libhadoop.so like a boss - review this\nRUN rm -rf /usr/local/hadoop/lib/native \\\n && mv /tmp/native /usr/local/hadoop/lib \\\n && echo -e \"\\nlog4j.logger.org.apache.hadoop.util.NativeCodeLoader=ERROR\" >> /usr/local/hadoop/etc/hadoop/log4j.properties\n#  pseudo distributed\nADD core-site-template.xml /usr/local/hadoop/etc/hadoop/core-site-template.xml\nADD hdfs-site-template.xml /usr/local/hadoop/etc/hadoop/hdfs-site-template.xml\nADD yarn-site-template.xml /usr/local/hadoop/etc/hadoop/yarn-site-template.xml\nRUN sed s/HOSTNAME/localhost/ /usr/local/hadoop/etc/hadoop/core-site-template.xml > /usr/local/hadoop/etc/hadoop/core-site.xml\nRUN sed s/HOSTNAME/localhost/ /usr/local/hadoop/etc/hadoop/hdfs-site-template.xml > /usr/local/hadoop/etc/hadoop/hdfs-site.xml\nRUN /usr/local/hadoop/bin/hdfs namenode -format\nADD ssh_config /root/.ssh/config\nRUN chmod 600 /root/.ssh/config\nRUN chown root:root /root/.ssh/config\nADD bootstrap.sh /etc/bootstrap.sh\nRUN chown root:root /etc/bootstrap.sh\nRUN chmod 700 /etc/bootstrap.sh\nENV BOOTSTRAP=\"/etc/bootstrap.sh\"\n#  working around docker.io build error\nRUN ls -la /usr/local/hadoop/etc/hadoop/*-env.sh\nRUN chmod +x /usr/local/hadoop/etc/hadoop/*-env.sh\nRUN ls -la /usr/local/hadoop/etc/hadoop/*-env.sh\n#  fix the 254 error code\nRUN sed -i \"/^[^#]*UsePAM/ s/.*/#&/\" /etc/ssh/sshd_config\nRUN echo \"UsePAM no\" >> /etc/ssh/sshd_config\nRUN echo \"Port 2122\" >> /etc/ssh/sshd_config\nRUN service sshd start \\\n && /usr/local/hadoop/etc/hadoop/hadoop-env.sh \\\n && /usr/local/hadoop/sbin/start-dfs.sh \\\n && /usr/local/hadoop/bin/hdfs dfs -mkdir -p /user/root \\\n && /usr/local/hadoop/bin/hdfs dfs -chmod a+rwx /user/root \\\n && /usr/local/hadoop/bin/hdfs dfs -put /usr/local/spark/lib /spark\nCMD [\"/etc/bootstrap.sh\", \"-d\"]\n#  HDFS ports\nEXPOSE 9000/tcp 50010/tcp 50020/tcp 50070/tcp 50075/tcp 50090/tcp\n#  YARN ports\nEXPOSE 8030/tcp 8031/tcp 8032/tcp 8033/tcp 8040/tcp 8042/tcp 8088/tcp\n#  Other ports\nEXPOSE 2122/tcp 7077/tcp 8080/tcp 8081/tcp\n","injectedSmells":[],"originalDockerfileHash":"2e151b1678a1ab9c019d77c38cf9c09e","successfullyInjectedSmells":[],"originalDockerfileUglified":"#\n#   Creates pseudo distributed hadoop 2.7.1\n#\nFROM sequenceiq/pam:centos-6.5\nMAINTAINER \"Mansour Raad\" mraad@esri.com\nUSER root\n#   install dev tools\nRUN yum clean all ; rpm --rebuilddb ; yum install -y curl which tar sudo openssh-server openssh-clients rsync\n#   update libselinux. see https://github.com/sequenceiq/hadoop-docker/issues/14\nRUN yum update -y libselinux\n#   passwordless ssh\nRUN ssh-keygen -q -N \"\" -t dsa -f /etc/ssh/ssh_host_dsa_key\nRUN ssh-keygen -q -N \"\" -t rsa -f /etc/ssh/ssh_host_rsa_key\nRUN ssh-keygen -q -N \"\" -t rsa -f /root/.ssh/id_rsa\nRUN cp /root/.ssh/id_rsa.pub /root/.ssh/authorized_keys\n#   java 1.7\n#   RUN curl -LO 'http://download.oracle.com/otn-pub/java/jdk/7u79-b15/jdk-7u79-linux-x64.rpm' -H 'Cookie: oraclelicense=accept-securebackup-cookie'\n#   RUN rpm -i jdk-7u79-linux-x64.rpm\n#   RUN rm jdk-7u79-linux-x64.rpm\n#   java 1.8\nRUN curl -LO 'http://download.oracle.com/otn-pub/java/jdk/8u111-b14/jdk-8u111-linux-x64.rpm' -H 'Cookie: oraclelicense=accept-securebackup-cookie'\nRUN rpm -i jdk-8u111-linux-x64.rpm\nRUN rm jdk-8u111-linux-x64.rpm\nENV JAVA_HOME=\"/usr/java/default\"\nENV PATH=\"$PATH:$JAVA_HOME/bin\"\nRUN rm /usr/bin/java \\\n && ln -s $JAVA_HOME/bin/java /usr/bin/java\n#   download native support\nRUN mkdir -p /tmp/native\n#   RUN curl -Ls http://dl.bintray.com/sequenceiq/sequenceiq-bin/hadoop-native-64-2.7.0.tar | tar -x -C /tmp/native\nRUN curl -Ls https://github.com/sequenceiq/docker-hadoop-build/releases/download/v2.7.1/hadoop-native-64-2.7.1.tgz | tar -xz -C /tmp/native\n#   hadoop\nRUN curl -s http://www.us.apache.org/dist/hadoop/common/hadoop-2.7.1/hadoop-2.7.1.tar.gz | tar -xz -C /usr/local\nRUN cd /usr/local \\\n && ln -s hadoop-2.7.1 hadoop\n#   spark 1.4.1\n#   RUN curl -s http://d3kbcqa49mib13.cloudfront.net/spark-1.4.1-bin-hadoop2.6.tgz | tar -xz -C /usr/local\n#   RUN cd /usr/local && ln -s spark-1.4.1-bin-hadoop2.6 spark\n#   spark 1.6.2\nRUN curl -s http://d3kbcqa49mib13.cloudfront.net/spark-1.6.2-bin-hadoop2.6.tgz | tar -xz -C /usr/local\nRUN cd /usr/local \\\n && ln -s spark-1.6.2-bin-hadoop2.6 spark\nENV SPARK_HOME=\"/usr/local/spark\"\nENV HADOOP_PREFIX=\"/usr/local/hadoop\"\nENV HADOOP_COMMON_HOME=\"/usr/local/hadoop\"\nENV HADOOP_HDFS_HOME=\"/usr/local/hadoop\"\nENV HADOOP_MAPRED_HOME=\"/usr/local/hadoop\"\nENV HADOOP_YARN_HOME=\"/usr/local/hadoop\"\nENV HADOOP_CONF_DIR=\"/usr/local/hadoop/etc/hadoop\"\nENV YARN_CONF_DIR=\"/usr/local/hadoop/etc/hadoop\"\nENV LD_LIBRARY_PATH=\"/usr/local/hadoop/lib/native\"\nENV PATH=\"$PATH:$SPARK_HOME/bin:$HADOOP_PREFIX/bin\"\nRUN sed -i '/^export JAVA_HOME/ s:.*:export JAVA_HOME=/usr/java/default\\nexport HADOOP_PREFIX=/usr/local/hadoop\\nexport HADOOP_HOME=/usr/local/hadoop\\n:' /usr/local/hadoop/etc/hadoop/hadoop-env.sh\nRUN sed -i '/^export HADOOP_CONF_DIR/ s:.*:export HADOOP_CONF_DIR=/usr/local/hadoop/etc/hadoop/:' /usr/local/hadoop/etc/hadoop/hadoop-env.sh\n#   fixing the libhadoop.so like a boss - review this\nRUN rm -rf /usr/local/hadoop/lib/native \\\n && mv /tmp/native /usr/local/hadoop/lib \\\n && echo -e \"\\nlog4j.logger.org.apache.hadoop.util.NativeCodeLoader=ERROR\" >> /usr/local/hadoop/etc/hadoop/log4j.properties\n#   pseudo distributed\nADD core-site-template.xml /usr/local/hadoop/etc/hadoop/core-site-template.xml\nADD hdfs-site-template.xml /usr/local/hadoop/etc/hadoop/hdfs-site-template.xml\nADD yarn-site-template.xml /usr/local/hadoop/etc/hadoop/yarn-site-template.xml\nRUN sed s/HOSTNAME/localhost/ /usr/local/hadoop/etc/hadoop/core-site-template.xml > /usr/local/hadoop/etc/hadoop/core-site.xml\nRUN sed s/HOSTNAME/localhost/ /usr/local/hadoop/etc/hadoop/hdfs-site-template.xml > /usr/local/hadoop/etc/hadoop/hdfs-site.xml\nRUN /usr/local/hadoop/bin/hdfs namenode -format\nADD ssh_config /root/.ssh/config\nRUN chmod 600 /root/.ssh/config\nRUN chown root:root /root/.ssh/config\nADD bootstrap.sh /etc/bootstrap.sh\nRUN chown root:root /etc/bootstrap.sh\nRUN chmod 700 /etc/bootstrap.sh\nENV BOOTSTRAP=\"/etc/bootstrap.sh\"\n#   working around docker.io build error\nRUN ls -la /usr/local/hadoop/etc/hadoop/*-env.sh\nRUN chmod +x /usr/local/hadoop/etc/hadoop/*-env.sh\nRUN ls -la /usr/local/hadoop/etc/hadoop/*-env.sh\n#   fix the 254 error code\nRUN sed -i \"/^[^#]*UsePAM/ s/.*/#&/\" /etc/ssh/sshd_config\nRUN echo \"UsePAM no\" >> /etc/ssh/sshd_config\nRUN echo \"Port 2122\" >> /etc/ssh/sshd_config\nRUN service sshd start \\\n && /usr/local/hadoop/etc/hadoop/hadoop-env.sh \\\n && /usr/local/hadoop/sbin/start-dfs.sh \\\n && /usr/local/hadoop/bin/hdfs dfs -mkdir -p /user/root \\\n && /usr/local/hadoop/bin/hdfs dfs -chmod a+rwx /user/root \\\n && /usr/local/hadoop/bin/hdfs dfs -put /usr/local/spark/lib /spark\nCMD [\"/etc/bootstrap.sh\", \"-d\"]\n#   HDFS ports\nEXPOSE 9000/tcp 50010/tcp 50020/tcp 50070/tcp 50075/tcp 50090/tcp\n#   YARN ports\nEXPOSE 8030/tcp 8031/tcp 8032/tcp 8033/tcp 8040/tcp 8042/tcp 8088/tcp\n#   Other ports\nEXPOSE 2122/tcp 7077/tcp 8080/tcp 8081/tcp\n","originalDockerfileUglifiedHash":"19909fe2a96c7f089929754acc0cc1cf","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/7e41ad0b3dc1468917c10b7d67dfa8a5986aa8fa.dockerfile"}