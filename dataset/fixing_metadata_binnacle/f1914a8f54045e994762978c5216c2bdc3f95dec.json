{"seed":2225471243,"processedDockerfileHash":"92e4beeb70eb6e0e146337d078487189","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["have-a-healthcheck","have-a-user"],"processedDockerfile":"#\n#   nginx-proxy-manager Dockerfile\n#\n#   https://github.com/jlesage/docker-nginx-proxy-manager\n#\n#   Pull base image.\nFROM jlesage/baseimage:alpine-3.8-v2.4.2\n#   Define software versions.\nARG NGINX_PROXY_MANAGER_VERSION=2.0.13\n#   Define software download URLs.\nARG NGINX_PROXY_MANAGER_URL=https://github.com/jc21/nginx-proxy-manager/archive/${NGINX_PROXY_MANAGER_VERSION}.tar.gz\n#   Define working directory.\nWORKDIR /tmp\n#   Install dependencies.\nRUN add-pkg nodejs nginx nginx-mod-stream mariadb mariadb-client mariadb-server-utils certbot openssl apache2-utils \\\n && rm -r /var/lib/mysql \\\n && rm -r /var/log/nginx /var/lib/nginx /var/tmp/nginx /etc/nginx /etc/init.d/nginx /etc/logrotate.d/nginx /var/www \\\n && ln -s /tmp/nginx /var/tmp/nginx \\\n && mkdir -p /var/lib/nginx/logs \\\n && ln -sf /config/log/nginx/error.log /var/lib/nginx/logs/error.log\n#   Install Nginx Proxy Manager.\nRUN add-pkg --virtual build-dependencies build-base curl patch yarn git python npm bash \\\n && echo \"Installing node-prune...\" \\\n && curl -sfL https://install.goreleaser.com/github.com/tj/node-prune.sh | bash -s -- -b /tmp/bin \\\n && echo \"Downloading Nginx Proxy Manager package...\" \\\n && mkdir nginx-proxy-manager \\\n && curl -# -L ${NGINX_PROXY_MANAGER_URL} | tar xz --strip 1 -C nginx-proxy-manager \\\n && echo \"Building Nginx Proxy Manager...\" \\\n && cp -r nginx-proxy-manager /app \\\n && cd /app \\\n && yarn install \\\n && npm --cache /tmp/.npm run-script build \\\n && rm -rf node_modules \\\n && yarn install --prod \\\n && /tmp/bin/node-prune \\\n && cd /tmp \\\n && echo \"Installing Nginx Proxy Manager...\" \\\n && mkdir -p /opt/nginx-proxy-manager/src \\\n && cp -r /app/dist /opt/nginx-proxy-manager/ \\\n && cp -r /app/node_modules /opt/nginx-proxy-manager/ \\\n && cp -r /app/src/backend /opt/nginx-proxy-manager/src/ \\\n && cp -r /app/package.json /opt/nginx-proxy-manager/ \\\n && cp -r /app/knexfile.js /opt/nginx-proxy-manager/ \\\n && cp -r nginx-proxy-manager/rootfs/etc/nginx /etc/ \\\n && cp -r nginx-proxy-manager/rootfs/var/www /var/ \\\n && sed-patch 's|81|8181|' /opt/nginx-proxy-manager/src/backend/index.js \\\n && sed-patch 's|81|8181|' /etc/nginx/conf.d/default.conf \\\n && sed-patch 's|listen 80;|listen 8080;|' /etc/nginx/conf.d/default.conf \\\n && sed-patch 's|listen 80;|listen 8080;|' /opt/nginx-proxy-manager/src/backend/templates/letsencrypt-request.conf \\\n && sed-patch 's|listen 80;|listen 8080;|' /opt/nginx-proxy-manager/src/backend/templates/_listen.conf \\\n && sed-patch 's|listen 80 |listen 8080 |' /opt/nginx-proxy-manager/src/backend/templates/default.conf \\\n && sed-patch 's|listen 443 |listen 4443 |' /etc/nginx/conf.d/default.conf \\\n && sed-patch 's|listen 443 |listen 4443 |' /opt/nginx-proxy-manager/src/backend/templates/_listen.conf \\\n && sed-patch 's|-g \"error_log off;\"||' /opt/nginx-proxy-manager/src/backend/internal/nginx.js \\\n && sed-patch 's|user root;|#user root;|' /etc/nginx/nginx.conf \\\n && sed-patch '/daemon off;/a load_module /usr/lib/nginx/modules/ngx_stream_module.so;' /etc/nginx/nginx.conf \\\n && ln -s /config /data \\\n && mv /etc/nginx/conf.d/include/ip_ranges.conf /defaults/ \\\n && ln -sf /config/nginx/ip_ranges.conf /etc/nginx/conf.d/include/ip_ranges.conf \\\n && rm /etc/nginx/conf.d/include/resolvers.conf \\\n && ln -sf /config/nginx/resolvers.conf /etc/nginx/conf.d/include/resolvers.conf \\\n && ln -s /config/nginx/cache /var/lib/nginx/cache \\\n && mkdir /opt/nginx-proxy-manager/config \\\n && ln -s /config/production.json /opt/nginx-proxy-manager/config/production.json \\\n && ln -s /config/letsencrypt /etc/letsencrypt \\\n && del-pkg build-dependencies \\\n && rm -r /root/.node-gyp /app /usr/lib/node_modules /opt/nginx-proxy-manager/node_modules/bcrypt/build \\\n && rm -rf /tmp/* /tmp/.[!.]*\n#   Add files.\nCOPY rootfs/ /\n#   Set environment variables.\nENV APP_NAME=\"Nginx Proxy Manager\" \\\n    KEEP_APP_RUNNING=\"1\"\n#   Define mountable directories.\nVOLUME [\"/config\"]\n#   Expose ports.\n#     - 8080: HTTP traffic\n#     - 4443: HTTPs traffic\n#     - 8181: Management web interface\nEXPOSE 8080/tcp 4443/tcp 8181/tcp\n#   Metadata.\nLABEL org.label-schema.name=\"nginx-proxy-manager\" \\\n      org.label-schema.description=\"Docker container for Nginx Proxy Manager\" \\\n      org.label-schema.version=\"unknown\" \\\n      org.label-schema.vcs-url=\"https://github.com/jlesage/docker-nginx-proxy-manager\" \\\n      org.label-schema.schema-version=\"1.0\"\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#\n#  nginx-proxy-manager Dockerfile\n#\n#  https://github.com/jlesage/docker-nginx-proxy-manager\n#\n#  Pull base image.\nFROM jlesage/baseimage:alpine-3.8-v2.4.2\n#  Define software versions.\nARG NGINX_PROXY_MANAGER_VERSION=2.0.13\n#  Define software download URLs.\nARG NGINX_PROXY_MANAGER_URL=https://github.com/jc21/nginx-proxy-manager/archive/${NGINX_PROXY_MANAGER_VERSION}.tar.gz\n#  Define working directory.\nWORKDIR /tmp\n#  Install dependencies.\nRUN add-pkg nodejs nginx nginx-mod-stream mariadb mariadb-client mariadb-server-utils certbot openssl apache2-utils \\\n && rm -r /var/lib/mysql \\\n && rm -r /var/log/nginx /var/lib/nginx /var/tmp/nginx /etc/nginx /etc/init.d/nginx /etc/logrotate.d/nginx /var/www \\\n && ln -s /tmp/nginx /var/tmp/nginx \\\n && mkdir -p /var/lib/nginx/logs \\\n && ln -sf /config/log/nginx/error.log /var/lib/nginx/logs/error.log\n#  Install Nginx Proxy Manager.\nRUN add-pkg --virtual build-dependencies build-base curl patch yarn git python npm bash \\\n && echo \"Installing node-prune...\" \\\n && curl -sfL https://install.goreleaser.com/github.com/tj/node-prune.sh | bash -s -- -b /tmp/bin \\\n && echo \"Downloading Nginx Proxy Manager package...\" \\\n && mkdir nginx-proxy-manager \\\n && curl -# -L ${NGINX_PROXY_MANAGER_URL} | tar xz --strip 1 -C nginx-proxy-manager \\\n && echo \"Building Nginx Proxy Manager...\" \\\n && cp -r nginx-proxy-manager /app \\\n && cd /app \\\n && yarn install \\\n && npm --cache /tmp/.npm run-script build \\\n && rm -rf node_modules \\\n && yarn install --prod \\\n && /tmp/bin/node-prune \\\n && cd /tmp \\\n && echo \"Installing Nginx Proxy Manager...\" \\\n && mkdir -p /opt/nginx-proxy-manager/src \\\n && cp -r /app/dist /opt/nginx-proxy-manager/ \\\n && cp -r /app/node_modules /opt/nginx-proxy-manager/ \\\n && cp -r /app/src/backend /opt/nginx-proxy-manager/src/ \\\n && cp -r /app/package.json /opt/nginx-proxy-manager/ \\\n && cp -r /app/knexfile.js /opt/nginx-proxy-manager/ \\\n && cp -r nginx-proxy-manager/rootfs/etc/nginx /etc/ \\\n && cp -r nginx-proxy-manager/rootfs/var/www /var/ \\\n && sed-patch 's|81|8181|' /opt/nginx-proxy-manager/src/backend/index.js \\\n && sed-patch 's|81|8181|' /etc/nginx/conf.d/default.conf \\\n && sed-patch 's|listen 80;|listen 8080;|' /etc/nginx/conf.d/default.conf \\\n && sed-patch 's|listen 80;|listen 8080;|' /opt/nginx-proxy-manager/src/backend/templates/letsencrypt-request.conf \\\n && sed-patch 's|listen 80;|listen 8080;|' /opt/nginx-proxy-manager/src/backend/templates/_listen.conf \\\n && sed-patch 's|listen 80 |listen 8080 |' /opt/nginx-proxy-manager/src/backend/templates/default.conf \\\n && sed-patch 's|listen 443 |listen 4443 |' /etc/nginx/conf.d/default.conf \\\n && sed-patch 's|listen 443 |listen 4443 |' /opt/nginx-proxy-manager/src/backend/templates/_listen.conf \\\n && sed-patch 's|-g \"error_log off;\"||' /opt/nginx-proxy-manager/src/backend/internal/nginx.js \\\n && sed-patch 's|user root;|#user root;|' /etc/nginx/nginx.conf \\\n && sed-patch '/daemon off;/a load_module /usr/lib/nginx/modules/ngx_stream_module.so;' /etc/nginx/nginx.conf \\\n && ln -s /config /data \\\n && mv /etc/nginx/conf.d/include/ip_ranges.conf /defaults/ \\\n && ln -sf /config/nginx/ip_ranges.conf /etc/nginx/conf.d/include/ip_ranges.conf \\\n && rm /etc/nginx/conf.d/include/resolvers.conf \\\n && ln -sf /config/nginx/resolvers.conf /etc/nginx/conf.d/include/resolvers.conf \\\n && ln -s /config/nginx/cache /var/lib/nginx/cache \\\n && mkdir /opt/nginx-proxy-manager/config \\\n && ln -s /config/production.json /opt/nginx-proxy-manager/config/production.json \\\n && ln -s /config/letsencrypt /etc/letsencrypt \\\n && del-pkg build-dependencies \\\n && rm -r /root/.node-gyp /app /usr/lib/node_modules /opt/nginx-proxy-manager/node_modules/bcrypt/build \\\n && rm -rf /tmp/* /tmp/.[!.]*\n#  Add files.\nCOPY rootfs/ /\n#  Set environment variables.\nENV APP_NAME=\"Nginx Proxy Manager\" \\\n    KEEP_APP_RUNNING=\"1\"\n#  Define mountable directories.\nVOLUME [\"/config\"]\n#  Expose ports.\n#    - 8080: HTTP traffic\n#    - 4443: HTTPs traffic\n#    - 8181: Management web interface\nEXPOSE 8080/tcp 4443/tcp 8181/tcp\n#  Metadata.\nLABEL org.label-schema.name=\"nginx-proxy-manager\" \\\n      org.label-schema.description=\"Docker container for Nginx Proxy Manager\" \\\n      org.label-schema.version=\"unknown\" \\\n      org.label-schema.vcs-url=\"https://github.com/jlesage/docker-nginx-proxy-manager\" \\\n      org.label-schema.schema-version=\"1.0\"\n","injectedSmells":[],"originalDockerfileHash":"da71e7973d0211bafa6ab6db84a5ff0b","successfullyInjectedSmells":[],"originalDockerfileUglified":"#\n#   nginx-proxy-manager Dockerfile\n#\n#   https://github.com/jlesage/docker-nginx-proxy-manager\n#\n#   Pull base image.\nFROM jlesage/baseimage:alpine-3.8-v2.4.2\n#   Define software versions.\nARG NGINX_PROXY_MANAGER_VERSION=2.0.13\n#   Define software download URLs.\nARG NGINX_PROXY_MANAGER_URL=https://github.com/jc21/nginx-proxy-manager/archive/${NGINX_PROXY_MANAGER_VERSION}.tar.gz\n#   Define working directory.\nWORKDIR /tmp\n#   Install dependencies.\nRUN add-pkg nodejs nginx nginx-mod-stream mariadb mariadb-client mariadb-server-utils certbot openssl apache2-utils \\\n && rm -r /var/lib/mysql \\\n && rm -r /var/log/nginx /var/lib/nginx /var/tmp/nginx /etc/nginx /etc/init.d/nginx /etc/logrotate.d/nginx /var/www \\\n && ln -s /tmp/nginx /var/tmp/nginx \\\n && mkdir -p /var/lib/nginx/logs \\\n && ln -sf /config/log/nginx/error.log /var/lib/nginx/logs/error.log\n#   Install Nginx Proxy Manager.\nRUN add-pkg --virtual build-dependencies build-base curl patch yarn git python npm bash \\\n && echo \"Installing node-prune...\" \\\n && curl -sfL https://install.goreleaser.com/github.com/tj/node-prune.sh | bash -s -- -b /tmp/bin \\\n && echo \"Downloading Nginx Proxy Manager package...\" \\\n && mkdir nginx-proxy-manager \\\n && curl -# -L ${NGINX_PROXY_MANAGER_URL} | tar xz --strip 1 -C nginx-proxy-manager \\\n && echo \"Building Nginx Proxy Manager...\" \\\n && cp -r nginx-proxy-manager /app \\\n && cd /app \\\n && yarn install \\\n && npm --cache /tmp/.npm run-script build \\\n && rm -rf node_modules \\\n && yarn install --prod \\\n && /tmp/bin/node-prune \\\n && cd /tmp \\\n && echo \"Installing Nginx Proxy Manager...\" \\\n && mkdir -p /opt/nginx-proxy-manager/src \\\n && cp -r /app/dist /opt/nginx-proxy-manager/ \\\n && cp -r /app/node_modules /opt/nginx-proxy-manager/ \\\n && cp -r /app/src/backend /opt/nginx-proxy-manager/src/ \\\n && cp -r /app/package.json /opt/nginx-proxy-manager/ \\\n && cp -r /app/knexfile.js /opt/nginx-proxy-manager/ \\\n && cp -r nginx-proxy-manager/rootfs/etc/nginx /etc/ \\\n && cp -r nginx-proxy-manager/rootfs/var/www /var/ \\\n && sed-patch 's|81|8181|' /opt/nginx-proxy-manager/src/backend/index.js \\\n && sed-patch 's|81|8181|' /etc/nginx/conf.d/default.conf \\\n && sed-patch 's|listen 80;|listen 8080;|' /etc/nginx/conf.d/default.conf \\\n && sed-patch 's|listen 80;|listen 8080;|' /opt/nginx-proxy-manager/src/backend/templates/letsencrypt-request.conf \\\n && sed-patch 's|listen 80;|listen 8080;|' /opt/nginx-proxy-manager/src/backend/templates/_listen.conf \\\n && sed-patch 's|listen 80 |listen 8080 |' /opt/nginx-proxy-manager/src/backend/templates/default.conf \\\n && sed-patch 's|listen 443 |listen 4443 |' /etc/nginx/conf.d/default.conf \\\n && sed-patch 's|listen 443 |listen 4443 |' /opt/nginx-proxy-manager/src/backend/templates/_listen.conf \\\n && sed-patch 's|-g \"error_log off;\"||' /opt/nginx-proxy-manager/src/backend/internal/nginx.js \\\n && sed-patch 's|user root;|#user root;|' /etc/nginx/nginx.conf \\\n && sed-patch '/daemon off;/a load_module /usr/lib/nginx/modules/ngx_stream_module.so;' /etc/nginx/nginx.conf \\\n && ln -s /config /data \\\n && mv /etc/nginx/conf.d/include/ip_ranges.conf /defaults/ \\\n && ln -sf /config/nginx/ip_ranges.conf /etc/nginx/conf.d/include/ip_ranges.conf \\\n && rm /etc/nginx/conf.d/include/resolvers.conf \\\n && ln -sf /config/nginx/resolvers.conf /etc/nginx/conf.d/include/resolvers.conf \\\n && ln -s /config/nginx/cache /var/lib/nginx/cache \\\n && mkdir /opt/nginx-proxy-manager/config \\\n && ln -s /config/production.json /opt/nginx-proxy-manager/config/production.json \\\n && ln -s /config/letsencrypt /etc/letsencrypt \\\n && del-pkg build-dependencies \\\n && rm -r /root/.node-gyp /app /usr/lib/node_modules /opt/nginx-proxy-manager/node_modules/bcrypt/build \\\n && rm -rf /tmp/* /tmp/.[!.]*\n#   Add files.\nCOPY rootfs/ /\n#   Set environment variables.\nENV APP_NAME=\"Nginx Proxy Manager\" \\\n    KEEP_APP_RUNNING=\"1\"\n#   Define mountable directories.\nVOLUME [\"/config\"]\n#   Expose ports.\n#     - 8080: HTTP traffic\n#     - 4443: HTTPs traffic\n#     - 8181: Management web interface\nEXPOSE 8080/tcp 4443/tcp 8181/tcp\n#   Metadata.\nLABEL org.label-schema.name=\"nginx-proxy-manager\" \\\n      org.label-schema.description=\"Docker container for Nginx Proxy Manager\" \\\n      org.label-schema.version=\"unknown\" \\\n      org.label-schema.vcs-url=\"https://github.com/jlesage/docker-nginx-proxy-manager\" \\\n      org.label-schema.schema-version=\"1.0\"\n","originalDockerfileUglifiedHash":"ffdc2ac8e725d1cf3fe8ce5e53962ad8","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/f1914a8f54045e994762978c5216c2bdc3f95dec.dockerfile"}