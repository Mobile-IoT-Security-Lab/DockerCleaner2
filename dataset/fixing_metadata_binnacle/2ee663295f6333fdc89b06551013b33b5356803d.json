{"seed":4177481435,"processedDockerfileHash":"a2f47ac38e1425c23513a99c1bc28b5b","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM nvidia/cuda:9.0-cudnn7-devel-ubuntu16.04\nRUN apt-get update -y \\\n && apt-get install --no-install-recommends curl git build-essential gfortran nasm tmux sudo openssh-client libgoogle-glog-dev rsync curl wget cmake automake libgmp3-dev cpio libtool libyaml-dev realpath valgrind software-properties-common unzip libz-dev vim emacs python3-dev python3-pip python3-wheel python3-setuptools -y \\\n && rm -rf /var/lib/apt/lists/* /var/cache/apt/archives/*\nWORKDIR /root\n#   Install Intel MKL\nRUN mkdir intel_mkl \\\n && cd intel_mkl \\\n && wget http://registrationcenter-download.intel.com/akdlm/irc_nas/tec/12725/l_mkl_2018.2.199.tgz \\\n && tar zxvf l_mkl_2018.2.199.tgz \\\n && rm -rf l_mkl_2018.2.199.tgz \\\n && cd l_mkl_2018.2.199 \\\n && sed -i -E \"s/ACCEPT_EULA=decline/ACCEPT_EULA=accept/g\" silent.cfg \\\n && ./install.sh -s silent.cfg \\\n && rm -rf ${HOME}/intel_mkl\nENV LD_LIBRARY_PATH=\"/opt/intel/mkl/lib/intel64:/opt/intel/lib/intel64:$LD_LIBRARY_PATH\"\n#   Install numpy & scipy with mkl backend\nRUN echo \"[mkl]\\nlibrary_dirs = /opt/intel/mkl/lib/intel64\\ninclude_dirs = /opt/intel/mkl/include\\nmkl_libs = mkl_rt\\nlapack_libs =\" >> $HOME/.numpy-site.cfg \\\n && pip3 install --no-binary :all: numpy==1.14.2 \\\n && pip3 install --no-binary :all: scipy==1.0.1\n#   Install libjpeg-turbo\nRUN mkdir libjpeg-turbo \\\n && cd libjpeg-turbo \\\n && wget https://jaist.dl.sourceforge.net/project/libjpeg-turbo/1.5.1/libjpeg-turbo-1.5.1.tar.gz \\\n && tar zxvf libjpeg-turbo-1.5.1.tar.gz \\\n && rm -rf libjpeg-turbo-1.5.1.tar.gz \\\n && cd libjpeg-turbo-1.5.1 \\\n && ./configure --prefix=${HOME} \\\n && make -j$( nproc ;) \\\n && make install \\\n && rm -rf ${HOME}/libjpeg-turbo\n#   Install OpenCV with libjpeg-turbo\nRUN mkdir opencv \\\n && cd opencv \\\n && wget https://github.com/opencv/opencv/archive/3.4.1.tar.gz \\\n && tar zxvf 3.4.1.tar.gz \\\n && rm -rf 3.4.1.tar.gz \\\n && wget https://github.com/opencv/opencv_contrib/archive/3.4.1.tar.gz \\\n && tar zxvf 3.4.1.tar.gz \\\n && rm -rf 3.4.1.tar.gz \\\n && mkdir build \\\n && cd build \\\n && cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=/usr/local -DWITH_TBB=ON -DWITH_EIGEN=OFF -DWITH_FFMPEG=ON -DWITH_QT=OFF -DWITH_OPENCL=OFF -DWITH_CUDA=ON -DCUDA_ARCH_BIN=6.0 -DCUDA_ARCH_PTX= -DWITH_JPEG=ON -DBUILD_JPEG=OFF -DJPEG_INCLUDE_DIR=${HOME}/include -DJPEG_LIBRARY=${HOME}/lib/libjpeg.so -DOPENCV_EXTRA_MODULES_PATH=${HOME}/opencv/opencv_contrib-3.4.1/modules -DBUILD_opencv_python3=ON -DPYTHON3_EXECUTABLE=$( which python3 ;) -DPYTHON3_INCLUDE_DIR=$( python3 -c 'from distutils.sysconfig import get_python_inc; print(get_python_inc())' ;) -DPYTHON3_NUMPY_INCLUDE_DIRS=$( python3 -c 'import numpy; print(numpy.get_include())' ;) -DPYTHON3_LIBRARIES=$( find /usr/lib -name 'libpython*.so' ;) ${HOME}/opencv/opencv-3.4.1 \\\n && make -j$( nproc ;) \\\n && make install \\\n && rm -rf ${HOME}/opencv\nRUN pip3 install --no-cache-dir ipython==6.3.1 jupyter==1.0.0 cython==0.28.2 cupy-cuda90==4.0.0 chainer==4.0.0 matplotlib==2.2.2 scikit-learn==0.19.1 pandas==0.22.0\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM nvidia/cuda:9.0-cudnn7-devel-ubuntu16.04\nRUN apt-get update -y \\\n && apt-get install --no-install-recommends curl git build-essential gfortran nasm tmux sudo openssh-client libgoogle-glog-dev rsync curl wget cmake automake libgmp3-dev cpio libtool libyaml-dev realpath valgrind software-properties-common unzip libz-dev vim emacs python3-dev python3-pip python3-wheel python3-setuptools -y \\\n && rm -rf /var/lib/apt/lists/* /var/cache/apt/archives/*\nWORKDIR /root\n#  Install Intel MKL\nRUN mkdir intel_mkl \\\n && cd intel_mkl \\\n && wget http://registrationcenter-download.intel.com/akdlm/irc_nas/tec/12725/l_mkl_2018.2.199.tgz \\\n && tar zxvf l_mkl_2018.2.199.tgz \\\n && rm -rf l_mkl_2018.2.199.tgz \\\n && cd l_mkl_2018.2.199 \\\n && sed -i -E \"s/ACCEPT_EULA=decline/ACCEPT_EULA=accept/g\" silent.cfg \\\n && ./install.sh -s silent.cfg \\\n && rm -rf ${HOME}/intel_mkl\nENV LD_LIBRARY_PATH=\"/opt/intel/mkl/lib/intel64:/opt/intel/lib/intel64:$LD_LIBRARY_PATH\"\n#  Install numpy & scipy with mkl backend\nRUN echo \"[mkl]\\nlibrary_dirs = /opt/intel/mkl/lib/intel64\\ninclude_dirs = /opt/intel/mkl/include\\nmkl_libs = mkl_rt\\nlapack_libs =\" >> $HOME/.numpy-site.cfg \\\n && pip3 install --no-binary :all: numpy==1.14.2 \\\n && pip3 install --no-binary :all: scipy==1.0.1\n#  Install libjpeg-turbo\nRUN mkdir libjpeg-turbo \\\n && cd libjpeg-turbo \\\n && wget https://jaist.dl.sourceforge.net/project/libjpeg-turbo/1.5.1/libjpeg-turbo-1.5.1.tar.gz \\\n && tar zxvf libjpeg-turbo-1.5.1.tar.gz \\\n && rm -rf libjpeg-turbo-1.5.1.tar.gz \\\n && cd libjpeg-turbo-1.5.1 \\\n && ./configure --prefix=${HOME} \\\n && make -j$( nproc ;) \\\n && make install \\\n && rm -rf ${HOME}/libjpeg-turbo\n#  Install OpenCV with libjpeg-turbo\nRUN mkdir opencv \\\n && cd opencv \\\n && wget https://github.com/opencv/opencv/archive/3.4.1.tar.gz \\\n && tar zxvf 3.4.1.tar.gz \\\n && rm -rf 3.4.1.tar.gz \\\n && wget https://github.com/opencv/opencv_contrib/archive/3.4.1.tar.gz \\\n && tar zxvf 3.4.1.tar.gz \\\n && rm -rf 3.4.1.tar.gz \\\n && mkdir build \\\n && cd build \\\n && cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=/usr/local -DWITH_TBB=ON -DWITH_EIGEN=OFF -DWITH_FFMPEG=ON -DWITH_QT=OFF -DWITH_OPENCL=OFF -DWITH_CUDA=ON -DCUDA_ARCH_BIN=6.0 -DCUDA_ARCH_PTX= -DWITH_JPEG=ON -DBUILD_JPEG=OFF -DJPEG_INCLUDE_DIR=${HOME}/include -DJPEG_LIBRARY=${HOME}/lib/libjpeg.so -DOPENCV_EXTRA_MODULES_PATH=${HOME}/opencv/opencv_contrib-3.4.1/modules -DBUILD_opencv_python3=ON -DPYTHON3_EXECUTABLE=$( which python3 ;) -DPYTHON3_INCLUDE_DIR=$( python3 -c 'from distutils.sysconfig import get_python_inc; print(get_python_inc())' ;) -DPYTHON3_NUMPY_INCLUDE_DIRS=$( python3 -c 'import numpy; print(numpy.get_include())' ;) -DPYTHON3_LIBRARIES=$( find /usr/lib -name 'libpython*.so' ;) ${HOME}/opencv/opencv-3.4.1 \\\n && make -j$( nproc ;) \\\n && make install \\\n && rm -rf ${HOME}/opencv\nRUN pip3 install --no-cache-dir ipython==6.3.1 jupyter==1.0.0 cython==0.28.2 cupy-cuda90==4.0.0 chainer==4.0.0 matplotlib==2.2.2 scikit-learn==0.19.1 pandas==0.22.0\n","injectedSmells":[],"originalDockerfileHash":"2f6afc8ecee7364999a8b469f8ff4edb","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM nvidia/cuda:9.0-cudnn7-devel-ubuntu16.04\nRUN apt-get update -y \\\n && apt-get install --no-install-recommends curl git build-essential gfortran nasm tmux sudo openssh-client libgoogle-glog-dev rsync curl wget cmake automake libgmp3-dev cpio libtool libyaml-dev realpath valgrind software-properties-common unzip libz-dev vim emacs python3-dev python3-pip python3-wheel python3-setuptools -y \\\n && rm -rf /var/lib/apt/lists/* /var/cache/apt/archives/*\nWORKDIR /root\n#   Install Intel MKL\nRUN mkdir intel_mkl \\\n && cd intel_mkl \\\n && wget http://registrationcenter-download.intel.com/akdlm/irc_nas/tec/12725/l_mkl_2018.2.199.tgz \\\n && tar zxvf l_mkl_2018.2.199.tgz \\\n && rm -rf l_mkl_2018.2.199.tgz \\\n && cd l_mkl_2018.2.199 \\\n && sed -i -E \"s/ACCEPT_EULA=decline/ACCEPT_EULA=accept/g\" silent.cfg \\\n && ./install.sh -s silent.cfg \\\n && rm -rf ${HOME}/intel_mkl\nENV LD_LIBRARY_PATH=\"/opt/intel/mkl/lib/intel64:/opt/intel/lib/intel64:$LD_LIBRARY_PATH\"\n#   Install numpy & scipy with mkl backend\nRUN echo \"[mkl]\\nlibrary_dirs = /opt/intel/mkl/lib/intel64\\ninclude_dirs = /opt/intel/mkl/include\\nmkl_libs = mkl_rt\\nlapack_libs =\" >> $HOME/.numpy-site.cfg \\\n && pip3 install --no-binary :all: numpy==1.14.2 \\\n && pip3 install --no-binary :all: scipy==1.0.1\n#   Install libjpeg-turbo\nRUN mkdir libjpeg-turbo \\\n && cd libjpeg-turbo \\\n && wget https://jaist.dl.sourceforge.net/project/libjpeg-turbo/1.5.1/libjpeg-turbo-1.5.1.tar.gz \\\n && tar zxvf libjpeg-turbo-1.5.1.tar.gz \\\n && rm -rf libjpeg-turbo-1.5.1.tar.gz \\\n && cd libjpeg-turbo-1.5.1 \\\n && ./configure --prefix=${HOME} \\\n && make -j$( nproc ;) \\\n && make install \\\n && rm -rf ${HOME}/libjpeg-turbo\n#   Install OpenCV with libjpeg-turbo\nRUN mkdir opencv \\\n && cd opencv \\\n && wget https://github.com/opencv/opencv/archive/3.4.1.tar.gz \\\n && tar zxvf 3.4.1.tar.gz \\\n && rm -rf 3.4.1.tar.gz \\\n && wget https://github.com/opencv/opencv_contrib/archive/3.4.1.tar.gz \\\n && tar zxvf 3.4.1.tar.gz \\\n && rm -rf 3.4.1.tar.gz \\\n && mkdir build \\\n && cd build \\\n && cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=/usr/local -DWITH_TBB=ON -DWITH_EIGEN=OFF -DWITH_FFMPEG=ON -DWITH_QT=OFF -DWITH_OPENCL=OFF -DWITH_CUDA=ON -DCUDA_ARCH_BIN=6.0 -DCUDA_ARCH_PTX= -DWITH_JPEG=ON -DBUILD_JPEG=OFF -DJPEG_INCLUDE_DIR=${HOME}/include -DJPEG_LIBRARY=${HOME}/lib/libjpeg.so -DOPENCV_EXTRA_MODULES_PATH=${HOME}/opencv/opencv_contrib-3.4.1/modules -DBUILD_opencv_python3=ON -DPYTHON3_EXECUTABLE=$( which python3 ;) -DPYTHON3_INCLUDE_DIR=$( python3 -c 'from distutils.sysconfig import get_python_inc; print(get_python_inc())' ;) -DPYTHON3_NUMPY_INCLUDE_DIRS=$( python3 -c 'import numpy; print(numpy.get_include())' ;) -DPYTHON3_LIBRARIES=$( find /usr/lib -name 'libpython*.so' ;) ${HOME}/opencv/opencv-3.4.1 \\\n && make -j$( nproc ;) \\\n && make install \\\n && rm -rf ${HOME}/opencv\nRUN pip3 install --no-cache-dir ipython==6.3.1 jupyter==1.0.0 cython==0.28.2 cupy-cuda90==4.0.0 chainer==4.0.0 matplotlib==2.2.2 scikit-learn==0.19.1 pandas==0.22.0\n","originalDockerfileUglifiedHash":"acdae54cfe620d73fee8144208bf3dd3","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/2ee663295f6333fdc89b06551013b33b5356803d.dockerfile"}