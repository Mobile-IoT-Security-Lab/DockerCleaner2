{"seed":2372320035,"processedDockerfileHash":"59220c8746c05db7b8a007c189e11e37","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM ubuntu:16.04\nMAINTAINER Waleed Abdulla <waleed.abdulla@gmail.com>\n#   Supress warnings about missing front-end. As recommended at:\n#   http://stackoverflow.com/questions/22466255/is-it-possibe-to-answer-dialog-questions-when-installing-under-docker\nARG DEBIAN_FRONTEND=noninteractive\n#   Essentials: developer tools, build tools, OpenBLAS\nRUN apt-get update \\\n && apt-get install --no-install-recommends apt-utils=1.2.35 git=1:2.7.4-0ubuntu1.10 curl=7.47.0-1ubuntu2.19 vim=2:7.4.1689-3ubuntu1.5 unzip=6.0-20ubuntu1.1 openssh-client=1:7.2p2-4ubuntu2.10 wget=1.17.1-1ubuntu1.5 build-essential=12.1ubuntu2 cmake=3.5.1-1ubuntu3 libopenblas-dev=0.2.18-1ubuntu1 -y\n#\n#   Python 3.5\n#\n#   For convenience, alias (but don't sym-link) python & pip to python3 & pip3 as recommended in:\n#   http://askubuntu.com/questions/351318/changing-symlink-python-to-python3-causes-problems\nRUN apt-get install --no-install-recommends python3.5=3.5.2-2ubuntu0~16.04.13 python3.5-dev=3.5.2-2ubuntu0~16.04.13 python3-pip=8.1.1-2ubuntu0.6 python3-tk=3.5.1-1 -y \\\n && pip3 install --no-cache-dir --upgrade pip setuptools \\\n && echo \"alias python='python3'\" >> /root/.bash_aliases \\\n && echo \"alias pip='pip3'\" >> /root/.bash_aliases\n#   Pillow and it's dependencies\nRUN apt-get install --no-install-recommends libjpeg-dev=8c-2ubuntu8 zlib1g-dev=1:1.2.8.dfsg-2ubuntu4.3 -y \\\n && pip3 --no-cache-dir install Pillow\n#   Science libraries and other common packages\nRUN pip3 --no-cache-dir install numpy scipy sklearn scikit-image pandas matplotlib Cython requests\n#\n#   Jupyter Notebook\n#\n#   Allow access from outside the container, and skip trying to open a browser.\n#   NOTE: disable authentication token for convenience. DON'T DO THIS ON A PUBLIC SERVER.\nRUN pip3 --no-cache-dir install jupyter \\\n && mkdir /root/.jupyter \\\n && echo \"c.NotebookApp.ip = '*'\" \"\\nc.NotebookApp.open_browser = False\" \"\\nc.NotebookApp.token = ''\" > /root/.jupyter/jupyter_notebook_config.py\nEXPOSE 8888/tcp\n#\n#   Tensorflow 1.6.0 - CPU\n#\nRUN pip3 install --no-cache-dir --upgrade tensorflow\n#   Expose port for TensorBoard\nEXPOSE 6006/tcp\n#\n#   OpenCV 3.4.1\n#\n#   Dependencies\nRUN apt-get install --no-install-recommends libjpeg8-dev=8c-2ubuntu8 libtiff5-dev=4.0.6-1ubuntu0.8 libjasper-dev=1.900.1-debian1-2.4ubuntu1.3 libpng12-dev=1.2.54-1ubuntu1.1 libavcodec-dev=7:2.8.17-0ubuntu0.1 libavformat-dev=7:2.8.17-0ubuntu0.1 libswscale-dev=7:2.8.17-0ubuntu0.1 libv4l-dev=1.10.0-1 libgtk2.0-dev=2.24.30-1ubuntu1.16.04.2 liblapacke-dev=3.6.0-2ubuntu2 checkinstall=1.6.2-4ubuntu1 -y\n#   Get source from github\nRUN git clone -b 3.4.1 --depth 1 https://github.com/opencv/opencv.git /usr/local/src/opencv\n#   Compile\nRUN cd /usr/local/src/opencv \\\n && mkdir build \\\n && cd build \\\n && cmake -D CMAKE_INSTALL_PREFIX=/usr/local -D BUILD_TESTS=OFF -D BUILD_PERF_TESTS=OFF -D PYTHON_DEFAULT_EXECUTABLE=$( which python3 ;) .. \\\n && make -j\"$( nproc ;)\" \\\n && make install\n#\n#   Caffe\n#\n#   Dependencies\nRUN apt-get install --no-install-recommends cmake=3.5.1-1ubuntu3 libprotobuf-dev=2.6.1-1.3 libleveldb-dev=1.18-5 libsnappy-dev=1.1.3-2 libopencv-dev=2.4.9.1+dfsg-1.5ubuntu1.1 libhdf5-serial-dev=1.8.16+docs-4ubuntu1.1 protobuf-compiler=2.6.1-1.3 liblmdb-dev=0.9.17-3 libgoogle-glog-dev=0.3.4-0.1 libboost-all-dev=1.58.0.1ubuntu1 -y \\\n && pip3 install lmdb\n#   Get source. Use master branch because the latest stable release (rc3) misses critical fixes.\nRUN git clone -b master --depth 1 https://github.com/BVLC/caffe.git /usr/local/src/caffe\n#   Python dependencies\nRUN pip3 --no-cache-dir install -r /usr/local/src/caffe/python/requirements.txt\n#   Compile\nRUN cd /usr/local/src/caffe \\\n && mkdir build \\\n && cd build \\\n && cmake -D CPU_ONLY=ON -D python_version=3 -D BLAS=open -D USE_OPENCV=ON .. \\\n && make -j\"$( nproc ;)\" all \\\n && make install\n#   Enivronment variables\nENV PYTHONPATH=\"/usr/local/src/caffe/python:$PYTHONPATH\" \\\n    PATH=\"/usr/local/src/caffe/build/tools:$PATH\"\n#   Fix: old version of python-dateutil breaks caffe. Update it.\nRUN pip3 install --no-cache-dir python-dateutil --upgrade\n#\n#   Java\n#\n#   Install JDK (Java Development Kit), which includes JRE (Java Runtime\n#   Environment). Or, if you just want to run Java apps, you can install\n#   JRE only using: apt install default-jre\nRUN apt-get install --no-install-recommends default-jdk=2:1.8-56ubuntu2 -y\n#\n#   Keras 2.1.5\n#\nRUN pip3 install --no-cache-dir --upgrade h5py pydot_ng keras\n#\n#   PyTorch 0.3.1\n#\nRUN pip3 install http://download.pytorch.org/whl/cpu/torch-0.3.1-cp35-cp35m-linux_x86_64.whl \\\n && pip3 install torchvision\n#\n#   PyCocoTools\n#\n#   Using a fork of the original that has a fix for Python 3.\n#   I submitted a PR to the original repo (https://github.com/cocodataset/cocoapi/pull/50)\n#   but it doesn't seem to be active anymore.\nRUN pip3 install --no-cache-dir git+https://github.com/waleedka/coco.git#subdirectory=PythonAPI\nWORKDIR \"/root\"\nCMD [\"/bin/bash\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:16.04\nMAINTAINER Waleed Abdulla <waleed.abdulla@gmail.com>\n#  Supress warnings about missing front-end. As recommended at:\n#  http://stackoverflow.com/questions/22466255/is-it-possibe-to-answer-dialog-questions-when-installing-under-docker\nARG DEBIAN_FRONTEND=noninteractive\n#  Essentials: developer tools, build tools, OpenBLAS\nRUN apt-get update \\\n && apt-get install --no-install-recommends apt-utils git curl vim unzip openssh-client wget build-essential cmake libopenblas-dev -y\n#\n#  Python 3.5\n#\n#  For convenience, alias (but don't sym-link) python & pip to python3 & pip3 as recommended in:\n#  http://askubuntu.com/questions/351318/changing-symlink-python-to-python3-causes-problems\nRUN apt-get install --no-install-recommends python3.5 python3.5-dev python3-pip python3-tk -y \\\n && pip3 install --no-cache-dir --upgrade pip setuptools \\\n && echo \"alias python='python3'\" >> /root/.bash_aliases \\\n && echo \"alias pip='pip3'\" >> /root/.bash_aliases\n#  Pillow and it's dependencies\nRUN apt-get install --no-install-recommends libjpeg-dev zlib1g-dev -y \\\n && pip3 --no-cache-dir install Pillow\n#  Science libraries and other common packages\nRUN pip3 --no-cache-dir install numpy scipy sklearn scikit-image pandas matplotlib Cython requests\n#\n#  Jupyter Notebook\n#\n#  Allow access from outside the container, and skip trying to open a browser.\n#  NOTE: disable authentication token for convenience. DON'T DO THIS ON A PUBLIC SERVER.\nRUN pip3 --no-cache-dir install jupyter \\\n && mkdir /root/.jupyter \\\n && echo \"c.NotebookApp.ip = '*'\" \"\\nc.NotebookApp.open_browser = False\" \"\\nc.NotebookApp.token = ''\" > /root/.jupyter/jupyter_notebook_config.py\nEXPOSE 8888/tcp\n#\n#  Tensorflow 1.6.0 - CPU\n#\nRUN pip3 install --no-cache-dir --upgrade tensorflow\n#  Expose port for TensorBoard\nEXPOSE 6006/tcp\n#\n#  OpenCV 3.4.1\n#\n#  Dependencies\nRUN apt-get install --no-install-recommends libjpeg8-dev libtiff5-dev libjasper-dev libpng12-dev libavcodec-dev libavformat-dev libswscale-dev libv4l-dev libgtk2.0-dev liblapacke-dev checkinstall -y\n#  Get source from github\nRUN git clone -b 3.4.1 --depth 1 https://github.com/opencv/opencv.git /usr/local/src/opencv\n#  Compile\nRUN cd /usr/local/src/opencv \\\n && mkdir build \\\n && cd build \\\n && cmake -D CMAKE_INSTALL_PREFIX=/usr/local -D BUILD_TESTS=OFF -D BUILD_PERF_TESTS=OFF -D PYTHON_DEFAULT_EXECUTABLE=$( which python3 ;) .. \\\n && make -j\"$( nproc ;)\" \\\n && make install\n#\n#  Caffe\n#\n#  Dependencies\nRUN apt-get install --no-install-recommends cmake libprotobuf-dev libleveldb-dev libsnappy-dev libopencv-dev libhdf5-serial-dev protobuf-compiler liblmdb-dev libgoogle-glog-dev libboost-all-dev -y \\\n && pip3 install lmdb\n#  Get source. Use master branch because the latest stable release (rc3) misses critical fixes.\nRUN git clone -b master --depth 1 https://github.com/BVLC/caffe.git /usr/local/src/caffe\n#  Python dependencies\nRUN pip3 --no-cache-dir install -r /usr/local/src/caffe/python/requirements.txt\n#  Compile\nRUN cd /usr/local/src/caffe \\\n && mkdir build \\\n && cd build \\\n && cmake -D CPU_ONLY=ON -D python_version=3 -D BLAS=open -D USE_OPENCV=ON .. \\\n && make -j\"$( nproc ;)\" all \\\n && make install\n#  Enivronment variables\nENV PYTHONPATH=\"/usr/local/src/caffe/python:$PYTHONPATH\" \\\n    PATH=\"/usr/local/src/caffe/build/tools:$PATH\"\n#  Fix: old version of python-dateutil breaks caffe. Update it.\nRUN pip3 install --no-cache-dir python-dateutil --upgrade\n#\n#  Java\n#\n#  Install JDK (Java Development Kit), which includes JRE (Java Runtime\n#  Environment). Or, if you just want to run Java apps, you can install\n#  JRE only using: apt install default-jre\nRUN apt-get install --no-install-recommends default-jdk -y\n#\n#  Keras 2.1.5\n#\nRUN pip3 install --no-cache-dir --upgrade h5py pydot_ng keras\n#\n#  PyTorch 0.3.1\n#\nRUN pip3 install http://download.pytorch.org/whl/cpu/torch-0.3.1-cp35-cp35m-linux_x86_64.whl \\\n && pip3 install torchvision\n#\n#  PyCocoTools\n#\n#  Using a fork of the original that has a fix for Python 3.\n#  I submitted a PR to the original repo (https://github.com/cocodataset/cocoapi/pull/50)\n#  but it doesn't seem to be active anymore.\nRUN pip3 install --no-cache-dir git+https://github.com/waleedka/coco.git#subdirectory=PythonAPI\nWORKDIR \"/root\"\nCMD [\"/bin/bash\"]\n","injectedSmells":[],"originalDockerfileHash":"78d2be97534246faff79a6c78d66bb23","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:16.04\nMAINTAINER Waleed Abdulla <waleed.abdulla@gmail.com>\n#   Supress warnings about missing front-end. As recommended at:\n#   http://stackoverflow.com/questions/22466255/is-it-possibe-to-answer-dialog-questions-when-installing-under-docker\nARG DEBIAN_FRONTEND=noninteractive\n#   Essentials: developer tools, build tools, OpenBLAS\nRUN apt-get update \\\n && apt-get install --no-install-recommends apt-utils git curl vim unzip openssh-client wget build-essential cmake libopenblas-dev -y\n#\n#   Python 3.5\n#\n#   For convenience, alias (but don't sym-link) python & pip to python3 & pip3 as recommended in:\n#   http://askubuntu.com/questions/351318/changing-symlink-python-to-python3-causes-problems\nRUN apt-get install --no-install-recommends python3.5 python3.5-dev python3-pip python3-tk -y \\\n && pip3 install --no-cache-dir --upgrade pip setuptools \\\n && echo \"alias python='python3'\" >> /root/.bash_aliases \\\n && echo \"alias pip='pip3'\" >> /root/.bash_aliases\n#   Pillow and it's dependencies\nRUN apt-get install --no-install-recommends libjpeg-dev zlib1g-dev -y \\\n && pip3 --no-cache-dir install Pillow\n#   Science libraries and other common packages\nRUN pip3 --no-cache-dir install numpy scipy sklearn scikit-image pandas matplotlib Cython requests\n#\n#   Jupyter Notebook\n#\n#   Allow access from outside the container, and skip trying to open a browser.\n#   NOTE: disable authentication token for convenience. DON'T DO THIS ON A PUBLIC SERVER.\nRUN pip3 --no-cache-dir install jupyter \\\n && mkdir /root/.jupyter \\\n && echo \"c.NotebookApp.ip = '*'\" \"\\nc.NotebookApp.open_browser = False\" \"\\nc.NotebookApp.token = ''\" > /root/.jupyter/jupyter_notebook_config.py\nEXPOSE 8888/tcp\n#\n#   Tensorflow 1.6.0 - CPU\n#\nRUN pip3 install --no-cache-dir --upgrade tensorflow\n#   Expose port for TensorBoard\nEXPOSE 6006/tcp\n#\n#   OpenCV 3.4.1\n#\n#   Dependencies\nRUN apt-get install --no-install-recommends libjpeg8-dev libtiff5-dev libjasper-dev libpng12-dev libavcodec-dev libavformat-dev libswscale-dev libv4l-dev libgtk2.0-dev liblapacke-dev checkinstall -y\n#   Get source from github\nRUN git clone -b 3.4.1 --depth 1 https://github.com/opencv/opencv.git /usr/local/src/opencv\n#   Compile\nRUN cd /usr/local/src/opencv \\\n && mkdir build \\\n && cd build \\\n && cmake -D CMAKE_INSTALL_PREFIX=/usr/local -D BUILD_TESTS=OFF -D BUILD_PERF_TESTS=OFF -D PYTHON_DEFAULT_EXECUTABLE=$( which python3 ;) .. \\\n && make -j\"$( nproc ;)\" \\\n && make install\n#\n#   Caffe\n#\n#   Dependencies\nRUN apt-get install --no-install-recommends cmake libprotobuf-dev libleveldb-dev libsnappy-dev libopencv-dev libhdf5-serial-dev protobuf-compiler liblmdb-dev libgoogle-glog-dev libboost-all-dev -y \\\n && pip3 install lmdb\n#   Get source. Use master branch because the latest stable release (rc3) misses critical fixes.\nRUN git clone -b master --depth 1 https://github.com/BVLC/caffe.git /usr/local/src/caffe\n#   Python dependencies\nRUN pip3 --no-cache-dir install -r /usr/local/src/caffe/python/requirements.txt\n#   Compile\nRUN cd /usr/local/src/caffe \\\n && mkdir build \\\n && cd build \\\n && cmake -D CPU_ONLY=ON -D python_version=3 -D BLAS=open -D USE_OPENCV=ON .. \\\n && make -j\"$( nproc ;)\" all \\\n && make install\n#   Enivronment variables\nENV PYTHONPATH=\"/usr/local/src/caffe/python:$PYTHONPATH\" \\\n    PATH=\"/usr/local/src/caffe/build/tools:$PATH\"\n#   Fix: old version of python-dateutil breaks caffe. Update it.\nRUN pip3 install --no-cache-dir python-dateutil --upgrade\n#\n#   Java\n#\n#   Install JDK (Java Development Kit), which includes JRE (Java Runtime\n#   Environment). Or, if you just want to run Java apps, you can install\n#   JRE only using: apt install default-jre\nRUN apt-get install --no-install-recommends default-jdk -y\n#\n#   Keras 2.1.5\n#\nRUN pip3 install --no-cache-dir --upgrade h5py pydot_ng keras\n#\n#   PyTorch 0.3.1\n#\nRUN pip3 install http://download.pytorch.org/whl/cpu/torch-0.3.1-cp35-cp35m-linux_x86_64.whl \\\n && pip3 install torchvision\n#\n#   PyCocoTools\n#\n#   Using a fork of the original that has a fix for Python 3.\n#   I submitted a PR to the original repo (https://github.com/cocodataset/cocoapi/pull/50)\n#   but it doesn't seem to be active anymore.\nRUN pip3 install --no-cache-dir git+https://github.com/waleedka/coco.git#subdirectory=PythonAPI\nWORKDIR \"/root\"\nCMD [\"/bin/bash\"]\n","originalDockerfileUglifiedHash":"3bb746bc5b3b5a8210e195b0ca29c702","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/0746d0a0187c8205fa5a43d320bfe3bceee54fce.dockerfile"}