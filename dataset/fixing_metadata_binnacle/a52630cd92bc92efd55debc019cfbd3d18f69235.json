{"seed":2092432935,"processedDockerfileHash":"bc9a377fe943a525bd2191dd2f929a03","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","have-a-healthcheck"],"processedDockerfile":"FROM php:7.3-fpm\nRUN apt-get update \\\n && apt-get install --no-install-recommends git curl wget unzip -y\n#   Set TIMEZONE\nRUN rm /etc/localtime \\\n && ln -s /usr/share/zoneinfo/Europe/Paris /etc/localtime \\\n && \"date\"\n#   Install OPCACHE extension\nRUN docker-php-ext-install opcache\n#   Install INTL extension\nRUN apt-get install --no-install-recommends libicu-dev -y \\\n && docker-php-ext-configure intl \\\n && docker-php-ext-install intl\n#   Install APCU extension\nRUN pecl install apcu \\\n && docker-php-ext-enable apcu\n#  # Install GD extension\nRUN apt-get update \\\n && apt-get install --no-install-recommends libpng-dev libfreetype6-dev libjpeg-dev libxpm-dev libxml2-dev libxslt-dev libwebp-dev -y \\\n && docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ --with-xpm-dir=/usr/include/ --with-webp-dir=/usr/include/ \\\n && docker-php-ext-install gd\n#   Install IMAGICK extension\nRUN apt-get update \\\n && apt-get install --no-install-recommends libmagickwand-dev -y \\\n && pecl install imagick \\\n && docker-php-ext-enable imagick\n#   Install EXIF extension\nRUN docker-php-ext-install exif\n#   Install MYSQLI extension\nRUN docker-php-ext-install mysqli\n#   Install PDO MYSQL extension\nRUN docker-php-ext-install pdo_mysql\n#   Install ZIP extension\nRUN apt-get install --no-install-recommends libzip-dev zip -y \\\n && docker-php-ext-configure zip --with-libzip \\\n && docker-php-ext-install zip\n#   Install XSL extension\nRUN apt-get install --no-install-recommends libxslt-dev -y \\\n && docker-php-ext-install xsl\n#   Install SOAP extension\nRUN docker-php-ext-install soap\n#   Install BCMATH extension\nRUN docker-php-ext-install bcmath\n#   Install GMP extension\nRUN apt-get install --no-install-recommends libgmp-dev -y \\\n && docker-php-ext-install gmp\n#   Install XDEBUG extension\nRUN pecl install xdebug \\\n && docker-php-ext-enable xdebug\n#   Install MONGODB extension\nRUN apt-get install --no-install-recommends autoconf pkg-config libssl-dev -y \\\n && pecl install mongodb \\\n && docker-php-ext-enable mongodb\n#   Install REDIS extension\nRUN pecl install redis \\\n && docker-php-ext-enable redis\n#   Install COMPOSER\nRUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer\n#   Install BLACKFIRE PROBE\n#  RUN version=$(php -r \"echo PHP_MAJOR_VERSION.PHP_MINOR_VERSION;\") \\\n#      && curl -A \"Docker\" -o /tmp/blackfire-probe.tar.gz -D - -L -s https://blackfire.io/api/v1/releases/probe/php/linux/amd64/$version \\\n#      && tar zxpf /tmp/blackfire-probe.tar.gz -C /tmp \\\n#      && mv /tmp/blackfire-*.so $(php -r \"echo ini_get('extension_dir');\")/blackfire.so \\\n#      && printf \"extension=blackfire.so\\nblackfire.agent_socket=tcp://blackfire:8707\\n\" > $PHP_INI_DIR/conf.d/blackfire.ini\n#   Install BLACKFIRE AGENT\n#  RUN mkdir -p /tmp/blackfire \\\n#      && curl -A \"Docker\" -L https://blackfire.io/api/v1/releases/client/linux_static/amd64 | tar zxp -C /tmp/blackfire \\\n#      && mv /tmp/blackfire/blackfire /usr/bin/blackfire \\\n#      && rm -Rf /tmp/blackfire\n#   Set PROJECT USER\nRUN useradd -ms /bin/bash project\nUSER project\nWORKDIR /project\n#  COPY conf/php-fpm.conf /etc/php-fpm.conf\n#  COPY conf/php.ini /usr/local/etc/php/conf.d/100-php.ini\nHEALTHCHECK CMD curl --fail http://127.0.0.1:80 || exit 1\n","originalDockerfile":"FROM php:7.3-fpm\nRUN apt-get update \\\n && apt-get install git curl wget unzip -y\n#  Set TIMEZONE\nRUN rm /etc/localtime \\\n && ln -s /usr/share/zoneinfo/Europe/Paris /etc/localtime \\\n && \"date\"\n#  Install OPCACHE extension\nRUN docker-php-ext-install opcache\n#  Install INTL extension\nRUN apt-get install libicu-dev -y \\\n && docker-php-ext-configure intl \\\n && docker-php-ext-install intl\n#  Install APCU extension\nRUN pecl install apcu \\\n && docker-php-ext-enable apcu\n# # Install GD extension\nRUN apt-get update \\\n && apt-get install libpng-dev libfreetype6-dev libjpeg-dev libxpm-dev libxml2-dev libxslt-dev libwebp-dev -y \\\n && docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ --with-xpm-dir=/usr/include/ --with-webp-dir=/usr/include/ \\\n && docker-php-ext-install gd\n#  Install IMAGICK extension\nRUN apt-get update \\\n && apt-get install --no-install-recommends libmagickwand-dev -y \\\n && pecl install imagick \\\n && docker-php-ext-enable imagick\n#  Install EXIF extension\nRUN docker-php-ext-install exif\n#  Install MYSQLI extension\nRUN docker-php-ext-install mysqli\n#  Install PDO MYSQL extension\nRUN docker-php-ext-install pdo_mysql\n#  Install ZIP extension\nRUN apt-get install libzip-dev zip -y \\\n && docker-php-ext-configure zip --with-libzip \\\n && docker-php-ext-install zip\n#  Install XSL extension\nRUN apt-get install libxslt-dev -y \\\n && docker-php-ext-install xsl\n#  Install SOAP extension\nRUN docker-php-ext-install soap\n#  Install BCMATH extension\nRUN docker-php-ext-install bcmath\n#  Install GMP extension\nRUN apt-get install libgmp-dev -y \\\n && docker-php-ext-install gmp\n#  Install XDEBUG extension\nRUN pecl install xdebug \\\n && docker-php-ext-enable xdebug\n#  Install MONGODB extension\nRUN apt-get install autoconf pkg-config libssl-dev -y \\\n && pecl install mongodb \\\n && docker-php-ext-enable mongodb\n#  Install REDIS extension\nRUN pecl install redis \\\n && docker-php-ext-enable redis\n#  Install COMPOSER\nRUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer\n#  Install BLACKFIRE PROBE\n# RUN version=$(php -r \"echo PHP_MAJOR_VERSION.PHP_MINOR_VERSION;\") \\\n#     && curl -A \"Docker\" -o /tmp/blackfire-probe.tar.gz -D - -L -s https://blackfire.io/api/v1/releases/probe/php/linux/amd64/$version \\\n#     && tar zxpf /tmp/blackfire-probe.tar.gz -C /tmp \\\n#     && mv /tmp/blackfire-*.so $(php -r \"echo ini_get('extension_dir');\")/blackfire.so \\\n#     && printf \"extension=blackfire.so\\nblackfire.agent_socket=tcp://blackfire:8707\\n\" > $PHP_INI_DIR/conf.d/blackfire.ini\n#  Install BLACKFIRE AGENT\n# RUN mkdir -p /tmp/blackfire \\\n#     && curl -A \"Docker\" -L https://blackfire.io/api/v1/releases/client/linux_static/amd64 | tar zxp -C /tmp/blackfire \\\n#     && mv /tmp/blackfire/blackfire /usr/bin/blackfire \\\n#     && rm -Rf /tmp/blackfire\n#  Set PROJECT USER\nRUN useradd -ms /bin/bash project\nUSER project\nWORKDIR /project\n# COPY conf/php-fpm.conf /etc/php-fpm.conf\n# COPY conf/php.ini /usr/local/etc/php/conf.d/100-php.ini\n","injectedSmells":[],"originalDockerfileHash":"d9f517e792d5671b8b34dd8c7cb7fe27","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM php:7.3-fpm\nRUN apt-get update \\\n && apt-get install git curl wget unzip -y\n#   Set TIMEZONE\nRUN rm /etc/localtime \\\n && ln -s /usr/share/zoneinfo/Europe/Paris /etc/localtime \\\n && \"date\"\n#   Install OPCACHE extension\nRUN docker-php-ext-install opcache\n#   Install INTL extension\nRUN apt-get install libicu-dev -y \\\n && docker-php-ext-configure intl \\\n && docker-php-ext-install intl\n#   Install APCU extension\nRUN pecl install apcu \\\n && docker-php-ext-enable apcu\n#  # Install GD extension\nRUN apt-get update \\\n && apt-get install libpng-dev libfreetype6-dev libjpeg-dev libxpm-dev libxml2-dev libxslt-dev libwebp-dev -y \\\n && docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ --with-xpm-dir=/usr/include/ --with-webp-dir=/usr/include/ \\\n && docker-php-ext-install gd\n#   Install IMAGICK extension\nRUN apt-get update \\\n && apt-get install --no-install-recommends libmagickwand-dev -y \\\n && pecl install imagick \\\n && docker-php-ext-enable imagick\n#   Install EXIF extension\nRUN docker-php-ext-install exif\n#   Install MYSQLI extension\nRUN docker-php-ext-install mysqli\n#   Install PDO MYSQL extension\nRUN docker-php-ext-install pdo_mysql\n#   Install ZIP extension\nRUN apt-get install libzip-dev zip -y \\\n && docker-php-ext-configure zip --with-libzip \\\n && docker-php-ext-install zip\n#   Install XSL extension\nRUN apt-get install libxslt-dev -y \\\n && docker-php-ext-install xsl\n#   Install SOAP extension\nRUN docker-php-ext-install soap\n#   Install BCMATH extension\nRUN docker-php-ext-install bcmath\n#   Install GMP extension\nRUN apt-get install libgmp-dev -y \\\n && docker-php-ext-install gmp\n#   Install XDEBUG extension\nRUN pecl install xdebug \\\n && docker-php-ext-enable xdebug\n#   Install MONGODB extension\nRUN apt-get install autoconf pkg-config libssl-dev -y \\\n && pecl install mongodb \\\n && docker-php-ext-enable mongodb\n#   Install REDIS extension\nRUN pecl install redis \\\n && docker-php-ext-enable redis\n#   Install COMPOSER\nRUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer\n#   Install BLACKFIRE PROBE\n#  RUN version=$(php -r \"echo PHP_MAJOR_VERSION.PHP_MINOR_VERSION;\") \\\n#      && curl -A \"Docker\" -o /tmp/blackfire-probe.tar.gz -D - -L -s https://blackfire.io/api/v1/releases/probe/php/linux/amd64/$version \\\n#      && tar zxpf /tmp/blackfire-probe.tar.gz -C /tmp \\\n#      && mv /tmp/blackfire-*.so $(php -r \"echo ini_get('extension_dir');\")/blackfire.so \\\n#      && printf \"extension=blackfire.so\\nblackfire.agent_socket=tcp://blackfire:8707\\n\" > $PHP_INI_DIR/conf.d/blackfire.ini\n#   Install BLACKFIRE AGENT\n#  RUN mkdir -p /tmp/blackfire \\\n#      && curl -A \"Docker\" -L https://blackfire.io/api/v1/releases/client/linux_static/amd64 | tar zxp -C /tmp/blackfire \\\n#      && mv /tmp/blackfire/blackfire /usr/bin/blackfire \\\n#      && rm -Rf /tmp/blackfire\n#   Set PROJECT USER\nRUN useradd -ms /bin/bash project\nUSER project\nWORKDIR /project\n#  COPY conf/php-fpm.conf /etc/php-fpm.conf\n#  COPY conf/php.ini /usr/local/etc/php/conf.d/100-php.ini\n","originalDockerfileUglifiedHash":"b6a3946501f8e989a947480274427292","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/a52630cd92bc92efd55debc019cfbd3d18f69235.dockerfile"}