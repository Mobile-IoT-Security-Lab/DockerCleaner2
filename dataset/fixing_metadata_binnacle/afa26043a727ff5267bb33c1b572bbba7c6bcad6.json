{"seed":2754920215,"processedDockerfileHash":"112307e3808b23d8bdc8ccf9511f33c7","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-gem","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   PanteraS\n#   Platform as a Service based on Paas in a box project\n#\nFROM ubuntu:16.04\nMAINTAINER Wojciech Sielski \"wsielski@team.mobile.de\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends locales=2.23-0ubuntu11.3 apt-transport-https=1.2.35 python-pip=8.1.1-2ubuntu0.6 wget=1.17.1-1ubuntu1.5 curl=7.47.0-1ubuntu2.19 unzip=6.0-20ubuntu1.1 dnsutils=1:9.10.3.dfsg.P4-8ubuntu1.19 vim=2:7.4.1689-3ubuntu1.5 git=1:2.7.4-0ubuntu1.10 lolcat=42.0.99-1 toilet=0.3-1 jshon=20131010-3 -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\nRUN locale-gen en_US.UTF-8\nENV DEBIAN_FRONTEND=\"noninteractive\"\nENV LANG=\"en_US.UTF-8\"\nENV LANGUAGE=\"en_US:en\"\nENV LC_ALL=\"en_US.UTF-8\"\nENV TERM=\"xterm\"\nENV HOME=\"/root\"\nENV GOPATH=\"${HOME}/go\"\nENV SUPERVISORD_APP_VERSION=\"4.0.0\"\nENV DOCKER_APP_VERSION=\"5:18.09.3~3-0~ubuntu-xenial\"\nENV CONSUL_APP_VERSION=\"1.4.2\"\nENV MESOS_APP_VERSION=\"1.7.2-2.0.1\"\n#  ENV MARATHON_APP_VERSION          1.7.189-0.1.20190125223314.ubuntu1604\nENV MARATHON_APP_VERSION=\"1.7.189-48bfd6000\"\nENV REGISTRATOR_APP_VERSION=\"v7\"\nENV FABIO_APP_VERSION=\"1.5.11\"\nENV FABIO_GO_APP_VERSION=\"go1.11.5\"\nENV NETDATA_APP_VERSION=\"1.12.2\"\nENV DOCKER_HOST=\"unix:///tmp/docker.sock\"\n#   SupervisorD\n#\n#  RUN pip install --upgrade pip \\\nRUN pip install supervisor-stdout==0.1.1 \\\n && pip install https://github.com/Supervisor/supervisor/archive/${SUPERVISORD_APP_VERSION}.zip\n#   DNSMASQ\n#\nRUN apt-get update \\\n && apt-get install --no-install-recommends dnsmasq=2.75-1ubuntu0.16.04.10 dnsutils=1:9.10.3.dfsg.P4-8ubuntu1.19 -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n#   ZOOKEEPER MESOS MARATHON\n#\nRUN echo \"deb http://repos.mesosphere.com/ubuntu/ xenial main\" > /etc/apt/sources.list.d/mesosphere.list \\\n && ln -sf /bin/true /bin/systemctl \\\n && apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv DF7D54CBE56151BF \\\n && apt-get update \\\n && apt-get install --no-install-recommends openjdk-8-jre=8u292-b10-0ubuntu1~16.04.1 mesos=${MESOS_APP_VERSION} -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* \\\n && rm /etc/mesos/zk \\\n && chown -R zookeeper /etc/zookeeper \\\n && REAL_JAVA_PATH=$( readlink -f $( which java ;) ;) \\\n && JAVA_DIR=${REAL_JAVA_PATH%/bin/java} \\\n && mkdir -p ${JAVA_DIR}/conf/management/ \\\n && touch ${JAVA_DIR}/conf/management/management.properties\n#  ADD marathon_${MARATHON_APP_VERSION}.tgz /\n#  RUN ln -s /usr/share/marathon/bin/marathon /usr/local/bin\nRUN wget https://downloads.mesosphere.io/marathon/builds/${MARATHON_APP_VERSION}/marathon-${MARATHON_APP_VERSION}.tgz \\\n && mkdir /opt/marathon \\\n && tar -C /opt/marathon --strip 1 -zxf marathon-${MARATHON_APP_VERSION}.tgz \\\n && rm marathon-${MARATHON_APP_VERSION}.tgz \\\n && ln -s /opt/marathon/bin/marathon /usr/local/bin\nCOPY zkStart.sh /opt/zkStart.sh\n#   DOCKER\n#\nRUN echo 'deb https://download.docker.com/linux/ubuntu xenial stable' > /etc/apt/sources.list.d/docker.list \\\n && apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 0EBFCD88 \\\n && apt-get update \\\n && apt-get install --no-install-recommends docker-ce-cli=${DOCKER_APP_VERSION} -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n#   REGISTRATOR\n#\nRUN mkdir /opt/registrator\nENV PATH=\"${PATH}:/opt/registrator\"\nWORKDIR /opt/registrator\n#   Providing binaries by us\nRUN wget https://github.com/eBayClassifiedsGroup/registrator/releases/download/${REGISTRATOR_APP_VERSION}/registrator.tgz \\\n && tar zxf registrator.tgz \\\n && rm registrator.tgz\n#   CONSUL\n#\nRUN mkdir -p /opt/consul/data /etc/consul.d \\\n && groupadd -g 3000 consul \\\n && useradd -g 3000 -u 3000 -d /opt/consul -s /bin/false consul\nENV PATH=\"$PATH:/opt/consul\"\nWORKDIR /opt/consul\nRUN wget https://releases.hashicorp.com/consul/${CONSUL_APP_VERSION}/consul_${CONSUL_APP_VERSION}_linux_amd64.zip \\\n && unzip consul_${CONSUL_APP_VERSION}_linux_amd64.zip \\\n && rm consul_*.zip \\\n && chown -R consul:consul /opt/consul\n#   FABIO\n#\nRUN mkdir /opt/fabio \\\n && groupadd -g 3001 fabio \\\n && useradd -g 3001 -u 3001 -d /opt/fabio -s /bin/false fabio\nENV PATH=\"${PATH}:/opt/fabio\"\nWORKDIR /opt/fabio\nRUN wget https://github.com/eBay/fabio/releases/download/v${FABIO_APP_VERSION}/fabio-${FABIO_APP_VERSION}-${FABIO_GO_APP_VERSION}-linux_amd64 -O fabio \\\n && chmod a+x fabio \\\n && chown -R fabio:fabio /opt/fabio \\\n && setcap 'cap_net_bind_service=+ep' ./fabio\n#   NETDATA\nRUN apt-get update \\\n && apt-get install --no-install-recommends zlib1g-dev=1:1.2.8.dfsg-2ubuntu4.3 gcc=4:5.3.1-1ubuntu1 make=4.1-6 autoconf=2.69-9 autogen=1:5.18.7-3 automake=1:1.15-4ubuntu1 pkg-config=0.29.1-0ubuntu1 uuid-dev=2.27.1-6ubuntu3.10 libmnl-dev=1.0.3-5 -y \\\n && git clone -b v${NETDATA_APP_VERSION} --single-branch https://github.com/netdata/netdata.git /tmp/netdata.git --depth=1 \\\n && cd /tmp/netdata.git \\\n && ./netdata-installer.sh --dont-wait --install /opt \\\n && cd /opt \\\n && rm -rf /tmp/* \\\n && ln -sf /dev/stdout /opt/netdata/var/log/netdata/access.log \\\n && ln -sf /dev/stderr /opt/netdata/var/log/netdata/error.log \\\n && apt-get -y remove zlib1g-dev gcc make autoconf autogen automake pkg-config uuid-dev libmnl-dev \\\n && apt-get autoremove -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n#   PanteraS:\nRUN gem install panteras_api --version 0.0.26\n#   Font for logo\nRUN wget https://raw.githubusercontent.com/patorjk/figlet.js/master/fonts/Elite.flf -O /usr/share/figlet/Elite.flf\nCOPY supervisord.conf /etc/supervisord.conf\nCOPY supervisord.sh /opt/\nCOPY panteras.http /etc/fabio/errors/\nCOPY fabio.properties /opt/fabio/fabio.properties\nCOPY logo.sh /etc/profile.d\nCOPY paas.sh /etc/profile.d\nCOPY bashrc /tmp\nCOPY version /opt/\n#   example user\nRUN groupadd -g 31337 ecgapp \\\n && useradd -g 31337 -u 31337 -d /app -s /bin/false ecgapp\nRUN groupadd -g 3003 marathon \\\n && useradd -g 3003 -u 3003 -d /opt/marathon -s /bin/false marathon\nRUN cat /tmp/bashrc >> /root/.bashrc\nWORKDIR /opt\nCMD [\"/opt/supervisord.sh\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  PanteraS\n#  Platform as a Service based on Paas in a box project\n#\nFROM ubuntu:16.04\nMAINTAINER Wojciech Sielski \"wsielski@team.mobile.de\"\nRUN apt-get update \\\n && apt-get install locales apt-transport-https python-pip wget curl unzip dnsutils vim git lolcat toilet jshon -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\nRUN locale-gen en_US.UTF-8\nENV DEBIAN_FRONTEND=\"noninteractive\"\nENV LANG=\"en_US.UTF-8\"\nENV LANGUAGE=\"en_US:en\"\nENV LC_ALL=\"en_US.UTF-8\"\nENV TERM=\"xterm\"\nENV HOME=\"/root\"\nENV GOPATH=\"${HOME}/go\"\nENV SUPERVISORD_APP_VERSION=\"4.0.0\"\nENV DOCKER_APP_VERSION=\"5:18.09.3~3-0~ubuntu-xenial\"\nENV CONSUL_APP_VERSION=\"1.4.2\"\nENV MESOS_APP_VERSION=\"1.7.2-2.0.1\"\n# ENV MARATHON_APP_VERSION          1.7.189-0.1.20190125223314.ubuntu1604\nENV MARATHON_APP_VERSION=\"1.7.189-48bfd6000\"\nENV REGISTRATOR_APP_VERSION=\"v7\"\nENV FABIO_APP_VERSION=\"1.5.11\"\nENV FABIO_GO_APP_VERSION=\"go1.11.5\"\nENV NETDATA_APP_VERSION=\"1.12.2\"\nENV DOCKER_HOST=\"unix:///tmp/docker.sock\"\n#  SupervisorD\n#\n# RUN pip install --upgrade pip \\\nRUN pip install supervisor-stdout \\\n && pip install https://github.com/Supervisor/supervisor/archive/${SUPERVISORD_APP_VERSION}.zip\n#  DNSMASQ\n#\nRUN apt-get update \\\n && apt-get install dnsmasq dnsutils -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n#  ZOOKEEPER MESOS MARATHON\n#\nRUN echo \"deb http://repos.mesosphere.com/ubuntu/ xenial main\" > /etc/apt/sources.list.d/mesosphere.list \\\n && ln -sf /bin/true /bin/systemctl \\\n && apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv DF7D54CBE56151BF \\\n && apt-get update \\\n && apt-get install openjdk-8-jre mesos=${MESOS_APP_VERSION} -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* \\\n && rm /etc/mesos/zk \\\n && chown -R zookeeper /etc/zookeeper \\\n && REAL_JAVA_PATH=$( readlink -f $( which java ;) ;) \\\n && JAVA_DIR=${REAL_JAVA_PATH%/bin/java} \\\n && mkdir -p ${JAVA_DIR}/conf/management/ \\\n && touch ${JAVA_DIR}/conf/management/management.properties\n# ADD marathon_${MARATHON_APP_VERSION}.tgz /\n# RUN ln -s /usr/share/marathon/bin/marathon /usr/local/bin\nRUN wget https://downloads.mesosphere.io/marathon/builds/${MARATHON_APP_VERSION}/marathon-${MARATHON_APP_VERSION}.tgz \\\n && mkdir /opt/marathon \\\n && tar -C /opt/marathon --strip 1 -zxf marathon-${MARATHON_APP_VERSION}.tgz \\\n && rm marathon-${MARATHON_APP_VERSION}.tgz \\\n && ln -s /opt/marathon/bin/marathon /usr/local/bin\nADD zkStart.sh /opt/zkStart.sh\n#  DOCKER\n#\nRUN echo 'deb https://download.docker.com/linux/ubuntu xenial stable' > /etc/apt/sources.list.d/docker.list \\\n && apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 0EBFCD88 \\\n && apt-get update \\\n && apt-get install docker-ce-cli=${DOCKER_APP_VERSION} -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n#  REGISTRATOR\n#\nRUN mkdir /opt/registrator\nENV PATH=\"${PATH}:/opt/registrator\"\nWORKDIR /opt/registrator\n#  Providing binaries by us\nRUN wget https://github.com/eBayClassifiedsGroup/registrator/releases/download/${REGISTRATOR_APP_VERSION}/registrator.tgz \\\n && tar zxf registrator.tgz \\\n && rm registrator.tgz\n#  CONSUL\n#\nRUN mkdir -p /opt/consul/data /etc/consul.d \\\n && groupadd -g 3000 consul \\\n && useradd -g 3000 -u 3000 -d /opt/consul -s /bin/false consul\nENV PATH=\"$PATH:/opt/consul\"\nWORKDIR /opt/consul\nRUN wget https://releases.hashicorp.com/consul/${CONSUL_APP_VERSION}/consul_${CONSUL_APP_VERSION}_linux_amd64.zip \\\n && unzip consul_${CONSUL_APP_VERSION}_linux_amd64.zip \\\n && rm consul_*.zip \\\n && chown -R consul:consul /opt/consul\n#  FABIO\n#\nRUN mkdir /opt/fabio \\\n && groupadd -g 3001 fabio \\\n && useradd -g 3001 -u 3001 -d /opt/fabio -s /bin/false fabio\nENV PATH=\"${PATH}:/opt/fabio\"\nWORKDIR /opt/fabio\nRUN wget https://github.com/eBay/fabio/releases/download/v${FABIO_APP_VERSION}/fabio-${FABIO_APP_VERSION}-${FABIO_GO_APP_VERSION}-linux_amd64 -O fabio \\\n && chmod a+x fabio \\\n && chown -R fabio:fabio /opt/fabio \\\n && setcap 'cap_net_bind_service=+ep' ./fabio\n#  NETDATA\nRUN apt-get update \\\n && apt-get install zlib1g-dev gcc make autoconf autogen automake pkg-config uuid-dev libmnl-dev -y \\\n && git clone -b v${NETDATA_APP_VERSION} --single-branch https://github.com/netdata/netdata.git /tmp/netdata.git --depth=1 \\\n && cd /tmp/netdata.git \\\n && ./netdata-installer.sh --dont-wait --install /opt \\\n && cd /opt \\\n && rm -rf /tmp/* \\\n && ln -sf /dev/stdout /opt/netdata/var/log/netdata/access.log \\\n && ln -sf /dev/stderr /opt/netdata/var/log/netdata/error.log \\\n && apt-get -y remove zlib1g-dev gcc make autoconf autogen automake pkg-config uuid-dev libmnl-dev \\\n && apt-get autoremove -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n#  PanteraS:\nRUN gem install panteras_api\n#  Font for logo\nRUN wget https://raw.githubusercontent.com/patorjk/figlet.js/master/fonts/Elite.flf -O /usr/share/figlet/Elite.flf\nADD supervisord.conf /etc/supervisord.conf\nADD supervisord.sh /opt/\nADD panteras.http /etc/fabio/errors/\nADD fabio.properties /opt/fabio/fabio.properties\nADD logo.sh /etc/profile.d\nADD paas.sh /etc/profile.d\nADD bashrc /tmp\nADD version /opt/\n#  example user\nRUN groupadd -g 31337 ecgapp \\\n && useradd -g 31337 -u 31337 -d /app -s /bin/false ecgapp\nRUN groupadd -g 3003 marathon \\\n && useradd -g 3003 -u 3003 -d /opt/marathon -s /bin/false marathon\nRUN cat /tmp/bashrc >> /root/.bashrc\nWORKDIR /opt\nCMD [\"/opt/supervisord.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"fe9777f4bc79aacaf6702276a434bf17","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   PanteraS\n#   Platform as a Service based on Paas in a box project\n#\nFROM ubuntu:16.04\nMAINTAINER Wojciech Sielski \"wsielski@team.mobile.de\"\nRUN apt-get update \\\n && apt-get install locales apt-transport-https python-pip wget curl unzip dnsutils vim git lolcat toilet jshon -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\nRUN locale-gen en_US.UTF-8\nENV DEBIAN_FRONTEND=\"noninteractive\"\nENV LANG=\"en_US.UTF-8\"\nENV LANGUAGE=\"en_US:en\"\nENV LC_ALL=\"en_US.UTF-8\"\nENV TERM=\"xterm\"\nENV HOME=\"/root\"\nENV GOPATH=\"${HOME}/go\"\nENV SUPERVISORD_APP_VERSION=\"4.0.0\"\nENV DOCKER_APP_VERSION=\"5:18.09.3~3-0~ubuntu-xenial\"\nENV CONSUL_APP_VERSION=\"1.4.2\"\nENV MESOS_APP_VERSION=\"1.7.2-2.0.1\"\n#  ENV MARATHON_APP_VERSION          1.7.189-0.1.20190125223314.ubuntu1604\nENV MARATHON_APP_VERSION=\"1.7.189-48bfd6000\"\nENV REGISTRATOR_APP_VERSION=\"v7\"\nENV FABIO_APP_VERSION=\"1.5.11\"\nENV FABIO_GO_APP_VERSION=\"go1.11.5\"\nENV NETDATA_APP_VERSION=\"1.12.2\"\nENV DOCKER_HOST=\"unix:///tmp/docker.sock\"\n#   SupervisorD\n#\n#  RUN pip install --upgrade pip \\\nRUN pip install supervisor-stdout \\\n && pip install https://github.com/Supervisor/supervisor/archive/${SUPERVISORD_APP_VERSION}.zip\n#   DNSMASQ\n#\nRUN apt-get update \\\n && apt-get install dnsmasq dnsutils -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n#   ZOOKEEPER MESOS MARATHON\n#\nRUN echo \"deb http://repos.mesosphere.com/ubuntu/ xenial main\" > /etc/apt/sources.list.d/mesosphere.list \\\n && ln -sf /bin/true /bin/systemctl \\\n && apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv DF7D54CBE56151BF \\\n && apt-get update \\\n && apt-get install openjdk-8-jre mesos=${MESOS_APP_VERSION} -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* \\\n && rm /etc/mesos/zk \\\n && chown -R zookeeper /etc/zookeeper \\\n && REAL_JAVA_PATH=$( readlink -f $( which java ;) ;) \\\n && JAVA_DIR=${REAL_JAVA_PATH%/bin/java} \\\n && mkdir -p ${JAVA_DIR}/conf/management/ \\\n && touch ${JAVA_DIR}/conf/management/management.properties\n#  ADD marathon_${MARATHON_APP_VERSION}.tgz /\n#  RUN ln -s /usr/share/marathon/bin/marathon /usr/local/bin\nRUN wget https://downloads.mesosphere.io/marathon/builds/${MARATHON_APP_VERSION}/marathon-${MARATHON_APP_VERSION}.tgz \\\n && mkdir /opt/marathon \\\n && tar -C /opt/marathon --strip 1 -zxf marathon-${MARATHON_APP_VERSION}.tgz \\\n && rm marathon-${MARATHON_APP_VERSION}.tgz \\\n && ln -s /opt/marathon/bin/marathon /usr/local/bin\nADD zkStart.sh /opt/zkStart.sh\n#   DOCKER\n#\nRUN echo 'deb https://download.docker.com/linux/ubuntu xenial stable' > /etc/apt/sources.list.d/docker.list \\\n && apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 0EBFCD88 \\\n && apt-get update \\\n && apt-get install docker-ce-cli=${DOCKER_APP_VERSION} -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n#   REGISTRATOR\n#\nRUN mkdir /opt/registrator\nENV PATH=\"${PATH}:/opt/registrator\"\nWORKDIR /opt/registrator\n#   Providing binaries by us\nRUN wget https://github.com/eBayClassifiedsGroup/registrator/releases/download/${REGISTRATOR_APP_VERSION}/registrator.tgz \\\n && tar zxf registrator.tgz \\\n && rm registrator.tgz\n#   CONSUL\n#\nRUN mkdir -p /opt/consul/data /etc/consul.d \\\n && groupadd -g 3000 consul \\\n && useradd -g 3000 -u 3000 -d /opt/consul -s /bin/false consul\nENV PATH=\"$PATH:/opt/consul\"\nWORKDIR /opt/consul\nRUN wget https://releases.hashicorp.com/consul/${CONSUL_APP_VERSION}/consul_${CONSUL_APP_VERSION}_linux_amd64.zip \\\n && unzip consul_${CONSUL_APP_VERSION}_linux_amd64.zip \\\n && rm consul_*.zip \\\n && chown -R consul:consul /opt/consul\n#   FABIO\n#\nRUN mkdir /opt/fabio \\\n && groupadd -g 3001 fabio \\\n && useradd -g 3001 -u 3001 -d /opt/fabio -s /bin/false fabio\nENV PATH=\"${PATH}:/opt/fabio\"\nWORKDIR /opt/fabio\nRUN wget https://github.com/eBay/fabio/releases/download/v${FABIO_APP_VERSION}/fabio-${FABIO_APP_VERSION}-${FABIO_GO_APP_VERSION}-linux_amd64 -O fabio \\\n && chmod a+x fabio \\\n && chown -R fabio:fabio /opt/fabio \\\n && setcap 'cap_net_bind_service=+ep' ./fabio\n#   NETDATA\nRUN apt-get update \\\n && apt-get install zlib1g-dev gcc make autoconf autogen automake pkg-config uuid-dev libmnl-dev -y \\\n && git clone -b v${NETDATA_APP_VERSION} --single-branch https://github.com/netdata/netdata.git /tmp/netdata.git --depth=1 \\\n && cd /tmp/netdata.git \\\n && ./netdata-installer.sh --dont-wait --install /opt \\\n && cd /opt \\\n && rm -rf /tmp/* \\\n && ln -sf /dev/stdout /opt/netdata/var/log/netdata/access.log \\\n && ln -sf /dev/stderr /opt/netdata/var/log/netdata/error.log \\\n && apt-get -y remove zlib1g-dev gcc make autoconf autogen automake pkg-config uuid-dev libmnl-dev \\\n && apt-get autoremove -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n#   PanteraS:\nRUN gem install panteras_api\n#   Font for logo\nRUN wget https://raw.githubusercontent.com/patorjk/figlet.js/master/fonts/Elite.flf -O /usr/share/figlet/Elite.flf\nADD supervisord.conf /etc/supervisord.conf\nADD supervisord.sh /opt/\nADD panteras.http /etc/fabio/errors/\nADD fabio.properties /opt/fabio/fabio.properties\nADD logo.sh /etc/profile.d\nADD paas.sh /etc/profile.d\nADD bashrc /tmp\nADD version /opt/\n#   example user\nRUN groupadd -g 31337 ecgapp \\\n && useradd -g 31337 -u 31337 -d /app -s /bin/false ecgapp\nRUN groupadd -g 3003 marathon \\\n && useradd -g 3003 -u 3003 -d /opt/marathon -s /bin/false marathon\nRUN cat /tmp/bashrc >> /root/.bashrc\nWORKDIR /opt\nCMD [\"/opt/supervisord.sh\"]\n","originalDockerfileUglifiedHash":"851ba3d96625dae013ca854af1467c0b","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/afa26043a727ff5267bb33c1b572bbba7c6bcad6.dockerfile"}