{"seed":875374175,"processedDockerfileHash":"39b1d99c9ec5a56cf9126fca3c8d5f62","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM ubuntu:14.04\nWORKDIR /fmxnet\nCOPY lightened_moon /fmxnet/lightened_moon/\nCOPY mxnet /fmxnet/mxnet/\nWORKDIR \"mxnet\"\nRUN pwd\nRUN ls -al\nWORKDIR /fmxnet\nCOPY ./align_dlib.py /fmxnet\nCOPY ./facenet.py /fmxnet\nCOPY ./lightened_moon.py /fmxnet\nCOPY ./requirements.txt /fmxnet\nCOPY ./shape_predictor_68_face_landmarks.dat /fmxnet\nCOPY ./testcv2.py /fmxnet\nWORKDIR \"mxnet\"\nRUN ls\nWORKDIR /fmxnet\nWORKDIR \"lightened_moon\"\nRUN ls\nWORKDIR /fmxnet\n#  necessary for dependencies\nEXPOSE 80/tcp\n#  Install OpenCV\nRUN echo \"deb http://us.archive.ubuntu.com/ubuntu/ precise multiverse\\ndeb-src http://us.archive.ubuntu.com/ubuntu/ precise multiverse\\ndeb http://us.archive.ubuntu.com/ubuntu/ precise-updates multiverse\\ndeb-src http://us.archive.ubuntu.com/ubuntu/ precise-updates multiverse\\n\" >> /etc/apt/sources.list\nRUN apt-get update \\\n && apt-get install --no-install-recommends curl=7.35.0-1ubuntu2.20 cmake=2.8.12.2-0ubuntu3 wget=1.15-1ubuntu1.14.04.5 unzip=6.0-9ubuntu1.5 libopencv-dev=2.4.8+dfsg1-2ubuntu1.2 build-essential=11.6ubuntu6 git=1:1.9.1-1ubuntu0.10 libgtk2.0-dev=2.24.23-0ubuntu1.4 pkg-config=0.26-1ubuntu4 python-dev=2.7.5-5ubuntu3 python-numpy=1:1.8.2-0ubuntu0.1 libdc1394-22=2.2.1-2ubuntu2 libdc1394-22-dev=2.2.1-2ubuntu2 libjpeg-dev=8c-2ubuntu8 libpng12-dev=1.2.50-1ubuntu2.14.04.3 libtiff4-dev=4.0.3-7ubuntu0.11 libjasper-dev=1.900.1-14ubuntu3.5 libavcodec-dev=6:9.20-0ubuntu0.14.04.1 libavformat-dev=6:9.20-0ubuntu0.14.04.1 libswscale-dev=6:9.20-0ubuntu0.14.04.1 libxine-dev=1.1.21-2ubuntu1 libgstreamer0.10-dev=0.10.36-1.2ubuntu3 libgstreamer-plugins-base0.10-dev=0.10.36-1.1ubuntu2.1 libv4l-dev=1.0.1-1 libtbb-dev=4.2~20130725-1.1ubuntu1 libqt4-dev=4:4.8.5+git192-g085f851+dfsg-2ubuntu4.1 libfaac-dev=1.28-6 libmp3lame-dev=3.99.5+repack1-3ubuntu1 libopencore-amrnb-dev=0.1.3-2ubuntu1 libopencore-amrwb-dev=0.1.3-2ubuntu1 libtheora-dev=1.1.1+dfsg.1-3.2 libvorbis-dev=1.3.2-1.3ubuntu1.2 libxvidcore-dev=2:1.3.2-9ubuntu1 x264=2:0.142.2389+git956c8d8-2 v4l-utils=1.0.1-1 -y\nRUN mkdir opencv\nWORKDIR opencv\nRUN wget https://github.com/Itseez/opencv/archive/2.4.8.zip -O opencv-2.4.8.zip\nRUN unzip opencv-2.4.8.zip\nRUN mkdir opencv-2.4.8/build\nWORKDIR opencv-2.4.8/build\nRUN cmake -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_INSTALL_PREFIX=/usr/local -D WITH_TBB=ON -D BUILD_NEW_PYTHON_SUPPORT=ON -D WITH_V4L=ON -D WITH_OPENGL=ON ..\nRUN make -j $( nproc ;) \\\n && make install\nRUN echo \"/usr/local/lib\" > /etc/ld.so.conf.d/opencv.conf\nRUN ldconfig\n#  Test OpenCV installation\nWORKDIR /fmxnet\nRUN pwd\nRUN ls\nRUN python ./testcv2.py\n#  install OpenCV and dependencies for mxnet\nRUN apt-get update \\\n && apt-get install --no-install-recommends python-setuptools=3.3-1ubuntu2 python-pip=1.5.4-1ubuntu4 make=3.81-8.2ubuntu3 cmake=2.8.12.2-0ubuntu3 libopenblas-dev=0.2.8-6ubuntu1 liblapack-dev=3.5.0-2ubuntu1 libgtk-3-dev=3.10.8-0ubuntu1.6 libboost-all-dev=1.54.0.1ubuntu1 -y\nRUN pip install pip==23.1 --upgrade\nRUN pip install --upgrade -r requirements.txt\n#  build mxnet from source\nWORKDIR \"mxnet\"\nRUN make -j $( nproc ;) USE_OPENCV=1 USE_BLAS=openblas\nWORKDIR \"python\"\nENV PYTHONPATH=\"\\\"\nRUN python setup.py build\nRUN python setup.py install\nWORKDIR /fmxnet\n#  should be at directory containing mxnet and everything else\nRUN pwd\nRUN ls\n#  add detect.py\nCOPY ./detect.py /fmxnet\n#  does this work as intended?\n#  should be at toplevel directory\nRUN export PYTHONPATH=$PYTHONPATH:$( pwd ;)\n#  run the detection script\n#   need to run with a mounted volume that adds /data/fmxnet_clips to the /fmxnet directory\nCMD [\"python\", \"./detect.py\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:14.04\nWORKDIR /fmxnet\nCOPY lightened_moon /fmxnet/lightened_moon/\nCOPY mxnet /fmxnet/mxnet/\nWORKDIR \"mxnet\"\nRUN pwd\nRUN ls -al\nWORKDIR /fmxnet\nADD ./align_dlib.py /fmxnet\nADD ./facenet.py /fmxnet\nADD ./lightened_moon.py /fmxnet\nADD ./requirements.txt /fmxnet\nADD ./shape_predictor_68_face_landmarks.dat /fmxnet\nADD ./testcv2.py /fmxnet\nWORKDIR \"mxnet\"\nRUN ls\nWORKDIR /fmxnet\nWORKDIR \"lightened_moon\"\nRUN ls\nWORKDIR /fmxnet\n# necessary for dependencies\nEXPOSE 80/tcp\n# Install OpenCV\nRUN echo \"deb http://us.archive.ubuntu.com/ubuntu/ precise multiverse\\ndeb-src http://us.archive.ubuntu.com/ubuntu/ precise multiverse\\ndeb http://us.archive.ubuntu.com/ubuntu/ precise-updates multiverse\\ndeb-src http://us.archive.ubuntu.com/ubuntu/ precise-updates multiverse\\n\" >> /etc/apt/sources.list\nRUN apt-get update \\\n && apt-get install curl cmake wget unzip libopencv-dev build-essential git libgtk2.0-dev pkg-config python-dev python-numpy libdc1394-22 libdc1394-22-dev libjpeg-dev libpng12-dev libtiff4-dev libjasper-dev libavcodec-dev libavformat-dev libswscale-dev libxine-dev libgstreamer0.10-dev libgstreamer-plugins-base0.10-dev libv4l-dev libtbb-dev libqt4-dev libfaac-dev libmp3lame-dev libopencore-amrnb-dev libopencore-amrwb-dev libtheora-dev libvorbis-dev libxvidcore-dev x264 v4l-utils -y\nRUN mkdir opencv\nWORKDIR opencv\nRUN wget https://github.com/Itseez/opencv/archive/2.4.8.zip -O opencv-2.4.8.zip\nRUN unzip opencv-2.4.8.zip\nRUN mkdir opencv-2.4.8/build\nWORKDIR opencv-2.4.8/build\nRUN cmake -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_INSTALL_PREFIX=/usr/local -D WITH_TBB=ON -D BUILD_NEW_PYTHON_SUPPORT=ON -D WITH_V4L=ON -D WITH_OPENGL=ON ..\nRUN make -j $( nproc ;) \\\n && make install\nRUN echo \"/usr/local/lib\" > /etc/ld.so.conf.d/opencv.conf\nRUN ldconfig\n# Test OpenCV installation\nWORKDIR /fmxnet\nRUN pwd\nRUN ls\nRUN python ./testcv2.py\n# install OpenCV and dependencies for mxnet\nRUN apt-get update \\\n && apt-get install python-setuptools python-pip make cmake libopenblas-dev liblapack-dev libgtk-3-dev libboost-all-dev -y\nRUN pip install pip --upgrade\nRUN pip install --upgrade -r requirements.txt\n# build mxnet from source\nWORKDIR \"mxnet\"\nRUN make -j $( nproc ;) USE_OPENCV=1 USE_BLAS=openblas\nWORKDIR \"python\"\nENV PYTHONPATH=\"\"\\\"\"\nRUN python setup.py build\nRUN python setup.py install\nWORKDIR /fmxnet\n# should be at directory containing mxnet and everything else\nRUN pwd\nRUN ls\n# add detect.py\nADD ./detect.py /fmxnet\n# does this work as intended?\n# should be at toplevel directory\nRUN export PYTHONPATH=$PYTHONPATH:$( pwd ;)\n# run the detection script\n#  need to run with a mounted volume that adds /data/fmxnet_clips to the /fmxnet directory\nCMD [\"python\", \"./detect.py\"]\n","injectedSmells":[],"originalDockerfileHash":"bae236e52ebce1b01cd7cef1342d265f","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:14.04\nWORKDIR /fmxnet\nCOPY lightened_moon /fmxnet/lightened_moon/\nCOPY mxnet /fmxnet/mxnet/\nWORKDIR \"mxnet\"\nRUN pwd\nRUN ls -al\nWORKDIR /fmxnet\nADD ./align_dlib.py /fmxnet\nADD ./facenet.py /fmxnet\nADD ./lightened_moon.py /fmxnet\nADD ./requirements.txt /fmxnet\nADD ./shape_predictor_68_face_landmarks.dat /fmxnet\nADD ./testcv2.py /fmxnet\nWORKDIR \"mxnet\"\nRUN ls\nWORKDIR /fmxnet\nWORKDIR \"lightened_moon\"\nRUN ls\nWORKDIR /fmxnet\n#  necessary for dependencies\nEXPOSE 80/tcp\n#  Install OpenCV\nRUN echo \"deb http://us.archive.ubuntu.com/ubuntu/ precise multiverse\\ndeb-src http://us.archive.ubuntu.com/ubuntu/ precise multiverse\\ndeb http://us.archive.ubuntu.com/ubuntu/ precise-updates multiverse\\ndeb-src http://us.archive.ubuntu.com/ubuntu/ precise-updates multiverse\\n\" >> /etc/apt/sources.list\nRUN apt-get update \\\n && apt-get install curl cmake wget unzip libopencv-dev build-essential git libgtk2.0-dev pkg-config python-dev python-numpy libdc1394-22 libdc1394-22-dev libjpeg-dev libpng12-dev libtiff4-dev libjasper-dev libavcodec-dev libavformat-dev libswscale-dev libxine-dev libgstreamer0.10-dev libgstreamer-plugins-base0.10-dev libv4l-dev libtbb-dev libqt4-dev libfaac-dev libmp3lame-dev libopencore-amrnb-dev libopencore-amrwb-dev libtheora-dev libvorbis-dev libxvidcore-dev x264 v4l-utils -y\nRUN mkdir opencv\nWORKDIR opencv\nRUN wget https://github.com/Itseez/opencv/archive/2.4.8.zip -O opencv-2.4.8.zip\nRUN unzip opencv-2.4.8.zip\nRUN mkdir opencv-2.4.8/build\nWORKDIR opencv-2.4.8/build\nRUN cmake -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_INSTALL_PREFIX=/usr/local -D WITH_TBB=ON -D BUILD_NEW_PYTHON_SUPPORT=ON -D WITH_V4L=ON -D WITH_OPENGL=ON ..\nRUN make -j $( nproc ;) \\\n && make install\nRUN echo \"/usr/local/lib\" > /etc/ld.so.conf.d/opencv.conf\nRUN ldconfig\n#  Test OpenCV installation\nWORKDIR /fmxnet\nRUN pwd\nRUN ls\nRUN python ./testcv2.py\n#  install OpenCV and dependencies for mxnet\nRUN apt-get update \\\n && apt-get install python-setuptools python-pip make cmake libopenblas-dev liblapack-dev libgtk-3-dev libboost-all-dev -y\nRUN pip install pip --upgrade\nRUN pip install --upgrade -r requirements.txt\n#  build mxnet from source\nWORKDIR \"mxnet\"\nRUN make -j $( nproc ;) USE_OPENCV=1 USE_BLAS=openblas\nWORKDIR \"python\"\nENV PYTHONPATH=\"\\\"\nRUN python setup.py build\nRUN python setup.py install\nWORKDIR /fmxnet\n#  should be at directory containing mxnet and everything else\nRUN pwd\nRUN ls\n#  add detect.py\nADD ./detect.py /fmxnet\n#  does this work as intended?\n#  should be at toplevel directory\nRUN export PYTHONPATH=$PYTHONPATH:$( pwd ;)\n#  run the detection script\n#   need to run with a mounted volume that adds /data/fmxnet_clips to the /fmxnet directory\nCMD [\"python\", \"./detect.py\"]\n","originalDockerfileUglifiedHash":"a14d20a4891b116f4b4693b94795698e","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/9495f605dda2d8d1da4225d654872d39d55d3c29.dockerfile"}