{"seed":1526522850,"processedDockerfileHash":"d655323fb14540b2b4f8d7c8e6e0ddd1","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","pin-package-manager-versions-npm","have-a-healthcheck","have-a-user"],"processedDockerfile":"#  \tCopyright 2016-2017, Google, Inc.\n#   Licensed under the Apache License, Version 2.0 (the \"License\");\n#   you may not use this file except in compliance with the License.\n#   You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n#   Unless required by applicable law or agreed to in writing, software\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#   See the License for the specific language governing permissions and\n#   limitations under the License.\nFROM ubuntu:latest\n#  # PART 1: Core components\n#  # =======================\n#   Install utilities\nRUN apt-get update --fix-missing \\\n && apt-get -y upgrade \\\n && apt-get install --no-install-recommends sudo=1.9.13p1-1ubuntu2 apt-utils=2.6.0 curl=7.88.1-7ubuntu1 wget=1.21.3-1ubuntu1 unzip=6.0-27ubuntu1 git=1:2.39.2-1ubuntu1 gnupg=2.2.40-1ubuntu2 -y\n#   Install node 6\nRUN curl -sL https://deb.nodesource.com/setup_8.x | sudo -E bash - \\\n && sudo apt-get install -y nodejs\n#   Install Xvfb and dbus for X11\nRUN apt-get install --no-install-recommends xvfb=2:21.1.7-1ubuntu2 dbus-x11=1.14.4-1ubuntu1 -y\n#   Install Chrome for Ubuntu\nRUN wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add - \\\n && sudo sh -c 'echo \"deb http://dl.google.com/linux/chrome/deb/ stable main\" >> /etc/apt/sources.list.d/google-chrome.list' \\\n && sudo apt-get update \\\n && sudo apt-get install -y google-chrome-stable\n#   Install Yarn\nRUN curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add - \\\n && echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list \\\n && sudo apt-get update \\\n && sudo apt-get install yarn\n#   Copy key documents (except .dockerignored files)\nCOPY etc/xvfb /etc/init.d/xvfb\nRUN chmod +x /etc/init.d/xvfb\n#   Add a user and make it a sudo user\nRUN useradd -m chromeuser\n#   Copy the chrome-user script used to start Chrome as non-root\nCOPY chromeuser-script.sh /\nRUN chmod +x /chromeuser-script.sh\n#  # PART 2: Lighthouse\n#  # ==================\n#   Download lighthouse\nRUN git clone https://github.com/googlechrome/lighthouse \\\n && cd /lighthouse \\\n && git checkout tags/v4.2.0 \\\n && npm install yarn@1.22.19 -g \\\n && npm install yarnpkg@0.15.1 -g \\\n && npm install @types/mkdirp -g \\\n && npm install run-sequence@2.2.1 -g --save-dev \\\n && npm install typescript@5.0.4 -g \\\n && npm install -g \\\n && yarn global add lighthouse\n#  # PART 3: Express server\n#  # ======================\n#   Install express\nCOPY package.json /\nRUN npm install\n#   Add the simple server file\nCOPY server.js /\nRUN chmod +x /server.js\n#   Add the cpu monitor file\nCOPY cpu_monitor.js /\nRUN chmod +x /cpu_monitor.js\n#   Generate a self-signed SSL certificate\nRUN openssl req -new -newkey rsa:4096 -days 365 -nodes -x509 -subj \"/C=GB/ST=None/L=None/O=Google/CN=lighthouse-machine-X\" -keyout key.pem -out cert.pem\n#   Expose ports 8080 and 8443\nEXPOSE 8080/tcp\nEXPOSE 8443/tcp\n#  # PART 4: Final setup\n#  # ===================\n#   Set the entrypoint\nCOPY entrypoint.sh /\nRUN chmod +x /entrypoint.sh\nENTRYPOINT [\"/entrypoint.sh\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"# \tCopyright 2016-2017, Google, Inc.\n#  Licensed under the Apache License, Version 2.0 (the \"License\");\n#  you may not use this file except in compliance with the License.\n#  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n#  Unless required by applicable law or agreed to in writing, software\n#  distributed under the License is distributed on an \"AS IS\" BASIS,\n#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#  See the License for the specific language governing permissions and\n#  limitations under the License.\nFROM ubuntu:latest\n# # PART 1: Core components\n# # =======================\n#  Install utilities\nRUN apt-get update --fix-missing \\\n && apt-get -y upgrade \\\n && apt-get install sudo apt-utils curl wget unzip git gnupg -y\n#  Install node 6\nRUN curl -sL https://deb.nodesource.com/setup_8.x | sudo -E bash - \\\n && sudo apt-get install -y nodejs\n#  Install Xvfb and dbus for X11\nRUN apt-get install xvfb dbus-x11 -y\n#  Install Chrome for Ubuntu\nRUN wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add - \\\n && sudo sh -c 'echo \"deb http://dl.google.com/linux/chrome/deb/ stable main\" >> /etc/apt/sources.list.d/google-chrome.list' \\\n && sudo apt-get update \\\n && sudo apt-get install -y google-chrome-stable\n#  Install Yarn\nRUN curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add - \\\n && echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list \\\n && sudo apt-get update \\\n && sudo apt-get install yarn\n#  Copy key documents (except .dockerignored files)\nCOPY etc/xvfb /etc/init.d/xvfb\nRUN chmod +x /etc/init.d/xvfb\n#  Add a user and make it a sudo user\nRUN useradd -m chromeuser\n#  Copy the chrome-user script used to start Chrome as non-root\nCOPY chromeuser-script.sh /\nRUN chmod +x /chromeuser-script.sh\n# # PART 2: Lighthouse\n# # ==================\n#  Download lighthouse\nRUN git clone https://github.com/googlechrome/lighthouse \\\n && cd /lighthouse \\\n && git checkout tags/v4.2.0 \\\n && npm install yarn -g \\\n && npm install yarnpkg -g \\\n && npm install @types/mkdirp -g \\\n && npm install run-sequence -g --save-dev \\\n && npm install typescript -g \\\n && npm install -g \\\n && yarn global add lighthouse\n# # PART 3: Express server\n# # ======================\n#  Install express\nCOPY package.json /\nRUN npm install\n#  Add the simple server file\nCOPY server.js /\nRUN chmod +x /server.js\n#  Add the cpu monitor file\nCOPY cpu_monitor.js /\nRUN chmod +x /cpu_monitor.js\n#  Generate a self-signed SSL certificate\nRUN openssl req -new -newkey rsa:4096 -days 365 -nodes -x509 -subj \"/C=GB/ST=None/L=None/O=Google/CN=lighthouse-machine-X\" -keyout key.pem -out cert.pem\n#  Expose ports 8080 and 8443\nEXPOSE 8080/tcp\nEXPOSE 8443/tcp\n# # PART 4: Final setup\n# # ===================\n#  Set the entrypoint\nCOPY entrypoint.sh /\nRUN chmod +x /entrypoint.sh\nENTRYPOINT [\"/entrypoint.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"c63117463255f487ad7383f05afce3e2","successfullyInjectedSmells":[],"originalDockerfileUglified":"#  \tCopyright 2016-2017, Google, Inc.\n#   Licensed under the Apache License, Version 2.0 (the \"License\");\n#   you may not use this file except in compliance with the License.\n#   You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n#   Unless required by applicable law or agreed to in writing, software\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#   See the License for the specific language governing permissions and\n#   limitations under the License.\nFROM ubuntu:latest\n#  # PART 1: Core components\n#  # =======================\n#   Install utilities\nRUN apt-get update --fix-missing \\\n && apt-get -y upgrade \\\n && apt-get install sudo apt-utils curl wget unzip git gnupg -y\n#   Install node 6\nRUN curl -sL https://deb.nodesource.com/setup_8.x | sudo -E bash - \\\n && sudo apt-get install -y nodejs\n#   Install Xvfb and dbus for X11\nRUN apt-get install xvfb dbus-x11 -y\n#   Install Chrome for Ubuntu\nRUN wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add - \\\n && sudo sh -c 'echo \"deb http://dl.google.com/linux/chrome/deb/ stable main\" >> /etc/apt/sources.list.d/google-chrome.list' \\\n && sudo apt-get update \\\n && sudo apt-get install -y google-chrome-stable\n#   Install Yarn\nRUN curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add - \\\n && echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list \\\n && sudo apt-get update \\\n && sudo apt-get install yarn\n#   Copy key documents (except .dockerignored files)\nCOPY etc/xvfb /etc/init.d/xvfb\nRUN chmod +x /etc/init.d/xvfb\n#   Add a user and make it a sudo user\nRUN useradd -m chromeuser\n#   Copy the chrome-user script used to start Chrome as non-root\nCOPY chromeuser-script.sh /\nRUN chmod +x /chromeuser-script.sh\n#  # PART 2: Lighthouse\n#  # ==================\n#   Download lighthouse\nRUN git clone https://github.com/googlechrome/lighthouse \\\n && cd /lighthouse \\\n && git checkout tags/v4.2.0 \\\n && npm install yarn -g \\\n && npm install yarnpkg -g \\\n && npm install @types/mkdirp -g \\\n && npm install run-sequence -g --save-dev \\\n && npm install typescript -g \\\n && npm install -g \\\n && yarn global add lighthouse\n#  # PART 3: Express server\n#  # ======================\n#   Install express\nCOPY package.json /\nRUN npm install\n#   Add the simple server file\nCOPY server.js /\nRUN chmod +x /server.js\n#   Add the cpu monitor file\nCOPY cpu_monitor.js /\nRUN chmod +x /cpu_monitor.js\n#   Generate a self-signed SSL certificate\nRUN openssl req -new -newkey rsa:4096 -days 365 -nodes -x509 -subj \"/C=GB/ST=None/L=None/O=Google/CN=lighthouse-machine-X\" -keyout key.pem -out cert.pem\n#   Expose ports 8080 and 8443\nEXPOSE 8080/tcp\nEXPOSE 8443/tcp\n#  # PART 4: Final setup\n#  # ===================\n#   Set the entrypoint\nCOPY entrypoint.sh /\nRUN chmod +x /entrypoint.sh\nENTRYPOINT [\"/entrypoint.sh\"]\n","originalDockerfileUglifiedHash":"fae930d52e152de1775611739817596f","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/9ee2cf16a2452d364bb4bada97eab5749c602c31.dockerfile"}