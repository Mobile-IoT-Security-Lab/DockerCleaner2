{"seed":2056987113,"processedDockerfileHash":"829962b71e1767aac3d05a741912919a","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-npm","pin-package-manager-versions-gem","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM ubuntu:12.04\nMAINTAINER sabalah21@gmail.com\n#   Configuring locales\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN dpkg-reconfigure locales \\\n && locale-gen en_US.UTF-8 \\\n && update-locale LANG=en_US.UTF-8\nENV LANG=\"en_US.UTF-8\"\nENV LANGUAGE=\"en_US:en\"\nENV LC_ALL=\"en_US.UTF-8\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends software-properties-common python-software-properties -y\nRUN add-apt-repository ppa:cartodb/postgresql-9.3 \\\n && add-apt-repository ppa:cartodb/gis \\\n && add-apt-repository ppa:cartodb/redis \\\n && add-apt-repository ppa:cartodb/nodejs-010\nRUN apt-get update \\\n && apt-get install --no-install-recommends autoconf automake build-essential bison checkinstall ca-certificates git-core git imagemagick libjson0 libtool libreadline6 libyaml-dev libsqlite3-dev libxml2-dev libxslt-dev libssl-dev libpq-dev libffi-dev libgdbm-dev libreadline6-dev libcairo2-dev libjpeg8-dev libpango1.0-dev libgif-dev libgmp-dev libicu-dev ncurses-dev nodejs openssl postgresql-client pgtune pkg-config python-simplejson python2.7-dev python-setuptools python-argparse python-chardet python-gdal redis-server syslinux varnish vim unp unzip wget zlib1g zlib1g-dev subversion zip -y\n#   Install cartodb requested npm version\nRUN npm install npm@2.14.16 -g\nRUN npm install forever@4.0.3 -g\n#   GIS dependencies\nRUN apt-get install --no-install-recommends proj proj-bin proj-data libproj-dev -y\nRUN apt-get install --no-install-recommends libjson0 libjson0-dev python-simplejson -y\nRUN apt-get install --no-install-recommends libgeos-c1v5 libgeos-dev -y\nRUN apt-get install --no-install-recommends gdal-bin libgdal1-dev libgdal-dev -y\nRUN apt-get install --no-install-recommends gdal2.1-static-bin -y\n#   Install Ruby\nRUN cd /tmp \\\n && wget -O ruby-install-0.5.0.tar.gz https://github.com/postmodern/ruby-install/archive/v0.5.0.tar.gz \\\n && tar -xzvf ruby-install-0.5.0.tar.gz \\\n && cd ruby-install-0.5.0/ \\\n && make install \\\n && ruby-install ruby 2.2.3\n#   Set ruby && gdal enviorment variables\nENV PATH=\"$PATH:/opt/rubies/ruby-2.2.3/bin\"\nENV CPLUS_INCLUDE_PATH=\"$CPLUS_INCLUDE_PATH:/usr/include/gdal\"\nENV C_INCLUDE_PATH=\"$C_INCLUDE_PATH:/usr/include/gdal\"\nENV PATH=\"$PATH:/usr/include/gdal\"\nENV GDAL_DATA=\"/usr/share/gdal/2.1\"\n#   Install SQL API\nRUN git clone git://github.com/CartoDB/CartoDB-SQL-API.git \\\n && cd CartoDB-SQL-API \\\n && git checkout master \\\n && ./configure \\\n && npm install \\\n && mv config/environments/development.js.example config/environments/development.js \\\n && mv config/environments/production.js.example config/environments/production.js \\\n && mv config/environments/staging.js.example config/environments/staging.js \\\n && mv config/environments/test.js.example config/environments/test.js\n#   Install Windshaft\nRUN git clone git://github.com/CartoDB/Windshaft-cartodb.git \\\n && cd Windshaft-cartodb \\\n && git checkout master \\\n && ./configure \\\n && npm install \\\n && mkdir logs \\\n && cp config/environments/development.js.example config/environments/development.js \\\n && cp config/environments/production.js.example config/environments/production.js \\\n && cp config/environments/staging.js.example config/environments/staging.js \\\n && cp config/environments/test.js.example config/environments/test.js\n#   Install gems\nRUN gem install bundler --version 2.4.12\nRUN gem install compass --version 1.0.3\n#   Install pip\nRUN wget -O /tmp/get-pip.py https://bootstrap.pypa.io/get-pip.py \\\n && python /tmp/get-pip.py\n#   Install Carto App\nRUN git clone --recursive https://github.com/CartoDB/cartodb20.git\nRUN cd /cartodb20 \\\n && git checkout master\nRUN cd /cartodb20 \\\n && RAILS_ENV=development bundle install\nRUN cd /cartodb20 \\\n && npm install\nRUN cd /cartodb20 \\\n && pip install --no-use-wheel -r python_requirements.txt\nENV PATH=\"$PATH:/cartodb20/node_modules/grunt-cli/bin\"\nRUN cd /cartodb20 \\\n && bundle install \\\n && bundle exec grunt --environment development \\\n && cp config/app_config.yml.sample config/app_config.yml \\\n && cp config/database.yml.sample config/database.yml \\\n && mkdir log\nCMD [\"/bin/bash\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:12.04\nMAINTAINER sabalah21@gmail.com\n#  Configuring locales\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN dpkg-reconfigure locales \\\n && locale-gen en_US.UTF-8 \\\n && update-locale LANG=en_US.UTF-8\nENV LANG=\"en_US.UTF-8\"\nENV LANGUAGE=\"en_US:en\"\nENV LC_ALL=\"en_US.UTF-8\"\nRUN apt-get update \\\n && apt-get install software-properties-common python-software-properties -y\nRUN add-apt-repository ppa:cartodb/postgresql-9.3 \\\n && add-apt-repository ppa:cartodb/gis \\\n && add-apt-repository ppa:cartodb/redis \\\n && add-apt-repository ppa:cartodb/nodejs-010\nRUN apt-get update \\\n && apt-get install autoconf automake build-essential bison checkinstall ca-certificates git-core git imagemagick libjson0 libtool libreadline6 libyaml-dev libsqlite3-dev libxml2-dev libxslt-dev libssl-dev libpq-dev libffi-dev libgdbm-dev libreadline6-dev libcairo2-dev libjpeg8-dev libpango1.0-dev libgif-dev libgmp-dev libicu-dev ncurses-dev nodejs openssl postgresql-client pgtune pkg-config python-simplejson python2.7-dev python-setuptools python-argparse python-chardet python-gdal redis-server syslinux varnish vim unp unzip wget zlib1g zlib1g-dev subversion zip -y\n#  Install cartodb requested npm version\nRUN npm install npm@2.14.16 -g\nRUN npm install forever -g\n#  GIS dependencies\nRUN apt-get install proj proj-bin proj-data libproj-dev -y\nRUN apt-get install libjson0 libjson0-dev python-simplejson -y\nRUN apt-get install libgeos-c1v5 libgeos-dev -y\nRUN apt-get install gdal-bin libgdal1-dev libgdal-dev -y\nRUN apt-get install gdal2.1-static-bin -y\n#  Install Ruby\nRUN cd /tmp \\\n && wget -O ruby-install-0.5.0.tar.gz https://github.com/postmodern/ruby-install/archive/v0.5.0.tar.gz \\\n && tar -xzvf ruby-install-0.5.0.tar.gz \\\n && cd ruby-install-0.5.0/ \\\n && make install \\\n && ruby-install ruby 2.2.3\n#  Set ruby && gdal enviorment variables\nENV PATH=\"$PATH:/opt/rubies/ruby-2.2.3/bin\"\nENV CPLUS_INCLUDE_PATH=\"$CPLUS_INCLUDE_PATH:/usr/include/gdal\"\nENV C_INCLUDE_PATH=\"$C_INCLUDE_PATH:/usr/include/gdal\"\nENV PATH=\"$PATH:/usr/include/gdal\"\nENV GDAL_DATA=\"/usr/share/gdal/2.1\"\n#  Install SQL API\nRUN git clone git://github.com/CartoDB/CartoDB-SQL-API.git \\\n && cd CartoDB-SQL-API \\\n && git checkout master \\\n && ./configure \\\n && npm install \\\n && mv config/environments/development.js.example config/environments/development.js \\\n && mv config/environments/production.js.example config/environments/production.js \\\n && mv config/environments/staging.js.example config/environments/staging.js \\\n && mv config/environments/test.js.example config/environments/test.js\n#  Install Windshaft\nRUN git clone git://github.com/CartoDB/Windshaft-cartodb.git \\\n && cd Windshaft-cartodb \\\n && git checkout master \\\n && ./configure \\\n && npm install \\\n && mkdir logs \\\n && cp config/environments/development.js.example config/environments/development.js \\\n && cp config/environments/production.js.example config/environments/production.js \\\n && cp config/environments/staging.js.example config/environments/staging.js \\\n && cp config/environments/test.js.example config/environments/test.js\n#  Install gems\nRUN gem install bundler\nRUN gem install compass\n#  Install pip\nRUN wget -O /tmp/get-pip.py https://bootstrap.pypa.io/get-pip.py \\\n && python /tmp/get-pip.py\n#  Install Carto App\nRUN git clone --recursive https://github.com/CartoDB/cartodb20.git\nRUN cd /cartodb20 \\\n && git checkout master\nRUN cd /cartodb20 \\\n && RAILS_ENV=development bundle install\nRUN cd /cartodb20 \\\n && npm install\nRUN cd /cartodb20 \\\n && pip install --no-use-wheel -r python_requirements.txt\nENV PATH=\"$PATH:/cartodb20/node_modules/grunt-cli/bin\"\nRUN cd /cartodb20 \\\n && bundle install \\\n && bundle exec grunt --environment development \\\n && cp config/app_config.yml.sample config/app_config.yml \\\n && cp config/database.yml.sample config/database.yml \\\n && mkdir log\nCMD [\"/bin/bash\"]\n","injectedSmells":[],"originalDockerfileHash":"893af7f87287a94cbf32fdcd7a9b21e9","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:12.04\nMAINTAINER sabalah21@gmail.com\n#   Configuring locales\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN dpkg-reconfigure locales \\\n && locale-gen en_US.UTF-8 \\\n && update-locale LANG=en_US.UTF-8\nENV LANG=\"en_US.UTF-8\"\nENV LANGUAGE=\"en_US:en\"\nENV LC_ALL=\"en_US.UTF-8\"\nRUN apt-get update \\\n && apt-get install software-properties-common python-software-properties -y\nRUN add-apt-repository ppa:cartodb/postgresql-9.3 \\\n && add-apt-repository ppa:cartodb/gis \\\n && add-apt-repository ppa:cartodb/redis \\\n && add-apt-repository ppa:cartodb/nodejs-010\nRUN apt-get update \\\n && apt-get install autoconf automake build-essential bison checkinstall ca-certificates git-core git imagemagick libjson0 libtool libreadline6 libyaml-dev libsqlite3-dev libxml2-dev libxslt-dev libssl-dev libpq-dev libffi-dev libgdbm-dev libreadline6-dev libcairo2-dev libjpeg8-dev libpango1.0-dev libgif-dev libgmp-dev libicu-dev ncurses-dev nodejs openssl postgresql-client pgtune pkg-config python-simplejson python2.7-dev python-setuptools python-argparse python-chardet python-gdal redis-server syslinux varnish vim unp unzip wget zlib1g zlib1g-dev subversion zip -y\n#   Install cartodb requested npm version\nRUN npm install npm@2.14.16 -g\nRUN npm install forever -g\n#   GIS dependencies\nRUN apt-get install proj proj-bin proj-data libproj-dev -y\nRUN apt-get install libjson0 libjson0-dev python-simplejson -y\nRUN apt-get install libgeos-c1v5 libgeos-dev -y\nRUN apt-get install gdal-bin libgdal1-dev libgdal-dev -y\nRUN apt-get install gdal2.1-static-bin -y\n#   Install Ruby\nRUN cd /tmp \\\n && wget -O ruby-install-0.5.0.tar.gz https://github.com/postmodern/ruby-install/archive/v0.5.0.tar.gz \\\n && tar -xzvf ruby-install-0.5.0.tar.gz \\\n && cd ruby-install-0.5.0/ \\\n && make install \\\n && ruby-install ruby 2.2.3\n#   Set ruby && gdal enviorment variables\nENV PATH=\"$PATH:/opt/rubies/ruby-2.2.3/bin\"\nENV CPLUS_INCLUDE_PATH=\"$CPLUS_INCLUDE_PATH:/usr/include/gdal\"\nENV C_INCLUDE_PATH=\"$C_INCLUDE_PATH:/usr/include/gdal\"\nENV PATH=\"$PATH:/usr/include/gdal\"\nENV GDAL_DATA=\"/usr/share/gdal/2.1\"\n#   Install SQL API\nRUN git clone git://github.com/CartoDB/CartoDB-SQL-API.git \\\n && cd CartoDB-SQL-API \\\n && git checkout master \\\n && ./configure \\\n && npm install \\\n && mv config/environments/development.js.example config/environments/development.js \\\n && mv config/environments/production.js.example config/environments/production.js \\\n && mv config/environments/staging.js.example config/environments/staging.js \\\n && mv config/environments/test.js.example config/environments/test.js\n#   Install Windshaft\nRUN git clone git://github.com/CartoDB/Windshaft-cartodb.git \\\n && cd Windshaft-cartodb \\\n && git checkout master \\\n && ./configure \\\n && npm install \\\n && mkdir logs \\\n && cp config/environments/development.js.example config/environments/development.js \\\n && cp config/environments/production.js.example config/environments/production.js \\\n && cp config/environments/staging.js.example config/environments/staging.js \\\n && cp config/environments/test.js.example config/environments/test.js\n#   Install gems\nRUN gem install bundler\nRUN gem install compass\n#   Install pip\nRUN wget -O /tmp/get-pip.py https://bootstrap.pypa.io/get-pip.py \\\n && python /tmp/get-pip.py\n#   Install Carto App\nRUN git clone --recursive https://github.com/CartoDB/cartodb20.git\nRUN cd /cartodb20 \\\n && git checkout master\nRUN cd /cartodb20 \\\n && RAILS_ENV=development bundle install\nRUN cd /cartodb20 \\\n && npm install\nRUN cd /cartodb20 \\\n && pip install --no-use-wheel -r python_requirements.txt\nENV PATH=\"$PATH:/cartodb20/node_modules/grunt-cli/bin\"\nRUN cd /cartodb20 \\\n && bundle install \\\n && bundle exec grunt --environment development \\\n && cp config/app_config.yml.sample config/app_config.yml \\\n && cp config/database.yml.sample config/database.yml \\\n && mkdir log\nCMD [\"/bin/bash\"]\n","originalDockerfileUglifiedHash":"80920150aba40b8f581f5745fae5f783","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/4ad5f3cb187591ca04459126d9bb269451b5a516.dockerfile"}