{"seed":3375231285,"processedDockerfileHash":"4be69bf8def98bbfa7963fa42d9db2a8","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM debian:wheezy\nLABEL org.label-schema.license=\"GPL-2.0\" \\\n      org.label-schema.vcs-url=\"https://github.com/rocker-org/rocker-versioned\" \\\n      org.label-schema.vendor=\"Rocker Project\" \\\n      maintainer=\"Carl Boettiger <cboettig@ropensci.org>\" \\\n      contributor=\"Colin Fay <contact@colinfay.me>\"\nARG R_VERSION\nARG BUILD_DATE\nENV BUILD_DATE=\"${BUILD_DATE:-2015-03-09}\"\nENV R_VERSION=\"${R_VERSION:-3.1.3}\" \\\n    LITTLER_VER=\"0.2.2\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    LANG=\"en_US.UTF-8\" \\\n    TERM=\"xterm\"\n#  # dependencies\n#  # Update the sources.list to use wheezy archive\nRUN rm /etc/apt/sources.list \\\n && echo 'deb http://archive.debian.org/debian/ wheezy main non-free contrib' >> /etc/apt/sources.list \\\n && echo 'deb-src http://archive.debian.org/debian/ wheezy main non-free contrib' >> /etc/apt/sources.list \\\n && echo 'deb http://archive.debian.org/debian-security/ wheezy/updates main non-free contrib' >> /etc/apt/sources.list \\\n && echo 'deb-src http://archive.debian.org/debian-security/ wheezy/updates main non-free contrib' >> /etc/apt/sources.list \\\n && apt-get -o Acquire::Check-Valid-Until=false update \\\n && apt-get install --no-install-recommends autotools-dev automake bash-completion build-essential ca-certificates curl file g++ gfortran gsfonts libblas-dev libbz2-1.0 libcurl3 libicu-dev libjpeg-dev libopenblas-dev libcairo2-dev libpcre3 libpng-dev libtiff5 liblzma5 locales make unzip zip zlib1g -y \\\n && echo \"en_US.UTF-8 UTF-8\" >> /etc/locale.gen \\\n && locale-gen en_US.utf8 \\\n && /usr/sbin/update-locale LANG=en_US.UTF-8 \\\n && BUILDDEPS=\" default-jdk libbz2-dev libcurl4-openssl-dev libpango1.0-dev libpcre3-dev libreadline-dev libtiff5-dev liblzma-dev libx11-dev libxt-dev perl tcl8.5-dev tk8.5-dev texinfo texlive-extra-utils texlive-fonts-recommended texlive-fonts-extra texlive-latex-recommended x11proto-core-dev xauth xfonts-base xvfb zlib1g-dev\" \\\n && apt-get install --no-install-recommends $BUILDDEPS -y \\\n && cd tmp/ \\\n && curl -O https://cran.r-project.org/src/base/R-3/R-${R_VERSION}.tar.gz \\\n && tar -xf R-${R_VERSION}.tar.gz \\\n && cd R-${R_VERSION} \\\n && R_PAPERSIZE=letter R_BATCHSAVE=\"--no-save --no-restore\" R_BROWSER=xdg-open PAGER=/usr/bin/pager PERL=/usr/bin/perl R_UNZIPCMD=/usr/bin/unzip R_ZIPCMD=/usr/bin/zip R_PRINTCMD=/usr/bin/lpr LIBnn=lib AWK=/usr/bin/awk CFLAGS=\"-g -O2 -Wformat -Werror=format-security -D_FORTIFY_SOURCE=2 -g\" CXXFLAGS=\"-g -O2 -Wformat -Werror=format-security -D_FORTIFY_SOURCE=2 -g\" ./configure --enable-R-shlib --enable-memory-profiling --with-readline --with-blas --with-tcltk --disable-nls --with-recommended-packages \\\n && make \\\n && make install \\\n && echo \"options(repos = c(CRAN = 'https://cran.rstudio.com/'), download.file.method = 'curl')\" >> /usr/local/lib/R/etc/Rprofile.site \\\n && mkdir -p /usr/local/lib/R/site-library \\\n && chown root:staff /usr/local/lib/R/site-library \\\n && chmod g+wx /usr/local/lib/R/site-library \\\n && echo \"R_LIBS_USER='/usr/local/lib/R/site-library'\" >> /usr/local/lib/R/etc/Renviron \\\n && echo \"R_LIBS=${R_LIBS-'/usr/local/lib/R/site-library:/usr/local/lib/R/library:/usr/lib/R/library'}\" >> /usr/local/lib/R/etc/Renviron \\\n && [ -z \"$BUILD_DATE\" ] \\\n && BUILD_DATE=$( TZ=\"America/Los_Angeles\" date -I ;) || true \\\n && MRAN=https://mran.microsoft.com/snapshot/${BUILD_DATE} \\\n && echo MRAN=$MRAN >> /etc/environment \\\n && export MRAN=$MRAN \\\n && echo \"options(repos = c(CRAN='$MRAN'), download.file.method = 'curl')\" >> /usr/local/lib/R/etc/Rprofile.site \\\n && mkdir -p /usr/local/lib/R/site-library \\\n && chown root:staff /usr/local/lib/R/site-library \\\n && chmod g+wx /usr/local/lib/R/site-library \\\n && echo \"R_LIBS_USER='/usr/local/lib/R/site-library'\" >> /usr/local/lib/R/etc/Renviron \\\n && echo \"R_LIBS=${R_LIBS-'/usr/local/lib/R/site-library:/usr/local/lib/R/library:/usr/lib/R/library'}\" >> /usr/local/lib/R/etc/Renviron \\\n && [ -z \"$BUILD_DATE\" ] \\\n && BUILD_DATE=$( TZ=\"America/Los_Angeles\" date -I ;) || true \\\n && MRAN=https://mran.microsoft.com/snapshot/${BUILD_DATE} \\\n && echo MRAN=$MRAN >> /etc/environment \\\n && export MRAN=$MRAN \\\n && echo \"options(repos = c(CRAN='$MRAN'), download.file.method = 'curl')\" >> /usr/local/lib/R/etc/Rprofile.site \\\n && Rscript -e \"install.packages(c('docopt'), repo = '$MRAN')\" \\\n && make install-tests \\\n && cd $( R RHOME ;) \\\n && cd tests \\\n && ../bin/R CMD make check \\\n && R -e 'tools::testInstalledBasic(\"both\")' \\\n && curl -O http://dirk.eddelbuettel.com/code/littler/littler-${LITTLER_VER}.tar.gz \\\n && tar -zxvf littler-${LITTLER_VER}.tar.gz \\\n && cd littler-${LITTLER_VER} \\\n && ./bootstrap \\\n && make \\\n && make install \\\n && cd / \\\n && rm -rf /tmp/* \\\n && apt-get remove --purge -y $BUILDDEPS \\\n && apt-get autoremove -y \\\n && apt-get autoclean -y \\\n && rm -rf /var/lib/apt/lists/*\nCMD [\"R\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM debian:wheezy\nLABEL org.label-schema.license=\"GPL-2.0\" \\\n      org.label-schema.vcs-url=\"https://github.com/rocker-org/rocker-versioned\" \\\n      org.label-schema.vendor=\"Rocker Project\" \\\n      maintainer=\"Carl Boettiger <cboettig@ropensci.org>\" \\\n      contributor=\"Colin Fay <contact@colinfay.me>\"\nARG R_VERSION\nARG BUILD_DATE\nENV BUILD_DATE=\"${BUILD_DATE:-2015-03-09}\"\nENV R_VERSION=\"${R_VERSION:-3.1.3}\" \\\n    LITTLER_VER=\"0.2.2\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    LANG=\"en_US.UTF-8\" \\\n    TERM=\"xterm\"\n# # dependencies\n# # Update the sources.list to use wheezy archive\nRUN rm /etc/apt/sources.list \\\n && echo 'deb http://archive.debian.org/debian/ wheezy main non-free contrib' >> /etc/apt/sources.list \\\n && echo 'deb-src http://archive.debian.org/debian/ wheezy main non-free contrib' >> /etc/apt/sources.list \\\n && echo 'deb http://archive.debian.org/debian-security/ wheezy/updates main non-free contrib' >> /etc/apt/sources.list \\\n && echo 'deb-src http://archive.debian.org/debian-security/ wheezy/updates main non-free contrib' >> /etc/apt/sources.list \\\n && apt-get -o Acquire::Check-Valid-Until=false update \\\n && apt-get install --no-install-recommends autotools-dev automake bash-completion build-essential ca-certificates curl file g++ gfortran gsfonts libblas-dev libbz2-1.0 libcurl3 libicu-dev libjpeg-dev libopenblas-dev libcairo2-dev libpcre3 libpng-dev libtiff5 liblzma5 locales make unzip zip zlib1g -y \\\n && echo \"en_US.UTF-8 UTF-8\" >> /etc/locale.gen \\\n && locale-gen en_US.utf8 \\\n && /usr/sbin/update-locale LANG=en_US.UTF-8 \\\n && BUILDDEPS=\" default-jdk libbz2-dev libcurl4-openssl-dev libpango1.0-dev libpcre3-dev libreadline-dev libtiff5-dev liblzma-dev libx11-dev libxt-dev perl tcl8.5-dev tk8.5-dev texinfo texlive-extra-utils texlive-fonts-recommended texlive-fonts-extra texlive-latex-recommended x11proto-core-dev xauth xfonts-base xvfb zlib1g-dev\" \\\n && apt-get install --no-install-recommends $BUILDDEPS -y \\\n && cd tmp/ \\\n && curl -O https://cran.r-project.org/src/base/R-3/R-${R_VERSION}.tar.gz \\\n && tar -xf R-${R_VERSION}.tar.gz \\\n && cd R-${R_VERSION} \\\n && R_PAPERSIZE=letter R_BATCHSAVE=\"--no-save --no-restore\" R_BROWSER=xdg-open PAGER=/usr/bin/pager PERL=/usr/bin/perl R_UNZIPCMD=/usr/bin/unzip R_ZIPCMD=/usr/bin/zip R_PRINTCMD=/usr/bin/lpr LIBnn=lib AWK=/usr/bin/awk CFLAGS=\"-g -O2 -Wformat -Werror=format-security -D_FORTIFY_SOURCE=2 -g\" CXXFLAGS=\"-g -O2 -Wformat -Werror=format-security -D_FORTIFY_SOURCE=2 -g\" ./configure --enable-R-shlib --enable-memory-profiling --with-readline --with-blas --with-tcltk --disable-nls --with-recommended-packages \\\n && make \\\n && make install \\\n && echo \"options(repos = c(CRAN = 'https://cran.rstudio.com/'), download.file.method = 'curl')\" >> /usr/local/lib/R/etc/Rprofile.site \\\n && mkdir -p /usr/local/lib/R/site-library \\\n && chown root:staff /usr/local/lib/R/site-library \\\n && chmod g+wx /usr/local/lib/R/site-library \\\n && echo \"R_LIBS_USER='/usr/local/lib/R/site-library'\" >> /usr/local/lib/R/etc/Renviron \\\n && echo \"R_LIBS=${R_LIBS-'/usr/local/lib/R/site-library:/usr/local/lib/R/library:/usr/lib/R/library'}\" >> /usr/local/lib/R/etc/Renviron \\\n && [ -z \"$BUILD_DATE\" ] \\\n && BUILD_DATE=$( TZ=\"America/Los_Angeles\" date -I ;) || true \\\n && MRAN=https://mran.microsoft.com/snapshot/${BUILD_DATE} \\\n && echo MRAN=$MRAN >> /etc/environment \\\n && export MRAN=$MRAN \\\n && echo \"options(repos = c(CRAN='$MRAN'), download.file.method = 'curl')\" >> /usr/local/lib/R/etc/Rprofile.site \\\n && mkdir -p /usr/local/lib/R/site-library \\\n && chown root:staff /usr/local/lib/R/site-library \\\n && chmod g+wx /usr/local/lib/R/site-library \\\n && echo \"R_LIBS_USER='/usr/local/lib/R/site-library'\" >> /usr/local/lib/R/etc/Renviron \\\n && echo \"R_LIBS=${R_LIBS-'/usr/local/lib/R/site-library:/usr/local/lib/R/library:/usr/lib/R/library'}\" >> /usr/local/lib/R/etc/Renviron \\\n && [ -z \"$BUILD_DATE\" ] \\\n && BUILD_DATE=$( TZ=\"America/Los_Angeles\" date -I ;) || true \\\n && MRAN=https://mran.microsoft.com/snapshot/${BUILD_DATE} \\\n && echo MRAN=$MRAN >> /etc/environment \\\n && export MRAN=$MRAN \\\n && echo \"options(repos = c(CRAN='$MRAN'), download.file.method = 'curl')\" >> /usr/local/lib/R/etc/Rprofile.site \\\n && Rscript -e \"install.packages(c('docopt'), repo = '$MRAN')\" \\\n && make install-tests \\\n && cd $( R RHOME ;) \\\n && cd tests \\\n && ../bin/R CMD make check \\\n && R -e 'tools::testInstalledBasic(\"both\")' \\\n && curl -O http://dirk.eddelbuettel.com/code/littler/littler-${LITTLER_VER}.tar.gz \\\n && tar -zxvf littler-${LITTLER_VER}.tar.gz \\\n && cd littler-${LITTLER_VER} \\\n && ./bootstrap \\\n && make \\\n && make install \\\n && cd / \\\n && rm -rf /tmp/* \\\n && apt-get remove --purge -y $BUILDDEPS \\\n && apt-get autoremove -y \\\n && apt-get autoclean -y \\\n && rm -rf /var/lib/apt/lists/*\nCMD [\"R\"]\n","injectedSmells":[],"originalDockerfileHash":"e2d89b09bcef8b41120aa7b2c92df135","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM debian:wheezy\nLABEL org.label-schema.license=\"GPL-2.0\" \\\n      org.label-schema.vcs-url=\"https://github.com/rocker-org/rocker-versioned\" \\\n      org.label-schema.vendor=\"Rocker Project\" \\\n      maintainer=\"Carl Boettiger <cboettig@ropensci.org>\" \\\n      contributor=\"Colin Fay <contact@colinfay.me>\"\nARG R_VERSION\nARG BUILD_DATE\nENV BUILD_DATE=\"${BUILD_DATE:-2015-03-09}\"\nENV R_VERSION=\"${R_VERSION:-3.1.3}\" \\\n    LITTLER_VER=\"0.2.2\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    LANG=\"en_US.UTF-8\" \\\n    TERM=\"xterm\"\n#  # dependencies\n#  # Update the sources.list to use wheezy archive\nRUN rm /etc/apt/sources.list \\\n && echo 'deb http://archive.debian.org/debian/ wheezy main non-free contrib' >> /etc/apt/sources.list \\\n && echo 'deb-src http://archive.debian.org/debian/ wheezy main non-free contrib' >> /etc/apt/sources.list \\\n && echo 'deb http://archive.debian.org/debian-security/ wheezy/updates main non-free contrib' >> /etc/apt/sources.list \\\n && echo 'deb-src http://archive.debian.org/debian-security/ wheezy/updates main non-free contrib' >> /etc/apt/sources.list \\\n && apt-get -o Acquire::Check-Valid-Until=false update \\\n && apt-get install --no-install-recommends autotools-dev automake bash-completion build-essential ca-certificates curl file g++ gfortran gsfonts libblas-dev libbz2-1.0 libcurl3 libicu-dev libjpeg-dev libopenblas-dev libcairo2-dev libpcre3 libpng-dev libtiff5 liblzma5 locales make unzip zip zlib1g -y \\\n && echo \"en_US.UTF-8 UTF-8\" >> /etc/locale.gen \\\n && locale-gen en_US.utf8 \\\n && /usr/sbin/update-locale LANG=en_US.UTF-8 \\\n && BUILDDEPS=\" default-jdk libbz2-dev libcurl4-openssl-dev libpango1.0-dev libpcre3-dev libreadline-dev libtiff5-dev liblzma-dev libx11-dev libxt-dev perl tcl8.5-dev tk8.5-dev texinfo texlive-extra-utils texlive-fonts-recommended texlive-fonts-extra texlive-latex-recommended x11proto-core-dev xauth xfonts-base xvfb zlib1g-dev\" \\\n && apt-get install --no-install-recommends $BUILDDEPS -y \\\n && cd tmp/ \\\n && curl -O https://cran.r-project.org/src/base/R-3/R-${R_VERSION}.tar.gz \\\n && tar -xf R-${R_VERSION}.tar.gz \\\n && cd R-${R_VERSION} \\\n && R_PAPERSIZE=letter R_BATCHSAVE=\"--no-save --no-restore\" R_BROWSER=xdg-open PAGER=/usr/bin/pager PERL=/usr/bin/perl R_UNZIPCMD=/usr/bin/unzip R_ZIPCMD=/usr/bin/zip R_PRINTCMD=/usr/bin/lpr LIBnn=lib AWK=/usr/bin/awk CFLAGS=\"-g -O2 -Wformat -Werror=format-security -D_FORTIFY_SOURCE=2 -g\" CXXFLAGS=\"-g -O2 -Wformat -Werror=format-security -D_FORTIFY_SOURCE=2 -g\" ./configure --enable-R-shlib --enable-memory-profiling --with-readline --with-blas --with-tcltk --disable-nls --with-recommended-packages \\\n && make \\\n && make install \\\n && echo \"options(repos = c(CRAN = 'https://cran.rstudio.com/'), download.file.method = 'curl')\" >> /usr/local/lib/R/etc/Rprofile.site \\\n && mkdir -p /usr/local/lib/R/site-library \\\n && chown root:staff /usr/local/lib/R/site-library \\\n && chmod g+wx /usr/local/lib/R/site-library \\\n && echo \"R_LIBS_USER='/usr/local/lib/R/site-library'\" >> /usr/local/lib/R/etc/Renviron \\\n && echo \"R_LIBS=${R_LIBS-'/usr/local/lib/R/site-library:/usr/local/lib/R/library:/usr/lib/R/library'}\" >> /usr/local/lib/R/etc/Renviron \\\n && [ -z \"$BUILD_DATE\" ] \\\n && BUILD_DATE=$( TZ=\"America/Los_Angeles\" date -I ;) || true \\\n && MRAN=https://mran.microsoft.com/snapshot/${BUILD_DATE} \\\n && echo MRAN=$MRAN >> /etc/environment \\\n && export MRAN=$MRAN \\\n && echo \"options(repos = c(CRAN='$MRAN'), download.file.method = 'curl')\" >> /usr/local/lib/R/etc/Rprofile.site \\\n && mkdir -p /usr/local/lib/R/site-library \\\n && chown root:staff /usr/local/lib/R/site-library \\\n && chmod g+wx /usr/local/lib/R/site-library \\\n && echo \"R_LIBS_USER='/usr/local/lib/R/site-library'\" >> /usr/local/lib/R/etc/Renviron \\\n && echo \"R_LIBS=${R_LIBS-'/usr/local/lib/R/site-library:/usr/local/lib/R/library:/usr/lib/R/library'}\" >> /usr/local/lib/R/etc/Renviron \\\n && [ -z \"$BUILD_DATE\" ] \\\n && BUILD_DATE=$( TZ=\"America/Los_Angeles\" date -I ;) || true \\\n && MRAN=https://mran.microsoft.com/snapshot/${BUILD_DATE} \\\n && echo MRAN=$MRAN >> /etc/environment \\\n && export MRAN=$MRAN \\\n && echo \"options(repos = c(CRAN='$MRAN'), download.file.method = 'curl')\" >> /usr/local/lib/R/etc/Rprofile.site \\\n && Rscript -e \"install.packages(c('docopt'), repo = '$MRAN')\" \\\n && make install-tests \\\n && cd $( R RHOME ;) \\\n && cd tests \\\n && ../bin/R CMD make check \\\n && R -e 'tools::testInstalledBasic(\"both\")' \\\n && curl -O http://dirk.eddelbuettel.com/code/littler/littler-${LITTLER_VER}.tar.gz \\\n && tar -zxvf littler-${LITTLER_VER}.tar.gz \\\n && cd littler-${LITTLER_VER} \\\n && ./bootstrap \\\n && make \\\n && make install \\\n && cd / \\\n && rm -rf /tmp/* \\\n && apt-get remove --purge -y $BUILDDEPS \\\n && apt-get autoremove -y \\\n && apt-get autoclean -y \\\n && rm -rf /var/lib/apt/lists/*\nCMD [\"R\"]\n","originalDockerfileUglifiedHash":"975535bcbd41149c6aa8795804aab620","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/0689c6369828dac0c6dc2a4810878643def5818c.dockerfile"}