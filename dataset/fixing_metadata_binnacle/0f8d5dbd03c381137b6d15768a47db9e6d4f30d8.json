{"seed":3168775521,"processedDockerfileHash":"ebd9074151af22cdbb47aa009aa21545","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Copyright (c) Microsoft Corporation. All rights reserved.\n#   Licensed under the MIT License.\n#\n#   Docker image file that describes an BlackArch Linux image (derived from Arch\n#   Linux base image) with PowerShell installed from full PowerShell linux tar.gz\n#   package\n#   Define arg(s) needed for the From statement\nARG fromTag=latest\nARG imageRepo=archlinux/base\nFROM ${imageRepo}:${fromTag} AS installer-env\n#   Define Args for the needed for BlackArch Linux\nARG BlackArch_Strap_URL=https://blackarch.org/strap.sh\n#   Download BlackArch Linux strap shell script\nCOPY ${BlackArch_Strap_URL} /tmp/strap.sh\n#   Define Args for the needed to add the package\nARG PS_VERSION=6.1.0\nARG PS_PACKAGE=powershell-${PS_VERSION}-linux-x64.tar.gz\nARG PS_PACKAGE_URL=https://github.com/PowerShell/PowerShell/releases/download/v${PS_VERSION}/${PS_PACKAGE}\nARG PS_INSTALL_VERSION=6\n#   Download the PowerShell Core Linux tar.gz and save it\nCOPY ${PS_PACKAGE_URL} /tmp/powershell-linux.tar.gz\n#   Define Args and Env needed to create links\nENV PS_INSTALL_FOLDER=\"/opt/microsoft/powershell/$PS_INSTALL_VERSION\" \\\n    DOTNET_SYSTEM_GLOBALIZATION_INVARIANT=\"false\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    LANG=\"en_US.UTF-8\" \\\n    PSModuleAnalysisCachePath=\"/var/cache/microsoft/powershell/PSModuleAnalysisCache/ModuleAnalysisCache\" \\\n    DOTNET_SYSTEM_NET_HTTP_USESOCKETSHTTPHANDLER=\"0\"\n#   Installation\nRUN echo \"en_US.UTF-8 UTF-8\" >> /etc/locale.gen \\\n && locale-gen \\\n && chmod +x /tmp/strap.sh \\\n && sed -i \"s|pgp.mit.edu|hkp://pool.sks-keyservers.net|g\" /tmp/strap.sh \\\n && /tmp/strap.sh \\\n && rm -f /tmp/strap.sh \\\n && pacman -Syy \\\n && pacman -S --noconfirm archlinux-keyring core/icu openssl-1.0 tar \\\n && mkdir -p ${PS_INSTALL_FOLDER} \\\n && tar zxf /tmp/powershell-linux.tar.gz -C ${PS_INSTALL_FOLDER} \\\n && rm -f /tmp/powershell-linux.tar.gz \\\n && ln -s ${PS_INSTALL_FOLDER}/pwsh /usr/bin/pwsh \\\n && chmod a+x,o-w ${PS_INSTALL_FOLDER}/pwsh \\\n && pwsh -NoLogo -NoProfile -Command \" $ErrorActionPreference = 'Stop' ; $ProgressPreference = 'SilentlyContinue' ; while(!(Test-Path -Path $env:PSModuleAnalysisCachePath)) { Write-Host \"'Waiting for $env:PSModuleAnalysisCachePath'\" ; Start-Sleep -Seconds 6 ; }\" \\\n && pacman -Syyu --noconfirm \\\n && mkdir /var/cache/pacman/pkg \\\n && yes | pacman -Scc\n#   Define args needed only for the labels\nARG IMAGE_NAME=pshorg/powershellcommunity:blackarch-2018.10.01\nARG VCS_REF=\"none\"\n#   Add label last as it's just metadata and uses a lot of parameters\nLABEL maintainer=\"PowerShell Team <powershellteam@hotmail.com>\" \\\n      readme.md=\"https://github.com/PowerShell/PowerShell/blob/master/docker/README.md\" \\\n      description=\"This Dockerfile will install the latest release of PowerShell.\" \\\n      org.label-schema.usage=\"https://github.com/PowerShell/PowerShell/tree/master/docker#run-the-docker-image-you-built\" \\\n      org.label-schema.url=\"https://github.com/PowerShell/PowerShell/blob/master/docker/README.md\" \\\n      org.label-schema.vcs-url=\"https://github.com/PowerShell/PowerShell-Docker\" \\\n      org.label-schema.name=\"powershell\" \\\n      org.label-schema.vendor=\"PowerShell\" \\\n      org.label-schema.vcs-ref=\"${VCS_REF}\" \\\n      org.label-schema.version=\"${PS_VERSION}\" \\\n      org.label-schema.schema-version=\"1.0\" \\\n      org.label-schema.docker.cmd=\"docker run ${IMAGE_NAME} pwsh -c '$psversiontable'\" \\\n      org.label-schema.docker.cmd.devel=\"docker run ${IMAGE_NAME}\" \\\n      org.label-schema.docker.cmd.test=\"docker run ${IMAGE_NAME} pwsh -c Invoke-Pester\" \\\n      org.label-schema.docker.cmd.help=\"docker run ${IMAGE_NAME} pwsh -c Get-Help\"\nCMD [\"pwsh\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Copyright (c) Microsoft Corporation. All rights reserved.\n#  Licensed under the MIT License.\n#\n#  Docker image file that describes an BlackArch Linux image (derived from Arch\n#  Linux base image) with PowerShell installed from full PowerShell linux tar.gz\n#  package\n#  Define arg(s) needed for the From statement\nARG fromTag=latest\nARG imageRepo=archlinux/base\nFROM ${imageRepo}:${fromTag} AS installer-env\n#  Define Args for the needed for BlackArch Linux\nARG BlackArch_Strap_URL=https://blackarch.org/strap.sh\n#  Download BlackArch Linux strap shell script\nADD ${BlackArch_Strap_URL} /tmp/strap.sh\n#  Define Args for the needed to add the package\nARG PS_VERSION=6.1.0\nARG PS_PACKAGE=powershell-${PS_VERSION}-linux-x64.tar.gz\nARG PS_PACKAGE_URL=https://github.com/PowerShell/PowerShell/releases/download/v${PS_VERSION}/${PS_PACKAGE}\nARG PS_INSTALL_VERSION=6\n#  Download the PowerShell Core Linux tar.gz and save it\nADD ${PS_PACKAGE_URL} /tmp/powershell-linux.tar.gz\n#  Define Args and Env needed to create links\nENV PS_INSTALL_FOLDER=\"/opt/microsoft/powershell/$PS_INSTALL_VERSION\" \\\n    DOTNET_SYSTEM_GLOBALIZATION_INVARIANT=\"false\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    LANG=\"en_US.UTF-8\" \\\n    PSModuleAnalysisCachePath=\"/var/cache/microsoft/powershell/PSModuleAnalysisCache/ModuleAnalysisCache\" \\\n    DOTNET_SYSTEM_NET_HTTP_USESOCKETSHTTPHANDLER=\"0\"\n#  Installation\nRUN echo \"en_US.UTF-8 UTF-8\" >> /etc/locale.gen \\\n && locale-gen \\\n && chmod +x /tmp/strap.sh \\\n && sed -i \"s|pgp.mit.edu|hkp://pool.sks-keyservers.net|g\" /tmp/strap.sh \\\n && /tmp/strap.sh \\\n && rm -f /tmp/strap.sh \\\n && pacman -Syy \\\n && pacman -S --noconfirm archlinux-keyring core/icu openssl-1.0 tar \\\n && mkdir -p ${PS_INSTALL_FOLDER} \\\n && tar zxf /tmp/powershell-linux.tar.gz -C ${PS_INSTALL_FOLDER} \\\n && rm -f /tmp/powershell-linux.tar.gz \\\n && ln -s ${PS_INSTALL_FOLDER}/pwsh /usr/bin/pwsh \\\n && chmod a+x,o-w ${PS_INSTALL_FOLDER}/pwsh \\\n && pwsh -NoLogo -NoProfile -Command \" $ErrorActionPreference = 'Stop' ; $ProgressPreference = 'SilentlyContinue' ; while(!(Test-Path -Path $env:PSModuleAnalysisCachePath)) { Write-Host \"'Waiting for $env:PSModuleAnalysisCachePath'\" ; Start-Sleep -Seconds 6 ; }\" \\\n && pacman -Syyu --noconfirm \\\n && mkdir /var/cache/pacman/pkg \\\n && yes | pacman -Scc\n#  Define args needed only for the labels\nARG IMAGE_NAME=pshorg/powershellcommunity:blackarch-2018.10.01\nARG VCS_REF=\"none\"\n#  Add label last as it's just metadata and uses a lot of parameters\nLABEL maintainer=\"PowerShell Team <powershellteam@hotmail.com>\" \\\n      readme.md=\"https://github.com/PowerShell/PowerShell/blob/master/docker/README.md\" \\\n      description=\"This Dockerfile will install the latest release of PowerShell.\" \\\n      org.label-schema.usage=\"https://github.com/PowerShell/PowerShell/tree/master/docker#run-the-docker-image-you-built\" \\\n      org.label-schema.url=\"https://github.com/PowerShell/PowerShell/blob/master/docker/README.md\" \\\n      org.label-schema.vcs-url=\"https://github.com/PowerShell/PowerShell-Docker\" \\\n      org.label-schema.name=\"powershell\" \\\n      org.label-schema.vendor=\"PowerShell\" \\\n      org.label-schema.vcs-ref=\"${VCS_REF}\" \\\n      org.label-schema.version=\"${PS_VERSION}\" \\\n      org.label-schema.schema-version=\"1.0\" \\\n      org.label-schema.docker.cmd=\"docker run ${IMAGE_NAME} pwsh -c '$psversiontable'\" \\\n      org.label-schema.docker.cmd.devel=\"docker run ${IMAGE_NAME}\" \\\n      org.label-schema.docker.cmd.test=\"docker run ${IMAGE_NAME} pwsh -c Invoke-Pester\" \\\n      org.label-schema.docker.cmd.help=\"docker run ${IMAGE_NAME} pwsh -c Get-Help\"\nCMD [\"pwsh\"]\n","injectedSmells":[],"originalDockerfileHash":"0814db28492851932361a085bcdfad61","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Copyright (c) Microsoft Corporation. All rights reserved.\n#   Licensed under the MIT License.\n#\n#   Docker image file that describes an BlackArch Linux image (derived from Arch\n#   Linux base image) with PowerShell installed from full PowerShell linux tar.gz\n#   package\n#   Define arg(s) needed for the From statement\nARG fromTag=latest\nARG imageRepo=archlinux/base\nFROM ${imageRepo}:${fromTag} AS installer-env\n#   Define Args for the needed for BlackArch Linux\nARG BlackArch_Strap_URL=https://blackarch.org/strap.sh\n#   Download BlackArch Linux strap shell script\nADD ${BlackArch_Strap_URL} /tmp/strap.sh\n#   Define Args for the needed to add the package\nARG PS_VERSION=6.1.0\nARG PS_PACKAGE=powershell-${PS_VERSION}-linux-x64.tar.gz\nARG PS_PACKAGE_URL=https://github.com/PowerShell/PowerShell/releases/download/v${PS_VERSION}/${PS_PACKAGE}\nARG PS_INSTALL_VERSION=6\n#   Download the PowerShell Core Linux tar.gz and save it\nADD ${PS_PACKAGE_URL} /tmp/powershell-linux.tar.gz\n#   Define Args and Env needed to create links\nENV PS_INSTALL_FOLDER=\"/opt/microsoft/powershell/$PS_INSTALL_VERSION\" \\\n    DOTNET_SYSTEM_GLOBALIZATION_INVARIANT=\"false\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    LANG=\"en_US.UTF-8\" \\\n    PSModuleAnalysisCachePath=\"/var/cache/microsoft/powershell/PSModuleAnalysisCache/ModuleAnalysisCache\" \\\n    DOTNET_SYSTEM_NET_HTTP_USESOCKETSHTTPHANDLER=\"0\"\n#   Installation\nRUN echo \"en_US.UTF-8 UTF-8\" >> /etc/locale.gen \\\n && locale-gen \\\n && chmod +x /tmp/strap.sh \\\n && sed -i \"s|pgp.mit.edu|hkp://pool.sks-keyservers.net|g\" /tmp/strap.sh \\\n && /tmp/strap.sh \\\n && rm -f /tmp/strap.sh \\\n && pacman -Syy \\\n && pacman -S --noconfirm archlinux-keyring core/icu openssl-1.0 tar \\\n && mkdir -p ${PS_INSTALL_FOLDER} \\\n && tar zxf /tmp/powershell-linux.tar.gz -C ${PS_INSTALL_FOLDER} \\\n && rm -f /tmp/powershell-linux.tar.gz \\\n && ln -s ${PS_INSTALL_FOLDER}/pwsh /usr/bin/pwsh \\\n && chmod a+x,o-w ${PS_INSTALL_FOLDER}/pwsh \\\n && pwsh -NoLogo -NoProfile -Command \" $ErrorActionPreference = 'Stop' ; $ProgressPreference = 'SilentlyContinue' ; while(!(Test-Path -Path $env:PSModuleAnalysisCachePath)) { Write-Host \"'Waiting for $env:PSModuleAnalysisCachePath'\" ; Start-Sleep -Seconds 6 ; }\" \\\n && pacman -Syyu --noconfirm \\\n && mkdir /var/cache/pacman/pkg \\\n && yes | pacman -Scc\n#   Define args needed only for the labels\nARG IMAGE_NAME=pshorg/powershellcommunity:blackarch-2018.10.01\nARG VCS_REF=\"none\"\n#   Add label last as it's just metadata and uses a lot of parameters\nLABEL maintainer=\"PowerShell Team <powershellteam@hotmail.com>\" \\\n      readme.md=\"https://github.com/PowerShell/PowerShell/blob/master/docker/README.md\" \\\n      description=\"This Dockerfile will install the latest release of PowerShell.\" \\\n      org.label-schema.usage=\"https://github.com/PowerShell/PowerShell/tree/master/docker#run-the-docker-image-you-built\" \\\n      org.label-schema.url=\"https://github.com/PowerShell/PowerShell/blob/master/docker/README.md\" \\\n      org.label-schema.vcs-url=\"https://github.com/PowerShell/PowerShell-Docker\" \\\n      org.label-schema.name=\"powershell\" \\\n      org.label-schema.vendor=\"PowerShell\" \\\n      org.label-schema.vcs-ref=\"${VCS_REF}\" \\\n      org.label-schema.version=\"${PS_VERSION}\" \\\n      org.label-schema.schema-version=\"1.0\" \\\n      org.label-schema.docker.cmd=\"docker run ${IMAGE_NAME} pwsh -c '$psversiontable'\" \\\n      org.label-schema.docker.cmd.devel=\"docker run ${IMAGE_NAME}\" \\\n      org.label-schema.docker.cmd.test=\"docker run ${IMAGE_NAME} pwsh -c Invoke-Pester\" \\\n      org.label-schema.docker.cmd.help=\"docker run ${IMAGE_NAME} pwsh -c Get-Help\"\nCMD [\"pwsh\"]\n","originalDockerfileUglifiedHash":"aa99fb1da4539d4bbb0f7632a6329cab","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/0f8d5dbd03c381137b6d15768a47db9e6d4f30d8.dockerfile"}