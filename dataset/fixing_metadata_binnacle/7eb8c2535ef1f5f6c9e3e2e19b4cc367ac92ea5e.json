{"seed":2537584818,"processedDockerfileHash":"887b1c211c8e9c75737b36ea204bb479","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["have-a-healthcheck","have-a-user"],"processedDockerfile":"#\n#   NOTE: THIS DOCKERFILE IS GENERATED VIA \"haxe update.hxml\"\n#\n#   PLEASE DO NOT EDIT IT DIRECTLY.\n#\nFROM buildpack-deps:stretch-scm\n#   ensure local haxe is preferred over distribution haxe\nENV PATH=\"/usr/local/bin:$PATH\"\n#   runtime dependencies\nRUN apt-get update \\\n && apt-get install --no-install-recommends libgc1c2 zlib1g libpcre3 libmariadb2 libsqlite3-0 libmbedcrypto0 libmbedtls10 libmbedx509-0 -y \\\n && rm -rf /var/lib/apt/lists/*\n#   install neko, which is a dependency of haxelib\nENV NEKO_VERSION=\"2.2.0\"\nRUN set -ex \\\n && buildDeps=' gcc make cmake libgc-dev libssl-dev libpcre3-dev zlib1g-dev apache2-dev libmariadb-client-lgpl-dev-compat libsqlite3-dev libmbedtls-dev libgtk2.0-dev ' \\\n && apt-get update \\\n && apt-get install --no-install-recommends $buildDeps -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && wget -O neko.tar.gz \"https://github.com/HaxeFoundation/neko/archive/v2-2-0/neko-2.2.0.tar.gz\" \\\n && echo \"cf101ca05db6cb673504efe217d8ed7ab5638f30e12c5e3095f06fa0d43f64e3 *neko.tar.gz\" | sha256sum -c - \\\n && mkdir -p /usr/src/neko \\\n && tar -xC /usr/src/neko --strip-components=1 -f neko.tar.gz \\\n && rm neko.tar.gz \\\n && cd /usr/src/neko \\\n && cmake -DRELOCATABLE=OFF . \\\n && make \\\n && make install \\\n && apt-get purge -y --auto-remove $buildDeps \\\n && rm -rf /usr/src/neko ~/.cache\n#   install haxe\nENV HAXE_VERSION=\"4.0.0-rc.3\"\nENV HAXE_STD_PATH=\"/usr/local/share/haxe/std\"\nRUN set -ex \\\n && buildDeps=' make ocaml-nox ocaml-native-compilers camlp4 ocaml-findlib zlib1g-dev libpcre3-dev libxml-light-ocaml-dev opam aspcud m4 unzip ' \\\n && git clone --recursive --depth 1 --branch 4.0.0-rc.3 \"https://github.com/HaxeFoundation/haxe.git\" /usr/src/haxe \\\n && cd /usr/src/haxe \\\n && apt-get update \\\n && apt-get install --no-install-recommends $buildDeps -y \\\n && opam init --comp system \\\n && eval `opam config env ` \\\n && make opam_install \\\n && make all tools \\\n && mkdir -p /usr/local/bin \\\n && cp haxe haxelib /usr/local/bin \\\n && mkdir -p $HAXE_STD_PATH \\\n && cp -r std/* $HAXE_STD_PATH \\\n && mkdir -p /haxelib \\\n && cd / \\\n && haxelib setup /haxelib \\\n && rm -rf ~/.opam \\\n && rm -rf /var/lib/apt/lists/* \\\n && apt-get purge -y --auto-remove $buildDeps \\\n && rm -rf /usr/src/haxe ~/.cache\nCMD [\"haxe\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#\n#  NOTE: THIS DOCKERFILE IS GENERATED VIA \"haxe update.hxml\"\n#\n#  PLEASE DO NOT EDIT IT DIRECTLY.\n#\nFROM buildpack-deps:stretch-scm\n#  ensure local haxe is preferred over distribution haxe\nENV PATH=\"/usr/local/bin:$PATH\"\n#  runtime dependencies\nRUN apt-get update \\\n && apt-get install --no-install-recommends libgc1c2 zlib1g libpcre3 libmariadb2 libsqlite3-0 libmbedcrypto0 libmbedtls10 libmbedx509-0 -y \\\n && rm -rf /var/lib/apt/lists/*\n#  install neko, which is a dependency of haxelib\nENV NEKO_VERSION=\"2.2.0\"\nRUN set -ex \\\n && buildDeps=' gcc make cmake libgc-dev libssl-dev libpcre3-dev zlib1g-dev apache2-dev libmariadb-client-lgpl-dev-compat libsqlite3-dev libmbedtls-dev libgtk2.0-dev ' \\\n && apt-get update \\\n && apt-get install --no-install-recommends $buildDeps -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && wget -O neko.tar.gz \"https://github.com/HaxeFoundation/neko/archive/v2-2-0/neko-2.2.0.tar.gz\" \\\n && echo \"cf101ca05db6cb673504efe217d8ed7ab5638f30e12c5e3095f06fa0d43f64e3 *neko.tar.gz\" | sha256sum -c - \\\n && mkdir -p /usr/src/neko \\\n && tar -xC /usr/src/neko --strip-components=1 -f neko.tar.gz \\\n && rm neko.tar.gz \\\n && cd /usr/src/neko \\\n && cmake -DRELOCATABLE=OFF . \\\n && make \\\n && make install \\\n && apt-get purge -y --auto-remove $buildDeps \\\n && rm -rf /usr/src/neko ~/.cache\n#  install haxe\nENV HAXE_VERSION=\"4.0.0-rc.3\"\nENV HAXE_STD_PATH=\"/usr/local/share/haxe/std\"\nRUN set -ex \\\n && buildDeps=' make ocaml-nox ocaml-native-compilers camlp4 ocaml-findlib zlib1g-dev libpcre3-dev libxml-light-ocaml-dev opam aspcud m4 unzip ' \\\n && git clone --recursive --depth 1 --branch 4.0.0-rc.3 \"https://github.com/HaxeFoundation/haxe.git\" /usr/src/haxe \\\n && cd /usr/src/haxe \\\n && apt-get update \\\n && apt-get install --no-install-recommends $buildDeps -y \\\n && opam init --comp system \\\n && eval `opam config env ` \\\n && make opam_install \\\n && make all tools \\\n && mkdir -p /usr/local/bin \\\n && cp haxe haxelib /usr/local/bin \\\n && mkdir -p $HAXE_STD_PATH \\\n && cp -r std/* $HAXE_STD_PATH \\\n && mkdir -p /haxelib \\\n && cd / \\\n && haxelib setup /haxelib \\\n && rm -rf ~/.opam \\\n && rm -rf /var/lib/apt/lists/* \\\n && apt-get purge -y --auto-remove $buildDeps \\\n && rm -rf /usr/src/haxe ~/.cache\nCMD [\"haxe\"]\n","injectedSmells":[],"originalDockerfileHash":"3dc19b0dfdb6f2a364e6b828974078b2","successfullyInjectedSmells":[],"originalDockerfileUglified":"#\n#   NOTE: THIS DOCKERFILE IS GENERATED VIA \"haxe update.hxml\"\n#\n#   PLEASE DO NOT EDIT IT DIRECTLY.\n#\nFROM buildpack-deps:stretch-scm\n#   ensure local haxe is preferred over distribution haxe\nENV PATH=\"/usr/local/bin:$PATH\"\n#   runtime dependencies\nRUN apt-get update \\\n && apt-get install --no-install-recommends libgc1c2 zlib1g libpcre3 libmariadb2 libsqlite3-0 libmbedcrypto0 libmbedtls10 libmbedx509-0 -y \\\n && rm -rf /var/lib/apt/lists/*\n#   install neko, which is a dependency of haxelib\nENV NEKO_VERSION=\"2.2.0\"\nRUN set -ex \\\n && buildDeps=' gcc make cmake libgc-dev libssl-dev libpcre3-dev zlib1g-dev apache2-dev libmariadb-client-lgpl-dev-compat libsqlite3-dev libmbedtls-dev libgtk2.0-dev ' \\\n && apt-get update \\\n && apt-get install --no-install-recommends $buildDeps -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && wget -O neko.tar.gz \"https://github.com/HaxeFoundation/neko/archive/v2-2-0/neko-2.2.0.tar.gz\" \\\n && echo \"cf101ca05db6cb673504efe217d8ed7ab5638f30e12c5e3095f06fa0d43f64e3 *neko.tar.gz\" | sha256sum -c - \\\n && mkdir -p /usr/src/neko \\\n && tar -xC /usr/src/neko --strip-components=1 -f neko.tar.gz \\\n && rm neko.tar.gz \\\n && cd /usr/src/neko \\\n && cmake -DRELOCATABLE=OFF . \\\n && make \\\n && make install \\\n && apt-get purge -y --auto-remove $buildDeps \\\n && rm -rf /usr/src/neko ~/.cache\n#   install haxe\nENV HAXE_VERSION=\"4.0.0-rc.3\"\nENV HAXE_STD_PATH=\"/usr/local/share/haxe/std\"\nRUN set -ex \\\n && buildDeps=' make ocaml-nox ocaml-native-compilers camlp4 ocaml-findlib zlib1g-dev libpcre3-dev libxml-light-ocaml-dev opam aspcud m4 unzip ' \\\n && git clone --recursive --depth 1 --branch 4.0.0-rc.3 \"https://github.com/HaxeFoundation/haxe.git\" /usr/src/haxe \\\n && cd /usr/src/haxe \\\n && apt-get update \\\n && apt-get install --no-install-recommends $buildDeps -y \\\n && opam init --comp system \\\n && eval `opam config env ` \\\n && make opam_install \\\n && make all tools \\\n && mkdir -p /usr/local/bin \\\n && cp haxe haxelib /usr/local/bin \\\n && mkdir -p $HAXE_STD_PATH \\\n && cp -r std/* $HAXE_STD_PATH \\\n && mkdir -p /haxelib \\\n && cd / \\\n && haxelib setup /haxelib \\\n && rm -rf ~/.opam \\\n && rm -rf /var/lib/apt/lists/* \\\n && apt-get purge -y --auto-remove $buildDeps \\\n && rm -rf /usr/src/haxe ~/.cache\nCMD [\"haxe\"]\n","originalDockerfileUglifiedHash":"d6925371a6498c306d1d38cf0d6419d7","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/7eb8c2535ef1f5f6c9e3e2e19b4cc367ac92ea5e.dockerfile"}