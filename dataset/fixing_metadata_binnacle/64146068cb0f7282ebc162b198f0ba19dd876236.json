{"seed":1662795698,"processedDockerfileHash":"63dacada5a8b5a229248925348d8591b","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-pip","pin-package-manager-versions-apk","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM python:2-alpine AS latest\nARG DUPLICITY_VERSION=0.7.19\nENV CRONTAB_15MIN=\"*/15 * * * *\" \\\n    CRONTAB_HOURLY=\"0 * * * *\" \\\n    CRONTAB_DAILY=\"0 2 * * MON-SAT\" \\\n    CRONTAB_WEEKLY=\"0 1 * * SUN\" \\\n    CRONTAB_MONTHLY=\"0 5 1 * *\" \\\n    DST=\"\" \\\n    EMAIL_FROM=\"\" \\\n    EMAIL_SUBJECT=\"Backup report: {hostname} - {periodicity} - {result}\" \\\n    EMAIL_TO=\"\" \\\n    JOB_300_WHAT=\"backup\" \\\n    JOB_300_WHEN=\"daily\" \\\n    OPTIONS=\"\" \\\n    OPTIONS_EXTRA=\"--metadata-sync-mode partial\" \\\n    SMTP_HOST=\"smtp\" \\\n    SMTP_PASS=\"\" \\\n    SMTP_PORT=\"25\" \\\n    SMTP_TLS=\"\" \\\n    SMTP_USER=\"\" \\\n    SRC=\"/mnt/backup/src\"\nENTRYPOINT [\"/usr/local/bin/entrypoint\"]\nCMD [\"/usr/sbin/crond\", \"-fd8\"]\n#   Link the job runner in all periodicities available\nRUN ln -s /usr/local/bin/jobrunner /etc/periodic/15min/jobrunner\nRUN ln -s /usr/local/bin/jobrunner /etc/periodic/hourly/jobrunner\nRUN ln -s /usr/local/bin/jobrunner /etc/periodic/daily/jobrunner\nRUN ln -s /usr/local/bin/jobrunner /etc/periodic/weekly/jobrunner\nRUN ln -s /usr/local/bin/jobrunner /etc/periodic/monthly/jobrunner\n#   Runtime dependencies and database clients\nRUN apk add ca-certificates=20191127-r2 dbus=1.12.16-r3 gnupg=2.2.19-r1 krb5-libs=1.17.2-r0 lftp=4.8.4-r2 libffi=3.2.1-r6 librsync=2.2.1-r0 ncftp=3.2.6-r1 openssh=8.1_p1-r1 openssl=1.1.1l-r0 py2-gobject3 tzdata=2021e-r0 --no-cache \\\n && sync\n#   Default backup source directory\nRUN mkdir -p \"$SRC\"\n#   Preserve cache among containers\nVOLUME [ \"/root\" ]\n#   Build dependencies\nRUN apk add build-base=0.5-r1 krb5-dev=1.17.2-r0 libffi-dev=3.2.1-r6 librsync-dev=2.2.1-r0 linux-headers=4.19.36-r0 openssl-dev=1.1.1l-r0 python-dev --no-cache --virtual .build \\\n && pip install azure-storage==0.37.0 b2==3.8.0 boto==2.49.0 dropbox==11.36.0 gdata==2.0.18 lockfile==0.12.2 mediafire==0.6.1 mega.py==1.0.8 paramiko==3.1.0 pexpect==4.8.0 pycryptopp==0.7.1.869544967005693312591928092448767568728501330214 PyDrive==1.3.1 pykerberos==1.2.4 pyrax==1.10.0 python-keystoneclient==5.1.0 python-swiftclient==4.3.0 PyNaCl==1.2.1 requests==2.28.2 requests-oauthlib==1.3.1 urllib3==1.26.15 https://code.launchpad.net/duplicity/$( echo $DUPLICITY_VERSION | sed -r 's/^([0-9]+\\.[0-9]+)([0-9\\.]*)$/\\1/' ;)-series/$DUPLICITY_VERSION/+download/duplicity-$DUPLICITY_VERSION.tar.gz --no-cache-dir --no-use-pep517 \\\n && apk del .build\nCOPY bin/* /usr/local/bin/\nRUN chmod a+rx /usr/local/bin/* \\\n && sync\n#   Metadata\nARG VCS_REF\nARG BUILD_DATE\nLABEL org.label-schema.schema-version=\"1.0\" \\\n      org.label-schema.vendor=\"Tecnativa\" \\\n      org.label-schema.license=\"Apache-2.0\" \\\n      org.label-schema.build-date=\"$BUILD_DATE\" \\\n      org.label-schema.vcs-ref=\"$VCS_REF\" \\\n      org.label-schema.vcs-url=\"https://github.com/Tecnativa/docker-duplicity\"\nFROM latest AS latest-s3\nENV JOB_500_WHAT=\"dup full $SRC $DST\" \\\n    JOB_500_WHEN=\"weekly\" \\\n    OPTIONS_EXTRA=\"--metadata-sync-mode partial --full-if-older-than 1W --file-prefix-archive archive-$(hostname)- --file-prefix-manifest manifest-$(hostname)- --file-prefix-signature signature-$(hostname)- --s3-european-buckets --s3-multipart-chunk-size 10 --s3-use-new-style\"\nFROM latest AS docker\nRUN apk add docker=19.03.5-r1 --no-cache\nFROM docker AS docker-s3\nENV JOB_500_WHAT=\"dup full $SRC $DST\" \\\n    JOB_500_WHEN=\"weekly\" \\\n    OPTIONS_EXTRA=\"--metadata-sync-mode partial --full-if-older-than 1W --file-prefix-archive archive-$(hostname)- --file-prefix-manifest manifest-$(hostname)- --file-prefix-signature signature-$(hostname)- --s3-european-buckets --s3-multipart-chunk-size 10 --s3-use-new-style\"\nFROM latest AS postgres\nRUN apk add postgresql=12.9-r0 --no-cache --repository http://dl-cdn.alpinelinux.org/alpine/v3.9/main\nENV JOB_200_WHAT=\"pg_dump --no-owner --no-privileges --file \\\"$SRC/$PGDATABASE.sql\\\"\" \\\n    JOB_200_WHEN=\"daily weekly\" \\\n    PGHOST=\"db\"\nFROM postgres AS postgres-s3\nENV JOB_500_WHAT=\"dup full $SRC $DST\" \\\n    JOB_500_WHEN=\"weekly\" \\\n    OPTIONS_EXTRA=\"--metadata-sync-mode partial --full-if-older-than 1W --file-prefix-archive archive-$(hostname)- --file-prefix-manifest manifest-$(hostname)- --file-prefix-signature signature-$(hostname)- --s3-european-buckets --s3-multipart-chunk-size 10 --s3-use-new-style\"\nRUN addgroup -S docker-user ; adduser -S -G docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM python:2-alpine AS latest\nARG DUPLICITY_VERSION=0.7.19\nENV CRONTAB_15MIN=\"*/15 * * * *\" \\\n    CRONTAB_HOURLY=\"0 * * * *\" \\\n    CRONTAB_DAILY=\"0 2 * * MON-SAT\" \\\n    CRONTAB_WEEKLY=\"0 1 * * SUN\" \\\n    CRONTAB_MONTHLY=\"0 5 1 * *\" \\\n    DST=\"\" \\\n    EMAIL_FROM=\"\" \\\n    EMAIL_SUBJECT=\"Backup report: {hostname} - {periodicity} - {result}\" \\\n    EMAIL_TO=\"\" \\\n    JOB_300_WHAT=\"backup\" \\\n    JOB_300_WHEN=\"daily\" \\\n    OPTIONS=\"\" \\\n    OPTIONS_EXTRA=\"--metadata-sync-mode partial\" \\\n    SMTP_HOST=\"smtp\" \\\n    SMTP_PASS=\"\" \\\n    SMTP_PORT=\"25\" \\\n    SMTP_TLS=\"\" \\\n    SMTP_USER=\"\" \\\n    SRC=\"/mnt/backup/src\"\nENTRYPOINT [\"/usr/local/bin/entrypoint\"]\nCMD [\"/usr/sbin/crond\", \"-fd8\"]\n#  Link the job runner in all periodicities available\nRUN ln -s /usr/local/bin/jobrunner /etc/periodic/15min/jobrunner\nRUN ln -s /usr/local/bin/jobrunner /etc/periodic/hourly/jobrunner\nRUN ln -s /usr/local/bin/jobrunner /etc/periodic/daily/jobrunner\nRUN ln -s /usr/local/bin/jobrunner /etc/periodic/weekly/jobrunner\nRUN ln -s /usr/local/bin/jobrunner /etc/periodic/monthly/jobrunner\n#  Runtime dependencies and database clients\nRUN apk add --no-cache ca-certificates dbus gnupg krb5-libs lftp libffi librsync ncftp openssh openssl py2-gobject3 tzdata \\\n && sync\n#  Default backup source directory\nRUN mkdir -p \"$SRC\"\n#  Preserve cache among containers\nVOLUME [ \"/root\" ]\n#  Build dependencies\nRUN apk add --no-cache --virtual .build build-base krb5-dev libffi-dev librsync-dev linux-headers openssl-dev python-dev \\\n && pip install azure-storage b2 boto dropbox gdata lockfile mediafire mega.py paramiko pexpect pycryptopp PyDrive pykerberos pyrax python-keystoneclient python-swiftclient PyNaCl==1.2.1 requests requests-oauthlib urllib3 https://code.launchpad.net/duplicity/$( echo $DUPLICITY_VERSION | sed -r 's/^([0-9]+\\.[0-9]+)([0-9\\.]*)$/\\1/' ;)-series/$DUPLICITY_VERSION/+download/duplicity-$DUPLICITY_VERSION.tar.gz --no-cache-dir --no-use-pep517 \\\n && apk del .build\nCOPY bin/* /usr/local/bin/\nRUN chmod a+rx /usr/local/bin/* \\\n && sync\n#  Metadata\nARG VCS_REF\nARG BUILD_DATE\nLABEL org.label-schema.schema-version=\"1.0\" \\\n      org.label-schema.vendor=\"Tecnativa\" \\\n      org.label-schema.license=\"Apache-2.0\" \\\n      org.label-schema.build-date=\"$BUILD_DATE\" \\\n      org.label-schema.vcs-ref=\"$VCS_REF\" \\\n      org.label-schema.vcs-url=\"https://github.com/Tecnativa/docker-duplicity\"\nFROM latest AS latest-s3\nENV JOB_500_WHAT=\"dup full $SRC $DST\" \\\n    JOB_500_WHEN=\"weekly\" \\\n    OPTIONS_EXTRA=\"--metadata-sync-mode partial --full-if-older-than 1W --file-prefix-archive archive-$(hostname)- --file-prefix-manifest manifest-$(hostname)- --file-prefix-signature signature-$(hostname)- --s3-european-buckets --s3-multipart-chunk-size 10 --s3-use-new-style\"\nFROM latest AS docker\nRUN apk add --no-cache docker\nFROM docker AS docker-s3\nENV JOB_500_WHAT=\"dup full $SRC $DST\" \\\n    JOB_500_WHEN=\"weekly\" \\\n    OPTIONS_EXTRA=\"--metadata-sync-mode partial --full-if-older-than 1W --file-prefix-archive archive-$(hostname)- --file-prefix-manifest manifest-$(hostname)- --file-prefix-signature signature-$(hostname)- --s3-european-buckets --s3-multipart-chunk-size 10 --s3-use-new-style\"\nFROM latest AS postgres\nRUN apk add --no-cache postgresql --repository http://dl-cdn.alpinelinux.org/alpine/v3.9/main\nENV JOB_200_WHAT=\"pg_dump --no-owner --no-privileges --file \\\"$SRC/$PGDATABASE.sql\\\"\" \\\n    JOB_200_WHEN=\"daily weekly\" \\\n    PGHOST=\"db\"\nFROM postgres AS postgres-s3\nENV JOB_500_WHAT=\"dup full $SRC $DST\" \\\n    JOB_500_WHEN=\"weekly\" \\\n    OPTIONS_EXTRA=\"--metadata-sync-mode partial --full-if-older-than 1W --file-prefix-archive archive-$(hostname)- --file-prefix-manifest manifest-$(hostname)- --file-prefix-signature signature-$(hostname)- --s3-european-buckets --s3-multipart-chunk-size 10 --s3-use-new-style\"\n","injectedSmells":[],"originalDockerfileHash":"9455d77bfcea79125eed602b631c3fb2","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM python:2-alpine AS latest\nARG DUPLICITY_VERSION=0.7.19\nENV CRONTAB_15MIN=\"*/15 * * * *\" \\\n    CRONTAB_HOURLY=\"0 * * * *\" \\\n    CRONTAB_DAILY=\"0 2 * * MON-SAT\" \\\n    CRONTAB_WEEKLY=\"0 1 * * SUN\" \\\n    CRONTAB_MONTHLY=\"0 5 1 * *\" \\\n    DST=\"\" \\\n    EMAIL_FROM=\"\" \\\n    EMAIL_SUBJECT=\"Backup report: {hostname} - {periodicity} - {result}\" \\\n    EMAIL_TO=\"\" \\\n    JOB_300_WHAT=\"backup\" \\\n    JOB_300_WHEN=\"daily\" \\\n    OPTIONS=\"\" \\\n    OPTIONS_EXTRA=\"--metadata-sync-mode partial\" \\\n    SMTP_HOST=\"smtp\" \\\n    SMTP_PASS=\"\" \\\n    SMTP_PORT=\"25\" \\\n    SMTP_TLS=\"\" \\\n    SMTP_USER=\"\" \\\n    SRC=\"/mnt/backup/src\"\nENTRYPOINT [\"/usr/local/bin/entrypoint\"]\nCMD [\"/usr/sbin/crond\", \"-fd8\"]\n#   Link the job runner in all periodicities available\nRUN ln -s /usr/local/bin/jobrunner /etc/periodic/15min/jobrunner\nRUN ln -s /usr/local/bin/jobrunner /etc/periodic/hourly/jobrunner\nRUN ln -s /usr/local/bin/jobrunner /etc/periodic/daily/jobrunner\nRUN ln -s /usr/local/bin/jobrunner /etc/periodic/weekly/jobrunner\nRUN ln -s /usr/local/bin/jobrunner /etc/periodic/monthly/jobrunner\n#   Runtime dependencies and database clients\nRUN apk add --no-cache ca-certificates dbus gnupg krb5-libs lftp libffi librsync ncftp openssh openssl py2-gobject3 tzdata \\\n && sync\n#   Default backup source directory\nRUN mkdir -p \"$SRC\"\n#   Preserve cache among containers\nVOLUME [ \"/root\" ]\n#   Build dependencies\nRUN apk add --no-cache --virtual .build build-base krb5-dev libffi-dev librsync-dev linux-headers openssl-dev python-dev \\\n && pip install azure-storage b2 boto dropbox gdata lockfile mediafire mega.py paramiko pexpect pycryptopp PyDrive pykerberos pyrax python-keystoneclient python-swiftclient PyNaCl==1.2.1 requests requests-oauthlib urllib3 https://code.launchpad.net/duplicity/$( echo $DUPLICITY_VERSION | sed -r 's/^([0-9]+\\.[0-9]+)([0-9\\.]*)$/\\1/' ;)-series/$DUPLICITY_VERSION/+download/duplicity-$DUPLICITY_VERSION.tar.gz --no-cache-dir --no-use-pep517 \\\n && apk del .build\nCOPY bin/* /usr/local/bin/\nRUN chmod a+rx /usr/local/bin/* \\\n && sync\n#   Metadata\nARG VCS_REF\nARG BUILD_DATE\nLABEL org.label-schema.schema-version=\"1.0\" \\\n      org.label-schema.vendor=\"Tecnativa\" \\\n      org.label-schema.license=\"Apache-2.0\" \\\n      org.label-schema.build-date=\"$BUILD_DATE\" \\\n      org.label-schema.vcs-ref=\"$VCS_REF\" \\\n      org.label-schema.vcs-url=\"https://github.com/Tecnativa/docker-duplicity\"\nFROM latest AS latest-s3\nENV JOB_500_WHAT=\"dup full $SRC $DST\" \\\n    JOB_500_WHEN=\"weekly\" \\\n    OPTIONS_EXTRA=\"--metadata-sync-mode partial --full-if-older-than 1W --file-prefix-archive archive-$(hostname)- --file-prefix-manifest manifest-$(hostname)- --file-prefix-signature signature-$(hostname)- --s3-european-buckets --s3-multipart-chunk-size 10 --s3-use-new-style\"\nFROM latest AS docker\nRUN apk add --no-cache docker\nFROM docker AS docker-s3\nENV JOB_500_WHAT=\"dup full $SRC $DST\" \\\n    JOB_500_WHEN=\"weekly\" \\\n    OPTIONS_EXTRA=\"--metadata-sync-mode partial --full-if-older-than 1W --file-prefix-archive archive-$(hostname)- --file-prefix-manifest manifest-$(hostname)- --file-prefix-signature signature-$(hostname)- --s3-european-buckets --s3-multipart-chunk-size 10 --s3-use-new-style\"\nFROM latest AS postgres\nRUN apk add --no-cache postgresql --repository http://dl-cdn.alpinelinux.org/alpine/v3.9/main\nENV JOB_200_WHAT=\"pg_dump --no-owner --no-privileges --file \\\"$SRC/$PGDATABASE.sql\\\"\" \\\n    JOB_200_WHEN=\"daily weekly\" \\\n    PGHOST=\"db\"\nFROM postgres AS postgres-s3\nENV JOB_500_WHAT=\"dup full $SRC $DST\" \\\n    JOB_500_WHEN=\"weekly\" \\\n    OPTIONS_EXTRA=\"--metadata-sync-mode partial --full-if-older-than 1W --file-prefix-archive archive-$(hostname)- --file-prefix-manifest manifest-$(hostname)- --file-prefix-signature signature-$(hostname)- --s3-european-buckets --s3-multipart-chunk-size 10 --s3-use-new-style\"\n","originalDockerfileUglifiedHash":"5da2a9f68bd55516a0401b7fc7e3f45e","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/64146068cb0f7282ebc162b198f0ba19dd876236.dockerfile"}