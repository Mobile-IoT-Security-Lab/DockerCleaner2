{"seed":2512946506,"processedDockerfileHash":"021a0265a4e42d71f00529d8872695b9","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["do-not-use-apt-get-update-alone","have-a-healthcheck","have-a-user"],"processedDockerfile":"#\n#   baseimage-gui Dockerfile\n#\n#   https://github.com/jlesage/docker-baseimage-gui\n#\nARG BASEIMAGE=unknown\n#   Pull base image.\nFROM ${BASEIMAGE}\n#   Define software versions.\nARG LIBVNCSERVER_VERSION=9029b86\nARG X11VNC_VERSION=29597a9\nARG NOVNC_VERSION=fa559b3\nARG BOOTSTRAP_VERSION=3.3.7\nARG FONTAWESOME_VERSION=4.7.0\nARG JQUERY_VERSION=3.2.1\nARG JQUERY_UI_TOUCH_PUNCH_VERSION=4bc0091\n#   Define software download URLs.\nARG LIBVNCSERVER_URL=https://github.com/jlesage/libvncserver/archive/${LIBVNCSERVER_VERSION}.tar.gz\nARG X11VNC_URL=https://github.com/jlesage/x11vnc/archive/${X11VNC_VERSION}.tar.gz\nARG NOVNC_URL=https://github.com/jlesage/novnc/archive/${NOVNC_VERSION}.tar.gz\nARG BOOTSTRAP_URL=https://github.com/twbs/bootstrap/releases/download/v${BOOTSTRAP_VERSION}/bootstrap-${BOOTSTRAP_VERSION}-dist.zip\nARG FONTAWESOME_URL=https://fontawesome.com/v${FONTAWESOME_VERSION}/assets/font-awesome-${FONTAWESOME_VERSION}.zip\nARG JQUERY_URL=https://code.jquery.com/jquery-${JQUERY_VERSION}.min.js\nARG JQUERY_UI_TOUCH_PUNCH_URL=https://raw.github.com/furf/jquery-ui-touch-punch/${JQUERY_UI_TOUCH_PUNCH_VERSION}/jquery.ui.touch-punch.min.js\n#   Define working directory.\nWORKDIR /tmp\n#   Install the nodejs PPA.\nRUN add-pkg --virtual build-dependencies curl ca-certificates gnupg \\\n && . /etc/os-release \\\n && curl -s https://deb.nodesource.com/gpgkey/nodesource.gpg.key | apt-key --keyring /etc/apt/trusted.gpg.d/nodesource.gpg add - \\\n && echo \"deb http://deb.nodesource.com/node_8.x $VERSION_CODENAME main\" > /etc/apt/sources.list.d/nodesource.list \\\n && echo \"deb-src http://deb.nodesource.com/node_8.x $VERSION_CODENAME main\" >> /etc/apt/sources.list.d/nodesource.list \\\n && del-pkg build-dependencies \\\n && rm -rf /tmp/* /tmp/.[!.]*\n#   Compile x11vnc.\nRUN add-pkg --virtual build-dependencies curl ca-certificates build-essential autoconf automake libtool pkg-config zlib1g-dev libx11-dev libxtst-dev libxext-dev libjpeg-dev libpng-dev libxinerama-dev libxdamage-dev libxcomposite-dev libxcursor-dev libxrandr-dev libxfixes-dev libice-dev \\\n && mkdir libvncserver x11vnc \\\n && curl -sS -L ${LIBVNCSERVER_URL} | tar -xz --strip 1 -C libvncserver \\\n && curl -sS -L ${X11VNC_URL} | tar -xz --strip 1 -C x11vnc \\\n && cd libvncserver \\\n && ./autogen.sh --prefix=/tmp/install \\\n && make install \\\n && cd .. \\\n && cd x11vnc \\\n && autoreconf -v --install \\\n && PKG_CONFIG_PATH=/tmp/install/lib/pkgconfig/ ./configure --prefix=/tmp/install --with-websockets \\\n && make install \\\n && cd .. \\\n && strip install/lib/libvnc*.so \\\n && cp -P install/lib/libvncserver.so* /usr/lib/ \\\n && cp -P install/lib/libvncclient.so* /usr/lib/ \\\n && strip install/bin/x11vnc \\\n && cp install/bin/x11vnc /usr/bin/ \\\n && del-pkg build-dependencies \\\n && rm -rf /tmp/* /tmp/.[!.]*\n#   Install packages.\nRUN : \\\n && LIBPNG=\"$( apt-cache depends libpng-dev | grep 'Depends: libpng' | awk '{print $2}' ;)\" \\\n && add-pkg openssl libxtst6 libxcomposite1 $LIBPNG stunnel xvfb x11-utils openbox net-tools \\\n && userdel stunnel4 \\\n && rm -r /var/run/stunnel4 /var/log/stunnel4 \\\n && rm -rf /var/cache/fontconfig/*\n#   Install noVNC.\nRUN add-pkg --virtual build-dependencies curl ca-certificates unzip nodejs \\\n && mkdir noVNC \\\n && curl -sS -L ${NOVNC_URL} | tar -xz --strip 1 -C noVNC \\\n && mkdir -p /opt/novnc/include \\\n && mkdir -p /opt/novnc/js \\\n && mkdir -p /opt/novnc/css \\\n && NOVNC_CORE=\" noVNC/include/util.js noVNC/include/webutil.js noVNC/include/base64.js noVNC/include/websock.js noVNC/include/des.js noVNC/include/keysymdef.js noVNC/include/keyboard.js noVNC/include/input.js noVNC/include/display.js noVNC/include/rfb.js noVNC/include/keysym.js noVNC/include/inflator.js \" \\\n && cp -v $NOVNC_CORE /opt/novnc/include/ \\\n && env HOME=/tmp npm install --cache /tmp/.npm uglify-js source-map \\\n && ./node_modules/uglify-js/bin/uglifyjs --compress --mangle --source-map --output /opt/novnc/js/novnc-core.min.js -- $NOVNC_CORE \\\n && env HOME=/tmp npm uninstall --cache /tmp/.npm uglify-js source-map \\\n && sed-patch 's|\"noVNC/|\"/|g' /opt/novnc/js/novnc-core.min.js.map \\\n && echo -e \"\\n//# sourceMappingURL=/js/novnc-core.min.js.map\" >> /opt/novnc/js/novnc-core.min.js \\\n && curl -sS -L -O ${BOOTSTRAP_URL} \\\n && unzip bootstrap-${BOOTSTRAP_VERSION}-dist.zip \\\n && cp -v bootstrap-${BOOTSTRAP_VERSION}-dist/css/bootstrap.min.css /opt/novnc/css/ \\\n && cp -v bootstrap-${BOOTSTRAP_VERSION}-dist/js/bootstrap.min.js /opt/novnc/js/ \\\n && curl -sS -L -O ${FONTAWESOME_URL} \\\n && unzip font-awesome-${FONTAWESOME_VERSION}.zip \\\n && cp -vr font-awesome-${FONTAWESOME_VERSION}/fonts /opt/novnc/ \\\n && cp -v font-awesome-${FONTAWESOME_VERSION}/css/font-awesome.min.css /opt/novnc/css/ \\\n && curl -sS -L -o /opt/novnc/js/jquery.min.js ${JQUERY_URL} \\\n && curl -sS -L -o /opt/novnc/js/jquery.ui.touch-punch.min.js ${JQUERY_UI_TOUCH_PUNCH_URL} \\\n && del-pkg build-dependencies \\\n && rm -rf /tmp/* /tmp/.[!.]*\n#   Install nginx.\nRUN add-pkg nginx \\\n && rm /etc/nginx/nginx.conf /etc/init.d/nginx /etc/logrotate.d/nginx /etc/ufw/applications.d/nginx /etc/default/nginx \\\n && rm -r /etc/nginx/snippets /etc/nginx/sites-enabled /etc/nginx/sites-available /usr/share/nginx /usr/share/doc/nginx /var/log/nginx \\\n && ln -s /config/log/nginx /var/log/nginx \\\n && ln -s /tmp/nginx /var/lib/nginx \\\n && useradd --system --home-dir /dev/null --no-create-home --shell /sbin/nologin nginx \\\n && cp /etc/passwd /defaults/ \\\n && cp /etc/group /defaults \\\n && echo \"Generating default DH parameters (2048 bits)...\" \\\n && env HOME=/tmp openssl dhparam -out \"/defaults/dhparam.pem\" 2048 > /dev/null 2>&1 \\\n && rm -rf /tmp/* /tmp/.[!.]*\n#   Add files.\nCOPY rootfs/ /\n#   Set version to CSS and JavaScript file URLs.\nRUN sed-patch \"s/UNIQUE_VERSION/$( date | md5sum | cut -c1-10 ;)/g\" /opt/novnc/index.vnc\n#   Minify noVNC UI JS files\nRUN add-pkg --virtual build-dependencies nodejs \\\n && NOVNC_UI=\" /opt/novnc/app/modulemgr.js /opt/novnc/app/ui.js /opt/novnc/app/modules/hideablenavbar.js /opt/novnc/app/modules/dynamicappname.js /opt/novnc/app/modules/password.js /opt/novnc/app/modules/clipboard.js /opt/novnc/app/modules/autoscaling.js /opt/novnc/app/modules/clipping.js /opt/novnc/app/modules/viewportdrag.js /opt/novnc/app/modules/fullscreen.js /opt/novnc/app/modules/virtualkeyboard.js /opt/novnc/app/modules/rightclick.js \" \\\n && env HOME=/tmp npm install --cache /tmp/.npm uglify-js \\\n && ./node_modules/uglify-js/bin/uglifyjs --compress --mangle --source-map --output /opt/novnc/js/novnc-ui.min.js -- $NOVNC_UI \\\n && env HOME=/tmp npm uninstall --cache /tmp/.npm uglify-js \\\n && echo -e \"\\n//# sourceMappingURL=/js/novnc-ui.min.js.map\" >> /opt/novnc/js/novnc-ui.min.js \\\n && sed-patch 's/\\/opt\\/novnc//g' /opt/novnc/js/novnc-ui.min.js.map \\\n && del-pkg build-dependencies \\\n && rm -rf /tmp/* /tmp/.[!.]*\n#   Generate and install favicons.\nRUN APP_ICON_URL=https://github.com/jlesage/docker-templates/raw/master/jlesage/images/generic-app-icon.png \\\n && install_app_icon.sh \"$APP_ICON_URL\"\n#   Set environment variables.\nENV DISPLAY=\":0\" \\\n    DISPLAY_WIDTH=\"1280\" \\\n    DISPLAY_HEIGHT=\"768\"\n#   Expose ports.\n#     - 5800: VNC web interface\n#     - 5900: VNC\nEXPOSE 5800/tcp 5900/tcp\n#   Metadata.\nARG IMAGE_VERSION=unknown\nLABEL org.label-schema.name=\"baseimage-gui\" \\\n      org.label-schema.description=\"A minimal docker baseimage to ease creation of X graphical application containers\" \\\n      org.label-schema.version=\"${IMAGE_VERSION}\" \\\n      org.label-schema.vcs-url=\"https://github.com/jlesage/docker-baseimage-gui\" \\\n      org.label-schema.schema-version=\"1.0\"\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#\n#  baseimage-gui Dockerfile\n#\n#  https://github.com/jlesage/docker-baseimage-gui\n#\nARG BASEIMAGE=unknown\n#  Pull base image.\nFROM ${BASEIMAGE}\n#  Define software versions.\nARG LIBVNCSERVER_VERSION=9029b86\nARG X11VNC_VERSION=29597a9\nARG NOVNC_VERSION=fa559b3\nARG BOOTSTRAP_VERSION=3.3.7\nARG FONTAWESOME_VERSION=4.7.0\nARG JQUERY_VERSION=3.2.1\nARG JQUERY_UI_TOUCH_PUNCH_VERSION=4bc0091\n#  Define software download URLs.\nARG LIBVNCSERVER_URL=https://github.com/jlesage/libvncserver/archive/${LIBVNCSERVER_VERSION}.tar.gz\nARG X11VNC_URL=https://github.com/jlesage/x11vnc/archive/${X11VNC_VERSION}.tar.gz\nARG NOVNC_URL=https://github.com/jlesage/novnc/archive/${NOVNC_VERSION}.tar.gz\nARG BOOTSTRAP_URL=https://github.com/twbs/bootstrap/releases/download/v${BOOTSTRAP_VERSION}/bootstrap-${BOOTSTRAP_VERSION}-dist.zip\nARG FONTAWESOME_URL=https://fontawesome.com/v${FONTAWESOME_VERSION}/assets/font-awesome-${FONTAWESOME_VERSION}.zip\nARG JQUERY_URL=https://code.jquery.com/jquery-${JQUERY_VERSION}.min.js\nARG JQUERY_UI_TOUCH_PUNCH_URL=https://raw.github.com/furf/jquery-ui-touch-punch/${JQUERY_UI_TOUCH_PUNCH_VERSION}/jquery.ui.touch-punch.min.js\n#  Define working directory.\nWORKDIR /tmp\n#  Install the nodejs PPA.\nRUN add-pkg --virtual build-dependencies curl ca-certificates gnupg \\\n && . /etc/os-release \\\n && curl -s https://deb.nodesource.com/gpgkey/nodesource.gpg.key | apt-key --keyring /etc/apt/trusted.gpg.d/nodesource.gpg add - \\\n && echo \"deb http://deb.nodesource.com/node_8.x $VERSION_CODENAME main\" > /etc/apt/sources.list.d/nodesource.list \\\n && echo \"deb-src http://deb.nodesource.com/node_8.x $VERSION_CODENAME main\" >> /etc/apt/sources.list.d/nodesource.list \\\n && del-pkg build-dependencies \\\n && rm -rf /tmp/* /tmp/.[!.]*\n#  Compile x11vnc.\nRUN add-pkg --virtual build-dependencies curl ca-certificates build-essential autoconf automake libtool pkg-config zlib1g-dev libx11-dev libxtst-dev libxext-dev libjpeg-dev libpng-dev libxinerama-dev libxdamage-dev libxcomposite-dev libxcursor-dev libxrandr-dev libxfixes-dev libice-dev \\\n && mkdir libvncserver x11vnc \\\n && curl -sS -L ${LIBVNCSERVER_URL} | tar -xz --strip 1 -C libvncserver \\\n && curl -sS -L ${X11VNC_URL} | tar -xz --strip 1 -C x11vnc \\\n && cd libvncserver \\\n && ./autogen.sh --prefix=/tmp/install \\\n && make install \\\n && cd .. \\\n && cd x11vnc \\\n && autoreconf -v --install \\\n && PKG_CONFIG_PATH=/tmp/install/lib/pkgconfig/ ./configure --prefix=/tmp/install --with-websockets \\\n && make install \\\n && cd .. \\\n && strip install/lib/libvnc*.so \\\n && cp -P install/lib/libvncserver.so* /usr/lib/ \\\n && cp -P install/lib/libvncclient.so* /usr/lib/ \\\n && strip install/bin/x11vnc \\\n && cp install/bin/x11vnc /usr/bin/ \\\n && del-pkg build-dependencies \\\n && rm -rf /tmp/* /tmp/.[!.]*\n#  Install packages.\nRUN apt-get update -q \\\n && LIBPNG=\"$( apt-cache depends libpng-dev | grep 'Depends: libpng' | awk '{print $2}' ;)\" \\\n && add-pkg openssl libxtst6 libxcomposite1 $LIBPNG stunnel xvfb x11-utils openbox net-tools \\\n && userdel stunnel4 \\\n && rm -r /var/run/stunnel4 /var/log/stunnel4 \\\n && rm -rf /var/cache/fontconfig/*\n#  Install noVNC.\nRUN add-pkg --virtual build-dependencies curl ca-certificates unzip nodejs \\\n && mkdir noVNC \\\n && curl -sS -L ${NOVNC_URL} | tar -xz --strip 1 -C noVNC \\\n && mkdir -p /opt/novnc/include \\\n && mkdir -p /opt/novnc/js \\\n && mkdir -p /opt/novnc/css \\\n && NOVNC_CORE=\" noVNC/include/util.js noVNC/include/webutil.js noVNC/include/base64.js noVNC/include/websock.js noVNC/include/des.js noVNC/include/keysymdef.js noVNC/include/keyboard.js noVNC/include/input.js noVNC/include/display.js noVNC/include/rfb.js noVNC/include/keysym.js noVNC/include/inflator.js \" \\\n && cp -v $NOVNC_CORE /opt/novnc/include/ \\\n && env HOME=/tmp npm install --cache /tmp/.npm uglify-js source-map \\\n && ./node_modules/uglify-js/bin/uglifyjs --compress --mangle --source-map --output /opt/novnc/js/novnc-core.min.js -- $NOVNC_CORE \\\n && env HOME=/tmp npm uninstall --cache /tmp/.npm uglify-js source-map \\\n && sed-patch 's|\"noVNC/|\"/|g' /opt/novnc/js/novnc-core.min.js.map \\\n && echo -e \"\\n//# sourceMappingURL=/js/novnc-core.min.js.map\" >> /opt/novnc/js/novnc-core.min.js \\\n && curl -sS -L -O ${BOOTSTRAP_URL} \\\n && unzip bootstrap-${BOOTSTRAP_VERSION}-dist.zip \\\n && cp -v bootstrap-${BOOTSTRAP_VERSION}-dist/css/bootstrap.min.css /opt/novnc/css/ \\\n && cp -v bootstrap-${BOOTSTRAP_VERSION}-dist/js/bootstrap.min.js /opt/novnc/js/ \\\n && curl -sS -L -O ${FONTAWESOME_URL} \\\n && unzip font-awesome-${FONTAWESOME_VERSION}.zip \\\n && cp -vr font-awesome-${FONTAWESOME_VERSION}/fonts /opt/novnc/ \\\n && cp -v font-awesome-${FONTAWESOME_VERSION}/css/font-awesome.min.css /opt/novnc/css/ \\\n && curl -sS -L -o /opt/novnc/js/jquery.min.js ${JQUERY_URL} \\\n && curl -sS -L -o /opt/novnc/js/jquery.ui.touch-punch.min.js ${JQUERY_UI_TOUCH_PUNCH_URL} \\\n && del-pkg build-dependencies \\\n && rm -rf /tmp/* /tmp/.[!.]*\n#  Install nginx.\nRUN add-pkg nginx \\\n && rm /etc/nginx/nginx.conf /etc/init.d/nginx /etc/logrotate.d/nginx /etc/ufw/applications.d/nginx /etc/default/nginx \\\n && rm -r /etc/nginx/snippets /etc/nginx/sites-enabled /etc/nginx/sites-available /usr/share/nginx /usr/share/doc/nginx /var/log/nginx \\\n && ln -s /config/log/nginx /var/log/nginx \\\n && ln -s /tmp/nginx /var/lib/nginx \\\n && useradd --system --home-dir /dev/null --no-create-home --shell /sbin/nologin nginx \\\n && cp /etc/passwd /defaults/ \\\n && cp /etc/group /defaults \\\n && echo \"Generating default DH parameters (2048 bits)...\" \\\n && env HOME=/tmp openssl dhparam -out \"/defaults/dhparam.pem\" 2048 > /dev/null 2>&1 \\\n && rm -rf /tmp/* /tmp/.[!.]*\n#  Add files.\nCOPY rootfs/ /\n#  Set version to CSS and JavaScript file URLs.\nRUN sed-patch \"s/UNIQUE_VERSION/$( date | md5sum | cut -c1-10 ;)/g\" /opt/novnc/index.vnc\n#  Minify noVNC UI JS files\nRUN add-pkg --virtual build-dependencies nodejs \\\n && NOVNC_UI=\" /opt/novnc/app/modulemgr.js /opt/novnc/app/ui.js /opt/novnc/app/modules/hideablenavbar.js /opt/novnc/app/modules/dynamicappname.js /opt/novnc/app/modules/password.js /opt/novnc/app/modules/clipboard.js /opt/novnc/app/modules/autoscaling.js /opt/novnc/app/modules/clipping.js /opt/novnc/app/modules/viewportdrag.js /opt/novnc/app/modules/fullscreen.js /opt/novnc/app/modules/virtualkeyboard.js /opt/novnc/app/modules/rightclick.js \" \\\n && env HOME=/tmp npm install --cache /tmp/.npm uglify-js \\\n && ./node_modules/uglify-js/bin/uglifyjs --compress --mangle --source-map --output /opt/novnc/js/novnc-ui.min.js -- $NOVNC_UI \\\n && env HOME=/tmp npm uninstall --cache /tmp/.npm uglify-js \\\n && echo -e \"\\n//# sourceMappingURL=/js/novnc-ui.min.js.map\" >> /opt/novnc/js/novnc-ui.min.js \\\n && sed-patch 's/\\/opt\\/novnc//g' /opt/novnc/js/novnc-ui.min.js.map \\\n && del-pkg build-dependencies \\\n && rm -rf /tmp/* /tmp/.[!.]*\n#  Generate and install favicons.\nRUN APP_ICON_URL=https://github.com/jlesage/docker-templates/raw/master/jlesage/images/generic-app-icon.png \\\n && install_app_icon.sh \"$APP_ICON_URL\"\n#  Set environment variables.\nENV DISPLAY=\":0\" \\\n    DISPLAY_WIDTH=\"1280\" \\\n    DISPLAY_HEIGHT=\"768\"\n#  Expose ports.\n#    - 5800: VNC web interface\n#    - 5900: VNC\nEXPOSE 5800/tcp 5900/tcp\n#  Metadata.\nARG IMAGE_VERSION=unknown\nLABEL org.label-schema.name=\"baseimage-gui\" \\\n      org.label-schema.description=\"A minimal docker baseimage to ease creation of X graphical application containers\" \\\n      org.label-schema.version=\"${IMAGE_VERSION}\" \\\n      org.label-schema.vcs-url=\"https://github.com/jlesage/docker-baseimage-gui\" \\\n      org.label-schema.schema-version=\"1.0\"\n","injectedSmells":[],"originalDockerfileHash":"3620e2fd052cd8a7ce3688e695c8854a","successfullyInjectedSmells":[],"originalDockerfileUglified":"#\n#   baseimage-gui Dockerfile\n#\n#   https://github.com/jlesage/docker-baseimage-gui\n#\nARG BASEIMAGE=unknown\n#   Pull base image.\nFROM ${BASEIMAGE}\n#   Define software versions.\nARG LIBVNCSERVER_VERSION=9029b86\nARG X11VNC_VERSION=29597a9\nARG NOVNC_VERSION=fa559b3\nARG BOOTSTRAP_VERSION=3.3.7\nARG FONTAWESOME_VERSION=4.7.0\nARG JQUERY_VERSION=3.2.1\nARG JQUERY_UI_TOUCH_PUNCH_VERSION=4bc0091\n#   Define software download URLs.\nARG LIBVNCSERVER_URL=https://github.com/jlesage/libvncserver/archive/${LIBVNCSERVER_VERSION}.tar.gz\nARG X11VNC_URL=https://github.com/jlesage/x11vnc/archive/${X11VNC_VERSION}.tar.gz\nARG NOVNC_URL=https://github.com/jlesage/novnc/archive/${NOVNC_VERSION}.tar.gz\nARG BOOTSTRAP_URL=https://github.com/twbs/bootstrap/releases/download/v${BOOTSTRAP_VERSION}/bootstrap-${BOOTSTRAP_VERSION}-dist.zip\nARG FONTAWESOME_URL=https://fontawesome.com/v${FONTAWESOME_VERSION}/assets/font-awesome-${FONTAWESOME_VERSION}.zip\nARG JQUERY_URL=https://code.jquery.com/jquery-${JQUERY_VERSION}.min.js\nARG JQUERY_UI_TOUCH_PUNCH_URL=https://raw.github.com/furf/jquery-ui-touch-punch/${JQUERY_UI_TOUCH_PUNCH_VERSION}/jquery.ui.touch-punch.min.js\n#   Define working directory.\nWORKDIR /tmp\n#   Install the nodejs PPA.\nRUN add-pkg --virtual build-dependencies curl ca-certificates gnupg \\\n && . /etc/os-release \\\n && curl -s https://deb.nodesource.com/gpgkey/nodesource.gpg.key | apt-key --keyring /etc/apt/trusted.gpg.d/nodesource.gpg add - \\\n && echo \"deb http://deb.nodesource.com/node_8.x $VERSION_CODENAME main\" > /etc/apt/sources.list.d/nodesource.list \\\n && echo \"deb-src http://deb.nodesource.com/node_8.x $VERSION_CODENAME main\" >> /etc/apt/sources.list.d/nodesource.list \\\n && del-pkg build-dependencies \\\n && rm -rf /tmp/* /tmp/.[!.]*\n#   Compile x11vnc.\nRUN add-pkg --virtual build-dependencies curl ca-certificates build-essential autoconf automake libtool pkg-config zlib1g-dev libx11-dev libxtst-dev libxext-dev libjpeg-dev libpng-dev libxinerama-dev libxdamage-dev libxcomposite-dev libxcursor-dev libxrandr-dev libxfixes-dev libice-dev \\\n && mkdir libvncserver x11vnc \\\n && curl -sS -L ${LIBVNCSERVER_URL} | tar -xz --strip 1 -C libvncserver \\\n && curl -sS -L ${X11VNC_URL} | tar -xz --strip 1 -C x11vnc \\\n && cd libvncserver \\\n && ./autogen.sh --prefix=/tmp/install \\\n && make install \\\n && cd .. \\\n && cd x11vnc \\\n && autoreconf -v --install \\\n && PKG_CONFIG_PATH=/tmp/install/lib/pkgconfig/ ./configure --prefix=/tmp/install --with-websockets \\\n && make install \\\n && cd .. \\\n && strip install/lib/libvnc*.so \\\n && cp -P install/lib/libvncserver.so* /usr/lib/ \\\n && cp -P install/lib/libvncclient.so* /usr/lib/ \\\n && strip install/bin/x11vnc \\\n && cp install/bin/x11vnc /usr/bin/ \\\n && del-pkg build-dependencies \\\n && rm -rf /tmp/* /tmp/.[!.]*\n#   Install packages.\nRUN apt-get update -q \\\n && LIBPNG=\"$( apt-cache depends libpng-dev | grep 'Depends: libpng' | awk '{print $2}' ;)\" \\\n && add-pkg openssl libxtst6 libxcomposite1 $LIBPNG stunnel xvfb x11-utils openbox net-tools \\\n && userdel stunnel4 \\\n && rm -r /var/run/stunnel4 /var/log/stunnel4 \\\n && rm -rf /var/cache/fontconfig/*\n#   Install noVNC.\nRUN add-pkg --virtual build-dependencies curl ca-certificates unzip nodejs \\\n && mkdir noVNC \\\n && curl -sS -L ${NOVNC_URL} | tar -xz --strip 1 -C noVNC \\\n && mkdir -p /opt/novnc/include \\\n && mkdir -p /opt/novnc/js \\\n && mkdir -p /opt/novnc/css \\\n && NOVNC_CORE=\" noVNC/include/util.js noVNC/include/webutil.js noVNC/include/base64.js noVNC/include/websock.js noVNC/include/des.js noVNC/include/keysymdef.js noVNC/include/keyboard.js noVNC/include/input.js noVNC/include/display.js noVNC/include/rfb.js noVNC/include/keysym.js noVNC/include/inflator.js \" \\\n && cp -v $NOVNC_CORE /opt/novnc/include/ \\\n && env HOME=/tmp npm install --cache /tmp/.npm uglify-js source-map \\\n && ./node_modules/uglify-js/bin/uglifyjs --compress --mangle --source-map --output /opt/novnc/js/novnc-core.min.js -- $NOVNC_CORE \\\n && env HOME=/tmp npm uninstall --cache /tmp/.npm uglify-js source-map \\\n && sed-patch 's|\"noVNC/|\"/|g' /opt/novnc/js/novnc-core.min.js.map \\\n && echo -e \"\\n//# sourceMappingURL=/js/novnc-core.min.js.map\" >> /opt/novnc/js/novnc-core.min.js \\\n && curl -sS -L -O ${BOOTSTRAP_URL} \\\n && unzip bootstrap-${BOOTSTRAP_VERSION}-dist.zip \\\n && cp -v bootstrap-${BOOTSTRAP_VERSION}-dist/css/bootstrap.min.css /opt/novnc/css/ \\\n && cp -v bootstrap-${BOOTSTRAP_VERSION}-dist/js/bootstrap.min.js /opt/novnc/js/ \\\n && curl -sS -L -O ${FONTAWESOME_URL} \\\n && unzip font-awesome-${FONTAWESOME_VERSION}.zip \\\n && cp -vr font-awesome-${FONTAWESOME_VERSION}/fonts /opt/novnc/ \\\n && cp -v font-awesome-${FONTAWESOME_VERSION}/css/font-awesome.min.css /opt/novnc/css/ \\\n && curl -sS -L -o /opt/novnc/js/jquery.min.js ${JQUERY_URL} \\\n && curl -sS -L -o /opt/novnc/js/jquery.ui.touch-punch.min.js ${JQUERY_UI_TOUCH_PUNCH_URL} \\\n && del-pkg build-dependencies \\\n && rm -rf /tmp/* /tmp/.[!.]*\n#   Install nginx.\nRUN add-pkg nginx \\\n && rm /etc/nginx/nginx.conf /etc/init.d/nginx /etc/logrotate.d/nginx /etc/ufw/applications.d/nginx /etc/default/nginx \\\n && rm -r /etc/nginx/snippets /etc/nginx/sites-enabled /etc/nginx/sites-available /usr/share/nginx /usr/share/doc/nginx /var/log/nginx \\\n && ln -s /config/log/nginx /var/log/nginx \\\n && ln -s /tmp/nginx /var/lib/nginx \\\n && useradd --system --home-dir /dev/null --no-create-home --shell /sbin/nologin nginx \\\n && cp /etc/passwd /defaults/ \\\n && cp /etc/group /defaults \\\n && echo \"Generating default DH parameters (2048 bits)...\" \\\n && env HOME=/tmp openssl dhparam -out \"/defaults/dhparam.pem\" 2048 > /dev/null 2>&1 \\\n && rm -rf /tmp/* /tmp/.[!.]*\n#   Add files.\nCOPY rootfs/ /\n#   Set version to CSS and JavaScript file URLs.\nRUN sed-patch \"s/UNIQUE_VERSION/$( date | md5sum | cut -c1-10 ;)/g\" /opt/novnc/index.vnc\n#   Minify noVNC UI JS files\nRUN add-pkg --virtual build-dependencies nodejs \\\n && NOVNC_UI=\" /opt/novnc/app/modulemgr.js /opt/novnc/app/ui.js /opt/novnc/app/modules/hideablenavbar.js /opt/novnc/app/modules/dynamicappname.js /opt/novnc/app/modules/password.js /opt/novnc/app/modules/clipboard.js /opt/novnc/app/modules/autoscaling.js /opt/novnc/app/modules/clipping.js /opt/novnc/app/modules/viewportdrag.js /opt/novnc/app/modules/fullscreen.js /opt/novnc/app/modules/virtualkeyboard.js /opt/novnc/app/modules/rightclick.js \" \\\n && env HOME=/tmp npm install --cache /tmp/.npm uglify-js \\\n && ./node_modules/uglify-js/bin/uglifyjs --compress --mangle --source-map --output /opt/novnc/js/novnc-ui.min.js -- $NOVNC_UI \\\n && env HOME=/tmp npm uninstall --cache /tmp/.npm uglify-js \\\n && echo -e \"\\n//# sourceMappingURL=/js/novnc-ui.min.js.map\" >> /opt/novnc/js/novnc-ui.min.js \\\n && sed-patch 's/\\/opt\\/novnc//g' /opt/novnc/js/novnc-ui.min.js.map \\\n && del-pkg build-dependencies \\\n && rm -rf /tmp/* /tmp/.[!.]*\n#   Generate and install favicons.\nRUN APP_ICON_URL=https://github.com/jlesage/docker-templates/raw/master/jlesage/images/generic-app-icon.png \\\n && install_app_icon.sh \"$APP_ICON_URL\"\n#   Set environment variables.\nENV DISPLAY=\":0\" \\\n    DISPLAY_WIDTH=\"1280\" \\\n    DISPLAY_HEIGHT=\"768\"\n#   Expose ports.\n#     - 5800: VNC web interface\n#     - 5900: VNC\nEXPOSE 5800/tcp 5900/tcp\n#   Metadata.\nARG IMAGE_VERSION=unknown\nLABEL org.label-schema.name=\"baseimage-gui\" \\\n      org.label-schema.description=\"A minimal docker baseimage to ease creation of X graphical application containers\" \\\n      org.label-schema.version=\"${IMAGE_VERSION}\" \\\n      org.label-schema.vcs-url=\"https://github.com/jlesage/docker-baseimage-gui\" \\\n      org.label-schema.schema-version=\"1.0\"\n","originalDockerfileUglifiedHash":"0530c9693e8241b8a62503e3e718a016","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/d7ba2660f24cc09d184d53ce5746569aed65fc6f.dockerfile"}