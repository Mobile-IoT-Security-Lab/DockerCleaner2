{"seed":2120100076,"processedDockerfileHash":"357452c1b074e53261b201b97c3a2fc5","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Build on top of the RHEL 8 image\nFROM registry.access.redhat.com/ubi8\nMAINTAINER FreeIPA Developers <freeipa-devel@lists.fedorahosted.org>\nRUN groupadd -g 288 kdcproxy ; useradd -u 288 -g 288 -c 'IPA KDC Proxy User' -d '/var/lib/kdcproxy' -s '/sbin/nologin' kdcproxy\nRUN groupadd -g 289 ipaapi ; useradd -u 289 -g 289 -c 'IPA Framework User' -r -d / -s '/sbin/nologin' ipaapi\n#   Workaround 1615948\nRUN ln -s /bin/false /usr/sbin/systemd-machine-id-setup\nRUN yum -y module enable idm:DL1\nRUN yum -y module install --setopt=install_weak_deps=False idm:DL1/adtrust idm:DL1/dns \\\n && yum -y install patch \\\n && yum clean all\n#   debug: RUN test $( getent passwd | grep -E \"^(dirsrv:x:389|ipaapi:x:289|kdcproxy:x:288|pkiuser:x:17):\" | wc -l ) -eq 4\n#   Container image which runs systemd\n#   debug: RUN test -f /etc/machine-id && ! test -s /etc/machine-id\n#   debug: RUN test \"$container\" = oci\nENTRYPOINT [\"/usr/sbin/init\"]\nSTOPSIGNAL RTMIN+3\n#   test-addon: VOLUME [ \"/var/log/journal\" ]\n#   test: systemd-container-failed.sh var-lib-nfs-rpc_pipefs.mount\n#   Minimize the systemd setup\nRUN find /etc/systemd/system /usr/lib/systemd/system/{basic,multi-user,sysinit}.target.wants -type l | xargs rm -v\nCOPY patches/minimal-fedora-26.patch /root/\nRUN patch --verbose -p0 --fuzz=0 < /root/minimal-fedora-26.patch\n#   debug: RUN ! find /etc/systemd/system /usr/lib/systemd/system/{basic,multi-user,sysinit}.target.wants /etc/tmpfiles.d -type f | grep .\nCOPY container-ipa.target /usr/lib/systemd/system/\nRUN systemctl set-default container-ipa.target\nRUN rmdir -v /etc/systemd/system/multi-user.target.wants \\\n && mkdir /etc/systemd/system/container-ipa.target.wants \\\n && ln -s /etc/systemd/system/container-ipa.target.wants /etc/systemd/system/multi-user.target.wants\nRUN mkdir /var/log/journal\nRUN systemd-tmpfiles --remove --create\n#   debug: RUN ! test -f /var/lib/systemd/random-seed\n#   test-addon: VOLUME [ \"/var/log/journal\" ]\n#   test: systemd-container-diff.sh list-dependencies-rhel-8.out docker-diff-minimal-rhel-8.exceptions docker-diff-minimal-rhel-8.out\n#   Prepare for basic ipa-server-install in container\n#   Address failing nis-domainname.service in the ipa-client-install step\nRUN mv /usr/bin/nisdomainname /usr/bin/nisdomainname.orig\nCOPY hostnamectl-wrapper /usr/bin/nisdomainname\nCOPY patches/ipa-rhel-8.patch /root\nRUN set -o pipefail ; patch --verbose -p0 --fuzz=0 < /root/ipa-rhel-8.patch | tee /dev/stderr | sed -n 's/^patching file //;T;/\\.py$/p' | xargs /usr/libexec/platform-python -m compileall\n#   Workaround https://github.com/freeipa/freeipa-container/issues/187\nCOPY certmonger-wait-for-ready.conf /usr/lib/systemd/system/certmonger.service.d/wait-for-ready.conf\n#   test-addon: VOLUME [ \"/var/log/journal\" ]\n#  # # test: systemd-container-ipa-server-install.sh\n#   Move configuration and data to data volume\nCOPY patches/ipa-data-rhel-8.patch /root\nRUN set -o pipefail ; patch --verbose -p0 --fuzz=0 < /root/ipa-data-rhel-8.patch | tee /dev/stderr | sed -n 's/^patching file //;T;/\\.py$/p' | xargs /usr/libexec/platform-python -m compileall\nRUN mv /usr/sbin/ipa-join /usr/sbin/ipa-join.orig\nCOPY ipa-join /usr/sbin/ipa-join\nRUN authselect select sssd with-sudo --force \\\n && mv /usr/bin/authselect /usr/bin/authselect.orig\nCOPY authselect /usr/bin/authselect\nCOPY utils/prepare-volume-template utils/populate-volume-from-template utils/extract-rpm-upgrade-scriptlets /usr/local/bin/\nCOPY volume-data-list volume-tmp-list volume-data-autoupdate /etc/\nRUN /usr/local/bin/prepare-volume-template /etc/volume-data-list /data\nRUN /usr/local/bin/prepare-volume-template /etc/volume-tmp-list /tmp\nRUN /usr/local/bin/extract-rpm-upgrade-scriptlets\nRUN echo 2.0 > /etc/volume-version\nVOLUME [ \"/tmp\", \"/run\", \"/data\", \"/var/log/journal\" ]\nCOPY init-data-minimal /usr/local/sbin/init\nENTRYPOINT [\"/usr/local/sbin/init\"]\n#   test: systemd-container-ipa-server-install-data.sh docker-diff-minimal-fedora-23.out\n#   Configure master/replica upon the first invocation\nCOPY init-data /usr/local/sbin/init\nCOPY ipa-server-configure-first systemctl-exit-with-status ipa-volume-upgrade-* /usr/sbin/\nCOPY ipa-server-configure-first.service ipa-server-upgrade.service ipa-server-update-self-ip-address.service /usr/lib/systemd/system/\nRUN ln -sv /usr/lib/systemd/system/ipa-server-configure-first.service /data-template/etc/systemd/system/container-ipa.target.wants/ipa-server-configure-first.service\nCOPY exit-status.conf /usr/lib/systemd/system/systemd-poweroff.service.d/\nEXPOSE 53/udp 53/tcp 80/tcp 443/tcp 389/tcp 636/tcp 88/tcp 464/tcp 88/udp 464/udp 123/udp 7389/tcp 9443/tcp 9444/tcp 9445/tcp\nRUN uuidgen > /data-template/build-id\n#   Invocation:\n#   docker run -ti -v /sys/fs/cgroup:/sys/fs/cgroup:ro --tmpfs /run --tmpfs /tmp -v /opt/ipa-data:/data:Z -h ipa.example.test ${NAME} [ options ]\n#   Atomic specific bits\nCOPY install.sh uninstall.sh /bin/\nCOPY atomic-install-help /usr/share/ipa/\n#   For atomic, we run INSTALL --privileged but install.sh will start another unprivileged container.\n#   We do it this way to be able to set hostname for the unprivileged container.\nLABEL install=\"'docker run -ti --rm --privileged -v /:/host -e HOST=/host -e DATADIR=/var/lib/${NAME} -e NAME=${NAME} -e IMAGE=${IMAGE} ${IMAGE} /bin/install.sh'\"\nLABEL run=\"'docker run ${RUN_OPTS} --name ${NAME} -v /var/lib/${NAME}:/data:Z -v /sys/fs/cgroup:/sys/fs/cgroup:ro --tmpfs /run --tmpfs /tmp -v /dev/urandom:/dev/random:ro ${IMAGE}'\"\nLABEL RUN_OPTS_FILE=\"'/var/lib/${NAME}/docker-run-opts'\"\nLABEL stop=\"'docker stop ${NAME}'\"\nLABEL uninstall=\"'docker run --rm --privileged -v /:/host -e HOST=/host -e DATADIR=/var/lib/${NAME} ${IMAGE} /bin/uninstall.sh'\"\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Build on top of the RHEL 8 image\nFROM registry.access.redhat.com/ubi8\nMAINTAINER FreeIPA Developers <freeipa-devel@lists.fedorahosted.org>\nRUN groupadd -g 288 kdcproxy ; useradd -u 288 -g 288 -c 'IPA KDC Proxy User' -d '/var/lib/kdcproxy' -s '/sbin/nologin' kdcproxy\nRUN groupadd -g 289 ipaapi ; useradd -u 289 -g 289 -c 'IPA Framework User' -r -d / -s '/sbin/nologin' ipaapi\n#  Workaround 1615948\nRUN ln -s /bin/false /usr/sbin/systemd-machine-id-setup\nRUN yum -y module enable idm:DL1\nRUN yum -y module install --setopt=install_weak_deps=False idm:DL1/adtrust idm:DL1/dns \\\n && yum -y install patch \\\n && yum clean all\n#  debug: RUN test $( getent passwd | grep -E \"^(dirsrv:x:389|ipaapi:x:289|kdcproxy:x:288|pkiuser:x:17):\" | wc -l ) -eq 4\n#  Container image which runs systemd\n#  debug: RUN test -f /etc/machine-id && ! test -s /etc/machine-id\n#  debug: RUN test \"$container\" = oci\nENTRYPOINT [\"/usr/sbin/init\"]\nSTOPSIGNAL RTMIN+3\n#  test-addon: VOLUME [ \"/var/log/journal\" ]\n#  test: systemd-container-failed.sh var-lib-nfs-rpc_pipefs.mount\n#  Minimize the systemd setup\nRUN find /etc/systemd/system /usr/lib/systemd/system/{basic,multi-user,sysinit}.target.wants -type l | xargs rm -v\nCOPY patches/minimal-fedora-26.patch /root/\nRUN patch --verbose -p0 --fuzz=0 < /root/minimal-fedora-26.patch\n#  debug: RUN ! find /etc/systemd/system /usr/lib/systemd/system/{basic,multi-user,sysinit}.target.wants /etc/tmpfiles.d -type f | grep .\nCOPY container-ipa.target /usr/lib/systemd/system/\nRUN systemctl set-default container-ipa.target\nRUN rmdir -v /etc/systemd/system/multi-user.target.wants \\\n && mkdir /etc/systemd/system/container-ipa.target.wants \\\n && ln -s /etc/systemd/system/container-ipa.target.wants /etc/systemd/system/multi-user.target.wants\nRUN mkdir /var/log/journal\nRUN systemd-tmpfiles --remove --create\n#  debug: RUN ! test -f /var/lib/systemd/random-seed\n#  test-addon: VOLUME [ \"/var/log/journal\" ]\n#  test: systemd-container-diff.sh list-dependencies-rhel-8.out docker-diff-minimal-rhel-8.exceptions docker-diff-minimal-rhel-8.out\n#  Prepare for basic ipa-server-install in container\n#  Address failing nis-domainname.service in the ipa-client-install step\nRUN mv /usr/bin/nisdomainname /usr/bin/nisdomainname.orig\nADD hostnamectl-wrapper /usr/bin/nisdomainname\nCOPY patches/ipa-rhel-8.patch /root\nRUN set -o pipefail ; patch --verbose -p0 --fuzz=0 < /root/ipa-rhel-8.patch | tee /dev/stderr | sed -n 's/^patching file //;T;/\\.py$/p' | xargs /usr/libexec/platform-python -m compileall\n#  Workaround https://github.com/freeipa/freeipa-container/issues/187\nCOPY certmonger-wait-for-ready.conf /usr/lib/systemd/system/certmonger.service.d/wait-for-ready.conf\n#  test-addon: VOLUME [ \"/var/log/journal\" ]\n# # # test: systemd-container-ipa-server-install.sh\n#  Move configuration and data to data volume\nCOPY patches/ipa-data-rhel-8.patch /root\nRUN set -o pipefail ; patch --verbose -p0 --fuzz=0 < /root/ipa-data-rhel-8.patch | tee /dev/stderr | sed -n 's/^patching file //;T;/\\.py$/p' | xargs /usr/libexec/platform-python -m compileall\nRUN mv /usr/sbin/ipa-join /usr/sbin/ipa-join.orig\nCOPY ipa-join /usr/sbin/ipa-join\nRUN authselect select sssd with-sudo --force \\\n && mv /usr/bin/authselect /usr/bin/authselect.orig\nCOPY authselect /usr/bin/authselect\nCOPY utils/prepare-volume-template utils/populate-volume-from-template utils/extract-rpm-upgrade-scriptlets /usr/local/bin/\nCOPY volume-data-list volume-tmp-list volume-data-autoupdate /etc/\nRUN /usr/local/bin/prepare-volume-template /etc/volume-data-list /data\nRUN /usr/local/bin/prepare-volume-template /etc/volume-tmp-list /tmp\nRUN /usr/local/bin/extract-rpm-upgrade-scriptlets\nRUN echo 2.0 > /etc/volume-version\nVOLUME [ \"/tmp\", \"/run\", \"/data\", \"/var/log/journal\" ]\nCOPY init-data-minimal /usr/local/sbin/init\nENTRYPOINT [\"/usr/local/sbin/init\"]\n#  test: systemd-container-ipa-server-install-data.sh docker-diff-minimal-fedora-23.out\n#  Configure master/replica upon the first invocation\nCOPY init-data /usr/local/sbin/init\nCOPY ipa-server-configure-first systemctl-exit-with-status ipa-volume-upgrade-* /usr/sbin/\nCOPY ipa-server-configure-first.service ipa-server-upgrade.service ipa-server-update-self-ip-address.service /usr/lib/systemd/system/\nRUN ln -sv /usr/lib/systemd/system/ipa-server-configure-first.service /data-template/etc/systemd/system/container-ipa.target.wants/ipa-server-configure-first.service\nCOPY exit-status.conf /usr/lib/systemd/system/systemd-poweroff.service.d/\nEXPOSE 53/udp 53/tcp 80/tcp 443/tcp 389/tcp 636/tcp 88/tcp 464/tcp 88/udp 464/udp 123/udp 7389/tcp 9443/tcp 9444/tcp 9445/tcp\nRUN uuidgen > /data-template/build-id\n#  Invocation:\n#  docker run -ti -v /sys/fs/cgroup:/sys/fs/cgroup:ro --tmpfs /run --tmpfs /tmp -v /opt/ipa-data:/data:Z -h ipa.example.test ${NAME} [ options ]\n#  Atomic specific bits\nCOPY install.sh uninstall.sh /bin/\nCOPY atomic-install-help /usr/share/ipa/\n#  For atomic, we run INSTALL --privileged but install.sh will start another unprivileged container.\n#  We do it this way to be able to set hostname for the unprivileged container.\nLABEL install=\"'docker run -ti --rm --privileged -v /:/host -e HOST=/host -e DATADIR=/var/lib/${NAME} -e NAME=${NAME} -e IMAGE=${IMAGE} ${IMAGE} /bin/install.sh'\"\nLABEL run=\"'docker run ${RUN_OPTS} --name ${NAME} -v /var/lib/${NAME}:/data:Z -v /sys/fs/cgroup:/sys/fs/cgroup:ro --tmpfs /run --tmpfs /tmp -v /dev/urandom:/dev/random:ro ${IMAGE}'\"\nLABEL RUN_OPTS_FILE=\"'/var/lib/${NAME}/docker-run-opts'\"\nLABEL stop=\"'docker stop ${NAME}'\"\nLABEL uninstall=\"'docker run --rm --privileged -v /:/host -e HOST=/host -e DATADIR=/var/lib/${NAME} ${IMAGE} /bin/uninstall.sh'\"\n","injectedSmells":[],"originalDockerfileHash":"93a1ee3299d291523bf10e047e5e28ec","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Build on top of the RHEL 8 image\nFROM registry.access.redhat.com/ubi8\nMAINTAINER FreeIPA Developers <freeipa-devel@lists.fedorahosted.org>\nRUN groupadd -g 288 kdcproxy ; useradd -u 288 -g 288 -c 'IPA KDC Proxy User' -d '/var/lib/kdcproxy' -s '/sbin/nologin' kdcproxy\nRUN groupadd -g 289 ipaapi ; useradd -u 289 -g 289 -c 'IPA Framework User' -r -d / -s '/sbin/nologin' ipaapi\n#   Workaround 1615948\nRUN ln -s /bin/false /usr/sbin/systemd-machine-id-setup\nRUN yum -y module enable idm:DL1\nRUN yum -y module install --setopt=install_weak_deps=False idm:DL1/adtrust idm:DL1/dns \\\n && yum -y install patch \\\n && yum clean all\n#   debug: RUN test $( getent passwd | grep -E \"^(dirsrv:x:389|ipaapi:x:289|kdcproxy:x:288|pkiuser:x:17):\" | wc -l ) -eq 4\n#   Container image which runs systemd\n#   debug: RUN test -f /etc/machine-id && ! test -s /etc/machine-id\n#   debug: RUN test \"$container\" = oci\nENTRYPOINT [\"/usr/sbin/init\"]\nSTOPSIGNAL RTMIN+3\n#   test-addon: VOLUME [ \"/var/log/journal\" ]\n#   test: systemd-container-failed.sh var-lib-nfs-rpc_pipefs.mount\n#   Minimize the systemd setup\nRUN find /etc/systemd/system /usr/lib/systemd/system/{basic,multi-user,sysinit}.target.wants -type l | xargs rm -v\nCOPY patches/minimal-fedora-26.patch /root/\nRUN patch --verbose -p0 --fuzz=0 < /root/minimal-fedora-26.patch\n#   debug: RUN ! find /etc/systemd/system /usr/lib/systemd/system/{basic,multi-user,sysinit}.target.wants /etc/tmpfiles.d -type f | grep .\nCOPY container-ipa.target /usr/lib/systemd/system/\nRUN systemctl set-default container-ipa.target\nRUN rmdir -v /etc/systemd/system/multi-user.target.wants \\\n && mkdir /etc/systemd/system/container-ipa.target.wants \\\n && ln -s /etc/systemd/system/container-ipa.target.wants /etc/systemd/system/multi-user.target.wants\nRUN mkdir /var/log/journal\nRUN systemd-tmpfiles --remove --create\n#   debug: RUN ! test -f /var/lib/systemd/random-seed\n#   test-addon: VOLUME [ \"/var/log/journal\" ]\n#   test: systemd-container-diff.sh list-dependencies-rhel-8.out docker-diff-minimal-rhel-8.exceptions docker-diff-minimal-rhel-8.out\n#   Prepare for basic ipa-server-install in container\n#   Address failing nis-domainname.service in the ipa-client-install step\nRUN mv /usr/bin/nisdomainname /usr/bin/nisdomainname.orig\nADD hostnamectl-wrapper /usr/bin/nisdomainname\nCOPY patches/ipa-rhel-8.patch /root\nRUN set -o pipefail ; patch --verbose -p0 --fuzz=0 < /root/ipa-rhel-8.patch | tee /dev/stderr | sed -n 's/^patching file //;T;/\\.py$/p' | xargs /usr/libexec/platform-python -m compileall\n#   Workaround https://github.com/freeipa/freeipa-container/issues/187\nCOPY certmonger-wait-for-ready.conf /usr/lib/systemd/system/certmonger.service.d/wait-for-ready.conf\n#   test-addon: VOLUME [ \"/var/log/journal\" ]\n#  # # test: systemd-container-ipa-server-install.sh\n#   Move configuration and data to data volume\nCOPY patches/ipa-data-rhel-8.patch /root\nRUN set -o pipefail ; patch --verbose -p0 --fuzz=0 < /root/ipa-data-rhel-8.patch | tee /dev/stderr | sed -n 's/^patching file //;T;/\\.py$/p' | xargs /usr/libexec/platform-python -m compileall\nRUN mv /usr/sbin/ipa-join /usr/sbin/ipa-join.orig\nCOPY ipa-join /usr/sbin/ipa-join\nRUN authselect select sssd with-sudo --force \\\n && mv /usr/bin/authselect /usr/bin/authselect.orig\nCOPY authselect /usr/bin/authselect\nCOPY utils/prepare-volume-template utils/populate-volume-from-template utils/extract-rpm-upgrade-scriptlets /usr/local/bin/\nCOPY volume-data-list volume-tmp-list volume-data-autoupdate /etc/\nRUN /usr/local/bin/prepare-volume-template /etc/volume-data-list /data\nRUN /usr/local/bin/prepare-volume-template /etc/volume-tmp-list /tmp\nRUN /usr/local/bin/extract-rpm-upgrade-scriptlets\nRUN echo 2.0 > /etc/volume-version\nVOLUME [ \"/tmp\", \"/run\", \"/data\", \"/var/log/journal\" ]\nCOPY init-data-minimal /usr/local/sbin/init\nENTRYPOINT [\"/usr/local/sbin/init\"]\n#   test: systemd-container-ipa-server-install-data.sh docker-diff-minimal-fedora-23.out\n#   Configure master/replica upon the first invocation\nCOPY init-data /usr/local/sbin/init\nCOPY ipa-server-configure-first systemctl-exit-with-status ipa-volume-upgrade-* /usr/sbin/\nCOPY ipa-server-configure-first.service ipa-server-upgrade.service ipa-server-update-self-ip-address.service /usr/lib/systemd/system/\nRUN ln -sv /usr/lib/systemd/system/ipa-server-configure-first.service /data-template/etc/systemd/system/container-ipa.target.wants/ipa-server-configure-first.service\nCOPY exit-status.conf /usr/lib/systemd/system/systemd-poweroff.service.d/\nEXPOSE 53/udp 53/tcp 80/tcp 443/tcp 389/tcp 636/tcp 88/tcp 464/tcp 88/udp 464/udp 123/udp 7389/tcp 9443/tcp 9444/tcp 9445/tcp\nRUN uuidgen > /data-template/build-id\n#   Invocation:\n#   docker run -ti -v /sys/fs/cgroup:/sys/fs/cgroup:ro --tmpfs /run --tmpfs /tmp -v /opt/ipa-data:/data:Z -h ipa.example.test ${NAME} [ options ]\n#   Atomic specific bits\nCOPY install.sh uninstall.sh /bin/\nCOPY atomic-install-help /usr/share/ipa/\n#   For atomic, we run INSTALL --privileged but install.sh will start another unprivileged container.\n#   We do it this way to be able to set hostname for the unprivileged container.\nLABEL install=\"'docker run -ti --rm --privileged -v /:/host -e HOST=/host -e DATADIR=/var/lib/${NAME} -e NAME=${NAME} -e IMAGE=${IMAGE} ${IMAGE} /bin/install.sh'\"\nLABEL run=\"'docker run ${RUN_OPTS} --name ${NAME} -v /var/lib/${NAME}:/data:Z -v /sys/fs/cgroup:/sys/fs/cgroup:ro --tmpfs /run --tmpfs /tmp -v /dev/urandom:/dev/random:ro ${IMAGE}'\"\nLABEL RUN_OPTS_FILE=\"'/var/lib/${NAME}/docker-run-opts'\"\nLABEL stop=\"'docker stop ${NAME}'\"\nLABEL uninstall=\"'docker run --rm --privileged -v /:/host -e HOST=/host -e DATADIR=/var/lib/${NAME} ${IMAGE} /bin/uninstall.sh'\"\n","originalDockerfileUglifiedHash":"c6d8f2165241929fb37ca5da8f363b96","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/5a4cccaf90662ba1054fc29a2dd840b7659e65cb.dockerfile"}