{"seed":3615171576,"processedDockerfileHash":"1c44e46af0f132119b03a0957b20aaad","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","use-copy-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM phusion/baseimage:latest\nMAINTAINER ethnchao <maicheng.linyi@gmail.com>\nENV NAGIOS_HOME=\"/usr/local/nagios\"\nENV NAGIOS_USER=\"nagios\"\nENV NAGIOS_GROUP=\"nagcmd\"\nENV DEBIAN_FRONTEND=\"noninteractive\"\n# A secret has been removed here. Please do not provide secrets from the Dockerfile as these will leak into the metadata of the resulting docker image. To provide secrets the --secret flag of the docker build command can be used (https://docs.docker.com/develop/develop-images/build_enhancements/#new-docker-build-secret-information).\n# A secret has been removed here. Please do not provide secrets from the Dockerfile as these will leak into the metadata of the resulting docker image. To provide secrets the --secret flag of the docker build command can be used (https://docs.docker.com/develop/develop-images/build_enhancements/#new-docker-build-secret-information).\nENV MYSQL_USER=\"nagios\"\n# A secret has been removed here. Please do not provide secrets from the Dockerfile as these will leak into the metadata of the resulting docker image. To provide secrets the --secret flag of the docker build command can be used (https://docs.docker.com/develop/develop-images/build_enhancements/#new-docker-build-secret-information).\nENV MYSQL_ADDRESS=\"nagios_mysql\"\nENV MYSQL_DATABASE=\"nagios\"\nENV ADAGIOS_VERSION=\"1.6.3-2\"\nENV GRAPHIOS_VERSION=\"2.0.3\"\nENV GRAPHITE_VERSION=\"1.1.3\"\nENV GRAFANA_VERSION=\"5.1.3\"\nENV MK_LIVESTATUS_VERSION=\"1.2.8p20\"\nENV NAGIOS_VERSION=\"4.3.4\"\nENV NAGIOS_PLUGINS_VERSION=\"2.2.1\"\nENV NCPA_VERSION=\"2.1.3\"\nENV NDOUTILS_VERSION=\"2.1.3\"\nENV NRDP_VERSION=\"1.5.2\"\nENV NRPE_VERSION=\"3.2.1\"\nENV OKCONFIG_VERSION=\"1.3.2-1\"\nENV PYNAG_VERSION=\"0.9.1-1\"\n#   Remove below if you want use default apt mirror sites\nCOPY config/apt-sources.list /etc/apt/sources.list\n#   Remove below if you want use default pip mirror sites\nCOPY config/pip.conf /root/.config/pip/pip.conf\nRUN apt-get update \\\n && apt-get install --no-install-recommends automake=1:1.16.5-1.3 apache2=2.4.55-1ubuntu2 apache2-utils=2.4.55-1ubuntu2 autoconf=2.71-3 bc=1.07.1-3build1 build-essential=12.9ubuntu3 bsd-mailx=8.1.2-0.20220412cvs-1 dc=1.07.1-3build1 fping=5.1-1 gawk=1:5.2.1-2 gettext=0.21-11 gperf=3.1-1build1 git=1:2.39.2-1ubuntu1 iputils-ping=3:20221126-1 libapache2-mod-php=2:8.1+92ubuntu1 libgd2-xpm-dev libmcrypt-dev=2.5.8-7 libssl-dev=3.0.8-1ubuntu1 libcairo2-dev=1.16.0-7 libffi-dev=3.4.4-1 libapache2-mod-wsgi libmysql++-dev=3.2.5-2.1 libmysqlclient-dev=8.0.32-0ubuntu4 libnet-snmp-perl=6.0.1-7 m4=1.4.19-3 mysql-client=8.0.32-0ubuntu4 netcat python-pip python-dev python3-dev=3.11.2-1 parallel=20221122+ds-2 php7.0-xml postfix=3.7.4-2build1 runit=2.1.2-54ubuntu1 smbclient=2:4.17.5+dfsg-2ubuntu3 snmp=5.9.3+dfsg-2ubuntu2 snmpd=5.9.3+dfsg-2ubuntu2 snmp-mibs-downloader=1.5 sudo=1.9.13p1-1ubuntu2 unzip=6.0-27ubuntu1 -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* \\\n && pip install pip==23.1 distribute==0.7.3 virtualenv==20.21.0 --upgrade --no-cache-dir\nRUN (id -u $NAGIOS_USER || useradd --system -d $NAGIOS_HOME $NAGIOS_USER ) \\\n && (egrep -i \"^${NAGIOS_GROUP}\" /etc/group || groupadd $NAGIOS_GROUP ) \\\n && usermod -a -G $NAGIOS_GROUP $NAGIOS_USER \\\n && usermod -a -G $NAGIOS_GROUP www-data\nRUN pip install https://github.com/pynag/pynag/tarball/master --no-cache-dir --no-binary=:all:\n#   https://github.com/NagiosEnterprises/nagioscore/archive/nagios-${NAGIOS_VERSION}.zip\n#   http://192.168.120.155:8000/ethnchao/nagioscore/-/archive/nagios-${NAGIOS_VERSION}/nagioscore-nagios-${NAGIOS_VERSION}.zip\nRUN cd /tmp \\\n && curl -L https://github.com/NagiosEnterprises/nagioscore/archive/nagios-${NAGIOS_VERSION}.zip -o nagioscore.zip \\\n && unzip nagioscore.zip \\\n && mv nagioscore-* nagioscore \\\n && cd nagioscore \\\n && ./configure --prefix=${NAGIOS_HOME} --enable-event-broker --with-command-group=${NAGIOS_GROUP} --with-nagios-user=${NAGIOS_USER} --with-nagios-group=${NAGIOS_GROUP} \\\n && make all \\\n && make install \\\n && make install-config \\\n && make install-commandmode \\\n && make install-webconf \\\n && make install-init \\\n && rm -rf /tmp/nagioscore /tmp/nagioscore.zip\nRUN mkdir -p ${NAGIOS_HOME}/etc/mount /data/plugin \\\n && chown -R ${NAGIOS_USER}:${NAGIOS_GROUP} /data ${NAGIOS_HOME} \\\n && cd /etc/apache2/sites-available \\\n && export DOC_ROOT=\"DocumentRoot $( echo $NAGIOS_HOME/share ;)\" \\\n && sed -i \"s,DocumentRoot.*,$DOC_ROOT,\" 000-default.conf \\\n && sed -i \"s,</VirtualHost>,<IfDefine ENABLE_USR_LIB_CGI_BIN>\\nScriptAlias /cgi-bin/ ${NAGIOS_HOME}/sbin/\\n</IfDefine>\\n</VirtualHost>,\" 000-default.conf \\\n && a2enmod cgi \\\n && pynag delete --force WHERE host_name=localhost AND service_description=SSH \\\n && cd ${NAGIOS_HOME}/etc/ \\\n && echo \"$USER2$=/data/plugin\" >> resource.cfg \\\n && pynag config --append \"cfg_dir=${NAGIOS_HOME}/etc/mount\" \\\n && htpasswd -c -b -s htpasswd.users nagiosadmin nagios \\\n && sed -i 's,/bin/mail,/usr/bin/mail,' ${NAGIOS_HOME}/etc/objects/commands.cfg \\\n && echo 'define command{\\n command_name check_nrpe\\n command_line $USER1$/check_nrpe -H $HOSTADDRESS$ -c $ARG1$\\n}\\n\\ndefine command{\\n command_name check_dummy\\n command_line $USER1$/check_dummy $ARG1$\\n}\\n\\n' >> objects/commands.cfg\n#   https://github.com/nagios-plugins/nagios-plugins/archive/release-${NAGIOS_PLUGINS_VERSION}.zip\n#   http://192.168.120.155:8000/ethnchao/nagios-plugins/-/archive/release-${NAGIOS_PLUGINS_VERSION}/nagios-plugins-release-${NAGIOS_PLUGINS_VERSION}.zip\nRUN cd /tmp \\\n && curl -L https://github.com/nagios-plugins/nagios-plugins/archive/release-${NAGIOS_PLUGINS_VERSION}.zip -o nagios-plugins.zip \\\n && unzip nagios-plugins.zip \\\n && mv nagios-plugins-* nagios-plugins \\\n && cd nagios-plugins \\\n && ./tools/setup \\\n && ./configure --prefix=${NAGIOS_HOME} \\\n && make \\\n && make install \\\n && cd /tmp \\\n && rm -rf /tmp/nagios-plugins /tmp/nagios-plugins.zip\n#   https://github.com/NagiosEnterprises/nrpe/archive/nrpe-${NRPE_VERSION}.zip\n#   http://192.168.120.155:8000/ethnchao/nrpe/-/archive/nrpe-${NRPE_VERSION}/nrpe-nrpe-${NRPE_VERSION}.zip\nRUN cd /tmp \\\n && curl -L https://github.com/NagiosEnterprises/nrpe/archive/nrpe-${NRPE_VERSION}.zip -o nrpe.zip \\\n && unzip nrpe.zip \\\n && mv nrpe-* nrpe \\\n && cd nrpe \\\n && ./configure --prefix=${NAGIOS_HOME} --with-nagios-user=${NAGIOS_USER} --with-nagios-group=${NAGIOS_GROUP} \\\n && make check_nrpe \\\n && make install-plugin \\\n && rm -rf /tmp/nrpe /tmp/nrpe.zip\nRUN mkdir -p /usr/share/snmp/mibs \\\n && ln -s /usr/share/snmp/mibs ${NAGIOS_HOME}/libexec/mibs \\\n && download-mibs \\\n && echo \"mibs +ALL\" > /etc/snmp/snmp.conf\nRUN virtualenv --python=python3.5 /opt/graphite \\\n && . /opt/graphite/bin/activate \\\n && pip install cffi==1.15.1 scandir==1.10.0 --no-cache-dir \\\n && pip install https://github.com/graphite-project/whisper/archive/${GRAPHITE_VERSION}.zip https://github.com/graphite-project/carbon/archive/${GRAPHITE_VERSION}.zip https://github.com/graphite-project/graphite-web/archive/${GRAPHITE_VERSION}.zip --no-cache-dir --no-binary=:all: \\\n && deactivate\nCOPY config/carbon.conf /opt/graphite/conf/carbon.conf\nRUN cd /opt/graphite/conf/ \\\n && cp storage-schemas.conf.example storage-schemas.conf \\\n && cp graphite.wsgi.example graphite.wsgi \\\n && cp storage-aggregation.conf.example storage-aggregation.conf \\\n && sed -i 's/import sys/import sys, site/' graphite.wsgi \\\n && sed -i '/import sys, site/a\\site.addsitedir(\"/opt/graphite/lib/python3.5/site-packages\")' graphite.wsgi \\\n && cd /opt/graphite/webapp/graphite/ \\\n && cp local_settings.py.example local_settings.py \\\n && . /opt/graphite/bin/activate \\\n && export PYTHONPATH=\"/opt/graphite/lib/:/opt/graphite/webapp/\" \\\n && django-admin.py migrate --settings=graphite.settings --run-syncdb \\\n && unset PYTHONPATH \\\n && deactivate \\\n && chown -R www-data:www-data /opt/graphite/storage \\\n && cd /etc/apache2/sites-available/ \\\n && cp /opt/graphite/examples/example-graphite-vhost.conf graphite.conf \\\n && sed -i 's/80/8080/' graphite.conf \\\n && sed -i 's;WSGISocketPrefix run/wsgi;WSGISocketPrefix /var/run/apache2/wsgi;' graphite.conf \\\n && a2ensite graphite \\\n && echo \"Listen 8080\" >> /etc/apache2/ports.conf\nRUN mkdir -p /var/spool/nagios/graphios \\\n && chown -R ${NAGIOS_USER}:${NAGIOS_GROUP} /var/spool/nagios \\\n && pip install graphios==${GRAPHIOS_VERSION} --no-cache-dir \\\n && sed -i 's/^enable_carbon.*/enable_carbon = True/' /etc/graphios/graphios.cfg \\\n && sed -i 's/^debug.*/debug = False/' /etc/graphios/graphios.cfg \\\n && sed -i 's/^debug.*/debug = False/' /usr/local/bin/graphios.py \\\n && sed -i 's;^config_file.*;config_file = \"/etc/graphios/graphios.cfg\";' /usr/local/bin/graphios.py \\\n && cd \"${NAGIOS_HOME}/etc/\" \\\n && pynag config --remove cfg_dir --old_value=\"${NAGIOS_HOME}/etc/objects\" \\\n && pynag config --set service_perfdata_file_processing_command=graphite_perf_service \\\n && pynag config --set host_perfdata_file_processing_command=graphite_perf_host \\\n && pynag update --force SET _graphitepostfix=ping WHERE host_name=localhost AND service_description='PING' \\\n && pynag update --force SET _graphitepostfix=loadaverage WHERE host_name=localhost AND service_description='Current Load' \\\n && echo 'define command {\\n command_name graphite_perf_host\\n command_line /bin/mv /var/spool/nagios/graphios/host-perfdata /var/spool/nagios/graphios/host-perfdata.$TIMET$\\n}\\n\\ndefine command {\\n command_name graphite_perf_service\\n command_line /bin/mv /var/spool/nagios/graphios/service-perfdata /var/spool/nagios/graphios/service-perfdata.$TIMET$\\n}\\n\\n' >> objects/commands.cfg\n#   Grafana default mirror site: deb https://packagecloud.io/grafana/stable/debian/ jessie main\nRUN echo \"deb https://mirrors.tuna.tsinghua.edu.cn/grafana/apt/ jessie main\" >> /etc/apt/sources.list \\\n && curl https://packagecloud.io/gpg.key | sudo apt-key add - \\\n && apt-get update \\\n && apt-get install --no-install-recommends grafana=${GRAFANA_VERSION} -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n#   https://github.com/NagiosEnterprises/ndoutils/archive/ndoutils-${NDOUTILS_VERSION}.zip\n#   http://192.168.120.155:8000/ethnchao/ndoutils/-/archive/ndoutils-${NDOUTILS_VERSION}/ndoutils-ndoutils-${NDOUTILS_VERSION}.zip\nRUN cd /tmp \\\n && curl -L https://github.com/NagiosEnterprises/ndoutils/archive/ndoutils-${NDOUTILS_VERSION}.zip -o ndoutils.zip \\\n && unzip ndoutils.zip \\\n && mv ndoutils-* ndoutils \\\n && cd ndoutils \\\n && ./configure --prefix=\"${NAGIOS_HOME}\" --enable-mysql \\\n && make all \\\n && make install \\\n && cp config/ndo2db.cfg-sample ${NAGIOS_HOME}/etc/ndo2db.cfg-sample \\\n && cp db/mysql.sql ${NAGIOS_HOME}/share/mysql-createdb.sql \\\n && sed -i 's/ENGINE=MyISAM/ENGINE=MyISAM DEFAULT CHARSET=utf8/g' ${NAGIOS_HOME}/share/mysql-createdb.sql \\\n && cp config/ndomod.cfg-sample \"${NAGIOS_HOME}\"/etc/ndomod.cfg \\\n && chmod 666 ${NAGIOS_HOME}/etc/ndomod.cfg \\\n && rm -rf /tmp/ndoutils /tmp/ndoutils.zip\nRUN cd /tmp/ \\\n && curl -L https://github.com/vishnubob/wait-for-it/archive/master.zip -o wait-for-it.zip \\\n && unzip wait-for-it.zip \\\n && mv wait-for-it-master/wait-for-it.sh /usr/bin/wait-for-it \\\n && chmod +x /usr/bin/wait-for-it \\\n && rm -rf /tmp/wait-for-it-master /tmp/wait-for-it.zip\n#   https://github.com/NagiosEnterprises/nrdp/archive/${NRDP_VERSION}.zip\n#   http://192.168.120.155:8000/ethnchao/nrdp/-/archive/nrdp-${NRDP_VERSION}/nrdp-nrdp-${NRDP_VERSION}.zip\nRUN cd /usr/local/ \\\n && curl -L https://github.com/NagiosEnterprises/nrdp/archive/${NRDP_VERSION}.zip -o nrdp.zip \\\n && unzip nrdp.zip \\\n && rm -f nrdp.zip \\\n && mv nrdp-* nrdp \\\n && chown -R ${NAGIOS_USER}:${NAGIOS_GROUP} nrdp \\\n && mv nrdp/server/config.inc.php nrdp/server/config.inc.php.example \\\n && echo \"<Directory \\\"/usr/local/nrdp\\\">\\n Options None\\n AllowOverride None\\n Require all granted\\n</Directory>\\nAlias /nrdp \\\"/usr/local/nrdp/server\\\"\\n\" > /etc/apache2/sites-available/nrdp.conf \\\n && a2ensite nrdp\n#   https://github.com/opinkerfi/okconfig/archive/okconfig-${OKCONFIG_VERSION}.zip\n#   http://192.168.120.155:8000/ethnchao/okconfig/-/archive/okconfig-${OKCONFIG_VERSION}/okconfig-okconfig-${OKCONFIG_VERSION}.zip\nRUN cd /tmp \\\n && curl -L https://github.com/opinkerfi/okconfig/archive/okconfig-${OKCONFIG_VERSION}.zip -o okconfig.zip \\\n && unzip okconfig.zip \\\n && mv okconfig-* okconfig \\\n && cd okconfig \\\n && pip install . --no-cache-dir \\\n && cp -f etc/okconfig.conf /etc/okconfig.conf \\\n && mkdir -p ${NAGIOS_HOME}/etc/okconfig/ /data/example \\\n && chown -R ${NAGIOS_USER}:${NAGIOS_GROUP} ${NAGIOS_HOME} /data/example \\\n && sed -i \"s,/etc/nagios/,${NAGIOS_HOME}/etc/,\" /etc/okconfig.conf \\\n && sed -i \"s,${NAGIOS_HOME}/etc/okconfig/examples,/data/example,\" /etc/okconfig.conf \\\n && cd /usr/share/okconfig \\\n && find ./templates/ -name '*cfg*' -type f -exec sed -i 's/normal_check_interval/check_interval/' {}\nCOPY okconfig/install_ncpa.bat /usr/share/okconfig/client/windows/install.bat.example\nCOPY okconfig/install_nsclient.sh /usr/share/okconfig/client/windows/install_nsclient.sh\nCOPY okconfig/install_okagent.sh /usr/share/okconfig/client/linux/install_okagent.sh.example\nRUN cd /usr/share/okconfig/client/ \\\n && mkdir -p windows/ncpa/ \\\n && curl -L https://assets.nagios.com/downloads/ncpa/archived/${NCPA_VERSION}/ncpa-${NCPA_VERSION}.exe -o windows/ncpa/ncpa.exe \\\n && chmod +x windows/install_nsclient.sh linux/install_okagent.sh.example \\\n && curl -L http://ftp.twaren.net/Linux/OpenSuSE/repositories/home:/uibmz:/opsi:/opsi40-experimental/Univention_4.1/amd64/winexe_1.00.1-1_amd64.deb -o /tmp/winexe.deb \\\n && dpkg -i /tmp/winexe.deb \\\n && rm -f /tmp/winexe.deb\nRUN cd /tmp \\\n && curl http://mathias-kettner.com/download/mk-livestatus-${MK_LIVESTATUS_VERSION}.tar.gz -o mk-livestatus.tar.gz \\\n && tar zxf mk-livestatus.tar.gz \\\n && rm -f mk-livestatus.tar.gz \\\n && mv mk-livestatus* mk-livestatus \\\n && cd mk-livestatus \\\n && ./configure --with-nagios4 \\\n && make \\\n && make install \\\n && rm -rf /tmp/mk-livestatus\n#   https://github.com/opinkerfi/adagios/archive/adagios-${ADAGIOS_VERSION}.zip\n#   http://192.168.120.155:8000/ethnchao/adagios/-/archive/adagios-${ADAGIOS_VERSION}/adagios-adagios-${ADAGIOS_VERSION}.zip\nRUN virtualenv /opt/adagios \\\n && . /opt/adagios/bin/activate \\\n && cd /tmp \\\n && curl -L https://github.com/opinkerfi/adagios/archive/adagios-${ADAGIOS_VERSION}.zip -o adagios.zip \\\n && unzip adagios.zip \\\n && mv adagios-* adagios \\\n && cd adagios \\\n && pip install . https://github.com/pynag/pynag/archive/pynag-${PYNAG_VERSION}.zip --no-cache-dir --no-binary=:all: -r requirements.txt \\\n && deactivate \\\n && cp -r adagios/etc/adagios/ /etc/ \\\n && rm -rf /tmp/adagios /tmp/adagios.zip\nRUN cd /etc/adagios/ \\\n && sed -i 's,^enable_pnp4nagios.*,enable_pnp4nagios=False,' adagios.conf \\\n && sed -i \"s,^nagios_config.*,nagios_config=\\\"${NAGIOS_HOME}/etc/nagios.cfg\\\",\" adagios.conf \\\n && sed -i \"s,^nagios_binary.*,nagios_binary=\\\"${NAGIOS_HOME}/bin/nagios\\\",\" adagios.conf \\\n && sed -i \"s,^livestatus_path.*,livestatus_path=\\\"${NAGIOS_HOME}/var/livestatus\\\",\" adagios.conf \\\n && sed -i \"s,^destination_directory.*,destination_directory=\\\"${NAGIOS_HOME}/etc/adagios/\\\",\" adagios.conf \\\n && mkdir -p ${NAGIOS_HOME}/etc/adagios/ /var/lib/adagios/ \\\n && cd ${NAGIOS_HOME}/etc \\\n && git init \\\n && git config user.name \"nagios\" \\\n && git config user.email \"nagios@localhost.com\" \\\n && git add * \\\n && git commit -m \"Initial commit\" \\\n && pynag config --set cfg_dir=\"${NAGIOS_HOME}/etc/adagios\" \\\n && pynag config --append \"broker_module=/usr/local/lib/mk-livestatus/livestatus.o ${NAGIOS_HOME}/var/livestatus\" \\\n && chown -R ${NAGIOS_USER}:${NAGIOS_GROUP} /etc/adagios/ ${NAGIOS_HOME}/ /var/lib/adagios/ \\\n && cd /opt/adagios/local/lib/python2.7/site-packages/adagios/ \\\n && cp wsgi.py wsgi.py.origin \\\n && sed -i 's/import os/import os, site/' wsgi.py \\\n && sed -i '/import os, site/a\\site.addsitedir(\"/opt/adagios/lib/python2.7/site-packages\")' wsgi.py \\\n && echo \"${NAGIOS_USER} ALL=(ALL) NOPASSWD: ALL\" > /etc/sudoers.d/adagios \\\n && chmod 0440 /etc/sudoers.d/adagios \\\n && echo \"WSGISocketPrefix /var/run/apache2/wsgi \\nWSGIDaemonProcess adagios user=${NAGIOS_USER} group=${NAGIOS_GROUP} processes=1 threads=25 \\nWSGIScriptAlias /adagios /opt/adagios/lib/python2.7/site-packages/adagios/wsgi.py \\nAlias /adagios/media /opt/adagios/lib/python2.7/site-packages/adagios/media \\n<Location /adagios> \\n WSGIProcessGroup adagios \\n AuthName \\\"Adagios Access\\\" \\n AuthType Basic \\n AuthUserFile ${NAGIOS_HOME}/etc/htpasswd.users \\n Require valid-user \\n RedirectMatch ^/adagios$ /adagios/ \\n</Location> \\n\" > /etc/apache2/sites-available/adagios.conf \\\n && a2ensite adagios\nCOPY run.sh /run.sh\nCOPY config/sv/apache/run /etc/sv/apache/run\nCOPY config/sv/carbon/run /etc/sv/carbon/run\nCOPY config/sv/postfix/run /etc/sv/postfix/run\nCOPY config/sv/graphios/run /etc/sv/graphios/run\nRUN rm -rf /etc/sv/getty-5 \\\n && chmod +x /run.sh /etc/sv/apache/run /etc/sv/graphios/run /etc/sv/postfix/run /etc/sv/carbon/run \\\n && ln -s /etc/sv/* /etc/service \\\n && cp /etc/services /var/spool/postfix/etc/ \\\n && ln -sf \"/usr/share/zoneinfo/Asia/Shanghai\" /etc/localtime\nENV APACHE_LOCK_DIR=\"/var/run\"\nENV APACHE_LOG_DIR=\"/var/log/apache2\"\nEXPOSE 80/tcp\nEXPOSE 3000/tcp\nENTRYPOINT [\"/run.sh\"]\nCMD [\"main\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM phusion/baseimage:latest\nMAINTAINER ethnchao <maicheng.linyi@gmail.com>\nENV NAGIOS_HOME=\"/usr/local/nagios\"\nENV NAGIOS_USER=\"nagios\"\nENV NAGIOS_GROUP=\"nagcmd\"\nENV DEBIAN_FRONTEND=\"noninteractive\"\nENV NRDP_TOKEN=\"culaio239ncgklak\"\nENV NCPA_TOKEN=\"mfasjlk1asjd7flj3ly\"\nENV MYSQL_USER=\"nagios\"\nENV MYSQL_PASSWORD=\"nagios\"\nENV MYSQL_ADDRESS=\"nagios_mysql\"\nENV MYSQL_DATABASE=\"nagios\"\nENV ADAGIOS_VERSION=\"1.6.3-2\"\nENV GRAPHIOS_VERSION=\"2.0.3\"\nENV GRAPHITE_VERSION=\"1.1.3\"\nENV GRAFANA_VERSION=\"5.1.3\"\nENV MK_LIVESTATUS_VERSION=\"1.2.8p20\"\nENV NAGIOS_VERSION=\"4.3.4\"\nENV NAGIOS_PLUGINS_VERSION=\"2.2.1\"\nENV NCPA_VERSION=\"2.1.3\"\nENV NDOUTILS_VERSION=\"2.1.3\"\nENV NRDP_VERSION=\"1.5.2\"\nENV NRPE_VERSION=\"3.2.1\"\nENV OKCONFIG_VERSION=\"1.3.2-1\"\nENV PYNAG_VERSION=\"0.9.1-1\"\n#  Remove below if you want use default apt mirror sites\nADD config/apt-sources.list /etc/apt/sources.list\n#  Remove below if you want use default pip mirror sites\nADD config/pip.conf /root/.config/pip/pip.conf\nRUN apt-get update \\\n && apt-get install --no-install-recommends automake apache2 apache2-utils autoconf bc build-essential bsd-mailx dc fping gawk gettext gperf git iputils-ping libapache2-mod-php libgd2-xpm-dev libmcrypt-dev libssl-dev libcairo2-dev libffi-dev libapache2-mod-wsgi libmysql++-dev libmysqlclient-dev libnet-snmp-perl m4 mysql-client netcat python-pip python-dev python3-dev parallel php7.0-xml postfix runit smbclient snmp snmpd snmp-mibs-downloader sudo unzip -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* \\\n && pip install pip distribute virtualenv --upgrade --no-cache-dir\nRUN (id -u $NAGIOS_USER || useradd --system -d $NAGIOS_HOME $NAGIOS_USER ) \\\n && (egrep -i \"^${NAGIOS_GROUP}\" /etc/group || groupadd $NAGIOS_GROUP ) \\\n && usermod -a -G $NAGIOS_GROUP $NAGIOS_USER \\\n && usermod -a -G $NAGIOS_GROUP www-data\nRUN pip install https://github.com/pynag/pynag/tarball/master --no-cache-dir --no-binary=:all:\n#  https://github.com/NagiosEnterprises/nagioscore/archive/nagios-${NAGIOS_VERSION}.zip\n#  http://192.168.120.155:8000/ethnchao/nagioscore/-/archive/nagios-${NAGIOS_VERSION}/nagioscore-nagios-${NAGIOS_VERSION}.zip\nRUN cd /tmp \\\n && curl -L https://github.com/NagiosEnterprises/nagioscore/archive/nagios-${NAGIOS_VERSION}.zip -o nagioscore.zip \\\n && unzip nagioscore.zip \\\n && mv nagioscore-* nagioscore \\\n && cd nagioscore \\\n && ./configure --prefix=${NAGIOS_HOME} --enable-event-broker --with-command-group=${NAGIOS_GROUP} --with-nagios-user=${NAGIOS_USER} --with-nagios-group=${NAGIOS_GROUP} \\\n && make all \\\n && make install \\\n && make install-config \\\n && make install-commandmode \\\n && make install-webconf \\\n && make install-init \\\n && rm -rf /tmp/nagioscore /tmp/nagioscore.zip\nRUN mkdir -p ${NAGIOS_HOME}/etc/mount /data/plugin \\\n && chown -R ${NAGIOS_USER}:${NAGIOS_GROUP} /data ${NAGIOS_HOME} \\\n && cd /etc/apache2/sites-available \\\n && export DOC_ROOT=\"DocumentRoot $( echo $NAGIOS_HOME/share ;)\" \\\n && sed -i \"s,DocumentRoot.*,$DOC_ROOT,\" 000-default.conf \\\n && sed -i \"s,</VirtualHost>,<IfDefine ENABLE_USR_LIB_CGI_BIN>\\nScriptAlias /cgi-bin/ ${NAGIOS_HOME}/sbin/\\n</IfDefine>\\n</VirtualHost>,\" 000-default.conf \\\n && a2enmod cgi \\\n && pynag delete --force WHERE host_name=localhost AND service_description=SSH \\\n && cd ${NAGIOS_HOME}/etc/ \\\n && echo \"$USER2$=/data/plugin\" >> resource.cfg \\\n && pynag config --append \"cfg_dir=${NAGIOS_HOME}/etc/mount\" \\\n && htpasswd -c -b -s htpasswd.users nagiosadmin nagios \\\n && sed -i 's,/bin/mail,/usr/bin/mail,' ${NAGIOS_HOME}/etc/objects/commands.cfg \\\n && echo 'define command{\\n command_name check_nrpe\\n command_line $USER1$/check_nrpe -H $HOSTADDRESS$ -c $ARG1$\\n}\\n\\ndefine command{\\n command_name check_dummy\\n command_line $USER1$/check_dummy $ARG1$\\n}\\n\\n' >> objects/commands.cfg\n#  https://github.com/nagios-plugins/nagios-plugins/archive/release-${NAGIOS_PLUGINS_VERSION}.zip\n#  http://192.168.120.155:8000/ethnchao/nagios-plugins/-/archive/release-${NAGIOS_PLUGINS_VERSION}/nagios-plugins-release-${NAGIOS_PLUGINS_VERSION}.zip\nRUN cd /tmp \\\n && curl -L https://github.com/nagios-plugins/nagios-plugins/archive/release-${NAGIOS_PLUGINS_VERSION}.zip -o nagios-plugins.zip \\\n && unzip nagios-plugins.zip \\\n && mv nagios-plugins-* nagios-plugins \\\n && cd nagios-plugins \\\n && ./tools/setup \\\n && ./configure --prefix=${NAGIOS_HOME} \\\n && make \\\n && make install \\\n && cd /tmp \\\n && rm -rf /tmp/nagios-plugins /tmp/nagios-plugins.zip\n#  https://github.com/NagiosEnterprises/nrpe/archive/nrpe-${NRPE_VERSION}.zip\n#  http://192.168.120.155:8000/ethnchao/nrpe/-/archive/nrpe-${NRPE_VERSION}/nrpe-nrpe-${NRPE_VERSION}.zip\nRUN cd /tmp \\\n && curl -L https://github.com/NagiosEnterprises/nrpe/archive/nrpe-${NRPE_VERSION}.zip -o nrpe.zip \\\n && unzip nrpe.zip \\\n && mv nrpe-* nrpe \\\n && cd nrpe \\\n && ./configure --prefix=${NAGIOS_HOME} --with-nagios-user=${NAGIOS_USER} --with-nagios-group=${NAGIOS_GROUP} \\\n && make check_nrpe \\\n && make install-plugin \\\n && rm -rf /tmp/nrpe /tmp/nrpe.zip\nRUN mkdir -p /usr/share/snmp/mibs \\\n && ln -s /usr/share/snmp/mibs ${NAGIOS_HOME}/libexec/mibs \\\n && download-mibs \\\n && echo \"mibs +ALL\" > /etc/snmp/snmp.conf\nRUN virtualenv --python=python3.5 /opt/graphite \\\n && . /opt/graphite/bin/activate \\\n && pip install cffi scandir --no-cache-dir \\\n && pip install https://github.com/graphite-project/whisper/archive/${GRAPHITE_VERSION}.zip https://github.com/graphite-project/carbon/archive/${GRAPHITE_VERSION}.zip https://github.com/graphite-project/graphite-web/archive/${GRAPHITE_VERSION}.zip --no-cache-dir --no-binary=:all: \\\n && deactivate\nADD config/carbon.conf /opt/graphite/conf/carbon.conf\nRUN cd /opt/graphite/conf/ \\\n && cp storage-schemas.conf.example storage-schemas.conf \\\n && cp graphite.wsgi.example graphite.wsgi \\\n && cp storage-aggregation.conf.example storage-aggregation.conf \\\n && sed -i 's/import sys/import sys, site/' graphite.wsgi \\\n && sed -i '/import sys, site/a\\site.addsitedir(\"/opt/graphite/lib/python3.5/site-packages\")' graphite.wsgi \\\n && cd /opt/graphite/webapp/graphite/ \\\n && cp local_settings.py.example local_settings.py \\\n && . /opt/graphite/bin/activate \\\n && export PYTHONPATH=\"/opt/graphite/lib/:/opt/graphite/webapp/\" \\\n && django-admin.py migrate --settings=graphite.settings --run-syncdb \\\n && unset PYTHONPATH \\\n && deactivate \\\n && chown -R www-data:www-data /opt/graphite/storage \\\n && cd /etc/apache2/sites-available/ \\\n && cp /opt/graphite/examples/example-graphite-vhost.conf graphite.conf \\\n && sed -i 's/80/8080/' graphite.conf \\\n && sed -i 's;WSGISocketPrefix run/wsgi;WSGISocketPrefix /var/run/apache2/wsgi;' graphite.conf \\\n && a2ensite graphite \\\n && echo \"Listen 8080\" >> /etc/apache2/ports.conf\nRUN mkdir -p /var/spool/nagios/graphios \\\n && chown -R ${NAGIOS_USER}:${NAGIOS_GROUP} /var/spool/nagios \\\n && pip install graphios==${GRAPHIOS_VERSION} --no-cache-dir \\\n && sed -i 's/^enable_carbon.*/enable_carbon = True/' /etc/graphios/graphios.cfg \\\n && sed -i 's/^debug.*/debug = False/' /etc/graphios/graphios.cfg \\\n && sed -i 's/^debug.*/debug = False/' /usr/local/bin/graphios.py \\\n && sed -i 's;^config_file.*;config_file = \"/etc/graphios/graphios.cfg\";' /usr/local/bin/graphios.py \\\n && cd \"${NAGIOS_HOME}/etc/\" \\\n && pynag config --remove cfg_dir --old_value=\"${NAGIOS_HOME}/etc/objects\" \\\n && pynag config --set service_perfdata_file_processing_command=graphite_perf_service \\\n && pynag config --set host_perfdata_file_processing_command=graphite_perf_host \\\n && pynag update --force SET _graphitepostfix=ping WHERE host_name=localhost AND service_description='PING' \\\n && pynag update --force SET _graphitepostfix=loadaverage WHERE host_name=localhost AND service_description='Current Load' \\\n && echo 'define command {\\n command_name graphite_perf_host\\n command_line /bin/mv /var/spool/nagios/graphios/host-perfdata /var/spool/nagios/graphios/host-perfdata.$TIMET$\\n}\\n\\ndefine command {\\n command_name graphite_perf_service\\n command_line /bin/mv /var/spool/nagios/graphios/service-perfdata /var/spool/nagios/graphios/service-perfdata.$TIMET$\\n}\\n\\n' >> objects/commands.cfg\n#  Grafana default mirror site: deb https://packagecloud.io/grafana/stable/debian/ jessie main\nRUN echo \"deb https://mirrors.tuna.tsinghua.edu.cn/grafana/apt/ jessie main\" >> /etc/apt/sources.list \\\n && curl https://packagecloud.io/gpg.key | sudo apt-key add - \\\n && apt-get update \\\n && apt-get install --no-install-recommends grafana=${GRAFANA_VERSION} -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n#  https://github.com/NagiosEnterprises/ndoutils/archive/ndoutils-${NDOUTILS_VERSION}.zip\n#  http://192.168.120.155:8000/ethnchao/ndoutils/-/archive/ndoutils-${NDOUTILS_VERSION}/ndoutils-ndoutils-${NDOUTILS_VERSION}.zip\nRUN cd /tmp \\\n && curl -L https://github.com/NagiosEnterprises/ndoutils/archive/ndoutils-${NDOUTILS_VERSION}.zip -o ndoutils.zip \\\n && unzip ndoutils.zip \\\n && mv ndoutils-* ndoutils \\\n && cd ndoutils \\\n && ./configure --prefix=\"${NAGIOS_HOME}\" --enable-mysql \\\n && make all \\\n && make install \\\n && cp config/ndo2db.cfg-sample ${NAGIOS_HOME}/etc/ndo2db.cfg-sample \\\n && cp db/mysql.sql ${NAGIOS_HOME}/share/mysql-createdb.sql \\\n && sed -i 's/ENGINE=MyISAM/ENGINE=MyISAM DEFAULT CHARSET=utf8/g' ${NAGIOS_HOME}/share/mysql-createdb.sql \\\n && cp config/ndomod.cfg-sample \"${NAGIOS_HOME}\"/etc/ndomod.cfg \\\n && chmod 666 ${NAGIOS_HOME}/etc/ndomod.cfg \\\n && rm -rf /tmp/ndoutils /tmp/ndoutils.zip\nRUN cd /tmp/ \\\n && curl -L https://github.com/vishnubob/wait-for-it/archive/master.zip -o wait-for-it.zip \\\n && unzip wait-for-it.zip \\\n && mv wait-for-it-master/wait-for-it.sh /usr/bin/wait-for-it \\\n && chmod +x /usr/bin/wait-for-it \\\n && rm -rf /tmp/wait-for-it-master /tmp/wait-for-it.zip\n#  https://github.com/NagiosEnterprises/nrdp/archive/${NRDP_VERSION}.zip\n#  http://192.168.120.155:8000/ethnchao/nrdp/-/archive/nrdp-${NRDP_VERSION}/nrdp-nrdp-${NRDP_VERSION}.zip\nRUN cd /usr/local/ \\\n && curl -L https://github.com/NagiosEnterprises/nrdp/archive/${NRDP_VERSION}.zip -o nrdp.zip \\\n && unzip nrdp.zip \\\n && rm -f nrdp.zip \\\n && mv nrdp-* nrdp \\\n && chown -R ${NAGIOS_USER}:${NAGIOS_GROUP} nrdp \\\n && mv nrdp/server/config.inc.php nrdp/server/config.inc.php.example \\\n && echo \"<Directory \\\"/usr/local/nrdp\\\">\\n Options None\\n AllowOverride None\\n Require all granted\\n</Directory>\\nAlias /nrdp \\\"/usr/local/nrdp/server\\\"\\n\" > /etc/apache2/sites-available/nrdp.conf \\\n && a2ensite nrdp\n#  https://github.com/opinkerfi/okconfig/archive/okconfig-${OKCONFIG_VERSION}.zip\n#  http://192.168.120.155:8000/ethnchao/okconfig/-/archive/okconfig-${OKCONFIG_VERSION}/okconfig-okconfig-${OKCONFIG_VERSION}.zip\nRUN cd /tmp \\\n && curl -L https://github.com/opinkerfi/okconfig/archive/okconfig-${OKCONFIG_VERSION}.zip -o okconfig.zip \\\n && unzip okconfig.zip \\\n && mv okconfig-* okconfig \\\n && cd okconfig \\\n && pip install . --no-cache-dir \\\n && cp -f etc/okconfig.conf /etc/okconfig.conf \\\n && mkdir -p ${NAGIOS_HOME}/etc/okconfig/ /data/example \\\n && chown -R ${NAGIOS_USER}:${NAGIOS_GROUP} ${NAGIOS_HOME} /data/example \\\n && sed -i \"s,/etc/nagios/,${NAGIOS_HOME}/etc/,\" /etc/okconfig.conf \\\n && sed -i \"s,${NAGIOS_HOME}/etc/okconfig/examples,/data/example,\" /etc/okconfig.conf \\\n && cd /usr/share/okconfig \\\n && find ./templates/ -name '*cfg*' -type f -exec sed -i 's/normal_check_interval/check_interval/' {} ; \\\n && okconfig init \\\n && okconfig verify \\\n && rm -rf /tmp/okconfig /tmp/okconfig.zip\nADD okconfig/install_ncpa.bat /usr/share/okconfig/client/windows/install.bat.example\nADD okconfig/install_nsclient.sh /usr/share/okconfig/client/windows/install_nsclient.sh\nADD okconfig/install_okagent.sh /usr/share/okconfig/client/linux/install_okagent.sh.example\nRUN cd /usr/share/okconfig/client/ \\\n && mkdir -p windows/ncpa/ \\\n && curl -L https://assets.nagios.com/downloads/ncpa/archived/${NCPA_VERSION}/ncpa-${NCPA_VERSION}.exe -o windows/ncpa/ncpa.exe \\\n && chmod +x windows/install_nsclient.sh linux/install_okagent.sh.example \\\n && curl -L http://ftp.twaren.net/Linux/OpenSuSE/repositories/home:/uibmz:/opsi:/opsi40-experimental/Univention_4.1/amd64/winexe_1.00.1-1_amd64.deb -o /tmp/winexe.deb \\\n && dpkg -i /tmp/winexe.deb \\\n && rm -f /tmp/winexe.deb\nRUN cd /tmp \\\n && curl http://mathias-kettner.com/download/mk-livestatus-${MK_LIVESTATUS_VERSION}.tar.gz -o mk-livestatus.tar.gz \\\n && tar zxf mk-livestatus.tar.gz \\\n && rm -f mk-livestatus.tar.gz \\\n && mv mk-livestatus* mk-livestatus \\\n && cd mk-livestatus \\\n && ./configure --with-nagios4 \\\n && make \\\n && make install \\\n && rm -rf /tmp/mk-livestatus\n#  https://github.com/opinkerfi/adagios/archive/adagios-${ADAGIOS_VERSION}.zip\n#  http://192.168.120.155:8000/ethnchao/adagios/-/archive/adagios-${ADAGIOS_VERSION}/adagios-adagios-${ADAGIOS_VERSION}.zip\nRUN virtualenv /opt/adagios \\\n && . /opt/adagios/bin/activate \\\n && cd /tmp \\\n && curl -L https://github.com/opinkerfi/adagios/archive/adagios-${ADAGIOS_VERSION}.zip -o adagios.zip \\\n && unzip adagios.zip \\\n && mv adagios-* adagios \\\n && cd adagios \\\n && pip install . https://github.com/pynag/pynag/archive/pynag-${PYNAG_VERSION}.zip --no-cache-dir --no-binary=:all: -r requirements.txt \\\n && deactivate \\\n && cp -r adagios/etc/adagios/ /etc/ \\\n && rm -rf /tmp/adagios /tmp/adagios.zip\nRUN cd /etc/adagios/ \\\n && sed -i 's,^enable_pnp4nagios.*,enable_pnp4nagios=False,' adagios.conf \\\n && sed -i \"s,^nagios_config.*,nagios_config=\\\"${NAGIOS_HOME}/etc/nagios.cfg\\\",\" adagios.conf \\\n && sed -i \"s,^nagios_binary.*,nagios_binary=\\\"${NAGIOS_HOME}/bin/nagios\\\",\" adagios.conf \\\n && sed -i \"s,^livestatus_path.*,livestatus_path=\\\"${NAGIOS_HOME}/var/livestatus\\\",\" adagios.conf \\\n && sed -i \"s,^destination_directory.*,destination_directory=\\\"${NAGIOS_HOME}/etc/adagios/\\\",\" adagios.conf \\\n && mkdir -p ${NAGIOS_HOME}/etc/adagios/ /var/lib/adagios/ \\\n && cd ${NAGIOS_HOME}/etc \\\n && git init \\\n && git config user.name \"nagios\" \\\n && git config user.email \"nagios@localhost.com\" \\\n && git add * \\\n && git commit -m \"Initial commit\" \\\n && pynag config --set cfg_dir=\"${NAGIOS_HOME}/etc/adagios\" \\\n && pynag config --append \"broker_module=/usr/local/lib/mk-livestatus/livestatus.o ${NAGIOS_HOME}/var/livestatus\" \\\n && chown -R ${NAGIOS_USER}:${NAGIOS_GROUP} /etc/adagios/ ${NAGIOS_HOME}/ /var/lib/adagios/ \\\n && cd /opt/adagios/local/lib/python2.7/site-packages/adagios/ \\\n && cp wsgi.py wsgi.py.origin \\\n && sed -i 's/import os/import os, site/' wsgi.py \\\n && sed -i '/import os, site/a\\site.addsitedir(\"/opt/adagios/lib/python2.7/site-packages\")' wsgi.py \\\n && echo \"${NAGIOS_USER} ALL=(ALL) NOPASSWD: ALL\" > /etc/sudoers.d/adagios \\\n && chmod 0440 /etc/sudoers.d/adagios \\\n && echo \"WSGISocketPrefix /var/run/apache2/wsgi \\nWSGIDaemonProcess adagios user=${NAGIOS_USER} group=${NAGIOS_GROUP} processes=1 threads=25 \\nWSGIScriptAlias /adagios /opt/adagios/lib/python2.7/site-packages/adagios/wsgi.py \\nAlias /adagios/media /opt/adagios/lib/python2.7/site-packages/adagios/media \\n<Location /adagios> \\n WSGIProcessGroup adagios \\n AuthName \\\"Adagios Access\\\" \\n AuthType Basic \\n AuthUserFile ${NAGIOS_HOME}/etc/htpasswd.users \\n Require valid-user \\n RedirectMatch ^/adagios$ /adagios/ \\n</Location> \\n\" > /etc/apache2/sites-available/adagios.conf \\\n && a2ensite adagios\nADD run.sh /run.sh\nADD config/sv/apache/run /etc/sv/apache/run\nADD config/sv/carbon/run /etc/sv/carbon/run\nADD config/sv/postfix/run /etc/sv/postfix/run\nADD config/sv/graphios/run /etc/sv/graphios/run\nRUN rm -rf /etc/sv/getty-5 \\\n && chmod +x /run.sh /etc/sv/apache/run /etc/sv/graphios/run /etc/sv/postfix/run /etc/sv/carbon/run \\\n && ln -s /etc/sv/* /etc/service \\\n && cp /etc/services /var/spool/postfix/etc/ \\\n && ln -sf \"/usr/share/zoneinfo/Asia/Shanghai\" /etc/localtime\nENV APACHE_LOCK_DIR=\"/var/run\"\nENV APACHE_LOG_DIR=\"/var/log/apache2\"\nEXPOSE 80/tcp\nEXPOSE 3000/tcp\nENTRYPOINT [\"/run.sh\"]\nCMD [\"main\"]\n","injectedSmells":[],"originalDockerfileHash":"2e92f4c3e76352a4013ebd8dd77b23f8","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM phusion/baseimage:latest\nMAINTAINER ethnchao <maicheng.linyi@gmail.com>\nENV NAGIOS_HOME=\"/usr/local/nagios\"\nENV NAGIOS_USER=\"nagios\"\nENV NAGIOS_GROUP=\"nagcmd\"\nENV DEBIAN_FRONTEND=\"noninteractive\"\nENV NRDP_TOKEN=\"culaio239ncgklak\"\nENV NCPA_TOKEN=\"mfasjlk1asjd7flj3ly\"\nENV MYSQL_USER=\"nagios\"\nENV MYSQL_PASSWORD=\"nagios\"\nENV MYSQL_ADDRESS=\"nagios_mysql\"\nENV MYSQL_DATABASE=\"nagios\"\nENV ADAGIOS_VERSION=\"1.6.3-2\"\nENV GRAPHIOS_VERSION=\"2.0.3\"\nENV GRAPHITE_VERSION=\"1.1.3\"\nENV GRAFANA_VERSION=\"5.1.3\"\nENV MK_LIVESTATUS_VERSION=\"1.2.8p20\"\nENV NAGIOS_VERSION=\"4.3.4\"\nENV NAGIOS_PLUGINS_VERSION=\"2.2.1\"\nENV NCPA_VERSION=\"2.1.3\"\nENV NDOUTILS_VERSION=\"2.1.3\"\nENV NRDP_VERSION=\"1.5.2\"\nENV NRPE_VERSION=\"3.2.1\"\nENV OKCONFIG_VERSION=\"1.3.2-1\"\nENV PYNAG_VERSION=\"0.9.1-1\"\n#   Remove below if you want use default apt mirror sites\nADD config/apt-sources.list /etc/apt/sources.list\n#   Remove below if you want use default pip mirror sites\nADD config/pip.conf /root/.config/pip/pip.conf\nRUN apt-get update \\\n && apt-get install --no-install-recommends automake apache2 apache2-utils autoconf bc build-essential bsd-mailx dc fping gawk gettext gperf git iputils-ping libapache2-mod-php libgd2-xpm-dev libmcrypt-dev libssl-dev libcairo2-dev libffi-dev libapache2-mod-wsgi libmysql++-dev libmysqlclient-dev libnet-snmp-perl m4 mysql-client netcat python-pip python-dev python3-dev parallel php7.0-xml postfix runit smbclient snmp snmpd snmp-mibs-downloader sudo unzip -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* \\\n && pip install pip distribute virtualenv --upgrade --no-cache-dir\nRUN (id -u $NAGIOS_USER || useradd --system -d $NAGIOS_HOME $NAGIOS_USER ) \\\n && (egrep -i \"^${NAGIOS_GROUP}\" /etc/group || groupadd $NAGIOS_GROUP ) \\\n && usermod -a -G $NAGIOS_GROUP $NAGIOS_USER \\\n && usermod -a -G $NAGIOS_GROUP www-data\nRUN pip install https://github.com/pynag/pynag/tarball/master --no-cache-dir --no-binary=:all:\n#   https://github.com/NagiosEnterprises/nagioscore/archive/nagios-${NAGIOS_VERSION}.zip\n#   http://192.168.120.155:8000/ethnchao/nagioscore/-/archive/nagios-${NAGIOS_VERSION}/nagioscore-nagios-${NAGIOS_VERSION}.zip\nRUN cd /tmp \\\n && curl -L https://github.com/NagiosEnterprises/nagioscore/archive/nagios-${NAGIOS_VERSION}.zip -o nagioscore.zip \\\n && unzip nagioscore.zip \\\n && mv nagioscore-* nagioscore \\\n && cd nagioscore \\\n && ./configure --prefix=${NAGIOS_HOME} --enable-event-broker --with-command-group=${NAGIOS_GROUP} --with-nagios-user=${NAGIOS_USER} --with-nagios-group=${NAGIOS_GROUP} \\\n && make all \\\n && make install \\\n && make install-config \\\n && make install-commandmode \\\n && make install-webconf \\\n && make install-init \\\n && rm -rf /tmp/nagioscore /tmp/nagioscore.zip\nRUN mkdir -p ${NAGIOS_HOME}/etc/mount /data/plugin \\\n && chown -R ${NAGIOS_USER}:${NAGIOS_GROUP} /data ${NAGIOS_HOME} \\\n && cd /etc/apache2/sites-available \\\n && export DOC_ROOT=\"DocumentRoot $( echo $NAGIOS_HOME/share ;)\" \\\n && sed -i \"s,DocumentRoot.*,$DOC_ROOT,\" 000-default.conf \\\n && sed -i \"s,</VirtualHost>,<IfDefine ENABLE_USR_LIB_CGI_BIN>\\nScriptAlias /cgi-bin/ ${NAGIOS_HOME}/sbin/\\n</IfDefine>\\n</VirtualHost>,\" 000-default.conf \\\n && a2enmod cgi \\\n && pynag delete --force WHERE host_name=localhost AND service_description=SSH \\\n && cd ${NAGIOS_HOME}/etc/ \\\n && echo \"$USER2$=/data/plugin\" >> resource.cfg \\\n && pynag config --append \"cfg_dir=${NAGIOS_HOME}/etc/mount\" \\\n && htpasswd -c -b -s htpasswd.users nagiosadmin nagios \\\n && sed -i 's,/bin/mail,/usr/bin/mail,' ${NAGIOS_HOME}/etc/objects/commands.cfg \\\n && echo 'define command{\\n command_name check_nrpe\\n command_line $USER1$/check_nrpe -H $HOSTADDRESS$ -c $ARG1$\\n}\\n\\ndefine command{\\n command_name check_dummy\\n command_line $USER1$/check_dummy $ARG1$\\n}\\n\\n' >> objects/commands.cfg\n#   https://github.com/nagios-plugins/nagios-plugins/archive/release-${NAGIOS_PLUGINS_VERSION}.zip\n#   http://192.168.120.155:8000/ethnchao/nagios-plugins/-/archive/release-${NAGIOS_PLUGINS_VERSION}/nagios-plugins-release-${NAGIOS_PLUGINS_VERSION}.zip\nRUN cd /tmp \\\n && curl -L https://github.com/nagios-plugins/nagios-plugins/archive/release-${NAGIOS_PLUGINS_VERSION}.zip -o nagios-plugins.zip \\\n && unzip nagios-plugins.zip \\\n && mv nagios-plugins-* nagios-plugins \\\n && cd nagios-plugins \\\n && ./tools/setup \\\n && ./configure --prefix=${NAGIOS_HOME} \\\n && make \\\n && make install \\\n && cd /tmp \\\n && rm -rf /tmp/nagios-plugins /tmp/nagios-plugins.zip\n#   https://github.com/NagiosEnterprises/nrpe/archive/nrpe-${NRPE_VERSION}.zip\n#   http://192.168.120.155:8000/ethnchao/nrpe/-/archive/nrpe-${NRPE_VERSION}/nrpe-nrpe-${NRPE_VERSION}.zip\nRUN cd /tmp \\\n && curl -L https://github.com/NagiosEnterprises/nrpe/archive/nrpe-${NRPE_VERSION}.zip -o nrpe.zip \\\n && unzip nrpe.zip \\\n && mv nrpe-* nrpe \\\n && cd nrpe \\\n && ./configure --prefix=${NAGIOS_HOME} --with-nagios-user=${NAGIOS_USER} --with-nagios-group=${NAGIOS_GROUP} \\\n && make check_nrpe \\\n && make install-plugin \\\n && rm -rf /tmp/nrpe /tmp/nrpe.zip\nRUN mkdir -p /usr/share/snmp/mibs \\\n && ln -s /usr/share/snmp/mibs ${NAGIOS_HOME}/libexec/mibs \\\n && download-mibs \\\n && echo \"mibs +ALL\" > /etc/snmp/snmp.conf\nRUN virtualenv --python=python3.5 /opt/graphite \\\n && . /opt/graphite/bin/activate \\\n && pip install cffi scandir --no-cache-dir \\\n && pip install https://github.com/graphite-project/whisper/archive/${GRAPHITE_VERSION}.zip https://github.com/graphite-project/carbon/archive/${GRAPHITE_VERSION}.zip https://github.com/graphite-project/graphite-web/archive/${GRAPHITE_VERSION}.zip --no-cache-dir --no-binary=:all: \\\n && deactivate\nADD config/carbon.conf /opt/graphite/conf/carbon.conf\nRUN cd /opt/graphite/conf/ \\\n && cp storage-schemas.conf.example storage-schemas.conf \\\n && cp graphite.wsgi.example graphite.wsgi \\\n && cp storage-aggregation.conf.example storage-aggregation.conf \\\n && sed -i 's/import sys/import sys, site/' graphite.wsgi \\\n && sed -i '/import sys, site/a\\site.addsitedir(\"/opt/graphite/lib/python3.5/site-packages\")' graphite.wsgi \\\n && cd /opt/graphite/webapp/graphite/ \\\n && cp local_settings.py.example local_settings.py \\\n && . /opt/graphite/bin/activate \\\n && export PYTHONPATH=\"/opt/graphite/lib/:/opt/graphite/webapp/\" \\\n && django-admin.py migrate --settings=graphite.settings --run-syncdb \\\n && unset PYTHONPATH \\\n && deactivate \\\n && chown -R www-data:www-data /opt/graphite/storage \\\n && cd /etc/apache2/sites-available/ \\\n && cp /opt/graphite/examples/example-graphite-vhost.conf graphite.conf \\\n && sed -i 's/80/8080/' graphite.conf \\\n && sed -i 's;WSGISocketPrefix run/wsgi;WSGISocketPrefix /var/run/apache2/wsgi;' graphite.conf \\\n && a2ensite graphite \\\n && echo \"Listen 8080\" >> /etc/apache2/ports.conf\nRUN mkdir -p /var/spool/nagios/graphios \\\n && chown -R ${NAGIOS_USER}:${NAGIOS_GROUP} /var/spool/nagios \\\n && pip install graphios==${GRAPHIOS_VERSION} --no-cache-dir \\\n && sed -i 's/^enable_carbon.*/enable_carbon = True/' /etc/graphios/graphios.cfg \\\n && sed -i 's/^debug.*/debug = False/' /etc/graphios/graphios.cfg \\\n && sed -i 's/^debug.*/debug = False/' /usr/local/bin/graphios.py \\\n && sed -i 's;^config_file.*;config_file = \"/etc/graphios/graphios.cfg\";' /usr/local/bin/graphios.py \\\n && cd \"${NAGIOS_HOME}/etc/\" \\\n && pynag config --remove cfg_dir --old_value=\"${NAGIOS_HOME}/etc/objects\" \\\n && pynag config --set service_perfdata_file_processing_command=graphite_perf_service \\\n && pynag config --set host_perfdata_file_processing_command=graphite_perf_host \\\n && pynag update --force SET _graphitepostfix=ping WHERE host_name=localhost AND service_description='PING' \\\n && pynag update --force SET _graphitepostfix=loadaverage WHERE host_name=localhost AND service_description='Current Load' \\\n && echo 'define command {\\n command_name graphite_perf_host\\n command_line /bin/mv /var/spool/nagios/graphios/host-perfdata /var/spool/nagios/graphios/host-perfdata.$TIMET$\\n}\\n\\ndefine command {\\n command_name graphite_perf_service\\n command_line /bin/mv /var/spool/nagios/graphios/service-perfdata /var/spool/nagios/graphios/service-perfdata.$TIMET$\\n}\\n\\n' >> objects/commands.cfg\n#   Grafana default mirror site: deb https://packagecloud.io/grafana/stable/debian/ jessie main\nRUN echo \"deb https://mirrors.tuna.tsinghua.edu.cn/grafana/apt/ jessie main\" >> /etc/apt/sources.list \\\n && curl https://packagecloud.io/gpg.key | sudo apt-key add - \\\n && apt-get update \\\n && apt-get install --no-install-recommends grafana=${GRAFANA_VERSION} -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n#   https://github.com/NagiosEnterprises/ndoutils/archive/ndoutils-${NDOUTILS_VERSION}.zip\n#   http://192.168.120.155:8000/ethnchao/ndoutils/-/archive/ndoutils-${NDOUTILS_VERSION}/ndoutils-ndoutils-${NDOUTILS_VERSION}.zip\nRUN cd /tmp \\\n && curl -L https://github.com/NagiosEnterprises/ndoutils/archive/ndoutils-${NDOUTILS_VERSION}.zip -o ndoutils.zip \\\n && unzip ndoutils.zip \\\n && mv ndoutils-* ndoutils \\\n && cd ndoutils \\\n && ./configure --prefix=\"${NAGIOS_HOME}\" --enable-mysql \\\n && make all \\\n && make install \\\n && cp config/ndo2db.cfg-sample ${NAGIOS_HOME}/etc/ndo2db.cfg-sample \\\n && cp db/mysql.sql ${NAGIOS_HOME}/share/mysql-createdb.sql \\\n && sed -i 's/ENGINE=MyISAM/ENGINE=MyISAM DEFAULT CHARSET=utf8/g' ${NAGIOS_HOME}/share/mysql-createdb.sql \\\n && cp config/ndomod.cfg-sample \"${NAGIOS_HOME}\"/etc/ndomod.cfg \\\n && chmod 666 ${NAGIOS_HOME}/etc/ndomod.cfg \\\n && rm -rf /tmp/ndoutils /tmp/ndoutils.zip\nRUN cd /tmp/ \\\n && curl -L https://github.com/vishnubob/wait-for-it/archive/master.zip -o wait-for-it.zip \\\n && unzip wait-for-it.zip \\\n && mv wait-for-it-master/wait-for-it.sh /usr/bin/wait-for-it \\\n && chmod +x /usr/bin/wait-for-it \\\n && rm -rf /tmp/wait-for-it-master /tmp/wait-for-it.zip\n#   https://github.com/NagiosEnterprises/nrdp/archive/${NRDP_VERSION}.zip\n#   http://192.168.120.155:8000/ethnchao/nrdp/-/archive/nrdp-${NRDP_VERSION}/nrdp-nrdp-${NRDP_VERSION}.zip\nRUN cd /usr/local/ \\\n && curl -L https://github.com/NagiosEnterprises/nrdp/archive/${NRDP_VERSION}.zip -o nrdp.zip \\\n && unzip nrdp.zip \\\n && rm -f nrdp.zip \\\n && mv nrdp-* nrdp \\\n && chown -R ${NAGIOS_USER}:${NAGIOS_GROUP} nrdp \\\n && mv nrdp/server/config.inc.php nrdp/server/config.inc.php.example \\\n && echo \"<Directory \\\"/usr/local/nrdp\\\">\\n Options None\\n AllowOverride None\\n Require all granted\\n</Directory>\\nAlias /nrdp \\\"/usr/local/nrdp/server\\\"\\n\" > /etc/apache2/sites-available/nrdp.conf \\\n && a2ensite nrdp\n#   https://github.com/opinkerfi/okconfig/archive/okconfig-${OKCONFIG_VERSION}.zip\n#   http://192.168.120.155:8000/ethnchao/okconfig/-/archive/okconfig-${OKCONFIG_VERSION}/okconfig-okconfig-${OKCONFIG_VERSION}.zip\nRUN cd /tmp \\\n && curl -L https://github.com/opinkerfi/okconfig/archive/okconfig-${OKCONFIG_VERSION}.zip -o okconfig.zip \\\n && unzip okconfig.zip \\\n && mv okconfig-* okconfig \\\n && cd okconfig \\\n && pip install . --no-cache-dir \\\n && cp -f etc/okconfig.conf /etc/okconfig.conf \\\n && mkdir -p ${NAGIOS_HOME}/etc/okconfig/ /data/example \\\n && chown -R ${NAGIOS_USER}:${NAGIOS_GROUP} ${NAGIOS_HOME} /data/example \\\n && sed -i \"s,/etc/nagios/,${NAGIOS_HOME}/etc/,\" /etc/okconfig.conf \\\n && sed -i \"s,${NAGIOS_HOME}/etc/okconfig/examples,/data/example,\" /etc/okconfig.conf \\\n && cd /usr/share/okconfig \\\n && find ./templates/ -name '*cfg*' -type f -exec sed -i 's/normal_check_interval/check_interval/' {}\nADD okconfig/install_ncpa.bat /usr/share/okconfig/client/windows/install.bat.example\nADD okconfig/install_nsclient.sh /usr/share/okconfig/client/windows/install_nsclient.sh\nADD okconfig/install_okagent.sh /usr/share/okconfig/client/linux/install_okagent.sh.example\nRUN cd /usr/share/okconfig/client/ \\\n && mkdir -p windows/ncpa/ \\\n && curl -L https://assets.nagios.com/downloads/ncpa/archived/${NCPA_VERSION}/ncpa-${NCPA_VERSION}.exe -o windows/ncpa/ncpa.exe \\\n && chmod +x windows/install_nsclient.sh linux/install_okagent.sh.example \\\n && curl -L http://ftp.twaren.net/Linux/OpenSuSE/repositories/home:/uibmz:/opsi:/opsi40-experimental/Univention_4.1/amd64/winexe_1.00.1-1_amd64.deb -o /tmp/winexe.deb \\\n && dpkg -i /tmp/winexe.deb \\\n && rm -f /tmp/winexe.deb\nRUN cd /tmp \\\n && curl http://mathias-kettner.com/download/mk-livestatus-${MK_LIVESTATUS_VERSION}.tar.gz -o mk-livestatus.tar.gz \\\n && tar zxf mk-livestatus.tar.gz \\\n && rm -f mk-livestatus.tar.gz \\\n && mv mk-livestatus* mk-livestatus \\\n && cd mk-livestatus \\\n && ./configure --with-nagios4 \\\n && make \\\n && make install \\\n && rm -rf /tmp/mk-livestatus\n#   https://github.com/opinkerfi/adagios/archive/adagios-${ADAGIOS_VERSION}.zip\n#   http://192.168.120.155:8000/ethnchao/adagios/-/archive/adagios-${ADAGIOS_VERSION}/adagios-adagios-${ADAGIOS_VERSION}.zip\nRUN virtualenv /opt/adagios \\\n && . /opt/adagios/bin/activate \\\n && cd /tmp \\\n && curl -L https://github.com/opinkerfi/adagios/archive/adagios-${ADAGIOS_VERSION}.zip -o adagios.zip \\\n && unzip adagios.zip \\\n && mv adagios-* adagios \\\n && cd adagios \\\n && pip install . https://github.com/pynag/pynag/archive/pynag-${PYNAG_VERSION}.zip --no-cache-dir --no-binary=:all: -r requirements.txt \\\n && deactivate \\\n && cp -r adagios/etc/adagios/ /etc/ \\\n && rm -rf /tmp/adagios /tmp/adagios.zip\nRUN cd /etc/adagios/ \\\n && sed -i 's,^enable_pnp4nagios.*,enable_pnp4nagios=False,' adagios.conf \\\n && sed -i \"s,^nagios_config.*,nagios_config=\\\"${NAGIOS_HOME}/etc/nagios.cfg\\\",\" adagios.conf \\\n && sed -i \"s,^nagios_binary.*,nagios_binary=\\\"${NAGIOS_HOME}/bin/nagios\\\",\" adagios.conf \\\n && sed -i \"s,^livestatus_path.*,livestatus_path=\\\"${NAGIOS_HOME}/var/livestatus\\\",\" adagios.conf \\\n && sed -i \"s,^destination_directory.*,destination_directory=\\\"${NAGIOS_HOME}/etc/adagios/\\\",\" adagios.conf \\\n && mkdir -p ${NAGIOS_HOME}/etc/adagios/ /var/lib/adagios/ \\\n && cd ${NAGIOS_HOME}/etc \\\n && git init \\\n && git config user.name \"nagios\" \\\n && git config user.email \"nagios@localhost.com\" \\\n && git add * \\\n && git commit -m \"Initial commit\" \\\n && pynag config --set cfg_dir=\"${NAGIOS_HOME}/etc/adagios\" \\\n && pynag config --append \"broker_module=/usr/local/lib/mk-livestatus/livestatus.o ${NAGIOS_HOME}/var/livestatus\" \\\n && chown -R ${NAGIOS_USER}:${NAGIOS_GROUP} /etc/adagios/ ${NAGIOS_HOME}/ /var/lib/adagios/ \\\n && cd /opt/adagios/local/lib/python2.7/site-packages/adagios/ \\\n && cp wsgi.py wsgi.py.origin \\\n && sed -i 's/import os/import os, site/' wsgi.py \\\n && sed -i '/import os, site/a\\site.addsitedir(\"/opt/adagios/lib/python2.7/site-packages\")' wsgi.py \\\n && echo \"${NAGIOS_USER} ALL=(ALL) NOPASSWD: ALL\" > /etc/sudoers.d/adagios \\\n && chmod 0440 /etc/sudoers.d/adagios \\\n && echo \"WSGISocketPrefix /var/run/apache2/wsgi \\nWSGIDaemonProcess adagios user=${NAGIOS_USER} group=${NAGIOS_GROUP} processes=1 threads=25 \\nWSGIScriptAlias /adagios /opt/adagios/lib/python2.7/site-packages/adagios/wsgi.py \\nAlias /adagios/media /opt/adagios/lib/python2.7/site-packages/adagios/media \\n<Location /adagios> \\n WSGIProcessGroup adagios \\n AuthName \\\"Adagios Access\\\" \\n AuthType Basic \\n AuthUserFile ${NAGIOS_HOME}/etc/htpasswd.users \\n Require valid-user \\n RedirectMatch ^/adagios$ /adagios/ \\n</Location> \\n\" > /etc/apache2/sites-available/adagios.conf \\\n && a2ensite adagios\nADD run.sh /run.sh\nADD config/sv/apache/run /etc/sv/apache/run\nADD config/sv/carbon/run /etc/sv/carbon/run\nADD config/sv/postfix/run /etc/sv/postfix/run\nADD config/sv/graphios/run /etc/sv/graphios/run\nRUN rm -rf /etc/sv/getty-5 \\\n && chmod +x /run.sh /etc/sv/apache/run /etc/sv/graphios/run /etc/sv/postfix/run /etc/sv/carbon/run \\\n && ln -s /etc/sv/* /etc/service \\\n && cp /etc/services /var/spool/postfix/etc/ \\\n && ln -sf \"/usr/share/zoneinfo/Asia/Shanghai\" /etc/localtime\nENV APACHE_LOCK_DIR=\"/var/run\"\nENV APACHE_LOG_DIR=\"/var/log/apache2\"\nEXPOSE 80/tcp\nEXPOSE 3000/tcp\nENTRYPOINT [\"/run.sh\"]\nCMD [\"main\"]\n","originalDockerfileUglifiedHash":"59c02a6d905abd637b875de30c92b8e4","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/bb3cac1dd28763ad712ccf5a88fc41af3fd3077a.dockerfile"}