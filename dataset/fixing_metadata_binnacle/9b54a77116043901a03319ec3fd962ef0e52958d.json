{"seed":343769438,"processedDockerfileHash":"7ed38a3c492d3e2ff15274f7a91df3b5","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-pip","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM centos:7\nRUN useradd jenkins -u 1500 -g root\nRUN rpm --import file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7\nRUN rpm -iUvh http://dl.fedoraproject.org/pub/epel/7/x86_64/e/epel-release-7-10.noarch.rpm\nRUN yum -y update \\\n && yum -y install wget curl make m4 gcc patch unzip git rsync mercurial gcc-c++ bzip2-devel libffi-devel snappy-devel libev-devel python-devel file python-pip openssl-devel gmp-devel which zlib-devel ncurses-devel bzip2 cmake3 sudo autoconf help2man perl-Thread-Queue libtool\n#   make sudo work:\n#\n#   Disable \"ssh hostname sudo <cmd>\", because it will show the password in clear.\n#           You have to run \"ssh -t hostname sudo <cmd>\".\n#\n#   Defaults    requiretty          # is line 56\nRUN awk 'NR == 56 {next} {print}' /etc/sudoers > /tmp/__sudoers \\\n && mv /tmp/__sudoers /etc/sudoers\n#   protobuf\nRUN wget https://github.com/google/protobuf/releases/download/v2.6.1/protobuf-2.6.1.tar.bz2 -O protobuf-2.6.1.tar.bz2 \\\n && tar -jxvf protobuf-2.6.1.tar.bz2 \\\n && cd protobuf-2.6.1 \\\n && ./configure \\\n && make \\\n && make install\n#  RUN rpm -ivh http://cbs.centos.org/kojifiles/packages/protobuf/2.5.0/10.el7.centos/src/protobuf-2.5.0-10.el7.centos.src.rpm\n#   workarounds for limited rocksdb builder in orocksdb\nRUN ln -s /usr/bin/g++ /usr/bin/g++-4.8\n#   install specific orocksdb\nRUN git clone https://github.com/domsj/orocksdb.git \\\n && cd orocksdb \\\n && git checkout tags/0.3.0 \\\n && ./install_rocksdb.sh \\\n && cp /usr/local/lib/librocksdb.so* /lib64/ \\\n && sudo ldconfig -v\nRUN pip install fabric==3.0.0 junit-xml==1.9\n#   RUN wget http://cudf-solvers.irill.org/cudf_remote_proxy\n#   RUN chmod u+x cudf_remote_proxy\n#   RUN mv cudf_remote_proxy /usr/local/bin/\n#   ENV OPAMEXTERNALSOLVER=\"cudf_remote_proxy %{input}% %{output}% %{criteria}%\"\nRUN wget https://raw.github.com/ocaml/opam/master/shell/opam_installer.sh\nENV ocaml_version=\"4.04.2\"\nRUN sh ./opam_installer.sh /usr/local/bin ${ocaml_version}\nENV opam_root=\"/home/jenkins/OPAM\"\nENV opam_env=\"opam config env --root=${opam_root}\"\nRUN opam init --root=${opam_root} --comp ${ocaml_version}\nRUN eval `${opam_env} ` \\\n && opam update -v \\\n && opam install -y oasis.0.4.10 ocamlfind omake.0.10.2 ssl.0.5.3 camlbz2 snappy sexplib bisect lwt_ssl lwt.3.0.0 camltc.0.9.4 ocplib-endian.1.0 ctypes ctypes-foreign uuidm zarith mirage-no-xen.1 quickcheck.1.0.2 cmdliner conf-libev depext kinetic-client tiny_json ppx_deriving.4.1 ppx_deriving_yojson base.v0.9.3 core.v0.9.1 redis.0.3.3 uri.1.9.4 result ezxmlm\n#   AUTOMAKE-1.14.1 (for YASM)\nRUN wget http://ftp.gnu.org/gnu/automake/automake-1.14.1.tar.xz \\\n && tar -xvf automake-1.14.1.tar.xz \\\n && cd automake-1.14.1 \\\n && ./configure \\\n && make \\\n && make install\n#  YASM\nRUN git clone --depth 1 git://github.com/yasm/yasm.git\nRUN cd yasm \\\n && autoreconf -fiv \\\n && ./configure \\\n && make \\\n && make install \\\n && make distclean\nRUN wget https://01.org/sites/default/files/downloads/intelr-storage-acceleration-library-open-source-version/isa-l-2.14.0.tar.gz\nRUN tar xfzv isa-l-2.14.0.tar.gz\nRUN cd isa-l-2.14.0 \\\n && ./configure\nRUN cd isa-l-2.14.0 \\\n && make\nRUN cd isa-l-2.14.0 \\\n && make install\nRUN echo '%_install_langs C' >> /etc/rpm/macros \\\n && yum -y install epel-release \\\n && echo -e '[ovs]\\nname=ovs\\nbaseurl=http://yum.openvstorage.org/CentOS/7/x86_64/dists/unstable\\nenabled=1\\ngpgcheck=0' > /etc/yum.repos.d/ovs.repo \\\n && yum -y update \\\n && yum -y install boost-devel boost-static boost-log libaio-devel librdmacm-devel gflags-devel glog-devel libunwind libxio libxio-devel \\\n && yum clean all \\\n && rm -rf /usr/share/doc/*\nRUN ln -s /usr/lib64/libunwind.so.8 /usr/lib64/libunwind.so\n#   install gtest TODO:specific version ?\nRUN git clone https://github.com/google/googletest \\\n && cd googletest \\\n && git checkout release-1.8.0 \\\n && mkdir build \\\n && cd build \\\n && cmake3 .. \\\n && sudo make install\nRUN cd googletest \\\n && git log --oneline | head -n 5\n#   libgtest.a ends up in /usr/local/lib/\nRUN cp /usr/local/lib/libgtest.a /lib64/\n#   install specific arakoon.\nRUN git clone https://github.com/openvstorage/arakoon.git\nRUN cd arakoon \\\n && git pull \\\n && git checkout tags/1.9.22\nRUN cd arakoon \\\n && eval `${opam_env} ` \\\n && make\nRUN cd arakoon \\\n && eval `${opam_env} ` \\\n && export PREFIX=${opam_root}/${ocaml_version} \\\n && export OCAML_LIBDIR=`ocamlfind printconf destdir ` \\\n && make install\n#   install specific orocksdb\nRUN eval `${opam_env} ` \\\n && cd orocksdb \\\n && git checkout tags/0.3.0 \\\n && make build install\n#  for now, install ordma manually\nRUN yum -y install librdmacm-devel\nRUN git clone https://github.com/toolslive/ordma.git \\\n && cd ordma \\\n && git checkout tags/0.0.2 \\\n && eval `${opam_env} ` \\\n && make install\nRUN yum -y install rpm-build\nRUN yum -y install libgcrypt-devel\n#  gf-complete\nRUN rpm -ivv http://people.redhat.com/zaitcev/tmp/gf-complete-1.02-1.fc20.src.rpm\nRUN rpmbuild -ba /root/rpmbuild/SPECS/gf-complete.spec\nRUN rpm -i /root/rpmbuild/RPMS/x86_64/gf-complete-1.02-1.el7.centos.x86_64.rpm\nRUN rpm -i /root/rpmbuild/RPMS/x86_64/gf-complete-devel-1.02-1.el7.centos.x86_64.rpm\n#  jerasure\nRUN rpm -ivv http://people.redhat.com/zaitcev/tmp/jerasure-2.0-1.fc20.src.rpm\nRUN rpmbuild -ba /root/rpmbuild/SPECS/jerasure.spec\nRUN rpm -i /root/rpmbuild/RPMS/x86_64/jerasure-2.0-1.el7.centos.x86_64.rpm\nRUN rpm -i /root/rpmbuild/RPMS/x86_64/jerasure-devel-2.0-1.el7.centos.x86_64.rpm\nRUN echo \"jenkins ALL=NOPASSWD: ALL\" > /etc/sudoers.d/jenkins\nRUN echo -e '[ovs]\\nname=ovs\\nbaseurl=http://yum.openvstorage.org/CentOS/7/x86_64/dists/unstable\\nenabled=1\\ngpgcheck=0' > /etc/yum.repos.d/ovs.repo\nRUN cat /etc/yum.repos.d/ovs.repo\nRUN yum -y update \\\n && yum -y install iproute psmisc\n#  # installing voldrv packages only works from within the OVS LAN\nARG INSTALL_VOLDRV_PACKAGES=false\nRUN test ${INSTALL_VOLDRV_PACKAGES} = 'true' || echo 'we are NOT going to install the voldrv packages/testers'\n#   http://10.100.129.100:8080/view/volumedriver/view/centos/job/volumedriver-no-dedup-release-centos-7/35/artifact/volumedriver-core/build/rpm/volumedriver-no-dedup-base-debuginfo_6.10.1.0-1.rpm\nENV voldrv_jenkins=\"http://10.100.129.100:8080/view/volumedriver/view/centos/job/volumedriver-no-dedup-release-centos-7/35/artifact/volumedriver-core/build/rpm\"\nENV voldrv_base_pkg_name=\"volumedriver-no-dedup\"\nENV voldrv_version=\"6.10.1.0-1\"\nRUN test ${INSTALL_VOLDRV_PACKAGES} = 'false' || (wget ${voldrv_jenkins}/${voldrv_base_pkg_name}-base_${voldrv_version}.rpm \\\n && yum -y --nogpgcheck localinstall ${voldrv_base_pkg_name}-base_${voldrv_version}.rpm )\nRUN test ${INSTALL_VOLDRV_PACKAGES} = 'false' || (wget ${voldrv_jenkins}/${voldrv_base_pkg_name}-pitreplication_${voldrv_version}.rpm \\\n && yum -y --nogpgcheck localinstall ${voldrv_base_pkg_name}-pitreplication_${voldrv_version}.rpm )\nRUN test ${INSTALL_VOLDRV_PACKAGES} = 'false' || (wget ${voldrv_jenkins}/${voldrv_base_pkg_name}-server_${voldrv_version}.rpm \\\n && yum -y --nogpgcheck localinstall ${voldrv_base_pkg_name}-server_${voldrv_version}.rpm )\nRUN test ${INSTALL_VOLDRV_PACKAGES} = 'false' || (wget ${voldrv_jenkins}/libovsvolumedriver_${voldrv_version}.rpm \\\n && yum -y --nogpgcheck localinstall libovsvolumedriver_${voldrv_version}.rpm )\nRUN test ${INSTALL_VOLDRV_PACKAGES} = 'false' || (wget ${voldrv_jenkins}/${voldrv_base_pkg_name}-test_${voldrv_version}.rpm \\\n && yum -y --nogpgcheck localinstall ${voldrv_base_pkg_name}-test_${voldrv_version}.rpm )\nRUN chmod ugoa+rxw -R ${opam_root}\nRUN su - -c \"echo 'eval `${opam_env} `' >> /home/jenkins/.bash_profile\"\nRUN su - -c \"echo 'LD_LIBRARY_PATH=/usr/local/lib; export LD_LIBRARY_PATH;' >> /home/jenkins/.bash_profile\"\nRUN su - -c \"echo 'VOLDRV_TEST=volumedriver_test; export VOLDRV_TEST;' >> /home/jenkins/.bash_profile\"\nRUN su - -c \"echo 'VOLDRV_BACKEND_TEST=backend_test; export VOLDRV_BACKEND_TEST;' >> /home/jenkins/.bash_profile\"\nENTRYPOINT [\"/bin/bash\", \"-c\", \"set\", \"-e\", \"&&\", \"/home/jenkins/alba/docker/docker-entrypoint.sh\", \"$@\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM centos:7\nRUN useradd jenkins -u 1500 -g root\nRUN rpm --import file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7\nRUN rpm -iUvh http://dl.fedoraproject.org/pub/epel/7/x86_64/e/epel-release-7-10.noarch.rpm\nRUN yum -y update \\\n && yum -y install wget curl make m4 gcc patch unzip git rsync mercurial gcc-c++ bzip2-devel libffi-devel snappy-devel libev-devel python-devel file python-pip openssl-devel gmp-devel which zlib-devel ncurses-devel bzip2 cmake3 sudo autoconf help2man perl-Thread-Queue libtool\n#  make sudo work:\n#\n#  Disable \"ssh hostname sudo <cmd>\", because it will show the password in clear.\n#          You have to run \"ssh -t hostname sudo <cmd>\".\n#\n#  Defaults    requiretty          # is line 56\nRUN awk 'NR == 56 {next} {print}' /etc/sudoers > /tmp/__sudoers \\\n && mv /tmp/__sudoers /etc/sudoers\n#  protobuf\nRUN wget https://github.com/google/protobuf/releases/download/v2.6.1/protobuf-2.6.1.tar.bz2 -O protobuf-2.6.1.tar.bz2 \\\n && tar -jxvf protobuf-2.6.1.tar.bz2 \\\n && cd protobuf-2.6.1 \\\n && ./configure \\\n && make \\\n && make install\n# RUN rpm -ivh http://cbs.centos.org/kojifiles/packages/protobuf/2.5.0/10.el7.centos/src/protobuf-2.5.0-10.el7.centos.src.rpm\n#  workarounds for limited rocksdb builder in orocksdb\nRUN ln -s /usr/bin/g++ /usr/bin/g++-4.8\n#  install specific orocksdb\nRUN git clone https://github.com/domsj/orocksdb.git \\\n && cd orocksdb \\\n && git checkout tags/0.3.0 \\\n && ./install_rocksdb.sh \\\n && cp /usr/local/lib/librocksdb.so* /lib64/ \\\n && sudo ldconfig -v\nRUN pip install fabric junit-xml\n#  RUN wget http://cudf-solvers.irill.org/cudf_remote_proxy\n#  RUN chmod u+x cudf_remote_proxy\n#  RUN mv cudf_remote_proxy /usr/local/bin/\n#  ENV OPAMEXTERNALSOLVER=\"cudf_remote_proxy %{input}% %{output}% %{criteria}%\"\nRUN wget https://raw.github.com/ocaml/opam/master/shell/opam_installer.sh\nENV ocaml_version=\"4.04.2\"\nRUN sh ./opam_installer.sh /usr/local/bin ${ocaml_version}\nENV opam_root=\"/home/jenkins/OPAM\"\nENV opam_env=\"opam config env --root=${opam_root}\"\nRUN opam init --root=${opam_root} --comp ${ocaml_version}\nRUN eval `${opam_env} ` \\\n && opam update -v \\\n && opam install -y oasis.0.4.10 ocamlfind omake.0.10.2 ssl.0.5.3 camlbz2 snappy sexplib bisect lwt_ssl lwt.3.0.0 camltc.0.9.4 ocplib-endian.1.0 ctypes ctypes-foreign uuidm zarith mirage-no-xen.1 quickcheck.1.0.2 cmdliner conf-libev depext kinetic-client tiny_json ppx_deriving.4.1 ppx_deriving_yojson base.v0.9.3 core.v0.9.1 redis.0.3.3 uri.1.9.4 result ezxmlm\n#  AUTOMAKE-1.14.1 (for YASM)\nRUN wget http://ftp.gnu.org/gnu/automake/automake-1.14.1.tar.xz \\\n && tar -xvf automake-1.14.1.tar.xz \\\n && cd automake-1.14.1 \\\n && ./configure \\\n && make \\\n && make install\n# YASM\nRUN git clone --depth 1 git://github.com/yasm/yasm.git\nRUN cd yasm \\\n && autoreconf -fiv \\\n && ./configure \\\n && make \\\n && make install \\\n && make distclean\nRUN wget https://01.org/sites/default/files/downloads/intelr-storage-acceleration-library-open-source-version/isa-l-2.14.0.tar.gz\nRUN tar xfzv isa-l-2.14.0.tar.gz\nRUN cd isa-l-2.14.0 \\\n && ./configure\nRUN cd isa-l-2.14.0 \\\n && make\nRUN cd isa-l-2.14.0 \\\n && make install\nRUN echo '%_install_langs C' >> /etc/rpm/macros \\\n && yum -y install epel-release \\\n && echo -e '[ovs]\\nname=ovs\\nbaseurl=http://yum.openvstorage.org/CentOS/7/x86_64/dists/unstable\\nenabled=1\\ngpgcheck=0' > /etc/yum.repos.d/ovs.repo \\\n && yum -y update \\\n && yum -y install boost-devel boost-static boost-log libaio-devel librdmacm-devel gflags-devel glog-devel libunwind libxio libxio-devel \\\n && yum clean all \\\n && rm -rf /usr/share/doc/*\nRUN ln -s /usr/lib64/libunwind.so.8 /usr/lib64/libunwind.so\n#  install gtest TODO:specific version ?\nRUN git clone https://github.com/google/googletest \\\n && cd googletest \\\n && git checkout release-1.8.0 \\\n && mkdir build \\\n && cd build \\\n && cmake3 .. \\\n && sudo make install\nRUN cd googletest \\\n && git log --oneline | head -n 5\n#  libgtest.a ends up in /usr/local/lib/\nRUN cp /usr/local/lib/libgtest.a /lib64/\n#  install specific arakoon.\nRUN git clone https://github.com/openvstorage/arakoon.git\nRUN cd arakoon \\\n && git pull \\\n && git checkout tags/1.9.22\nRUN cd arakoon \\\n && eval `${opam_env} ` \\\n && make\nRUN cd arakoon \\\n && eval `${opam_env} ` \\\n && export PREFIX=${opam_root}/${ocaml_version} \\\n && export OCAML_LIBDIR=`ocamlfind printconf destdir ` \\\n && make install\n#  install specific orocksdb\nRUN eval `${opam_env} ` \\\n && cd orocksdb \\\n && git checkout tags/0.3.0 \\\n && make build install\n# for now, install ordma manually\nRUN yum -y install librdmacm-devel\nRUN git clone https://github.com/toolslive/ordma.git \\\n && cd ordma \\\n && git checkout tags/0.0.2 \\\n && eval `${opam_env} ` \\\n && make install\nRUN yum -y install rpm-build\nRUN yum -y install libgcrypt-devel\n# gf-complete\nRUN rpm -ivv http://people.redhat.com/zaitcev/tmp/gf-complete-1.02-1.fc20.src.rpm\nRUN rpmbuild -ba /root/rpmbuild/SPECS/gf-complete.spec\nRUN rpm -i /root/rpmbuild/RPMS/x86_64/gf-complete-1.02-1.el7.centos.x86_64.rpm\nRUN rpm -i /root/rpmbuild/RPMS/x86_64/gf-complete-devel-1.02-1.el7.centos.x86_64.rpm\n# jerasure\nRUN rpm -ivv http://people.redhat.com/zaitcev/tmp/jerasure-2.0-1.fc20.src.rpm\nRUN rpmbuild -ba /root/rpmbuild/SPECS/jerasure.spec\nRUN rpm -i /root/rpmbuild/RPMS/x86_64/jerasure-2.0-1.el7.centos.x86_64.rpm\nRUN rpm -i /root/rpmbuild/RPMS/x86_64/jerasure-devel-2.0-1.el7.centos.x86_64.rpm\nRUN echo \"jenkins ALL=NOPASSWD: ALL\" > /etc/sudoers.d/jenkins\nRUN echo -e '[ovs]\\nname=ovs\\nbaseurl=http://yum.openvstorage.org/CentOS/7/x86_64/dists/unstable\\nenabled=1\\ngpgcheck=0' > /etc/yum.repos.d/ovs.repo\nRUN cat /etc/yum.repos.d/ovs.repo\nRUN yum -y update \\\n && yum -y install iproute psmisc\n# # installing voldrv packages only works from within the OVS LAN\nARG INSTALL_VOLDRV_PACKAGES=false\nRUN test ${INSTALL_VOLDRV_PACKAGES} = 'true' || echo 'we are NOT going to install the voldrv packages/testers'\n#  http://10.100.129.100:8080/view/volumedriver/view/centos/job/volumedriver-no-dedup-release-centos-7/35/artifact/volumedriver-core/build/rpm/volumedriver-no-dedup-base-debuginfo_6.10.1.0-1.rpm\nENV voldrv_jenkins=\"http://10.100.129.100:8080/view/volumedriver/view/centos/job/volumedriver-no-dedup-release-centos-7/35/artifact/volumedriver-core/build/rpm\"\nENV voldrv_base_pkg_name=\"volumedriver-no-dedup\"\nENV voldrv_version=\"6.10.1.0-1\"\nRUN test ${INSTALL_VOLDRV_PACKAGES} = 'false' || (wget ${voldrv_jenkins}/${voldrv_base_pkg_name}-base_${voldrv_version}.rpm \\\n && yum -y --nogpgcheck localinstall ${voldrv_base_pkg_name}-base_${voldrv_version}.rpm )\nRUN test ${INSTALL_VOLDRV_PACKAGES} = 'false' || (wget ${voldrv_jenkins}/${voldrv_base_pkg_name}-pitreplication_${voldrv_version}.rpm \\\n && yum -y --nogpgcheck localinstall ${voldrv_base_pkg_name}-pitreplication_${voldrv_version}.rpm )\nRUN test ${INSTALL_VOLDRV_PACKAGES} = 'false' || (wget ${voldrv_jenkins}/${voldrv_base_pkg_name}-server_${voldrv_version}.rpm \\\n && yum -y --nogpgcheck localinstall ${voldrv_base_pkg_name}-server_${voldrv_version}.rpm )\nRUN test ${INSTALL_VOLDRV_PACKAGES} = 'false' || (wget ${voldrv_jenkins}/libovsvolumedriver_${voldrv_version}.rpm \\\n && yum -y --nogpgcheck localinstall libovsvolumedriver_${voldrv_version}.rpm )\nRUN test ${INSTALL_VOLDRV_PACKAGES} = 'false' || (wget ${voldrv_jenkins}/${voldrv_base_pkg_name}-test_${voldrv_version}.rpm \\\n && yum -y --nogpgcheck localinstall ${voldrv_base_pkg_name}-test_${voldrv_version}.rpm )\nRUN chmod ugoa+rxw -R ${opam_root}\nRUN su - -c \"echo 'eval `${opam_env} `' >> /home/jenkins/.bash_profile\"\nRUN su - -c \"echo 'LD_LIBRARY_PATH=/usr/local/lib; export LD_LIBRARY_PATH;' >> /home/jenkins/.bash_profile\"\nRUN su - -c \"echo 'VOLDRV_TEST=volumedriver_test; export VOLDRV_TEST;' >> /home/jenkins/.bash_profile\"\nRUN su - -c \"echo 'VOLDRV_BACKEND_TEST=backend_test; export VOLDRV_BACKEND_TEST;' >> /home/jenkins/.bash_profile\"\nENTRYPOINT [\"/bin/bash\", \"-c\", \"set\", \"-e\", \"&&\", \"/home/jenkins/alba/docker/docker-entrypoint.sh\", \"$@\"]\n","injectedSmells":[],"originalDockerfileHash":"1f92aebe139c64c02fe4db1e147d815e","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM centos:7\nRUN useradd jenkins -u 1500 -g root\nRUN rpm --import file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7\nRUN rpm -iUvh http://dl.fedoraproject.org/pub/epel/7/x86_64/e/epel-release-7-10.noarch.rpm\nRUN yum -y update \\\n && yum -y install wget curl make m4 gcc patch unzip git rsync mercurial gcc-c++ bzip2-devel libffi-devel snappy-devel libev-devel python-devel file python-pip openssl-devel gmp-devel which zlib-devel ncurses-devel bzip2 cmake3 sudo autoconf help2man perl-Thread-Queue libtool\n#   make sudo work:\n#\n#   Disable \"ssh hostname sudo <cmd>\", because it will show the password in clear.\n#           You have to run \"ssh -t hostname sudo <cmd>\".\n#\n#   Defaults    requiretty          # is line 56\nRUN awk 'NR == 56 {next} {print}' /etc/sudoers > /tmp/__sudoers \\\n && mv /tmp/__sudoers /etc/sudoers\n#   protobuf\nRUN wget https://github.com/google/protobuf/releases/download/v2.6.1/protobuf-2.6.1.tar.bz2 -O protobuf-2.6.1.tar.bz2 \\\n && tar -jxvf protobuf-2.6.1.tar.bz2 \\\n && cd protobuf-2.6.1 \\\n && ./configure \\\n && make \\\n && make install\n#  RUN rpm -ivh http://cbs.centos.org/kojifiles/packages/protobuf/2.5.0/10.el7.centos/src/protobuf-2.5.0-10.el7.centos.src.rpm\n#   workarounds for limited rocksdb builder in orocksdb\nRUN ln -s /usr/bin/g++ /usr/bin/g++-4.8\n#   install specific orocksdb\nRUN git clone https://github.com/domsj/orocksdb.git \\\n && cd orocksdb \\\n && git checkout tags/0.3.0 \\\n && ./install_rocksdb.sh \\\n && cp /usr/local/lib/librocksdb.so* /lib64/ \\\n && sudo ldconfig -v\nRUN pip install fabric junit-xml\n#   RUN wget http://cudf-solvers.irill.org/cudf_remote_proxy\n#   RUN chmod u+x cudf_remote_proxy\n#   RUN mv cudf_remote_proxy /usr/local/bin/\n#   ENV OPAMEXTERNALSOLVER=\"cudf_remote_proxy %{input}% %{output}% %{criteria}%\"\nRUN wget https://raw.github.com/ocaml/opam/master/shell/opam_installer.sh\nENV ocaml_version=\"4.04.2\"\nRUN sh ./opam_installer.sh /usr/local/bin ${ocaml_version}\nENV opam_root=\"/home/jenkins/OPAM\"\nENV opam_env=\"opam config env --root=${opam_root}\"\nRUN opam init --root=${opam_root} --comp ${ocaml_version}\nRUN eval `${opam_env} ` \\\n && opam update -v \\\n && opam install -y oasis.0.4.10 ocamlfind omake.0.10.2 ssl.0.5.3 camlbz2 snappy sexplib bisect lwt_ssl lwt.3.0.0 camltc.0.9.4 ocplib-endian.1.0 ctypes ctypes-foreign uuidm zarith mirage-no-xen.1 quickcheck.1.0.2 cmdliner conf-libev depext kinetic-client tiny_json ppx_deriving.4.1 ppx_deriving_yojson base.v0.9.3 core.v0.9.1 redis.0.3.3 uri.1.9.4 result ezxmlm\n#   AUTOMAKE-1.14.1 (for YASM)\nRUN wget http://ftp.gnu.org/gnu/automake/automake-1.14.1.tar.xz \\\n && tar -xvf automake-1.14.1.tar.xz \\\n && cd automake-1.14.1 \\\n && ./configure \\\n && make \\\n && make install\n#  YASM\nRUN git clone --depth 1 git://github.com/yasm/yasm.git\nRUN cd yasm \\\n && autoreconf -fiv \\\n && ./configure \\\n && make \\\n && make install \\\n && make distclean\nRUN wget https://01.org/sites/default/files/downloads/intelr-storage-acceleration-library-open-source-version/isa-l-2.14.0.tar.gz\nRUN tar xfzv isa-l-2.14.0.tar.gz\nRUN cd isa-l-2.14.0 \\\n && ./configure\nRUN cd isa-l-2.14.0 \\\n && make\nRUN cd isa-l-2.14.0 \\\n && make install\nRUN echo '%_install_langs C' >> /etc/rpm/macros \\\n && yum -y install epel-release \\\n && echo -e '[ovs]\\nname=ovs\\nbaseurl=http://yum.openvstorage.org/CentOS/7/x86_64/dists/unstable\\nenabled=1\\ngpgcheck=0' > /etc/yum.repos.d/ovs.repo \\\n && yum -y update \\\n && yum -y install boost-devel boost-static boost-log libaio-devel librdmacm-devel gflags-devel glog-devel libunwind libxio libxio-devel \\\n && yum clean all \\\n && rm -rf /usr/share/doc/*\nRUN ln -s /usr/lib64/libunwind.so.8 /usr/lib64/libunwind.so\n#   install gtest TODO:specific version ?\nRUN git clone https://github.com/google/googletest \\\n && cd googletest \\\n && git checkout release-1.8.0 \\\n && mkdir build \\\n && cd build \\\n && cmake3 .. \\\n && sudo make install\nRUN cd googletest \\\n && git log --oneline | head -n 5\n#   libgtest.a ends up in /usr/local/lib/\nRUN cp /usr/local/lib/libgtest.a /lib64/\n#   install specific arakoon.\nRUN git clone https://github.com/openvstorage/arakoon.git\nRUN cd arakoon \\\n && git pull \\\n && git checkout tags/1.9.22\nRUN cd arakoon \\\n && eval `${opam_env} ` \\\n && make\nRUN cd arakoon \\\n && eval `${opam_env} ` \\\n && export PREFIX=${opam_root}/${ocaml_version} \\\n && export OCAML_LIBDIR=`ocamlfind printconf destdir ` \\\n && make install\n#   install specific orocksdb\nRUN eval `${opam_env} ` \\\n && cd orocksdb \\\n && git checkout tags/0.3.0 \\\n && make build install\n#  for now, install ordma manually\nRUN yum -y install librdmacm-devel\nRUN git clone https://github.com/toolslive/ordma.git \\\n && cd ordma \\\n && git checkout tags/0.0.2 \\\n && eval `${opam_env} ` \\\n && make install\nRUN yum -y install rpm-build\nRUN yum -y install libgcrypt-devel\n#  gf-complete\nRUN rpm -ivv http://people.redhat.com/zaitcev/tmp/gf-complete-1.02-1.fc20.src.rpm\nRUN rpmbuild -ba /root/rpmbuild/SPECS/gf-complete.spec\nRUN rpm -i /root/rpmbuild/RPMS/x86_64/gf-complete-1.02-1.el7.centos.x86_64.rpm\nRUN rpm -i /root/rpmbuild/RPMS/x86_64/gf-complete-devel-1.02-1.el7.centos.x86_64.rpm\n#  jerasure\nRUN rpm -ivv http://people.redhat.com/zaitcev/tmp/jerasure-2.0-1.fc20.src.rpm\nRUN rpmbuild -ba /root/rpmbuild/SPECS/jerasure.spec\nRUN rpm -i /root/rpmbuild/RPMS/x86_64/jerasure-2.0-1.el7.centos.x86_64.rpm\nRUN rpm -i /root/rpmbuild/RPMS/x86_64/jerasure-devel-2.0-1.el7.centos.x86_64.rpm\nRUN echo \"jenkins ALL=NOPASSWD: ALL\" > /etc/sudoers.d/jenkins\nRUN echo -e '[ovs]\\nname=ovs\\nbaseurl=http://yum.openvstorage.org/CentOS/7/x86_64/dists/unstable\\nenabled=1\\ngpgcheck=0' > /etc/yum.repos.d/ovs.repo\nRUN cat /etc/yum.repos.d/ovs.repo\nRUN yum -y update \\\n && yum -y install iproute psmisc\n#  # installing voldrv packages only works from within the OVS LAN\nARG INSTALL_VOLDRV_PACKAGES=false\nRUN test ${INSTALL_VOLDRV_PACKAGES} = 'true' || echo 'we are NOT going to install the voldrv packages/testers'\n#   http://10.100.129.100:8080/view/volumedriver/view/centos/job/volumedriver-no-dedup-release-centos-7/35/artifact/volumedriver-core/build/rpm/volumedriver-no-dedup-base-debuginfo_6.10.1.0-1.rpm\nENV voldrv_jenkins=\"http://10.100.129.100:8080/view/volumedriver/view/centos/job/volumedriver-no-dedup-release-centos-7/35/artifact/volumedriver-core/build/rpm\"\nENV voldrv_base_pkg_name=\"volumedriver-no-dedup\"\nENV voldrv_version=\"6.10.1.0-1\"\nRUN test ${INSTALL_VOLDRV_PACKAGES} = 'false' || (wget ${voldrv_jenkins}/${voldrv_base_pkg_name}-base_${voldrv_version}.rpm \\\n && yum -y --nogpgcheck localinstall ${voldrv_base_pkg_name}-base_${voldrv_version}.rpm )\nRUN test ${INSTALL_VOLDRV_PACKAGES} = 'false' || (wget ${voldrv_jenkins}/${voldrv_base_pkg_name}-pitreplication_${voldrv_version}.rpm \\\n && yum -y --nogpgcheck localinstall ${voldrv_base_pkg_name}-pitreplication_${voldrv_version}.rpm )\nRUN test ${INSTALL_VOLDRV_PACKAGES} = 'false' || (wget ${voldrv_jenkins}/${voldrv_base_pkg_name}-server_${voldrv_version}.rpm \\\n && yum -y --nogpgcheck localinstall ${voldrv_base_pkg_name}-server_${voldrv_version}.rpm )\nRUN test ${INSTALL_VOLDRV_PACKAGES} = 'false' || (wget ${voldrv_jenkins}/libovsvolumedriver_${voldrv_version}.rpm \\\n && yum -y --nogpgcheck localinstall libovsvolumedriver_${voldrv_version}.rpm )\nRUN test ${INSTALL_VOLDRV_PACKAGES} = 'false' || (wget ${voldrv_jenkins}/${voldrv_base_pkg_name}-test_${voldrv_version}.rpm \\\n && yum -y --nogpgcheck localinstall ${voldrv_base_pkg_name}-test_${voldrv_version}.rpm )\nRUN chmod ugoa+rxw -R ${opam_root}\nRUN su - -c \"echo 'eval `${opam_env} `' >> /home/jenkins/.bash_profile\"\nRUN su - -c \"echo 'LD_LIBRARY_PATH=/usr/local/lib; export LD_LIBRARY_PATH;' >> /home/jenkins/.bash_profile\"\nRUN su - -c \"echo 'VOLDRV_TEST=volumedriver_test; export VOLDRV_TEST;' >> /home/jenkins/.bash_profile\"\nRUN su - -c \"echo 'VOLDRV_BACKEND_TEST=backend_test; export VOLDRV_BACKEND_TEST;' >> /home/jenkins/.bash_profile\"\nENTRYPOINT [\"/bin/bash\", \"-c\", \"set\", \"-e\", \"&&\", \"/home/jenkins/alba/docker/docker-entrypoint.sh\", \"$@\"]\n","originalDockerfileUglifiedHash":"41cacc6052ad048480b440526eb0214f","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/9b54a77116043901a03319ec3fd962ef0e52958d.dockerfile"}