{"seed":3628380913,"processedDockerfileHash":"7573f915c5e7ede3ed0c8c5be4f7c3bc","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM debian AS build\nARG NUM_CORES=2\nENV PREFIX=\"/tmp/ffmpeg_build\" \\\n    PKG_CONFIG_PATH=\"/tmp/ffmpeg_build/lib/pkgconfig\"\n#   Dependencies\nRUN apt-get update -qq \\\n && apt-get install --no-install-recommends autoconf=2.71-3 automake=1:1.16.5-1.3 build-essential=12.9ubuntu3 cmake=3.25.1-1 git=1:2.39.2-1ubuntu1 libass-dev=1:0.17.0-2 libfreetype6-dev=2.12.1+dfsg-4 libsdl2-dev=2.26.3+dfsg-1 libtheora-dev=1.1.1+dfsg.1-16.1 libtool=2.4.7-5 libva-dev=2.17.0-1 libvdpau-dev=1.5-2 libvorbis-dev=1.3.7-1build2 libxcb1-dev=1.15-1 libxcb-shm0-dev=1.15-1 libxcb-xfixes0-dev=1.15-1 mercurial=6.3.2-1 pkg-config=1.8.1-1ubuntu2 texinfo=6.8-6build2 wget=1.21.3-1ubuntu1 zlib1g-dev=1:1.2.13.dfsg-1ubuntu4 fontconfig=2.14.1-3ubuntu3 frei0r-plugins-dev=1.8.0-1build1 libass-dev=1:0.17.0-2 libfontconfig1-dev=2.14.1-3ubuntu3 libmp3lame-dev=3.100-6 libopencore-amrnb-dev=0.1.6-1 libopencore-amrwb-dev=0.1.6-1 libopus-dev=1.3.1-3 libspeex-dev=1.2.1-2ubuntu1 libtheora-dev=1.1.1+dfsg.1-16.1 libvorbis-dev=1.3.7-1build2 libvo-amrwbenc-dev=0.1.3-2 libwebp-dev=1.2.4-0.1build1 libx264-dev=2:0.164.3095+gitbaee400-2build1 libnuma-dev=2.0.16-1 libvpx-dev=1.12.0-1ubuntu1 libxvidcore-dev=2:1.3.7-1 texinfo=6.8-6build2 yasm=1.3.0-4 -y \\\n && apt-get clean \\\n && apt-get autoremove -y \\\n && rm -rf /var/lib/apt/lists/*\nWORKDIR /tmp\n#   openjpeg\nRUN git clone https://github.com/uclouvain/openjpeg.git --branch master --single-branch \\\n && cd openjpeg \\\n && cmake -DBUILD_THIRDPARTY:BOOL=ON -DCMAKE_INSTALL_PREFIX=\"${PREFIX}\" . \\\n && make -j \"${NUM_CORES}\" \\\n && make install \\\n && make clean\n#   libx265\nRUN git clone https://github.com/videolan/x265.git --branch master --single-branch \\\n && cd ./x265/build/linux \\\n && cmake -G \"Unix Makefiles\" -DCMAKE_INSTALL_PREFIX=\"${PREFIX}\" -DENABLE_SHARED:bool=off ../../source \\\n && make -j \"${NUM_CORES}\" \\\n && make install \\\n && make clean\n#   fribidi\nRUN git clone https://github.com/fribidi/fribidi.git --branch master --single-branch \\\n && cd fribidi \\\n && sed -i 's/^SUBDIRS =.*/SUBDIRS=gen.tab charset lib/' Makefile.am \\\n && ./bootstrap --no-config \\\n && ./configure -prefix=\"${PREFIX}\" --enable-static=yes --enable-shared=no \\\n && make -j \"${NUM_CORES}\" \\\n && make install \\\n && make clean\n#   soxr\nRUN git clone https://git.code.sf.net/p/soxr/code soxr --branch master --single-branch \\\n && cd soxr \\\n && mkdir build \\\n && cd build \\\n && cmake -Wno-dev -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=\"${PREFIX}\" -DBUILD_SHARED_LIBS=OFF .. \\\n && make -j \"${NUM_CORES}\" \\\n && make install \\\n && make clean\n#   FFmpeg\nRUN export BIN_DIR=\"/opt/ffmpeg/bin\" PATH=\"${BIN_DIR}:${PATH}\" \\\n && git clone https://github.com/ffmpeg/ffmpeg.git --branch master --single-branch \\\n && cd ./ffmpeg \\\n && ./configure --cc=gcc-6 --prefix=\"${PREFIX}\" --pkg-config-flags=\"--static\" --extra-cflags=\"-I${PREFIX}/include -static\" --extra-ldflags=\"-L${PREFIX}/lib -static\" --extra-libs=\"-lpthread -lm\" --bindir=\"${BIN_DIR}\" --cpu=\"sandybridge\" --arch=\"x84_64\" --disable-shared --enable-static --disable-debug --disable-runtime-cpudetect --disable-ffplay --disable-ffserver --disable-doc --disable-network --disable-devices --disable-protocols --enable-protocol=file --enable-protocol=pipe --enable-protocol=tee --enable-libmp3lame --enable-libvpx --enable-libwebp --enable-libopus --enable-fontconfig --enable-gray --enable-libfreetype --enable-libopenjpeg --enable-libspeex --enable-libtheora --enable-libvorbis --enable-libfribidi --enable-gpl --enable-frei0r --enable-libx264 --enable-libx265 --enable-libxvid --enable-version3 --enable-libopencore-amrnb --enable-libopencore-amrwb --enable-libvo-amrwbenc || if [ $? -gt 0 ] ; then tail -n 100 ./ffbuild/config.log \\\n && exit 1 ; fi \\\n && make -j \"${NUM_CORES}\" \\\n && make install \\\n && make distclean\nFROM alpine AS dist\nCOPY --from=build /opt/ /opt/\nCOPY --from=build /tmp/ffmpeg/COPYING.GPLv3 /opt/ffmpeg/\nRUN cd /opt/ffmpeg/bin \\\n && for file in *; do ln -s /opt/ffmpeg/bin/${file} /usr/local/bin/${file} ; done\nCMD [\"ffmpeg\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM debian AS build\nARG NUM_CORES=2\nENV PREFIX=\"/tmp/ffmpeg_build\" \\\n    PKG_CONFIG_PATH=\"/tmp/ffmpeg_build/lib/pkgconfig\"\n#  Dependencies\nRUN apt-get update -qq \\\n && apt-get install autoconf automake build-essential cmake git libass-dev libfreetype6-dev libsdl2-dev libtheora-dev libtool libva-dev libvdpau-dev libvorbis-dev libxcb1-dev libxcb-shm0-dev libxcb-xfixes0-dev mercurial pkg-config texinfo wget zlib1g-dev fontconfig frei0r-plugins-dev libass-dev libfontconfig1-dev libmp3lame-dev libopencore-amrnb-dev libopencore-amrwb-dev libopus-dev libspeex-dev libtheora-dev libvorbis-dev libvo-amrwbenc-dev libwebp-dev libx264-dev libnuma-dev libvpx-dev libxvidcore-dev texinfo yasm -y \\\n && apt-get clean \\\n && apt-get autoremove -y \\\n && rm -rf /var/lib/apt/lists/*\nWORKDIR /tmp\n#  openjpeg\nRUN git clone https://github.com/uclouvain/openjpeg.git --branch master --single-branch \\\n && cd openjpeg \\\n && cmake -DBUILD_THIRDPARTY:BOOL=ON -DCMAKE_INSTALL_PREFIX=\"${PREFIX}\" . \\\n && make -j \"${NUM_CORES}\" \\\n && make install \\\n && make clean\n#  libx265\nRUN git clone https://github.com/videolan/x265.git --branch master --single-branch \\\n && cd ./x265/build/linux \\\n && cmake -G \"Unix Makefiles\" -DCMAKE_INSTALL_PREFIX=\"${PREFIX}\" -DENABLE_SHARED:bool=off ../../source \\\n && make -j \"${NUM_CORES}\" \\\n && make install \\\n && make clean\n#  fribidi\nRUN git clone https://github.com/fribidi/fribidi.git --branch master --single-branch \\\n && cd fribidi \\\n && sed -i 's/^SUBDIRS =.*/SUBDIRS=gen.tab charset lib/' Makefile.am \\\n && ./bootstrap --no-config \\\n && ./configure -prefix=\"${PREFIX}\" --enable-static=yes --enable-shared=no \\\n && make -j \"${NUM_CORES}\" \\\n && make install \\\n && make clean\n#  soxr\nRUN git clone https://git.code.sf.net/p/soxr/code soxr --branch master --single-branch \\\n && cd soxr \\\n && mkdir build \\\n && cd build \\\n && cmake -Wno-dev -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=\"${PREFIX}\" -DBUILD_SHARED_LIBS=OFF .. \\\n && make -j \"${NUM_CORES}\" \\\n && make install \\\n && make clean\n#  FFmpeg\nRUN export BIN_DIR=\"/opt/ffmpeg/bin\" PATH=\"${BIN_DIR}:${PATH}\" \\\n && git clone https://github.com/ffmpeg/ffmpeg.git --branch master --single-branch \\\n && cd ./ffmpeg \\\n && ./configure --cc=gcc-6 --prefix=\"${PREFIX}\" --pkg-config-flags=\"--static\" --extra-cflags=\"-I${PREFIX}/include -static\" --extra-ldflags=\"-L${PREFIX}/lib -static\" --extra-libs=\"-lpthread -lm\" --bindir=\"${BIN_DIR}\" --cpu=\"sandybridge\" --arch=\"x84_64\" --disable-shared --enable-static --disable-debug --disable-runtime-cpudetect --disable-ffplay --disable-ffserver --disable-doc --disable-network --disable-devices --disable-protocols --enable-protocol=file --enable-protocol=pipe --enable-protocol=tee --enable-libmp3lame --enable-libvpx --enable-libwebp --enable-libopus --enable-fontconfig --enable-gray --enable-libfreetype --enable-libopenjpeg --enable-libspeex --enable-libtheora --enable-libvorbis --enable-libfribidi --enable-gpl --enable-frei0r --enable-libx264 --enable-libx265 --enable-libxvid --enable-version3 --enable-libopencore-amrnb --enable-libopencore-amrwb --enable-libvo-amrwbenc || if [ $? -gt 0 ] ; then tail -n 100 ./ffbuild/config.log \\\n && exit 1 ; fi \\\n && make -j \"${NUM_CORES}\" \\\n && make install \\\n && make distclean\nFROM alpine AS dist\nCOPY --from=build /opt/ /opt/\nCOPY --from=build /tmp/ffmpeg/COPYING.GPLv3 /opt/ffmpeg/\nRUN cd /opt/ffmpeg/bin \\\n && for file in *; do ln -s /opt/ffmpeg/bin/${file} /usr/local/bin/${file} ; done\nCMD [\"ffmpeg\"]\n","injectedSmells":[],"originalDockerfileHash":"1ee1b4e3a89d77e0816420a2d844b2f1","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM debian AS build\nARG NUM_CORES=2\nENV PREFIX=\"/tmp/ffmpeg_build\" \\\n    PKG_CONFIG_PATH=\"/tmp/ffmpeg_build/lib/pkgconfig\"\n#   Dependencies\nRUN apt-get update -qq \\\n && apt-get install autoconf automake build-essential cmake git libass-dev libfreetype6-dev libsdl2-dev libtheora-dev libtool libva-dev libvdpau-dev libvorbis-dev libxcb1-dev libxcb-shm0-dev libxcb-xfixes0-dev mercurial pkg-config texinfo wget zlib1g-dev fontconfig frei0r-plugins-dev libass-dev libfontconfig1-dev libmp3lame-dev libopencore-amrnb-dev libopencore-amrwb-dev libopus-dev libspeex-dev libtheora-dev libvorbis-dev libvo-amrwbenc-dev libwebp-dev libx264-dev libnuma-dev libvpx-dev libxvidcore-dev texinfo yasm -y \\\n && apt-get clean \\\n && apt-get autoremove -y \\\n && rm -rf /var/lib/apt/lists/*\nWORKDIR /tmp\n#   openjpeg\nRUN git clone https://github.com/uclouvain/openjpeg.git --branch master --single-branch \\\n && cd openjpeg \\\n && cmake -DBUILD_THIRDPARTY:BOOL=ON -DCMAKE_INSTALL_PREFIX=\"${PREFIX}\" . \\\n && make -j \"${NUM_CORES}\" \\\n && make install \\\n && make clean\n#   libx265\nRUN git clone https://github.com/videolan/x265.git --branch master --single-branch \\\n && cd ./x265/build/linux \\\n && cmake -G \"Unix Makefiles\" -DCMAKE_INSTALL_PREFIX=\"${PREFIX}\" -DENABLE_SHARED:bool=off ../../source \\\n && make -j \"${NUM_CORES}\" \\\n && make install \\\n && make clean\n#   fribidi\nRUN git clone https://github.com/fribidi/fribidi.git --branch master --single-branch \\\n && cd fribidi \\\n && sed -i 's/^SUBDIRS =.*/SUBDIRS=gen.tab charset lib/' Makefile.am \\\n && ./bootstrap --no-config \\\n && ./configure -prefix=\"${PREFIX}\" --enable-static=yes --enable-shared=no \\\n && make -j \"${NUM_CORES}\" \\\n && make install \\\n && make clean\n#   soxr\nRUN git clone https://git.code.sf.net/p/soxr/code soxr --branch master --single-branch \\\n && cd soxr \\\n && mkdir build \\\n && cd build \\\n && cmake -Wno-dev -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=\"${PREFIX}\" -DBUILD_SHARED_LIBS=OFF .. \\\n && make -j \"${NUM_CORES}\" \\\n && make install \\\n && make clean\n#   FFmpeg\nRUN export BIN_DIR=\"/opt/ffmpeg/bin\" PATH=\"${BIN_DIR}:${PATH}\" \\\n && git clone https://github.com/ffmpeg/ffmpeg.git --branch master --single-branch \\\n && cd ./ffmpeg \\\n && ./configure --cc=gcc-6 --prefix=\"${PREFIX}\" --pkg-config-flags=\"--static\" --extra-cflags=\"-I${PREFIX}/include -static\" --extra-ldflags=\"-L${PREFIX}/lib -static\" --extra-libs=\"-lpthread -lm\" --bindir=\"${BIN_DIR}\" --cpu=\"sandybridge\" --arch=\"x84_64\" --disable-shared --enable-static --disable-debug --disable-runtime-cpudetect --disable-ffplay --disable-ffserver --disable-doc --disable-network --disable-devices --disable-protocols --enable-protocol=file --enable-protocol=pipe --enable-protocol=tee --enable-libmp3lame --enable-libvpx --enable-libwebp --enable-libopus --enable-fontconfig --enable-gray --enable-libfreetype --enable-libopenjpeg --enable-libspeex --enable-libtheora --enable-libvorbis --enable-libfribidi --enable-gpl --enable-frei0r --enable-libx264 --enable-libx265 --enable-libxvid --enable-version3 --enable-libopencore-amrnb --enable-libopencore-amrwb --enable-libvo-amrwbenc || if [ $? -gt 0 ] ; then tail -n 100 ./ffbuild/config.log \\\n && exit 1 ; fi \\\n && make -j \"${NUM_CORES}\" \\\n && make install \\\n && make distclean\nFROM alpine AS dist\nCOPY --from=build /opt/ /opt/\nCOPY --from=build /tmp/ffmpeg/COPYING.GPLv3 /opt/ffmpeg/\nRUN cd /opt/ffmpeg/bin \\\n && for file in *; do ln -s /opt/ffmpeg/bin/${file} /usr/local/bin/${file} ; done\nCMD [\"ffmpeg\"]\n","originalDockerfileUglifiedHash":"bb6e55035c64a6c4254dcc736a41ad0c","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/ac726b08ae60d00b1a811033e4a5ec9f68a4f00c.dockerfile"}