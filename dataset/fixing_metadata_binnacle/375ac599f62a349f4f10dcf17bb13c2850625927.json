{"seed":193478912,"processedDockerfileHash":"44e426d0016c295622486d5264c58fb4","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-pip","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   postgres docker file adapted for use\n#   vim:set ft=dockerfile:\nFROM debian:jessie\n#   added extra field\nLABEL maintainer-1=\"Haaroon Yousaf (h.yousaf [at] ucl.ac.uk)\"\nRUN set -ex ; if ! command -v gpg > /dev/null; then apt-get update ;apt-get install --no-install-recommends gnupg dirmngr -y ;rm -rf /var/lib/apt/lists/* ; fi\n#   explicitly set user/group IDs\nRUN groupadd -r postgres --gid=999 \\\n && useradd -m -r -g postgres --uid=999 postgres\n#   grab gosu for easy step-down from root\nENV GOSU_VERSION=\"1.10\"\nRUN set -x \\\n && apt-get update \\\n && apt-get install --no-install-recommends ca-certificates wget -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;)\" \\\n && wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;).asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 \\\n && gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \\\n && rm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc \\\n && chmod +x /usr/local/bin/gosu \\\n && gosu nobody true \\\n && apt-get purge -y --auto-remove ca-certificates wget\n#   make the \"en_US.UTF-8\" locale so postgres will be utf-8 enabled by default\nRUN apt-get update \\\n && apt-get install --no-install-recommends locales -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8\nENV LANG=\"en_US.utf8\"\nRUN mkdir /docker-entrypoint-initdb.d\nRUN set -ex ; key='B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8' ; export GNUPGHOME=\"$( mktemp -d ;)\" ; gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\" ; gpg --export \"$key\" > /etc/apt/trusted.gpg.d/postgres.gpg; rm -rf \"$GNUPGHOME\" ; apt-key list\nENV PG_MAJOR=\"9.5\"\nENV PG_VERSION=\"9.5.12-1.pgdg80+1\"\nRUN set -ex ; dpkgArch=\"$( dpkg --print-architecture ;)\" ; case \"$dpkgArch\" in (amd64|i386|ppc64el) echo \"deb http://apt.postgresql.org/pub/repos/apt/ jessie-pgdg main $PG_MAJOR\" > /etc/apt/sources.list.d/pgdg.list; apt-get update ;;(*) echo \"deb-src http://apt.postgresql.org/pub/repos/apt/ jessie-pgdg main $PG_MAJOR\" > /etc/apt/sources.list.d/pgdg.list; tempDir=\"$( mktemp -d ;)\" ; cd \"$tempDir\" ; savedAptMark=\"$( apt-mark showmanual ;)\" ; apt-get update ; apt-get build-dep -y postgresql-common pgdg-keyring \"postgresql-$PG_MAJOR=$PG_VERSION\" ; DEB_BUILD_OPTIONS=\"nocheck parallel=$( nproc ;)\" apt-get source --compile postgresql-common pgdg-keyring \"postgresql-$PG_MAJOR=$PG_VERSION\" ; apt-mark showmanual | xargs apt-mark auto > /dev/null; apt-mark manual $savedAptMark ; ls -lAFh ; dpkg-scanpackages . > Packages; grep '^Package: ' Packages ; echo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list; apt-get -o Acquire::GzipIndexes=false update ;; esac ; apt-get install --no-install-recommends postgresql-common -y ; sed -ri 's/#(create_main_cluster) .*$/\\1 = false/' /etc/postgresql-common/createcluster.conf ; apt-get install --no-install-recommends \"postgresql-$PG_MAJOR=$PG_VERSION\" \"postgresql-contrib-$PG_MAJOR=$PG_VERSION\" -y ; rm -rf /var/lib/apt/lists/* ; if [ -n \"$tempDir\" ] ; then apt-get purge -y --auto-remove ;rm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list ; fi\n#   make the sample config easier to munge (and \"correct by default\")\nRUN mv -v \"/usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample\" /usr/share/postgresql/ \\\n && ln -sv ../postgresql.conf.sample \"/usr/share/postgresql/$PG_MAJOR/\" \\\n && sed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/share/postgresql/postgresql.conf.sample\nRUN mkdir -p /var/run/postgresql \\\n && chown -R postgres:postgres /var/run/postgresql \\\n && chmod 2777 /var/run/postgresql\nRUN apt-get update \\\n && apt-get install --no-install-recommends build-essential checkinstall wget curl libreadline-gplv2-dev libncursesw5-dev libssl-dev libsqlite3-dev tk-dev libgdbm-dev libc6-dev libbz2-dev python2.7 python-pip python-dev -y\nRUN apt-get update \\\n && apt-get install --no-install-recommends python-psycopg2 -y\nRUN pip install python-bitcoinrpc==1.0 SQLAlchemy==1.1.13 jsonschema==2.6.0 requests==2.18.4 simplejson==3.11.1 sqlalchemy-utils==0.33.2 psycopg2==2.9.6\nENV PATH=\"$PATH:/usr/lib/postgresql/$PG_MAJOR/bin\"\nENV PGDATA=\"/var/run/postgresql/data/pgdata\"\nENV SCRIPTS=\"/var/run/postgresql/data/scripts\"\nENV POSTGRES_DB=\"\\\"zcashdb\\\"\"\nRUN mkdir -p \"$SCRIPTS\" \\\n && chown -R postgres:postgres \"$SCRIPTS\" \\\n && chmod 777 \"$SCRIPTS\"\nCOPY docker/*.py $SCRIPTS/\nRUN mkdir -p \"$PGDATA\" \\\n && chown -R postgres:postgres \"$PGDATA\" \\\n && chmod 777 \"$PGDATA\"\nCOPY docker-entrypoint.sh /usr/local/bin/\nRUN chmod +x /usr/local/bin/docker-entrypoint.sh\nRUN ln -s usr/local/bin/docker-entrypoint.sh /\nENTRYPOINT [\"docker-entrypoint.sh\"]\nVOLUME [\"/var/run/postgresql/data/pgdata\"]\nVOLUME [\"/root/research\"]\nEXPOSE 5432/tcp\nCMD [\"postgres\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  postgres docker file adapted for use\n#  vim:set ft=dockerfile:\nFROM debian:jessie\n#  added extra field\nLABEL maintainer-1=\"Haaroon Yousaf (h.yousaf [at] ucl.ac.uk)\"\nRUN set -ex ; if ! command -v gpg > /dev/null; then apt-get update ;apt-get install --no-install-recommends gnupg dirmngr -y ;rm -rf /var/lib/apt/lists/* ; fi\n#  explicitly set user/group IDs\nRUN groupadd -r postgres --gid=999 \\\n && useradd -m -r -g postgres --uid=999 postgres\n#  grab gosu for easy step-down from root\nENV GOSU_VERSION=\"1.10\"\nRUN set -x \\\n && apt-get update \\\n && apt-get install --no-install-recommends ca-certificates wget -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;)\" \\\n && wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;).asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 \\\n && gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \\\n && rm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc \\\n && chmod +x /usr/local/bin/gosu \\\n && gosu nobody true \\\n && apt-get purge -y --auto-remove ca-certificates wget\n#  make the \"en_US.UTF-8\" locale so postgres will be utf-8 enabled by default\nRUN apt-get update \\\n && apt-get install locales -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8\nENV LANG=\"en_US.utf8\"\nRUN mkdir /docker-entrypoint-initdb.d\nRUN set -ex ; key='B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8' ; export GNUPGHOME=\"$( mktemp -d ;)\" ; gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\" ; gpg --export \"$key\" > /etc/apt/trusted.gpg.d/postgres.gpg; rm -rf \"$GNUPGHOME\" ; apt-key list\nENV PG_MAJOR=\"9.5\"\nENV PG_VERSION=\"9.5.12-1.pgdg80+1\"\nRUN set -ex ; dpkgArch=\"$( dpkg --print-architecture ;)\" ; case \"$dpkgArch\" in (amd64|i386|ppc64el) echo \"deb http://apt.postgresql.org/pub/repos/apt/ jessie-pgdg main $PG_MAJOR\" > /etc/apt/sources.list.d/pgdg.list; apt-get update ;;(*) echo \"deb-src http://apt.postgresql.org/pub/repos/apt/ jessie-pgdg main $PG_MAJOR\" > /etc/apt/sources.list.d/pgdg.list; tempDir=\"$( mktemp -d ;)\" ; cd \"$tempDir\" ; savedAptMark=\"$( apt-mark showmanual ;)\" ; apt-get update ; apt-get build-dep -y postgresql-common pgdg-keyring \"postgresql-$PG_MAJOR=$PG_VERSION\" ; DEB_BUILD_OPTIONS=\"nocheck parallel=$( nproc ;)\" apt-get source --compile postgresql-common pgdg-keyring \"postgresql-$PG_MAJOR=$PG_VERSION\" ; apt-mark showmanual | xargs apt-mark auto > /dev/null; apt-mark manual $savedAptMark ; ls -lAFh ; dpkg-scanpackages . > Packages; grep '^Package: ' Packages ; echo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list; apt-get -o Acquire::GzipIndexes=false update ;; esac ; apt-get install postgresql-common -y ; sed -ri 's/#(create_main_cluster) .*$/\\1 = false/' /etc/postgresql-common/createcluster.conf ; apt-get install \"postgresql-$PG_MAJOR=$PG_VERSION\" \"postgresql-contrib-$PG_MAJOR=$PG_VERSION\" -y ; rm -rf /var/lib/apt/lists/* ; if [ -n \"$tempDir\" ] ; then apt-get purge -y --auto-remove ;rm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list ; fi\n#  make the sample config easier to munge (and \"correct by default\")\nRUN mv -v \"/usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample\" /usr/share/postgresql/ \\\n && ln -sv ../postgresql.conf.sample \"/usr/share/postgresql/$PG_MAJOR/\" \\\n && sed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/share/postgresql/postgresql.conf.sample\nRUN mkdir -p /var/run/postgresql \\\n && chown -R postgres:postgres /var/run/postgresql \\\n && chmod 2777 /var/run/postgresql\nRUN apt-get update \\\n && apt-get install build-essential checkinstall wget curl libreadline-gplv2-dev libncursesw5-dev libssl-dev libsqlite3-dev tk-dev libgdbm-dev libc6-dev libbz2-dev python2.7 python-pip python-dev -y\nRUN apt-get update \\\n && apt-get install python-psycopg2 -y\nRUN pip install python-bitcoinrpc SQLAlchemy==1.1.13 jsonschema==2.6.0 requests==2.18.4 simplejson==3.11.1 sqlalchemy-utils==0.33.2 psycopg2\nENV PATH=\"$PATH:/usr/lib/postgresql/$PG_MAJOR/bin\"\nENV PGDATA=\"/var/run/postgresql/data/pgdata\"\nENV SCRIPTS=\"/var/run/postgresql/data/scripts\"\nENV POSTGRES_DB=\"\\\"zcashdb\\\"\"\nRUN mkdir -p \"$SCRIPTS\" \\\n && chown -R postgres:postgres \"$SCRIPTS\" \\\n && chmod 777 \"$SCRIPTS\"\nADD docker/*.py $SCRIPTS/\nRUN mkdir -p \"$PGDATA\" \\\n && chown -R postgres:postgres \"$PGDATA\" \\\n && chmod 777 \"$PGDATA\"\nCOPY docker-entrypoint.sh /usr/local/bin/\nRUN chmod +x /usr/local/bin/docker-entrypoint.sh\nRUN ln -s usr/local/bin/docker-entrypoint.sh /\nENTRYPOINT [\"docker-entrypoint.sh\"]\nVOLUME [\"/var/run/postgresql/data/pgdata\"]\nVOLUME [\"/root/research\"]\nEXPOSE 5432/tcp\nCMD [\"postgres\"]\n","injectedSmells":[],"originalDockerfileHash":"5af94ae66a5741f4facb7c390b884100","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   postgres docker file adapted for use\n#   vim:set ft=dockerfile:\nFROM debian:jessie\n#   added extra field\nLABEL maintainer-1=\"Haaroon Yousaf (h.yousaf [at] ucl.ac.uk)\"\nRUN set -ex ; if ! command -v gpg > /dev/null; then apt-get update ;apt-get install --no-install-recommends gnupg dirmngr -y ;rm -rf /var/lib/apt/lists/* ; fi\n#   explicitly set user/group IDs\nRUN groupadd -r postgres --gid=999 \\\n && useradd -m -r -g postgres --uid=999 postgres\n#   grab gosu for easy step-down from root\nENV GOSU_VERSION=\"1.10\"\nRUN set -x \\\n && apt-get update \\\n && apt-get install --no-install-recommends ca-certificates wget -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;)\" \\\n && wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;).asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 \\\n && gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \\\n && rm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc \\\n && chmod +x /usr/local/bin/gosu \\\n && gosu nobody true \\\n && apt-get purge -y --auto-remove ca-certificates wget\n#   make the \"en_US.UTF-8\" locale so postgres will be utf-8 enabled by default\nRUN apt-get update \\\n && apt-get install locales -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8\nENV LANG=\"en_US.utf8\"\nRUN mkdir /docker-entrypoint-initdb.d\nRUN set -ex ; key='B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8' ; export GNUPGHOME=\"$( mktemp -d ;)\" ; gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\" ; gpg --export \"$key\" > /etc/apt/trusted.gpg.d/postgres.gpg; rm -rf \"$GNUPGHOME\" ; apt-key list\nENV PG_MAJOR=\"9.5\"\nENV PG_VERSION=\"9.5.12-1.pgdg80+1\"\nRUN set -ex ; dpkgArch=\"$( dpkg --print-architecture ;)\" ; case \"$dpkgArch\" in (amd64|i386|ppc64el) echo \"deb http://apt.postgresql.org/pub/repos/apt/ jessie-pgdg main $PG_MAJOR\" > /etc/apt/sources.list.d/pgdg.list; apt-get update ;;(*) echo \"deb-src http://apt.postgresql.org/pub/repos/apt/ jessie-pgdg main $PG_MAJOR\" > /etc/apt/sources.list.d/pgdg.list; tempDir=\"$( mktemp -d ;)\" ; cd \"$tempDir\" ; savedAptMark=\"$( apt-mark showmanual ;)\" ; apt-get update ; apt-get build-dep -y postgresql-common pgdg-keyring \"postgresql-$PG_MAJOR=$PG_VERSION\" ; DEB_BUILD_OPTIONS=\"nocheck parallel=$( nproc ;)\" apt-get source --compile postgresql-common pgdg-keyring \"postgresql-$PG_MAJOR=$PG_VERSION\" ; apt-mark showmanual | xargs apt-mark auto > /dev/null; apt-mark manual $savedAptMark ; ls -lAFh ; dpkg-scanpackages . > Packages; grep '^Package: ' Packages ; echo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list; apt-get -o Acquire::GzipIndexes=false update ;; esac ; apt-get install postgresql-common -y ; sed -ri 's/#(create_main_cluster) .*$/\\1 = false/' /etc/postgresql-common/createcluster.conf ; apt-get install \"postgresql-$PG_MAJOR=$PG_VERSION\" \"postgresql-contrib-$PG_MAJOR=$PG_VERSION\" -y ; rm -rf /var/lib/apt/lists/* ; if [ -n \"$tempDir\" ] ; then apt-get purge -y --auto-remove ;rm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list ; fi\n#   make the sample config easier to munge (and \"correct by default\")\nRUN mv -v \"/usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample\" /usr/share/postgresql/ \\\n && ln -sv ../postgresql.conf.sample \"/usr/share/postgresql/$PG_MAJOR/\" \\\n && sed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/share/postgresql/postgresql.conf.sample\nRUN mkdir -p /var/run/postgresql \\\n && chown -R postgres:postgres /var/run/postgresql \\\n && chmod 2777 /var/run/postgresql\nRUN apt-get update \\\n && apt-get install build-essential checkinstall wget curl libreadline-gplv2-dev libncursesw5-dev libssl-dev libsqlite3-dev tk-dev libgdbm-dev libc6-dev libbz2-dev python2.7 python-pip python-dev -y\nRUN apt-get update \\\n && apt-get install python-psycopg2 -y\nRUN pip install python-bitcoinrpc SQLAlchemy==1.1.13 jsonschema==2.6.0 requests==2.18.4 simplejson==3.11.1 sqlalchemy-utils==0.33.2 psycopg2\nENV PATH=\"$PATH:/usr/lib/postgresql/$PG_MAJOR/bin\"\nENV PGDATA=\"/var/run/postgresql/data/pgdata\"\nENV SCRIPTS=\"/var/run/postgresql/data/scripts\"\nENV POSTGRES_DB=\"\\\"zcashdb\\\"\"\nRUN mkdir -p \"$SCRIPTS\" \\\n && chown -R postgres:postgres \"$SCRIPTS\" \\\n && chmod 777 \"$SCRIPTS\"\nADD docker/*.py $SCRIPTS/\nRUN mkdir -p \"$PGDATA\" \\\n && chown -R postgres:postgres \"$PGDATA\" \\\n && chmod 777 \"$PGDATA\"\nCOPY docker-entrypoint.sh /usr/local/bin/\nRUN chmod +x /usr/local/bin/docker-entrypoint.sh\nRUN ln -s usr/local/bin/docker-entrypoint.sh /\nENTRYPOINT [\"docker-entrypoint.sh\"]\nVOLUME [\"/var/run/postgresql/data/pgdata\"]\nVOLUME [\"/root/research\"]\nEXPOSE 5432/tcp\nCMD [\"postgres\"]\n","originalDockerfileUglifiedHash":"e716597da7a8fd06666f420e8bec872c","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/375ac599f62a349f4f10dcf17bb13c2850625927.dockerfile"}