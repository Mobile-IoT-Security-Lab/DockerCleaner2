{"seed":2836114473,"processedDockerfileHash":"1587de8a4ea1fbc178b5a08c922afcf3","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"#\n#   Licensed to the Apache Software Foundation (ASF) under one\n#   or more contributor license agreements.  See the NOTICE file\n#   distributed with this work for additional information\n#   regarding copyright ownership.  The ASF licenses this file\n#   to you under the Apache License, Version 2.0 (the\n#   \"License\"); you may not use this file except in compliance\n#   with the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n#   Unless required by applicable law or agreed to in writing,\n#   software distributed under the License is distributed on an\n#   \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n#   KIND, either express or implied.  See the License for the\n#   specific language governing permissions and limitations\n#   under the License.\nFROM ubuntu:16.04\n#  ## Get necessary libraries to add postgresql apt repository\nRUN apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends lsb-core=9.20160110ubuntu0.2 software-properties-common=0.96.20.10 wget=1.17.1-1ubuntu1.5 -y )\n#  ## Add postgresql apt repository\nRUN add-apt-repository \"deb http://apt.postgresql.org/pub/repos/apt/ $( lsb_release -sc ;)-pgdg main\" \\\n && wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add -\n#  ## Have to update after getting new repository\nRUN :\n#  ## Get postgres10 and postgres specific add-ons\nRUN (apt-get update ;apt-get install --no-install-recommends postgresql-10 postgresql-client-10 postgresql-plpython-10 postgresql-server-dev-10 libpq-dev=9.5.25-0ubuntu0.16.04.1 build-essential=12.1ubuntu2 openssl=1.0.2g-1ubuntu4.20 libssl-dev=1.0.2g-1ubuntu4.20 libboost-all-dev=1.58.0.1ubuntu1 m4=1.4.17-5 vim=2:7.4.1689-3ubuntu1.5 pgxnclient=1.2.1-3 flex=2.6.0-11 bison=2:3.0.4.dfsg-1 graphviz=2.38.0-12ubuntu2.1 -y )\n#  ## Reset pg_hba.conf file to allow no password prompt\n#  ## Docker file doesn't support heardoc, like cat > /etc/postgresql/10/main/pg_hba.conf<<-EOF,\n#  ## and this echo and \\n\\ are workaround to write the file\nRUN echo \" \\n local all all trust \\n local all all trust \\n host all all 127.0.0.1/32 trust \\n host all all ::1/128 trust \\n\" > /etc/postgresql/10/main/pg_hba.conf\n#  ## We need to set nproc to unlimited to be able to run scripts as\n#  ## the user 'postgres'. This is actually useful when we try to setup\n#  ## and start a Postgres server.\nRUN echo \" * soft nproc unlimited \" > /etc/security/limits.d/postgres-limits.conf\n#  ## Always start postgres server when login\nRUN echo \"service postgresql start\" >> ~/.bashrc\n#  ## Build custom CMake with SSQL support\nRUN wget https://cmake.org/files/v3.6/cmake-3.6.1.tar.gz \\\n && tar -zxvf cmake-3.6.1.tar.gz \\\n && cd cmake-3.6.1 \\\n && sed -i 's/-DCMAKE_BOOTSTRAP=1/-DCMAKE_BOOTSTRAP=1 -DCMAKE_USE_OPENSSL=ON/g' bootstrap \\\n && ./configure \\\n && make -j2 \\\n && make install \\\n && cd ..\n#  ## Install doxygen-1.8.13:\nRUN wget http://ftp.stack.nl/pub/users/dimitri/doxygen-1.8.13.src.tar.gz \\\n && tar xf doxygen-1.8.13.src.tar.gz \\\n && cd doxygen-1.8.13 \\\n && mkdir build \\\n && cd build \\\n && cmake -G \"Unix Makefiles\" .. \\\n && make \\\n && make install\n#  ## Optional: install LaTex\n#  ## uncomment the following 'RUN apt-get' line to bake LaTex into the image\n#  ## Note: if you run the following line, please tag the image as\n#  ## madlib/postgres_10:LaTex, and don't tag it as latest\n#   RUN apt-get install -y texlive-full\n#  # To build an image from this docker file without LaTex, from madlib folder, run:\n#  # docker build -t madlib/postgres_10:latest -f tool/docker/base/Dockerfile_ubuntu16_postgres10 .\n#  # To push it to docker hub, run:\n#  # docker push madlib/postgres_10:latest\n#  # To build an image from this docker file with LaTex, from madlib folder, uncomment\n#  # line 88, and run:\n#  # docker build -t madlib/postgres_10:LaTex -f tool/docker/base/Dockerfile_ubuntu16_postgres10 .\n#  # To push it to docker hub, run:\n#  # docker push madlib/postgres_10:LaTex\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#\n#  Licensed to the Apache Software Foundation (ASF) under one\n#  or more contributor license agreements.  See the NOTICE file\n#  distributed with this work for additional information\n#  regarding copyright ownership.  The ASF licenses this file\n#  to you under the Apache License, Version 2.0 (the\n#  \"License\"); you may not use this file except in compliance\n#  with the License.  You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n#  Unless required by applicable law or agreed to in writing,\n#  software distributed under the License is distributed on an\n#  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n#  KIND, either express or implied.  See the License for the\n#  specific language governing permissions and limitations\n#  under the License.\nFROM ubuntu:16.04\n# ## Get necessary libraries to add postgresql apt repository\nRUN apt-get update \\\n && apt-get install lsb-core software-properties-common wget -y\n# ## Add postgresql apt repository\nRUN add-apt-repository \"deb http://apt.postgresql.org/pub/repos/apt/ $( lsb_release -sc ;)-pgdg main\" \\\n && wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add -\n# ## Have to update after getting new repository\nRUN apt-get update\n# ## Get postgres10 and postgres specific add-ons\nRUN apt-get install postgresql-10 postgresql-client-10 postgresql-plpython-10 postgresql-server-dev-10 libpq-dev build-essential openssl libssl-dev libboost-all-dev m4 vim pgxnclient flex bison graphviz -y\n# ## Reset pg_hba.conf file to allow no password prompt\n# ## Docker file doesn't support heardoc, like cat > /etc/postgresql/10/main/pg_hba.conf<<-EOF,\n# ## and this echo and \\n\\ are workaround to write the file\nRUN echo \" \\n local all all trust \\n local all all trust \\n host all all 127.0.0.1/32 trust \\n host all all ::1/128 trust \\n\" > /etc/postgresql/10/main/pg_hba.conf\n# ## We need to set nproc to unlimited to be able to run scripts as\n# ## the user 'postgres'. This is actually useful when we try to setup\n# ## and start a Postgres server.\nRUN echo \" * soft nproc unlimited \" > /etc/security/limits.d/postgres-limits.conf\n# ## Always start postgres server when login\nRUN echo \"service postgresql start\" >> ~/.bashrc\n# ## Build custom CMake with SSQL support\nRUN wget https://cmake.org/files/v3.6/cmake-3.6.1.tar.gz \\\n && tar -zxvf cmake-3.6.1.tar.gz \\\n && cd cmake-3.6.1 \\\n && sed -i 's/-DCMAKE_BOOTSTRAP=1/-DCMAKE_BOOTSTRAP=1 -DCMAKE_USE_OPENSSL=ON/g' bootstrap \\\n && ./configure \\\n && make -j2 \\\n && make install \\\n && cd ..\n# ## Install doxygen-1.8.13:\nRUN wget http://ftp.stack.nl/pub/users/dimitri/doxygen-1.8.13.src.tar.gz \\\n && tar xf doxygen-1.8.13.src.tar.gz \\\n && cd doxygen-1.8.13 \\\n && mkdir build \\\n && cd build \\\n && cmake -G \"Unix Makefiles\" .. \\\n && make \\\n && make install\n# ## Optional: install LaTex\n# ## uncomment the following 'RUN apt-get' line to bake LaTex into the image\n# ## Note: if you run the following line, please tag the image as\n# ## madlib/postgres_10:LaTex, and don't tag it as latest\n#  RUN apt-get install -y texlive-full\n# # To build an image from this docker file without LaTex, from madlib folder, run:\n# # docker build -t madlib/postgres_10:latest -f tool/docker/base/Dockerfile_ubuntu16_postgres10 .\n# # To push it to docker hub, run:\n# # docker push madlib/postgres_10:latest\n# # To build an image from this docker file with LaTex, from madlib folder, uncomment\n# # line 88, and run:\n# # docker build -t madlib/postgres_10:LaTex -f tool/docker/base/Dockerfile_ubuntu16_postgres10 .\n# # To push it to docker hub, run:\n# # docker push madlib/postgres_10:LaTex\n","injectedSmells":[],"originalDockerfileHash":"125719516a1275bf23116f87a90bac29","successfullyInjectedSmells":[],"originalDockerfileUglified":"#\n#   Licensed to the Apache Software Foundation (ASF) under one\n#   or more contributor license agreements.  See the NOTICE file\n#   distributed with this work for additional information\n#   regarding copyright ownership.  The ASF licenses this file\n#   to you under the Apache License, Version 2.0 (the\n#   \"License\"); you may not use this file except in compliance\n#   with the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n#   Unless required by applicable law or agreed to in writing,\n#   software distributed under the License is distributed on an\n#   \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n#   KIND, either express or implied.  See the License for the\n#   specific language governing permissions and limitations\n#   under the License.\nFROM ubuntu:16.04\n#  ## Get necessary libraries to add postgresql apt repository\nRUN apt-get update \\\n && apt-get install lsb-core software-properties-common wget -y\n#  ## Add postgresql apt repository\nRUN add-apt-repository \"deb http://apt.postgresql.org/pub/repos/apt/ $( lsb_release -sc ;)-pgdg main\" \\\n && wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add -\n#  ## Have to update after getting new repository\nRUN apt-get update\n#  ## Get postgres10 and postgres specific add-ons\nRUN apt-get install postgresql-10 postgresql-client-10 postgresql-plpython-10 postgresql-server-dev-10 libpq-dev build-essential openssl libssl-dev libboost-all-dev m4 vim pgxnclient flex bison graphviz -y\n#  ## Reset pg_hba.conf file to allow no password prompt\n#  ## Docker file doesn't support heardoc, like cat > /etc/postgresql/10/main/pg_hba.conf<<-EOF,\n#  ## and this echo and \\n\\ are workaround to write the file\nRUN echo \" \\n local all all trust \\n local all all trust \\n host all all 127.0.0.1/32 trust \\n host all all ::1/128 trust \\n\" > /etc/postgresql/10/main/pg_hba.conf\n#  ## We need to set nproc to unlimited to be able to run scripts as\n#  ## the user 'postgres'. This is actually useful when we try to setup\n#  ## and start a Postgres server.\nRUN echo \" * soft nproc unlimited \" > /etc/security/limits.d/postgres-limits.conf\n#  ## Always start postgres server when login\nRUN echo \"service postgresql start\" >> ~/.bashrc\n#  ## Build custom CMake with SSQL support\nRUN wget https://cmake.org/files/v3.6/cmake-3.6.1.tar.gz \\\n && tar -zxvf cmake-3.6.1.tar.gz \\\n && cd cmake-3.6.1 \\\n && sed -i 's/-DCMAKE_BOOTSTRAP=1/-DCMAKE_BOOTSTRAP=1 -DCMAKE_USE_OPENSSL=ON/g' bootstrap \\\n && ./configure \\\n && make -j2 \\\n && make install \\\n && cd ..\n#  ## Install doxygen-1.8.13:\nRUN wget http://ftp.stack.nl/pub/users/dimitri/doxygen-1.8.13.src.tar.gz \\\n && tar xf doxygen-1.8.13.src.tar.gz \\\n && cd doxygen-1.8.13 \\\n && mkdir build \\\n && cd build \\\n && cmake -G \"Unix Makefiles\" .. \\\n && make \\\n && make install\n#  ## Optional: install LaTex\n#  ## uncomment the following 'RUN apt-get' line to bake LaTex into the image\n#  ## Note: if you run the following line, please tag the image as\n#  ## madlib/postgres_10:LaTex, and don't tag it as latest\n#   RUN apt-get install -y texlive-full\n#  # To build an image from this docker file without LaTex, from madlib folder, run:\n#  # docker build -t madlib/postgres_10:latest -f tool/docker/base/Dockerfile_ubuntu16_postgres10 .\n#  # To push it to docker hub, run:\n#  # docker push madlib/postgres_10:latest\n#  # To build an image from this docker file with LaTex, from madlib folder, uncomment\n#  # line 88, and run:\n#  # docker build -t madlib/postgres_10:LaTex -f tool/docker/base/Dockerfile_ubuntu16_postgres10 .\n#  # To push it to docker hub, run:\n#  # docker push madlib/postgres_10:LaTex\n","originalDockerfileUglifiedHash":"73698bd8cd4de8098a66578ae1417475","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/cf7b4f28e33053407ba2988e36c423e123b49ed8.dockerfile"}