{"seed":2189736442,"processedDockerfileHash":"d075136fdd9a03855fcc507d1bac4183","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apt-get","pin-package-manager-versions-npm","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Licensed to the Apache Software Foundation (ASF) under one\n#   or more contributor license agreements.  See the NOTICE file\n#   distributed with this work for additional information\n#   regarding copyright ownership.  The ASF licenses this file\n#   to you under the Apache License, Version 2.0 (the\n#   \"License\"); you may not use this file except in compliance\n#   with the License.  You may obtain a copy of the License at\n#\n#       http://www.apache.org/licenses/LICENSE-2.0\n#\n#   Unless required by applicable law or agreed to in writing, software\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#   See the License for the specific language governing permissions and\n#   limitations under the License.\n#   Dockerfile for installing the necessary dependencies for building Hadoop.\n#   See BUILDING.txt.\nFROM ubuntu:xenial\nWORKDIR /root\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\n#  ####\n#   Disable suggests/recommends\n#  ####\nRUN echo APT::Install-Recommends \"0\" ; > /etc/apt/apt.conf.d/10disableextras\nRUN echo APT::Install-Suggests \"0\" ; >> /etc/apt/apt.conf.d/10disableextras\nENV DEBIAN_FRONTEND=\"noninteractive\"\nENV DEBCONF_TERSE=\"true\"\n#  #####\n#   Install common dependencies from packages. Versions here are either\n#   sufficient or irrelevant.\n#\n#   WARNING: DO NOT PUT JAVA APPS HERE! Otherwise they will install default\n#   Ubuntu Java.  See Java section below!\n#  #####\n#   hadolint ignore=DL3008\nRUN apt-get update -q \\\n && apt-get install --no-install-recommends apt-utils=1.2.35 build-essential=12.1ubuntu2 bzip2=1.0.6-8ubuntu0.2 clang=1:3.8-33ubuntu3.1 curl=7.47.0-1ubuntu2.19 doxygen=1.8.11-1ubuntu0.1 fuse=2.9.4-1ubuntu3.1 g++=4:5.3.1-1ubuntu1 gcc=4:5.3.1-1ubuntu1 git=1:2.7.4-0ubuntu1.10 gnupg-agent=2.1.11-6ubuntu2.1 libbz2-dev=1.0.6-8ubuntu0.2 libcurl4-openssl-dev=7.47.0-1ubuntu2.19 libfuse-dev=2.9.4-1ubuntu3.1 libprotobuf-dev=2.6.1-1.3 libprotoc-dev=2.6.1-1.3 libsasl2-dev=2.1.26.dfsg1-14ubuntu0.2 libsnappy-dev=1.1.3-2 libssl-dev=1.0.2g-1ubuntu4.20 libtool=2.4.6-0.1 locales=2.23-0ubuntu11.3 make=4.1-6 pinentry-curses=0.9.7-3 pkg-config=0.29.1-0ubuntu1 python=2.7.12-1~16.04 python2.7=2.7.12-1ubuntu0~16.04.18 python-pip=8.1.1-2ubuntu0.6 python-pkg-resources=20.7.0-1 python-setuptools=20.7.0-1 python-wheel=0.29.0-1 rsync=3.1.1-3ubuntu1.3 software-properties-common=0.96.20.10 snappy=0.3.7-1.1 sudo=1.8.16-0ubuntu1.10 valgrind=1:3.11.0-1ubuntu4.2 zlib1g-dev=1:1.2.8.dfsg-2ubuntu4.3 -q -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n#  ######\n#   OpenJDK 8\n#  ######\n#   hadolint ignore=DL3008\nRUN apt-get update -q \\\n && apt-get install --no-install-recommends openjdk-8-jdk=8u292-b10-0ubuntu1~16.04.1 libbcprov-java=1.51-4ubuntu1 -q -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n#  #####\n#   Install cmake 3.1.0 (3.5.1 ships with Xenial)\n#  #####\nRUN mkdir -p /opt/cmake \\\n && curl -L -s -S https://cmake.org/files/v3.1/cmake-3.1.0-Linux-x86_64.tar.gz -o /opt/cmake.tar.gz \\\n && tar xzf /opt/cmake.tar.gz --strip-components 1 -C /opt/cmake\nENV CMAKE_HOME=\"/opt/cmake\"\nENV PATH=\"\\\"${PATH}:/opt/cmake/bin\\\"\"\n#  #####\n#   Install Google Protobuf 2.5.0 (2.6.0 ships with Xenial)\n#  #####\n#   hadolint ignore=DL3003\nRUN mkdir -p /opt/protobuf-src \\\n && curl -L -s -S https://github.com/google/protobuf/releases/download/v2.5.0/protobuf-2.5.0.tar.gz -o /opt/protobuf.tar.gz \\\n && tar xzf /opt/protobuf.tar.gz --strip-components 1 -C /opt/protobuf-src \\\n && cd /opt/protobuf-src \\\n && ./configure --prefix=/opt/protobuf \\\n && make install \\\n && cd /root \\\n && rm -rf /opt/protobuf-src\nENV PROTOBUF_HOME=\"/opt/protobuf\"\nENV PATH=\"\\\"${PATH}:/opt/protobuf/bin\\\"\"\n#  #####\n#   Install Apache Maven 3.3.9 (3.3.9 ships with Xenial)\n#  #####\n#   hadolint ignore=DL3008\nRUN apt-get update -q \\\n && apt-get install --no-install-recommends maven=3.3.9-3 -q -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\nENV MAVEN_HOME=\"/usr\"\n#  #####\n#   Install findbugs 3.0.1 (3.0.1 ships with Xenial)\n#   Ant is needed for findbugs\n#  #####\n#   hadolint ignore=DL3008\nRUN apt-get update -q \\\n && apt-get install --no-install-recommends findbugs=3.0.1-2 ant=1.9.6-1ubuntu1.1 -q -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\nENV FINDBUGS_HOME=\"/usr\"\n#  ###\n#   Install shellcheck (0.4.6, the latest as of 2017-09-26)\n#  ###\n#   hadolint ignore=DL3008\nRUN add-apt-repository -y ppa:jonathonf/ghc-8.0.2 \\\n && apt-get update -q \\\n && apt-get install --no-install-recommends shellcheck=0.3.7-5 -q -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n#  ###\n#   Install bats (0.4.0, the latest as of 2017-09-26, ships with Xenial)\n#  ###\n#   hadolint ignore=DL3008\nRUN apt-get update -q \\\n && apt-get install --no-install-recommends bats=0.4.0-1ubuntu4 -q -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n#  ###\n#   Install pylint at fixed version (2.0.0 removed python2 support)\n#   https://github.com/PyCQA/pylint/issues/2294\n#  ###\nRUN pip2 install pylint==1.9.2\n#  ###\n#   Install dateutil.parser\n#  ###\nRUN pip2 install python-dateutil==2.7.3\n#  ##\n#   Install node.js for web UI framework (4.2.6 ships with Xenial)\n#  ##\n#   hadolint ignore=DL3008, DL3016\nRUN apt-get update -q \\\n && apt-get install --no-install-recommends nodejs=4.2.6~dfsg-1ubuntu4.2 npm=3.5.2-0ubuntu4 -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* \\\n && ln -s /usr/bin/nodejs /usr/bin/node \\\n && npm install npm@latest -g \\\n && npm install jshint@2.13.6 -g\n#  ##\n#   Install hadolint\n#  ###\nRUN curl -L -s -S https://github.com/hadolint/hadolint/releases/download/v1.11.1/hadolint-Linux-x86_64 -o /bin/hadolint \\\n && chmod a+rx /bin/hadolint \\\n && shasum -a 512 /bin/hadolint | awk '$1!=\"734e37c1f6619cbbd86b9b249e69c9af8ee1ea87a2b1ff71dccda412e9dac35e63425225a95d71572091a3f0a11e9a04c2fc25d9e91b840530c26af32b9891ca\" {exit(1)}'\n#  ##\n#   Avoid out of memory errors in builds\n#  ##\nENV MAVEN_OPTS=\"-Xms256m -Xmx1536m\"\n#  ##\n#   Everything past this point is either not needed for testing or breaks Yetus.\n#   So tell Yetus not to read the rest of the file:\n#   YETUS CUT HERE\n#  ##\n#  ###\n#   Install svn & Forrest (for Apache Hadoop website)\n#  ##\n#   hadolint ignore=DL3008\nRUN apt-get update -q \\\n && apt-get install --no-install-recommends subversion=1.9.3-2ubuntu1.3 -q -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\nRUN mkdir -p /opt/apache-forrest \\\n && curl -L -s -S https://archive.apache.org/dist/forrest/0.8/apache-forrest-0.8.tar.gz -o /opt/forrest.tar.gz \\\n && tar xzf /opt/forrest.tar.gz --strip-components 1 -C /opt/apache-forrest\nRUN echo 'forrest.home=/opt/apache-forrest' > build.properties\nENV FORREST_HOME=\"/opt/apache-forrest\"\n#   Hugo static website generator (for new tez site and Ozone docs)\nRUN curl -L -o hugo.deb https://github.com/gohugoio/hugo/releases/download/v0.30.2/hugo_0.30.2_Linux-64bit.deb \\\n && dpkg --install hugo.deb \\\n && rm hugo.deb\n#   Add a welcome message and environment checks.\nCOPY tez_env_checks.sh /root/tez_env_checks.sh\nRUN chmod 755 /root/tez_env_checks.sh\n#   hadolint ignore=SC2016\nRUN echo '${HOME}/tez_env_checks.sh' >> /root/.bashrc\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Licensed to the Apache Software Foundation (ASF) under one\n#  or more contributor license agreements.  See the NOTICE file\n#  distributed with this work for additional information\n#  regarding copyright ownership.  The ASF licenses this file\n#  to you under the Apache License, Version 2.0 (the\n#  \"License\"); you may not use this file except in compliance\n#  with the License.  You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n#  Unless required by applicable law or agreed to in writing, software\n#  distributed under the License is distributed on an \"AS IS\" BASIS,\n#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#  See the License for the specific language governing permissions and\n#  limitations under the License.\n#  Dockerfile for installing the necessary dependencies for building Hadoop.\n#  See BUILDING.txt.\nFROM ubuntu:xenial\nWORKDIR /root\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\n# ####\n#  Disable suggests/recommends\n# ####\nRUN echo APT::Install-Recommends \"0\"; > /etc/apt/apt.conf.d/10disableextras\nRUN echo APT::Install-Suggests \"0\"; >> /etc/apt/apt.conf.d/10disableextras\nENV DEBIAN_FRONTEND=\"noninteractive\"\nENV DEBCONF_TERSE=\"true\"\n# #####\n#  Install common dependencies from packages. Versions here are either\n#  sufficient or irrelevant.\n#\n#  WARNING: DO NOT PUT JAVA APPS HERE! Otherwise they will install default\n#  Ubuntu Java.  See Java section below!\n# #####\n#  hadolint ignore=DL3008\nRUN apt-get update -q \\\n && apt-get install --no-install-recommends apt-utils build-essential bzip2 clang curl doxygen fuse g++ gcc git gnupg-agent libbz2-dev libcurl4-openssl-dev libfuse-dev libprotobuf-dev libprotoc-dev libsasl2-dev libsnappy-dev libssl-dev libtool locales make pinentry-curses pkg-config python python2.7 python-pip python-pkg-resources python-setuptools python-wheel rsync software-properties-common snappy sudo valgrind zlib1g-dev -q -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n# ######\n#  OpenJDK 8\n# ######\n#  hadolint ignore=DL3008\nRUN apt-get update -q \\\n && apt-get install --no-install-recommends openjdk-8-jdk libbcprov-java -q -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n# #####\n#  Install cmake 3.1.0 (3.5.1 ships with Xenial)\n# #####\nRUN mkdir -p /opt/cmake \\\n && curl -L -s -S https://cmake.org/files/v3.1/cmake-3.1.0-Linux-x86_64.tar.gz -o /opt/cmake.tar.gz \\\n && tar xzf /opt/cmake.tar.gz --strip-components 1 -C /opt/cmake\nENV CMAKE_HOME=\"/opt/cmake\"\nENV PATH=\"\\\"${PATH}:/opt/cmake/bin\\\"\"\n# #####\n#  Install Google Protobuf 2.5.0 (2.6.0 ships with Xenial)\n# #####\n#  hadolint ignore=DL3003\nRUN mkdir -p /opt/protobuf-src \\\n && curl -L -s -S https://github.com/google/protobuf/releases/download/v2.5.0/protobuf-2.5.0.tar.gz -o /opt/protobuf.tar.gz \\\n && tar xzf /opt/protobuf.tar.gz --strip-components 1 -C /opt/protobuf-src \\\n && cd /opt/protobuf-src \\\n && ./configure --prefix=/opt/protobuf \\\n && make install \\\n && cd /root \\\n && rm -rf /opt/protobuf-src\nENV PROTOBUF_HOME=\"/opt/protobuf\"\nENV PATH=\"\\\"${PATH}:/opt/protobuf/bin\\\"\"\n# #####\n#  Install Apache Maven 3.3.9 (3.3.9 ships with Xenial)\n# #####\n#  hadolint ignore=DL3008\nRUN apt-get update -q \\\n && apt-get install --no-install-recommends maven -q -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\nENV MAVEN_HOME=\"/usr\"\n# #####\n#  Install findbugs 3.0.1 (3.0.1 ships with Xenial)\n#  Ant is needed for findbugs\n# #####\n#  hadolint ignore=DL3008\nRUN apt-get update -q \\\n && apt-get install --no-install-recommends findbugs ant -q -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\nENV FINDBUGS_HOME=\"/usr\"\n# ###\n#  Install shellcheck (0.4.6, the latest as of 2017-09-26)\n# ###\n#  hadolint ignore=DL3008\nRUN add-apt-repository -y ppa:jonathonf/ghc-8.0.2 \\\n && apt-get update -q \\\n && apt-get install --no-install-recommends shellcheck -q -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n# ###\n#  Install bats (0.4.0, the latest as of 2017-09-26, ships with Xenial)\n# ###\n#  hadolint ignore=DL3008\nRUN apt-get update -q \\\n && apt-get install --no-install-recommends bats -q -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n# ###\n#  Install pylint at fixed version (2.0.0 removed python2 support)\n#  https://github.com/PyCQA/pylint/issues/2294\n# ###\nRUN pip2 install pylint==1.9.2\n# ###\n#  Install dateutil.parser\n# ###\nRUN pip2 install python-dateutil==2.7.3\n# ##\n#  Install node.js for web UI framework (4.2.6 ships with Xenial)\n# ##\n#  hadolint ignore=DL3008, DL3016\nRUN apt-get update -q \\\n && apt-get install --no-install-recommends nodejs npm -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* \\\n && ln -s /usr/bin/nodejs /usr/bin/node \\\n && npm install npm@latest -g \\\n && npm install jshint -g\n# ##\n#  Install hadolint\n# ###\nRUN curl -L -s -S https://github.com/hadolint/hadolint/releases/download/v1.11.1/hadolint-Linux-x86_64 -o /bin/hadolint \\\n && chmod a+rx /bin/hadolint \\\n && shasum -a 512 /bin/hadolint | awk '$1!=\"734e37c1f6619cbbd86b9b249e69c9af8ee1ea87a2b1ff71dccda412e9dac35e63425225a95d71572091a3f0a11e9a04c2fc25d9e91b840530c26af32b9891ca\" {exit(1)}'\n# ##\n#  Avoid out of memory errors in builds\n# ##\nENV MAVEN_OPTS=\"-Xms256m -Xmx1536m\"\n# ##\n#  Everything past this point is either not needed for testing or breaks Yetus.\n#  So tell Yetus not to read the rest of the file:\n#  YETUS CUT HERE\n# ##\n# ###\n#  Install svn & Forrest (for Apache Hadoop website)\n# ##\n#  hadolint ignore=DL3008\nRUN apt-get update -q \\\n && apt-get install --no-install-recommends subversion -q -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\nRUN mkdir -p /opt/apache-forrest \\\n && curl -L -s -S https://archive.apache.org/dist/forrest/0.8/apache-forrest-0.8.tar.gz -o /opt/forrest.tar.gz \\\n && tar xzf /opt/forrest.tar.gz --strip-components 1 -C /opt/apache-forrest\nRUN echo 'forrest.home=/opt/apache-forrest' > build.properties\nENV FORREST_HOME=\"/opt/apache-forrest\"\n#  Hugo static website generator (for new tez site and Ozone docs)\nRUN curl -L -o hugo.deb https://github.com/gohugoio/hugo/releases/download/v0.30.2/hugo_0.30.2_Linux-64bit.deb \\\n && dpkg --install hugo.deb \\\n && rm hugo.deb\n#  Add a welcome message and environment checks.\nCOPY tez_env_checks.sh /root/tez_env_checks.sh\nRUN chmod 755 /root/tez_env_checks.sh\n#  hadolint ignore=SC2016\nRUN echo '${HOME}/tez_env_checks.sh' >> /root/.bashrc\n","injectedSmells":[],"originalDockerfileHash":"a419deea96530dbbc58553f18284b9fa","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Licensed to the Apache Software Foundation (ASF) under one\n#   or more contributor license agreements.  See the NOTICE file\n#   distributed with this work for additional information\n#   regarding copyright ownership.  The ASF licenses this file\n#   to you under the Apache License, Version 2.0 (the\n#   \"License\"); you may not use this file except in compliance\n#   with the License.  You may obtain a copy of the License at\n#\n#       http://www.apache.org/licenses/LICENSE-2.0\n#\n#   Unless required by applicable law or agreed to in writing, software\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#   See the License for the specific language governing permissions and\n#   limitations under the License.\n#   Dockerfile for installing the necessary dependencies for building Hadoop.\n#   See BUILDING.txt.\nFROM ubuntu:xenial\nWORKDIR /root\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\n#  ####\n#   Disable suggests/recommends\n#  ####\nRUN echo APT::Install-Recommends \"0\" ; > /etc/apt/apt.conf.d/10disableextras\nRUN echo APT::Install-Suggests \"0\" ; >> /etc/apt/apt.conf.d/10disableextras\nENV DEBIAN_FRONTEND=\"noninteractive\"\nENV DEBCONF_TERSE=\"true\"\n#  #####\n#   Install common dependencies from packages. Versions here are either\n#   sufficient or irrelevant.\n#\n#   WARNING: DO NOT PUT JAVA APPS HERE! Otherwise they will install default\n#   Ubuntu Java.  See Java section below!\n#  #####\n#   hadolint ignore=DL3008\nRUN apt-get update -q \\\n && apt-get install --no-install-recommends apt-utils build-essential bzip2 clang curl doxygen fuse g++ gcc git gnupg-agent libbz2-dev libcurl4-openssl-dev libfuse-dev libprotobuf-dev libprotoc-dev libsasl2-dev libsnappy-dev libssl-dev libtool locales make pinentry-curses pkg-config python python2.7 python-pip python-pkg-resources python-setuptools python-wheel rsync software-properties-common snappy sudo valgrind zlib1g-dev -q -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n#  ######\n#   OpenJDK 8\n#  ######\n#   hadolint ignore=DL3008\nRUN apt-get update -q \\\n && apt-get install --no-install-recommends openjdk-8-jdk libbcprov-java -q -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n#  #####\n#   Install cmake 3.1.0 (3.5.1 ships with Xenial)\n#  #####\nRUN mkdir -p /opt/cmake \\\n && curl -L -s -S https://cmake.org/files/v3.1/cmake-3.1.0-Linux-x86_64.tar.gz -o /opt/cmake.tar.gz \\\n && tar xzf /opt/cmake.tar.gz --strip-components 1 -C /opt/cmake\nENV CMAKE_HOME=\"/opt/cmake\"\nENV PATH=\"\\\"${PATH}:/opt/cmake/bin\\\"\"\n#  #####\n#   Install Google Protobuf 2.5.0 (2.6.0 ships with Xenial)\n#  #####\n#   hadolint ignore=DL3003\nRUN mkdir -p /opt/protobuf-src \\\n && curl -L -s -S https://github.com/google/protobuf/releases/download/v2.5.0/protobuf-2.5.0.tar.gz -o /opt/protobuf.tar.gz \\\n && tar xzf /opt/protobuf.tar.gz --strip-components 1 -C /opt/protobuf-src \\\n && cd /opt/protobuf-src \\\n && ./configure --prefix=/opt/protobuf \\\n && make install \\\n && cd /root \\\n && rm -rf /opt/protobuf-src\nENV PROTOBUF_HOME=\"/opt/protobuf\"\nENV PATH=\"\\\"${PATH}:/opt/protobuf/bin\\\"\"\n#  #####\n#   Install Apache Maven 3.3.9 (3.3.9 ships with Xenial)\n#  #####\n#   hadolint ignore=DL3008\nRUN apt-get update -q \\\n && apt-get install --no-install-recommends maven -q -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\nENV MAVEN_HOME=\"/usr\"\n#  #####\n#   Install findbugs 3.0.1 (3.0.1 ships with Xenial)\n#   Ant is needed for findbugs\n#  #####\n#   hadolint ignore=DL3008\nRUN apt-get update -q \\\n && apt-get install --no-install-recommends findbugs ant -q -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\nENV FINDBUGS_HOME=\"/usr\"\n#  ###\n#   Install shellcheck (0.4.6, the latest as of 2017-09-26)\n#  ###\n#   hadolint ignore=DL3008\nRUN add-apt-repository -y ppa:jonathonf/ghc-8.0.2 \\\n && apt-get update -q \\\n && apt-get install --no-install-recommends shellcheck -q -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n#  ###\n#   Install bats (0.4.0, the latest as of 2017-09-26, ships with Xenial)\n#  ###\n#   hadolint ignore=DL3008\nRUN apt-get update -q \\\n && apt-get install --no-install-recommends bats -q -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n#  ###\n#   Install pylint at fixed version (2.0.0 removed python2 support)\n#   https://github.com/PyCQA/pylint/issues/2294\n#  ###\nRUN pip2 install pylint==1.9.2\n#  ###\n#   Install dateutil.parser\n#  ###\nRUN pip2 install python-dateutil==2.7.3\n#  ##\n#   Install node.js for web UI framework (4.2.6 ships with Xenial)\n#  ##\n#   hadolint ignore=DL3008, DL3016\nRUN apt-get update -q \\\n && apt-get install --no-install-recommends nodejs npm -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* \\\n && ln -s /usr/bin/nodejs /usr/bin/node \\\n && npm install npm@latest -g \\\n && npm install jshint -g\n#  ##\n#   Install hadolint\n#  ###\nRUN curl -L -s -S https://github.com/hadolint/hadolint/releases/download/v1.11.1/hadolint-Linux-x86_64 -o /bin/hadolint \\\n && chmod a+rx /bin/hadolint \\\n && shasum -a 512 /bin/hadolint | awk '$1!=\"734e37c1f6619cbbd86b9b249e69c9af8ee1ea87a2b1ff71dccda412e9dac35e63425225a95d71572091a3f0a11e9a04c2fc25d9e91b840530c26af32b9891ca\" {exit(1)}'\n#  ##\n#   Avoid out of memory errors in builds\n#  ##\nENV MAVEN_OPTS=\"-Xms256m -Xmx1536m\"\n#  ##\n#   Everything past this point is either not needed for testing or breaks Yetus.\n#   So tell Yetus not to read the rest of the file:\n#   YETUS CUT HERE\n#  ##\n#  ###\n#   Install svn & Forrest (for Apache Hadoop website)\n#  ##\n#   hadolint ignore=DL3008\nRUN apt-get update -q \\\n && apt-get install --no-install-recommends subversion -q -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\nRUN mkdir -p /opt/apache-forrest \\\n && curl -L -s -S https://archive.apache.org/dist/forrest/0.8/apache-forrest-0.8.tar.gz -o /opt/forrest.tar.gz \\\n && tar xzf /opt/forrest.tar.gz --strip-components 1 -C /opt/apache-forrest\nRUN echo 'forrest.home=/opt/apache-forrest' > build.properties\nENV FORREST_HOME=\"/opt/apache-forrest\"\n#   Hugo static website generator (for new tez site and Ozone docs)\nRUN curl -L -o hugo.deb https://github.com/gohugoio/hugo/releases/download/v0.30.2/hugo_0.30.2_Linux-64bit.deb \\\n && dpkg --install hugo.deb \\\n && rm hugo.deb\n#   Add a welcome message and environment checks.\nCOPY tez_env_checks.sh /root/tez_env_checks.sh\nRUN chmod 755 /root/tez_env_checks.sh\n#   hadolint ignore=SC2016\nRUN echo '${HOME}/tez_env_checks.sh' >> /root/.bashrc\n","originalDockerfileUglifiedHash":"63601b9cf34493cdff7811a44d6d6111","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/8d76861b5a94f9a6a8efe8c7603087c9e1ba8099.dockerfile"}