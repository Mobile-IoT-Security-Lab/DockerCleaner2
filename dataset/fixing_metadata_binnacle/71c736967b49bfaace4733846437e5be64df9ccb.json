{"seed":407484343,"processedDockerfileHash":"a8d4fd8ca830320301a1cc65edb8a84f","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apt-get","pin-package-manager-versions-gem","have-a-healthcheck"],"processedDockerfile":"FROM openjdk:8-jdk\n#   Android Dependencies\n#   --------------------\n#   Adapt the paramters below to change the dependencies.\n#\n#   Android SDK 26.1.1\nARG ANDROID_SDK_URL=\"https://dl.google.com/android/repository/sdk-tools-linux-4333796.zip\"\n#   Android NDK r18b\nARG ANDROID_NDK_URL=\"https://dl.google.com/android/repository/android-ndk-r18b-linux-x86_64.zip\"\nARG SDKMANAGER_PACKAGES=\"build-tools;27.0.3 platforms;android-26 cmake;3.6.4111459 system-images;android-24;default;x86_64 emulator platform-tools\"\n#   Arguments, Environment\n#   ----------------------\n#\n#   Default values for the arguments to be passed from the Jenkinsfile.\n#   Those contain the uid and gid of the Jenkins user, and are used to\n#   create this user inside of the container, needed for eg ssh-agent to work\nARG USER_ID=1000\nARG USER_HOME=/home/user\nARG GROUP_ID=1000\nARG KVM_GROUP_ID=999\n#   Environment variables that are needed by the build job.\nENV ANDROID_SDK_ROOT=\"$USER_HOME/android/sdk\"\nENV ANDROID_AVD_HOME=\"$USER_HOME/avds\"\n#   Deprecated: Still used by gradle, once gradle respects ANDROID_SDK_ROOT, this can be removed\nENV ANDROID_HOME=\"$ANDROID_SDK_ROOT\"\nARG _SDKMANAGER=$ANDROID_SDK_ROOT/tools/bin/sdkmanager\n#   System Packages\n#   ---------------\n#\n#   curl/openssh-client: upload to web/share\nRUN apt-get update \\\n && apt-get install --no-install-recommends curl=7.74.0-1.3+deb11u7 openssh-client=1:8.4p1-5+deb11u1 -y \\\n && rm -rf /var/lib/apt/lists/*\n#   Install Fastlane\nRUN apt-get update \\\n && apt-get install --no-install-recommends rubygems ruby-dev=1:2.7+2 g++=4:10.2.1-1 make=4.3-4.1 less=551-2 -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && gem update --system \\\n && gem install fastlane --version 2.212.1 -NV \\\n && apt-get purge -y --auto-remove ruby-dev g++ make\n#   User Management\n#   ---------------\n#\n#   add the 'Jenkins' user\n#   Add group of the user used by Jenkins during building.\nRUN if [ ! $( getent group $GROUP_ID ;) ] ; then groupadd -g $GROUP_ID user ; fi\nRUN groupadd -g $KVM_GROUP_ID kvm\n#   Add the user used by Jenkins during building.\nRUN useradd -m -u $USER_ID -g $GROUP_ID -G $KVM_GROUP_ID -d $USER_HOME -s /usr/sbin/nologin user\n#   Run all other commands as user\nUSER user\nRUN mkdir -p $ANDROID_AVD_HOME\n#   Android SDK\n#   ------------------\n#\nRUN curl $ANDROID_SDK_URL --output /tmp/android_sdk.zip \\\n && mkdir -p $ANDROID_SDK_ROOT \\\n && unzip -d $ANDROID_SDK_ROOT /tmp/android_sdk.zip \\\n && rm /tmp/android_sdk.zip\n#   Android NDK\n#   ----------------\n#\nRUN if [ ! -z \"$ANDROID_NDK_URL\" ] ; then curl $ANDROID_NDK_URL --output /tmp/android_ndk.zip \\\n && mkdir -p $ANDROID_SDK_ROOT /tmp/ndk \\\n && unzip -d /tmp/ndk /tmp/android_ndk.zip \\\n && mv /tmp/ndk/* $ANDROID_SDK_ROOT/ndk-bundle \\\n && rm /tmp/android_ndk.zip ; fi\n#   Installing SDK Packages\n#   -----------------------\n#\nRUN if [ ! -z \"$SDKMANAGER_PACKAGES\" ] ; then yes | $_SDKMANAGER $SDKMANAGER_PACKAGES ; fi\n#   Performance related settings for the JVM\n#   - Respect the cgroup settings for memory.\n#\n#   Note: Usage of _JAVA_OPTIONS is in general discouraged.\n#         This is an internal flag that will be preferred over\n#         JAVA_TOOL_OPTIONS and the command line parameters.\n#         We still use it here to ensure that these settings\n#         are respected, no matter what is configured elsewhere.\nENV _JAVA_OPTIONS=\"-XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap\"\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM openjdk:8-jdk\n#  Android Dependencies\n#  --------------------\n#  Adapt the paramters below to change the dependencies.\n#\n#  Android SDK 26.1.1\nARG ANDROID_SDK_URL=\"https://dl.google.com/android/repository/sdk-tools-linux-4333796.zip\"\n#  Android NDK r18b\nARG ANDROID_NDK_URL=\"https://dl.google.com/android/repository/android-ndk-r18b-linux-x86_64.zip\"\nARG SDKMANAGER_PACKAGES=\"build-tools;27.0.3 platforms;android-26 cmake;3.6.4111459 system-images;android-24;default;x86_64 emulator platform-tools\"\n#  Arguments, Environment\n#  ----------------------\n#\n#  Default values for the arguments to be passed from the Jenkinsfile.\n#  Those contain the uid and gid of the Jenkins user, and are used to\n#  create this user inside of the container, needed for eg ssh-agent to work\nARG USER_ID=1000\nARG USER_HOME=/home/user\nARG GROUP_ID=1000\nARG KVM_GROUP_ID=999\n#  Environment variables that are needed by the build job.\nENV ANDROID_SDK_ROOT=\"$USER_HOME/android/sdk\"\nENV ANDROID_AVD_HOME=\"$USER_HOME/avds\"\n#  Deprecated: Still used by gradle, once gradle respects ANDROID_SDK_ROOT, this can be removed\nENV ANDROID_HOME=\"$ANDROID_SDK_ROOT\"\nARG _SDKMANAGER=$ANDROID_SDK_ROOT/tools/bin/sdkmanager\n#  System Packages\n#  ---------------\n#\n#  curl/openssh-client: upload to web/share\nRUN apt-get update \\\n && apt-get install --no-install-recommends curl openssh-client -y \\\n && rm -rf /var/lib/apt/lists/*\n#  Install Fastlane\nRUN apt-get update \\\n && apt-get install --no-install-recommends rubygems ruby-dev g++ make less -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && gem update --system \\\n && gem install fastlane -NV \\\n && apt-get purge -y --auto-remove ruby-dev g++ make\n#  User Management\n#  ---------------\n#\n#  add the 'Jenkins' user\n#  Add group of the user used by Jenkins during building.\nRUN if [ ! $( getent group $GROUP_ID ;) ] ; then groupadd -g $GROUP_ID user ; fi\nRUN groupadd -g $KVM_GROUP_ID kvm\n#  Add the user used by Jenkins during building.\nRUN useradd -m -u $USER_ID -g $GROUP_ID -G $KVM_GROUP_ID -d $USER_HOME -s /usr/sbin/nologin user\n#  Run all other commands as user\nUSER user\nRUN mkdir -p $ANDROID_AVD_HOME\n#  Android SDK\n#  ------------------\n#\nRUN curl $ANDROID_SDK_URL --output /tmp/android_sdk.zip \\\n && mkdir -p $ANDROID_SDK_ROOT \\\n && unzip -d $ANDROID_SDK_ROOT /tmp/android_sdk.zip \\\n && rm /tmp/android_sdk.zip\n#  Android NDK\n#  ----------------\n#\nRUN if [ ! -z \"$ANDROID_NDK_URL\" ] ; then curl $ANDROID_NDK_URL --output /tmp/android_ndk.zip \\\n && mkdir -p $ANDROID_SDK_ROOT /tmp/ndk \\\n && unzip -d /tmp/ndk /tmp/android_ndk.zip \\\n && mv /tmp/ndk/* $ANDROID_SDK_ROOT/ndk-bundle \\\n && rm /tmp/android_ndk.zip ; fi\n#  Installing SDK Packages\n#  -----------------------\n#\nRUN if [ ! -z \"$SDKMANAGER_PACKAGES\" ] ; then yes | $_SDKMANAGER $SDKMANAGER_PACKAGES ; fi\n#  Performance related settings for the JVM\n#  - Respect the cgroup settings for memory.\n#\n#  Note: Usage of _JAVA_OPTIONS is in general discouraged.\n#        This is an internal flag that will be preferred over\n#        JAVA_TOOL_OPTIONS and the command line parameters.\n#        We still use it here to ensure that these settings\n#        are respected, no matter what is configured elsewhere.\nENV _JAVA_OPTIONS=\"-XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap\"\n","injectedSmells":[],"originalDockerfileHash":"7157b35fa9a96c40ce9880931849b7b7","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM openjdk:8-jdk\n#   Android Dependencies\n#   --------------------\n#   Adapt the paramters below to change the dependencies.\n#\n#   Android SDK 26.1.1\nARG ANDROID_SDK_URL=\"https://dl.google.com/android/repository/sdk-tools-linux-4333796.zip\"\n#   Android NDK r18b\nARG ANDROID_NDK_URL=\"https://dl.google.com/android/repository/android-ndk-r18b-linux-x86_64.zip\"\nARG SDKMANAGER_PACKAGES=\"build-tools;27.0.3 platforms;android-26 cmake;3.6.4111459 system-images;android-24;default;x86_64 emulator platform-tools\"\n#   Arguments, Environment\n#   ----------------------\n#\n#   Default values for the arguments to be passed from the Jenkinsfile.\n#   Those contain the uid and gid of the Jenkins user, and are used to\n#   create this user inside of the container, needed for eg ssh-agent to work\nARG USER_ID=1000\nARG USER_HOME=/home/user\nARG GROUP_ID=1000\nARG KVM_GROUP_ID=999\n#   Environment variables that are needed by the build job.\nENV ANDROID_SDK_ROOT=\"$USER_HOME/android/sdk\"\nENV ANDROID_AVD_HOME=\"$USER_HOME/avds\"\n#   Deprecated: Still used by gradle, once gradle respects ANDROID_SDK_ROOT, this can be removed\nENV ANDROID_HOME=\"$ANDROID_SDK_ROOT\"\nARG _SDKMANAGER=$ANDROID_SDK_ROOT/tools/bin/sdkmanager\n#   System Packages\n#   ---------------\n#\n#   curl/openssh-client: upload to web/share\nRUN apt-get update \\\n && apt-get install --no-install-recommends curl openssh-client -y \\\n && rm -rf /var/lib/apt/lists/*\n#   Install Fastlane\nRUN apt-get update \\\n && apt-get install --no-install-recommends rubygems ruby-dev g++ make less -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && gem update --system \\\n && gem install fastlane -NV \\\n && apt-get purge -y --auto-remove ruby-dev g++ make\n#   User Management\n#   ---------------\n#\n#   add the 'Jenkins' user\n#   Add group of the user used by Jenkins during building.\nRUN if [ ! $( getent group $GROUP_ID ;) ] ; then groupadd -g $GROUP_ID user ; fi\nRUN groupadd -g $KVM_GROUP_ID kvm\n#   Add the user used by Jenkins during building.\nRUN useradd -m -u $USER_ID -g $GROUP_ID -G $KVM_GROUP_ID -d $USER_HOME -s /usr/sbin/nologin user\n#   Run all other commands as user\nUSER user\nRUN mkdir -p $ANDROID_AVD_HOME\n#   Android SDK\n#   ------------------\n#\nRUN curl $ANDROID_SDK_URL --output /tmp/android_sdk.zip \\\n && mkdir -p $ANDROID_SDK_ROOT \\\n && unzip -d $ANDROID_SDK_ROOT /tmp/android_sdk.zip \\\n && rm /tmp/android_sdk.zip\n#   Android NDK\n#   ----------------\n#\nRUN if [ ! -z \"$ANDROID_NDK_URL\" ] ; then curl $ANDROID_NDK_URL --output /tmp/android_ndk.zip \\\n && mkdir -p $ANDROID_SDK_ROOT /tmp/ndk \\\n && unzip -d /tmp/ndk /tmp/android_ndk.zip \\\n && mv /tmp/ndk/* $ANDROID_SDK_ROOT/ndk-bundle \\\n && rm /tmp/android_ndk.zip ; fi\n#   Installing SDK Packages\n#   -----------------------\n#\nRUN if [ ! -z \"$SDKMANAGER_PACKAGES\" ] ; then yes | $_SDKMANAGER $SDKMANAGER_PACKAGES ; fi\n#   Performance related settings for the JVM\n#   - Respect the cgroup settings for memory.\n#\n#   Note: Usage of _JAVA_OPTIONS is in general discouraged.\n#         This is an internal flag that will be preferred over\n#         JAVA_TOOL_OPTIONS and the command line parameters.\n#         We still use it here to ensure that these settings\n#         are respected, no matter what is configured elsewhere.\nENV _JAVA_OPTIONS=\"-XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap\"\n","originalDockerfileUglifiedHash":"d4944077a27dbdb5673fbb6e014092db","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/71c736967b49bfaace4733846437e5be64df9ccb.dockerfile"}