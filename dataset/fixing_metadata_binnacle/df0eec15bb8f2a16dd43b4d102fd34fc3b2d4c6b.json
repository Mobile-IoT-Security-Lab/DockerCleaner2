{"seed":1637229360,"processedDockerfileHash":"456363aefed2e043db8c95308e883e7a","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["have-a-healthcheck"],"processedDockerfile":"#   Yosinski's caffe fork is based off of older CUDNN\nFROM nvidia/cuda:7.5-cudnn4-devel-ubuntu14.04\n#   This is Trusty, so a lot of this stuff is out of date, esp. Python\n#   Make it minimal so that we can use conda's libs instead\nRUN apt-get update \\\n && apt-get install --no-install-recommends build-essential ca-certificates cmake git wget libatlas-base-dev libboost-all-dev libgtk2.0-dev libhdf5-serial-dev -y \\\n && rm -rf /var/lib/apt/lists/*\n#   Env vars\nENV HOME=\"/home/developer\" \\\n    CONDA_ROOT=\"/opt/conda\" \\\n    CAFFE_ROOT=\"/opt/caffe\" \\\n    DVTB_ROOT=\"/opt/dvtb\" \\\n    PATH=\"/opt/conda/bin:$PATH\" \\\n    uid=\"1000\" \\\n    gid=\"1000\"\n#   Make a \"developer\" user, conda is easier as non-root\nRUN groupadd -g $gid developer \\\n && useradd -N -m -d $HOME -u $uid -g $gid -s /bin/bash -c Developer developer \\\n && echo \"developer ALL=(ALL) NOPASSWD: ALL\" > /etc/sudoers.d/developer \\\n && chmod 0440 /etc/sudoers.d/developer \\\n && mkdir -p $HOME $CONDA_ROOT $CAFFE_ROOT $DVTB_ROOT \\\n && chown ${uid}:${gid} -R $HOME $CONDA_ROOT $CAFFE_ROOT $DVTB_ROOT\n#   Change to user\nWORKDIR $HOME\nUSER developer\n#   Get Miniconda and install it into $CONDA_ROOT\n#   Also get older opencv that won't break everything (see issues on yosinski/caffe)\nRUN wget https://repo.continuum.io/miniconda/Miniconda2-4.3.11-Linux-x86_64.sh \\\n && echo \"d573980fe3b5cdf80485add2466463f5 Miniconda2-4.3.11-Linux-x86_64.sh\" | md5sum -c - \\\n && bash Miniconda2-4.3.11-Linux-x86_64.sh -b -f -p $CONDA_ROOT \\\n && rm Miniconda2-4.3.11-Linux-x86_64.sh \\\n && conda update -y conda \\\n && conda install -y --channel menpo opencv\n#   Move to $CAFFE_ROOT and get Yosinski's fork\nWORKDIR $CAFFE_ROOT\nRUN git clone --depth 1 https://github.com/BVLC/caffe.git . \\\n && git remote add yosinski https://github.com/yosinski/caffe.git \\\n && git fetch --all \\\n && git checkout --track -b deconv-deep-vis-toolbox yosinski/deconv-deep-vis-toolbox\n#   Split out python-dateutil into its own requirements file because it's not on conda, \n#   then use conda to install most of the packages and requirements, including the required\n#   system libraries (like protobuf, etc.)\n#   Also install pip because conda installs can coexist nicely with pip\nRUN egrep 'python-dateutil' python/requirements.txt > python/requirements.pip.txt \\\n && egrep -v 'python-dateutil' python/requirements.txt > python/requirements.conda.txt \\\n && conda install -y --file=python/requirements.conda.txt pip curl gflags glog leveldb libprotobuf libtiff libpng lmdb protobuf pydot scikit-image scipy snappy \\\n && pip install -r python/requirements.pip.txt\n#   We need to get the conda libs into the system (this will warn about truncated\n#   libraries, but hasn't been an issue so far)\nRUN sudo bash -c \"echo \\\"$CONDA_ROOT/lib\\\" > /etc/ld.so.conf.d/conda.conf \\\n && ldconfig\"\n#   This version of caffe doesn't support nccl, but leave this here for later\n#   RUN git clone https://github.com/NVIDIA/nccl.git && cd nccl && make -j\"$(nproc)\" && sudo make install && cd .. && rm -rf nccl\n#   Not sure why, but we need a Makefile.config. This is mostly the same as\n#   Makefile.config.example in Yosinski's fork\nCOPY Makefile.config .\n#   Run cmake -- add all the include/lib support by hand, I welcome pull requests\n#   for this\nRUN mkdir build \\\n && cd build \\\n && cmake -DGFLAGS_INCLUDE_DIR=$CONDA_ROOT/include -DGFLAGS_LIBRARY=$CONDA_ROOT/lib -DGLOG_INCLUDE_DIR=$CONDA_ROOT/include -DGLOG_LIBRARY=$CONDA_ROOT/lib -DLevelDB_INCLUDE=$CONDA_ROOT/include -DLevelDB_LIBRARY=$CONDA_ROOT/lib -DLMDB_INCLUDE_DIR=$CONDA_ROOT/include -DLMDB_LIBRARIES=$CONDA_ROOT/lib -DMKLROOT=$CONDA_ROOT -DPROTOBUF_LIBRARY=$CONDA_ROOT/lib/libprotobuf.so -DPROTOBUF_INCLUDE_DIR=$CONDA_ROOT/include -DPROTOBUF_PROTOC_LIBRARY=$CONDA_ROOT/lib/libprotoc.so -DPROTOBUF_PROTOC_EXECUTABLE=$CONDA_ROOT/bin/protoc -DSNAPPY_ROOT_DIR=$CONDA_ROOT -DUSE_CUDNN=1 ..\n#             -DUSE_CUDNN=1 -DUSE_NCCL=1 ..\nRUN make -j\"$( nproc ;)\"\nRUN make -j\"$( nproc ;)\" pycaffe\n#   Update python stuff, redo ld.so cache\nENV PYCAFFE_ROOT=\"$CAFFE_ROOT/python\" \\\n    PYTHONPATH=\"$PYCAFFE_ROOT:$PYTHONPATH\" \\\n    PATH=\"$CAFFE_ROOT/build/tools:$PYCAFFE_ROOT:$PATH\"\nRUN sudo bash -c \"echo \\\"$CAFFE_ROOT/build/lib\\\" >> /etc/ld.so.conf.d/caffe.conf \\\n && ldconfig\"\n#   Switch to $DVTB_ROOT, clone into location, and update caffe root because we can\nWORKDIR $DVTB_ROOT\nRUN git clone --depth 1 https://github.com/yosinski/deep-visualization-toolbox . \\\n && sed -e\"s,/path/to/caffe,${CAFFE_ROOT},\" models/caffenet-yos/settings_local.template-caffenet-yos.py > settings_local.py\n#   Phew\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Yosinski's caffe fork is based off of older CUDNN\nFROM nvidia/cuda:7.5-cudnn4-devel-ubuntu14.04\n#  This is Trusty, so a lot of this stuff is out of date, esp. Python\n#  Make it minimal so that we can use conda's libs instead\nRUN apt-get update \\\n && apt-get install --no-install-recommends build-essential ca-certificates cmake git wget libatlas-base-dev libboost-all-dev libgtk2.0-dev libhdf5-serial-dev -y \\\n && rm -rf /var/lib/apt/lists/*\n#  Env vars\nENV HOME=\"/home/developer\" \\\n    CONDA_ROOT=\"/opt/conda\" \\\n    CAFFE_ROOT=\"/opt/caffe\" \\\n    DVTB_ROOT=\"/opt/dvtb\" \\\n    PATH=\"/opt/conda/bin:$PATH\" \\\n    uid=\"1000\" \\\n    gid=\"1000\"\n#  Make a \"developer\" user, conda is easier as non-root\nRUN groupadd -g $gid developer \\\n && useradd -N -m -d $HOME -u $uid -g $gid -s /bin/bash -c Developer developer \\\n && echo \"developer ALL=(ALL) NOPASSWD: ALL\" > /etc/sudoers.d/developer \\\n && chmod 0440 /etc/sudoers.d/developer \\\n && mkdir -p $HOME $CONDA_ROOT $CAFFE_ROOT $DVTB_ROOT \\\n && chown ${uid}:${gid} -R $HOME $CONDA_ROOT $CAFFE_ROOT $DVTB_ROOT\n#  Change to user\nWORKDIR $HOME\nUSER developer\n#  Get Miniconda and install it into $CONDA_ROOT\n#  Also get older opencv that won't break everything (see issues on yosinski/caffe)\nRUN wget https://repo.continuum.io/miniconda/Miniconda2-4.3.11-Linux-x86_64.sh \\\n && echo \"d573980fe3b5cdf80485add2466463f5 Miniconda2-4.3.11-Linux-x86_64.sh\" | md5sum -c - \\\n && bash Miniconda2-4.3.11-Linux-x86_64.sh -b -f -p $CONDA_ROOT \\\n && rm Miniconda2-4.3.11-Linux-x86_64.sh \\\n && conda update -y conda \\\n && conda install -y --channel menpo opencv\n#  Move to $CAFFE_ROOT and get Yosinski's fork\nWORKDIR $CAFFE_ROOT\nRUN git clone --depth 1 https://github.com/BVLC/caffe.git . \\\n && git remote add yosinski https://github.com/yosinski/caffe.git \\\n && git fetch --all \\\n && git checkout --track -b deconv-deep-vis-toolbox yosinski/deconv-deep-vis-toolbox\n#  Split out python-dateutil into its own requirements file because it's not on conda, \n#  then use conda to install most of the packages and requirements, including the required\n#  system libraries (like protobuf, etc.)\n#  Also install pip because conda installs can coexist nicely with pip\nRUN egrep 'python-dateutil' python/requirements.txt > python/requirements.pip.txt \\\n && egrep -v 'python-dateutil' python/requirements.txt > python/requirements.conda.txt \\\n && conda install -y --file=python/requirements.conda.txt pip curl gflags glog leveldb libprotobuf libtiff libpng lmdb protobuf pydot scikit-image scipy snappy \\\n && pip install -r python/requirements.pip.txt\n#  We need to get the conda libs into the system (this will warn about truncated\n#  libraries, but hasn't been an issue so far)\nRUN sudo bash -c \"echo \\\"$CONDA_ROOT/lib\\\" > /etc/ld.so.conf.d/conda.conf \\\n && ldconfig\"\n#  This version of caffe doesn't support nccl, but leave this here for later\n#  RUN git clone https://github.com/NVIDIA/nccl.git && cd nccl && make -j\"$(nproc)\" && sudo make install && cd .. && rm -rf nccl\n#  Not sure why, but we need a Makefile.config. This is mostly the same as\n#  Makefile.config.example in Yosinski's fork\nCOPY Makefile.config .\n#  Run cmake -- add all the include/lib support by hand, I welcome pull requests\n#  for this\nRUN mkdir build \\\n && cd build \\\n && cmake -DGFLAGS_INCLUDE_DIR=$CONDA_ROOT/include -DGFLAGS_LIBRARY=$CONDA_ROOT/lib -DGLOG_INCLUDE_DIR=$CONDA_ROOT/include -DGLOG_LIBRARY=$CONDA_ROOT/lib -DLevelDB_INCLUDE=$CONDA_ROOT/include -DLevelDB_LIBRARY=$CONDA_ROOT/lib -DLMDB_INCLUDE_DIR=$CONDA_ROOT/include -DLMDB_LIBRARIES=$CONDA_ROOT/lib -DMKLROOT=$CONDA_ROOT -DPROTOBUF_LIBRARY=$CONDA_ROOT/lib/libprotobuf.so -DPROTOBUF_INCLUDE_DIR=$CONDA_ROOT/include -DPROTOBUF_PROTOC_LIBRARY=$CONDA_ROOT/lib/libprotoc.so -DPROTOBUF_PROTOC_EXECUTABLE=$CONDA_ROOT/bin/protoc -DSNAPPY_ROOT_DIR=$CONDA_ROOT -DUSE_CUDNN=1 ..\n#            -DUSE_CUDNN=1 -DUSE_NCCL=1 ..\nRUN make -j\"$( nproc ;)\"\nRUN make -j\"$( nproc ;)\" pycaffe\n#  Update python stuff, redo ld.so cache\nENV PYCAFFE_ROOT=\"$CAFFE_ROOT/python\" \\\n    PYTHONPATH=\"$PYCAFFE_ROOT:$PYTHONPATH\" \\\n    PATH=\"$CAFFE_ROOT/build/tools:$PYCAFFE_ROOT:$PATH\"\nRUN sudo bash -c \"echo \\\"$CAFFE_ROOT/build/lib\\\" >> /etc/ld.so.conf.d/caffe.conf \\\n && ldconfig\"\n#  Switch to $DVTB_ROOT, clone into location, and update caffe root because we can\nWORKDIR $DVTB_ROOT\nRUN git clone --depth 1 https://github.com/yosinski/deep-visualization-toolbox . \\\n && sed -e\"s,/path/to/caffe,${CAFFE_ROOT},\" models/caffenet-yos/settings_local.template-caffenet-yos.py > settings_local.py\n#  Phew\n","injectedSmells":[],"originalDockerfileHash":"208a79ba728302ea3b08727461962330","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Yosinski's caffe fork is based off of older CUDNN\nFROM nvidia/cuda:7.5-cudnn4-devel-ubuntu14.04\n#   This is Trusty, so a lot of this stuff is out of date, esp. Python\n#   Make it minimal so that we can use conda's libs instead\nRUN apt-get update \\\n && apt-get install --no-install-recommends build-essential ca-certificates cmake git wget libatlas-base-dev libboost-all-dev libgtk2.0-dev libhdf5-serial-dev -y \\\n && rm -rf /var/lib/apt/lists/*\n#   Env vars\nENV HOME=\"/home/developer\" \\\n    CONDA_ROOT=\"/opt/conda\" \\\n    CAFFE_ROOT=\"/opt/caffe\" \\\n    DVTB_ROOT=\"/opt/dvtb\" \\\n    PATH=\"/opt/conda/bin:$PATH\" \\\n    uid=\"1000\" \\\n    gid=\"1000\"\n#   Make a \"developer\" user, conda is easier as non-root\nRUN groupadd -g $gid developer \\\n && useradd -N -m -d $HOME -u $uid -g $gid -s /bin/bash -c Developer developer \\\n && echo \"developer ALL=(ALL) NOPASSWD: ALL\" > /etc/sudoers.d/developer \\\n && chmod 0440 /etc/sudoers.d/developer \\\n && mkdir -p $HOME $CONDA_ROOT $CAFFE_ROOT $DVTB_ROOT \\\n && chown ${uid}:${gid} -R $HOME $CONDA_ROOT $CAFFE_ROOT $DVTB_ROOT\n#   Change to user\nWORKDIR $HOME\nUSER developer\n#   Get Miniconda and install it into $CONDA_ROOT\n#   Also get older opencv that won't break everything (see issues on yosinski/caffe)\nRUN wget https://repo.continuum.io/miniconda/Miniconda2-4.3.11-Linux-x86_64.sh \\\n && echo \"d573980fe3b5cdf80485add2466463f5 Miniconda2-4.3.11-Linux-x86_64.sh\" | md5sum -c - \\\n && bash Miniconda2-4.3.11-Linux-x86_64.sh -b -f -p $CONDA_ROOT \\\n && rm Miniconda2-4.3.11-Linux-x86_64.sh \\\n && conda update -y conda \\\n && conda install -y --channel menpo opencv\n#   Move to $CAFFE_ROOT and get Yosinski's fork\nWORKDIR $CAFFE_ROOT\nRUN git clone --depth 1 https://github.com/BVLC/caffe.git . \\\n && git remote add yosinski https://github.com/yosinski/caffe.git \\\n && git fetch --all \\\n && git checkout --track -b deconv-deep-vis-toolbox yosinski/deconv-deep-vis-toolbox\n#   Split out python-dateutil into its own requirements file because it's not on conda, \n#   then use conda to install most of the packages and requirements, including the required\n#   system libraries (like protobuf, etc.)\n#   Also install pip because conda installs can coexist nicely with pip\nRUN egrep 'python-dateutil' python/requirements.txt > python/requirements.pip.txt \\\n && egrep -v 'python-dateutil' python/requirements.txt > python/requirements.conda.txt \\\n && conda install -y --file=python/requirements.conda.txt pip curl gflags glog leveldb libprotobuf libtiff libpng lmdb protobuf pydot scikit-image scipy snappy \\\n && pip install -r python/requirements.pip.txt\n#   We need to get the conda libs into the system (this will warn about truncated\n#   libraries, but hasn't been an issue so far)\nRUN sudo bash -c \"echo \\\"$CONDA_ROOT/lib\\\" > /etc/ld.so.conf.d/conda.conf \\\n && ldconfig\"\n#   This version of caffe doesn't support nccl, but leave this here for later\n#   RUN git clone https://github.com/NVIDIA/nccl.git && cd nccl && make -j\"$(nproc)\" && sudo make install && cd .. && rm -rf nccl\n#   Not sure why, but we need a Makefile.config. This is mostly the same as\n#   Makefile.config.example in Yosinski's fork\nCOPY Makefile.config .\n#   Run cmake -- add all the include/lib support by hand, I welcome pull requests\n#   for this\nRUN mkdir build \\\n && cd build \\\n && cmake -DGFLAGS_INCLUDE_DIR=$CONDA_ROOT/include -DGFLAGS_LIBRARY=$CONDA_ROOT/lib -DGLOG_INCLUDE_DIR=$CONDA_ROOT/include -DGLOG_LIBRARY=$CONDA_ROOT/lib -DLevelDB_INCLUDE=$CONDA_ROOT/include -DLevelDB_LIBRARY=$CONDA_ROOT/lib -DLMDB_INCLUDE_DIR=$CONDA_ROOT/include -DLMDB_LIBRARIES=$CONDA_ROOT/lib -DMKLROOT=$CONDA_ROOT -DPROTOBUF_LIBRARY=$CONDA_ROOT/lib/libprotobuf.so -DPROTOBUF_INCLUDE_DIR=$CONDA_ROOT/include -DPROTOBUF_PROTOC_LIBRARY=$CONDA_ROOT/lib/libprotoc.so -DPROTOBUF_PROTOC_EXECUTABLE=$CONDA_ROOT/bin/protoc -DSNAPPY_ROOT_DIR=$CONDA_ROOT -DUSE_CUDNN=1 ..\n#             -DUSE_CUDNN=1 -DUSE_NCCL=1 ..\nRUN make -j\"$( nproc ;)\"\nRUN make -j\"$( nproc ;)\" pycaffe\n#   Update python stuff, redo ld.so cache\nENV PYCAFFE_ROOT=\"$CAFFE_ROOT/python\" \\\n    PYTHONPATH=\"$PYCAFFE_ROOT:$PYTHONPATH\" \\\n    PATH=\"$CAFFE_ROOT/build/tools:$PYCAFFE_ROOT:$PATH\"\nRUN sudo bash -c \"echo \\\"$CAFFE_ROOT/build/lib\\\" >> /etc/ld.so.conf.d/caffe.conf \\\n && ldconfig\"\n#   Switch to $DVTB_ROOT, clone into location, and update caffe root because we can\nWORKDIR $DVTB_ROOT\nRUN git clone --depth 1 https://github.com/yosinski/deep-visualization-toolbox . \\\n && sed -e\"s,/path/to/caffe,${CAFFE_ROOT},\" models/caffenet-yos/settings_local.template-caffenet-yos.py > settings_local.py\n#   Phew\n","originalDockerfileUglifiedHash":"cd2e8811e37bb7a84b7f32c04e920d37","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/df0eec15bb8f2a16dd43b4d102fd34fc3b2d4c6b.dockerfile"}