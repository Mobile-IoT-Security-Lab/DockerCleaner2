{"seed":464236135,"processedDockerfileHash":"babde1a577deca75ac5359a1e28c36e5","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","have-a-healthcheck"],"processedDockerfile":"#  ##\n#  ## this Dockerfile is an example representing one variant of this image;\n#  ## please see https://github.com/circleci-public/circleci-dockerfiles\n#  ## for a complete list of Dockerfiles for each tag/variant of this image\n#  ##\nFROM golang:1.12.6\n#   make Apt non-interactive\nRUN echo 'APT::Get::Assume-Yes \"true\";' > /etc/apt/apt.conf.d/90circleci \\\n && echo 'DPkg::Options \"--force-confnew\";' >> /etc/apt/apt.conf.d/90circleci\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#   Debian Jessie is EOL'd and original repos don't work.\n#   Switch to the archive mirror until we can get people to\n#   switch to Stretch.\nRUN if grep -q Debian /etc/os-release \\\n && grep -q jessie /etc/os-release ; then rm /etc/apt/sources.list \\\n && echo \"deb http://archive.debian.org/debian/ jessie main\" >> /etc/apt/sources.list \\\n && echo \"deb http://security.debian.org/debian-security jessie/updates main\" >> /etc/apt/sources.list; fi\n#   Make sure PATH includes ~/.local/bin\n#   https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=839155\nRUN echo 'PATH=\"$HOME/.local/bin:$PATH\"' >> /etc/profile.d/user-local-path.sh\n#   man directory is missing in some base images\n#   https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=863199\nRUN apt-get update \\\n && mkdir -p /usr/share/man/man1 \\\n && apt-get install --no-install-recommends git=1:2.11.0-3+deb9u7 mercurial=4.0-1+deb9u2 xvfb=2:1.19.2-1+deb9u9 apt=1.4.11 locales=2.24-11+deb9u4 sudo=1.8.19p1-2.1+deb9u3 openssh-client=1:7.4p1-10+deb9u7 ca-certificates=20200601~deb9u2 tar=1.29b-1.1+deb9u1 gzip=1.6-5+deb9u1 parallel=20161222-1 net-tools=1.60+git20161116.90da8a0-1 netcat=1.10-41 unzip=6.0-21+deb9u2 zip=3.0-11+b1 bzip2=1.0.6-8.1 gnupg=2.1.18-8~deb9u4 curl=7.52.1-5+deb9u16 wget=1.18-5+deb9u3 make=4.1-9.1 -y\n#   Set timezone to UTC by default\nRUN ln -sf /usr/share/zoneinfo/Etc/UTC /etc/localtime\n#   Use unicode\nRUN locale-gen C.UTF-8 || true\nENV LANG=\"C.UTF-8\"\n#   install jq\nRUN JQ_URL=\"https://circle-downloads.s3.amazonaws.com/circleci-images/cache/linux-amd64/jq-latest\" \\\n && curl --silent --show-error --location --fail --retry 3 --output /usr/bin/jq $JQ_URL \\\n && chmod +x /usr/bin/jq \\\n && jq --version\n#   Install Docker\n#   Docker.com returns the URL of the latest binary when you hit a directory listing\n#   We curl this URL and `grep` the version out.\n#   The output looks like this:\n#  >    # To install, run the following commands as root:\n#  >    curl -fsSLO https://download.docker.com/linux/static/stable/x86_64/docker-17.05.0-ce.tgz && tar --strip-components=1 -xvzf docker-17.05.0-ce.tgz -C /usr/local/bin\n#  >\n#  >    # Then start docker in daemon mode:\n#  >    /usr/local/bin/dockerd\nRUN set -ex \\\n && export DOCKER_VERSION=$( curl --silent --fail --retry 3 https://download.docker.com/linux/static/stable/x86_64/ | grep -o -e 'docker-[.0-9]*\\.tgz' | sort -r | head -n 1 ;) \\\n && DOCKER_URL=\"https://download.docker.com/linux/static/stable/x86_64/${DOCKER_VERSION}\" \\\n && echo Docker URL: $DOCKER_URL \\\n && curl --silent --show-error --location --fail --retry 3 --output /tmp/docker.tgz \"${DOCKER_URL}\" \\\n && ls -lha /tmp/docker.tgz \\\n && tar -xz -C /tmp -f /tmp/docker.tgz \\\n && mv /tmp/docker/* /usr/bin \\\n && rm -rf /tmp/docker /tmp/docker.tgz \\\n && which docker \\\n && (docker version || true )\n#   docker compose\nRUN COMPOSE_URL=\"https://circle-downloads.s3.amazonaws.com/circleci-images/cache/linux-amd64/docker-compose-latest\" \\\n && curl --silent --show-error --location --fail --retry 3 --output /usr/bin/docker-compose $COMPOSE_URL \\\n && chmod +x /usr/bin/docker-compose \\\n && docker-compose version\n#   install dockerize\nRUN DOCKERIZE_URL=\"https://circle-downloads.s3.amazonaws.com/circleci-images/cache/linux-amd64/dockerize-latest.tar.gz\" \\\n && curl --silent --show-error --location --fail --retry 3 --output /tmp/dockerize-linux-amd64.tar.gz $DOCKERIZE_URL \\\n && tar -C /usr/local/bin -xzvf /tmp/dockerize-linux-amd64.tar.gz \\\n && rm -rf /tmp/dockerize-linux-amd64.tar.gz \\\n && dockerize --version\nRUN groupadd --gid 3434 circleci \\\n && useradd --uid 3434 --gid circleci --shell /bin/bash --create-home circleci \\\n && echo 'circleci ALL=NOPASSWD: ALL' >> /etc/sudoers.d/50-circleci \\\n && echo 'Defaults env_keep += \"DEBIAN_FRONTEND\"' >> /etc/sudoers.d/env_keep\n#   BEGIN IMAGE CUSTOMIZATIONS\nRUN curl https://raw.githubusercontent.com/golang/dep/master/install.sh | INSTALL_DIRECTORY=/usr/local/bin sh\nRUN curl -sSL https://github.com/gotestyourself/gotestsum/releases/download/v0.3.4/gotestsum_0.3.4_linux_amd64.tar.gz | tar -xz -C /usr/local/bin gotestsum\n#   END IMAGE CUSTOMIZATIONS\nUSER circleci\nCMD [\"/bin/sh\"]\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"# ##\n# ## this Dockerfile is an example representing one variant of this image;\n# ## please see https://github.com/circleci-public/circleci-dockerfiles\n# ## for a complete list of Dockerfiles for each tag/variant of this image\n# ##\nFROM golang:1.12.6\n#  make Apt non-interactive\nRUN echo 'APT::Get::Assume-Yes \"true\";' > /etc/apt/apt.conf.d/90circleci \\\n && echo 'DPkg::Options \"--force-confnew\";' >> /etc/apt/apt.conf.d/90circleci\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#  Debian Jessie is EOL'd and original repos don't work.\n#  Switch to the archive mirror until we can get people to\n#  switch to Stretch.\nRUN if grep -q Debian /etc/os-release \\\n && grep -q jessie /etc/os-release ; then rm /etc/apt/sources.list \\\n && echo \"deb http://archive.debian.org/debian/ jessie main\" >> /etc/apt/sources.list \\\n && echo \"deb http://security.debian.org/debian-security jessie/updates main\" >> /etc/apt/sources.list; fi\n#  Make sure PATH includes ~/.local/bin\n#  https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=839155\nRUN echo 'PATH=\"$HOME/.local/bin:$PATH\"' >> /etc/profile.d/user-local-path.sh\n#  man directory is missing in some base images\n#  https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=863199\nRUN apt-get update \\\n && mkdir -p /usr/share/man/man1 \\\n && apt-get install git mercurial xvfb apt locales sudo openssh-client ca-certificates tar gzip parallel net-tools netcat unzip zip bzip2 gnupg curl wget make -y\n#  Set timezone to UTC by default\nRUN ln -sf /usr/share/zoneinfo/Etc/UTC /etc/localtime\n#  Use unicode\nRUN locale-gen C.UTF-8 || true\nENV LANG=\"C.UTF-8\"\n#  install jq\nRUN JQ_URL=\"https://circle-downloads.s3.amazonaws.com/circleci-images/cache/linux-amd64/jq-latest\" \\\n && curl --silent --show-error --location --fail --retry 3 --output /usr/bin/jq $JQ_URL \\\n && chmod +x /usr/bin/jq \\\n && jq --version\n#  Install Docker\n#  Docker.com returns the URL of the latest binary when you hit a directory listing\n#  We curl this URL and `grep` the version out.\n#  The output looks like this:\n# >    # To install, run the following commands as root:\n# >    curl -fsSLO https://download.docker.com/linux/static/stable/x86_64/docker-17.05.0-ce.tgz && tar --strip-components=1 -xvzf docker-17.05.0-ce.tgz -C /usr/local/bin\n# >\n# >    # Then start docker in daemon mode:\n# >    /usr/local/bin/dockerd\nRUN set -ex \\\n && export DOCKER_VERSION=$( curl --silent --fail --retry 3 https://download.docker.com/linux/static/stable/x86_64/ | grep -o -e 'docker-[.0-9]*\\.tgz' | sort -r | head -n 1 ;) \\\n && DOCKER_URL=\"https://download.docker.com/linux/static/stable/x86_64/${DOCKER_VERSION}\" \\\n && echo Docker URL: $DOCKER_URL \\\n && curl --silent --show-error --location --fail --retry 3 --output /tmp/docker.tgz \"${DOCKER_URL}\" \\\n && ls -lha /tmp/docker.tgz \\\n && tar -xz -C /tmp -f /tmp/docker.tgz \\\n && mv /tmp/docker/* /usr/bin \\\n && rm -rf /tmp/docker /tmp/docker.tgz \\\n && which docker \\\n && (docker version || true )\n#  docker compose\nRUN COMPOSE_URL=\"https://circle-downloads.s3.amazonaws.com/circleci-images/cache/linux-amd64/docker-compose-latest\" \\\n && curl --silent --show-error --location --fail --retry 3 --output /usr/bin/docker-compose $COMPOSE_URL \\\n && chmod +x /usr/bin/docker-compose \\\n && docker-compose version\n#  install dockerize\nRUN DOCKERIZE_URL=\"https://circle-downloads.s3.amazonaws.com/circleci-images/cache/linux-amd64/dockerize-latest.tar.gz\" \\\n && curl --silent --show-error --location --fail --retry 3 --output /tmp/dockerize-linux-amd64.tar.gz $DOCKERIZE_URL \\\n && tar -C /usr/local/bin -xzvf /tmp/dockerize-linux-amd64.tar.gz \\\n && rm -rf /tmp/dockerize-linux-amd64.tar.gz \\\n && dockerize --version\nRUN groupadd --gid 3434 circleci \\\n && useradd --uid 3434 --gid circleci --shell /bin/bash --create-home circleci \\\n && echo 'circleci ALL=NOPASSWD: ALL' >> /etc/sudoers.d/50-circleci \\\n && echo 'Defaults env_keep += \"DEBIAN_FRONTEND\"' >> /etc/sudoers.d/env_keep\n#  BEGIN IMAGE CUSTOMIZATIONS\nRUN curl https://raw.githubusercontent.com/golang/dep/master/install.sh | INSTALL_DIRECTORY=/usr/local/bin sh\nRUN curl -sSL https://github.com/gotestyourself/gotestsum/releases/download/v0.3.4/gotestsum_0.3.4_linux_amd64.tar.gz | tar -xz -C /usr/local/bin gotestsum\n#  END IMAGE CUSTOMIZATIONS\nUSER circleci\nCMD [\"/bin/sh\"]\n","injectedSmells":[],"originalDockerfileHash":"934866773f1fdfe9720475b31babae67","successfullyInjectedSmells":[],"originalDockerfileUglified":"#  ##\n#  ## this Dockerfile is an example representing one variant of this image;\n#  ## please see https://github.com/circleci-public/circleci-dockerfiles\n#  ## for a complete list of Dockerfiles for each tag/variant of this image\n#  ##\nFROM golang:1.12.6\n#   make Apt non-interactive\nRUN echo 'APT::Get::Assume-Yes \"true\";' > /etc/apt/apt.conf.d/90circleci \\\n && echo 'DPkg::Options \"--force-confnew\";' >> /etc/apt/apt.conf.d/90circleci\nENV DEBIAN_FRONTEND=\"noninteractive\"\n#   Debian Jessie is EOL'd and original repos don't work.\n#   Switch to the archive mirror until we can get people to\n#   switch to Stretch.\nRUN if grep -q Debian /etc/os-release \\\n && grep -q jessie /etc/os-release ; then rm /etc/apt/sources.list \\\n && echo \"deb http://archive.debian.org/debian/ jessie main\" >> /etc/apt/sources.list \\\n && echo \"deb http://security.debian.org/debian-security jessie/updates main\" >> /etc/apt/sources.list; fi\n#   Make sure PATH includes ~/.local/bin\n#   https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=839155\nRUN echo 'PATH=\"$HOME/.local/bin:$PATH\"' >> /etc/profile.d/user-local-path.sh\n#   man directory is missing in some base images\n#   https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=863199\nRUN apt-get update \\\n && mkdir -p /usr/share/man/man1 \\\n && apt-get install git mercurial xvfb apt locales sudo openssh-client ca-certificates tar gzip parallel net-tools netcat unzip zip bzip2 gnupg curl wget make -y\n#   Set timezone to UTC by default\nRUN ln -sf /usr/share/zoneinfo/Etc/UTC /etc/localtime\n#   Use unicode\nRUN locale-gen C.UTF-8 || true\nENV LANG=\"C.UTF-8\"\n#   install jq\nRUN JQ_URL=\"https://circle-downloads.s3.amazonaws.com/circleci-images/cache/linux-amd64/jq-latest\" \\\n && curl --silent --show-error --location --fail --retry 3 --output /usr/bin/jq $JQ_URL \\\n && chmod +x /usr/bin/jq \\\n && jq --version\n#   Install Docker\n#   Docker.com returns the URL of the latest binary when you hit a directory listing\n#   We curl this URL and `grep` the version out.\n#   The output looks like this:\n#  >    # To install, run the following commands as root:\n#  >    curl -fsSLO https://download.docker.com/linux/static/stable/x86_64/docker-17.05.0-ce.tgz && tar --strip-components=1 -xvzf docker-17.05.0-ce.tgz -C /usr/local/bin\n#  >\n#  >    # Then start docker in daemon mode:\n#  >    /usr/local/bin/dockerd\nRUN set -ex \\\n && export DOCKER_VERSION=$( curl --silent --fail --retry 3 https://download.docker.com/linux/static/stable/x86_64/ | grep -o -e 'docker-[.0-9]*\\.tgz' | sort -r | head -n 1 ;) \\\n && DOCKER_URL=\"https://download.docker.com/linux/static/stable/x86_64/${DOCKER_VERSION}\" \\\n && echo Docker URL: $DOCKER_URL \\\n && curl --silent --show-error --location --fail --retry 3 --output /tmp/docker.tgz \"${DOCKER_URL}\" \\\n && ls -lha /tmp/docker.tgz \\\n && tar -xz -C /tmp -f /tmp/docker.tgz \\\n && mv /tmp/docker/* /usr/bin \\\n && rm -rf /tmp/docker /tmp/docker.tgz \\\n && which docker \\\n && (docker version || true )\n#   docker compose\nRUN COMPOSE_URL=\"https://circle-downloads.s3.amazonaws.com/circleci-images/cache/linux-amd64/docker-compose-latest\" \\\n && curl --silent --show-error --location --fail --retry 3 --output /usr/bin/docker-compose $COMPOSE_URL \\\n && chmod +x /usr/bin/docker-compose \\\n && docker-compose version\n#   install dockerize\nRUN DOCKERIZE_URL=\"https://circle-downloads.s3.amazonaws.com/circleci-images/cache/linux-amd64/dockerize-latest.tar.gz\" \\\n && curl --silent --show-error --location --fail --retry 3 --output /tmp/dockerize-linux-amd64.tar.gz $DOCKERIZE_URL \\\n && tar -C /usr/local/bin -xzvf /tmp/dockerize-linux-amd64.tar.gz \\\n && rm -rf /tmp/dockerize-linux-amd64.tar.gz \\\n && dockerize --version\nRUN groupadd --gid 3434 circleci \\\n && useradd --uid 3434 --gid circleci --shell /bin/bash --create-home circleci \\\n && echo 'circleci ALL=NOPASSWD: ALL' >> /etc/sudoers.d/50-circleci \\\n && echo 'Defaults env_keep += \"DEBIAN_FRONTEND\"' >> /etc/sudoers.d/env_keep\n#   BEGIN IMAGE CUSTOMIZATIONS\nRUN curl https://raw.githubusercontent.com/golang/dep/master/install.sh | INSTALL_DIRECTORY=/usr/local/bin sh\nRUN curl -sSL https://github.com/gotestyourself/gotestsum/releases/download/v0.3.4/gotestsum_0.3.4_linux_amd64.tar.gz | tar -xz -C /usr/local/bin gotestsum\n#   END IMAGE CUSTOMIZATIONS\nUSER circleci\nCMD [\"/bin/sh\"]\n","originalDockerfileUglifiedHash":"99c996e92f1cccffd9293151756bece8","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/1284084e04709cf83dfe351af5e334362db08bc8.dockerfile"}