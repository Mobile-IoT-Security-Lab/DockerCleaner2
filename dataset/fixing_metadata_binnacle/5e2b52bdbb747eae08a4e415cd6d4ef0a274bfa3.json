{"seed":3280358271,"processedDockerfileHash":"810476dcbf47afd3a48de2ac6b1a5f5e","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-npm","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM ubuntu:14.04\nMAINTAINER Yang \nRUN :\n#  ## https://github.com/kstaken/dockerfile-examples/blob/master/mysql-server/Dockerfile\nCOPY ./mysql-setup.sh /tmp/mysql-setup.sh\nRUN /bin/sh /tmp/mysql-setup.sh\nCMD [\"/usr/sbin/mysqld\"]\n#  # python related\nRUN (apt-get update ;apt-get install --no-install-recommends python-software-properties=0.92.37.8 python=2.7.5-5ubuntu3 python-setuptools=3.3-1ubuntu2 git=1:1.9.1-1ubuntu0.10 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends libmysqlclient-dev=5.5.62-0ubuntu0.14.04.1 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends libxml2-dev=2.9.1+dfsg1-3ubuntu4.13 libxslt1-dev=1.1.28-2ubuntu0.2 python-dev=2.7.5-5ubuntu3 -y )\nRUN easy_install pip\nRUN mkdir -p /www/mypocket/static/dowload-image\n#  # nodejs\nRUN add-apt-repository ppa:chris-lea/node.js\nRUN echo \"deb http://us.archive.ubuntu.com/ubuntu/ precise universe\" >> /etc/apt/sources.list\nRUN :\nRUN (apt-get update ;apt-get install --no-install-recommends nodejs=0.10.25~dfsg2-2ubuntu1.2 -y )\nRUN npm install less@4.1.3 requirejs@2.3.6 -g\n#  # Redis\n#  ## https://github.com/dockerfile/redis/blob/master/Dockerfile\n#   Install Redis.\nRUN cd /tmp \\\n && wget http://download.redis.io/redis-stable.tar.gz \\\n && tar xvzf redis-stable.tar.gz \\\n && cd redis-stable \\\n && make \\\n && make install \\\n && cp -f src/redis-sentinel /usr/local/bin \\\n && mkdir -p /etc/redis \\\n && cp -f *.conf /etc/redis \\\n && rm -rf /tmp/redis-stable* \\\n && sed -i 's/^\\(bind .*\\)$/# \\1/' /etc/redis/redis.conf \\\n && sed -i 's/^\\(daemonize .*\\)$/# \\1/' /etc/redis/redis.conf \\\n && sed -i 's/^\\(dir .*\\)$/# \\1\\ndir \\/data/' /etc/redis/redis.conf \\\n && sed -i 's/^\\(logfile .*\\)$/# \\1/' /etc/redis/redis.conf\n#   Define mountable directories.\nVOLUME [\"/data\"]\n#   Define working directory.\nWORKDIR /data\n#   Define default command.\nCMD [\"redis-server\", \"/etc/redis/redis.conf\"]\n#   Expose ports.\nEXPOSE 6379/tcp\n#  ## nginx\nRUN add-apt-repository -y ppa:nginx/stable \\\n && apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends nginx=1.4.6-1ubuntu3.9 -y ) \\\n && rm -rf /var/lib/apt/lists/* \\\n && echo \"\\ndaemon off;\" >> /etc/nginx/nginx.conf \\\n && chown -R www-data:www-data /var/lib/nginx\n#   Define mountable directories.\nVOLUME [\"/etc/nginx/sites-enabled\", \"/etc/nginx/certs\", \"/etc/nginx/conf.d\", \"/var/log/nginx\", \"/var/www/html\"]\n#   Define working directory.\nWORKDIR /etc/nginx\n#   Define default command.\nCMD [\"nginx\"]\n#   Expose ports.\nEXPOSE 80/tcp\nEXPOSE 443/tcp\n#  # project\nRUN git clone https://github.com/zhy0216/OhMyPocket.git\nWORKDIR /OhMyPocket\nRUN pip install -r dev_requirements.txt\nRUN fab compile_less \\\n && fab compile_js\nRUN python myworker.py > worklog&\nRUN python manage.py syncdb\nRUN python manage.py runserver\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:14.04\nMAINTAINER Yang \nRUN apt-get update\n# ## https://github.com/kstaken/dockerfile-examples/blob/master/mysql-server/Dockerfile\nADD ./mysql-setup.sh /tmp/mysql-setup.sh\nRUN /bin/sh /tmp/mysql-setup.sh\nCMD [\"/usr/sbin/mysqld\"]\n# # python related\nRUN apt-get install python-software-properties python python-setuptools git -y\nRUN apt-get install libmysqlclient-dev -y\nRUN apt-get install libxml2-dev libxslt1-dev python-dev -y\nRUN easy_install pip\nRUN mkdir -p /www/mypocket/static/dowload-image\n# # nodejs\nRUN add-apt-repository ppa:chris-lea/node.js\nRUN echo \"deb http://us.archive.ubuntu.com/ubuntu/ precise universe\" >> /etc/apt/sources.list\nRUN apt-get update\nRUN apt-get install nodejs -y\nRUN npm install less requirejs -g\n# # Redis\n# ## https://github.com/dockerfile/redis/blob/master/Dockerfile\n#  Install Redis.\nRUN cd /tmp \\\n && wget http://download.redis.io/redis-stable.tar.gz \\\n && tar xvzf redis-stable.tar.gz \\\n && cd redis-stable \\\n && make \\\n && make install \\\n && cp -f src/redis-sentinel /usr/local/bin \\\n && mkdir -p /etc/redis \\\n && cp -f *.conf /etc/redis \\\n && rm -rf /tmp/redis-stable* \\\n && sed -i 's/^\\(bind .*\\)$/# \\1/' /etc/redis/redis.conf \\\n && sed -i 's/^\\(daemonize .*\\)$/# \\1/' /etc/redis/redis.conf \\\n && sed -i 's/^\\(dir .*\\)$/# \\1\\ndir \\/data/' /etc/redis/redis.conf \\\n && sed -i 's/^\\(logfile .*\\)$/# \\1/' /etc/redis/redis.conf\n#  Define mountable directories.\nVOLUME [\"/data\"]\n#  Define working directory.\nWORKDIR /data\n#  Define default command.\nCMD [\"redis-server\", \"/etc/redis/redis.conf\"]\n#  Expose ports.\nEXPOSE 6379/tcp\n# ## nginx\nRUN add-apt-repository -y ppa:nginx/stable \\\n && apt-get update \\\n && apt-get install nginx -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && echo \"\\ndaemon off;\" >> /etc/nginx/nginx.conf \\\n && chown -R www-data:www-data /var/lib/nginx\n#  Define mountable directories.\nVOLUME [\"/etc/nginx/sites-enabled\", \"/etc/nginx/certs\", \"/etc/nginx/conf.d\", \"/var/log/nginx\", \"/var/www/html\"]\n#  Define working directory.\nWORKDIR /etc/nginx\n#  Define default command.\nCMD [\"nginx\"]\n#  Expose ports.\nEXPOSE 80/tcp\nEXPOSE 443/tcp\n# # project\nRUN git clone https://github.com/zhy0216/OhMyPocket.git\nWORKDIR /OhMyPocket\nRUN pip install -r dev_requirements.txt\nRUN fab compile_less \\\n && fab compile_js\nRUN python myworker.py > worklog&\nRUN python manage.py syncdb\nRUN python manage.py runserver\n","injectedSmells":[],"originalDockerfileHash":"5649638c669c46cfd73a210cc3864b7f","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:14.04\nMAINTAINER Yang \nRUN apt-get update\n#  ## https://github.com/kstaken/dockerfile-examples/blob/master/mysql-server/Dockerfile\nADD ./mysql-setup.sh /tmp/mysql-setup.sh\nRUN /bin/sh /tmp/mysql-setup.sh\nCMD [\"/usr/sbin/mysqld\"]\n#  # python related\nRUN apt-get install python-software-properties python python-setuptools git -y\nRUN apt-get install libmysqlclient-dev -y\nRUN apt-get install libxml2-dev libxslt1-dev python-dev -y\nRUN easy_install pip\nRUN mkdir -p /www/mypocket/static/dowload-image\n#  # nodejs\nRUN add-apt-repository ppa:chris-lea/node.js\nRUN echo \"deb http://us.archive.ubuntu.com/ubuntu/ precise universe\" >> /etc/apt/sources.list\nRUN apt-get update\nRUN apt-get install nodejs -y\nRUN npm install less requirejs -g\n#  # Redis\n#  ## https://github.com/dockerfile/redis/blob/master/Dockerfile\n#   Install Redis.\nRUN cd /tmp \\\n && wget http://download.redis.io/redis-stable.tar.gz \\\n && tar xvzf redis-stable.tar.gz \\\n && cd redis-stable \\\n && make \\\n && make install \\\n && cp -f src/redis-sentinel /usr/local/bin \\\n && mkdir -p /etc/redis \\\n && cp -f *.conf /etc/redis \\\n && rm -rf /tmp/redis-stable* \\\n && sed -i 's/^\\(bind .*\\)$/# \\1/' /etc/redis/redis.conf \\\n && sed -i 's/^\\(daemonize .*\\)$/# \\1/' /etc/redis/redis.conf \\\n && sed -i 's/^\\(dir .*\\)$/# \\1\\ndir \\/data/' /etc/redis/redis.conf \\\n && sed -i 's/^\\(logfile .*\\)$/# \\1/' /etc/redis/redis.conf\n#   Define mountable directories.\nVOLUME [\"/data\"]\n#   Define working directory.\nWORKDIR /data\n#   Define default command.\nCMD [\"redis-server\", \"/etc/redis/redis.conf\"]\n#   Expose ports.\nEXPOSE 6379/tcp\n#  ## nginx\nRUN add-apt-repository -y ppa:nginx/stable \\\n && apt-get update \\\n && apt-get install nginx -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && echo \"\\ndaemon off;\" >> /etc/nginx/nginx.conf \\\n && chown -R www-data:www-data /var/lib/nginx\n#   Define mountable directories.\nVOLUME [\"/etc/nginx/sites-enabled\", \"/etc/nginx/certs\", \"/etc/nginx/conf.d\", \"/var/log/nginx\", \"/var/www/html\"]\n#   Define working directory.\nWORKDIR /etc/nginx\n#   Define default command.\nCMD [\"nginx\"]\n#   Expose ports.\nEXPOSE 80/tcp\nEXPOSE 443/tcp\n#  # project\nRUN git clone https://github.com/zhy0216/OhMyPocket.git\nWORKDIR /OhMyPocket\nRUN pip install -r dev_requirements.txt\nRUN fab compile_less \\\n && fab compile_js\nRUN python myworker.py > worklog&\nRUN python manage.py syncdb\nRUN python manage.py runserver\n","originalDockerfileUglifiedHash":"9c6f4e04fb444d989e93ed3c47b63299","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/5e2b52bdbb747eae08a4e415cd6d4ef0a274bfa3.dockerfile"}