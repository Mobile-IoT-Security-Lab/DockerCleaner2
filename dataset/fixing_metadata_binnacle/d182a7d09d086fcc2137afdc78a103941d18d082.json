{"seed":440380049,"processedDockerfileHash":"289bf88aea910c6b973d3cb381c0a0ad","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM debian:buster-slim\nLABEL io.balena.architecture=\"amd64\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends sudo=1.8.27-1+deb10u5 ca-certificates=20200601~deb10u2 findutils=4.6.0+git+20190209-2 gnupg=2.2.12-1+deb10u2 dirmngr=2.2.12-1+deb10u2 inetutils-ping=2:1.9.4-7+deb10u2 netbase=5.6 curl=7.64.0-4+deb10u5 udev=241-7~deb10u8 procps=2:3.3.15-2 $( if apt-cache show 'iproute' 2> /dev/null | grep -q '^Version:' ; then echo 'iproute' ; else echo 'iproute2' ; fi ;) -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n set +e\\n (\\n apt-get update -qq &&\\n apt-get install -y --no-install-recommends \"$@\"\\n )\\n CODE=$?\\n set -e\\n if [ $CODE -eq 0 ]; then\\n break\\n fi\\n if [ $n -eq $max ]; then\\n exit $CODE\\n fi\\n echo \"apt failed, retrying\"\\n n=$(($n + 1))\\ndone\\nrm -r /var/lib/apt/lists/*' > /usr/sbin/install_packages \\\n && chmod 0755 \"/usr/sbin/install_packages\"\n#   Install packages for build variant\nRUN apt-get update \\\n && apt-get install --no-install-recommends ca-certificates=20200601~deb10u2 curl=7.64.0-4+deb10u5 wget=1.20.1-1.1 bzr=2.7.0+bzr6622-15 git=1:2.20.1-2+deb10u8 mercurial=4.8.2-1+deb10u1 openssh-client=1:7.9p1-10+deb10u2 subversion=1.10.4-1+deb10u3 autoconf=2.69-11 build-essential=12.6 imagemagick=8:6.9.10.23+dfsg-2.1+deb10u4 libbz2-dev=1.0.6-9.2~deb10u2 libcurl4-openssl-dev=7.64.0-4+deb10u5 libevent-dev=2.1.8-stable-4 libffi-dev=3.2.1-9 libglib2.0-dev=2.58.3-2+deb10u4 libjpeg-dev=1:1.5.2-2+deb10u1 libmagickcore-dev=8:6.9.10.23+dfsg-2.1+deb10u4 libmagickwand-dev=8:6.9.10.23+dfsg-2.1+deb10u4 libncurses-dev=6.1+20181013-2+deb10u3 libpq-dev=11.19-0+deb10u1 libreadline-dev=7.0-5 libsqlite3-dev=3.27.2-3+deb10u2 libssl-dev=1.1.1n-0+deb10u4 libxml2-dev=2.9.4+dfsg1-7+deb10u5 libxslt-dev libyaml-dev=0.2.1-1 zlib1g-dev=1:1.2.11.dfsg-1+deb10u2 $( if apt-cache show 'default-libmysqlclient-dev' 2> /dev/null | grep -q '^Version:' ; then echo 'default-libmysqlclient-dev' ; else echo 'libmysqlclient-dev' ; fi ;) -y \\\n && rm -rf /var/lib/apt/lists/*\nRUN curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\" \\\n && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437 resin-xbuild1.0.0.tar.gz\" | sha256sum -c - \\\n && tar -xzf \"resin-xbuild1.0.0.tar.gz\" \\\n && rm \"resin-xbuild1.0.0.tar.gz\" \\\n && chmod +x resin-xbuild \\\n && mv resin-xbuild /usr/bin \\\n && ln -s resin-xbuild /usr/bin/cross-build-start \\\n && ln -s resin-xbuild /usr/bin/cross-build-end\nENV LC_ALL=\"C.UTF-8\"\nENV DEBIAN_FRONTEND=\"noninteractive\"\nENV UDEV=\"off\"\n#   01_nodoc\nRUN echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc\n#   01_buildconfig\nRUN echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig\nRUN mkdir -p /usr/share/man/man1\nCOPY entry.sh /usr/bin/entry.sh\nENTRYPOINT [\"/usr/bin/entry.sh\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM debian:buster-slim\nLABEL io.balena.architecture=\"amd64\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends sudo ca-certificates findutils gnupg dirmngr inetutils-ping netbase curl udev procps $( if apt-cache show 'iproute' 2> /dev/null | grep -q '^Version:' ; then echo 'iproute' ; else echo 'iproute2' ; fi ;) -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n set +e\\n (\\n apt-get update -qq &&\\n apt-get install -y --no-install-recommends \"$@\"\\n )\\n CODE=$?\\n set -e\\n if [ $CODE -eq 0 ]; then\\n break\\n fi\\n if [ $n -eq $max ]; then\\n exit $CODE\\n fi\\n echo \"apt failed, retrying\"\\n n=$(($n + 1))\\ndone\\nrm -r /var/lib/apt/lists/*' > /usr/sbin/install_packages \\\n && chmod 0755 \"/usr/sbin/install_packages\"\n#  Install packages for build variant\nRUN apt-get update \\\n && apt-get install --no-install-recommends ca-certificates curl wget bzr git mercurial openssh-client subversion autoconf build-essential imagemagick libbz2-dev libcurl4-openssl-dev libevent-dev libffi-dev libglib2.0-dev libjpeg-dev libmagickcore-dev libmagickwand-dev libncurses-dev libpq-dev libreadline-dev libsqlite3-dev libssl-dev libxml2-dev libxslt-dev libyaml-dev zlib1g-dev $( if apt-cache show 'default-libmysqlclient-dev' 2> /dev/null | grep -q '^Version:' ; then echo 'default-libmysqlclient-dev' ; else echo 'libmysqlclient-dev' ; fi ;) -y \\\n && rm -rf /var/lib/apt/lists/*\nRUN curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\" \\\n && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437 resin-xbuild1.0.0.tar.gz\" | sha256sum -c - \\\n && tar -xzf \"resin-xbuild1.0.0.tar.gz\" \\\n && rm \"resin-xbuild1.0.0.tar.gz\" \\\n && chmod +x resin-xbuild \\\n && mv resin-xbuild /usr/bin \\\n && ln -s resin-xbuild /usr/bin/cross-build-start \\\n && ln -s resin-xbuild /usr/bin/cross-build-end\nENV LC_ALL=\"C.UTF-8\"\nENV DEBIAN_FRONTEND=\"noninteractive\"\nENV UDEV=\"off\"\n#  01_nodoc\nRUN echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc\n#  01_buildconfig\nRUN echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig\nRUN mkdir -p /usr/share/man/man1\nCOPY entry.sh /usr/bin/entry.sh\nENTRYPOINT [\"/usr/bin/entry.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"5a83fef707aae1f871825ac11a3faa91","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM debian:buster-slim\nLABEL io.balena.architecture=\"amd64\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends sudo ca-certificates findutils gnupg dirmngr inetutils-ping netbase curl udev procps $( if apt-cache show 'iproute' 2> /dev/null | grep -q '^Version:' ; then echo 'iproute' ; else echo 'iproute2' ; fi ;) -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n set +e\\n (\\n apt-get update -qq &&\\n apt-get install -y --no-install-recommends \"$@\"\\n )\\n CODE=$?\\n set -e\\n if [ $CODE -eq 0 ]; then\\n break\\n fi\\n if [ $n -eq $max ]; then\\n exit $CODE\\n fi\\n echo \"apt failed, retrying\"\\n n=$(($n + 1))\\ndone\\nrm -r /var/lib/apt/lists/*' > /usr/sbin/install_packages \\\n && chmod 0755 \"/usr/sbin/install_packages\"\n#   Install packages for build variant\nRUN apt-get update \\\n && apt-get install --no-install-recommends ca-certificates curl wget bzr git mercurial openssh-client subversion autoconf build-essential imagemagick libbz2-dev libcurl4-openssl-dev libevent-dev libffi-dev libglib2.0-dev libjpeg-dev libmagickcore-dev libmagickwand-dev libncurses-dev libpq-dev libreadline-dev libsqlite3-dev libssl-dev libxml2-dev libxslt-dev libyaml-dev zlib1g-dev $( if apt-cache show 'default-libmysqlclient-dev' 2> /dev/null | grep -q '^Version:' ; then echo 'default-libmysqlclient-dev' ; else echo 'libmysqlclient-dev' ; fi ;) -y \\\n && rm -rf /var/lib/apt/lists/*\nRUN curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\" \\\n && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437 resin-xbuild1.0.0.tar.gz\" | sha256sum -c - \\\n && tar -xzf \"resin-xbuild1.0.0.tar.gz\" \\\n && rm \"resin-xbuild1.0.0.tar.gz\" \\\n && chmod +x resin-xbuild \\\n && mv resin-xbuild /usr/bin \\\n && ln -s resin-xbuild /usr/bin/cross-build-start \\\n && ln -s resin-xbuild /usr/bin/cross-build-end\nENV LC_ALL=\"C.UTF-8\"\nENV DEBIAN_FRONTEND=\"noninteractive\"\nENV UDEV=\"off\"\n#   01_nodoc\nRUN echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc\n#   01_buildconfig\nRUN echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig\nRUN mkdir -p /usr/share/man/man1\nCOPY entry.sh /usr/bin/entry.sh\nENTRYPOINT [\"/usr/bin/entry.sh\"]\n","originalDockerfileUglifiedHash":"a78bf3fa0246f24cdfd2b43a2f63c8e3","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/d182a7d09d086fcc2137afdc78a103941d18d082.dockerfile"}