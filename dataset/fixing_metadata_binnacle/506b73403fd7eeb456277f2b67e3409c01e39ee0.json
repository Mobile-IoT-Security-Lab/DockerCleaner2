{"seed":255998996,"processedDockerfileHash":"41e54df1c97804ae2633978f00e347ca","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM ubuntu:14.04\nMAINTAINER Sai Soundararaj <saip@outlook.com>\nARG THEANO_VERSION=rel-0.8.2\nARG TENSORFLOW_VERSION=0.12.1 \nARG TENSORFLOW_ARCH=cpu\nARG KERAS_VERSION=1.2.0\nARG LASAGNE_VERSION=v0.1\nARG TORCH_VERSION=latest\nARG CAFFE_VERSION=master\n#   Install some dependencies\nRUN apt-get update \\\n && apt-get install --no-install-recommends bc=1.06.95-8ubuntu1 build-essential=11.6ubuntu6 cmake=2.8.12.2-0ubuntu3 curl=7.35.0-1ubuntu2.20 g++=4:4.8.2-1ubuntu6 gfortran=4:4.8.2-1ubuntu6 git=1:1.9.1-1ubuntu0.10 libffi-dev=3.1~rc1+r3.0.13-12ubuntu0.2 libfreetype6-dev=2.5.2-1ubuntu2.8 libhdf5-dev=1.8.11-5ubuntu7.1 libjpeg-dev=8c-2ubuntu8 liblcms2-dev=2.5-0ubuntu4.2 libopenblas-dev=0.2.8-6ubuntu1 liblapack-dev=3.5.0-2ubuntu1 libopenjpeg2=1.3+dfsg-4.7ubuntu1 libpng12-dev=1.2.50-1ubuntu2.14.04.3 libssl-dev=1.0.1f-1ubuntu2.27 libtiff5-dev=4.0.3-7ubuntu0.11 libwebp-dev=0.4.0-4 libzmq3-dev=4.0.4+dfsg-2ubuntu0.1 nano=2.2.6-1ubuntu1 pkg-config=0.26-1ubuntu4 python-dev=2.7.5-5ubuntu3 software-properties-common=0.92.37.8 unzip=6.0-9ubuntu1.5 vim=2:7.4.052-1ubuntu3.1 wget=1.15-1ubuntu1.14.04.5 zlib1g-dev=1:1.2.8.dfsg-1ubuntu1.1 qt5-default=5.2.1+dfsg-1ubuntu14.3 libvtk6-dev=6.0.0-6 zlib1g-dev=1:1.2.8.dfsg-1ubuntu1.1 libjpeg-dev=8c-2ubuntu8 libwebp-dev=0.4.0-4 libpng-dev libtiff5-dev=4.0.3-7ubuntu0.11 libjasper-dev=1.900.1-14ubuntu3.5 libopenexr-dev=1.6.1-7ubuntu1 libgdal-dev=1.10.1+dfsg-5ubuntu1 libdc1394-22-dev=2.2.1-2ubuntu2 libavcodec-dev=6:9.20-0ubuntu0.14.04.1 libavformat-dev=6:9.20-0ubuntu0.14.04.1 libswscale-dev=6:9.20-0ubuntu0.14.04.1 libtheora-dev=1.1.1+dfsg.1-3.2 libvorbis-dev=1.3.2-1.3ubuntu1.2 libxvidcore-dev=2:1.3.2-9ubuntu1 libx264-dev=2:0.142.2389+git956c8d8-2 yasm=1.2.0-1ubuntu1 libopencore-amrnb-dev=0.1.3-2ubuntu1 libopencore-amrwb-dev=0.1.3-2ubuntu1 libv4l-dev=1.0.1-1 libxine2-dev=1.2.4-2ubuntu1 libtbb-dev=4.2~20130725-1.1ubuntu1 libeigen3-dev=3.2.0-8 python-dev=2.7.5-5ubuntu3 python-tk=2.7.5-1ubuntu1 python-numpy=1:1.8.2-0ubuntu0.1 python3-dev=3.4.0-0ubuntu2 python3-tk=3.4.3-1~14.04.2 python3-numpy=1:1.8.2-0ubuntu0.1 ant=1.9.3-2ubuntu0.1 default-jdk=2:1.7-51 doxygen=1.8.6-2 -y \\\n && apt-get clean \\\n && apt-get autoremove \\\n && rm -rf /var/lib/apt/lists/* \\\n && update-alternatives --set libblas.so.3 /usr/lib/openblas-base/libblas.so.3\n#   Install pip\nRUN curl -O https://bootstrap.pypa.io/get-pip.py \\\n && python get-pip.py \\\n && rm get-pip.py\n#   Add SNI support to Python\nRUN pip install pyopenssl==23.1.1 ndg-httpsclient==0.5.1 pyasn1==0.4.8 --no-cache-dir\n#   Install useful Python packages using apt-get to avoid version incompatibilities with Tensorflow binary\n#   especially numpy, scipy, skimage and sklearn (see https://github.com/tensorflow/tensorflow/issues/2034)\nRUN apt-get update \\\n && apt-get install --no-install-recommends python-numpy=1:1.8.2-0ubuntu0.1 python-scipy=0.13.3-1build1 python-nose=1.3.1-2 python-h5py=2.2.1-1build2 python-skimage=0.9.3-4build1 python-matplotlib=1.3.1-1ubuntu5.1 python-pandas=0.13.1-2ubuntu2 python-sklearn=0.14.1-2 python-sympy=0.7.4.1-1 -y \\\n && apt-get clean \\\n && apt-get autoremove \\\n && rm -rf /var/lib/apt/lists/*\n#   Install other useful Python packages using pip\nRUN pip install ipython==8.12.0 --no-cache-dir --upgrade \\\n && pip install Cython==0.29.34 ipykernel==6.22.0 jupyter==1.0.0 path.py==12.5.0 Pillow==9.5.0 pygments==2.15.0 six==1.16.0 sphinx==6.1.3 wheel==0.40.0 zmq==0.0.0 --no-cache-dir \\\n && python -m ipykernel.kernelspec\n#   Install TensorFlow\nRUN pip install https://storage.googleapis.com/tensorflow/linux/${TENSORFLOW_ARCH}/tensorflow-${TENSORFLOW_VERSION}-cp27-none-linux_x86_64.whl --no-cache-dir\n#   Install dependencies for Caffe\nRUN apt-get update \\\n && apt-get install --no-install-recommends libboost-all-dev=1.54.0.1ubuntu1 libgflags-dev=2.0-1.1ubuntu1 libgoogle-glog-dev=0.3.3-1 libhdf5-serial-dev=1.8.11-5ubuntu7.1 libleveldb-dev=1.15.0-2 liblmdb-dev=0.9.10-1 libopencv-dev=2.4.8+dfsg1-2ubuntu1.2 libprotobuf-dev=2.5.0-9ubuntu1 libsnappy-dev=1.1.0-1ubuntu1 protobuf-compiler=2.5.0-9ubuntu1 -y \\\n && apt-get clean \\\n && apt-get autoremove \\\n && rm -rf /var/lib/apt/lists/*\n#   Install Caffe\nRUN git clone -b ${CAFFE_VERSION} --depth 1 https://github.com/BVLC/caffe.git /root/caffe \\\n && cd /root/caffe \\\n && cat python/requirements.txt | xargs -n1 pip install \\\n && mkdir build \\\n && cd build \\\n && cmake -DCPU_ONLY=1 -DBLAS=Open .. \\\n && make -j\"$( nproc ;)\" all \\\n && make install\n#   Set up Caffe environment variables\nENV CAFFE_ROOT=\"/root/caffe\"\nENV PYCAFFE_ROOT=\"$CAFFE_ROOT/python\"\nENV PYTHONPATH=\"$PYCAFFE_ROOT:$PYTHONPATH\" \\\n    PATH=\"$CAFFE_ROOT/build/tools:$PYCAFFE_ROOT:$PATH\"\nRUN echo \"$CAFFE_ROOT/build/lib\" >> /etc/ld.so.conf.d/caffe.conf \\\n && ldconfig\n#   Install Theano and set up Theano config (.theanorc) OpenBLAS\nRUN pip install git+git://github.com/Theano/Theano.git@${THEANO_VERSION} --no-cache-dir \\\n && echo \"[global]\\ndevice=cpu\\nfloatX=float32\\nmode=FAST_RUN \\n[lib]\\ncnmem=0.95 \\n[nvcc]\\nfastmath=True \\n[blas]\\nldflag = -L/usr/lib/openblas-base -lopenblas \\n[DebugMode]\\ncheck_finite=1\" > /root/.theanorc\n#   Install Keras\nRUN pip install git+git://github.com/fchollet/keras.git@${KERAS_VERSION} --no-cache-dir\n#   Install Lasagne\nRUN pip install git+git://github.com/Lasagne/Lasagne.git@${LASAGNE_VERSION} --no-cache-dir\n#   Install Torch\nRUN git clone https://github.com/torch/distro.git /root/torch --recursive \\\n && cd /root/torch \\\n && bash install-deps \\\n && yes no | ./install.sh\n#   Export the LUA evironment variables manually\nENV LUA_PATH=\"/root/.luarocks/share/lua/5.1/?.lua;/root/.luarocks/share/lua/5.1/?/init.lua;/root/torch/install/share/lua/5.1/?.lua;/root/torch/install/share/lua/5.1/?/init.lua;./?.lua;/root/torch/install/share/luajit-2.1.0-beta1/?.lua;/usr/local/share/lua/5.1/?.lua;/usr/local/share/lua/5.1/?/init.lua\" \\\n    LUA_CPATH=\"/root/.luarocks/lib/lua/5.1/?.so;/root/torch/install/lib/lua/5.1/?.so;./?.so;/usr/local/lib/lua/5.1/?.so;/usr/local/lib/lua/5.1/loadall.so\" \\\n    PATH=\"/root/torch/install/bin:$PATH\" \\\n    LD_LIBRARY_PATH=\"/root/torch/install/lib:$LD_LIBRARY_PATH\" \\\n    DYLD_LIBRARY_PATH=\"/root/torch/install/lib:$DYLD_LIBRARY_PATH\"\nENV LUA_CPATH=\"/root/torch/install/lib/?.so;$LUA_CPATH\"\n#   Install the latest versions of nn, and iTorch\nRUN luarocks install nn \\\n && luarocks install loadcaffe \\\n && cd /root \\\n && git clone https://github.com/facebook/iTorch.git \\\n && cd iTorch \\\n && luarocks make\n#   Install OpenCV\nRUN git clone --depth 1 https://github.com/opencv/opencv.git /root/opencv \\\n && cd /root/opencv \\\n && mkdir build \\\n && cd build \\\n && cmake -DWITH_QT=ON -DWITH_OPENGL=ON -DFORCE_VTK=ON -DWITH_TBB=ON -DWITH_GDAL=ON -DWITH_XINE=ON -DBUILD_EXAMPLES=ON .. \\\n && make -j\"$( nproc ;)\" \\\n && make install \\\n && ldconfig \\\n && echo 'ln /dev/null /dev/raw1394' >> ~/.bashrc\n#   Set up notebook config\nCOPY jupyter_notebook_config.py /root/.jupyter/\n#   Jupyter has issues with being run directly: https://github.com/ipython/ipython/issues/7062\nCOPY run_jupyter.sh /root/\n#   Expose Ports for TensorBoard (6006), Ipython (8888)\nEXPOSE 6006/tcp 8888/tcp\nWORKDIR \"/root\"\nCMD [\"/bin/bash\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:14.04\nMAINTAINER Sai Soundararaj <saip@outlook.com>\nARG THEANO_VERSION=rel-0.8.2\nARG TENSORFLOW_VERSION=0.12.1 \nARG TENSORFLOW_ARCH=cpu\nARG KERAS_VERSION=1.2.0\nARG LASAGNE_VERSION=v0.1\nARG TORCH_VERSION=latest\nARG CAFFE_VERSION=master\n#  Install some dependencies\nRUN apt-get update \\\n && apt-get install bc build-essential cmake curl g++ gfortran git libffi-dev libfreetype6-dev libhdf5-dev libjpeg-dev liblcms2-dev libopenblas-dev liblapack-dev libopenjpeg2 libpng12-dev libssl-dev libtiff5-dev libwebp-dev libzmq3-dev nano pkg-config python-dev software-properties-common unzip vim wget zlib1g-dev qt5-default libvtk6-dev zlib1g-dev libjpeg-dev libwebp-dev libpng-dev libtiff5-dev libjasper-dev libopenexr-dev libgdal-dev libdc1394-22-dev libavcodec-dev libavformat-dev libswscale-dev libtheora-dev libvorbis-dev libxvidcore-dev libx264-dev yasm libopencore-amrnb-dev libopencore-amrwb-dev libv4l-dev libxine2-dev libtbb-dev libeigen3-dev python-dev python-tk python-numpy python3-dev python3-tk python3-numpy ant default-jdk doxygen -y \\\n && apt-get clean \\\n && apt-get autoremove \\\n && rm -rf /var/lib/apt/lists/* \\\n && update-alternatives --set libblas.so.3 /usr/lib/openblas-base/libblas.so.3\n#  Install pip\nRUN curl -O https://bootstrap.pypa.io/get-pip.py \\\n && python get-pip.py \\\n && rm get-pip.py\n#  Add SNI support to Python\nRUN pip install pyopenssl ndg-httpsclient pyasn1 --no-cache-dir\n#  Install useful Python packages using apt-get to avoid version incompatibilities with Tensorflow binary\n#  especially numpy, scipy, skimage and sklearn (see https://github.com/tensorflow/tensorflow/issues/2034)\nRUN apt-get update \\\n && apt-get install python-numpy python-scipy python-nose python-h5py python-skimage python-matplotlib python-pandas python-sklearn python-sympy -y \\\n && apt-get clean \\\n && apt-get autoremove \\\n && rm -rf /var/lib/apt/lists/*\n#  Install other useful Python packages using pip\nRUN pip install ipython --no-cache-dir --upgrade \\\n && pip install Cython ipykernel jupyter path.py Pillow pygments six sphinx wheel zmq --no-cache-dir \\\n && python -m ipykernel.kernelspec\n#  Install TensorFlow\nRUN pip install https://storage.googleapis.com/tensorflow/linux/${TENSORFLOW_ARCH}/tensorflow-${TENSORFLOW_VERSION}-cp27-none-linux_x86_64.whl --no-cache-dir\n#  Install dependencies for Caffe\nRUN apt-get update \\\n && apt-get install libboost-all-dev libgflags-dev libgoogle-glog-dev libhdf5-serial-dev libleveldb-dev liblmdb-dev libopencv-dev libprotobuf-dev libsnappy-dev protobuf-compiler -y \\\n && apt-get clean \\\n && apt-get autoremove \\\n && rm -rf /var/lib/apt/lists/*\n#  Install Caffe\nRUN git clone -b ${CAFFE_VERSION} --depth 1 https://github.com/BVLC/caffe.git /root/caffe \\\n && cd /root/caffe \\\n && cat python/requirements.txt | xargs -n1 pip install \\\n && mkdir build \\\n && cd build \\\n && cmake -DCPU_ONLY=1 -DBLAS=Open .. \\\n && make -j\"$( nproc ;)\" all \\\n && make install\n#  Set up Caffe environment variables\nENV CAFFE_ROOT=\"/root/caffe\"\nENV PYCAFFE_ROOT=\"$CAFFE_ROOT/python\"\nENV PYTHONPATH=\"$PYCAFFE_ROOT:$PYTHONPATH\" \\\n    PATH=\"$CAFFE_ROOT/build/tools:$PYCAFFE_ROOT:$PATH\"\nRUN echo \"$CAFFE_ROOT/build/lib\" >> /etc/ld.so.conf.d/caffe.conf \\\n && ldconfig\n#  Install Theano and set up Theano config (.theanorc) OpenBLAS\nRUN pip install git+git://github.com/Theano/Theano.git@${THEANO_VERSION} --no-cache-dir \\\n && echo \"[global]\\ndevice=cpu\\nfloatX=float32\\nmode=FAST_RUN \\n[lib]\\ncnmem=0.95 \\n[nvcc]\\nfastmath=True \\n[blas]\\nldflag = -L/usr/lib/openblas-base -lopenblas \\n[DebugMode]\\ncheck_finite=1\" > /root/.theanorc\n#  Install Keras\nRUN pip install git+git://github.com/fchollet/keras.git@${KERAS_VERSION} --no-cache-dir\n#  Install Lasagne\nRUN pip install git+git://github.com/Lasagne/Lasagne.git@${LASAGNE_VERSION} --no-cache-dir\n#  Install Torch\nRUN git clone https://github.com/torch/distro.git /root/torch --recursive \\\n && cd /root/torch \\\n && bash install-deps \\\n && yes no | ./install.sh\n#  Export the LUA evironment variables manually\nENV LUA_PATH=\"/root/.luarocks/share/lua/5.1/?.lua;/root/.luarocks/share/lua/5.1/?/init.lua;/root/torch/install/share/lua/5.1/?.lua;/root/torch/install/share/lua/5.1/?/init.lua;./?.lua;/root/torch/install/share/luajit-2.1.0-beta1/?.lua;/usr/local/share/lua/5.1/?.lua;/usr/local/share/lua/5.1/?/init.lua\" \\\n    LUA_CPATH=\"/root/.luarocks/lib/lua/5.1/?.so;/root/torch/install/lib/lua/5.1/?.so;./?.so;/usr/local/lib/lua/5.1/?.so;/usr/local/lib/lua/5.1/loadall.so\" \\\n    PATH=\"/root/torch/install/bin:$PATH\" \\\n    LD_LIBRARY_PATH=\"/root/torch/install/lib:$LD_LIBRARY_PATH\" \\\n    DYLD_LIBRARY_PATH=\"/root/torch/install/lib:$DYLD_LIBRARY_PATH\"\nENV LUA_CPATH=\"/root/torch/install/lib/?.so;$LUA_CPATH\"\n#  Install the latest versions of nn, and iTorch\nRUN luarocks install nn \\\n && luarocks install loadcaffe \\\n && cd /root \\\n && git clone https://github.com/facebook/iTorch.git \\\n && cd iTorch \\\n && luarocks make\n#  Install OpenCV\nRUN git clone --depth 1 https://github.com/opencv/opencv.git /root/opencv \\\n && cd /root/opencv \\\n && mkdir build \\\n && cd build \\\n && cmake -DWITH_QT=ON -DWITH_OPENGL=ON -DFORCE_VTK=ON -DWITH_TBB=ON -DWITH_GDAL=ON -DWITH_XINE=ON -DBUILD_EXAMPLES=ON .. \\\n && make -j\"$( nproc ;)\" \\\n && make install \\\n && ldconfig \\\n && echo 'ln /dev/null /dev/raw1394' >> ~/.bashrc\n#  Set up notebook config\nCOPY jupyter_notebook_config.py /root/.jupyter/\n#  Jupyter has issues with being run directly: https://github.com/ipython/ipython/issues/7062\nCOPY run_jupyter.sh /root/\n#  Expose Ports for TensorBoard (6006), Ipython (8888)\nEXPOSE 6006/tcp 8888/tcp\nWORKDIR \"/root\"\nCMD [\"/bin/bash\"]\n","injectedSmells":[],"originalDockerfileHash":"5e5c16233f0d4a44c53bfaec0f423c14","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:14.04\nMAINTAINER Sai Soundararaj <saip@outlook.com>\nARG THEANO_VERSION=rel-0.8.2\nARG TENSORFLOW_VERSION=0.12.1 \nARG TENSORFLOW_ARCH=cpu\nARG KERAS_VERSION=1.2.0\nARG LASAGNE_VERSION=v0.1\nARG TORCH_VERSION=latest\nARG CAFFE_VERSION=master\n#   Install some dependencies\nRUN apt-get update \\\n && apt-get install bc build-essential cmake curl g++ gfortran git libffi-dev libfreetype6-dev libhdf5-dev libjpeg-dev liblcms2-dev libopenblas-dev liblapack-dev libopenjpeg2 libpng12-dev libssl-dev libtiff5-dev libwebp-dev libzmq3-dev nano pkg-config python-dev software-properties-common unzip vim wget zlib1g-dev qt5-default libvtk6-dev zlib1g-dev libjpeg-dev libwebp-dev libpng-dev libtiff5-dev libjasper-dev libopenexr-dev libgdal-dev libdc1394-22-dev libavcodec-dev libavformat-dev libswscale-dev libtheora-dev libvorbis-dev libxvidcore-dev libx264-dev yasm libopencore-amrnb-dev libopencore-amrwb-dev libv4l-dev libxine2-dev libtbb-dev libeigen3-dev python-dev python-tk python-numpy python3-dev python3-tk python3-numpy ant default-jdk doxygen -y \\\n && apt-get clean \\\n && apt-get autoremove \\\n && rm -rf /var/lib/apt/lists/* \\\n && update-alternatives --set libblas.so.3 /usr/lib/openblas-base/libblas.so.3\n#   Install pip\nRUN curl -O https://bootstrap.pypa.io/get-pip.py \\\n && python get-pip.py \\\n && rm get-pip.py\n#   Add SNI support to Python\nRUN pip install pyopenssl ndg-httpsclient pyasn1 --no-cache-dir\n#   Install useful Python packages using apt-get to avoid version incompatibilities with Tensorflow binary\n#   especially numpy, scipy, skimage and sklearn (see https://github.com/tensorflow/tensorflow/issues/2034)\nRUN apt-get update \\\n && apt-get install python-numpy python-scipy python-nose python-h5py python-skimage python-matplotlib python-pandas python-sklearn python-sympy -y \\\n && apt-get clean \\\n && apt-get autoremove \\\n && rm -rf /var/lib/apt/lists/*\n#   Install other useful Python packages using pip\nRUN pip install ipython --no-cache-dir --upgrade \\\n && pip install Cython ipykernel jupyter path.py Pillow pygments six sphinx wheel zmq --no-cache-dir \\\n && python -m ipykernel.kernelspec\n#   Install TensorFlow\nRUN pip install https://storage.googleapis.com/tensorflow/linux/${TENSORFLOW_ARCH}/tensorflow-${TENSORFLOW_VERSION}-cp27-none-linux_x86_64.whl --no-cache-dir\n#   Install dependencies for Caffe\nRUN apt-get update \\\n && apt-get install libboost-all-dev libgflags-dev libgoogle-glog-dev libhdf5-serial-dev libleveldb-dev liblmdb-dev libopencv-dev libprotobuf-dev libsnappy-dev protobuf-compiler -y \\\n && apt-get clean \\\n && apt-get autoremove \\\n && rm -rf /var/lib/apt/lists/*\n#   Install Caffe\nRUN git clone -b ${CAFFE_VERSION} --depth 1 https://github.com/BVLC/caffe.git /root/caffe \\\n && cd /root/caffe \\\n && cat python/requirements.txt | xargs -n1 pip install \\\n && mkdir build \\\n && cd build \\\n && cmake -DCPU_ONLY=1 -DBLAS=Open .. \\\n && make -j\"$( nproc ;)\" all \\\n && make install\n#   Set up Caffe environment variables\nENV CAFFE_ROOT=\"/root/caffe\"\nENV PYCAFFE_ROOT=\"$CAFFE_ROOT/python\"\nENV PYTHONPATH=\"$PYCAFFE_ROOT:$PYTHONPATH\" \\\n    PATH=\"$CAFFE_ROOT/build/tools:$PYCAFFE_ROOT:$PATH\"\nRUN echo \"$CAFFE_ROOT/build/lib\" >> /etc/ld.so.conf.d/caffe.conf \\\n && ldconfig\n#   Install Theano and set up Theano config (.theanorc) OpenBLAS\nRUN pip install git+git://github.com/Theano/Theano.git@${THEANO_VERSION} --no-cache-dir \\\n && echo \"[global]\\ndevice=cpu\\nfloatX=float32\\nmode=FAST_RUN \\n[lib]\\ncnmem=0.95 \\n[nvcc]\\nfastmath=True \\n[blas]\\nldflag = -L/usr/lib/openblas-base -lopenblas \\n[DebugMode]\\ncheck_finite=1\" > /root/.theanorc\n#   Install Keras\nRUN pip install git+git://github.com/fchollet/keras.git@${KERAS_VERSION} --no-cache-dir\n#   Install Lasagne\nRUN pip install git+git://github.com/Lasagne/Lasagne.git@${LASAGNE_VERSION} --no-cache-dir\n#   Install Torch\nRUN git clone https://github.com/torch/distro.git /root/torch --recursive \\\n && cd /root/torch \\\n && bash install-deps \\\n && yes no | ./install.sh\n#   Export the LUA evironment variables manually\nENV LUA_PATH=\"/root/.luarocks/share/lua/5.1/?.lua;/root/.luarocks/share/lua/5.1/?/init.lua;/root/torch/install/share/lua/5.1/?.lua;/root/torch/install/share/lua/5.1/?/init.lua;./?.lua;/root/torch/install/share/luajit-2.1.0-beta1/?.lua;/usr/local/share/lua/5.1/?.lua;/usr/local/share/lua/5.1/?/init.lua\" \\\n    LUA_CPATH=\"/root/.luarocks/lib/lua/5.1/?.so;/root/torch/install/lib/lua/5.1/?.so;./?.so;/usr/local/lib/lua/5.1/?.so;/usr/local/lib/lua/5.1/loadall.so\" \\\n    PATH=\"/root/torch/install/bin:$PATH\" \\\n    LD_LIBRARY_PATH=\"/root/torch/install/lib:$LD_LIBRARY_PATH\" \\\n    DYLD_LIBRARY_PATH=\"/root/torch/install/lib:$DYLD_LIBRARY_PATH\"\nENV LUA_CPATH=\"/root/torch/install/lib/?.so;$LUA_CPATH\"\n#   Install the latest versions of nn, and iTorch\nRUN luarocks install nn \\\n && luarocks install loadcaffe \\\n && cd /root \\\n && git clone https://github.com/facebook/iTorch.git \\\n && cd iTorch \\\n && luarocks make\n#   Install OpenCV\nRUN git clone --depth 1 https://github.com/opencv/opencv.git /root/opencv \\\n && cd /root/opencv \\\n && mkdir build \\\n && cd build \\\n && cmake -DWITH_QT=ON -DWITH_OPENGL=ON -DFORCE_VTK=ON -DWITH_TBB=ON -DWITH_GDAL=ON -DWITH_XINE=ON -DBUILD_EXAMPLES=ON .. \\\n && make -j\"$( nproc ;)\" \\\n && make install \\\n && ldconfig \\\n && echo 'ln /dev/null /dev/raw1394' >> ~/.bashrc\n#   Set up notebook config\nCOPY jupyter_notebook_config.py /root/.jupyter/\n#   Jupyter has issues with being run directly: https://github.com/ipython/ipython/issues/7062\nCOPY run_jupyter.sh /root/\n#   Expose Ports for TensorBoard (6006), Ipython (8888)\nEXPOSE 6006/tcp 8888/tcp\nWORKDIR \"/root\"\nCMD [\"/bin/bash\"]\n","originalDockerfileUglifiedHash":"e95b7b66fc9d79d80a629656f49d730c","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/506b73403fd7eeb456277f2b67e3409c01e39ee0.dockerfile"}