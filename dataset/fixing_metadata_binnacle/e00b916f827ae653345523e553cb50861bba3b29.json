{"seed":4081299205,"processedDockerfileHash":"6956d279517d8e12466854dcae8570e4","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["do-not-use-apt-get-update-alone","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM debian:jessie\nEXPOSE 80/tcp\nMAINTAINER \"Reflexions\" <docker-laravel@reflexions.co>\nENV SHELL=\"/bin/bash\" \\\n    LANG=\"en_US.utf8\"\n#   because I use ll all the time\nCOPY ./home/.bashrc ./home/.inputrc /root/\n#   ffmpeg not in debian:jessie\nRUN echo deb http://www.deb-multimedia.org jessie main non-free >> /etc/apt/sources.list \\\n && : \\\n && DEBIAN_FRONTEND=noninteractive apt-get install deb-multimedia-keyring --force-yes --assume-yes \\\n && apt-get -y upgrade\n#   openssl is a dependency of apache2, but just to be clear, we list it separately\n#   we use https urls for yarn, so we need apt-transport-https\n#   composer runs faster if unzip is available\nRUN : \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y apache2 apt-transport-https curl git-core locales openssl unzip vim-tiny\n#   Configure locales\nRUN echo \"America/New_York\" > /etc/timezone \\\n && dpkg-reconfigure -f noninteractive tzdata \\\n && echo \"configuring ${LANGUAGE}\" \\\n && locale-gen ${LANGUAGE} \\\n && DEBIAN_FRONTEND=noninteractive dpkg-reconfigure locales\n#   jessie has an old version of node (0.10.29). get version 6 (LTS) instead\nRUN curl -sL https://deb.nodesource.com/setup_6.x | bash -\n#   laravel uses yarn, so let's get it\nCOPY ./yarn/yarn.list /etc/apt/sources.list.d/yarn.list\nCOPY ./yarn/pubkey.gpg /tmp/yarn-pubkey.gpg\n#   from https://dl.yarnpkg.com/debian/pubkey.gpg\n#   they rotate it from time to time\nRUN apt-key add /tmp/yarn-pubkey.gpg\n#   Copy GTE CyberTrust Global Root certificate\n#   Needed for mailchimp because of https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=812708\nCOPY ./certs/gte_cybertrust_global_root.crt /etc/ssl/certs/gte_cybertrust_global_root.crt\nRUN c_rehash /etc/ssl/certs\nRUN : \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y ffmpeg imagemagick libapache2-mod-php5 php-pear php5 php5-cli php5-curl php5-dev php5-gd php5-imagick php5-mcrypt php5-mysql php5-pgsql php5-redis php5-sqlite yarn \\\n && a2enmod php5 \\\n && a2enmod rewrite\n#   Configure php\n#   install composer\nRUN curl -sS https://getcomposer.org/installer | php \\\n && mv composer.phar /usr/local/bin/composer\n#   set timezone to Eastern\nRUN sed -i 's/\\;date\\.timezone\\ \\=/date\\.timezone\\ \\=\\ America\\/New_York/g' /etc/php5/cli/php.ini \\\n && sed -i 's/\\;date\\.timezone\\ \\=/date\\.timezone\\ \\=\\ America\\/New_York/g' /etc/php5/apache2/php.ini\n#   turn off persistent connections\nRUN sed -i 's/mysql.allow_persistent = On/mysql.allow_persistent = Off/g' /etc/php5/cli/php.ini \\\n && sed -i 's/mysql.allow_persistent = On/mysql.allow_persistent = Off/g' /etc/php5/apache2/php.ini \\\n && sed -i 's/pgsql.allow_persistent = On/pgsql.allow_persistent = Off/g' /etc/php5/cli/php.ini \\\n && sed -i 's/pgsql.allow_persistent = On/pgsql.allow_persistent = Off/g' /etc/php5/apache2/php.ini\n#   increase memory limit. cli gets more than apache.\nRUN sed -i 's/memory_limit = 128M/memory_limit = 1G/g' /etc/php5/cli/php.ini \\\n && sed -i 's/memory_limit = 128M/memory_limit = 256M/g' /etc/php5/apache2/php.ini\n#   allow bigger uploads\nRUN sed -i 's/upload_max_filesize = 2M/upload_max_filesize = 200M/g' /etc/php5/apache2/php.ini \\\n && sed -i 's/post_max_size = 8M/post_max_size = 200M/g' /etc/php5/apache2/php.ini\n#   safer sessions\nRUN sed -i 's/session.use_strict_mode = 0/session.use_strict_mode = 1/g' /etc/php5/apache2/php.ini \\\n && sed -i 's/session.cookie_httponly =/session.cookie_httponly = 1/g' /etc/php5/apache2/php.ini \\\n && sed -i 's/session.hash_function = 0/session.hash_function = 1/g' /etc/php5/apache2/php.ini \\\n && sed -i 's/session.hash_bits_per_character = 5/session.hash_bits_per_character = 6/g' /etc/php5/apache2/php.ini\n#   we're not running cron, so we have to gc sessions after requests\nRUN sed -i 's/session.gc_probability = 0/session.gc_probability = 1/g' /etc/php5/apache2/php.ini\n#   enable opcache\nRUN sed -i 's/;opcache.enable=0/opcache.enable=1/g' /etc/php5/apache2/php.ini\n#   configure apache\n#   To override this, copy your own vhost file over /etc/apache2/sites-available/001-application.conf\nCOPY etc/apache2/sites-available/001-application.conf /etc/apache2/sites-available/001-application.conf\nRUN ln -s /etc/apache2/sites-available/001-application.conf /etc/apache2/sites-enabled/\nRUN unlink /etc/apache2/sites-enabled/000-default.conf\nCOPY bin/setup.sh bin/start.sh bin/new-project.sh /usr/share/docker-laravel/bin/\n#   start and setup scripts\nENTRYPOINT [\"/usr/share/docker-laravel/bin/start.sh\"]\n#   Default ENV\n#   ------------------\nENV LARAVEL_WWW_PATH=\"/var/www/laravel\" \\\n    LARAVEL_RUN_PATH=\"/var/run/laravel\" \\\n    LARAVEL_STORAGE_PATH=\"/var/run/laravel/storage\" \\\n    LARAVEL_BOOTSTRAP_CACHE_PATH=\"/var/run/laravel/bootstrap/cache\"\nWORKDIR /var/www/laravel\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM debian:jessie\nEXPOSE 80/tcp\nMAINTAINER \"Reflexions\" <docker-laravel@reflexions.co>\nENV SHELL=\"/bin/bash\" \\\n    LANG=\"en_US.utf8\"\n#  because I use ll all the time\nCOPY ./home/.bashrc ./home/.inputrc /root/\n#  ffmpeg not in debian:jessie\nRUN echo deb http://www.deb-multimedia.org jessie main non-free >> /etc/apt/sources.list \\\n && apt-get update \\\n && DEBIAN_FRONTEND=noninteractive apt-get install deb-multimedia-keyring --force-yes --assume-yes \\\n && apt-get -y upgrade\n#  openssl is a dependency of apache2, but just to be clear, we list it separately\n#  we use https urls for yarn, so we need apt-transport-https\n#  composer runs faster if unzip is available\nRUN apt-get update \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y apache2 apt-transport-https curl git-core locales openssl unzip vim-tiny\n#  Configure locales\nRUN echo \"America/New_York\" > /etc/timezone \\\n && dpkg-reconfigure -f noninteractive tzdata \\\n && echo \"configuring ${LANGUAGE}\" \\\n && locale-gen ${LANGUAGE} \\\n && DEBIAN_FRONTEND=noninteractive dpkg-reconfigure locales\n#  jessie has an old version of node (0.10.29). get version 6 (LTS) instead\nRUN curl -sL https://deb.nodesource.com/setup_6.x | bash -\n#  laravel uses yarn, so let's get it\nCOPY ./yarn/yarn.list /etc/apt/sources.list.d/yarn.list\nCOPY ./yarn/pubkey.gpg /tmp/yarn-pubkey.gpg\n#  from https://dl.yarnpkg.com/debian/pubkey.gpg\n#  they rotate it from time to time\nRUN apt-key add /tmp/yarn-pubkey.gpg\n#  Copy GTE CyberTrust Global Root certificate\n#  Needed for mailchimp because of https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=812708\nCOPY ./certs/gte_cybertrust_global_root.crt /etc/ssl/certs/gte_cybertrust_global_root.crt\nRUN c_rehash /etc/ssl/certs\nRUN apt-get update \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y ffmpeg imagemagick libapache2-mod-php5 php-pear php5 php5-cli php5-curl php5-dev php5-gd php5-imagick php5-mcrypt php5-mysql php5-pgsql php5-redis php5-sqlite yarn \\\n && a2enmod php5 \\\n && a2enmod rewrite\n#  Configure php\n#  install composer\nRUN curl -sS https://getcomposer.org/installer | php \\\n && mv composer.phar /usr/local/bin/composer\n#  set timezone to Eastern\nRUN sed -i 's/\\;date\\.timezone\\ \\=/date\\.timezone\\ \\=\\ America\\/New_York/g' /etc/php5/cli/php.ini \\\n && sed -i 's/\\;date\\.timezone\\ \\=/date\\.timezone\\ \\=\\ America\\/New_York/g' /etc/php5/apache2/php.ini\n#  turn off persistent connections\nRUN sed -i 's/mysql.allow_persistent = On/mysql.allow_persistent = Off/g' /etc/php5/cli/php.ini \\\n && sed -i 's/mysql.allow_persistent = On/mysql.allow_persistent = Off/g' /etc/php5/apache2/php.ini \\\n && sed -i 's/pgsql.allow_persistent = On/pgsql.allow_persistent = Off/g' /etc/php5/cli/php.ini \\\n && sed -i 's/pgsql.allow_persistent = On/pgsql.allow_persistent = Off/g' /etc/php5/apache2/php.ini\n#  increase memory limit. cli gets more than apache.\nRUN sed -i 's/memory_limit = 128M/memory_limit = 1G/g' /etc/php5/cli/php.ini \\\n && sed -i 's/memory_limit = 128M/memory_limit = 256M/g' /etc/php5/apache2/php.ini\n#  allow bigger uploads\nRUN sed -i 's/upload_max_filesize = 2M/upload_max_filesize = 200M/g' /etc/php5/apache2/php.ini \\\n && sed -i 's/post_max_size = 8M/post_max_size = 200M/g' /etc/php5/apache2/php.ini\n#  safer sessions\nRUN sed -i 's/session.use_strict_mode = 0/session.use_strict_mode = 1/g' /etc/php5/apache2/php.ini \\\n && sed -i 's/session.cookie_httponly =/session.cookie_httponly = 1/g' /etc/php5/apache2/php.ini \\\n && sed -i 's/session.hash_function = 0/session.hash_function = 1/g' /etc/php5/apache2/php.ini \\\n && sed -i 's/session.hash_bits_per_character = 5/session.hash_bits_per_character = 6/g' /etc/php5/apache2/php.ini\n#  we're not running cron, so we have to gc sessions after requests\nRUN sed -i 's/session.gc_probability = 0/session.gc_probability = 1/g' /etc/php5/apache2/php.ini\n#  enable opcache\nRUN sed -i 's/;opcache.enable=0/opcache.enable=1/g' /etc/php5/apache2/php.ini\n#  configure apache\n#  To override this, copy your own vhost file over /etc/apache2/sites-available/001-application.conf\nCOPY etc/apache2/sites-available/001-application.conf /etc/apache2/sites-available/001-application.conf\nRUN ln -s /etc/apache2/sites-available/001-application.conf /etc/apache2/sites-enabled/\nRUN unlink /etc/apache2/sites-enabled/000-default.conf\nCOPY bin/setup.sh bin/start.sh bin/new-project.sh /usr/share/docker-laravel/bin/\n#  start and setup scripts\nENTRYPOINT [\"/usr/share/docker-laravel/bin/start.sh\"]\n#  Default ENV\n#  ------------------\nENV LARAVEL_WWW_PATH=\"/var/www/laravel\" \\\n    LARAVEL_RUN_PATH=\"/var/run/laravel\" \\\n    LARAVEL_STORAGE_PATH=\"/var/run/laravel/storage\" \\\n    LARAVEL_BOOTSTRAP_CACHE_PATH=\"/var/run/laravel/bootstrap/cache\"\nWORKDIR /var/www/laravel\n","injectedSmells":[],"originalDockerfileHash":"1bdb8c7e3f95191ed6080dd3f343af05","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM debian:jessie\nEXPOSE 80/tcp\nMAINTAINER \"Reflexions\" <docker-laravel@reflexions.co>\nENV SHELL=\"/bin/bash\" \\\n    LANG=\"en_US.utf8\"\n#   because I use ll all the time\nCOPY ./home/.bashrc ./home/.inputrc /root/\n#   ffmpeg not in debian:jessie\nRUN echo deb http://www.deb-multimedia.org jessie main non-free >> /etc/apt/sources.list \\\n && apt-get update \\\n && DEBIAN_FRONTEND=noninteractive apt-get install deb-multimedia-keyring --force-yes --assume-yes \\\n && apt-get -y upgrade\n#   openssl is a dependency of apache2, but just to be clear, we list it separately\n#   we use https urls for yarn, so we need apt-transport-https\n#   composer runs faster if unzip is available\nRUN apt-get update \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y apache2 apt-transport-https curl git-core locales openssl unzip vim-tiny\n#   Configure locales\nRUN echo \"America/New_York\" > /etc/timezone \\\n && dpkg-reconfigure -f noninteractive tzdata \\\n && echo \"configuring ${LANGUAGE}\" \\\n && locale-gen ${LANGUAGE} \\\n && DEBIAN_FRONTEND=noninteractive dpkg-reconfigure locales\n#   jessie has an old version of node (0.10.29). get version 6 (LTS) instead\nRUN curl -sL https://deb.nodesource.com/setup_6.x | bash -\n#   laravel uses yarn, so let's get it\nCOPY ./yarn/yarn.list /etc/apt/sources.list.d/yarn.list\nCOPY ./yarn/pubkey.gpg /tmp/yarn-pubkey.gpg\n#   from https://dl.yarnpkg.com/debian/pubkey.gpg\n#   they rotate it from time to time\nRUN apt-key add /tmp/yarn-pubkey.gpg\n#   Copy GTE CyberTrust Global Root certificate\n#   Needed for mailchimp because of https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=812708\nCOPY ./certs/gte_cybertrust_global_root.crt /etc/ssl/certs/gte_cybertrust_global_root.crt\nRUN c_rehash /etc/ssl/certs\nRUN apt-get update \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y ffmpeg imagemagick libapache2-mod-php5 php-pear php5 php5-cli php5-curl php5-dev php5-gd php5-imagick php5-mcrypt php5-mysql php5-pgsql php5-redis php5-sqlite yarn \\\n && a2enmod php5 \\\n && a2enmod rewrite\n#   Configure php\n#   install composer\nRUN curl -sS https://getcomposer.org/installer | php \\\n && mv composer.phar /usr/local/bin/composer\n#   set timezone to Eastern\nRUN sed -i 's/\\;date\\.timezone\\ \\=/date\\.timezone\\ \\=\\ America\\/New_York/g' /etc/php5/cli/php.ini \\\n && sed -i 's/\\;date\\.timezone\\ \\=/date\\.timezone\\ \\=\\ America\\/New_York/g' /etc/php5/apache2/php.ini\n#   turn off persistent connections\nRUN sed -i 's/mysql.allow_persistent = On/mysql.allow_persistent = Off/g' /etc/php5/cli/php.ini \\\n && sed -i 's/mysql.allow_persistent = On/mysql.allow_persistent = Off/g' /etc/php5/apache2/php.ini \\\n && sed -i 's/pgsql.allow_persistent = On/pgsql.allow_persistent = Off/g' /etc/php5/cli/php.ini \\\n && sed -i 's/pgsql.allow_persistent = On/pgsql.allow_persistent = Off/g' /etc/php5/apache2/php.ini\n#   increase memory limit. cli gets more than apache.\nRUN sed -i 's/memory_limit = 128M/memory_limit = 1G/g' /etc/php5/cli/php.ini \\\n && sed -i 's/memory_limit = 128M/memory_limit = 256M/g' /etc/php5/apache2/php.ini\n#   allow bigger uploads\nRUN sed -i 's/upload_max_filesize = 2M/upload_max_filesize = 200M/g' /etc/php5/apache2/php.ini \\\n && sed -i 's/post_max_size = 8M/post_max_size = 200M/g' /etc/php5/apache2/php.ini\n#   safer sessions\nRUN sed -i 's/session.use_strict_mode = 0/session.use_strict_mode = 1/g' /etc/php5/apache2/php.ini \\\n && sed -i 's/session.cookie_httponly =/session.cookie_httponly = 1/g' /etc/php5/apache2/php.ini \\\n && sed -i 's/session.hash_function = 0/session.hash_function = 1/g' /etc/php5/apache2/php.ini \\\n && sed -i 's/session.hash_bits_per_character = 5/session.hash_bits_per_character = 6/g' /etc/php5/apache2/php.ini\n#   we're not running cron, so we have to gc sessions after requests\nRUN sed -i 's/session.gc_probability = 0/session.gc_probability = 1/g' /etc/php5/apache2/php.ini\n#   enable opcache\nRUN sed -i 's/;opcache.enable=0/opcache.enable=1/g' /etc/php5/apache2/php.ini\n#   configure apache\n#   To override this, copy your own vhost file over /etc/apache2/sites-available/001-application.conf\nCOPY etc/apache2/sites-available/001-application.conf /etc/apache2/sites-available/001-application.conf\nRUN ln -s /etc/apache2/sites-available/001-application.conf /etc/apache2/sites-enabled/\nRUN unlink /etc/apache2/sites-enabled/000-default.conf\nCOPY bin/setup.sh bin/start.sh bin/new-project.sh /usr/share/docker-laravel/bin/\n#   start and setup scripts\nENTRYPOINT [\"/usr/share/docker-laravel/bin/start.sh\"]\n#   Default ENV\n#   ------------------\nENV LARAVEL_WWW_PATH=\"/var/www/laravel\" \\\n    LARAVEL_RUN_PATH=\"/var/run/laravel\" \\\n    LARAVEL_STORAGE_PATH=\"/var/run/laravel/storage\" \\\n    LARAVEL_BOOTSTRAP_CACHE_PATH=\"/var/run/laravel/bootstrap/cache\"\nWORKDIR /var/www/laravel\n","originalDockerfileUglifiedHash":"bb28ae2099ab9da4cf4b7af08d0c2787","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/e00b916f827ae653345523e553cb50861bba3b29.dockerfile"}