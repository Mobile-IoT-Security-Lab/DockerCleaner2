{"seed":3350754249,"processedDockerfileHash":"be2e40bcfdc9c93524ad5eeefc7b9d2a","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-pip","pin-package-manager-versions-apk","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM %%DOCKER_NAMESPACE%%/%%DOCKER_PREFIX%%alpine:%%DOCKER_TAG%%\nRUN set -e \\\n && set -x \\\n && apk add nginx --no-cache --virtual run-deps \\\n && apk add docker --no-cache --virtual build-deps\nENV DOCKER_HOST=\"172.17.0.1:2375\"\nENV CLOUD_PLATFORM=\"gce\" \\\n    IMAGE_NAME=\"%%DOCKER_NAMESPACE%%/%%DOCKER_PREFIX%%mandracchio-image-gce:%%DOCKER_TAG%%\"\nRUN set -e \\\n && set -x \\\n && apk add python py-pip py-cffi py-cryptography --no-cache --virtual gce-deps \\\n && python -m ensurepip \\\n && pip install pip==23.1 setuptools==67.6.1 --no-cache-dir --upgrade \\\n && apk add gcc libffi-dev python-dev linux-headers musl-dev openssl-dev wget --no-cache --virtual gce-build-deps \\\n && pip install gsutil==5.23 --no-cache-dir \\\n && cd /opt \\\n && wget https://dl.google.com/dl/cloudsdk/channels/rapid/google-cloud-sdk.zip \\\n && unzip google-cloud-sdk.zip \\\n && rm google-cloud-sdk.zip \\\n && google-cloud-sdk/install.sh --usage-reporting=true --path-update=true --rc-path=/root/.bashrc \\\n && apk del gce-build-deps\nRUN set -e \\\n && set -x \\\n && (docker rm -f mandracchio-build-repo || true ) \\\n && docker run -d -p 172.17.0.1:8012:80/tcp --name mandracchio-build-repo %%DOCKER_NAMESPACE%%/%%DOCKER_PREFIX%%mandracchio-repo:%%DOCKER_TAG%% \\\n && (docker rm -f mandracchio-build-installer || true ) \\\n && docker run -d -p 172.17.0.1:8013:80/tcp --name mandracchio-build-installer %%DOCKER_NAMESPACE%%/%%DOCKER_PREFIX%%mandracchio-installer:%%DOCKER_TAG%% \\\n && (docker rm -f mandracchio-image-installer-setup || true ) \\\n && docker run --name=mandracchio-image-installer-setup --net=host --privileged --pid=host -v /dev:/dev:rw -v /tmp:/tmp:rw -v /srv:/srv:rw -v /var/run:/var/run:rw -v /var/lib/oz:/var/lib/oz:rw -v /var/lib/imagefactory:/var/lib/imagefactory:rw %%DOCKER_NAMESPACE%%/%%DOCKER_PREFIX%%mandracchio-images-assets:%%DOCKER_TAG%% /setup.sh\nCOPY ./assets /opt/harbor/assets\nRUN set -e \\\n && set -x \\\n && (docker rm -f mandracchio-image-${CLOUD_PLATFORM}-build || true ) \\\n && docker run --name=mandracchio-image-${CLOUD_PLATFORM}-build --net=host --privileged --pid=host -v /dev:/dev:rw -v /tmp:/tmp:rw -v /srv:/srv:rw -v /var/run:/var/run:rw -v /var/lib/oz:/var/lib/oz:rw -v /var/lib/imagefactory:/var/lib/imagefactory:rw %%DOCKER_NAMESPACE%%/%%DOCKER_PREFIX%%mandracchio-images-assets:%%DOCKER_TAG%% /${CLOUD_PLATFORM}.sh\nRUN set -e \\\n && set -x \\\n && /bin/cp -rf /opt/harbor/assets/* / \\\n && mkdir -p /srv/images \\\n && docker cp mandracchio-image-${CLOUD_PLATFORM}-build:/srv/images/${CLOUD_PLATFORM} /srv/images\nLABEL license=\"Apache-2.0\" \\\n      vendor=\"Port Direct\" \\\n      url=\"https://port.direct/\" \\\n      vcs-type=\"Git\" \\\n      vcs-url=\"https://github.com/portdirect/harbor\" \\\n      name=\"%%DOCKER_FULLIMAGE%%\" \\\n      vcs-ref=\"%%DOCKER_TAG%%\" \\\n      build-date=\"%%DOCKER_BUILD_DATE%%\"\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM %%DOCKER_NAMESPACE%%/%%DOCKER_PREFIX%%alpine:%%DOCKER_TAG%%\nRUN set -e \\\n && set -x \\\n && apk add --no-cache --virtual run-deps nginx \\\n && apk add --no-cache --virtual build-deps docker\nENV DOCKER_HOST=\"172.17.0.1:2375\"\nENV CLOUD_PLATFORM=\"gce\" \\\n    IMAGE_NAME=\"%%DOCKER_NAMESPACE%%/%%DOCKER_PREFIX%%mandracchio-image-gce:%%DOCKER_TAG%%\"\nRUN set -e \\\n && set -x \\\n && apk add --no-cache --virtual gce-deps python py-pip py-cffi py-cryptography \\\n && python -m ensurepip \\\n && pip install pip setuptools --no-cache-dir --upgrade \\\n && apk add --no-cache --virtual gce-build-deps gcc libffi-dev python-dev linux-headers musl-dev openssl-dev wget \\\n && pip install gsutil --no-cache-dir \\\n && cd /opt \\\n && wget https://dl.google.com/dl/cloudsdk/channels/rapid/google-cloud-sdk.zip \\\n && unzip google-cloud-sdk.zip \\\n && rm google-cloud-sdk.zip \\\n && google-cloud-sdk/install.sh --usage-reporting=true --path-update=true --rc-path=/root/.bashrc \\\n && apk del gce-build-deps\nRUN set -e \\\n && set -x \\\n && (docker rm -f mandracchio-build-repo || true ) \\\n && docker run -d -p 172.17.0.1:8012:80/tcp --name mandracchio-build-repo %%DOCKER_NAMESPACE%%/%%DOCKER_PREFIX%%mandracchio-repo:%%DOCKER_TAG%% \\\n && (docker rm -f mandracchio-build-installer || true ) \\\n && docker run -d -p 172.17.0.1:8013:80/tcp --name mandracchio-build-installer %%DOCKER_NAMESPACE%%/%%DOCKER_PREFIX%%mandracchio-installer:%%DOCKER_TAG%% \\\n && (docker rm -f mandracchio-image-installer-setup || true ) \\\n && docker run --name=mandracchio-image-installer-setup --net=host --privileged --pid=host -v /dev:/dev:rw -v /tmp:/tmp:rw -v /srv:/srv:rw -v /var/run:/var/run:rw -v /var/lib/oz:/var/lib/oz:rw -v /var/lib/imagefactory:/var/lib/imagefactory:rw %%DOCKER_NAMESPACE%%/%%DOCKER_PREFIX%%mandracchio-images-assets:%%DOCKER_TAG%% /setup.sh\nADD ./assets /opt/harbor/assets\nRUN set -e \\\n && set -x \\\n && (docker rm -f mandracchio-image-${CLOUD_PLATFORM}-build || true ) \\\n && docker run --name=mandracchio-image-${CLOUD_PLATFORM}-build --net=host --privileged --pid=host -v /dev:/dev:rw -v /tmp:/tmp:rw -v /srv:/srv:rw -v /var/run:/var/run:rw -v /var/lib/oz:/var/lib/oz:rw -v /var/lib/imagefactory:/var/lib/imagefactory:rw %%DOCKER_NAMESPACE%%/%%DOCKER_PREFIX%%mandracchio-images-assets:%%DOCKER_TAG%% /${CLOUD_PLATFORM}.sh\nRUN set -e \\\n && set -x \\\n && /bin/cp -rf /opt/harbor/assets/* / \\\n && mkdir -p /srv/images \\\n && docker cp mandracchio-image-${CLOUD_PLATFORM}-build:/srv/images/${CLOUD_PLATFORM} /srv/images\nLABEL license=\"Apache-2.0\" \\\n      vendor=\"Port Direct\" \\\n      url=\"https://port.direct/\" \\\n      vcs-type=\"Git\" \\\n      vcs-url=\"https://github.com/portdirect/harbor\" \\\n      name=\"%%DOCKER_FULLIMAGE%%\" \\\n      vcs-ref=\"%%DOCKER_TAG%%\" \\\n      build-date=\"%%DOCKER_BUILD_DATE%%\"\n","injectedSmells":[],"originalDockerfileHash":"ca6a736fcfc5794677c57396c7b873c9","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM %%DOCKER_NAMESPACE%%/%%DOCKER_PREFIX%%alpine:%%DOCKER_TAG%%\nRUN set -e \\\n && set -x \\\n && apk add --no-cache --virtual run-deps nginx \\\n && apk add --no-cache --virtual build-deps docker\nENV DOCKER_HOST=\"172.17.0.1:2375\"\nENV CLOUD_PLATFORM=\"gce\" \\\n    IMAGE_NAME=\"%%DOCKER_NAMESPACE%%/%%DOCKER_PREFIX%%mandracchio-image-gce:%%DOCKER_TAG%%\"\nRUN set -e \\\n && set -x \\\n && apk add --no-cache --virtual gce-deps python py-pip py-cffi py-cryptography \\\n && python -m ensurepip \\\n && pip install pip setuptools --no-cache-dir --upgrade \\\n && apk add --no-cache --virtual gce-build-deps gcc libffi-dev python-dev linux-headers musl-dev openssl-dev wget \\\n && pip install gsutil --no-cache-dir \\\n && cd /opt \\\n && wget https://dl.google.com/dl/cloudsdk/channels/rapid/google-cloud-sdk.zip \\\n && unzip google-cloud-sdk.zip \\\n && rm google-cloud-sdk.zip \\\n && google-cloud-sdk/install.sh --usage-reporting=true --path-update=true --rc-path=/root/.bashrc \\\n && apk del gce-build-deps\nRUN set -e \\\n && set -x \\\n && (docker rm -f mandracchio-build-repo || true ) \\\n && docker run -d -p 172.17.0.1:8012:80/tcp --name mandracchio-build-repo %%DOCKER_NAMESPACE%%/%%DOCKER_PREFIX%%mandracchio-repo:%%DOCKER_TAG%% \\\n && (docker rm -f mandracchio-build-installer || true ) \\\n && docker run -d -p 172.17.0.1:8013:80/tcp --name mandracchio-build-installer %%DOCKER_NAMESPACE%%/%%DOCKER_PREFIX%%mandracchio-installer:%%DOCKER_TAG%% \\\n && (docker rm -f mandracchio-image-installer-setup || true ) \\\n && docker run --name=mandracchio-image-installer-setup --net=host --privileged --pid=host -v /dev:/dev:rw -v /tmp:/tmp:rw -v /srv:/srv:rw -v /var/run:/var/run:rw -v /var/lib/oz:/var/lib/oz:rw -v /var/lib/imagefactory:/var/lib/imagefactory:rw %%DOCKER_NAMESPACE%%/%%DOCKER_PREFIX%%mandracchio-images-assets:%%DOCKER_TAG%% /setup.sh\nADD ./assets /opt/harbor/assets\nRUN set -e \\\n && set -x \\\n && (docker rm -f mandracchio-image-${CLOUD_PLATFORM}-build || true ) \\\n && docker run --name=mandracchio-image-${CLOUD_PLATFORM}-build --net=host --privileged --pid=host -v /dev:/dev:rw -v /tmp:/tmp:rw -v /srv:/srv:rw -v /var/run:/var/run:rw -v /var/lib/oz:/var/lib/oz:rw -v /var/lib/imagefactory:/var/lib/imagefactory:rw %%DOCKER_NAMESPACE%%/%%DOCKER_PREFIX%%mandracchio-images-assets:%%DOCKER_TAG%% /${CLOUD_PLATFORM}.sh\nRUN set -e \\\n && set -x \\\n && /bin/cp -rf /opt/harbor/assets/* / \\\n && mkdir -p /srv/images \\\n && docker cp mandracchio-image-${CLOUD_PLATFORM}-build:/srv/images/${CLOUD_PLATFORM} /srv/images\nLABEL license=\"Apache-2.0\" \\\n      vendor=\"Port Direct\" \\\n      url=\"https://port.direct/\" \\\n      vcs-type=\"Git\" \\\n      vcs-url=\"https://github.com/portdirect/harbor\" \\\n      name=\"%%DOCKER_FULLIMAGE%%\" \\\n      vcs-ref=\"%%DOCKER_TAG%%\" \\\n      build-date=\"%%DOCKER_BUILD_DATE%%\"\n","originalDockerfileUglifiedHash":"ca6a736fcfc5794677c57396c7b873c9","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/43d10cf2d5abd029d648c7982921ce5baaab0f09.dockerfile"}