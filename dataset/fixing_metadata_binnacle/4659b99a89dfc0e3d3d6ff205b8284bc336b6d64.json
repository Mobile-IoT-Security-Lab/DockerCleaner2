{"seed":2793184987,"processedDockerfileHash":"41930746b6913575f97cbecf991e72d6","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["do-not-have-secrets"],"processedDockerfile":"#   ------------------------------------------------------------------------------\n#   Dockerfile to build basic Oracle REST Data Services (ORDS) images\n#   Based on the following:\n#     - Oracle Linux 7 - Slim\n#     - Java 8 :\n#         http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html\n#     - Tomcat 8.5.x :\n#         https://tomcat.apache.org/download-80.cgi\n#     - Oracle REST Data Services (ORDS) 18.x :\n#         http://www.oracle.com/technetwork/developer-tools/rest-data-services/downloads/index.html\n#     - Oracle Application Express (APEX) 18.x :\n#         http://www.oracle.com/technetwork/developer-tools/apex/downloads/index.html\n#     - Oracle SQLcl 18.x :\n#         http://www.oracle.com/technetwork/developer-tools/sqlcl/downloads/index.html\n#\n#   Example build and run. Assumes Docker network called \"my_network\" to connect to DB.\n#\n#   docker build -t ol7_t8_j8_ords18:latest .\n#   docker build --squash -t ol7_t8_j8_ords18:latest .\n#\n#   docker run -dit --name ol7_t8_j8_ords18_con -p 8080:8080 -p 8443:8443 --network=my_network -e DB_HOSTNAME=ol7_122_con ol7_t8_j8_ords18:latest\n#\n#   docker logs --follow ol7_t8_j8_ords18_con\n#   docker exec -it ol7_t8_j8_ords18_con bash\n#\n#   docker stop --time=30 ol7_t8_j8_ords18_con\n#   docker start ol7_t8_j8_ords18_con\n#\n#   docker rm -vf ol7_t8_j8_ords18_con\n#\n#   ------------------------------------------------------------------------------\n#   Set the base image to Oracle Linux 7 - Slim\nFROM oraclelinux:7-slim\n#   File Author / Maintainer\n#   Use LABEL rather than deprecated MAINTAINER\n#   MAINTAINER Tim Hall (tim@oracle-base.com)\nLABEL maintainer=\"tim@oracle-base.com\"\n#   ------------------------------------------------------------------------------\n#   Define fixed (build time) environment variables.\nENV JAVA_SOFTWARE=\"jdk-8u171-linux-x64.tar.gz\" \\\n    TOMCAT_SOFTWARE=\"apache-tomcat-8.5.31.tar.gz\" \\\n    ORDS_SOFTWARE=\"ords.18.1.1.95.1251.zip\" \\\n    APEX_SOFTWARE=\"apex_18.1_en.zip\" \\\n    SQLCL_SOFTWARE=\"sqlcl-18.1.1.zip\" \\\n    SOFTWARE_DIR=\"/u01/software\" \\\n    SCRIPTS_DIR=\"/u01/scripts\" \\\n    KEYSTORE_DIR=\"/u01/keystore\" \\\n    ORDS_HOME=\"/u01/ords\" \\\n    ORDS_CONF=\"/u01/ords/conf\" \\\n    JAVA_HOME=\"/u01/java\" \\\n    CATALINA_HOME=\"/u01/tomcat\"\n#   ------------------------------------------------------------------------------\n#   Define config (runtime) environment variables.\n# A secret has been removed here. Please do not provide secrets from the Dockerfile as these will leak into the metadata of the resulting docker image. To provide secrets the --secret flag of the docker build command can be used (https://docs.docker.com/develop/develop-images/build_enhancements/#new-docker-build-secret-information).\nENV DB_HOSTNAME=\"ol7-122.localdomain\" \\\n    DB_PORT=\"1521\" \\\n    DB_SERVICE=\"pdb1\" \\\n    APEX_TABLESPACE=\"APEX\" \\\n    TEMP_TABLESPACE=\"TEMP\"\n#   ------------------------------------------------------------------------------\n#   Get all the files for the build.\nCOPY software/* ${SOFTWARE_DIR}/\nCOPY scripts/* ${SCRIPTS_DIR}/\n#   ------------------------------------------------------------------------------\n#   Unpack all the software and remove the media.\n#   No config done in the build phase.\nRUN yum -y install unzip tar gzip \\\n && yum -y update \\\n && rm -Rf /var/cache/yum \\\n && mkdir /u01/java \\\n && cd /u01/java \\\n && tar -xzf ${SOFTWARE_DIR}/${JAVA_SOFTWARE} \\\n && rm -f ${SOFTWARE_DIR}/${JAVA_SOFTWARE} \\\n && TEMP_FILE=`ls ` \\\n && mv ${TEMP_FILE}/* . \\\n && rmdir ${TEMP_FILE} \\\n && mkdir /u01/tomcat \\\n && cd /u01/tomcat \\\n && tar -xzf ${SOFTWARE_DIR}/${TOMCAT_SOFTWARE} \\\n && rm -f ${SOFTWARE_DIR}/${TOMCAT_SOFTWARE} \\\n && TEMP_FILE=`ls ` \\\n && mv ${TEMP_FILE}/* . \\\n && rmdir ${TEMP_FILE} \\\n && mkdir -p ${ORDS_CONF} \\\n && cd ${ORDS_HOME} \\\n && unzip ${SOFTWARE_DIR}/${ORDS_SOFTWARE} \\\n && rm -f ${SOFTWARE_DIR}/${ORDS_SOFTWARE} \\\n && cd /u01 \\\n && unzip ${SOFTWARE_DIR}/${SQLCL_SOFTWARE} \\\n && rm -f ${SOFTWARE_DIR}/${SQLCL_SOFTWARE} \\\n && cd ${SOFTWARE_DIR} \\\n && unzip ${SOFTWARE_DIR}/${APEX_SOFTWARE} \\\n && rm -f ${SOFTWARE_DIR}/${APEX_SOFTWARE} \\\n && rm -Rf ${CATALINA_HOME}/webapps/* \\\n && mkdir -p ${CATALINA_HOME}/webapps/i/ \\\n && cp -R ${SOFTWARE_DIR}/apex/images/* ${CATALINA_HOME}/webapps/i/ \\\n && rm -Rf ${SOFTWARE_DIR}/apex \\\n && useradd tomcat \\\n && chmod u+x ${SCRIPTS_DIR}/*.sh \\\n && chown -R tomcat.tomcat /u01\n#   Perform the following actions as the tomcat user\nUSER tomcat\nEXPOSE 8080/tcp 8443/tcp\nHEALTHCHECK --interval=60s --start-period=60s CMD ${SCRIPTS_DIR}/healthcheck.sh > /dev/null || exit 1\n#   ------------------------------------------------------------------------------\n#   The start script performs all config based on runtime environment variables,\n#   and starts tomcat.\nCMD exec ${SCRIPTS_DIR}/start.sh\n#   End\n","originalDockerfile":"#  ------------------------------------------------------------------------------\n#  Dockerfile to build basic Oracle REST Data Services (ORDS) images\n#  Based on the following:\n#    - Oracle Linux 7 - Slim\n#    - Java 8 :\n#        http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html\n#    - Tomcat 8.5.x :\n#        https://tomcat.apache.org/download-80.cgi\n#    - Oracle REST Data Services (ORDS) 18.x :\n#        http://www.oracle.com/technetwork/developer-tools/rest-data-services/downloads/index.html\n#    - Oracle Application Express (APEX) 18.x :\n#        http://www.oracle.com/technetwork/developer-tools/apex/downloads/index.html\n#    - Oracle SQLcl 18.x :\n#        http://www.oracle.com/technetwork/developer-tools/sqlcl/downloads/index.html\n#\n#  Example build and run. Assumes Docker network called \"my_network\" to connect to DB.\n#\n#  docker build -t ol7_t8_j8_ords18:latest .\n#  docker build --squash -t ol7_t8_j8_ords18:latest .\n#\n#  docker run -dit --name ol7_t8_j8_ords18_con -p 8080:8080 -p 8443:8443 --network=my_network -e DB_HOSTNAME=ol7_122_con ol7_t8_j8_ords18:latest\n#\n#  docker logs --follow ol7_t8_j8_ords18_con\n#  docker exec -it ol7_t8_j8_ords18_con bash\n#\n#  docker stop --time=30 ol7_t8_j8_ords18_con\n#  docker start ol7_t8_j8_ords18_con\n#\n#  docker rm -vf ol7_t8_j8_ords18_con\n#\n#  ------------------------------------------------------------------------------\n#  Set the base image to Oracle Linux 7 - Slim\nFROM oraclelinux:7-slim\n#  File Author / Maintainer\n#  Use LABEL rather than deprecated MAINTAINER\n#  MAINTAINER Tim Hall (tim@oracle-base.com)\nLABEL maintainer=\"tim@oracle-base.com\"\n#  ------------------------------------------------------------------------------\n#  Define fixed (build time) environment variables.\nENV JAVA_SOFTWARE=\"jdk-8u171-linux-x64.tar.gz\" \\\n    TOMCAT_SOFTWARE=\"apache-tomcat-8.5.31.tar.gz\" \\\n    ORDS_SOFTWARE=\"ords.18.1.1.95.1251.zip\" \\\n    APEX_SOFTWARE=\"apex_18.1_en.zip\" \\\n    SQLCL_SOFTWARE=\"sqlcl-18.1.1.zip\" \\\n    SOFTWARE_DIR=\"/u01/software\" \\\n    SCRIPTS_DIR=\"/u01/scripts\" \\\n    KEYSTORE_DIR=\"/u01/keystore\" \\\n    ORDS_HOME=\"/u01/ords\" \\\n    ORDS_CONF=\"/u01/ords/conf\" \\\n    JAVA_HOME=\"/u01/java\" \\\n    CATALINA_HOME=\"/u01/tomcat\"\n#  ------------------------------------------------------------------------------\n#  Define config (runtime) environment variables.\nENV DB_HOSTNAME=\"ol7-122.localdomain\" \\\n    DB_PORT=\"1521\" \\\n    DB_SERVICE=\"pdb1\" \\\n    APEX_PUBLIC_USER_PASSWORD=\"ApexPassword1\" \\\n    APEX_TABLESPACE=\"APEX\" \\\n    TEMP_TABLESPACE=\"TEMP\" \\\n    APEX_LISTENER_PASSWORD=\"ApexPassword1\" \\\n    APEX_REST_PASSWORD=\"ApexPassword1\" \\\n    PUBLIC_PASSWORD=\"ApexPassword1\" \\\n    SYS_PASSWORD=\"SysPassword1\" \\\n    KEYSTORE_PASSWORD=\"KeystorePassword1\"\n#  ------------------------------------------------------------------------------\n#  Get all the files for the build.\nCOPY software/* ${SOFTWARE_DIR}/\nCOPY scripts/* ${SCRIPTS_DIR}/\n#  ------------------------------------------------------------------------------\n#  Unpack all the software and remove the media.\n#  No config done in the build phase.\nRUN yum -y install unzip tar gzip \\\n && yum -y update \\\n && rm -Rf /var/cache/yum \\\n && mkdir /u01/java \\\n && cd /u01/java \\\n && tar -xzf ${SOFTWARE_DIR}/${JAVA_SOFTWARE} \\\n && rm -f ${SOFTWARE_DIR}/${JAVA_SOFTWARE} \\\n && TEMP_FILE=`ls ` \\\n && mv ${TEMP_FILE}/* . \\\n && rmdir ${TEMP_FILE} \\\n && mkdir /u01/tomcat \\\n && cd /u01/tomcat \\\n && tar -xzf ${SOFTWARE_DIR}/${TOMCAT_SOFTWARE} \\\n && rm -f ${SOFTWARE_DIR}/${TOMCAT_SOFTWARE} \\\n && TEMP_FILE=`ls ` \\\n && mv ${TEMP_FILE}/* . \\\n && rmdir ${TEMP_FILE} \\\n && mkdir -p ${ORDS_CONF} \\\n && cd ${ORDS_HOME} \\\n && unzip ${SOFTWARE_DIR}/${ORDS_SOFTWARE} \\\n && rm -f ${SOFTWARE_DIR}/${ORDS_SOFTWARE} \\\n && cd /u01 \\\n && unzip ${SOFTWARE_DIR}/${SQLCL_SOFTWARE} \\\n && rm -f ${SOFTWARE_DIR}/${SQLCL_SOFTWARE} \\\n && cd ${SOFTWARE_DIR} \\\n && unzip ${SOFTWARE_DIR}/${APEX_SOFTWARE} \\\n && rm -f ${SOFTWARE_DIR}/${APEX_SOFTWARE} \\\n && rm -Rf ${CATALINA_HOME}/webapps/* \\\n && mkdir -p ${CATALINA_HOME}/webapps/i/ \\\n && cp -R ${SOFTWARE_DIR}/apex/images/* ${CATALINA_HOME}/webapps/i/ \\\n && rm -Rf ${SOFTWARE_DIR}/apex \\\n && useradd tomcat \\\n && chmod u+x ${SCRIPTS_DIR}/*.sh \\\n && chown -R tomcat.tomcat /u01\n#  Perform the following actions as the tomcat user\nUSER tomcat\nEXPOSE 8080/tcp 8443/tcp\nHEALTHCHECK --interval=60s --start-period=60s CMD ${SCRIPTS_DIR}/healthcheck.sh > /dev/null || exit 1\n#  ------------------------------------------------------------------------------\n#  The start script performs all config based on runtime environment variables,\n#  and starts tomcat.\nCMD exec ${SCRIPTS_DIR}/start.sh\n#  End\n","injectedSmells":[],"originalDockerfileHash":"94763c6612959f4ff1a8b111a67c9edb","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   ------------------------------------------------------------------------------\n#   Dockerfile to build basic Oracle REST Data Services (ORDS) images\n#   Based on the following:\n#     - Oracle Linux 7 - Slim\n#     - Java 8 :\n#         http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html\n#     - Tomcat 8.5.x :\n#         https://tomcat.apache.org/download-80.cgi\n#     - Oracle REST Data Services (ORDS) 18.x :\n#         http://www.oracle.com/technetwork/developer-tools/rest-data-services/downloads/index.html\n#     - Oracle Application Express (APEX) 18.x :\n#         http://www.oracle.com/technetwork/developer-tools/apex/downloads/index.html\n#     - Oracle SQLcl 18.x :\n#         http://www.oracle.com/technetwork/developer-tools/sqlcl/downloads/index.html\n#\n#   Example build and run. Assumes Docker network called \"my_network\" to connect to DB.\n#\n#   docker build -t ol7_t8_j8_ords18:latest .\n#   docker build --squash -t ol7_t8_j8_ords18:latest .\n#\n#   docker run -dit --name ol7_t8_j8_ords18_con -p 8080:8080 -p 8443:8443 --network=my_network -e DB_HOSTNAME=ol7_122_con ol7_t8_j8_ords18:latest\n#\n#   docker logs --follow ol7_t8_j8_ords18_con\n#   docker exec -it ol7_t8_j8_ords18_con bash\n#\n#   docker stop --time=30 ol7_t8_j8_ords18_con\n#   docker start ol7_t8_j8_ords18_con\n#\n#   docker rm -vf ol7_t8_j8_ords18_con\n#\n#   ------------------------------------------------------------------------------\n#   Set the base image to Oracle Linux 7 - Slim\nFROM oraclelinux:7-slim\n#   File Author / Maintainer\n#   Use LABEL rather than deprecated MAINTAINER\n#   MAINTAINER Tim Hall (tim@oracle-base.com)\nLABEL maintainer=\"tim@oracle-base.com\"\n#   ------------------------------------------------------------------------------\n#   Define fixed (build time) environment variables.\nENV JAVA_SOFTWARE=\"jdk-8u171-linux-x64.tar.gz\" \\\n    TOMCAT_SOFTWARE=\"apache-tomcat-8.5.31.tar.gz\" \\\n    ORDS_SOFTWARE=\"ords.18.1.1.95.1251.zip\" \\\n    APEX_SOFTWARE=\"apex_18.1_en.zip\" \\\n    SQLCL_SOFTWARE=\"sqlcl-18.1.1.zip\" \\\n    SOFTWARE_DIR=\"/u01/software\" \\\n    SCRIPTS_DIR=\"/u01/scripts\" \\\n    KEYSTORE_DIR=\"/u01/keystore\" \\\n    ORDS_HOME=\"/u01/ords\" \\\n    ORDS_CONF=\"/u01/ords/conf\" \\\n    JAVA_HOME=\"/u01/java\" \\\n    CATALINA_HOME=\"/u01/tomcat\"\n#   ------------------------------------------------------------------------------\n#   Define config (runtime) environment variables.\nENV DB_HOSTNAME=\"ol7-122.localdomain\" \\\n    DB_PORT=\"1521\" \\\n    DB_SERVICE=\"pdb1\" \\\n    APEX_PUBLIC_USER_PASSWORD=\"ApexPassword1\" \\\n    APEX_TABLESPACE=\"APEX\" \\\n    TEMP_TABLESPACE=\"TEMP\" \\\n    APEX_LISTENER_PASSWORD=\"ApexPassword1\" \\\n    APEX_REST_PASSWORD=\"ApexPassword1\" \\\n    PUBLIC_PASSWORD=\"ApexPassword1\" \\\n    SYS_PASSWORD=\"SysPassword1\" \\\n    KEYSTORE_PASSWORD=\"KeystorePassword1\"\n#   ------------------------------------------------------------------------------\n#   Get all the files for the build.\nCOPY software/* ${SOFTWARE_DIR}/\nCOPY scripts/* ${SCRIPTS_DIR}/\n#   ------------------------------------------------------------------------------\n#   Unpack all the software and remove the media.\n#   No config done in the build phase.\nRUN yum -y install unzip tar gzip \\\n && yum -y update \\\n && rm -Rf /var/cache/yum \\\n && mkdir /u01/java \\\n && cd /u01/java \\\n && tar -xzf ${SOFTWARE_DIR}/${JAVA_SOFTWARE} \\\n && rm -f ${SOFTWARE_DIR}/${JAVA_SOFTWARE} \\\n && TEMP_FILE=`ls ` \\\n && mv ${TEMP_FILE}/* . \\\n && rmdir ${TEMP_FILE} \\\n && mkdir /u01/tomcat \\\n && cd /u01/tomcat \\\n && tar -xzf ${SOFTWARE_DIR}/${TOMCAT_SOFTWARE} \\\n && rm -f ${SOFTWARE_DIR}/${TOMCAT_SOFTWARE} \\\n && TEMP_FILE=`ls ` \\\n && mv ${TEMP_FILE}/* . \\\n && rmdir ${TEMP_FILE} \\\n && mkdir -p ${ORDS_CONF} \\\n && cd ${ORDS_HOME} \\\n && unzip ${SOFTWARE_DIR}/${ORDS_SOFTWARE} \\\n && rm -f ${SOFTWARE_DIR}/${ORDS_SOFTWARE} \\\n && cd /u01 \\\n && unzip ${SOFTWARE_DIR}/${SQLCL_SOFTWARE} \\\n && rm -f ${SOFTWARE_DIR}/${SQLCL_SOFTWARE} \\\n && cd ${SOFTWARE_DIR} \\\n && unzip ${SOFTWARE_DIR}/${APEX_SOFTWARE} \\\n && rm -f ${SOFTWARE_DIR}/${APEX_SOFTWARE} \\\n && rm -Rf ${CATALINA_HOME}/webapps/* \\\n && mkdir -p ${CATALINA_HOME}/webapps/i/ \\\n && cp -R ${SOFTWARE_DIR}/apex/images/* ${CATALINA_HOME}/webapps/i/ \\\n && rm -Rf ${SOFTWARE_DIR}/apex \\\n && useradd tomcat \\\n && chmod u+x ${SCRIPTS_DIR}/*.sh \\\n && chown -R tomcat.tomcat /u01\n#   Perform the following actions as the tomcat user\nUSER tomcat\nEXPOSE 8080/tcp 8443/tcp\nHEALTHCHECK --interval=60s --start-period=60s CMD ${SCRIPTS_DIR}/healthcheck.sh > /dev/null || exit 1\n#   ------------------------------------------------------------------------------\n#   The start script performs all config based on runtime environment variables,\n#   and starts tomcat.\nCMD exec ${SCRIPTS_DIR}/start.sh\n#   End\n","originalDockerfileUglifiedHash":"2b1dbd3d76f0d395d6e6eb9135a534ac","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/4659b99a89dfc0e3d3d6ff205b8284bc336b6d64.dockerfile"}