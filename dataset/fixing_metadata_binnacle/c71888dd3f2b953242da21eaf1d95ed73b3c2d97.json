{"seed":1952309704,"processedDockerfileHash":"d2d99326056fb5974ba5f63f682459ee","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","pin-package-manager-versions-npm","have-a-healthcheck","have-a-user"],"processedDockerfile":"#\n#   Mapcache-server Dockerfile (master branch)\n#   Written by Steven D. Lander, RGi\n#\n#   This script will install and configure mapcache-server\n#   with MrSID support.\n#\n#   ***** NOTE ******\n#   You will need the MrSID API tarball specified in the environment variable\n#   MRSID_TARBALL in order to successfully build this image.  Get the API tarball\n#   by signing up for a developer account at https://www.lizardtech.com/\n#   ****************\n#\nFROM debian:jessie\nLABEL author=\"Steven D. Lander\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends git curl wget python python-setuptools pkgconf postgis mongodb gcc-4.8 g++-4.8 libgif-dev libtbb-dev libkrb5-dev libjpeg-dev libgdal-dev openjdk-7-jdk libcairo2-dev build-essential libfreetype6-dev -y \\\n && rm -rf /var/lib/apt/lists/*\nENV JAVA_HOME=\"/usr/lib/jvm/java-7-openjdk-amd64\"\nWORKDIR /workspace/mbutil\nRUN git clone git://github.com/mapbox/mbutil.git \\\n && cd mbutil \\\n && python setup.py install\nWORKDIR /workspace/nodejs\nENV NVM_VER=\"0.33.0\"\nENV NVM_DIR=\"/root/.nvm\"\nENV NODE_VER=\"0.12.18\"\nRUN curl https://raw.githubusercontent.com/creationix/nvm/v$NVM_VER/install.sh | bash \\\n && . $NVM_DIR/nvm.sh \\\n && nvm install $NODE_VER \\\n && nvm use $NODE_VER \\\n && nvm alias default $NODE_VER\nRUN sed -i 's|#port = 27017|port = 27017|' /etc/mongodb.conf\nEXPOSE 27017/tcp\nWORKDIR /workspace/postgis\nCOPY mapcache.sql mapcache.sql\nRUN sed -i 's| md5| trust|g' /etc/postgresql/9.4/main/pg_hba.conf \\\n && sed -i 's| peer| trust|g' /etc/postgresql/9.4/main/pg_hba.conf \\\n && service postgresql start \\\n && createdb -h localhost -p 5432 -U postgres mapcache \\\n && su postgres - \\\n && export PGOPTIONS='--client-min-messages=warning' \\\n && psql -U postgres -X -q -a -1 -v ON_ERROR_STOP=1 --pset pager=off -d mapcache -f /workspace/postgis/mapcache.sql\nEXPOSE 5432/tcp\n#\n#   WORKDIR /workspace/mrsid\n#   ENV MRSID_TARBALL MrSID_DSDK-9.5.1.4427-linux.x86-64.gcc48.tar.gz\n#   ENV MRSID_DIR /workspace/mrsid/MrSID_DSDK\n#   ENV MRSID_RASTER_DIR $MRSID_DIR/Raster_DSDK\n#   ENV MRSID_LIDAR_DIR $MRSID_DIR/Lidar_DSDK\n#   COPY $MRSID_TARBALL $MRSID_TARBALL\n#   RUN mkdir MrSID_DSDK \\\n#       && tar -xzf $MRSID_TARBALL -C MrSID_DSDK --strip-components 1 \\\n#       && ln -s $MRSID_LIDAR_DIR/lib/liblti_lidar_dsdk.so /usr/local/lib/. \\\n#       && ln -s $MRSID_RASTER_DIR/lib/libltidsdk.so /usr/local/lib/.\nWORKDIR /workspace/gdal\nENV GDAL_VER=\"2.0.1\"\nENV GDAL_DIR=\"/workspace/gdal/gdal-$GDAL_VER\"\nRUN export CC=\"gcc-4.8 -fPIC\" \\\n && export CXX=\"g++-4.8 -fPIC\" \\\n && wget http://download.osgeo.org/gdal/$GDAL_VER/gdal-$GDAL_VER.tar.gz \\\n && tar -xzvf gdal-$GDAL_VER.tar.gz \\\n && cd $GDAL_DIR \\\n && ./configure --with-jp2mrsid --with-libtiff \\\n && make -j10 \\\n && make install\nENV GDAL_DATA=\"/usr/share/gdal/1.10\"\nENV LD_LIBRARY_PATH=\"/usr/local/lib\"\nWORKDIR /workspace\nRUN git clone https://github.com/ngageoint/mapcache-server\nWORKDIR /workspace/mapcache-server\nRUN . $NVM_DIR/nvm.sh \\\n && if [ -d \"node_modules\" ] ; then rm -rf \"node_modules\" ; fi \\\n && mkdir node_modules \\\n && npm install \\\n && npm uninstall gdal --save \\\n && npm install gdal@0.11.1 --build-from-source --shared-gdal\nEXPOSE 4242/tcp\nENTRYPOINT service mongodb start ; service postgresql start ; . $NVM_DIR/nvm.sh ; node /workspace/mapcache-server/app.js\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#\n#  Mapcache-server Dockerfile (master branch)\n#  Written by Steven D. Lander, RGi\n#\n#  This script will install and configure mapcache-server\n#  with MrSID support.\n#\n#  ***** NOTE ******\n#  You will need the MrSID API tarball specified in the environment variable\n#  MRSID_TARBALL in order to successfully build this image.  Get the API tarball\n#  by signing up for a developer account at https://www.lizardtech.com/\n#  ****************\n#\nFROM debian:jessie\nLABEL author=\"Steven D. Lander\"\nRUN apt-get update \\\n && apt-get install git curl wget python python-setuptools pkgconf postgis mongodb gcc-4.8 g++-4.8 libgif-dev libtbb-dev libkrb5-dev libjpeg-dev libgdal-dev openjdk-7-jdk libcairo2-dev build-essential libfreetype6-dev -y \\\n && rm -rf /var/lib/apt/lists/*\nENV JAVA_HOME=\"/usr/lib/jvm/java-7-openjdk-amd64\"\nWORKDIR /workspace/mbutil\nRUN git clone git://github.com/mapbox/mbutil.git \\\n && cd mbutil \\\n && python setup.py install\nWORKDIR /workspace/nodejs\nENV NVM_VER=\"0.33.0\"\nENV NVM_DIR=\"/root/.nvm\"\nENV NODE_VER=\"0.12.18\"\nRUN curl https://raw.githubusercontent.com/creationix/nvm/v$NVM_VER/install.sh | bash \\\n && . $NVM_DIR/nvm.sh \\\n && nvm install $NODE_VER \\\n && nvm use $NODE_VER \\\n && nvm alias default $NODE_VER\nRUN sed -i 's|#port = 27017|port = 27017|' /etc/mongodb.conf\nEXPOSE 27017/tcp\nWORKDIR /workspace/postgis\nCOPY mapcache.sql mapcache.sql\nRUN sed -i 's| md5| trust|g' /etc/postgresql/9.4/main/pg_hba.conf \\\n && sed -i 's| peer| trust|g' /etc/postgresql/9.4/main/pg_hba.conf \\\n && service postgresql start \\\n && createdb -h localhost -p 5432 -U postgres mapcache \\\n && su postgres - \\\n && export PGOPTIONS='--client-min-messages=warning' \\\n && psql -U postgres -X -q -a -1 -v ON_ERROR_STOP=1 --pset pager=off -d mapcache -f /workspace/postgis/mapcache.sql\nEXPOSE 5432/tcp\n#\n#  WORKDIR /workspace/mrsid\n#  ENV MRSID_TARBALL MrSID_DSDK-9.5.1.4427-linux.x86-64.gcc48.tar.gz\n#  ENV MRSID_DIR /workspace/mrsid/MrSID_DSDK\n#  ENV MRSID_RASTER_DIR $MRSID_DIR/Raster_DSDK\n#  ENV MRSID_LIDAR_DIR $MRSID_DIR/Lidar_DSDK\n#  COPY $MRSID_TARBALL $MRSID_TARBALL\n#  RUN mkdir MrSID_DSDK \\\n#      && tar -xzf $MRSID_TARBALL -C MrSID_DSDK --strip-components 1 \\\n#      && ln -s $MRSID_LIDAR_DIR/lib/liblti_lidar_dsdk.so /usr/local/lib/. \\\n#      && ln -s $MRSID_RASTER_DIR/lib/libltidsdk.so /usr/local/lib/.\nWORKDIR /workspace/gdal\nENV GDAL_VER=\"2.0.1\"\nENV GDAL_DIR=\"/workspace/gdal/gdal-$GDAL_VER\"\nRUN export CC=\"gcc-4.8 -fPIC\" \\\n && export CXX=\"g++-4.8 -fPIC\" \\\n && wget http://download.osgeo.org/gdal/$GDAL_VER/gdal-$GDAL_VER.tar.gz \\\n && tar -xzvf gdal-$GDAL_VER.tar.gz \\\n && cd $GDAL_DIR \\\n && ./configure --with-jp2mrsid --with-libtiff \\\n && make -j10 \\\n && make install\nENV GDAL_DATA=\"/usr/share/gdal/1.10\"\nENV LD_LIBRARY_PATH=\"/usr/local/lib\"\nWORKDIR /workspace\nRUN git clone https://github.com/ngageoint/mapcache-server\nWORKDIR /workspace/mapcache-server\nRUN . $NVM_DIR/nvm.sh \\\n && if [ -d \"node_modules\" ] ; then rm -rf \"node_modules\" ; fi \\\n && mkdir node_modules \\\n && npm install \\\n && npm uninstall gdal --save \\\n && npm install gdal --build-from-source --shared-gdal\nEXPOSE 4242/tcp\nENTRYPOINT service mongodb start ; service postgresql start ; . $NVM_DIR/nvm.sh ; node /workspace/mapcache-server/app.js\n","injectedSmells":[],"originalDockerfileHash":"baf091034037ebeac4c3b760745de1c8","successfullyInjectedSmells":[],"originalDockerfileUglified":"#\n#   Mapcache-server Dockerfile (master branch)\n#   Written by Steven D. Lander, RGi\n#\n#   This script will install and configure mapcache-server\n#   with MrSID support.\n#\n#   ***** NOTE ******\n#   You will need the MrSID API tarball specified in the environment variable\n#   MRSID_TARBALL in order to successfully build this image.  Get the API tarball\n#   by signing up for a developer account at https://www.lizardtech.com/\n#   ****************\n#\nFROM debian:jessie\nLABEL author=\"Steven D. Lander\"\nRUN apt-get update \\\n && apt-get install git curl wget python python-setuptools pkgconf postgis mongodb gcc-4.8 g++-4.8 libgif-dev libtbb-dev libkrb5-dev libjpeg-dev libgdal-dev openjdk-7-jdk libcairo2-dev build-essential libfreetype6-dev -y \\\n && rm -rf /var/lib/apt/lists/*\nENV JAVA_HOME=\"/usr/lib/jvm/java-7-openjdk-amd64\"\nWORKDIR /workspace/mbutil\nRUN git clone git://github.com/mapbox/mbutil.git \\\n && cd mbutil \\\n && python setup.py install\nWORKDIR /workspace/nodejs\nENV NVM_VER=\"0.33.0\"\nENV NVM_DIR=\"/root/.nvm\"\nENV NODE_VER=\"0.12.18\"\nRUN curl https://raw.githubusercontent.com/creationix/nvm/v$NVM_VER/install.sh | bash \\\n && . $NVM_DIR/nvm.sh \\\n && nvm install $NODE_VER \\\n && nvm use $NODE_VER \\\n && nvm alias default $NODE_VER\nRUN sed -i 's|#port = 27017|port = 27017|' /etc/mongodb.conf\nEXPOSE 27017/tcp\nWORKDIR /workspace/postgis\nCOPY mapcache.sql mapcache.sql\nRUN sed -i 's| md5| trust|g' /etc/postgresql/9.4/main/pg_hba.conf \\\n && sed -i 's| peer| trust|g' /etc/postgresql/9.4/main/pg_hba.conf \\\n && service postgresql start \\\n && createdb -h localhost -p 5432 -U postgres mapcache \\\n && su postgres - \\\n && export PGOPTIONS='--client-min-messages=warning' \\\n && psql -U postgres -X -q -a -1 -v ON_ERROR_STOP=1 --pset pager=off -d mapcache -f /workspace/postgis/mapcache.sql\nEXPOSE 5432/tcp\n#\n#   WORKDIR /workspace/mrsid\n#   ENV MRSID_TARBALL MrSID_DSDK-9.5.1.4427-linux.x86-64.gcc48.tar.gz\n#   ENV MRSID_DIR /workspace/mrsid/MrSID_DSDK\n#   ENV MRSID_RASTER_DIR $MRSID_DIR/Raster_DSDK\n#   ENV MRSID_LIDAR_DIR $MRSID_DIR/Lidar_DSDK\n#   COPY $MRSID_TARBALL $MRSID_TARBALL\n#   RUN mkdir MrSID_DSDK \\\n#       && tar -xzf $MRSID_TARBALL -C MrSID_DSDK --strip-components 1 \\\n#       && ln -s $MRSID_LIDAR_DIR/lib/liblti_lidar_dsdk.so /usr/local/lib/. \\\n#       && ln -s $MRSID_RASTER_DIR/lib/libltidsdk.so /usr/local/lib/.\nWORKDIR /workspace/gdal\nENV GDAL_VER=\"2.0.1\"\nENV GDAL_DIR=\"/workspace/gdal/gdal-$GDAL_VER\"\nRUN export CC=\"gcc-4.8 -fPIC\" \\\n && export CXX=\"g++-4.8 -fPIC\" \\\n && wget http://download.osgeo.org/gdal/$GDAL_VER/gdal-$GDAL_VER.tar.gz \\\n && tar -xzvf gdal-$GDAL_VER.tar.gz \\\n && cd $GDAL_DIR \\\n && ./configure --with-jp2mrsid --with-libtiff \\\n && make -j10 \\\n && make install\nENV GDAL_DATA=\"/usr/share/gdal/1.10\"\nENV LD_LIBRARY_PATH=\"/usr/local/lib\"\nWORKDIR /workspace\nRUN git clone https://github.com/ngageoint/mapcache-server\nWORKDIR /workspace/mapcache-server\nRUN . $NVM_DIR/nvm.sh \\\n && if [ -d \"node_modules\" ] ; then rm -rf \"node_modules\" ; fi \\\n && mkdir node_modules \\\n && npm install \\\n && npm uninstall gdal --save \\\n && npm install gdal --build-from-source --shared-gdal\nEXPOSE 4242/tcp\nENTRYPOINT service mongodb start ; service postgresql start ; . $NVM_DIR/nvm.sh ; node /workspace/mapcache-server/app.js\n","originalDockerfileUglifiedHash":"878e7e2b11f88f715659758054362d05","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/c71888dd3f2b953242da21eaf1d95ed73b3c2d97.dockerfile"}