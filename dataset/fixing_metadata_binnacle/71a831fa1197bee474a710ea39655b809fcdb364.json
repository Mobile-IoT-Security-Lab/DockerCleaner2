{"seed":1901786935,"processedDockerfileHash":"11279c454747f922c328a68541d21022","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM ubuntu:14.04\nMAINTAINER Stefan Houtzager <stefan.houtzager@gmail.com>\nENV DEBIAN_FRONTEND=\"noninteractive\"\nENV REFRESHED_AT=\"27-06-2017\"\nENV TERM=\"xterm\"\nWORKDIR /\nRUN apt-get update \\\n && apt-get upgrade -y \\\n && (apt-get update ;apt-get install --no-install-recommends wget=1.15-1ubuntu1.14.04.5 curl=7.35.0-1ubuntu2.20 git=1:1.9.1-1ubuntu0.10 unzip=6.0-9ubuntu1.5 -y )\nRUN locale-gen en_US.UTF-8\nENV LANG=\"en_US.UTF-8\"\nENV LANGUAGE=\"en_US:en\"\nENV LC_ALL=\"en_US.UTF-8\"\n#   erlang install\nRUN echo \"deb http://packages.erlang-solutions.com/ubuntu trusty contrib\" >> /etc/apt/sources.list \\\n && apt-key adv --fetch-keys http://packages.erlang-solutions.com/ubuntu/erlang_solutions.asc \\\n && apt-get update -qq \\\n && (apt-get update ;apt-get install --no-install-recommends esl-erlang=1:20.3 build-essential=11.6ubuntu6 wget=1.15-1ubuntu1.14.04.5 -y ) \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#   Download and Install Specific Version of Elixir\nWORKDIR /elixir\nRUN wget -q https://github.com/elixir-lang/elixir/releases/download/v1.6.5/Precompiled.zip \\\n && unzip Precompiled.zip \\\n && rm -f Precompiled.zip \\\n && ln -s /elixir/bin/elixirc /usr/local/bin/elixirc \\\n && ln -s /elixir/bin/elixir /usr/local/bin/elixir \\\n && ln -s /elixir/bin/mix /usr/local/bin/mix \\\n && ln -s /elixir/bin/iex /usr/local/bin/iex\nWORKDIR /\n#   install Node.js (>= 5.0.0) and NPM in order to satisfy brunch.io dependencies\nRUN curl -sL https://deb.nodesource.com/setup_9.x | bash - \\\n && (apt-get update ;apt-get install --no-install-recommends nodejs=0.10.25~dfsg2-2ubuntu1.2 inotify-tools=3.14-1ubuntu1 -y )\n#   setup our Ubuntu sources (ADD breaks caching)\nRUN echo \"deb http://archive.ubuntu.com/ubuntu trusty main restricted universe multiverse\\ndeb http://archive.ubuntu.com/ubuntu trusty-updates main restricted universe multiverse\\ndeb http://archive.ubuntu.com/ubuntu trusty-backports main restricted universe multiverse\\ndeb http://security.ubuntu.com/ubuntu trusty-security main restricted universe multiverse \\n\" > /etc/apt/sources.list\n#   no Upstart or DBus\n#   https://github.com/dotcloud/docker/issues/1724#issuecomment-26294856\nRUN apt-mark hold initscripts udev plymouth mountall\nRUN dpkg-divert --local --rename --add /sbin/initctl \\\n && ln -sf /bin/true /sbin/initctl\nRUN : \\\n && apt-get upgrade -y\nRUN (apt-get update ;apt-get install --no-install-recommends python-numpy=1:1.8.2-0ubuntu0.1 software-properties-common=0.92.37.8 libsecret-1-0=0.16-0ubuntu1 gnome-keyring=3.10.1-1ubuntu4.4 -y )\nRUN (apt-get update ;apt-get install --no-install-recommends supervisor=3.0b2-1ubuntu0.1 openssh-server=1:6.6p1-2ubuntu2.13 pwgen=2.06-1ubuntu4 sudo=1.8.9p5-1ubuntu1.4 vim-tiny=2:7.4.052-1ubuntu3.1 net-tools=1.60-25ubuntu2.1 lxde=0.5.0-4ubuntu4 x11vnc=0.9.13-1.1 xvfb=2:1.15.1-0ubuntu2.11 gtk2-engines-murrine=0.98.2-0ubuntu2 ttf-ubuntu-font-family=0.80-0ubuntu6 libreoffice=1:4.2.8-0ubuntu5.5 firefox=66.0.3+build1-0ubuntu0.14.04.1 xserver-xorg-video-dummy=1:0.3.7-1build1 -y --force-yes ) \\\n && apt-get autoclean \\\n && apt-get autoremove \\\n && rm -rf /var/lib/apt/lists/*\nRUN mkdir /etc/startup.aux/\nRUN echo \"#Dummy\" > /etc/startup.aux/00.sh\nRUN chmod +x /etc/startup.aux/00.sh\nRUN mkdir -p /etc/supervisor/conf.d\nRUN rm /etc/supervisor/supervisord.conf\n#   create an ubuntu user who cannot sudo\n#   RUN useradd --create-home --shell /bin/bash --user-group ubuntu\nRUN useradd --create-home --shell /bin/bash --user-group --groups adm,sudo ubuntu\nRUN echo \"ubuntu:badpassword\" | chpasswd\nCOPY elixir-dev-anywhere-docker/startup.sh /\nCOPY elixir-dev-anywhere-docker/supervisord.conf.xorg /etc/supervisor/supervisord.conf\nCOPY elixir-dev-anywhere-docker/openbox-config /openbox-config\nRUN cp -r /openbox-config/.config ~ubuntu/\nRUN chown -R ubuntu ~ubuntu/.config ; chgrp -R ubuntu ~ubuntu/.config\nRUN rm -r /openbox-config\nENV HOME=\"/home/ubuntu\"\n#   Install phoenix, local Elixir hex and rebar (in ENV HOME)\nRUN mix archive.install --force https://github.com/phoenixframework/archives/raw/master/phx_new.ez \\\n && mix local.hex --force \\\n && mix local.rebar --force \\\n && mix hex.info\n#   intellij\nRUN sed 's/main$/main universe/' -i /etc/apt/sources.list \\\n && apt-get update -qq \\\n && echo 'Installing OS dependencies' \\\n && (apt-get update ;apt-get install --no-install-recommends sudo=1.8.9p5-1ubuntu1.4 software-properties-common=0.92.37.8 libxext-dev=2:1.3.2-1ubuntu0.0.14.04.1 libxrender-dev=1:0.9.8-1build0.14.04.1 libxslt1.1=1.1.28-2ubuntu0.2 libxtst-dev=2:1.2.2-1 libgtk2.0-0=2.24.23-0ubuntu1.4 libcanberra-gtk-module=0.30-0ubuntu3 -qq -y --fix-missing ) \\\n && echo 'Cleaning up' \\\n && apt-get clean -qq -y \\\n && apt-get autoclean -qq -y \\\n && apt-get autoremove -qq -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && rm -rf /tmp/*\nRUN mkdir -p /home/ubuntu/.IdeaIC2017.3/config/options \\\n && mkdir -p /home/ubuntu/.IdeaIC2017.3/config/plugins\nCOPY elixir-dev-anywhere-docker/jdk.table.xml /home/ubuntu/.IdeaIC2017.3/config/options/jdk.table.xml\nCOPY elixir-dev-anywhere-docker/jdk.table.xml /home/ubuntu/.jdk.table.xml\nCOPY elixir-dev-anywhere-docker/intellij/run /usr/local/bin/intellij\nCOPY elixir-dev-anywhere-docker/intellij-elixir.zip /home/ubuntu/.IdeaIC2017.3/config/plugins/intellij-elixir.zip\nRUN chmod +x /usr/local/bin/intellij\nRUN echo 'Downloading IntelliJ IDEA' \\\n && wget https://download.jetbrains.com/idea/ideaIC-2017.3.5.tar.gz -O /tmp/intellij.tar.gz -q \\\n && echo 'Installing IntelliJ IDEA' \\\n && mkdir -p /opt/intellij \\\n && tar -xf /tmp/intellij.tar.gz --strip-components=1 -C /opt/intellij \\\n && rm /tmp/intellij.tar.gz\nRUN echo 'Installing Elixir plugin' \\\n && cd /home/ubuntu/.IdeaIC2017.3/config/plugins/ \\\n && unzip -q intellij-elixir.zip \\\n && rm intellij-elixir.zip\n#   noVNC\nCOPY elixir-dev-anywhere-docker/noVNC /noVNC/\n#   store a password for the VNC service\nRUN mkdir /home/root\nRUN mkdir /home/root/.vnc\nRUN x11vnc -storepasswd badpassword /home/root/.vnc/passwd\nCOPY elixir-dev-anywhere-docker/xorg.conf /etc/X11/xorg.conf\n#   pgadmin3 and nano\n#   prerequisites to install a new version of pgadmin3 https://undebugable.wordpress.com/2016/01/11/pgadmin-3-warning-the-server-you-are-connecting-to-is-not-a-version-that-is-supported-by-this-release/\n#   add the repository\nRUN sh -c 'echo \"deb http://apt.postgresql.org/pub/repos/apt/ $(lsb_release -cs)-pgdg main\" > /etc/apt/sources.list.d/pgdg.list'\n#   install their key\nRUN wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add -\nRUN apt-get update \\\n && (apt-get update ;apt-get install --no-install-recommends nano=2.2.6-1ubuntu1 postgresql-client=9.3+154ubuntu1.1 pgadmin3=1.18.1-2 -y ) \\\n && rm -rf /var/lib/apt/lists/*\nENTRYPOINT [\"/startup.sh\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:14.04\nMAINTAINER Stefan Houtzager <stefan.houtzager@gmail.com>\nENV DEBIAN_FRONTEND=\"noninteractive\"\nENV REFRESHED_AT=\"27-06-2017\"\nENV TERM=\"xterm\"\nWORKDIR /\nRUN apt-get update \\\n && apt-get upgrade -y \\\n && apt-get install wget curl git unzip -y\nRUN locale-gen en_US.UTF-8\nENV LANG=\"en_US.UTF-8\"\nENV LANGUAGE=\"en_US:en\"\nENV LC_ALL=\"en_US.UTF-8\"\n#  erlang install\nRUN echo \"deb http://packages.erlang-solutions.com/ubuntu trusty contrib\" >> /etc/apt/sources.list \\\n && apt-key adv --fetch-keys http://packages.erlang-solutions.com/ubuntu/erlang_solutions.asc \\\n && apt-get update -qq \\\n && apt-get install esl-erlang=1:20.3 build-essential wget -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#  Download and Install Specific Version of Elixir\nWORKDIR /elixir\nRUN wget -q https://github.com/elixir-lang/elixir/releases/download/v1.6.5/Precompiled.zip \\\n && unzip Precompiled.zip \\\n && rm -f Precompiled.zip \\\n && ln -s /elixir/bin/elixirc /usr/local/bin/elixirc \\\n && ln -s /elixir/bin/elixir /usr/local/bin/elixir \\\n && ln -s /elixir/bin/mix /usr/local/bin/mix \\\n && ln -s /elixir/bin/iex /usr/local/bin/iex\nWORKDIR /\n#  install Node.js (>= 5.0.0) and NPM in order to satisfy brunch.io dependencies\nRUN curl -sL https://deb.nodesource.com/setup_9.x | bash - \\\n && apt-get install nodejs inotify-tools -y\n#  setup our Ubuntu sources (ADD breaks caching)\nRUN echo \"deb http://archive.ubuntu.com/ubuntu trusty main restricted universe multiverse\\ndeb http://archive.ubuntu.com/ubuntu trusty-updates main restricted universe multiverse\\ndeb http://archive.ubuntu.com/ubuntu trusty-backports main restricted universe multiverse\\ndeb http://security.ubuntu.com/ubuntu trusty-security main restricted universe multiverse \\n\" > /etc/apt/sources.list\n#  no Upstart or DBus\n#  https://github.com/dotcloud/docker/issues/1724#issuecomment-26294856\nRUN apt-mark hold initscripts udev plymouth mountall\nRUN dpkg-divert --local --rename --add /sbin/initctl \\\n && ln -sf /bin/true /sbin/initctl\nRUN apt-get update \\\n && apt-get upgrade -y\nRUN apt-get install python-numpy software-properties-common libsecret-1-0 gnome-keyring -y\nRUN apt-get install --no-install-recommends supervisor openssh-server pwgen sudo vim-tiny net-tools lxde x11vnc xvfb gtk2-engines-murrine ttf-ubuntu-font-family libreoffice firefox xserver-xorg-video-dummy -y --force-yes \\\n && apt-get autoclean \\\n && apt-get autoremove \\\n && rm -rf /var/lib/apt/lists/*\nRUN mkdir /etc/startup.aux/\nRUN echo \"#Dummy\" > /etc/startup.aux/00.sh\nRUN chmod +x /etc/startup.aux/00.sh\nRUN mkdir -p /etc/supervisor/conf.d\nRUN rm /etc/supervisor/supervisord.conf\n#  create an ubuntu user who cannot sudo\n#  RUN useradd --create-home --shell /bin/bash --user-group ubuntu\nRUN useradd --create-home --shell /bin/bash --user-group --groups adm,sudo ubuntu\nRUN echo \"ubuntu:badpassword\" | chpasswd\nADD elixir-dev-anywhere-docker/startup.sh /\nADD elixir-dev-anywhere-docker/supervisord.conf.xorg /etc/supervisor/supervisord.conf\nADD elixir-dev-anywhere-docker/openbox-config /openbox-config\nRUN cp -r /openbox-config/.config ~ubuntu/\nRUN chown -R ubuntu ~ubuntu/.config ; chgrp -R ubuntu ~ubuntu/.config\nRUN rm -r /openbox-config\nENV HOME=\"/home/ubuntu\"\n#  Install phoenix, local Elixir hex and rebar (in ENV HOME)\nRUN mix archive.install --force https://github.com/phoenixframework/archives/raw/master/phx_new.ez \\\n && mix local.hex --force \\\n && mix local.rebar --force \\\n && mix hex.info\n#  intellij\nRUN sed 's/main$/main universe/' -i /etc/apt/sources.list \\\n && apt-get update -qq \\\n && echo 'Installing OS dependencies' \\\n && apt-get install sudo software-properties-common libxext-dev libxrender-dev libxslt1.1 libxtst-dev libgtk2.0-0 libcanberra-gtk-module -qq -y --fix-missing \\\n && echo 'Cleaning up' \\\n && apt-get clean -qq -y \\\n && apt-get autoclean -qq -y \\\n && apt-get autoremove -qq -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && rm -rf /tmp/*\nRUN mkdir -p /home/ubuntu/.IdeaIC2017.3/config/options \\\n && mkdir -p /home/ubuntu/.IdeaIC2017.3/config/plugins\nADD elixir-dev-anywhere-docker/jdk.table.xml /home/ubuntu/.IdeaIC2017.3/config/options/jdk.table.xml\nADD elixir-dev-anywhere-docker/jdk.table.xml /home/ubuntu/.jdk.table.xml\nADD elixir-dev-anywhere-docker/intellij/run /usr/local/bin/intellij\nADD elixir-dev-anywhere-docker/intellij-elixir.zip /home/ubuntu/.IdeaIC2017.3/config/plugins/intellij-elixir.zip\nRUN chmod +x /usr/local/bin/intellij\nRUN echo 'Downloading IntelliJ IDEA' \\\n && wget https://download.jetbrains.com/idea/ideaIC-2017.3.5.tar.gz -O /tmp/intellij.tar.gz -q \\\n && echo 'Installing IntelliJ IDEA' \\\n && mkdir -p /opt/intellij \\\n && tar -xf /tmp/intellij.tar.gz --strip-components=1 -C /opt/intellij \\\n && rm /tmp/intellij.tar.gz\nRUN echo 'Installing Elixir plugin' \\\n && cd /home/ubuntu/.IdeaIC2017.3/config/plugins/ \\\n && unzip -q intellij-elixir.zip \\\n && rm intellij-elixir.zip\n#  noVNC\nADD elixir-dev-anywhere-docker/noVNC /noVNC/\n#  store a password for the VNC service\nRUN mkdir /home/root\nRUN mkdir /home/root/.vnc\nRUN x11vnc -storepasswd badpassword /home/root/.vnc/passwd\nADD elixir-dev-anywhere-docker/xorg.conf /etc/X11/xorg.conf\n#  pgadmin3 and nano\n#  prerequisites to install a new version of pgadmin3 https://undebugable.wordpress.com/2016/01/11/pgadmin-3-warning-the-server-you-are-connecting-to-is-not-a-version-that-is-supported-by-this-release/\n#  add the repository\nRUN sh -c 'echo \"deb http://apt.postgresql.org/pub/repos/apt/ $(lsb_release -cs)-pgdg main\" > /etc/apt/sources.list.d/pgdg.list'\n#  install their key\nRUN wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add -\nRUN apt-get update \\\n && apt-get install --no-install-recommends nano postgresql-client pgadmin3 -y \\\n && rm -rf /var/lib/apt/lists/*\nENTRYPOINT [\"/startup.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"366b0abef865a8164d0e6f4b715af737","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:14.04\nMAINTAINER Stefan Houtzager <stefan.houtzager@gmail.com>\nENV DEBIAN_FRONTEND=\"noninteractive\"\nENV REFRESHED_AT=\"27-06-2017\"\nENV TERM=\"xterm\"\nWORKDIR /\nRUN apt-get update \\\n && apt-get upgrade -y \\\n && apt-get install wget curl git unzip -y\nRUN locale-gen en_US.UTF-8\nENV LANG=\"en_US.UTF-8\"\nENV LANGUAGE=\"en_US:en\"\nENV LC_ALL=\"en_US.UTF-8\"\n#   erlang install\nRUN echo \"deb http://packages.erlang-solutions.com/ubuntu trusty contrib\" >> /etc/apt/sources.list \\\n && apt-key adv --fetch-keys http://packages.erlang-solutions.com/ubuntu/erlang_solutions.asc \\\n && apt-get update -qq \\\n && apt-get install esl-erlang=1:20.3 build-essential wget -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#   Download and Install Specific Version of Elixir\nWORKDIR /elixir\nRUN wget -q https://github.com/elixir-lang/elixir/releases/download/v1.6.5/Precompiled.zip \\\n && unzip Precompiled.zip \\\n && rm -f Precompiled.zip \\\n && ln -s /elixir/bin/elixirc /usr/local/bin/elixirc \\\n && ln -s /elixir/bin/elixir /usr/local/bin/elixir \\\n && ln -s /elixir/bin/mix /usr/local/bin/mix \\\n && ln -s /elixir/bin/iex /usr/local/bin/iex\nWORKDIR /\n#   install Node.js (>= 5.0.0) and NPM in order to satisfy brunch.io dependencies\nRUN curl -sL https://deb.nodesource.com/setup_9.x | bash - \\\n && apt-get install nodejs inotify-tools -y\n#   setup our Ubuntu sources (ADD breaks caching)\nRUN echo \"deb http://archive.ubuntu.com/ubuntu trusty main restricted universe multiverse\\ndeb http://archive.ubuntu.com/ubuntu trusty-updates main restricted universe multiverse\\ndeb http://archive.ubuntu.com/ubuntu trusty-backports main restricted universe multiverse\\ndeb http://security.ubuntu.com/ubuntu trusty-security main restricted universe multiverse \\n\" > /etc/apt/sources.list\n#   no Upstart or DBus\n#   https://github.com/dotcloud/docker/issues/1724#issuecomment-26294856\nRUN apt-mark hold initscripts udev plymouth mountall\nRUN dpkg-divert --local --rename --add /sbin/initctl \\\n && ln -sf /bin/true /sbin/initctl\nRUN apt-get update \\\n && apt-get upgrade -y\nRUN apt-get install python-numpy software-properties-common libsecret-1-0 gnome-keyring -y\nRUN apt-get install --no-install-recommends supervisor openssh-server pwgen sudo vim-tiny net-tools lxde x11vnc xvfb gtk2-engines-murrine ttf-ubuntu-font-family libreoffice firefox xserver-xorg-video-dummy -y --force-yes \\\n && apt-get autoclean \\\n && apt-get autoremove \\\n && rm -rf /var/lib/apt/lists/*\nRUN mkdir /etc/startup.aux/\nRUN echo \"#Dummy\" > /etc/startup.aux/00.sh\nRUN chmod +x /etc/startup.aux/00.sh\nRUN mkdir -p /etc/supervisor/conf.d\nRUN rm /etc/supervisor/supervisord.conf\n#   create an ubuntu user who cannot sudo\n#   RUN useradd --create-home --shell /bin/bash --user-group ubuntu\nRUN useradd --create-home --shell /bin/bash --user-group --groups adm,sudo ubuntu\nRUN echo \"ubuntu:badpassword\" | chpasswd\nADD elixir-dev-anywhere-docker/startup.sh /\nADD elixir-dev-anywhere-docker/supervisord.conf.xorg /etc/supervisor/supervisord.conf\nADD elixir-dev-anywhere-docker/openbox-config /openbox-config\nRUN cp -r /openbox-config/.config ~ubuntu/\nRUN chown -R ubuntu ~ubuntu/.config ; chgrp -R ubuntu ~ubuntu/.config\nRUN rm -r /openbox-config\nENV HOME=\"/home/ubuntu\"\n#   Install phoenix, local Elixir hex and rebar (in ENV HOME)\nRUN mix archive.install --force https://github.com/phoenixframework/archives/raw/master/phx_new.ez \\\n && mix local.hex --force \\\n && mix local.rebar --force \\\n && mix hex.info\n#   intellij\nRUN sed 's/main$/main universe/' -i /etc/apt/sources.list \\\n && apt-get update -qq \\\n && echo 'Installing OS dependencies' \\\n && apt-get install sudo software-properties-common libxext-dev libxrender-dev libxslt1.1 libxtst-dev libgtk2.0-0 libcanberra-gtk-module -qq -y --fix-missing \\\n && echo 'Cleaning up' \\\n && apt-get clean -qq -y \\\n && apt-get autoclean -qq -y \\\n && apt-get autoremove -qq -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && rm -rf /tmp/*\nRUN mkdir -p /home/ubuntu/.IdeaIC2017.3/config/options \\\n && mkdir -p /home/ubuntu/.IdeaIC2017.3/config/plugins\nADD elixir-dev-anywhere-docker/jdk.table.xml /home/ubuntu/.IdeaIC2017.3/config/options/jdk.table.xml\nADD elixir-dev-anywhere-docker/jdk.table.xml /home/ubuntu/.jdk.table.xml\nADD elixir-dev-anywhere-docker/intellij/run /usr/local/bin/intellij\nADD elixir-dev-anywhere-docker/intellij-elixir.zip /home/ubuntu/.IdeaIC2017.3/config/plugins/intellij-elixir.zip\nRUN chmod +x /usr/local/bin/intellij\nRUN echo 'Downloading IntelliJ IDEA' \\\n && wget https://download.jetbrains.com/idea/ideaIC-2017.3.5.tar.gz -O /tmp/intellij.tar.gz -q \\\n && echo 'Installing IntelliJ IDEA' \\\n && mkdir -p /opt/intellij \\\n && tar -xf /tmp/intellij.tar.gz --strip-components=1 -C /opt/intellij \\\n && rm /tmp/intellij.tar.gz\nRUN echo 'Installing Elixir plugin' \\\n && cd /home/ubuntu/.IdeaIC2017.3/config/plugins/ \\\n && unzip -q intellij-elixir.zip \\\n && rm intellij-elixir.zip\n#   noVNC\nADD elixir-dev-anywhere-docker/noVNC /noVNC/\n#   store a password for the VNC service\nRUN mkdir /home/root\nRUN mkdir /home/root/.vnc\nRUN x11vnc -storepasswd badpassword /home/root/.vnc/passwd\nADD elixir-dev-anywhere-docker/xorg.conf /etc/X11/xorg.conf\n#   pgadmin3 and nano\n#   prerequisites to install a new version of pgadmin3 https://undebugable.wordpress.com/2016/01/11/pgadmin-3-warning-the-server-you-are-connecting-to-is-not-a-version-that-is-supported-by-this-release/\n#   add the repository\nRUN sh -c 'echo \"deb http://apt.postgresql.org/pub/repos/apt/ $(lsb_release -cs)-pgdg main\" > /etc/apt/sources.list.d/pgdg.list'\n#   install their key\nRUN wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add -\nRUN apt-get update \\\n && apt-get install --no-install-recommends nano postgresql-client pgadmin3 -y \\\n && rm -rf /var/lib/apt/lists/*\nENTRYPOINT [\"/startup.sh\"]\n","originalDockerfileUglifiedHash":"91c83a17fcd94bec7f369dc3789d5792","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/71a831fa1197bee474a710ea39655b809fcdb364.dockerfile"}