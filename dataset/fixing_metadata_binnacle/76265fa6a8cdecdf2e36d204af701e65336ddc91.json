{"seed":2673885262,"processedDockerfileHash":"821f9c85e03f7138e3867285d9993b7b","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Node.js 11.x Linux Dockerfile, for running Gulp & Tape, for Talkyard.\n#\n#   Unfortunately, the default Node.js Dockerfile creates a user 'node' with id 1000.\n#   However, most people on Linux have id 1000 already, so 'node' = 1000 results in an error\n#   in the entrypoint when it creates and su:s to a user with the same id as the host user [5RZ4HA9].\n#   As a workaround, I've copied node:8.1.0 to here, and commented out the creation of user 1000:\n#   (search for \"1000\" to find where)\n#  -----------------------------------------------------------------------------\n#   This, between ----, is a copy of:\n#     https://github.com/nodejs/docker-node/blob/master/11/alpine/Dockerfile\n#\n#   Copyright (c) 2015 Joyent, Inc.\n#   Copyright (c) 2015 Node.js contributors\n#   The MIT License (MIT)\n#   (see https://github.com/nodejs/docker-node/blob/master/LICENSE )\nFROM alpine:3.9\n#   Nodejs Fibers 3.x, used by wdio-sync, won't build with Node 12 yet,\n#   wait until the new wdio-sync version that uses Fibers 4.x has been released:\n#   https://github.com/webdriverio-boneyard/wdio-sync/commit/dce97e0482a712660d269beb9b575bd731f26977\n#   (unreleased).\n#  ENV NODE_VERSION 12.1.0\nENV NODE_VERSION=\"11.10.0\"\n#   Don't: (see comment above)\n#  RUN addgroup -g 1000 node \\\n#      && adduser -u 1000 -G node -s /bin/sh -D node \\\nRUN apk add libstdc++=8.3.0-r0 --no-cache \\\n && apk add binutils-gold=2.31.1-r2 curl=7.64.0-r5 g++=8.3.0-r0 gcc=8.3.0-r0 gnupg=2.2.19-r0 libgcc=8.3.0-r0 linux-headers=4.18.13-r1 make=4.2.1-r2 python --no-cache \\\n && for key in 94AE36675C464D64BAFA68DD7434390BDBE9B9C5 FD3A5288F042B6850C66B31F09FE44734EB7990E 71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 DD8F2338BAE7501E3DD5AC78C273792F7D83545D C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 B9AE9905FFD7803F25714661B63B535A4C206CA9 77984A986EBC2AA786BC0F66B01FBB92821C587A 8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600 4ED778F539E3634C779C87C6D7062848A1AB005C A48C2BEE680E841632CD4E44F07496B3EB3C1762 B9E2F5981AA6E0CD28160D9FF13993A75599653C; do gpg --batch --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys \"$key\" || gpg --batch --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys \"$key\" || gpg --batch --keyserver hkp://pgp.mit.edu:80 --recv-keys \"$key\" ; done \\\n && curl -fsSLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION.tar.xz\" \\\n && curl -fsSLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\" \\\n && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc \\\n && grep \" node-v$NODE_VERSION.tar.xz$\" SHASUMS256.txt | sha256sum -c - \\\n && tar -xf \"node-v$NODE_VERSION.tar.xz\" \\\n && cd \"node-v$NODE_VERSION\" \\\n && ./configure \\\n && make -j$( getconf _NPROCESSORS_ONLN ;) V= \\\n && make install \\\n && cd .. \\\n && rm -Rf \"node-v$NODE_VERSION\" \\\n && rm \"node-v$NODE_VERSION.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt\nENV YARN_VERSION=\"1.15.2\"\n#   (KEEPDEPS). curl = can debug, nice\nRUN apk add curl=7.64.0-r5 gnupg=2.2.19-r0 tar=1.32-r0 --no-cache \\\n && for key in 6A010C5166006599AA17F08146C2130DFD2497F5; do gpg --batch --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys \"$key\" || gpg --batch --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys \"$key\" || gpg --batch --keyserver hkp://pgp.mit.edu:80 --recv-keys \"$key\" ; done \\\n && curl -fsSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz\" \\\n && curl -fsSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz.asc\" \\\n && gpg --batch --verify yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz \\\n && mkdir -p /opt \\\n && tar -xzf yarn-v$YARN_VERSION.tar.gz -C /opt/ \\\n && ln -s /opt/yarn-v$YARN_VERSION/bin/yarn /usr/local/bin/yarn \\\n && ln -s /opt/yarn-v$YARN_VERSION/bin/yarnpkg /usr/local/bin/yarnpkg \\\n && rm yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz\n#   && apk del .build-deps-yarn  # no, don't (KEEPDEPS)\n#  -----------------------------------------------------------------------------\n#   Git is needed by gulpfile.js. The others are nice for troubleshooting, e.g. Tape security tests\n#   that send http requests â€” then curl is nice to have, so can replay the requests manually in Bash.\nRUN apk add bash=4.4.19-r1 tree=1.8.0-r0 curl=7.64.0-r5 net-tools=1.60_git20140218-r2 git=2.20.4-r0 --no-cache\n#   If this error happens:\n#   gulp[33]: ../src/node_contextify.cc:629:static void node::contextify::ContextifyScript::New(const v8::FunctionCallbackInfo<v8::Value>&): Assertion `args[1]->IsString()' failed.\n#   Then upgrade Gulp to a more recent version: yarn upgarde gulp\n#   Maybe delete node_modules, and docker/gulp-home\n#   More here: https://github.com/gulpjs/gulp/issues/2162  (happened for me with Ubuntu Linux)\nRUN cd /usr/local/bin/ \\\n && ln -s /opt/talkyard/server/node_modules/.bin/gulp ./\nWORKDIR /opt/talkyard/server/\nCOPY entrypoint.sh /docker-entrypoint.sh\nRUN chmod ugo+x /docker-entrypoint.sh\nENTRYPOINT [\"/docker-entrypoint.sh\"]\n#   For debugging test code, via `node --debug-brk --inspect=9229`. [8EA02R4]\nEXPOSE 9229/tcp\nCMD [\"echo\", \"'Specify\", \"a\", \"command\", \"in\", \"docker-compose.yml\", \"or\", \"on\", \"the\", \"command\", \"line\", \"instead.\", \"Bye.'\", \"&&\", \"exit\", \"0\"]\nRUN addgroup -S docker-user ; adduser -S -G docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Node.js 11.x Linux Dockerfile, for running Gulp & Tape, for Talkyard.\n#\n#  Unfortunately, the default Node.js Dockerfile creates a user 'node' with id 1000.\n#  However, most people on Linux have id 1000 already, so 'node' = 1000 results in an error\n#  in the entrypoint when it creates and su:s to a user with the same id as the host user [5RZ4HA9].\n#  As a workaround, I've copied node:8.1.0 to here, and commented out the creation of user 1000:\n#  (search for \"1000\" to find where)\n# -----------------------------------------------------------------------------\n#  This, between ----, is a copy of:\n#    https://github.com/nodejs/docker-node/blob/master/11/alpine/Dockerfile\n#\n#  Copyright (c) 2015 Joyent, Inc.\n#  Copyright (c) 2015 Node.js contributors\n#  The MIT License (MIT)\n#  (see https://github.com/nodejs/docker-node/blob/master/LICENSE )\nFROM alpine:3.9\n#  Nodejs Fibers 3.x, used by wdio-sync, won't build with Node 12 yet,\n#  wait until the new wdio-sync version that uses Fibers 4.x has been released:\n#  https://github.com/webdriverio-boneyard/wdio-sync/commit/dce97e0482a712660d269beb9b575bd731f26977\n#  (unreleased).\n# ENV NODE_VERSION 12.1.0\nENV NODE_VERSION=\"11.10.0\"\n#  Don't: (see comment above)\n# RUN addgroup -g 1000 node \\\n#     && adduser -u 1000 -G node -s /bin/sh -D node \\\nRUN apk add --no-cache libstdc++ \\\n && apk add --no-cache binutils-gold curl g++ gcc gnupg libgcc linux-headers make python \\\n && for key in 94AE36675C464D64BAFA68DD7434390BDBE9B9C5 FD3A5288F042B6850C66B31F09FE44734EB7990E 71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 DD8F2338BAE7501E3DD5AC78C273792F7D83545D C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 B9AE9905FFD7803F25714661B63B535A4C206CA9 77984A986EBC2AA786BC0F66B01FBB92821C587A 8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600 4ED778F539E3634C779C87C6D7062848A1AB005C A48C2BEE680E841632CD4E44F07496B3EB3C1762 B9E2F5981AA6E0CD28160D9FF13993A75599653C; do gpg --batch --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys \"$key\" || gpg --batch --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys \"$key\" || gpg --batch --keyserver hkp://pgp.mit.edu:80 --recv-keys \"$key\" ; done \\\n && curl -fsSLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION.tar.xz\" \\\n && curl -fsSLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\" \\\n && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc \\\n && grep \" node-v$NODE_VERSION.tar.xz$\" SHASUMS256.txt | sha256sum -c - \\\n && tar -xf \"node-v$NODE_VERSION.tar.xz\" \\\n && cd \"node-v$NODE_VERSION\" \\\n && ./configure \\\n && make -j$( getconf _NPROCESSORS_ONLN ;) V= \\\n && make install \\\n && cd .. \\\n && rm -Rf \"node-v$NODE_VERSION\" \\\n && rm \"node-v$NODE_VERSION.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt\nENV YARN_VERSION=\"1.15.2\"\n#  (KEEPDEPS). curl = can debug, nice\nRUN apk add --no-cache curl gnupg tar \\\n && for key in 6A010C5166006599AA17F08146C2130DFD2497F5; do gpg --batch --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys \"$key\" || gpg --batch --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys \"$key\" || gpg --batch --keyserver hkp://pgp.mit.edu:80 --recv-keys \"$key\" ; done \\\n && curl -fsSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz\" \\\n && curl -fsSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz.asc\" \\\n && gpg --batch --verify yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz \\\n && mkdir -p /opt \\\n && tar -xzf yarn-v$YARN_VERSION.tar.gz -C /opt/ \\\n && ln -s /opt/yarn-v$YARN_VERSION/bin/yarn /usr/local/bin/yarn \\\n && ln -s /opt/yarn-v$YARN_VERSION/bin/yarnpkg /usr/local/bin/yarnpkg \\\n && rm yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz\n#  && apk del .build-deps-yarn  # no, don't (KEEPDEPS)\n# -----------------------------------------------------------------------------\n#  Git is needed by gulpfile.js. The others are nice for troubleshooting, e.g. Tape security tests\n#  that send http requests â€” then curl is nice to have, so can replay the requests manually in Bash.\nRUN apk add --no-cache bash tree curl net-tools git\n#  If this error happens:\n#  gulp[33]: ../src/node_contextify.cc:629:static void node::contextify::ContextifyScript::New(const v8::FunctionCallbackInfo<v8::Value>&): Assertion `args[1]->IsString()' failed.\n#  Then upgrade Gulp to a more recent version: yarn upgarde gulp\n#  Maybe delete node_modules, and docker/gulp-home\n#  More here: https://github.com/gulpjs/gulp/issues/2162  (happened for me with Ubuntu Linux)\nRUN cd /usr/local/bin/ \\\n && ln -s /opt/talkyard/server/node_modules/.bin/gulp ./\nWORKDIR /opt/talkyard/server/\nCOPY entrypoint.sh /docker-entrypoint.sh\nRUN chmod ugo+x /docker-entrypoint.sh\nENTRYPOINT [\"/docker-entrypoint.sh\"]\n#  For debugging test code, via `node --debug-brk --inspect=9229`. [8EA02R4]\nEXPOSE 9229/tcp\nCMD [\"echo\", \"'Specify\", \"a\", \"command\", \"in\", \"docker-compose.yml\", \"or\", \"on\", \"the\", \"command\", \"line\", \"instead.\", \"Bye.'\", \"&&\", \"exit\", \"0\"]\n","injectedSmells":[],"originalDockerfileHash":"686544af4bd37c5327714a719f60404e","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Node.js 11.x Linux Dockerfile, for running Gulp & Tape, for Talkyard.\n#\n#   Unfortunately, the default Node.js Dockerfile creates a user 'node' with id 1000.\n#   However, most people on Linux have id 1000 already, so 'node' = 1000 results in an error\n#   in the entrypoint when it creates and su:s to a user with the same id as the host user [5RZ4HA9].\n#   As a workaround, I've copied node:8.1.0 to here, and commented out the creation of user 1000:\n#   (search for \"1000\" to find where)\n#  -----------------------------------------------------------------------------\n#   This, between ----, is a copy of:\n#     https://github.com/nodejs/docker-node/blob/master/11/alpine/Dockerfile\n#\n#   Copyright (c) 2015 Joyent, Inc.\n#   Copyright (c) 2015 Node.js contributors\n#   The MIT License (MIT)\n#   (see https://github.com/nodejs/docker-node/blob/master/LICENSE )\nFROM alpine:3.9\n#   Nodejs Fibers 3.x, used by wdio-sync, won't build with Node 12 yet,\n#   wait until the new wdio-sync version that uses Fibers 4.x has been released:\n#   https://github.com/webdriverio-boneyard/wdio-sync/commit/dce97e0482a712660d269beb9b575bd731f26977\n#   (unreleased).\n#  ENV NODE_VERSION 12.1.0\nENV NODE_VERSION=\"11.10.0\"\n#   Don't: (see comment above)\n#  RUN addgroup -g 1000 node \\\n#      && adduser -u 1000 -G node -s /bin/sh -D node \\\nRUN apk add --no-cache libstdc++ \\\n && apk add --no-cache binutils-gold curl g++ gcc gnupg libgcc linux-headers make python \\\n && for key in 94AE36675C464D64BAFA68DD7434390BDBE9B9C5 FD3A5288F042B6850C66B31F09FE44734EB7990E 71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 DD8F2338BAE7501E3DD5AC78C273792F7D83545D C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 B9AE9905FFD7803F25714661B63B535A4C206CA9 77984A986EBC2AA786BC0F66B01FBB92821C587A 8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600 4ED778F539E3634C779C87C6D7062848A1AB005C A48C2BEE680E841632CD4E44F07496B3EB3C1762 B9E2F5981AA6E0CD28160D9FF13993A75599653C; do gpg --batch --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys \"$key\" || gpg --batch --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys \"$key\" || gpg --batch --keyserver hkp://pgp.mit.edu:80 --recv-keys \"$key\" ; done \\\n && curl -fsSLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION.tar.xz\" \\\n && curl -fsSLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\" \\\n && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc \\\n && grep \" node-v$NODE_VERSION.tar.xz$\" SHASUMS256.txt | sha256sum -c - \\\n && tar -xf \"node-v$NODE_VERSION.tar.xz\" \\\n && cd \"node-v$NODE_VERSION\" \\\n && ./configure \\\n && make -j$( getconf _NPROCESSORS_ONLN ;) V= \\\n && make install \\\n && cd .. \\\n && rm -Rf \"node-v$NODE_VERSION\" \\\n && rm \"node-v$NODE_VERSION.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt\nENV YARN_VERSION=\"1.15.2\"\n#   (KEEPDEPS). curl = can debug, nice\nRUN apk add --no-cache curl gnupg tar \\\n && for key in 6A010C5166006599AA17F08146C2130DFD2497F5; do gpg --batch --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys \"$key\" || gpg --batch --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys \"$key\" || gpg --batch --keyserver hkp://pgp.mit.edu:80 --recv-keys \"$key\" ; done \\\n && curl -fsSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz\" \\\n && curl -fsSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz.asc\" \\\n && gpg --batch --verify yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz \\\n && mkdir -p /opt \\\n && tar -xzf yarn-v$YARN_VERSION.tar.gz -C /opt/ \\\n && ln -s /opt/yarn-v$YARN_VERSION/bin/yarn /usr/local/bin/yarn \\\n && ln -s /opt/yarn-v$YARN_VERSION/bin/yarnpkg /usr/local/bin/yarnpkg \\\n && rm yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz\n#   && apk del .build-deps-yarn  # no, don't (KEEPDEPS)\n#  -----------------------------------------------------------------------------\n#   Git is needed by gulpfile.js. The others are nice for troubleshooting, e.g. Tape security tests\n#   that send http requests â€” then curl is nice to have, so can replay the requests manually in Bash.\nRUN apk add --no-cache bash tree curl net-tools git\n#   If this error happens:\n#   gulp[33]: ../src/node_contextify.cc:629:static void node::contextify::ContextifyScript::New(const v8::FunctionCallbackInfo<v8::Value>&): Assertion `args[1]->IsString()' failed.\n#   Then upgrade Gulp to a more recent version: yarn upgarde gulp\n#   Maybe delete node_modules, and docker/gulp-home\n#   More here: https://github.com/gulpjs/gulp/issues/2162  (happened for me with Ubuntu Linux)\nRUN cd /usr/local/bin/ \\\n && ln -s /opt/talkyard/server/node_modules/.bin/gulp ./\nWORKDIR /opt/talkyard/server/\nCOPY entrypoint.sh /docker-entrypoint.sh\nRUN chmod ugo+x /docker-entrypoint.sh\nENTRYPOINT [\"/docker-entrypoint.sh\"]\n#   For debugging test code, via `node --debug-brk --inspect=9229`. [8EA02R4]\nEXPOSE 9229/tcp\nCMD [\"echo\", \"'Specify\", \"a\", \"command\", \"in\", \"docker-compose.yml\", \"or\", \"on\", \"the\", \"command\", \"line\", \"instead.\", \"Bye.'\", \"&&\", \"exit\", \"0\"]\n","originalDockerfileUglifiedHash":"8d1f7c27e9b26e86e6753bb0a4e96b25","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/76265fa6a8cdecdf2e36d204af701e65336ddc91.dockerfile"}