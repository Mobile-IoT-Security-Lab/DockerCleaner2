{"seed":46309419,"processedDockerfileHash":"d5b89a8e4c24a5e27c6077f1e711f69d","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","use-copy-instead-of-add","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   Dockerfile to build aria2 Windows binary using ubuntu mingw-w64\n#   cross compiler chain.\n#\n#   $ sudo docker build -t aria2-mingw - < Dockerfile.mingw\n#\n#   After successful build, windows binary is located at\n#   /aria2/src/aria2c.exe.  You can copy the binary using following\n#   commands:\n#\n#   $ id=$(sudo docker create aria2-mingw)\n#   $ sudo docker cp $id:/aria2/src/aria2c.exe <dest>\n#   $ sudo docker rm -v $id\nFROM ubuntu:16.04\nMAINTAINER Tatsuhiro Tsujikawa\n#   Change HOST to x86_64-w64-mingw32 to build 64-bit binary\nENV HOST=\"i686-w64-mingw32\"\n#   It would be better to use nearest ubuntu archive mirror for faster\n#   downloads.\n#   RUN sed -ie 's/archive\\.ubuntu/jp.archive.ubuntu/g' /etc/apt/sources.list\nRUN apt-get update \\\n && apt-get install --no-install-recommends make=4.1-6 binutils=2.26.1-1ubuntu1~16.04.8 autoconf=2.69-9 automake=1:1.15-4ubuntu1 autotools-dev=20150820.1 libtool=2.4.6-0.1 pkg-config=0.29.1-0ubuntu1 git=1:2.7.4-0ubuntu1.10 curl=7.47.0-1ubuntu2.19 dpkg-dev=1.18.4ubuntu1.7 gcc-mingw-w64=5.3.1-8ubuntu3+17 autopoint=0.19.7-2ubuntu3.1 libcppunit-dev=1.13.2-2.1 libxml2-dev=2.9.3+dfsg1-1ubuntu0.7 libgcrypt11-dev=1.5.4-3+really1.6.5-2ubuntu0.6 lzip=1.17-1 -y\nRUN curl -L -O https://gmplib.org/download/gmp/gmp-6.1.2.tar.lz \\\n && curl -L -O https://github.com/libexpat/libexpat/releases/download/R_2_2_5/expat-2.2.5.tar.bz2 \\\n && curl -L -O https://www.sqlite.org/2018/sqlite-autoconf-3230100.tar.gz \\\n && curl -L -O http://zlib.net/zlib-1.2.11.tar.gz \\\n && curl -L -O https://c-ares.haxx.se/download/c-ares-1.14.0.tar.gz \\\n && curl -L -O http://libssh2.org/download/libssh2-1.8.0.tar.gz\nRUN tar xf gmp-6.1.2.tar.lz \\\n && cd gmp-6.1.2 \\\n && ./configure --disable-shared --enable-static --prefix=/usr/local/$HOST --host=$HOST --disable-cxx --enable-fat CFLAGS=\"-mtune=generic -O2 -g0\" \\\n && make install\nRUN tar xf expat-2.2.5.tar.bz2 \\\n && cd expat-2.2.5 \\\n && ./configure --disable-shared --enable-static --prefix=/usr/local/$HOST --host=$HOST --build=`dpkg-architecture -qDEB_BUILD_GNU_TYPE ` \\\n && make install\nRUN tar xf sqlite-autoconf-3230100.tar.gz \\\n && cd sqlite-autoconf-3230100 \\\n && ./configure --disable-shared --enable-static --prefix=/usr/local/$HOST --host=$HOST --build=`dpkg-architecture -qDEB_BUILD_GNU_TYPE ` \\\n && make install\nRUN tar xf zlib-1.2.11.tar.gz \\\n && cd zlib-1.2.11 \\\n && CC=$HOST-gcc AR=$HOST-ar LD=$HOST-ld RANLIB=$HOST-ranlib STRIP=$HOST-strip ./configure --prefix=/usr/local/$HOST --libdir=/usr/local/$HOST/lib --includedir=/usr/local/$HOST/include --static \\\n && make install\nRUN tar xf c-ares-1.14.0.tar.gz \\\n && cd c-ares-1.14.0 \\\n && ./configure --disable-shared --enable-static --without-random --prefix=/usr/local/$HOST --host=$HOST --build=`dpkg-architecture -qDEB_BUILD_GNU_TYPE ` LIBS=\"-lws2_32\" \\\n && make install\nRUN tar xf libssh2-1.8.0.tar.gz \\\n && cd libssh2-1.8.0 \\\n && ./configure --disable-shared --enable-static --prefix=/usr/local/$HOST --host=$HOST --build=`dpkg-architecture -qDEB_BUILD_GNU_TYPE ` --without-openssl --with-wincng LIBS=\"-lws2_32\" \\\n && make install\nRUN which wget &> /dev/null || apt-get install --no-install-recommends wget=1.20.3 ; wget --no-verbose --output-document version.json https://api.github.com/repos/aria2/aria2/git/refs/heads/master\nRUN git clone https://github.com/aria2/aria2 \\\n && cd aria2 \\\n && autoreconf -i \\\n && ./mingw-config \\\n && make \\\n && $HOST-strip src/aria2c.exe\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Dockerfile to build aria2 Windows binary using ubuntu mingw-w64\n#  cross compiler chain.\n#\n#  $ sudo docker build -t aria2-mingw - < Dockerfile.mingw\n#\n#  After successful build, windows binary is located at\n#  /aria2/src/aria2c.exe.  You can copy the binary using following\n#  commands:\n#\n#  $ id=$(sudo docker create aria2-mingw)\n#  $ sudo docker cp $id:/aria2/src/aria2c.exe <dest>\n#  $ sudo docker rm -v $id\nFROM ubuntu:16.04\nMAINTAINER Tatsuhiro Tsujikawa\n#  Change HOST to x86_64-w64-mingw32 to build 64-bit binary\nENV HOST=\"i686-w64-mingw32\"\n#  It would be better to use nearest ubuntu archive mirror for faster\n#  downloads.\n#  RUN sed -ie 's/archive\\.ubuntu/jp.archive.ubuntu/g' /etc/apt/sources.list\nRUN apt-get update \\\n && apt-get install make binutils autoconf automake autotools-dev libtool pkg-config git curl dpkg-dev gcc-mingw-w64 autopoint libcppunit-dev libxml2-dev libgcrypt11-dev lzip -y\nRUN curl -L -O https://gmplib.org/download/gmp/gmp-6.1.2.tar.lz \\\n && curl -L -O https://github.com/libexpat/libexpat/releases/download/R_2_2_5/expat-2.2.5.tar.bz2 \\\n && curl -L -O https://www.sqlite.org/2018/sqlite-autoconf-3230100.tar.gz \\\n && curl -L -O http://zlib.net/zlib-1.2.11.tar.gz \\\n && curl -L -O https://c-ares.haxx.se/download/c-ares-1.14.0.tar.gz \\\n && curl -L -O http://libssh2.org/download/libssh2-1.8.0.tar.gz\nRUN tar xf gmp-6.1.2.tar.lz \\\n && cd gmp-6.1.2 \\\n && ./configure --disable-shared --enable-static --prefix=/usr/local/$HOST --host=$HOST --disable-cxx --enable-fat CFLAGS=\"-mtune=generic -O2 -g0\" \\\n && make install\nRUN tar xf expat-2.2.5.tar.bz2 \\\n && cd expat-2.2.5 \\\n && ./configure --disable-shared --enable-static --prefix=/usr/local/$HOST --host=$HOST --build=`dpkg-architecture -qDEB_BUILD_GNU_TYPE ` \\\n && make install\nRUN tar xf sqlite-autoconf-3230100.tar.gz \\\n && cd sqlite-autoconf-3230100 \\\n && ./configure --disable-shared --enable-static --prefix=/usr/local/$HOST --host=$HOST --build=`dpkg-architecture -qDEB_BUILD_GNU_TYPE ` \\\n && make install\nRUN tar xf zlib-1.2.11.tar.gz \\\n && cd zlib-1.2.11 \\\n && CC=$HOST-gcc AR=$HOST-ar LD=$HOST-ld RANLIB=$HOST-ranlib STRIP=$HOST-strip ./configure --prefix=/usr/local/$HOST --libdir=/usr/local/$HOST/lib --includedir=/usr/local/$HOST/include --static \\\n && make install\nRUN tar xf c-ares-1.14.0.tar.gz \\\n && cd c-ares-1.14.0 \\\n && ./configure --disable-shared --enable-static --without-random --prefix=/usr/local/$HOST --host=$HOST --build=`dpkg-architecture -qDEB_BUILD_GNU_TYPE ` LIBS=\"-lws2_32\" \\\n && make install\nRUN tar xf libssh2-1.8.0.tar.gz \\\n && cd libssh2-1.8.0 \\\n && ./configure --disable-shared --enable-static --prefix=/usr/local/$HOST --host=$HOST --build=`dpkg-architecture -qDEB_BUILD_GNU_TYPE ` --without-openssl --with-wincng LIBS=\"-lws2_32\" \\\n && make install\nADD https://api.github.com/repos/aria2/aria2/git/refs/heads/master version.json\nRUN git clone https://github.com/aria2/aria2 \\\n && cd aria2 \\\n && autoreconf -i \\\n && ./mingw-config \\\n && make \\\n && $HOST-strip src/aria2c.exe\n","injectedSmells":[],"originalDockerfileHash":"db54578f504a0c837f39d08e02c2a02b","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Dockerfile to build aria2 Windows binary using ubuntu mingw-w64\n#   cross compiler chain.\n#\n#   $ sudo docker build -t aria2-mingw - < Dockerfile.mingw\n#\n#   After successful build, windows binary is located at\n#   /aria2/src/aria2c.exe.  You can copy the binary using following\n#   commands:\n#\n#   $ id=$(sudo docker create aria2-mingw)\n#   $ sudo docker cp $id:/aria2/src/aria2c.exe <dest>\n#   $ sudo docker rm -v $id\nFROM ubuntu:16.04\nMAINTAINER Tatsuhiro Tsujikawa\n#   Change HOST to x86_64-w64-mingw32 to build 64-bit binary\nENV HOST=\"i686-w64-mingw32\"\n#   It would be better to use nearest ubuntu archive mirror for faster\n#   downloads.\n#   RUN sed -ie 's/archive\\.ubuntu/jp.archive.ubuntu/g' /etc/apt/sources.list\nRUN apt-get update \\\n && apt-get install make binutils autoconf automake autotools-dev libtool pkg-config git curl dpkg-dev gcc-mingw-w64 autopoint libcppunit-dev libxml2-dev libgcrypt11-dev lzip -y\nRUN curl -L -O https://gmplib.org/download/gmp/gmp-6.1.2.tar.lz \\\n && curl -L -O https://github.com/libexpat/libexpat/releases/download/R_2_2_5/expat-2.2.5.tar.bz2 \\\n && curl -L -O https://www.sqlite.org/2018/sqlite-autoconf-3230100.tar.gz \\\n && curl -L -O http://zlib.net/zlib-1.2.11.tar.gz \\\n && curl -L -O https://c-ares.haxx.se/download/c-ares-1.14.0.tar.gz \\\n && curl -L -O http://libssh2.org/download/libssh2-1.8.0.tar.gz\nRUN tar xf gmp-6.1.2.tar.lz \\\n && cd gmp-6.1.2 \\\n && ./configure --disable-shared --enable-static --prefix=/usr/local/$HOST --host=$HOST --disable-cxx --enable-fat CFLAGS=\"-mtune=generic -O2 -g0\" \\\n && make install\nRUN tar xf expat-2.2.5.tar.bz2 \\\n && cd expat-2.2.5 \\\n && ./configure --disable-shared --enable-static --prefix=/usr/local/$HOST --host=$HOST --build=`dpkg-architecture -qDEB_BUILD_GNU_TYPE ` \\\n && make install\nRUN tar xf sqlite-autoconf-3230100.tar.gz \\\n && cd sqlite-autoconf-3230100 \\\n && ./configure --disable-shared --enable-static --prefix=/usr/local/$HOST --host=$HOST --build=`dpkg-architecture -qDEB_BUILD_GNU_TYPE ` \\\n && make install\nRUN tar xf zlib-1.2.11.tar.gz \\\n && cd zlib-1.2.11 \\\n && CC=$HOST-gcc AR=$HOST-ar LD=$HOST-ld RANLIB=$HOST-ranlib STRIP=$HOST-strip ./configure --prefix=/usr/local/$HOST --libdir=/usr/local/$HOST/lib --includedir=/usr/local/$HOST/include --static \\\n && make install\nRUN tar xf c-ares-1.14.0.tar.gz \\\n && cd c-ares-1.14.0 \\\n && ./configure --disable-shared --enable-static --without-random --prefix=/usr/local/$HOST --host=$HOST --build=`dpkg-architecture -qDEB_BUILD_GNU_TYPE ` LIBS=\"-lws2_32\" \\\n && make install\nRUN tar xf libssh2-1.8.0.tar.gz \\\n && cd libssh2-1.8.0 \\\n && ./configure --disable-shared --enable-static --prefix=/usr/local/$HOST --host=$HOST --build=`dpkg-architecture -qDEB_BUILD_GNU_TYPE ` --without-openssl --with-wincng LIBS=\"-lws2_32\" \\\n && make install\nADD https://api.github.com/repos/aria2/aria2/git/refs/heads/master version.json\nRUN git clone https://github.com/aria2/aria2 \\\n && cd aria2 \\\n && autoreconf -i \\\n && ./mingw-config \\\n && make \\\n && $HOST-strip src/aria2c.exe\n","originalDockerfileUglifiedHash":"f94846912f8177bbaca2ec5f2ef98667","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/f38643535ef56d4a5ad0a143f2223514bd392c9c.dockerfile"}