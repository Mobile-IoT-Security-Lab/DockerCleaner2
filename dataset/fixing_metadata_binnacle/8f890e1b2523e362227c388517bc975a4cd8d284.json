{"seed":3892113183,"processedDockerfileHash":"10c2b91f31d9df22037c84c58f543f46","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM debian:jessie\n#   ... from https://github.com/docker-library/php/blob/master/7.0/fpm/Dockerfile\n#   We need to build this ourselves as php must have bcmath enabled at compile\n#   time as the code not just the bindings are built in to the php binary\n#\n#   NOTE TO DEVS: if you intend to make changes, compare the file to the current\n#   master version at the link above, to make sure you pull in other changes too.\n#\n#   - reducing layers\n#   - with bcmath and zip enabled\n#   - with bzip2 installed\n#   - with work dir changed\n#\n#   --enable-mysqlnd: included here because it's also a plugin, not just an extension.\n#                    This makes it harder to compile after php is compiled.\n#\n#   --enable-mbstring: included here because of pecl issue.\n#                      see https://github.com/docker-library/php/issues/195\n#\nMAINTAINER jinal--shah <jnshah@gmail.com>\nLABEL Name=\"php7-fpm-deb\" \\\n      Vendor=\"sortuniq\" \\\n      Version=\"0.0.1\" \\\n      Description=\"provides php-fpm on debian base - entrypoint is php-fpm\"\n#   build instructions:\n#   img_name=$(grep '^LABEL ' ./Dockerfile | sed -e 's/.*Name=\"\\([^\"]\\+\\).*/\\1/')\n#   tag_version=$(grep '^LABEL ' ./Dockerfile | sed -e 's/.*Version=\"\\([^\"]\\+\\).*/\\1/')\n#   docker build --no-cache=true --rm --tag $img_name:$tag_version .\n#   docker rmi $img_name:stable 2>/dev/null\n#   docker tag $img_name:$tag_version $img_name:stable\n#   persistent / runtime deps\nENV PHPIZE_DEPS=\"autoconf file g++ gcc libc-dev make pkg-config re2c\" \\\n    BUILD_DEPS=\"libcurl4-openssl-dev libedit-dev libsqlite3-dev libssl-dev libxml2-dev xz-utils\" \\\n    PHP_INI_DIR=\"/usr/local/etc/php\" \\\n    PHP_MODS=\"--enable-bcmath --enable-fpm --enable-zip\" \\\n    SET_FPM_USER=\"--with-fpm-user=www-data --with-fpm-group=www-data\" \\\n    GPG_KEYS=\"1A4E8B7277C42E53DBA9C7B9BCAA30EA9C0D5763\" \\\n    PHP_VERSION=\"7.0.8\" \\\n    PHP_FILENAME=\"php-7.0.8.tar.xz\" \\\n    PHP_SHA256=\"0a2142c458b0846f556b16da1c927d74c101aa951bb840549abe5c58584fb394\"\nENV PHP_EXTRA_CONFIGURE_ARGS=\"${PHP_MODS} ${SET_FPM_USER}\" \\\n    PHP_URI=\"http://php.net/get/${PHP_FILENAME}/from/this/mirror\" \\\n    PHP_ASC_URI=\"http://php.net/get/${PHP_FILENAME}.asc/from/this/mirror\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends bzip2 ca-certificates curl libedit2 libsqlite3-0 libxml2 unzip $PHPIZE_DEPS $BUILD_DEPS -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && mkdir -p $PHP_INI_DIR/conf.d \\\n && curl -fSL \"$PHP_URI\" -o \"$PHP_FILENAME\" \\\n && echo \"$PHP_SHA256 *$PHP_FILENAME\" | sha256sum -c - \\\n && curl -fSL \"$PHP_ASC_URI\" -o \"$PHP_FILENAME.asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && for key in $GPG_KEYS; do gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\" ; done \\\n && gpg --batch --verify \"$PHP_FILENAME.asc\" \"$PHP_FILENAME\" \\\n && rm -r \"$GNUPGHOME\" \"$PHP_FILENAME.asc\" \\\n && mkdir -p /usr/src/php \\\n && tar -xf \"$PHP_FILENAME\" -C /usr/src/php --strip-components=1 \\\n && rm \"$PHP_FILENAME\" \\\n && cd /usr/src/php \\\n && ./configure --with-config-file-path=\"$PHP_INI_DIR\" --with-config-file-scan-dir=\"$PHP_INI_DIR/conf.d\" $PHP_EXTRA_CONFIGURE_ARGS --disable-cgi --enable-mysqlnd --enable-mbstring --with-curl --with-libedit --with-openssl --with-zlib \\\n && make -j\"$( nproc ;)\" \\\n && make install \\\n && { find /usr/local/bin /usr/local/sbin -type f -executable -exec strip --strip-all '{}' + || true ; } \\\n && make clean \\\n && apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false -o APT::AutoRemove::SuggestsImportant=false $BUILD_DEPS\nCOPY docker-php-ext-* /usr/local/bin/\nWORKDIR /srv/eurostar/htdocs\nRUN set -ex \\\n && cd /usr/local/etc \\\n && if [ -d php-fpm.d ] ; then sed 's!=NONE/!=!g' php-fpm.conf.default | tee php-fpm.conf > /dev/null;cp php-fpm.d/www.conf.default php-fpm.d/www.conf ; else mkdir php-fpm.d ;cp php-fpm.conf.default php-fpm.d/www.conf ;{ echo '[global]' ;echo 'include=etc/php-fpm.d/*.conf' ; } | tee php-fpm.conf ; fi \\\n && { echo '[global]' ;echo 'error_log = /proc/self/fd/2' ;echo ;echo '[www]' ;echo '; if we send this to /proc/self/fd/1, it never appears' ;echo 'access.log = /proc/self/fd/2' ;echo ;echo 'clear_env = no' ;echo ;echo '; Ensure worker stdout and stderr are sent to the main error log.' ;echo 'catch_workers_output = yes' ; } | tee php-fpm.d/docker.conf \\\n && { echo '[global]' ;echo 'daemonize = no' ;echo ;echo '[www]' ;echo 'listen = [::]:9000' ; } | tee php-fpm.d/zz-docker.conf\nEXPOSE 9000/tcp\nCMD [\"php-fpm\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM debian:jessie\n#  ... from https://github.com/docker-library/php/blob/master/7.0/fpm/Dockerfile\n#  We need to build this ourselves as php must have bcmath enabled at compile\n#  time as the code not just the bindings are built in to the php binary\n#\n#  NOTE TO DEVS: if you intend to make changes, compare the file to the current\n#  master version at the link above, to make sure you pull in other changes too.\n#\n#  - reducing layers\n#  - with bcmath and zip enabled\n#  - with bzip2 installed\n#  - with work dir changed\n#\n#  --enable-mysqlnd: included here because it's also a plugin, not just an extension.\n#                   This makes it harder to compile after php is compiled.\n#\n#  --enable-mbstring: included here because of pecl issue.\n#                     see https://github.com/docker-library/php/issues/195\n#\nMAINTAINER jinal--shah <jnshah@gmail.com>\nLABEL Name=\"php7-fpm-deb\" \\\n      Vendor=\"sortuniq\" \\\n      Version=\"0.0.1\" \\\n      Description=\"provides php-fpm on debian base - entrypoint is php-fpm\"\n#  build instructions:\n#  img_name=$(grep '^LABEL ' ./Dockerfile | sed -e 's/.*Name=\"\\([^\"]\\+\\).*/\\1/')\n#  tag_version=$(grep '^LABEL ' ./Dockerfile | sed -e 's/.*Version=\"\\([^\"]\\+\\).*/\\1/')\n#  docker build --no-cache=true --rm --tag $img_name:$tag_version .\n#  docker rmi $img_name:stable 2>/dev/null\n#  docker tag $img_name:$tag_version $img_name:stable\n#  persistent / runtime deps\nENV PHPIZE_DEPS=\"autoconf file g++ gcc libc-dev make pkg-config re2c\" \\\n    BUILD_DEPS=\"libcurl4-openssl-dev libedit-dev libsqlite3-dev libssl-dev libxml2-dev xz-utils\" \\\n    PHP_INI_DIR=\"/usr/local/etc/php\" \\\n    PHP_MODS=\"--enable-bcmath --enable-fpm --enable-zip\" \\\n    SET_FPM_USER=\"--with-fpm-user=www-data --with-fpm-group=www-data\" \\\n    GPG_KEYS=\"1A4E8B7277C42E53DBA9C7B9BCAA30EA9C0D5763\" \\\n    PHP_VERSION=\"7.0.8\" \\\n    PHP_FILENAME=\"php-7.0.8.tar.xz\" \\\n    PHP_SHA256=\"0a2142c458b0846f556b16da1c927d74c101aa951bb840549abe5c58584fb394\"\nENV PHP_EXTRA_CONFIGURE_ARGS=\"${PHP_MODS} ${SET_FPM_USER}\" \\\n    PHP_URI=\"http://php.net/get/${PHP_FILENAME}/from/this/mirror\" \\\n    PHP_ASC_URI=\"http://php.net/get/${PHP_FILENAME}.asc/from/this/mirror\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends bzip2 ca-certificates curl libedit2 libsqlite3-0 libxml2 unzip $PHPIZE_DEPS $BUILD_DEPS -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && mkdir -p $PHP_INI_DIR/conf.d \\\n && curl -fSL \"$PHP_URI\" -o \"$PHP_FILENAME\" \\\n && echo \"$PHP_SHA256 *$PHP_FILENAME\" | sha256sum -c - \\\n && curl -fSL \"$PHP_ASC_URI\" -o \"$PHP_FILENAME.asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && for key in $GPG_KEYS; do gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\" ; done \\\n && gpg --batch --verify \"$PHP_FILENAME.asc\" \"$PHP_FILENAME\" \\\n && rm -r \"$GNUPGHOME\" \"$PHP_FILENAME.asc\" \\\n && mkdir -p /usr/src/php \\\n && tar -xf \"$PHP_FILENAME\" -C /usr/src/php --strip-components=1 \\\n && rm \"$PHP_FILENAME\" \\\n && cd /usr/src/php \\\n && ./configure --with-config-file-path=\"$PHP_INI_DIR\" --with-config-file-scan-dir=\"$PHP_INI_DIR/conf.d\" $PHP_EXTRA_CONFIGURE_ARGS --disable-cgi --enable-mysqlnd --enable-mbstring --with-curl --with-libedit --with-openssl --with-zlib \\\n && make -j\"$( nproc ;)\" \\\n && make install \\\n && { find /usr/local/bin /usr/local/sbin -type f -executable -exec strip --strip-all '{}' + || true ; } \\\n && make clean \\\n && apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false -o APT::AutoRemove::SuggestsImportant=false $BUILD_DEPS\nCOPY docker-php-ext-* /usr/local/bin/\nWORKDIR /srv/eurostar/htdocs\nRUN set -ex \\\n && cd /usr/local/etc \\\n && if [ -d php-fpm.d ] ; then sed 's!=NONE/!=!g' php-fpm.conf.default | tee php-fpm.conf > /dev/null;cp php-fpm.d/www.conf.default php-fpm.d/www.conf ; else mkdir php-fpm.d ;cp php-fpm.conf.default php-fpm.d/www.conf ;{ echo '[global]' ;echo 'include=etc/php-fpm.d/*.conf' ; } | tee php-fpm.conf ; fi \\\n && { echo '[global]' ;echo 'error_log = /proc/self/fd/2' ;echo ;echo '[www]' ;echo '; if we send this to /proc/self/fd/1, it never appears' ;echo 'access.log = /proc/self/fd/2' ;echo ;echo 'clear_env = no' ;echo ;echo '; Ensure worker stdout and stderr are sent to the main error log.' ;echo 'catch_workers_output = yes' ; } | tee php-fpm.d/docker.conf \\\n && { echo '[global]' ;echo 'daemonize = no' ;echo ;echo '[www]' ;echo 'listen = [::]:9000' ; } | tee php-fpm.d/zz-docker.conf\nEXPOSE 9000/tcp\nCMD [\"php-fpm\"]\n","injectedSmells":[],"originalDockerfileHash":"2d7eb4b150cbdfacb8527826e7fcef1f","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM debian:jessie\n#   ... from https://github.com/docker-library/php/blob/master/7.0/fpm/Dockerfile\n#   We need to build this ourselves as php must have bcmath enabled at compile\n#   time as the code not just the bindings are built in to the php binary\n#\n#   NOTE TO DEVS: if you intend to make changes, compare the file to the current\n#   master version at the link above, to make sure you pull in other changes too.\n#\n#   - reducing layers\n#   - with bcmath and zip enabled\n#   - with bzip2 installed\n#   - with work dir changed\n#\n#   --enable-mysqlnd: included here because it's also a plugin, not just an extension.\n#                    This makes it harder to compile after php is compiled.\n#\n#   --enable-mbstring: included here because of pecl issue.\n#                      see https://github.com/docker-library/php/issues/195\n#\nMAINTAINER jinal--shah <jnshah@gmail.com>\nLABEL Name=\"php7-fpm-deb\" \\\n      Vendor=\"sortuniq\" \\\n      Version=\"0.0.1\" \\\n      Description=\"provides php-fpm on debian base - entrypoint is php-fpm\"\n#   build instructions:\n#   img_name=$(grep '^LABEL ' ./Dockerfile | sed -e 's/.*Name=\"\\([^\"]\\+\\).*/\\1/')\n#   tag_version=$(grep '^LABEL ' ./Dockerfile | sed -e 's/.*Version=\"\\([^\"]\\+\\).*/\\1/')\n#   docker build --no-cache=true --rm --tag $img_name:$tag_version .\n#   docker rmi $img_name:stable 2>/dev/null\n#   docker tag $img_name:$tag_version $img_name:stable\n#   persistent / runtime deps\nENV PHPIZE_DEPS=\"autoconf file g++ gcc libc-dev make pkg-config re2c\" \\\n    BUILD_DEPS=\"libcurl4-openssl-dev libedit-dev libsqlite3-dev libssl-dev libxml2-dev xz-utils\" \\\n    PHP_INI_DIR=\"/usr/local/etc/php\" \\\n    PHP_MODS=\"--enable-bcmath --enable-fpm --enable-zip\" \\\n    SET_FPM_USER=\"--with-fpm-user=www-data --with-fpm-group=www-data\" \\\n    GPG_KEYS=\"1A4E8B7277C42E53DBA9C7B9BCAA30EA9C0D5763\" \\\n    PHP_VERSION=\"7.0.8\" \\\n    PHP_FILENAME=\"php-7.0.8.tar.xz\" \\\n    PHP_SHA256=\"0a2142c458b0846f556b16da1c927d74c101aa951bb840549abe5c58584fb394\"\nENV PHP_EXTRA_CONFIGURE_ARGS=\"${PHP_MODS} ${SET_FPM_USER}\" \\\n    PHP_URI=\"http://php.net/get/${PHP_FILENAME}/from/this/mirror\" \\\n    PHP_ASC_URI=\"http://php.net/get/${PHP_FILENAME}.asc/from/this/mirror\"\nRUN apt-get update \\\n && apt-get install --no-install-recommends bzip2 ca-certificates curl libedit2 libsqlite3-0 libxml2 unzip $PHPIZE_DEPS $BUILD_DEPS -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && mkdir -p $PHP_INI_DIR/conf.d \\\n && curl -fSL \"$PHP_URI\" -o \"$PHP_FILENAME\" \\\n && echo \"$PHP_SHA256 *$PHP_FILENAME\" | sha256sum -c - \\\n && curl -fSL \"$PHP_ASC_URI\" -o \"$PHP_FILENAME.asc\" \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && for key in $GPG_KEYS; do gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\" ; done \\\n && gpg --batch --verify \"$PHP_FILENAME.asc\" \"$PHP_FILENAME\" \\\n && rm -r \"$GNUPGHOME\" \"$PHP_FILENAME.asc\" \\\n && mkdir -p /usr/src/php \\\n && tar -xf \"$PHP_FILENAME\" -C /usr/src/php --strip-components=1 \\\n && rm \"$PHP_FILENAME\" \\\n && cd /usr/src/php \\\n && ./configure --with-config-file-path=\"$PHP_INI_DIR\" --with-config-file-scan-dir=\"$PHP_INI_DIR/conf.d\" $PHP_EXTRA_CONFIGURE_ARGS --disable-cgi --enable-mysqlnd --enable-mbstring --with-curl --with-libedit --with-openssl --with-zlib \\\n && make -j\"$( nproc ;)\" \\\n && make install \\\n && { find /usr/local/bin /usr/local/sbin -type f -executable -exec strip --strip-all '{}' + || true ; } \\\n && make clean \\\n && apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false -o APT::AutoRemove::SuggestsImportant=false $BUILD_DEPS\nCOPY docker-php-ext-* /usr/local/bin/\nWORKDIR /srv/eurostar/htdocs\nRUN set -ex \\\n && cd /usr/local/etc \\\n && if [ -d php-fpm.d ] ; then sed 's!=NONE/!=!g' php-fpm.conf.default | tee php-fpm.conf > /dev/null;cp php-fpm.d/www.conf.default php-fpm.d/www.conf ; else mkdir php-fpm.d ;cp php-fpm.conf.default php-fpm.d/www.conf ;{ echo '[global]' ;echo 'include=etc/php-fpm.d/*.conf' ; } | tee php-fpm.conf ; fi \\\n && { echo '[global]' ;echo 'error_log = /proc/self/fd/2' ;echo ;echo '[www]' ;echo '; if we send this to /proc/self/fd/1, it never appears' ;echo 'access.log = /proc/self/fd/2' ;echo ;echo 'clear_env = no' ;echo ;echo '; Ensure worker stdout and stderr are sent to the main error log.' ;echo 'catch_workers_output = yes' ; } | tee php-fpm.d/docker.conf \\\n && { echo '[global]' ;echo 'daemonize = no' ;echo ;echo '[www]' ;echo 'listen = [::]:9000' ; } | tee php-fpm.d/zz-docker.conf\nEXPOSE 9000/tcp\nCMD [\"php-fpm\"]\n","originalDockerfileUglifiedHash":"2d027a693a580bef5030330dd0e5de87","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/8f890e1b2523e362227c388517bc975a4cd8d284.dockerfile"}