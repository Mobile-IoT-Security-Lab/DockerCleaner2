{"seed":2317621126,"processedDockerfileHash":"b474225c18d60a545546ae51b377d165","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-npm","pin-package-manager-versions-apk","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   PHP Docker image for Yii 2.0 Framework runtime\n#   ==============================================\nARG PHP_BASE_IMAGE_VERSION\nFROM php:${PHP_BASE_IMAGE_VERSION}-fpm-alpine\n#   Install system packages & PHP extensions required for Yii 2.0 Framework\nRUN apk --update --virtual build-deps add autoconf make gcc g++ libtool icu-dev curl-dev freetype-dev imagemagick-dev pcre-dev postgresql-dev libmcrypt-dev libjpeg-turbo-dev libpng-dev libxml2-dev \\\n && apk add git curl bash bash-completion icu imagemagick pcre freetype libmcrypt libintl libjpeg-turbo libpng libltdl libxml2 mysql-client nodejs-npm postgresql \\\n && pecl install apcu imagick mcrypt-1.0.0 \\\n && docker-php-ext-configure gd --with-gd --with-freetype-dir=/usr/include/ --with-png-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \\\n && docker-php-ext-configure bcmath \\\n && docker-php-ext-install soap zip curl bcmath exif gd iconv intl mbstring opcache pdo_mysql pdo_pgsql \\\n && apk del build-deps\nRUN echo \"extension=apcu.so\" > /usr/local/etc/php/conf.d/pecl-apcu.ini \\\n && echo \"extension=imagick.so\" > /usr/local/etc/php/conf.d/pecl-imagick.ini\n#   memcache\nENV MEMCACHED_DEPS=\"zlib-dev libmemcached-dev cyrus-sasl-dev git\"\nRUN set -xe \\\n && apk add $MEMCACHED_DEPS --no-cache --virtual .memcached-deps \\\n && curl https://codeload.github.com/php-memcached-dev/php-memcached/zip/php7 -o /tmp/memcached.zip \\\n && mkdir -p /usr/src/php/ext \\\n && unzip /tmp/memcached.zip -d /usr/src/php/ext \\\n && docker-php-ext-configure /usr/src/php/ext/php-memcached-php7 --disable-memcached-sasl \\\n && docker-php-ext-install /usr/src/php/ext/php-memcached-php7 \\\n && rm -rf /usr/src/php/ext/php-memcached-php7 /tmp/memcached.zip\n#   Install xdebug\nRUN export CFLAGS=\"$PHP_CFLAGS\" CPPFLAGS=\"$PHP_CPPFLAGS\" LDFLAGS=\"$PHP_LDFLAGS\" \\\n && apk add $PHPIZE_DEPS --no-cache --virtual .phpize-deps \\\n && cd /tmp \\\n && git clone git://github.com/xdebug/xdebug.git \\\n && cd xdebug \\\n && git checkout 52adff7539109db592d07d3f6c325f6ee2a7669f \\\n && phpize \\\n && ./configure --enable-xdebug \\\n && make \\\n && make install \\\n && rm -rf /tmp/xdebug \\\n && apk del .phpize-deps\n#   Install less-compiler\nRUN npm install less@4.1.3 lesshint@6.3.7 uglify-js@3.17.4 uglifycss@0.0.29 -g\n#   Configure version constraints\nENV PHP_ENABLE_XDEBUG=\"0\" \\\n    VERSION_COMPOSER_ASSET_PLUGIN=\"^1.4.3\" \\\n    VERSION_PRESTISSIMO_PLUGIN=\"^0.3.0\" \\\n    PATH=\"/app:/app/vendor/bin:/root/.composer/vendor/bin:$PATH\" \\\n    TERM=\"linux\" \\\n    COMPOSER_ALLOW_SUPERUSER=\"1\"\n#   Add configuration files\nCOPY image-files/ /\n#   Add GITHUB_API_TOKEN support for composer\nRUN chmod 700 /usr/local/bin/docker-entrypoint.sh /usr/local/bin/docker-run.sh /usr/local/bin/composer\n#   Install composer\nRUN curl -sS https://getcomposer.org/installer | php -- --filename=composer.phar --install-dir=/usr/local/bin \\\n && composer global require --optimize-autoloader \"fxp/composer-asset-plugin:${VERSION_COMPOSER_ASSET_PLUGIN}\" \"hirak/prestissimo:${VERSION_PRESTISSIMO_PLUGIN}\" \\\n && composer global dumpautoload --optimize \\\n && composer clear-cache\nWORKDIR /app\n#   Startup script for FPM\nENTRYPOINT [\"/usr/local/bin/docker-entrypoint.sh\"]\nCMD [\"docker-run.sh\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\nHEALTHCHECK CMD curl --fail http://127.0.0.1:80 || exit 1\n","originalDockerfile":"#  PHP Docker image for Yii 2.0 Framework runtime\n#  ==============================================\nARG PHP_BASE_IMAGE_VERSION\nFROM php:${PHP_BASE_IMAGE_VERSION}-fpm-alpine\n#  Install system packages & PHP extensions required for Yii 2.0 Framework\nRUN apk --update --virtual build-deps add autoconf make gcc g++ libtool icu-dev curl-dev freetype-dev imagemagick-dev pcre-dev postgresql-dev libmcrypt-dev libjpeg-turbo-dev libpng-dev libxml2-dev \\\n && apk add git curl bash bash-completion icu imagemagick pcre freetype libmcrypt libintl libjpeg-turbo libpng libltdl libxml2 mysql-client nodejs-npm postgresql \\\n && pecl install apcu imagick mcrypt-1.0.0 \\\n && docker-php-ext-configure gd --with-gd --with-freetype-dir=/usr/include/ --with-png-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \\\n && docker-php-ext-configure bcmath \\\n && docker-php-ext-install soap zip curl bcmath exif gd iconv intl mbstring opcache pdo_mysql pdo_pgsql \\\n && apk del build-deps\nRUN echo \"extension=apcu.so\" > /usr/local/etc/php/conf.d/pecl-apcu.ini \\\n && echo \"extension=imagick.so\" > /usr/local/etc/php/conf.d/pecl-imagick.ini\n#  memcache\nENV MEMCACHED_DEPS=\"zlib-dev libmemcached-dev cyrus-sasl-dev git\"\nRUN set -xe \\\n && apk add --no-cache --virtual .memcached-deps $MEMCACHED_DEPS \\\n && curl https://codeload.github.com/php-memcached-dev/php-memcached/zip/php7 -o /tmp/memcached.zip \\\n && mkdir -p /usr/src/php/ext \\\n && unzip /tmp/memcached.zip -d /usr/src/php/ext \\\n && docker-php-ext-configure /usr/src/php/ext/php-memcached-php7 --disable-memcached-sasl \\\n && docker-php-ext-install /usr/src/php/ext/php-memcached-php7 \\\n && rm -rf /usr/src/php/ext/php-memcached-php7 /tmp/memcached.zip\n#  Install xdebug\nRUN export CFLAGS=\"$PHP_CFLAGS\" CPPFLAGS=\"$PHP_CPPFLAGS\" LDFLAGS=\"$PHP_LDFLAGS\" \\\n && apk add --no-cache --virtual .phpize-deps $PHPIZE_DEPS \\\n && cd /tmp \\\n && git clone git://github.com/xdebug/xdebug.git \\\n && cd xdebug \\\n && git checkout 52adff7539109db592d07d3f6c325f6ee2a7669f \\\n && phpize \\\n && ./configure --enable-xdebug \\\n && make \\\n && make install \\\n && rm -rf /tmp/xdebug \\\n && apk del .phpize-deps\n#  Install less-compiler\nRUN npm install less lesshint uglify-js uglifycss -g\n#  Configure version constraints\nENV PHP_ENABLE_XDEBUG=\"0\" \\\n    VERSION_COMPOSER_ASSET_PLUGIN=\"^1.4.3\" \\\n    VERSION_PRESTISSIMO_PLUGIN=\"^0.3.0\" \\\n    PATH=\"/app:/app/vendor/bin:/root/.composer/vendor/bin:$PATH\" \\\n    TERM=\"linux\" \\\n    COMPOSER_ALLOW_SUPERUSER=\"1\"\n#  Add configuration files\nCOPY image-files/ /\n#  Add GITHUB_API_TOKEN support for composer\nRUN chmod 700 /usr/local/bin/docker-entrypoint.sh /usr/local/bin/docker-run.sh /usr/local/bin/composer\n#  Install composer\nRUN curl -sS https://getcomposer.org/installer | php -- --filename=composer.phar --install-dir=/usr/local/bin \\\n && composer global require --optimize-autoloader \"fxp/composer-asset-plugin:${VERSION_COMPOSER_ASSET_PLUGIN}\" \"hirak/prestissimo:${VERSION_PRESTISSIMO_PLUGIN}\" \\\n && composer global dumpautoload --optimize \\\n && composer clear-cache\nWORKDIR /app\n#  Startup script for FPM\nENTRYPOINT [\"/usr/local/bin/docker-entrypoint.sh\"]\nCMD [\"docker-run.sh\"]\n","injectedSmells":[],"originalDockerfileHash":"18e2983335ca633f126d56368a241786","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   PHP Docker image for Yii 2.0 Framework runtime\n#   ==============================================\nARG PHP_BASE_IMAGE_VERSION\nFROM php:${PHP_BASE_IMAGE_VERSION}-fpm-alpine\n#   Install system packages & PHP extensions required for Yii 2.0 Framework\nRUN apk --update --virtual build-deps add autoconf make gcc g++ libtool icu-dev curl-dev freetype-dev imagemagick-dev pcre-dev postgresql-dev libmcrypt-dev libjpeg-turbo-dev libpng-dev libxml2-dev \\\n && apk add git curl bash bash-completion icu imagemagick pcre freetype libmcrypt libintl libjpeg-turbo libpng libltdl libxml2 mysql-client nodejs-npm postgresql \\\n && pecl install apcu imagick mcrypt-1.0.0 \\\n && docker-php-ext-configure gd --with-gd --with-freetype-dir=/usr/include/ --with-png-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \\\n && docker-php-ext-configure bcmath \\\n && docker-php-ext-install soap zip curl bcmath exif gd iconv intl mbstring opcache pdo_mysql pdo_pgsql \\\n && apk del build-deps\nRUN echo \"extension=apcu.so\" > /usr/local/etc/php/conf.d/pecl-apcu.ini \\\n && echo \"extension=imagick.so\" > /usr/local/etc/php/conf.d/pecl-imagick.ini\n#   memcache\nENV MEMCACHED_DEPS=\"zlib-dev libmemcached-dev cyrus-sasl-dev git\"\nRUN set -xe \\\n && apk add --no-cache --virtual .memcached-deps $MEMCACHED_DEPS \\\n && curl https://codeload.github.com/php-memcached-dev/php-memcached/zip/php7 -o /tmp/memcached.zip \\\n && mkdir -p /usr/src/php/ext \\\n && unzip /tmp/memcached.zip -d /usr/src/php/ext \\\n && docker-php-ext-configure /usr/src/php/ext/php-memcached-php7 --disable-memcached-sasl \\\n && docker-php-ext-install /usr/src/php/ext/php-memcached-php7 \\\n && rm -rf /usr/src/php/ext/php-memcached-php7 /tmp/memcached.zip\n#   Install xdebug\nRUN export CFLAGS=\"$PHP_CFLAGS\" CPPFLAGS=\"$PHP_CPPFLAGS\" LDFLAGS=\"$PHP_LDFLAGS\" \\\n && apk add --no-cache --virtual .phpize-deps $PHPIZE_DEPS \\\n && cd /tmp \\\n && git clone git://github.com/xdebug/xdebug.git \\\n && cd xdebug \\\n && git checkout 52adff7539109db592d07d3f6c325f6ee2a7669f \\\n && phpize \\\n && ./configure --enable-xdebug \\\n && make \\\n && make install \\\n && rm -rf /tmp/xdebug \\\n && apk del .phpize-deps\n#   Install less-compiler\nRUN npm install less lesshint uglify-js uglifycss -g\n#   Configure version constraints\nENV PHP_ENABLE_XDEBUG=\"0\" \\\n    VERSION_COMPOSER_ASSET_PLUGIN=\"^1.4.3\" \\\n    VERSION_PRESTISSIMO_PLUGIN=\"^0.3.0\" \\\n    PATH=\"/app:/app/vendor/bin:/root/.composer/vendor/bin:$PATH\" \\\n    TERM=\"linux\" \\\n    COMPOSER_ALLOW_SUPERUSER=\"1\"\n#   Add configuration files\nCOPY image-files/ /\n#   Add GITHUB_API_TOKEN support for composer\nRUN chmod 700 /usr/local/bin/docker-entrypoint.sh /usr/local/bin/docker-run.sh /usr/local/bin/composer\n#   Install composer\nRUN curl -sS https://getcomposer.org/installer | php -- --filename=composer.phar --install-dir=/usr/local/bin \\\n && composer global require --optimize-autoloader \"fxp/composer-asset-plugin:${VERSION_COMPOSER_ASSET_PLUGIN}\" \"hirak/prestissimo:${VERSION_PRESTISSIMO_PLUGIN}\" \\\n && composer global dumpautoload --optimize \\\n && composer clear-cache\nWORKDIR /app\n#   Startup script for FPM\nENTRYPOINT [\"/usr/local/bin/docker-entrypoint.sh\"]\nCMD [\"docker-run.sh\"]\n","originalDockerfileUglifiedHash":"e52aea272e0d853ed2b29563418c59b5","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/39a8f3e68ab8d96a4e65229a6996dffc63092c4b.dockerfile"}