{"seed":1344986584,"processedDockerfileHash":"62cc6c97e136ca4db2b39750cfb71ced","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM ubuntu:xenial\nMAINTAINER Martin Jansche <mjansche@google.com>\n#  ADD goog_af_unison_wav_22k.tar /usr/local/src/\nRUN apt-get update \\\n && apt-get install --no-install-recommends automake=1:1.15-4ubuntu1 bc=1.06.95-9build1 curl=7.47.0-1ubuntu2.19 g++=4:5.3.1-1ubuntu1 git=1:2.7.4-0ubuntu1.10 libc-dev libreadline-dev=6.3-8ubuntu2 libtool=2.4.6-0.1 make=4.1-6 ncurses-dev nvi=1.81.6-12build1 pkg-config=0.29.1-0ubuntu1 python=2.7.12-1~16.04 python-dev=2.7.12-1~16.04 python-setuptools=20.7.0-1 unzip=6.0-20ubuntu1.1 wavpack=4.75.2-2ubuntu0.2 wget=1.17.1-1ubuntu1.5 zip=3.0-11 zlib1g-dev=1:1.2.8.dfsg-2ubuntu4.3 -y \\\n && rm -rf /var/lib/apt/lists/*\nENV LC_ALL=\"C.UTF-8\"\nENV OPENFST=\"openfst-1.5.2\"\nENV THRAX=\"thrax-1.2.2\"\n#   Fetch, build, and install the Protocol Buffers package\nWORKDIR /usr/local/src\nRUN git clone https://github.com/google/protobuf.git\nWORKDIR /usr/local/src/protobuf\nRUN git reset --hard ca9bbd71d547a05604e8c2bddda66cdba5abe0c4 \\\n && ./autogen.sh \\\n && ./configure --disable-static \\\n && make \\\n && make install \\\n && make distclean \\\n && ldconfig\n#   Fetch, build, and install the re2 regular expression package\nWORKDIR /usr/local/src\nRUN git clone https://github.com/google/re2.git\nWORKDIR /usr/local/src/re2\nRUN git reset --hard 4744450c4880b9445c57d9224495f0e8e29f1c4c \\\n && make \\\n && make install \\\n && make distclean \\\n && ldconfig\n#   Fetch, build, and install the OpenFst Library\nWORKDIR /usr/local/src\nRUN curl -L http://openfst.org/twiki/pub/FST/FstDownload/$OPENFST.tar.gz | tar xz --no-same-owner --no-same-permissions\nWORKDIR /usr/local/src/$OPENFST\nRUN ./configure --enable-bin --enable-far --enable-mpdt --enable-ngram-fsts --enable-pdt --enable-python \\\n && make \\\n && make install \\\n && make distclean \\\n && ldconfig\nENV LD_LIBRARY_PATH=\"/usr/local/lib/fst:$LD_LIBRARY_PATH\"\n#   Fetch, build, and install Pynini\nWORKDIR /usr/local/src\nRUN curl -L http://openfst.org/twiki/pub/GRM/PyniniDownload/pynini-0.9.tar.gz | tar xz --no-same-owner --no-same-permissions\nWORKDIR /usr/local/src/pynini-0.9\nRUN python setup.py install \\\n && python setup.py test\nCOPY usr_local /usr/local/\n#   Build and install the Thrax Grammar Development Tools\nWORKDIR /usr/local/src/$THRAX\nRUN ./configure --enable-bin --enable-readline \\\n && make \\\n && make install \\\n && make distclean \\\n && ldconfig\n#   Build and install Sparrowhawk\nWORKDIR /usr/local/src/sparrowhawk\nRUN autoreconf \\\n && ./configure \\\n && make \\\n && make install \\\n && make distclean \\\n && ldconfig\n#   Fetch and prepare Festival & friends\nWORKDIR /usr/local/src\nRUN curl -L http://festvox.org/packed/festival/2.4/festlex_CMU.tar.gz | tar xz --no-same-owner --no-same-permissions \\\n && curl -L http://festvox.org/packed/festival/2.4/festlex_POSLEX.tar.gz | tar xz --no-same-owner --no-same-permissions \\\n && curl -L http://festvox.org/packed/festival/2.4/voices/festvox_kallpc16k.tar.gz | tar xz --no-same-owner --no-same-permissions \\\n && curl -L http://festvox.org/festvox-2.7/festvox-2.7.0-release.tar.gz | tar xz --no-same-owner --no-same-permissions \\\n && curl -L http://tts.speech.cs.cmu.edu/awb/sptk/SPTK-3.6.tar.gz | tar xz --no-same-owner --no-same-permissions \\\n && patch -p0 < festvox/src/clustergen/SPTK-3.6.patch\nENV ESTDIR=\"/usr/local/src/speech_tools\"\nENV FESTVOXDIR=\"/usr/local/src/festvox\"\nENV SPTKDIR=\"/usr/local\"\n#   Build and install SPTK\nWORKDIR /usr/local/src/SPTK-3.6\nRUN ./configure --prefix=$SPTKDIR \\\n && make \\\n && make install \\\n && make distclean\n#   Build the Edinburgh Speech Tools\nWORKDIR /usr/local/src/speech_tools\nRUN ./configure \\\n && make\n#   Build Festival\nWORKDIR /usr/local/src/festival\nRUN ./configure \\\n && make\n#   Build Festvox\nWORKDIR /usr/local/src/festvox\nRUN ./configure \\\n && make\nWORKDIR /usr/local/src\nRUN rm -fr protobuf re2 $OPENFST pynini-0.9 $THRAX sparrowhawk SPTK-3.6\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ubuntu:xenial\nMAINTAINER Martin Jansche <mjansche@google.com>\n# ADD goog_af_unison_wav_22k.tar /usr/local/src/\nRUN apt-get update \\\n && apt-get install automake bc curl g++ git libc-dev libreadline-dev libtool make ncurses-dev nvi pkg-config python python-dev python-setuptools unzip wavpack wget zip zlib1g-dev -y \\\n && rm -rf /var/lib/apt/lists/*\nENV LC_ALL=\"C.UTF-8\"\nENV OPENFST=\"openfst-1.5.2\"\nENV THRAX=\"thrax-1.2.2\"\n#  Fetch, build, and install the Protocol Buffers package\nWORKDIR /usr/local/src\nRUN git clone https://github.com/google/protobuf.git\nWORKDIR /usr/local/src/protobuf\nRUN git reset --hard ca9bbd71d547a05604e8c2bddda66cdba5abe0c4 \\\n && ./autogen.sh \\\n && ./configure --disable-static \\\n && make \\\n && make install \\\n && make distclean \\\n && ldconfig\n#  Fetch, build, and install the re2 regular expression package\nWORKDIR /usr/local/src\nRUN git clone https://github.com/google/re2.git\nWORKDIR /usr/local/src/re2\nRUN git reset --hard 4744450c4880b9445c57d9224495f0e8e29f1c4c \\\n && make \\\n && make install \\\n && make distclean \\\n && ldconfig\n#  Fetch, build, and install the OpenFst Library\nWORKDIR /usr/local/src\nRUN curl -L http://openfst.org/twiki/pub/FST/FstDownload/$OPENFST.tar.gz | tar xz --no-same-owner --no-same-permissions\nWORKDIR /usr/local/src/$OPENFST\nRUN ./configure --enable-bin --enable-far --enable-mpdt --enable-ngram-fsts --enable-pdt --enable-python \\\n && make \\\n && make install \\\n && make distclean \\\n && ldconfig\nENV LD_LIBRARY_PATH=\"/usr/local/lib/fst:$LD_LIBRARY_PATH\"\n#  Fetch, build, and install Pynini\nWORKDIR /usr/local/src\nRUN curl -L http://openfst.org/twiki/pub/GRM/PyniniDownload/pynini-0.9.tar.gz | tar xz --no-same-owner --no-same-permissions\nWORKDIR /usr/local/src/pynini-0.9\nRUN python setup.py install \\\n && python setup.py test\nCOPY usr_local /usr/local/\n#  Build and install the Thrax Grammar Development Tools\nWORKDIR /usr/local/src/$THRAX\nRUN ./configure --enable-bin --enable-readline \\\n && make \\\n && make install \\\n && make distclean \\\n && ldconfig\n#  Build and install Sparrowhawk\nWORKDIR /usr/local/src/sparrowhawk\nRUN autoreconf \\\n && ./configure \\\n && make \\\n && make install \\\n && make distclean \\\n && ldconfig\n#  Fetch and prepare Festival & friends\nWORKDIR /usr/local/src\nRUN curl -L http://festvox.org/packed/festival/2.4/festlex_CMU.tar.gz | tar xz --no-same-owner --no-same-permissions \\\n && curl -L http://festvox.org/packed/festival/2.4/festlex_POSLEX.tar.gz | tar xz --no-same-owner --no-same-permissions \\\n && curl -L http://festvox.org/packed/festival/2.4/voices/festvox_kallpc16k.tar.gz | tar xz --no-same-owner --no-same-permissions \\\n && curl -L http://festvox.org/festvox-2.7/festvox-2.7.0-release.tar.gz | tar xz --no-same-owner --no-same-permissions \\\n && curl -L http://tts.speech.cs.cmu.edu/awb/sptk/SPTK-3.6.tar.gz | tar xz --no-same-owner --no-same-permissions \\\n && patch -p0 < festvox/src/clustergen/SPTK-3.6.patch\nENV ESTDIR=\"/usr/local/src/speech_tools\"\nENV FESTVOXDIR=\"/usr/local/src/festvox\"\nENV SPTKDIR=\"/usr/local\"\n#  Build and install SPTK\nWORKDIR /usr/local/src/SPTK-3.6\nRUN ./configure --prefix=$SPTKDIR \\\n && make \\\n && make install \\\n && make distclean\n#  Build the Edinburgh Speech Tools\nWORKDIR /usr/local/src/speech_tools\nRUN ./configure \\\n && make\n#  Build Festival\nWORKDIR /usr/local/src/festival\nRUN ./configure \\\n && make\n#  Build Festvox\nWORKDIR /usr/local/src/festvox\nRUN ./configure \\\n && make\nWORKDIR /usr/local/src\nRUN rm -fr protobuf re2 $OPENFST pynini-0.9 $THRAX sparrowhawk SPTK-3.6\n","injectedSmells":[],"originalDockerfileHash":"18aeacc4afa7def405a0fa37502addd8","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ubuntu:xenial\nMAINTAINER Martin Jansche <mjansche@google.com>\n#  ADD goog_af_unison_wav_22k.tar /usr/local/src/\nRUN apt-get update \\\n && apt-get install automake bc curl g++ git libc-dev libreadline-dev libtool make ncurses-dev nvi pkg-config python python-dev python-setuptools unzip wavpack wget zip zlib1g-dev -y \\\n && rm -rf /var/lib/apt/lists/*\nENV LC_ALL=\"C.UTF-8\"\nENV OPENFST=\"openfst-1.5.2\"\nENV THRAX=\"thrax-1.2.2\"\n#   Fetch, build, and install the Protocol Buffers package\nWORKDIR /usr/local/src\nRUN git clone https://github.com/google/protobuf.git\nWORKDIR /usr/local/src/protobuf\nRUN git reset --hard ca9bbd71d547a05604e8c2bddda66cdba5abe0c4 \\\n && ./autogen.sh \\\n && ./configure --disable-static \\\n && make \\\n && make install \\\n && make distclean \\\n && ldconfig\n#   Fetch, build, and install the re2 regular expression package\nWORKDIR /usr/local/src\nRUN git clone https://github.com/google/re2.git\nWORKDIR /usr/local/src/re2\nRUN git reset --hard 4744450c4880b9445c57d9224495f0e8e29f1c4c \\\n && make \\\n && make install \\\n && make distclean \\\n && ldconfig\n#   Fetch, build, and install the OpenFst Library\nWORKDIR /usr/local/src\nRUN curl -L http://openfst.org/twiki/pub/FST/FstDownload/$OPENFST.tar.gz | tar xz --no-same-owner --no-same-permissions\nWORKDIR /usr/local/src/$OPENFST\nRUN ./configure --enable-bin --enable-far --enable-mpdt --enable-ngram-fsts --enable-pdt --enable-python \\\n && make \\\n && make install \\\n && make distclean \\\n && ldconfig\nENV LD_LIBRARY_PATH=\"/usr/local/lib/fst:$LD_LIBRARY_PATH\"\n#   Fetch, build, and install Pynini\nWORKDIR /usr/local/src\nRUN curl -L http://openfst.org/twiki/pub/GRM/PyniniDownload/pynini-0.9.tar.gz | tar xz --no-same-owner --no-same-permissions\nWORKDIR /usr/local/src/pynini-0.9\nRUN python setup.py install \\\n && python setup.py test\nCOPY usr_local /usr/local/\n#   Build and install the Thrax Grammar Development Tools\nWORKDIR /usr/local/src/$THRAX\nRUN ./configure --enable-bin --enable-readline \\\n && make \\\n && make install \\\n && make distclean \\\n && ldconfig\n#   Build and install Sparrowhawk\nWORKDIR /usr/local/src/sparrowhawk\nRUN autoreconf \\\n && ./configure \\\n && make \\\n && make install \\\n && make distclean \\\n && ldconfig\n#   Fetch and prepare Festival & friends\nWORKDIR /usr/local/src\nRUN curl -L http://festvox.org/packed/festival/2.4/festlex_CMU.tar.gz | tar xz --no-same-owner --no-same-permissions \\\n && curl -L http://festvox.org/packed/festival/2.4/festlex_POSLEX.tar.gz | tar xz --no-same-owner --no-same-permissions \\\n && curl -L http://festvox.org/packed/festival/2.4/voices/festvox_kallpc16k.tar.gz | tar xz --no-same-owner --no-same-permissions \\\n && curl -L http://festvox.org/festvox-2.7/festvox-2.7.0-release.tar.gz | tar xz --no-same-owner --no-same-permissions \\\n && curl -L http://tts.speech.cs.cmu.edu/awb/sptk/SPTK-3.6.tar.gz | tar xz --no-same-owner --no-same-permissions \\\n && patch -p0 < festvox/src/clustergen/SPTK-3.6.patch\nENV ESTDIR=\"/usr/local/src/speech_tools\"\nENV FESTVOXDIR=\"/usr/local/src/festvox\"\nENV SPTKDIR=\"/usr/local\"\n#   Build and install SPTK\nWORKDIR /usr/local/src/SPTK-3.6\nRUN ./configure --prefix=$SPTKDIR \\\n && make \\\n && make install \\\n && make distclean\n#   Build the Edinburgh Speech Tools\nWORKDIR /usr/local/src/speech_tools\nRUN ./configure \\\n && make\n#   Build Festival\nWORKDIR /usr/local/src/festival\nRUN ./configure \\\n && make\n#   Build Festvox\nWORKDIR /usr/local/src/festvox\nRUN ./configure \\\n && make\nWORKDIR /usr/local/src\nRUN rm -fr protobuf re2 $OPENFST pynini-0.9 $THRAX sparrowhawk SPTK-3.6\n","originalDockerfileUglifiedHash":"2c79577667d0781e75e98509f483c145","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/6f6e69b4f100e5cf816d2dd32cc6a9a11aaf70a8.dockerfile"}