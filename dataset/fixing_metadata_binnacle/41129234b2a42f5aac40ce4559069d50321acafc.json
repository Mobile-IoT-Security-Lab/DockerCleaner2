{"seed":2601752054,"processedDockerfileHash":"fbb391410c0877495f57157b2d4f35e1","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-pip","pin-package-manager-versions-apk","have-a-healthcheck","have-a-user"],"processedDockerfile":"#   MIT License\n#   Copyright (c) 2017 Juliano Petronetto\n#   Permission is hereby granted, free of charge, to any person obtaining a copy\n#   of this software and associated documentation files (the \"Software\"), to deal\n#   in the Software without restriction, including without limitation the rights\n#   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n#   copies of the Software, and to permit persons to whom the Software is\n#   furnished to do so, subject to the following conditions:\n#   The above copyright notice and this permission notice shall be included in all\n#   copies or substantial portions of the Software.\n#   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n#   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n#   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n#   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n#   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n#   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n#   SOFTWARE\nFROM alpine:3.5\nMAINTAINER Juliano Petronetto <juliano.petronetto@gmail.com>\nENV LANG=\"C.UTF-8\"\n#   Add Edge repos\nRUN echo -e \"\\n@edgemain http://nl.alpinelinux.org/alpine/edge/main\\n@edgecomm http://nl.alpinelinux.org/alpine/edge/community\\n@edgetest http://nl.alpinelinux.org/alpine/edge/testing\" >> /etc/apk/repositories\n#   Install required packages\nRUN apk update \\\n && apk upgrade \\\n && apk add bash=4.3.46-r5 build-base=0.4-r1 ca-certificates=20161130-r1 clang-dev=3.8.1-r1 clang=3.8.1-r1 cmake=3.6.3-r0 coreutils=8.26-r0 curl=7.61.1-r1 freetype-dev=2.7-r2 ffmpeg-dev=3.1.11-r1 ffmpeg-libs=3.1.11-r1 gcc=6.2.1-r1 g++=6.2.1-r1 git=2.11.3-r2 gettext=0.19.8.1-r0 lcms2-dev=2.8-r1 libavc1394-dev=0.5.4-r1 libc-dev=0.7-r1 libffi-dev=3.2.1-r2 libjpeg-turbo-dev=1.5.3-r2 libpng-dev=1.6.25-r0 libressl-dev=2.4.4-r0 libtbb@edgetest libtbb-dev@edgetest libwebp-dev=0.5.2-r0 linux-headers=4.4.6-r1 make=4.2.1-r0 musl=1.1.15-r8 openblas@edgecomm openblas-dev@edgecomm openjpeg-dev=2.3.0-r0 openssl=1.0.2q-r0 python3=3.5.6-r0 python3-dev=3.5.6-r0 tiff-dev=4.0.9-r6 unzip=6.0-r3 zlib-dev=1.2.11-r0 --no-cache\n#   Python 3 as default\nRUN ln -s /usr/bin/python3 /usr/local/bin/python \\\n && ln -s /usr/bin/pip3 /usr/local/bin/pip \\\n && pip install pip==23.1 --upgrade\n#   Install NumPy\nRUN ln -s /usr/include/locale.h /usr/include/xlocale.h \\\n && pip install numpy==1.24.2\n#   Install OpenCV\nRUN mkdir /opt \\\n && cd /opt \\\n && wget https://github.com/opencv/opencv/archive/3.2.0.zip \\\n && unzip 3.2.0.zip \\\n && rm 3.2.0.zip \\\n && wget https://github.com/opencv/opencv_contrib/archive/3.2.0.zip \\\n && unzip 3.2.0.zip \\\n && rm 3.2.0.zip \\\n && cd /opt/opencv-3.2.0 \\\n && mkdir build \\\n && cd build \\\n && cmake -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_C_COMPILER=/usr/bin/clang -D CMAKE_CXX_COMPILER=/usr/bin/clang++ -D CMAKE_INSTALL_PREFIX=/usr/local -D INSTALL_PYTHON_EXAMPLES=OFF -D INSTALL_C_EXAMPLES=OFF -D WITH_FFMPEG=ON -D WITH_TBB=ON -D OPENCV_EXTRA_MODULES_PATH=/opt/opencv_contrib-3.2.0/modules -D PYTHON_EXECUTABLE=/usr/local/bin/python .. \\\n && make -j$( nproc ;) \\\n && make install \\\n && cd .. \\\n && rm -rf build \\\n && cp -p $( find /usr/local/lib/python3.5/site-packages -name cv2.*.so ;) /usr/lib/python3.5/site-packages/cv2.so \\\n && python -c 'import cv2; print(\"Python: import cv2 - SUCCESS\")'\nRUN addgroup -S docker-user ; adduser -S -G docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  MIT License\n#  Copyright (c) 2017 Juliano Petronetto\n#  Permission is hereby granted, free of charge, to any person obtaining a copy\n#  of this software and associated documentation files (the \"Software\"), to deal\n#  in the Software without restriction, including without limitation the rights\n#  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n#  copies of the Software, and to permit persons to whom the Software is\n#  furnished to do so, subject to the following conditions:\n#  The above copyright notice and this permission notice shall be included in all\n#  copies or substantial portions of the Software.\n#  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n#  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n#  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n#  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n#  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n#  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n#  SOFTWARE\nFROM alpine:3.5\nMAINTAINER Juliano Petronetto <juliano.petronetto@gmail.com>\nENV LANG=\"C.UTF-8\"\n#  Add Edge repos\nRUN echo -e \"\\n@edgemain http://nl.alpinelinux.org/alpine/edge/main\\n@edgecomm http://nl.alpinelinux.org/alpine/edge/community\\n@edgetest http://nl.alpinelinux.org/alpine/edge/testing\" >> /etc/apk/repositories\n#  Install required packages\nRUN apk update \\\n && apk upgrade \\\n && apk --no-cache add bash build-base ca-certificates clang-dev clang cmake coreutils curl freetype-dev ffmpeg-dev ffmpeg-libs gcc g++ git gettext lcms2-dev libavc1394-dev libc-dev libffi-dev libjpeg-turbo-dev libpng-dev libressl-dev libtbb@edgetest libtbb-dev@edgetest libwebp-dev linux-headers make musl openblas@edgecomm openblas-dev@edgecomm openjpeg-dev openssl python3 python3-dev tiff-dev unzip zlib-dev\n#  Python 3 as default\nRUN ln -s /usr/bin/python3 /usr/local/bin/python \\\n && ln -s /usr/bin/pip3 /usr/local/bin/pip \\\n && pip install pip --upgrade\n#  Install NumPy\nRUN ln -s /usr/include/locale.h /usr/include/xlocale.h \\\n && pip install numpy\n#  Install OpenCV\nRUN mkdir /opt \\\n && cd /opt \\\n && wget https://github.com/opencv/opencv/archive/3.2.0.zip \\\n && unzip 3.2.0.zip \\\n && rm 3.2.0.zip \\\n && wget https://github.com/opencv/opencv_contrib/archive/3.2.0.zip \\\n && unzip 3.2.0.zip \\\n && rm 3.2.0.zip \\\n && cd /opt/opencv-3.2.0 \\\n && mkdir build \\\n && cd build \\\n && cmake -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_C_COMPILER=/usr/bin/clang -D CMAKE_CXX_COMPILER=/usr/bin/clang++ -D CMAKE_INSTALL_PREFIX=/usr/local -D INSTALL_PYTHON_EXAMPLES=OFF -D INSTALL_C_EXAMPLES=OFF -D WITH_FFMPEG=ON -D WITH_TBB=ON -D OPENCV_EXTRA_MODULES_PATH=/opt/opencv_contrib-3.2.0/modules -D PYTHON_EXECUTABLE=/usr/local/bin/python .. \\\n && make -j$( nproc ;) \\\n && make install \\\n && cd .. \\\n && rm -rf build \\\n && cp -p $( find /usr/local/lib/python3.5/site-packages -name cv2.*.so ;) /usr/lib/python3.5/site-packages/cv2.so \\\n && python -c 'import cv2; print(\"Python: import cv2 - SUCCESS\")'\n","injectedSmells":[],"originalDockerfileHash":"d4c1943939ddf437117cb5449b1395f6","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   MIT License\n#   Copyright (c) 2017 Juliano Petronetto\n#   Permission is hereby granted, free of charge, to any person obtaining a copy\n#   of this software and associated documentation files (the \"Software\"), to deal\n#   in the Software without restriction, including without limitation the rights\n#   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n#   copies of the Software, and to permit persons to whom the Software is\n#   furnished to do so, subject to the following conditions:\n#   The above copyright notice and this permission notice shall be included in all\n#   copies or substantial portions of the Software.\n#   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n#   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n#   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n#   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n#   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n#   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n#   SOFTWARE\nFROM alpine:3.5\nMAINTAINER Juliano Petronetto <juliano.petronetto@gmail.com>\nENV LANG=\"C.UTF-8\"\n#   Add Edge repos\nRUN echo -e \"\\n@edgemain http://nl.alpinelinux.org/alpine/edge/main\\n@edgecomm http://nl.alpinelinux.org/alpine/edge/community\\n@edgetest http://nl.alpinelinux.org/alpine/edge/testing\" >> /etc/apk/repositories\n#   Install required packages\nRUN apk update \\\n && apk upgrade \\\n && apk --no-cache add bash build-base ca-certificates clang-dev clang cmake coreutils curl freetype-dev ffmpeg-dev ffmpeg-libs gcc g++ git gettext lcms2-dev libavc1394-dev libc-dev libffi-dev libjpeg-turbo-dev libpng-dev libressl-dev libtbb@edgetest libtbb-dev@edgetest libwebp-dev linux-headers make musl openblas@edgecomm openblas-dev@edgecomm openjpeg-dev openssl python3 python3-dev tiff-dev unzip zlib-dev\n#   Python 3 as default\nRUN ln -s /usr/bin/python3 /usr/local/bin/python \\\n && ln -s /usr/bin/pip3 /usr/local/bin/pip \\\n && pip install pip --upgrade\n#   Install NumPy\nRUN ln -s /usr/include/locale.h /usr/include/xlocale.h \\\n && pip install numpy\n#   Install OpenCV\nRUN mkdir /opt \\\n && cd /opt \\\n && wget https://github.com/opencv/opencv/archive/3.2.0.zip \\\n && unzip 3.2.0.zip \\\n && rm 3.2.0.zip \\\n && wget https://github.com/opencv/opencv_contrib/archive/3.2.0.zip \\\n && unzip 3.2.0.zip \\\n && rm 3.2.0.zip \\\n && cd /opt/opencv-3.2.0 \\\n && mkdir build \\\n && cd build \\\n && cmake -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_C_COMPILER=/usr/bin/clang -D CMAKE_CXX_COMPILER=/usr/bin/clang++ -D CMAKE_INSTALL_PREFIX=/usr/local -D INSTALL_PYTHON_EXAMPLES=OFF -D INSTALL_C_EXAMPLES=OFF -D WITH_FFMPEG=ON -D WITH_TBB=ON -D OPENCV_EXTRA_MODULES_PATH=/opt/opencv_contrib-3.2.0/modules -D PYTHON_EXECUTABLE=/usr/local/bin/python .. \\\n && make -j$( nproc ;) \\\n && make install \\\n && cd .. \\\n && rm -rf build \\\n && cp -p $( find /usr/local/lib/python3.5/site-packages -name cv2.*.so ;) /usr/lib/python3.5/site-packages/cv2.so \\\n && python -c 'import cv2; print(\"Python: import cv2 - SUCCESS\")'\n","originalDockerfileUglifiedHash":"3c0ecbcb13eb18b51839605f1589f33e","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/41129234b2a42f5aac40ce4559069d50321acafc.dockerfile"}