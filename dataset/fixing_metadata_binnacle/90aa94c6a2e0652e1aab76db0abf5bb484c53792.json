{"seed":897048457,"processedDockerfileHash":"3a71b7c791798dcb106e471f188b2e78","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","have-a-healthcheck"],"processedDockerfile":"#\n#   This Dockerfile is used to build a Docker image for Airflow that contains all\n#   dependencies and DAGs. This same image is used for the scheduler, webserver,\n#   and workers.\n#\n#   It's based on the ones in the Airflow repository:\n#\n#   https://github.com/apache/airflow/blob/master/Dockerfile\n#   https://github.com/apache/airflow/blob/master/scripts/ci/kubernetes/docker/Dockerfile\n#\n#   It also borrows from Puckel's popular image:\n#\n#   https://github.com/puckel/docker-airflow\n#\n#   The major differences:\n#\n#   1. Airflow is installed directly from the master branch instead of the tagged\n#      releases.  This involves cloning the code from Github into the image and\n#      building the frontend with npm.\n#\n#   2. Dependencies were added for ethereum-etl and bitcoin-etl.\n#\n#\nFROM python:3.6-slim\n#   Never prompts the user for choices on installation/configuration of packages\nENV DEBIAN_FRONTEND=\"noninteractive\"\nENV TERM=\"linux\"\n#   Dependences required for the build but not at runtime\nARG buildDeps=\" freetds-dev  libczmq-dev  libkrb5-dev  libsasl2-dev  libssl-dev  libffi-dev  libpq-dev  git  nodejs\"\n#   Dependencies required by Airflow at runtime\nARG APT_DEPS=\" $buildDeps  bind9utils  libsasl2-dev  freetds-bin  build-essential  default-libmysqlclient-dev  inetutils-telnet  apt-utils  curl  rsync  netcat  locales  wget  zip  unzip\"\n#   Dependencies installed via pip\nARG PYTHON_DEPS=\" pytz  cryptography  requests  pyOpenSSL  ndg-httpsclient  pyasn1  psycopg2-binary  Flask-Bcrypt  Flask-WTF==0.14  click  kubernetes  setuptools  wheel\"\n#   http://airflow.apache.org/installation.html\nARG AIRFLOW_DEPS=\"postgres,s3,devel\"\nARG AIRFLOW_HOME=/usr/local/airflow\n#   Required by ethereum-etl\nARG ETHEREUM_ETL_DEPS=\" google-api-python-client  httplib2  bitcoin-etl  ethereum-etl  mythril  pyetherchain  pandas  pandas-gbq\"\nENV AIRFLOW_GPL_UNIDECODE=\"yes\"\n#   Define en_US.\nENV LANGUAGE=\"en_US.UTF-8\"\nENV LANG=\"en_US.UTF-8\"\nENV LC_ALL=\"en_US.UTF-8\"\nENV LC_CTYPE=\"en_US.UTF-8\"\nENV LC_MESSAGES=\"en_US.UTF-8\"\nWORKDIR /opt/\nRUN set -ex \\\n && apt-get update -yqq \\\n && apt-get upgrade -yqq \\\n && apt-get install --no-install-recommends $APT_DEPS -y \\\n && pip install pip==23.1 --upgrade \\\n && pip install ${PYTHON_DEPS} --no-cache-dir \\\n && git clone --depth=1 https://github.com/apache/airflow.git \\\n && curl -sL https://deb.nodesource.com/setup_11.x | bash - \\\n && apt-get install --no-install-recommends nodejs=12.22.12~dfsg-1~deb11u3 -y \\\n && npm --prefix /opt/airflow/airflow/www install /opt/airflow/airflow/www \\\n && npm --prefix /opt/airflow/airflow/www run-script build \\\n && pip install --no-cache-dir -e /opt/airflow[$AIRFLOW_DEPS] \\\n && useradd -ms /bin/bash -d ${AIRFLOW_HOME} airflow \\\n && pip install boto3==1.26.114 \\\n && sed -i 's/^# en_US.UTF-8 UTF-8$/en_US.UTF-8 UTF-8/g' /etc/locale.gen \\\n && locale-gen \\\n && update-locale LANG=en_US.UTF-8 LC_ALL=en_US.UTF-8 \\\n && pip install ${ETHEREUM_ETL_DEPS} --no-cache-dir \\\n && apt-get purge --auto-remove -yqq $buildDeps \\\n && apt-get autoremove -yqq --purge \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /usr/share/man /usr/share/doc /usr/share/doc-base\nWORKDIR ${AIRFLOW_HOME}\nCOPY airflow/entrypoint.sh /entrypoint.sh\nCOPY airflow/config/airflow.cfg ${AIRFLOW_HOME}/airflow.cfg\nCOPY ./airflow/dags ${AIRFLOW_HOME}/dags\n#   Trying to get Kubernetes workers to load our dags\nCOPY ./airflow/dags /tmp/dags\nRUN chown -R airflow: ${AIRFLOW_HOME}\nEXPOSE 8080/tcp 5555/tcp 8793/tcp\nUSER airflow\nENTRYPOINT [\"/entrypoint.sh\"]\n#   sets default arg for entrypoint\nCMD [\"webserver\"]\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#\n#  This Dockerfile is used to build a Docker image for Airflow that contains all\n#  dependencies and DAGs. This same image is used for the scheduler, webserver,\n#  and workers.\n#\n#  It's based on the ones in the Airflow repository:\n#\n#  https://github.com/apache/airflow/blob/master/Dockerfile\n#  https://github.com/apache/airflow/blob/master/scripts/ci/kubernetes/docker/Dockerfile\n#\n#  It also borrows from Puckel's popular image:\n#\n#  https://github.com/puckel/docker-airflow\n#\n#  The major differences:\n#\n#  1. Airflow is installed directly from the master branch instead of the tagged\n#     releases.  This involves cloning the code from Github into the image and\n#     building the frontend with npm.\n#\n#  2. Dependencies were added for ethereum-etl and bitcoin-etl.\n#\n#\nFROM python:3.6-slim\n#  Never prompts the user for choices on installation/configuration of packages\nENV DEBIAN_FRONTEND=\"noninteractive\"\nENV TERM=\"linux\"\n#  Dependences required for the build but not at runtime\nARG buildDeps=\" freetds-dev  libczmq-dev  libkrb5-dev  libsasl2-dev  libssl-dev  libffi-dev  libpq-dev  git  nodejs\"\n#  Dependencies required by Airflow at runtime\nARG APT_DEPS=\" $buildDeps  bind9utils  libsasl2-dev  freetds-bin  build-essential  default-libmysqlclient-dev  inetutils-telnet  apt-utils  curl  rsync  netcat  locales  wget  zip  unzip\"\n#  Dependencies installed via pip\nARG PYTHON_DEPS=\" pytz  cryptography  requests  pyOpenSSL  ndg-httpsclient  pyasn1  psycopg2-binary  Flask-Bcrypt  Flask-WTF==0.14  click  kubernetes  setuptools  wheel\"\n#  http://airflow.apache.org/installation.html\nARG AIRFLOW_DEPS=\"postgres,s3,devel\"\nARG AIRFLOW_HOME=/usr/local/airflow\n#  Required by ethereum-etl\nARG ETHEREUM_ETL_DEPS=\" google-api-python-client  httplib2  bitcoin-etl  ethereum-etl  mythril  pyetherchain  pandas  pandas-gbq\"\nENV AIRFLOW_GPL_UNIDECODE=\"yes\"\n#  Define en_US.\nENV LANGUAGE=\"en_US.UTF-8\"\nENV LANG=\"en_US.UTF-8\"\nENV LC_ALL=\"en_US.UTF-8\"\nENV LC_CTYPE=\"en_US.UTF-8\"\nENV LC_MESSAGES=\"en_US.UTF-8\"\nWORKDIR /opt/\nRUN set -ex \\\n && apt-get update -yqq \\\n && apt-get upgrade -yqq \\\n && apt-get install -y $APT_DEPS \\\n && pip install pip --upgrade \\\n && pip install ${PYTHON_DEPS} --no-cache-dir \\\n && git clone --depth=1 https://github.com/apache/airflow.git \\\n && curl -sL https://deb.nodesource.com/setup_11.x | bash - \\\n && apt-get install nodejs -y \\\n && npm --prefix /opt/airflow/airflow/www install /opt/airflow/airflow/www \\\n && npm --prefix /opt/airflow/airflow/www run-script build \\\n && pip install --no-cache-dir -e /opt/airflow[$AIRFLOW_DEPS] \\\n && useradd -ms /bin/bash -d ${AIRFLOW_HOME} airflow \\\n && pip install boto3 \\\n && sed -i 's/^# en_US.UTF-8 UTF-8$/en_US.UTF-8 UTF-8/g' /etc/locale.gen \\\n && locale-gen \\\n && update-locale LANG=en_US.UTF-8 LC_ALL=en_US.UTF-8 \\\n && pip install ${ETHEREUM_ETL_DEPS} --no-cache-dir \\\n && apt-get purge --auto-remove -yqq $buildDeps \\\n && apt-get autoremove -yqq --purge \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /usr/share/man /usr/share/doc /usr/share/doc-base\nWORKDIR ${AIRFLOW_HOME}\nCOPY airflow/entrypoint.sh /entrypoint.sh\nCOPY airflow/config/airflow.cfg ${AIRFLOW_HOME}/airflow.cfg\nCOPY ./airflow/dags ${AIRFLOW_HOME}/dags\n#  Trying to get Kubernetes workers to load our dags\nCOPY ./airflow/dags /tmp/dags\nRUN chown -R airflow: ${AIRFLOW_HOME}\nEXPOSE 8080/tcp 5555/tcp 8793/tcp\nUSER airflow\nENTRYPOINT [\"/entrypoint.sh\"]\n#  sets default arg for entrypoint\nCMD [\"webserver\"]\n","injectedSmells":[],"originalDockerfileHash":"7e74b9f04866b82edc77b4c63577df89","successfullyInjectedSmells":[],"originalDockerfileUglified":"#\n#   This Dockerfile is used to build a Docker image for Airflow that contains all\n#   dependencies and DAGs. This same image is used for the scheduler, webserver,\n#   and workers.\n#\n#   It's based on the ones in the Airflow repository:\n#\n#   https://github.com/apache/airflow/blob/master/Dockerfile\n#   https://github.com/apache/airflow/blob/master/scripts/ci/kubernetes/docker/Dockerfile\n#\n#   It also borrows from Puckel's popular image:\n#\n#   https://github.com/puckel/docker-airflow\n#\n#   The major differences:\n#\n#   1. Airflow is installed directly from the master branch instead of the tagged\n#      releases.  This involves cloning the code from Github into the image and\n#      building the frontend with npm.\n#\n#   2. Dependencies were added for ethereum-etl and bitcoin-etl.\n#\n#\nFROM python:3.6-slim\n#   Never prompts the user for choices on installation/configuration of packages\nENV DEBIAN_FRONTEND=\"noninteractive\"\nENV TERM=\"linux\"\n#   Dependences required for the build but not at runtime\nARG buildDeps=\" freetds-dev  libczmq-dev  libkrb5-dev  libsasl2-dev  libssl-dev  libffi-dev  libpq-dev  git  nodejs\"\n#   Dependencies required by Airflow at runtime\nARG APT_DEPS=\" $buildDeps  bind9utils  libsasl2-dev  freetds-bin  build-essential  default-libmysqlclient-dev  inetutils-telnet  apt-utils  curl  rsync  netcat  locales  wget  zip  unzip\"\n#   Dependencies installed via pip\nARG PYTHON_DEPS=\" pytz  cryptography  requests  pyOpenSSL  ndg-httpsclient  pyasn1  psycopg2-binary  Flask-Bcrypt  Flask-WTF==0.14  click  kubernetes  setuptools  wheel\"\n#   http://airflow.apache.org/installation.html\nARG AIRFLOW_DEPS=\"postgres,s3,devel\"\nARG AIRFLOW_HOME=/usr/local/airflow\n#   Required by ethereum-etl\nARG ETHEREUM_ETL_DEPS=\" google-api-python-client  httplib2  bitcoin-etl  ethereum-etl  mythril  pyetherchain  pandas  pandas-gbq\"\nENV AIRFLOW_GPL_UNIDECODE=\"yes\"\n#   Define en_US.\nENV LANGUAGE=\"en_US.UTF-8\"\nENV LANG=\"en_US.UTF-8\"\nENV LC_ALL=\"en_US.UTF-8\"\nENV LC_CTYPE=\"en_US.UTF-8\"\nENV LC_MESSAGES=\"en_US.UTF-8\"\nWORKDIR /opt/\nRUN set -ex \\\n && apt-get update -yqq \\\n && apt-get upgrade -yqq \\\n && apt-get install $APT_DEPS -y \\\n && pip install pip --upgrade \\\n && pip install ${PYTHON_DEPS} --no-cache-dir \\\n && git clone --depth=1 https://github.com/apache/airflow.git \\\n && curl -sL https://deb.nodesource.com/setup_11.x | bash - \\\n && apt-get install nodejs -y \\\n && npm --prefix /opt/airflow/airflow/www install /opt/airflow/airflow/www \\\n && npm --prefix /opt/airflow/airflow/www run-script build \\\n && pip install --no-cache-dir -e /opt/airflow[$AIRFLOW_DEPS] \\\n && useradd -ms /bin/bash -d ${AIRFLOW_HOME} airflow \\\n && pip install boto3 \\\n && sed -i 's/^# en_US.UTF-8 UTF-8$/en_US.UTF-8 UTF-8/g' /etc/locale.gen \\\n && locale-gen \\\n && update-locale LANG=en_US.UTF-8 LC_ALL=en_US.UTF-8 \\\n && pip install ${ETHEREUM_ETL_DEPS} --no-cache-dir \\\n && apt-get purge --auto-remove -yqq $buildDeps \\\n && apt-get autoremove -yqq --purge \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /usr/share/man /usr/share/doc /usr/share/doc-base\nWORKDIR ${AIRFLOW_HOME}\nCOPY airflow/entrypoint.sh /entrypoint.sh\nCOPY airflow/config/airflow.cfg ${AIRFLOW_HOME}/airflow.cfg\nCOPY ./airflow/dags ${AIRFLOW_HOME}/dags\n#   Trying to get Kubernetes workers to load our dags\nCOPY ./airflow/dags /tmp/dags\nRUN chown -R airflow: ${AIRFLOW_HOME}\nEXPOSE 8080/tcp 5555/tcp 8793/tcp\nUSER airflow\nENTRYPOINT [\"/entrypoint.sh\"]\n#   sets default arg for entrypoint\nCMD [\"webserver\"]\n","originalDockerfileUglifiedHash":"b7fd5bb77a76c3e1eb90e216dede6565","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/90aa94c6a2e0652e1aab76db0abf5bb484c53792.dockerfile"}