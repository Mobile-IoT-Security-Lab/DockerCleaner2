{"seed":1652186073,"processedDockerfileHash":"a4b3f6eefaf1e342b751ff883f11fb71","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM debian:wheezy\nRUN apt-get update \\\n && apt-get install --no-install-recommends autoconf build-essential curl libxml2-dev libssl-dev p7zip-full hfsplus hfsutils hfsprogs cpio -y\n#   We need the bomutils to create the Mac OS X Bill of Materials (BOM) files.\n#   https://github.com/hogliux/bomutils\nRUN curl -fsSL https://github.com/hogliux/bomutils/archive/0.2.tar.gz | tar xvz \\\n && cd bomutils-* \\\n && make \\\n && make install\n#   Needed to pack/unpack the .pkg files\nRUN curl -fsSL https://github.com/mackyle/xar/archive/xar-1.6.1.tar.gz | tar xvz \\\n && cd xar-*/xar \\\n && ./autogen.sh \\\n && ./configure \\\n && make \\\n && make install\nENV VBOX_VERSION=\"5.0.0\"\nENV VBOX_REV=\"101573\"\nRUN curl -fsSL -o /vbox.dmg http://download.virtualbox.org/virtualbox/$VBOX_VERSION/VirtualBox-$VBOX_VERSION-$VBOX_REV-OSX.dmg \\\n && echo \"$( curl -fsSL 'http://download.virtualbox.org/virtualbox/'\"$VBOX_VERSION\"'/SHA256SUMS' | awk '$2 ~ /-OSX.dmg$/ { print $1 }' ;) */vbox.dmg\" | sha256sum -c -\n#   Download the Docker parts\nENV DOCKER_VERSION=\"1.8.0\"\nRUN curl -fsSL -o /docker.tgz https://get.docker.com/builds/Darwin/x86_64/docker-$DOCKER_VERSION.tgz\nENV BOOT2DOCKER_CLI_VERSION=\"${DOCKER_VERSION}\"\nRUN curl -fsSL -o /boot2docker https://github.com/boot2docker/boot2docker-cli/releases/download/v${BOOT2DOCKER_CLI_VERSION}/boot2docker-v${BOOT2DOCKER_CLI_VERSION}-darwin-amd64\nENV BOOT2DOCKER_ISO_VERSION=\"$DOCKER_VERSION\"\nRUN curl -fsSL -o /boot2docker.iso https://github.com/boot2docker/boot2docker/releases/download/v${BOOT2DOCKER_ISO_VERSION}/boot2docker.iso\nENV INSTALLER_VERSION=\"$DOCKER_VERSION\"\n#   Start building package\nCOPY mpkg /mpkg\n#    Extract the VirtualBox .pkg\nRUN mkdir -p /mpkg/vbox \\\n && cd /mpkg/vbox \\\n && 7z x /vbox.dmg -ir'!*.hfs' \\\n && 7z x `find . -name '*.hfs' ` -ir'!*.pkg' \\\n && mv VirtualBox/VirtualBox.pkg . \\\n && rm -rf vbox.dmg \\\n && rm -rf `find . -name '*.hfs' `\n#   Extract the .pkg files\nRUN cd /mpkg/vbox \\\n && mv VirtualBox.pkg /tmp \\\n && xar -xf /tmp/VirtualBox.pkg \\\n && rm -rf /tmp/VirtualBox.pkg\nRUN cd /mpkg/vbox \\\n && mv *.pkg .. \\\n && rm -rf vbox\n#   docker.pkg\nRUN cd /mpkg/docker.pkg \\\n && mkdir rootfs \\\n && cd rootfs \\\n && tar xvzf /docker.tgz \\\n && find . | cpio -o --format odc | gzip -c > ../Payload \\\n && mkbom . ../Bom \\\n && sed -i -e \"s/%DOCKER_NUMBER_OF_FILES%/`find . | wc -l `/g\" -e \"s/%DOCKER_INSTALL_KBYTES%/`du -sk | cut -f1 `/g\" -e \"s/%DOCKER_VERSION%/$DOCKER_VERSION/g\" ../PackageInfo /mpkg/Distribution \\\n && cd .. \\\n && rm -rf ./rootfs\n#   boot2docker.pkg\nRUN cd /mpkg/boot2docker.pkg \\\n && mkdir ./rootfs \\\n && cd ./rootfs \\\n && cp /boot2docker . \\\n && chmod +x boot2docker \\\n && find . | cpio -o --format odc | gzip -c > ../Payload \\\n && mkbom . ../Bom \\\n && sed -i -e \"s/%BOOT2DOCKER_NUMBER_OF_FILES%/`find . | wc -l `/g\" -e \"s/%BOOT2DOCKER_INSTALL_KBYTES%/`du -sk | cut -f1 `/g\" -e \"s/%BOOT2DOCKER_VERSION%/$BOOT2DOCKER_CLI_VERSION/g\" ../PackageInfo /mpkg/Distribution \\\n && cd .. \\\n && rm -rf ./rootfs\n#   boot2dockeriso.pkg\nRUN cd /mpkg/boot2dockeriso.pkg \\\n && mkdir ./rootfs \\\n && cd ./rootfs \\\n && cp /boot2docker.iso . \\\n && find . | cpio -o --format odc | gzip -c > ../Payload \\\n && mkbom . ../Bom \\\n && sed -i -e \"s/%BOOT2DOCKER_ISO_NUMBER_OF_FILES%/`find . | wc -l `/g\" -e \"s/%BOOT2DOCKER_ISO_INSTALL_KBYTES%/`du -sk | cut -f1 `/g\" -e \"s/%BOOT2DOCKER_ISO_VERSION%/$BOOT2DOCKER_ISO_VERSION/g\" ../PackageInfo /mpkg/Distribution \\\n && cd .. \\\n && rm -rf ./rootfs\n#   boot2dockerapp.pkg\nRUN cd /mpkg/boot2dockerapp.pkg \\\n && mkdir ./rootfs \\\n && cd ./rootfs \\\n && mv /mpkg/boot2docker.app . \\\n && find . | cpio -o --format odc | gzip -c > ../Payload \\\n && mkbom . ../Bom \\\n && sed -i -e \"s/%BOOT2DOCKERAPP_NUMBER_OF_FILES%/`find . | wc -l `/g\" -e \"s/%BOOT2DOCKERAPP_INSTALL_KBYTES%/`du -sk | cut -f1 `/g\" -e \"s/%BOOT2DOCKERAPP_VERSION%/$INSTALLER_VERSION/g\" ../PackageInfo /mpkg/Distribution \\\n && cd .. \\\n && rm -rf ./rootfs\nRUN sed -i -e \"s/%INSTALLER_VERSION%/$INSTALLER_VERSION/g\" mpkg/Resources/en.lproj/Welcome.html\nRUN sed -i -e \"s/%INSTALLER_VERSION%/$INSTALLER_VERSION/g\" mpkg/Resources/en.lproj/Installed.html\nRUN sed -i -e \"s/%INSTALLER_VERSION%/$INSTALLER_VERSION/g\" /mpkg/Distribution \\\n && sed -i -e \"s/%VBOX_VERSION%/$VBOX_VERSION/g\" /mpkg/Distribution \\\n && sed -i -e \"s/%VBOX_VERSION%/$VBOX_VERSION/g\" mpkg/Resources/en.lproj/Localizable.strings\n#   Make DMG rootfs\nRUN mkdir -p /dmg\n#   Repackage back. Yes, --compression=none is mandatory.\n#   or this won't install in OSX.\nRUN cd /mpkg \\\n && xar -c --compression=none -f /dmg/Docker.pkg .\nCOPY makedmg.sh /\nCMD [\"/makedmg.sh\", \"docker.dmg\", \"Docker\", \"/dmg\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM debian:wheezy\nRUN apt-get update \\\n && apt-get install autoconf build-essential curl libxml2-dev libssl-dev p7zip-full hfsplus hfsutils hfsprogs cpio -y\n#  We need the bomutils to create the Mac OS X Bill of Materials (BOM) files.\n#  https://github.com/hogliux/bomutils\nRUN curl -fsSL https://github.com/hogliux/bomutils/archive/0.2.tar.gz | tar xvz \\\n && cd bomutils-* \\\n && make \\\n && make install\n#  Needed to pack/unpack the .pkg files\nRUN curl -fsSL https://github.com/mackyle/xar/archive/xar-1.6.1.tar.gz | tar xvz \\\n && cd xar-*/xar \\\n && ./autogen.sh \\\n && ./configure \\\n && make \\\n && make install\nENV VBOX_VERSION=\"5.0.0\"\nENV VBOX_REV=\"101573\"\nRUN curl -fsSL -o /vbox.dmg http://download.virtualbox.org/virtualbox/$VBOX_VERSION/VirtualBox-$VBOX_VERSION-$VBOX_REV-OSX.dmg \\\n && echo \"$( curl -fsSL 'http://download.virtualbox.org/virtualbox/'\"$VBOX_VERSION\"'/SHA256SUMS' | awk '$2 ~ /-OSX.dmg$/ { print $1 }' ;) */vbox.dmg\" | sha256sum -c -\n#  Download the Docker parts\nENV DOCKER_VERSION=\"1.8.0\"\nRUN curl -fsSL -o /docker.tgz https://get.docker.com/builds/Darwin/x86_64/docker-$DOCKER_VERSION.tgz\nENV BOOT2DOCKER_CLI_VERSION=\"${DOCKER_VERSION}\"\nRUN curl -fsSL -o /boot2docker https://github.com/boot2docker/boot2docker-cli/releases/download/v${BOOT2DOCKER_CLI_VERSION}/boot2docker-v${BOOT2DOCKER_CLI_VERSION}-darwin-amd64\nENV BOOT2DOCKER_ISO_VERSION=\"$DOCKER_VERSION\"\nRUN curl -fsSL -o /boot2docker.iso https://github.com/boot2docker/boot2docker/releases/download/v${BOOT2DOCKER_ISO_VERSION}/boot2docker.iso\nENV INSTALLER_VERSION=\"$DOCKER_VERSION\"\n#  Start building package\nCOPY mpkg /mpkg\n#   Extract the VirtualBox .pkg\nRUN mkdir -p /mpkg/vbox \\\n && cd /mpkg/vbox \\\n && 7z x /vbox.dmg -ir'!*.hfs' \\\n && 7z x `find . -name '*.hfs' ` -ir'!*.pkg' \\\n && mv VirtualBox/VirtualBox.pkg . \\\n && rm -rf vbox.dmg \\\n && rm -rf `find . -name '*.hfs' `\n#  Extract the .pkg files\nRUN cd /mpkg/vbox \\\n && mv VirtualBox.pkg /tmp \\\n && xar -xf /tmp/VirtualBox.pkg \\\n && rm -rf /tmp/VirtualBox.pkg\nRUN cd /mpkg/vbox \\\n && mv *.pkg .. \\\n && rm -rf vbox\n#  docker.pkg\nRUN cd /mpkg/docker.pkg \\\n && mkdir rootfs \\\n && cd rootfs \\\n && tar xvzf /docker.tgz \\\n && find . | cpio -o --format odc | gzip -c > ../Payload \\\n && mkbom . ../Bom \\\n && sed -i -e \"s/%DOCKER_NUMBER_OF_FILES%/`find . | wc -l `/g\" -e \"s/%DOCKER_INSTALL_KBYTES%/`du -sk | cut -f1 `/g\" -e \"s/%DOCKER_VERSION%/$DOCKER_VERSION/g\" ../PackageInfo /mpkg/Distribution \\\n && cd .. \\\n && rm -rf ./rootfs\n#  boot2docker.pkg\nRUN cd /mpkg/boot2docker.pkg \\\n && mkdir ./rootfs \\\n && cd ./rootfs \\\n && cp /boot2docker . \\\n && chmod +x boot2docker \\\n && find . | cpio -o --format odc | gzip -c > ../Payload \\\n && mkbom . ../Bom \\\n && sed -i -e \"s/%BOOT2DOCKER_NUMBER_OF_FILES%/`find . | wc -l `/g\" -e \"s/%BOOT2DOCKER_INSTALL_KBYTES%/`du -sk | cut -f1 `/g\" -e \"s/%BOOT2DOCKER_VERSION%/$BOOT2DOCKER_CLI_VERSION/g\" ../PackageInfo /mpkg/Distribution \\\n && cd .. \\\n && rm -rf ./rootfs\n#  boot2dockeriso.pkg\nRUN cd /mpkg/boot2dockeriso.pkg \\\n && mkdir ./rootfs \\\n && cd ./rootfs \\\n && cp /boot2docker.iso . \\\n && find . | cpio -o --format odc | gzip -c > ../Payload \\\n && mkbom . ../Bom \\\n && sed -i -e \"s/%BOOT2DOCKER_ISO_NUMBER_OF_FILES%/`find . | wc -l `/g\" -e \"s/%BOOT2DOCKER_ISO_INSTALL_KBYTES%/`du -sk | cut -f1 `/g\" -e \"s/%BOOT2DOCKER_ISO_VERSION%/$BOOT2DOCKER_ISO_VERSION/g\" ../PackageInfo /mpkg/Distribution \\\n && cd .. \\\n && rm -rf ./rootfs\n#  boot2dockerapp.pkg\nRUN cd /mpkg/boot2dockerapp.pkg \\\n && mkdir ./rootfs \\\n && cd ./rootfs \\\n && mv /mpkg/boot2docker.app . \\\n && find . | cpio -o --format odc | gzip -c > ../Payload \\\n && mkbom . ../Bom \\\n && sed -i -e \"s/%BOOT2DOCKERAPP_NUMBER_OF_FILES%/`find . | wc -l `/g\" -e \"s/%BOOT2DOCKERAPP_INSTALL_KBYTES%/`du -sk | cut -f1 `/g\" -e \"s/%BOOT2DOCKERAPP_VERSION%/$INSTALLER_VERSION/g\" ../PackageInfo /mpkg/Distribution \\\n && cd .. \\\n && rm -rf ./rootfs\nRUN sed -i -e \"s/%INSTALLER_VERSION%/$INSTALLER_VERSION/g\" mpkg/Resources/en.lproj/Welcome.html\nRUN sed -i -e \"s/%INSTALLER_VERSION%/$INSTALLER_VERSION/g\" mpkg/Resources/en.lproj/Installed.html\nRUN sed -i -e \"s/%INSTALLER_VERSION%/$INSTALLER_VERSION/g\" /mpkg/Distribution \\\n && sed -i -e \"s/%VBOX_VERSION%/$VBOX_VERSION/g\" /mpkg/Distribution \\\n && sed -i -e \"s/%VBOX_VERSION%/$VBOX_VERSION/g\" mpkg/Resources/en.lproj/Localizable.strings\n#  Make DMG rootfs\nRUN mkdir -p /dmg\n#  Repackage back. Yes, --compression=none is mandatory.\n#  or this won't install in OSX.\nRUN cd /mpkg \\\n && xar -c --compression=none -f /dmg/Docker.pkg .\nCOPY makedmg.sh /\nCMD [\"/makedmg.sh\", \"docker.dmg\", \"Docker\", \"/dmg\"]\n","injectedSmells":[],"originalDockerfileHash":"3863d7fb0b529ecbf1a209a4627a5bd9","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM debian:wheezy\nRUN apt-get update \\\n && apt-get install autoconf build-essential curl libxml2-dev libssl-dev p7zip-full hfsplus hfsutils hfsprogs cpio -y\n#   We need the bomutils to create the Mac OS X Bill of Materials (BOM) files.\n#   https://github.com/hogliux/bomutils\nRUN curl -fsSL https://github.com/hogliux/bomutils/archive/0.2.tar.gz | tar xvz \\\n && cd bomutils-* \\\n && make \\\n && make install\n#   Needed to pack/unpack the .pkg files\nRUN curl -fsSL https://github.com/mackyle/xar/archive/xar-1.6.1.tar.gz | tar xvz \\\n && cd xar-*/xar \\\n && ./autogen.sh \\\n && ./configure \\\n && make \\\n && make install\nENV VBOX_VERSION=\"5.0.0\"\nENV VBOX_REV=\"101573\"\nRUN curl -fsSL -o /vbox.dmg http://download.virtualbox.org/virtualbox/$VBOX_VERSION/VirtualBox-$VBOX_VERSION-$VBOX_REV-OSX.dmg \\\n && echo \"$( curl -fsSL 'http://download.virtualbox.org/virtualbox/'\"$VBOX_VERSION\"'/SHA256SUMS' | awk '$2 ~ /-OSX.dmg$/ { print $1 }' ;) */vbox.dmg\" | sha256sum -c -\n#   Download the Docker parts\nENV DOCKER_VERSION=\"1.8.0\"\nRUN curl -fsSL -o /docker.tgz https://get.docker.com/builds/Darwin/x86_64/docker-$DOCKER_VERSION.tgz\nENV BOOT2DOCKER_CLI_VERSION=\"${DOCKER_VERSION}\"\nRUN curl -fsSL -o /boot2docker https://github.com/boot2docker/boot2docker-cli/releases/download/v${BOOT2DOCKER_CLI_VERSION}/boot2docker-v${BOOT2DOCKER_CLI_VERSION}-darwin-amd64\nENV BOOT2DOCKER_ISO_VERSION=\"$DOCKER_VERSION\"\nRUN curl -fsSL -o /boot2docker.iso https://github.com/boot2docker/boot2docker/releases/download/v${BOOT2DOCKER_ISO_VERSION}/boot2docker.iso\nENV INSTALLER_VERSION=\"$DOCKER_VERSION\"\n#   Start building package\nCOPY mpkg /mpkg\n#    Extract the VirtualBox .pkg\nRUN mkdir -p /mpkg/vbox \\\n && cd /mpkg/vbox \\\n && 7z x /vbox.dmg -ir'!*.hfs' \\\n && 7z x `find . -name '*.hfs' ` -ir'!*.pkg' \\\n && mv VirtualBox/VirtualBox.pkg . \\\n && rm -rf vbox.dmg \\\n && rm -rf `find . -name '*.hfs' `\n#   Extract the .pkg files\nRUN cd /mpkg/vbox \\\n && mv VirtualBox.pkg /tmp \\\n && xar -xf /tmp/VirtualBox.pkg \\\n && rm -rf /tmp/VirtualBox.pkg\nRUN cd /mpkg/vbox \\\n && mv *.pkg .. \\\n && rm -rf vbox\n#   docker.pkg\nRUN cd /mpkg/docker.pkg \\\n && mkdir rootfs \\\n && cd rootfs \\\n && tar xvzf /docker.tgz \\\n && find . | cpio -o --format odc | gzip -c > ../Payload \\\n && mkbom . ../Bom \\\n && sed -i -e \"s/%DOCKER_NUMBER_OF_FILES%/`find . | wc -l `/g\" -e \"s/%DOCKER_INSTALL_KBYTES%/`du -sk | cut -f1 `/g\" -e \"s/%DOCKER_VERSION%/$DOCKER_VERSION/g\" ../PackageInfo /mpkg/Distribution \\\n && cd .. \\\n && rm -rf ./rootfs\n#   boot2docker.pkg\nRUN cd /mpkg/boot2docker.pkg \\\n && mkdir ./rootfs \\\n && cd ./rootfs \\\n && cp /boot2docker . \\\n && chmod +x boot2docker \\\n && find . | cpio -o --format odc | gzip -c > ../Payload \\\n && mkbom . ../Bom \\\n && sed -i -e \"s/%BOOT2DOCKER_NUMBER_OF_FILES%/`find . | wc -l `/g\" -e \"s/%BOOT2DOCKER_INSTALL_KBYTES%/`du -sk | cut -f1 `/g\" -e \"s/%BOOT2DOCKER_VERSION%/$BOOT2DOCKER_CLI_VERSION/g\" ../PackageInfo /mpkg/Distribution \\\n && cd .. \\\n && rm -rf ./rootfs\n#   boot2dockeriso.pkg\nRUN cd /mpkg/boot2dockeriso.pkg \\\n && mkdir ./rootfs \\\n && cd ./rootfs \\\n && cp /boot2docker.iso . \\\n && find . | cpio -o --format odc | gzip -c > ../Payload \\\n && mkbom . ../Bom \\\n && sed -i -e \"s/%BOOT2DOCKER_ISO_NUMBER_OF_FILES%/`find . | wc -l `/g\" -e \"s/%BOOT2DOCKER_ISO_INSTALL_KBYTES%/`du -sk | cut -f1 `/g\" -e \"s/%BOOT2DOCKER_ISO_VERSION%/$BOOT2DOCKER_ISO_VERSION/g\" ../PackageInfo /mpkg/Distribution \\\n && cd .. \\\n && rm -rf ./rootfs\n#   boot2dockerapp.pkg\nRUN cd /mpkg/boot2dockerapp.pkg \\\n && mkdir ./rootfs \\\n && cd ./rootfs \\\n && mv /mpkg/boot2docker.app . \\\n && find . | cpio -o --format odc | gzip -c > ../Payload \\\n && mkbom . ../Bom \\\n && sed -i -e \"s/%BOOT2DOCKERAPP_NUMBER_OF_FILES%/`find . | wc -l `/g\" -e \"s/%BOOT2DOCKERAPP_INSTALL_KBYTES%/`du -sk | cut -f1 `/g\" -e \"s/%BOOT2DOCKERAPP_VERSION%/$INSTALLER_VERSION/g\" ../PackageInfo /mpkg/Distribution \\\n && cd .. \\\n && rm -rf ./rootfs\nRUN sed -i -e \"s/%INSTALLER_VERSION%/$INSTALLER_VERSION/g\" mpkg/Resources/en.lproj/Welcome.html\nRUN sed -i -e \"s/%INSTALLER_VERSION%/$INSTALLER_VERSION/g\" mpkg/Resources/en.lproj/Installed.html\nRUN sed -i -e \"s/%INSTALLER_VERSION%/$INSTALLER_VERSION/g\" /mpkg/Distribution \\\n && sed -i -e \"s/%VBOX_VERSION%/$VBOX_VERSION/g\" /mpkg/Distribution \\\n && sed -i -e \"s/%VBOX_VERSION%/$VBOX_VERSION/g\" mpkg/Resources/en.lproj/Localizable.strings\n#   Make DMG rootfs\nRUN mkdir -p /dmg\n#   Repackage back. Yes, --compression=none is mandatory.\n#   or this won't install in OSX.\nRUN cd /mpkg \\\n && xar -c --compression=none -f /dmg/Docker.pkg .\nCOPY makedmg.sh /\nCMD [\"/makedmg.sh\", \"docker.dmg\", \"Docker\", \"/dmg\"]\n","originalDockerfileUglifiedHash":"32a550f5d965a46c740eaa5ad8f815cf","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/91e0c84e0d6115d26f85f7075100b0bbd9c0e96a.dockerfile"}