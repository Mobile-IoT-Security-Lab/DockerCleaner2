{"seed":4012251805,"processedDockerfileHash":"69356849f35082b437634aa08e1e8859","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","have-a-healthcheck","have-a-user"],"processedDockerfile":"#  ##\n#   Dockerfile for Hyrax OLFS\n#  ##\nFROM unidata/tomcat-docker:8\nMAINTAINER support@opendap.org\n#   HYRAX VERSION INFO\nENV HYRAX_VERSION=\"1.15\"\nENV OLFS_VERSION=\"1.18.4\"\nENV RELEASE_DATE=\"2019-03-25\"\nLABEL vendor=\"OPeNDAP Incorporated\"\nLABEL org.opendap.olfs.version=\"1.18.4\"\nLABEL org.opendap.olfs.release-date=\"2019-03-25\"\nLABEL org.opendap.hyrax.version.is-production=\"true\"\nUSER root\n#   Update OS and install ps (and other filesystem utils)\nRUN set -e \\\n && apt-get update \\\n && apt-get install --no-install-recommends procps -y\n#\n#   The --build-arg USE_NCWMS can be set to \"true\" in order to \n#   add the ncWMS application to the build.\nARG USE_NCWMS\nENV USE_NCWMS=\"${USE_NCWMS:-\\\"false\\\"}\"\nRUN set -e \\\n && if [ $USE_NCWMS = \"true\" ] ; then echo \"NCWMS: ENABLED\" ; else echo \"NCWMS: DISABLED\" ; fi\n#\n#   The --build-arg NCWMS_BASE can be set to the base URL for ncWMS.\n#   The entrypoint.sh code defaults it to\n#   the URL: https://localhost:8080 if the environment variable NCWMS_BASE\n#   is not in the shell from which the entrypoint.sh script is called.\nARG NCWMS_BASE\nENV NCWMS_BASE=\"${NCWMS_BASE:-\\\"https://localhost:8080\\\"}\"\nRUN set -e \\\n && if [ $USE_NCWMS = \"true\" ] ; then echo \"NCWMS_BASE: {$NCWMS_BASE}\" ; fi\n#  ##\n#   Grab and unzip the OLFS\n#  ##\n#   Tomcat environment?\nENV PATH=\"$CATALINA_HOME/bin:$PATH\"\nRUN echo \"CATALINA_HOME: $CATALINA_HOME\"\n#   Installs the OPeNDAP security public key.\n#   TODO: We should get this from a well known key-server instead.\nRUN echo \"Adding OPeNDAP Public Security Key\"\nENV OPENDAP_PUBLIC_KEY_FILE=\"security_at_opendap.org.pub.asc\"\nENV OPENDAP_PUBLIC_KEY_URL=\"https://www.opendap.org/${OPENDAP_PUBLIC_KEY_FILE}\"\nRUN set -e \\\n && curl -s $OPENDAP_PUBLIC_KEY_URL > $OPENDAP_PUBLIC_KEY_FILE \\\n && gpg --import $OPENDAP_PUBLIC_KEY_FILE\nENV OLFS_WAR_URL=\"https://www.opendap.org/pub/olfs/olfs-${OLFS_VERSION}-webapp.tgz\"\n#  ##############################################################\n#   Retrieve, verify, and install the OLFS web application\nRUN set -e \\\n && echo \"Retrieving And Installing OLFS-${OLFS_VERSION}\" \\\n && curl -sfSL ${OLFS_WAR_URL} > olfs-${OLFS_VERSION}.tgz \\\n && curl -sfSL ${OLFS_WAR_URL}.sig > olfs-${OLFS_VERSION}.tgz.sig \\\n && echo \"Verifying tarball...\" \\\n && gpg --verify olfs-${OLFS_VERSION}.tgz.sig olfs-${OLFS_VERSION}.tgz \\\n && echo \"Unpacking tarball...\" \\\n && tar -C /dev/shm -xzf olfs-${OLFS_VERSION}.tgz \\\n && echo \"Unpacking warfile...\" \\\n && unzip -o /dev/shm/olfs-${OLFS_VERSION}-webapp/opendap.war -d ${CATALINA_HOME}/webapps/opendap/ \\\n && echo \"Cleaning up.\" \\\n && rm -rf /dev/shm/* olfs-${OLFS_VERSION}.tgz*\n#   set host for bes that olfs will contact - this is expected to be over docker's internal network\nARG BES_HOST\nENV BES_HOST=\"${BES_HOST:-besd}\"\nRUN sed -i \"s/localhost/${BES_HOST}/\" ${CATALINA_HOME}/webapps/opendap/WEB-INF/conf/olfs.xml\n#\n#   Setting NCWMS_HOST to the protocol, host, and port \n#   section of the publicly acessible URL of the \n#   ncWMS service. Using localhost is all well and good\n#   for testing but this needs to be settable at \n#   build time for sure and maybe even docker runtime? \n#\nCOPY olfs_viewers.xml /tmp/olfs_viewers.xml\nRUN set -e \\\n && if [ $USE_NCWMS = \"true\" ] ; then mv /tmp/olfs_viewers.xml ${CATALINA_HOME}/webapps/opendap/WEB-INF/conf/viewers.xml ; else echo \"Skipping OLFS/ncWMS confguration installation.\" ; fi\n#  ##\n#   Expose ports\n#  ##\nEXPOSE 8080/tcp 8443/tcp\n#\n#   I commented this next section out (2019-02-24) because at this time the unidata/tomcat-docker:8 image is running\n#   Tomcat as the root user - ndp\n#\n#   Fix ownership and access permissions\n#  RUN mkdir -p ${CATALINA_HOME}/webapps/opendap/WEB-INF/conf/logs && \\\n#      chown -R tomcat ${CATALINA_HOME}/webapps/opendap/WEB-INF/conf/logs && \\\n#      chgrp -R tomcat ${CATALINA_HOME}/webapps/opendap/WEB-INF/conf/logs && \\\n#      chmod 700 ${CATALINA_HOME}/webapps/opendap/WEB-INF/conf/logs\n#  #########################################################################################\n#   The following is an effort to tweak the security policy to allow the JULI code to\n#   to look at webapps/opendap/WEB-INF/classes/logging.properties Even though this\n#   file does not exist and the code will move on to other locations the fact that \n#   it trys to look at it is enough to alert the security manager.\n#\n#   COPY logging_config.policy /tmp/policy\n#   RUN set -e \\\n#      && lines=`cat ${CATALINA_HOME}/conf/catalina.policy | wc -l` \\\n#      && insert=`grep -n 'grant codeBase \\\"file:\\${catalina.home}/bin/tomcat-juli.jar' ${CATALINA_HOME}/conf/catalina.policy \\\n#      | awk '{split($0,s,\":\"); print s[1];}' -` \\\n#      && muh_tail=`expr $lines - $insert + 1` \\\n#      && echo \"lines: $lines insert: $insert muh_tail: $muh_tail\" \\\n#      && head -$insert ${CATALINA_HOME}/conf/catalina.policy > /tmp/catalina.policy \\\n#      && cat /tmp/policy >> /tmp/catalina.policy \\\n#      && tail -n $muh_tail ${CATALINA_HOME}/conf/catalina.policy >> /tmp/catalina.policy \\\n#      && cp /tmp/catalina.policy ${CATALINA_HOME}/conf/catalina.policy \\\n#      && chown -R tomcat ${CATALINA_HOME}/conf/catalina.policy \\\n#      && chgrp -R tomcat ${CATALINA_HOME}/conf/catalina.policy \\\n#      && echo \"\" \\\n#      && echo \"Updated catalina.policy: \" \\\n#      && cat ${CATALINA_HOME}/conf/catalina.policy\n#  #########################################################################################\nCOPY entrypoint.sh /entrypoint.sh\nRUN chmod +x /entrypoint.sh \\\n && cat /entrypoint.sh\nENTRYPOINT [\"/entrypoint.sh\"]\nCMD [\"-\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"# ##\n#  Dockerfile for Hyrax OLFS\n# ##\nFROM unidata/tomcat-docker:8\nMAINTAINER support@opendap.org\n#  HYRAX VERSION INFO\nENV HYRAX_VERSION=\"1.15\"\nENV OLFS_VERSION=\"1.18.4\"\nENV RELEASE_DATE=\"2019-03-25\"\nLABEL vendor=\"OPeNDAP Incorporated\"\nLABEL org.opendap.olfs.version=\"1.18.4\"\nLABEL org.opendap.olfs.release-date=\"2019-03-25\"\nLABEL org.opendap.hyrax.version.is-production=\"true\"\nUSER root\n#  Update OS and install ps (and other filesystem utils)\nRUN set -e \\\n && apt-get update \\\n && apt-get install procps -y\n#\n#  The --build-arg USE_NCWMS can be set to \"true\" in order to \n#  add the ncWMS application to the build.\nARG USE_NCWMS\nENV USE_NCWMS=\"${USE_NCWMS:-\\\"false\\\"}\"\nRUN set -e \\\n && if [ $USE_NCWMS = \"true\" ] ; then echo \"NCWMS: ENABLED\" ; else echo \"NCWMS: DISABLED\" ; fi\n#\n#  The --build-arg NCWMS_BASE can be set to the base URL for ncWMS.\n#  The entrypoint.sh code defaults it to\n#  the URL: https://localhost:8080 if the environment variable NCWMS_BASE\n#  is not in the shell from which the entrypoint.sh script is called.\nARG NCWMS_BASE\nENV NCWMS_BASE=\"${NCWMS_BASE:-\\\"https://localhost:8080\\\"}\"\nRUN set -e \\\n && if [ $USE_NCWMS = \"true\" ] ; then echo \"NCWMS_BASE: {$NCWMS_BASE}\" ; fi\n# ##\n#  Grab and unzip the OLFS\n# ##\n#  Tomcat environment?\nENV PATH=\"$CATALINA_HOME/bin:$PATH\"\nRUN echo \"CATALINA_HOME: $CATALINA_HOME\"\n#  Installs the OPeNDAP security public key.\n#  TODO: We should get this from a well known key-server instead.\nRUN echo \"Adding OPeNDAP Public Security Key\"\nENV OPENDAP_PUBLIC_KEY_FILE=\"security_at_opendap.org.pub.asc\"\nENV OPENDAP_PUBLIC_KEY_URL=\"https://www.opendap.org/${OPENDAP_PUBLIC_KEY_FILE}\"\nRUN set -e \\\n && curl -s $OPENDAP_PUBLIC_KEY_URL > $OPENDAP_PUBLIC_KEY_FILE \\\n && gpg --import $OPENDAP_PUBLIC_KEY_FILE\nENV OLFS_WAR_URL=\"https://www.opendap.org/pub/olfs/olfs-${OLFS_VERSION}-webapp.tgz\"\n# ##############################################################\n#  Retrieve, verify, and install the OLFS web application\nRUN set -e \\\n && echo \"Retrieving And Installing OLFS-${OLFS_VERSION}\" \\\n && curl -sfSL ${OLFS_WAR_URL} > olfs-${OLFS_VERSION}.tgz \\\n && curl -sfSL ${OLFS_WAR_URL}.sig > olfs-${OLFS_VERSION}.tgz.sig \\\n && echo \"Verifying tarball...\" \\\n && gpg --verify olfs-${OLFS_VERSION}.tgz.sig olfs-${OLFS_VERSION}.tgz \\\n && echo \"Unpacking tarball...\" \\\n && tar -C /dev/shm -xzf olfs-${OLFS_VERSION}.tgz \\\n && echo \"Unpacking warfile...\" \\\n && unzip -o /dev/shm/olfs-${OLFS_VERSION}-webapp/opendap.war -d ${CATALINA_HOME}/webapps/opendap/ \\\n && echo \"Cleaning up.\" \\\n && rm -rf /dev/shm/* olfs-${OLFS_VERSION}.tgz*\n#  set host for bes that olfs will contact - this is expected to be over docker's internal network\nARG BES_HOST\nENV BES_HOST=\"${BES_HOST:-besd}\"\nRUN sed -i \"s/localhost/${BES_HOST}/\" ${CATALINA_HOME}/webapps/opendap/WEB-INF/conf/olfs.xml\n#\n#  Setting NCWMS_HOST to the protocol, host, and port \n#  section of the publicly acessible URL of the \n#  ncWMS service. Using localhost is all well and good\n#  for testing but this needs to be settable at \n#  build time for sure and maybe even docker runtime? \n#\nCOPY olfs_viewers.xml /tmp/olfs_viewers.xml\nRUN set -e \\\n && if [ $USE_NCWMS = \"true\" ] ; then mv /tmp/olfs_viewers.xml ${CATALINA_HOME}/webapps/opendap/WEB-INF/conf/viewers.xml ; else echo \"Skipping OLFS/ncWMS confguration installation.\" ; fi\n# ##\n#  Expose ports\n# ##\nEXPOSE 8080/tcp 8443/tcp\n#\n#  I commented this next section out (2019-02-24) because at this time the unidata/tomcat-docker:8 image is running\n#  Tomcat as the root user - ndp\n#\n#  Fix ownership and access permissions\n# RUN mkdir -p ${CATALINA_HOME}/webapps/opendap/WEB-INF/conf/logs && \\\n#     chown -R tomcat ${CATALINA_HOME}/webapps/opendap/WEB-INF/conf/logs && \\\n#     chgrp -R tomcat ${CATALINA_HOME}/webapps/opendap/WEB-INF/conf/logs && \\\n#     chmod 700 ${CATALINA_HOME}/webapps/opendap/WEB-INF/conf/logs\n# #########################################################################################\n#  The following is an effort to tweak the security policy to allow the JULI code to\n#  to look at webapps/opendap/WEB-INF/classes/logging.properties Even though this\n#  file does not exist and the code will move on to other locations the fact that \n#  it trys to look at it is enough to alert the security manager.\n#\n#  COPY logging_config.policy /tmp/policy\n#  RUN set -e \\\n#     && lines=`cat ${CATALINA_HOME}/conf/catalina.policy | wc -l` \\\n#     && insert=`grep -n 'grant codeBase \\\"file:\\${catalina.home}/bin/tomcat-juli.jar' ${CATALINA_HOME}/conf/catalina.policy \\\n#     | awk '{split($0,s,\":\"); print s[1];}' -` \\\n#     && muh_tail=`expr $lines - $insert + 1` \\\n#     && echo \"lines: $lines insert: $insert muh_tail: $muh_tail\" \\\n#     && head -$insert ${CATALINA_HOME}/conf/catalina.policy > /tmp/catalina.policy \\\n#     && cat /tmp/policy >> /tmp/catalina.policy \\\n#     && tail -n $muh_tail ${CATALINA_HOME}/conf/catalina.policy >> /tmp/catalina.policy \\\n#     && cp /tmp/catalina.policy ${CATALINA_HOME}/conf/catalina.policy \\\n#     && chown -R tomcat ${CATALINA_HOME}/conf/catalina.policy \\\n#     && chgrp -R tomcat ${CATALINA_HOME}/conf/catalina.policy \\\n#     && echo \"\" \\\n#     && echo \"Updated catalina.policy: \" \\\n#     && cat ${CATALINA_HOME}/conf/catalina.policy\n# #########################################################################################\nCOPY entrypoint.sh /entrypoint.sh\nRUN chmod +x /entrypoint.sh \\\n && cat /entrypoint.sh\nENTRYPOINT [\"/entrypoint.sh\"]\nCMD [\"-\"]\n","injectedSmells":[],"originalDockerfileHash":"49471e251f51822e722bf647ef261a9d","successfullyInjectedSmells":[],"originalDockerfileUglified":"#  ##\n#   Dockerfile for Hyrax OLFS\n#  ##\nFROM unidata/tomcat-docker:8\nMAINTAINER support@opendap.org\n#   HYRAX VERSION INFO\nENV HYRAX_VERSION=\"1.15\"\nENV OLFS_VERSION=\"1.18.4\"\nENV RELEASE_DATE=\"2019-03-25\"\nLABEL vendor=\"OPeNDAP Incorporated\"\nLABEL org.opendap.olfs.version=\"1.18.4\"\nLABEL org.opendap.olfs.release-date=\"2019-03-25\"\nLABEL org.opendap.hyrax.version.is-production=\"true\"\nUSER root\n#   Update OS and install ps (and other filesystem utils)\nRUN set -e \\\n && apt-get update \\\n && apt-get install procps -y\n#\n#   The --build-arg USE_NCWMS can be set to \"true\" in order to \n#   add the ncWMS application to the build.\nARG USE_NCWMS\nENV USE_NCWMS=\"${USE_NCWMS:-\\\"false\\\"}\"\nRUN set -e \\\n && if [ $USE_NCWMS = \"true\" ] ; then echo \"NCWMS: ENABLED\" ; else echo \"NCWMS: DISABLED\" ; fi\n#\n#   The --build-arg NCWMS_BASE can be set to the base URL for ncWMS.\n#   The entrypoint.sh code defaults it to\n#   the URL: https://localhost:8080 if the environment variable NCWMS_BASE\n#   is not in the shell from which the entrypoint.sh script is called.\nARG NCWMS_BASE\nENV NCWMS_BASE=\"${NCWMS_BASE:-\\\"https://localhost:8080\\\"}\"\nRUN set -e \\\n && if [ $USE_NCWMS = \"true\" ] ; then echo \"NCWMS_BASE: {$NCWMS_BASE}\" ; fi\n#  ##\n#   Grab and unzip the OLFS\n#  ##\n#   Tomcat environment?\nENV PATH=\"$CATALINA_HOME/bin:$PATH\"\nRUN echo \"CATALINA_HOME: $CATALINA_HOME\"\n#   Installs the OPeNDAP security public key.\n#   TODO: We should get this from a well known key-server instead.\nRUN echo \"Adding OPeNDAP Public Security Key\"\nENV OPENDAP_PUBLIC_KEY_FILE=\"security_at_opendap.org.pub.asc\"\nENV OPENDAP_PUBLIC_KEY_URL=\"https://www.opendap.org/${OPENDAP_PUBLIC_KEY_FILE}\"\nRUN set -e \\\n && curl -s $OPENDAP_PUBLIC_KEY_URL > $OPENDAP_PUBLIC_KEY_FILE \\\n && gpg --import $OPENDAP_PUBLIC_KEY_FILE\nENV OLFS_WAR_URL=\"https://www.opendap.org/pub/olfs/olfs-${OLFS_VERSION}-webapp.tgz\"\n#  ##############################################################\n#   Retrieve, verify, and install the OLFS web application\nRUN set -e \\\n && echo \"Retrieving And Installing OLFS-${OLFS_VERSION}\" \\\n && curl -sfSL ${OLFS_WAR_URL} > olfs-${OLFS_VERSION}.tgz \\\n && curl -sfSL ${OLFS_WAR_URL}.sig > olfs-${OLFS_VERSION}.tgz.sig \\\n && echo \"Verifying tarball...\" \\\n && gpg --verify olfs-${OLFS_VERSION}.tgz.sig olfs-${OLFS_VERSION}.tgz \\\n && echo \"Unpacking tarball...\" \\\n && tar -C /dev/shm -xzf olfs-${OLFS_VERSION}.tgz \\\n && echo \"Unpacking warfile...\" \\\n && unzip -o /dev/shm/olfs-${OLFS_VERSION}-webapp/opendap.war -d ${CATALINA_HOME}/webapps/opendap/ \\\n && echo \"Cleaning up.\" \\\n && rm -rf /dev/shm/* olfs-${OLFS_VERSION}.tgz*\n#   set host for bes that olfs will contact - this is expected to be over docker's internal network\nARG BES_HOST\nENV BES_HOST=\"${BES_HOST:-besd}\"\nRUN sed -i \"s/localhost/${BES_HOST}/\" ${CATALINA_HOME}/webapps/opendap/WEB-INF/conf/olfs.xml\n#\n#   Setting NCWMS_HOST to the protocol, host, and port \n#   section of the publicly acessible URL of the \n#   ncWMS service. Using localhost is all well and good\n#   for testing but this needs to be settable at \n#   build time for sure and maybe even docker runtime? \n#\nCOPY olfs_viewers.xml /tmp/olfs_viewers.xml\nRUN set -e \\\n && if [ $USE_NCWMS = \"true\" ] ; then mv /tmp/olfs_viewers.xml ${CATALINA_HOME}/webapps/opendap/WEB-INF/conf/viewers.xml ; else echo \"Skipping OLFS/ncWMS confguration installation.\" ; fi\n#  ##\n#   Expose ports\n#  ##\nEXPOSE 8080/tcp 8443/tcp\n#\n#   I commented this next section out (2019-02-24) because at this time the unidata/tomcat-docker:8 image is running\n#   Tomcat as the root user - ndp\n#\n#   Fix ownership and access permissions\n#  RUN mkdir -p ${CATALINA_HOME}/webapps/opendap/WEB-INF/conf/logs && \\\n#      chown -R tomcat ${CATALINA_HOME}/webapps/opendap/WEB-INF/conf/logs && \\\n#      chgrp -R tomcat ${CATALINA_HOME}/webapps/opendap/WEB-INF/conf/logs && \\\n#      chmod 700 ${CATALINA_HOME}/webapps/opendap/WEB-INF/conf/logs\n#  #########################################################################################\n#   The following is an effort to tweak the security policy to allow the JULI code to\n#   to look at webapps/opendap/WEB-INF/classes/logging.properties Even though this\n#   file does not exist and the code will move on to other locations the fact that \n#   it trys to look at it is enough to alert the security manager.\n#\n#   COPY logging_config.policy /tmp/policy\n#   RUN set -e \\\n#      && lines=`cat ${CATALINA_HOME}/conf/catalina.policy | wc -l` \\\n#      && insert=`grep -n 'grant codeBase \\\"file:\\${catalina.home}/bin/tomcat-juli.jar' ${CATALINA_HOME}/conf/catalina.policy \\\n#      | awk '{split($0,s,\":\"); print s[1];}' -` \\\n#      && muh_tail=`expr $lines - $insert + 1` \\\n#      && echo \"lines: $lines insert: $insert muh_tail: $muh_tail\" \\\n#      && head -$insert ${CATALINA_HOME}/conf/catalina.policy > /tmp/catalina.policy \\\n#      && cat /tmp/policy >> /tmp/catalina.policy \\\n#      && tail -n $muh_tail ${CATALINA_HOME}/conf/catalina.policy >> /tmp/catalina.policy \\\n#      && cp /tmp/catalina.policy ${CATALINA_HOME}/conf/catalina.policy \\\n#      && chown -R tomcat ${CATALINA_HOME}/conf/catalina.policy \\\n#      && chgrp -R tomcat ${CATALINA_HOME}/conf/catalina.policy \\\n#      && echo \"\" \\\n#      && echo \"Updated catalina.policy: \" \\\n#      && cat ${CATALINA_HOME}/conf/catalina.policy\n#  #########################################################################################\nCOPY entrypoint.sh /entrypoint.sh\nRUN chmod +x /entrypoint.sh \\\n && cat /entrypoint.sh\nENTRYPOINT [\"/entrypoint.sh\"]\nCMD [\"-\"]\n","originalDockerfileUglifiedHash":"130d626a660b09cc3c2037133aad08a1","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles_bianncle/27132fa44fd623784b3bf02af3badf3dc7583885.dockerfile"}