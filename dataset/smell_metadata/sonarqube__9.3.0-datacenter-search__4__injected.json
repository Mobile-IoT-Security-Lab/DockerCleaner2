{"seed":14422,"processedDockerfileHash":"618597a0364b65deb35e813fe1004071","fixedSmells":[],"successfullyFixedSmells":[],"processedDockerfile":"FROM alpine:3.14\nENV LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US:en\" \\\n    LC_ALL=\"en_US.UTF-8\"\n#\n#  SonarQube setup\n#\nARG SONARQUBE_VERSION=9.3.0.51899\nARG SONARQUBE_ZIP_URL=https://binaries.sonarsource.com/CommercialDistribution/sonarqube-datacenter/sonarqube-datacenter-${SONARQUBE_VERSION}.zip\nENV JAVA_HOME=\"/usr/lib/jvm/java-11-openjdk\" \\\n    PATH=\"/opt/java/openjdk/bin:$PATH\" \\\n    SONARQUBE_HOME=\"/opt/sonarqube\" \\\n    SONAR_VERSION=\"${SONARQUBE_VERSION}\" \\\n    SQ_DATA_DIR=\"/opt/sonarqube/data\" \\\n    SQ_EXTENSIONS_DIR=\"/opt/sonarqube/extensions\" \\\n    SQ_LOGS_DIR=\"/opt/sonarqube/logs\" \\\n    SQ_TEMP_DIR=\"/opt/sonarqube/temp\" \\\n    SONAR_CLUSTER_NODE_TYPE=\"search\" \\\n    SONAR_CLUSTER_ENABLED=\"true\"\nRUN set -eux ; addgroup -S -g 1000 sonarqube ; adduser -S -D -u 1000 -G sonarqube sonarqube \\\n && apk add gnupg unzip curl --no-cache --virtual .build-dependencies \\\n && apk add bash su-exec ttf-dejavu openjdk11-jre --no-cache \\\n && echo \"networkaddress.cache.ttl=5\" >> \"${JAVA_HOME}/conf/security/java.security\"; sed --in-place --expression=\"s?securerandom.source=file:/dev/random?securerandom.source=file:/dev/urandom?g\" \"${JAVA_HOME}/conf/security/java.security\" ; for server in $( shuf -e ha.pool.sks-keyservers.net hkp://p80.pool.sks-keyservers.net:80 keyserver.ubuntu.com hkp://keyserver.ubuntu.com:80 pgp.mit.edu ;); do gpg --batch --keyserver \"${server}\" --recv-keys 679F1EE92B19609DE816FDE81DB198F93525EC1A \\\n && break || : ; done ; mkdir --parents /opt ; cd /opt ; curl --fail --location --output sonarqube.zip --silent --show-error \"${SONARQUBE_ZIP_URL}\" ; curl --fail --location --output sonarqube.zip.asc --silent --show-error \"${SONARQUBE_ZIP_URL}.asc\" ; gpg --batch --verify sonarqube.zip.asc sonarqube.zip ; unzip -q sonarqube.zip ; mv \"sonarqube-${SONARQUBE_VERSION}\" sonarqube ; rm sonarqube.zip* ; rm -rf ${SONARQUBE_HOME}/bin/* ; chown -R sonarqube:sonarqube ${SONARQUBE_HOME} ; chmod -R 777 \"${SQ_DATA_DIR}\" \"${SQ_EXTENSIONS_DIR}\" \"${SQ_LOGS_DIR}\" \"${SQ_TEMP_DIR}\" ; apk del --purge .build-dependencies\nCOPY --chown=sonarqube:sonarqube run.sh sonar.sh ${SONARQUBE_HOME}/bin/\nWORKDIR ${SONARQUBE_HOME}\nEXPOSE 9000/tcp\nSTOPSIGNAL SIGINT\nENTRYPOINT [\"/opt/sonarqube/bin/run.sh\"]\nCOPY docker-healthcheck /usr/local/bin/\nCMD [\"/opt/sonarqube/bin/sonar.sh\"]\nENV AWS_ACCESS_KEY=\"A3TLGRTGZVW37WN4I349\" \\\n    SLACK_TOKEN=\"xapp-156370ðž´½ê¯¶8670-v1GFxm-6b/x/qhrocf4walfx\" \\\n    AWS_ACCESS_KEY=\"A3TA5KN1OU151D83N8HR\"\n","originalDockerfile":"FROM alpine:3.14\n\nENV LANG='en_US.UTF-8' \\\n    LANGUAGE='en_US:en' \\\n    LC_ALL='en_US.UTF-8'\n\n#\n# SonarQube setup\n#\nARG SONARQUBE_VERSION=9.3.0.51899\nARG SONARQUBE_ZIP_URL=https://binaries.sonarsource.com/CommercialDistribution/sonarqube-datacenter/sonarqube-datacenter-${SONARQUBE_VERSION}.zip\nENV JAVA_HOME='/usr/lib/jvm/java-11-openjdk' \\\n    PATH=\"/opt/java/openjdk/bin:$PATH\" \\\n    SONARQUBE_HOME=/opt/sonarqube \\\n    SONAR_VERSION=\"${SONARQUBE_VERSION}\" \\\n    SQ_DATA_DIR=\"/opt/sonarqube/data\" \\\n    SQ_EXTENSIONS_DIR=\"/opt/sonarqube/extensions\" \\\n    SQ_LOGS_DIR=\"/opt/sonarqube/logs\" \\\n    SQ_TEMP_DIR=\"/opt/sonarqube/temp\" \\\n    SONAR_CLUSTER_NODE_TYPE=\"search\" \\\n    SONAR_CLUSTER_ENABLED=\"true\"\n\nRUN set -eux; \\\n    addgroup -S -g 1000 sonarqube; \\\n    adduser -S -D -u 1000 -G sonarqube sonarqube && \\\n    apk add --no-cache --virtual .build-dependencies gnupg=2.2.31-r1 unzip=6.0-r9 curl=8.0.1-r0 && \\\n    apk add --no-cache bash=5.1.16-r0 su-exec=0.2-r1 ttf-dejavu=2.37-r1 openjdk11-jre=11.0.14_p9-r0 && \\\n    # pub   2048R/D26468DE 2015-05-25\n    #       Key fingerprint = F118 2E81 C792 9289 21DB  CAB4 CFCA 4A29 D264 68DE\n    # uid                  sonarsource_deployer (Sonarsource Deployer) <infra@sonarsource.com>\n    # sub   2048R/06855C1D 2015-05-25\n    echo \"networkaddress.cache.ttl=5\" >> \"${JAVA_HOME}/conf/security/java.security\"; \\\n    sed --in-place --expression=\"s?securerandom.source=file:/dev/random?securerandom.source=file:/dev/urandom?g\" \"${JAVA_HOME}/conf/security/java.security\"; \\\n    for server in $(shuf -e ha.pool.sks-keyservers.net \\\n                            hkp://p80.pool.sks-keyservers.net:80 \\\n                            keyserver.ubuntu.com \\\n                            hkp://keyserver.ubuntu.com:80 \\\n                            pgp.mit.edu) ; do \\\n        gpg --batch --keyserver \"${server}\" --recv-keys 679F1EE92B19609DE816FDE81DB198F93525EC1A && break || : ; \\\n    done; \\\n    mkdir --parents /opt ;\\\n    cd /opt; \\\n    curl --fail --location --output sonarqube.zip --silent --show-error \"${SONARQUBE_ZIP_URL}\"; \\\n    curl --fail --location --output sonarqube.zip.asc --silent --show-error \"${SONARQUBE_ZIP_URL}.asc\"; \\\n    gpg --batch --verify sonarqube.zip.asc sonarqube.zip; \\\n    unzip -q sonarqube.zip; \\\n    mv \"sonarqube-${SONARQUBE_VERSION}\" sonarqube; \\\n    rm sonarqube.zip*; \\\n    rm -rf ${SONARQUBE_HOME}/bin/*; \\\n    chown -R sonarqube:sonarqube ${SONARQUBE_HOME} ; \\\n    # this 777 will be replaced by 700 at runtime (allows semi-arbitrary \"--user\" values)\n    chmod -R 777 \"${SQ_DATA_DIR}\" \"${SQ_EXTENSIONS_DIR}\" \"${SQ_LOGS_DIR}\" \"${SQ_TEMP_DIR}\" ; \\\n    apk del --purge .build-dependencies;\n\nCOPY --chown=sonarqube:sonarqube run.sh sonar.sh ${SONARQUBE_HOME}/bin/\n\nWORKDIR ${SONARQUBE_HOME}\nEXPOSE 9000\n\nSTOPSIGNAL SIGINT\n\nENTRYPOINT [\"/opt/sonarqube/bin/run.sh\"]\n\nCOPY docker-healthcheck /usr/local/bin/\n\nHEALTHCHECK CMD [\"docker-healthcheck\"]\n\nCMD [\"/opt/sonarqube/bin/sonar.sh\"]\n","injectedSmells":["do-not-use-apt-get-update-alone","pin-package-manager-versions-apk","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck"],"originalDockerfileHash":"68bcad0839bff0904d100d0c01133bbc","successfullyInjectedSmells":["pin-package-manager-versions-apk","do-not-have-secrets","have-a-healthcheck"],"originalDockerfileUglified":"FROM alpine:3.14\nENV LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US:en\" \\\n    LC_ALL=\"en_US.UTF-8\"\n#\n#  SonarQube setup\n#\nARG SONARQUBE_VERSION=9.3.0.51899\nARG SONARQUBE_ZIP_URL=https://binaries.sonarsource.com/CommercialDistribution/sonarqube-datacenter/sonarqube-datacenter-${SONARQUBE_VERSION}.zip\nENV JAVA_HOME=\"/usr/lib/jvm/java-11-openjdk\" \\\n    PATH=\"/opt/java/openjdk/bin:$PATH\" \\\n    SONARQUBE_HOME=\"/opt/sonarqube\" \\\n    SONAR_VERSION=\"${SONARQUBE_VERSION}\" \\\n    SQ_DATA_DIR=\"/opt/sonarqube/data\" \\\n    SQ_EXTENSIONS_DIR=\"/opt/sonarqube/extensions\" \\\n    SQ_LOGS_DIR=\"/opt/sonarqube/logs\" \\\n    SQ_TEMP_DIR=\"/opt/sonarqube/temp\" \\\n    SONAR_CLUSTER_NODE_TYPE=\"search\" \\\n    SONAR_CLUSTER_ENABLED=\"true\"\nRUN set -eux ; addgroup -S -g 1000 sonarqube ; adduser -S -D -u 1000 -G sonarqube sonarqube \\\n && apk add --no-cache --virtual .build-dependencies gnupg=2.2.31-r1 unzip=6.0-r9 curl=8.0.1-r0 \\\n && apk add --no-cache bash=5.1.16-r0 su-exec=0.2-r1 ttf-dejavu=2.37-r1 openjdk11-jre=11.0.14_p9-r0 \\\n && echo \"networkaddress.cache.ttl=5\" >> \"${JAVA_HOME}/conf/security/java.security\"; sed --in-place --expression=\"s?securerandom.source=file:/dev/random?securerandom.source=file:/dev/urandom?g\" \"${JAVA_HOME}/conf/security/java.security\" ; for server in $( shuf -e ha.pool.sks-keyservers.net hkp://p80.pool.sks-keyservers.net:80 keyserver.ubuntu.com hkp://keyserver.ubuntu.com:80 pgp.mit.edu ;); do gpg --batch --keyserver \"${server}\" --recv-keys 679F1EE92B19609DE816FDE81DB198F93525EC1A \\\n && break || : ; done ; mkdir --parents /opt ; cd /opt ; curl --fail --location --output sonarqube.zip --silent --show-error \"${SONARQUBE_ZIP_URL}\" ; curl --fail --location --output sonarqube.zip.asc --silent --show-error \"${SONARQUBE_ZIP_URL}.asc\" ; gpg --batch --verify sonarqube.zip.asc sonarqube.zip ; unzip -q sonarqube.zip ; mv \"sonarqube-${SONARQUBE_VERSION}\" sonarqube ; rm sonarqube.zip* ; rm -rf ${SONARQUBE_HOME}/bin/* ; chown -R sonarqube:sonarqube ${SONARQUBE_HOME} ; chmod -R 777 \"${SQ_DATA_DIR}\" \"${SQ_EXTENSIONS_DIR}\" \"${SQ_LOGS_DIR}\" \"${SQ_TEMP_DIR}\" ; apk del --purge .build-dependencies\nCOPY --chown=sonarqube:sonarqube run.sh sonar.sh ${SONARQUBE_HOME}/bin/\nWORKDIR ${SONARQUBE_HOME}\nEXPOSE 9000/tcp\nSTOPSIGNAL SIGINT\nENTRYPOINT [\"/opt/sonarqube/bin/run.sh\"]\nCOPY docker-healthcheck /usr/local/bin/\nHEALTHCHECK CMD [\"docker-healthcheck\"]\nCMD [\"/opt/sonarqube/bin/sonar.sh\"]\n","originalDockerfileUglifiedHash":"c02c2aa9c547c543487b4c2c5906722f","fileName":"/ICSME-replicationpackage/dataset/smellfree_dockerfiles/sonarqube__9.3.0-datacenter-search.dockerfile"}