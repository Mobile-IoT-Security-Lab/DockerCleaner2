{"seed":16278,"processedDockerfileHash":"2c00c58b10179eeffdf16c8e49d365d0","fixedSmells":[],"successfullyFixedSmells":[],"processedDockerfile":"#  https://nodejs.org/en/about/releases/\n#  https://github.com/nodejs/Release#readme\nFROM node:12-alpine3.11\nRUN apk add bash tini --no-cache\nEXPOSE 8081/tcp\n#  override some config defaults with values that will work better for docker\nENV ME_CONFIG_EDITORTHEME=\"default\" \\\n    ME_CONFIG_MONGODB_URL=\"mongodb://mongo:27017\" \\\n    ME_CONFIG_MONGODB_ENABLE_ADMIN=\"true\" \\\n    ME_CONFIG_BASICAUTH_USERNAME=\"\" \\\n    ME_CONFIG_BASICAUTH_PASSWORD=\"\" \\\n    VCAP_APP_HOST=\"0.0.0.0\"\nENV MONGO_EXPRESS=\"1.0.0-alpha.4\"\nRUN set -eux ; apk add git --no-cache --virtual .me-install-deps ; npm install mongo-express@$MONGO_EXPRESS ; apk del --no-network .me-install-deps\nCOPY docker-entrypoint.sh /\nWORKDIR /node_modules/mongo-express\nRUN cp config.default.js config.js\nENTRYPOINT [\"tini\", \"--\", \"/docker-entrypoint.sh\"]\nCMD [\"mongo-express\"]\nUSER root\n","originalDockerfile":"# https://nodejs.org/en/about/releases/\n# https://github.com/nodejs/Release#readme\nFROM node:12-alpine3.11\n\nRUN apk add --no-cache bash=5.0.11-r1 tini=0.18.0-r0\n\nEXPOSE 8081\n\n# override some config defaults with values that will work better for docker\nENV ME_CONFIG_EDITORTHEME=\"default\" \\\n    ME_CONFIG_MONGODB_URL=\"mongodb://mongo:27017\" \\\n    ME_CONFIG_MONGODB_ENABLE_ADMIN=\"true\" \\\n    ME_CONFIG_BASICAUTH_USERNAME=\"\" \\\n    ME_CONFIG_BASICAUTH_PASSWORD=\"\" \\\n    VCAP_APP_HOST=\"0.0.0.0\"\n\nENV MONGO_EXPRESS 1.0.0-alpha.4\n\nRUN set -eux; \\\n\tapk add --no-cache --virtual .me-install-deps git=2.24.4-r0; \\\n\tnpm install mongo-express@$MONGO_EXPRESS; \\\n\tapk del --no-network .me-install-deps\n\nCOPY docker-entrypoint.sh /\n\nWORKDIR /node_modules/mongo-express\n\nRUN cp config.default.js config.js\n\nENTRYPOINT [ \"tini\", \"--\", \"/docker-entrypoint.sh\"]\n\nHEALTHCHECK CMD curl --fail http://127.0.0.1:3000 || exit 1\n\nCMD [\"mongo-express\"]\n","injectedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","have-a-healthcheck","have-a-user"],"originalDockerfileHash":"b04175171f36d5640f16e258261f4210","successfullyInjectedSmells":["pin-package-manager-versions-apk","have-a-healthcheck","have-a-user"],"originalDockerfileUglified":"#  https://nodejs.org/en/about/releases/\n#  https://github.com/nodejs/Release#readme\nFROM node:12-alpine3.11\nRUN apk add --no-cache bash=5.0.11-r1 tini=0.18.0-r0\nEXPOSE 8081/tcp\n#  override some config defaults with values that will work better for docker\nENV ME_CONFIG_EDITORTHEME=\"default\" \\\n    ME_CONFIG_MONGODB_URL=\"mongodb://mongo:27017\" \\\n    ME_CONFIG_MONGODB_ENABLE_ADMIN=\"true\" \\\n    ME_CONFIG_BASICAUTH_USERNAME=\"\" \\\n    ME_CONFIG_BASICAUTH_PASSWORD=\"\" \\\n    VCAP_APP_HOST=\"0.0.0.0\"\nENV MONGO_EXPRESS=\"1.0.0-alpha.4\"\nRUN set -eux ; apk add --no-cache --virtual .me-install-deps git=2.24.4-r0 ; npm install mongo-express@$MONGO_EXPRESS ; apk del --no-network .me-install-deps\nCOPY docker-entrypoint.sh /\nWORKDIR /node_modules/mongo-express\nRUN cp config.default.js config.js\nENTRYPOINT [\"tini\", \"--\", \"/docker-entrypoint.sh\"]\nHEALTHCHECK CMD curl --fail http://127.0.0.1:3000 || exit 1\nCMD [\"mongo-express\"]\n","originalDockerfileUglifiedHash":"09c8bb6be2417cb8da93ab173351193d","fileName":"/ICSME-replicationpackage/dataset/smellfree_dockerfiles/mongo-express__1.0.0-alpha.4.dockerfile"}