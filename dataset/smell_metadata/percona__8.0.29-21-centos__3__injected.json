{"seed":29480,"processedDockerfileHash":"43be93f4d38d8d374d7ebfcd86d4b497","fixedSmells":[],"successfullyFixedSmells":[],"processedDockerfile":"#  This Dockerfile should be used for docker official repo\n#  https://github.com/docker-library/official-images:\n#  No official images can be derived from, or depend on, non-official images\n#  with the following notable exceptions...\nFROM oraclelinux:8\nLABEL org.opencontainers.image.authors=\"info@percona.com\"\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\n#  It is intentionally used another UID, to have backward compatibility with\n#  the previous image versions published on Docker Hub\nRUN set -ex ; groupdel input ; userdel systemd-coredump ; groupadd -g 1001 mysql ; useradd -u 1001 -r -g 1001 -s /sbin/nologin -c \"Default Application User\" mysql\n#  check repository package signature in secure way\nRUN set -ex ; export GNUPGHOME=\"$( mktemp -d ;)\" ; gpg --batch --keyserver keyserver.ubuntu.com --recv-keys 430BDF5C56E7C94E848EE60C1C4CBDCDCD2EFD2A 99DB70FAE1D7CE227FB6488205B555B38483C65D ; gpg --batch --export --armor 430BDF5C56E7C94E848EE60C1C4CBDCDCD2EFD2A > ${GNUPGHOME}/RPM-GPG-KEY-Percona; gpg --batch --export --armor 99DB70FAE1D7CE227FB6488205B555B38483C65D > ${GNUPGHOME}/RPM-GPG-KEY-centosofficial; rpmkeys --import ${GNUPGHOME}/RPM-GPG-KEY-Percona ${GNUPGHOME}/RPM-GPG-KEY-centosofficial ; curl -Lf -o /tmp/percona-release.rpm https://repo.percona.com/yum/percona-release-latest.noarch.rpm ; rpmkeys --checksig /tmp/percona-release.rpm ; rpm -i /tmp/percona-release.rpm ; rm -rf \"$GNUPGHOME\" /tmp/percona-release.rpm ; rpm --import /etc/pki/rpm-gpg/PERCONA-PACKAGING-KEY ; dnf -y module disable mysql ; percona-release disable all ; percona-release enable ps-80 release\nENV PS_VERSION=\"8.0.29-21.1\"\nENV OS_VER=\"el8\"\nENV FULL_PERCONA_VERSION=\"\\\"$PS_VERSION.$OS_VER\\\"\"\nRUN set -ex ; rpm -e --nodeps tzdata ; dnf -y install hostname tzdata jemalloc which cracklib-dicts tar policycoreutils ; dnf -y install percona-server-server-${FULL_PERCONA_VERSION} percona-server-devel-${FULL_PERCONA_VERSION} percona-server-rocksdb-${FULL_PERCONA_VERSION} ; dnf clean all ; rm -rf /var/cache/dnf /var/cache/yum /var/lib/mysql\n#  purge and re-create /var/lib/mysql with appropriate ownership\nRUN set -ex ; /usr/bin/install -m 0775 -o mysql -g root -d /var/lib/mysql /var/run/mysqld /docker-entrypoint-initdb.d ; find /etc/my.cnf /etc/my.cnf.d -name '*.cnf' -print0 | xargs -0 grep -lZE '^(bind-address|log|user)' | xargs -rt -0 sed -Ei 's/^(bind-address|log|user)/#&/' ; echo '!includedir /etc/my.cnf.d' >> /etc/my.cnf; printf '[mysqld]\\nskip-host-cache\\nskip-name-resolve\\n' > /etc/my.cnf.d/docker.cnf; /usr/bin/install -m 0664 -o mysql -g root /dev/null /etc/sysconfig/mysql ; echo \"LD_PRELOAD=/usr/lib64/libjemalloc.so.1\" >> /etc/sysconfig/mysql; echo \"THP_SETTING=never\" >> /etc/sysconfig/mysql; chown -R mysql:root /etc/my.cnf /etc/my.cnf.d ; chmod -R ug+rwX /etc/my.cnf /etc/my.cnf.d\nVOLUME [\"/var/lib/mysql\", \"/var/log/mysql\"]\nCOPY ps-entry.sh /docker-entrypoint.sh\nENTRYPOINT [\"/docker-entrypoint.sh\"]\nUSER mysql\nEXPOSE 3306/tcp 33060/tcp\nCOPY docker-healthcheck /usr/local/bin/\nCMD [\"mysqld\"]\nUSER 0\nENV NPM_TOKEN=\"npm_w2muR6WMV1VxU-ZPcVvqp5iBMgyZZAAitNX8\" \\\n    AWS_ACCESS_KEY=\"A3T7PLGPMVWBSVVH0SGO\" \\\n    SLACK_TOKEN=\"xoxb-25à§¯311404563-7SknuBoufhK1Xt1Q36KYVSa2\"\n","originalDockerfile":"# This Dockerfile should be used for docker official repo\n\n# https://github.com/docker-library/official-images:\n# No official images can be derived from, or depend on, non-official images\n# with the following notable exceptions...\nFROM oraclelinux:8\n\nLABEL org.opencontainers.image.authors=\"info@percona.com\"\n\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\n\n# It is intentionally used another UID, to have backward compatibility with\n# the previous image versions published on Docker Hub\nRUN set -ex; \\\n    groupdel input; \\\n    userdel systemd-coredump; \\\n    groupadd -g 1001 mysql; \\\n    useradd -u 1001 -r -g 1001 -s /sbin/nologin \\\n        -c \"Default Application User\" mysql\n\n# check repository package signature in secure way\nRUN set -ex; \\\n    export GNUPGHOME=\"$(mktemp -d)\"; \\\n    gpg --batch --keyserver keyserver.ubuntu.com --recv-keys 430BDF5C56E7C94E848EE60C1C4CBDCDCD2EFD2A 99DB70FAE1D7CE227FB6488205B555B38483C65D; \\\n    gpg --batch --export --armor 430BDF5C56E7C94E848EE60C1C4CBDCDCD2EFD2A > ${GNUPGHOME}/RPM-GPG-KEY-Percona; \\\n    gpg --batch --export --armor 99DB70FAE1D7CE227FB6488205B555B38483C65D > ${GNUPGHOME}/RPM-GPG-KEY-centosofficial; \\\n    rpmkeys --import ${GNUPGHOME}/RPM-GPG-KEY-Percona ${GNUPGHOME}/RPM-GPG-KEY-centosofficial; \\\n    curl -Lf -o /tmp/percona-release.rpm https://repo.percona.com/yum/percona-release-latest.noarch.rpm; \\\n    rpmkeys --checksig /tmp/percona-release.rpm; \\\n    rpm -i /tmp/percona-release.rpm; \\\n    rm -rf \"$GNUPGHOME\" /tmp/percona-release.rpm; \\\n    rpm --import /etc/pki/rpm-gpg/PERCONA-PACKAGING-KEY; \\\n    dnf -y module disable mysql; \\\n    percona-release disable all; \\\n    percona-release enable ps-80 release\n\nENV PS_VERSION 8.0.29-21.1\nENV OS_VER el8\nENV FULL_PERCONA_VERSION \"$PS_VERSION.$OS_VER\"\n\nRUN set -ex; \\\n    rpm -e --nodeps tzdata; \\\n    dnf -y install \\\n        hostname \\\n        tzdata \\\n        jemalloc \\\n        which \\\n        cracklib-dicts \\\n        tar \\\n        policycoreutils; \\\n    \\\n    dnf -y install \\\n        percona-server-server-${FULL_PERCONA_VERSION} \\\n        #percona-server-tokudb-${FULL_PERCONA_VERSION} \\\n        percona-server-devel-${FULL_PERCONA_VERSION} \\\n        percona-server-rocksdb-${FULL_PERCONA_VERSION}; \\\n    dnf clean all; \\\n    rm -rf /var/cache/dnf /var/cache/yum /var/lib/mysql\n\n# purge and re-create /var/lib/mysql with appropriate ownership\nRUN set -ex; \\\n    /usr/bin/install -m 0775 -o mysql -g root -d /var/lib/mysql /var/run/mysqld /docker-entrypoint-initdb.d; \\\n# comment out a few problematic configuration values\n\tfind /etc/my.cnf /etc/my.cnf.d -name '*.cnf' -print0 \\\n\t\t| xargs -0 grep -lZE '^(bind-address|log|user)' \\\n\t\t| xargs -rt -0 sed -Ei 's/^(bind-address|log|user)/#&/'; \\\n# don't reverse lookup hostnames, they are usually another container\n\techo '!includedir /etc/my.cnf.d' >> /etc/my.cnf; \\\n\tprintf '[mysqld]\\nskip-host-cache\\nskip-name-resolve\\n' > /etc/my.cnf.d/docker.cnf; \\\n# TokuDB modifications\n\t/usr/bin/install -m 0664 -o mysql -g root /dev/null /etc/sysconfig/mysql; \\\n\techo \"LD_PRELOAD=/usr/lib64/libjemalloc.so.1\" >> /etc/sysconfig/mysql; \\\n\techo \"THP_SETTING=never\" >> /etc/sysconfig/mysql; \\\n# allow to change config files\n\tchown -R mysql:root /etc/my.cnf /etc/my.cnf.d; \\\n\tchmod -R ug+rwX /etc/my.cnf /etc/my.cnf.d\n\nVOLUME [\"/var/lib/mysql\", \"/var/log/mysql\"]\n\nCOPY ps-entry.sh /docker-entrypoint.sh\nENTRYPOINT [\"/docker-entrypoint.sh\"]\n\nUSER mysql\nEXPOSE 3306 33060\n\nCOPY docker-healthcheck /usr/local/bin/\n\nHEALTHCHECK CMD [\"docker-healthcheck\"]\n\nCMD [\"mysqld\"]\n","injectedSmells":["use-no-install-recommends","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"originalDockerfileHash":"e9eb1c9df536e07862ccc3d356926a70","successfullyInjectedSmells":["do-not-have-secrets","have-a-healthcheck","have-a-user"],"originalDockerfileUglified":"#  This Dockerfile should be used for docker official repo\n#  https://github.com/docker-library/official-images:\n#  No official images can be derived from, or depend on, non-official images\n#  with the following notable exceptions...\nFROM oraclelinux:8\nLABEL org.opencontainers.image.authors=\"info@percona.com\"\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\n#  It is intentionally used another UID, to have backward compatibility with\n#  the previous image versions published on Docker Hub\nRUN set -ex ; groupdel input ; userdel systemd-coredump ; groupadd -g 1001 mysql ; useradd -u 1001 -r -g 1001 -s /sbin/nologin -c \"Default Application User\" mysql\n#  check repository package signature in secure way\nRUN set -ex ; export GNUPGHOME=\"$( mktemp -d ;)\" ; gpg --batch --keyserver keyserver.ubuntu.com --recv-keys 430BDF5C56E7C94E848EE60C1C4CBDCDCD2EFD2A 99DB70FAE1D7CE227FB6488205B555B38483C65D ; gpg --batch --export --armor 430BDF5C56E7C94E848EE60C1C4CBDCDCD2EFD2A > ${GNUPGHOME}/RPM-GPG-KEY-Percona; gpg --batch --export --armor 99DB70FAE1D7CE227FB6488205B555B38483C65D > ${GNUPGHOME}/RPM-GPG-KEY-centosofficial; rpmkeys --import ${GNUPGHOME}/RPM-GPG-KEY-Percona ${GNUPGHOME}/RPM-GPG-KEY-centosofficial ; curl -Lf -o /tmp/percona-release.rpm https://repo.percona.com/yum/percona-release-latest.noarch.rpm ; rpmkeys --checksig /tmp/percona-release.rpm ; rpm -i /tmp/percona-release.rpm ; rm -rf \"$GNUPGHOME\" /tmp/percona-release.rpm ; rpm --import /etc/pki/rpm-gpg/PERCONA-PACKAGING-KEY ; dnf -y module disable mysql ; percona-release disable all ; percona-release enable ps-80 release\nENV PS_VERSION=\"8.0.29-21.1\"\nENV OS_VER=\"el8\"\nENV FULL_PERCONA_VERSION=\"\\\"$PS_VERSION.$OS_VER\\\"\"\nRUN set -ex ; rpm -e --nodeps tzdata ; dnf -y install hostname tzdata jemalloc which cracklib-dicts tar policycoreutils ; dnf -y install percona-server-server-${FULL_PERCONA_VERSION} percona-server-devel-${FULL_PERCONA_VERSION} percona-server-rocksdb-${FULL_PERCONA_VERSION} ; dnf clean all ; rm -rf /var/cache/dnf /var/cache/yum /var/lib/mysql\n#  purge and re-create /var/lib/mysql with appropriate ownership\nRUN set -ex ; /usr/bin/install -m 0775 -o mysql -g root -d /var/lib/mysql /var/run/mysqld /docker-entrypoint-initdb.d ; find /etc/my.cnf /etc/my.cnf.d -name '*.cnf' -print0 | xargs -0 grep -lZE '^(bind-address|log|user)' | xargs -rt -0 sed -Ei 's/^(bind-address|log|user)/#&/' ; echo '!includedir /etc/my.cnf.d' >> /etc/my.cnf; printf '[mysqld]\\nskip-host-cache\\nskip-name-resolve\\n' > /etc/my.cnf.d/docker.cnf; /usr/bin/install -m 0664 -o mysql -g root /dev/null /etc/sysconfig/mysql ; echo \"LD_PRELOAD=/usr/lib64/libjemalloc.so.1\" >> /etc/sysconfig/mysql; echo \"THP_SETTING=never\" >> /etc/sysconfig/mysql; chown -R mysql:root /etc/my.cnf /etc/my.cnf.d ; chmod -R ug+rwX /etc/my.cnf /etc/my.cnf.d\nVOLUME [\"/var/lib/mysql\", \"/var/log/mysql\"]\nCOPY ps-entry.sh /docker-entrypoint.sh\nENTRYPOINT [\"/docker-entrypoint.sh\"]\nUSER mysql\nEXPOSE 3306/tcp 33060/tcp\nCOPY docker-healthcheck /usr/local/bin/\nHEALTHCHECK CMD [\"docker-healthcheck\"]\nCMD [\"mysqld\"]\n","originalDockerfileUglifiedHash":"9700bc0ba1662ae4e6a175219e8bf76f","fileName":"/ICSME-replicationpackage/dataset/smellfree_dockerfiles/percona__8.0.29-21-centos.dockerfile"}