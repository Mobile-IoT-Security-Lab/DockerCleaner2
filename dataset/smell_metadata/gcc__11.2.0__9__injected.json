{"seed":29059,"processedDockerfileHash":"20207e56f39611581a437e8eae3516d3","fixedSmells":[],"successfullyFixedSmells":[],"processedDockerfile":"#\n#  NOTE: THIS DOCKERFILE IS GENERATED VIA \"apply-templates.sh\"\n#\n#  PLEASE DO NOT EDIT IT DIRECTLY.\n#\nFROM buildpack-deps:bullseye\nRUN apt-get update\nRUN set -ex ; if ! command -v gpg > /dev/null; then : ;apt-get install --no-install-recommends gnupg dirmngr -y ;rm -rf /var/lib/apt/lists/* ; fi\n#  https://gcc.gnu.org/mirrors.html\nENV GPG_KEYS=\"B215C1633BCA0477615F1B35A5B3A004745C015A  B3C42148A44E6983B3E4CC0793FA9B1AB75C61B8  90AA470469D3965A87A5DCB494D03953902C9419  80F98B2E0DAB6C8281BDF541A7C8C3B2F71EDF1C  7F74F97C103468EE5D750B583AB00996FC26A641  33C235A34C46AA3FFB293709A328C3A2C3C45C06  D3A93CAD751C2AF4F8C7AD516C35B99309B5FA62\"\nRUN set -ex ; for key in $GPG_KEYS; do gpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\" ; done\n#  https://gcc.gnu.org/mirrors.html\nENV GCC_MIRRORS=\"https://ftpmirror.gnu.org/gcc  https://mirrors.kernel.org/gnu/gcc  https://bigsearcher.com/mirrors/gcc/releases  http://www.netgull.com/gcc/releases  https://ftpmirror.gnu.org/gcc  ftp://ftp.gnu.org/gnu/gcc\"\n#  Last Modified: 2021-07-28\nENV GCC_VERSION=\"11.2.0\"\n#  Docker EOL: 2023-01-28\nRUN apt-get update\nRUN set -ex ; savedAptMark=\"$( apt-mark showmanual ;)\" ; : ; apt-get install --no-install-recommends dpkg-dev flex -y ; rm -r /var/lib/apt/lists/* ; _fetch() { local fetch=\"$1\" ;shift ;local file=\"$1\" ;shift ;for mirror in $GCC_MIRRORS; do if curl -fL \"$mirror/$fetch\" -o \"$file\" ; then return 0 ; fi ; done ;echo \"error: failed to download '$fetch' from several mirrors\" >&2;return 1 ; } ; _fetch \"gcc-$GCC_VERSION/gcc-$GCC_VERSION.tar.xz.sig\" 'gcc.tar.xz.sig' ; _fetch \"gcc-$GCC_VERSION/gcc-$GCC_VERSION.tar.xz\" 'gcc.tar.xz' ; gpg --batch --verify gcc.tar.xz.sig gcc.tar.xz ; mkdir -p /usr/src/gcc ; tar -xf gcc.tar.xz -C /usr/src/gcc --strip-components=1 ; rm gcc.tar.xz* ; cd /usr/src/gcc ; ./contrib/download_prerequisites ; { rm *.tar.* || true ; } ; for f in config.guess config.sub; do wget -nv -O \"$f\" \"https://git.savannah.gnu.org/cgit/config.git/plain/$f?id=7d3d27baf8107b630586c962c057e22149653deb\" ;find -mindepth 2 -name \"$f\" -exec cp -v \"$f\" '{}' ';' ; done ; dir=\"$( mktemp -d ;)\" ; cd \"$dir\" ; extraConfigureArgs='' ; dpkgArch=\"$( dpkg --print-architecture ;)\" ; case \"$dpkgArch\" in (armel) extraConfigureArgs=\"$extraConfigureArgs --with-arch=armv4t --with-float=soft\" ;;(armhf) extraConfigureArgs=\"$extraConfigureArgs --with-arch=armv7-a --with-float=hard --with-fpu=vfpv3-d16 --with-mode=thumb\" ;;(i386) osVersionID=\"$( set -e ;. /etc/os-release ;echo \"$VERSION_ID\" ;)\" ; case \"$osVersionID\" in (8) extraConfigureArgs=\"$extraConfigureArgs --with-arch-32=i586\" ;;(*) extraConfigureArgs=\"$extraConfigureArgs --with-arch-32=i686\" ;; esac ;; esac ; gnuArch=\"$( dpkg-architecture --query DEB_BUILD_GNU_TYPE ;)\" ; /usr/src/gcc/configure --build=\"$gnuArch\" --disable-multilib --enable-languages=c,c++,fortran,go $extraConfigureArgs ; make -j \"$( nproc ;)\" ; make install-strip ; cd .. ; rm -rf \"$dir\" /usr/src/gcc ; apt-mark auto '.*' > /dev/null; [ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark ; apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false\n#  gcc installs .so files in /usr/local/lib64 (and /usr/local/lib)...\nRUN set -ex ; { echo '/usr/local/lib64' ;echo '/usr/local/lib' ; } > /etc/ld.so.conf.d/000-local-lib.conf; ldconfig -v\n#  ensure that alternatives are pointing to the new compiler and that old one is no longer used\nRUN set -ex ; dpkg-divert --divert /usr/bin/gcc.orig --rename /usr/bin/gcc ; dpkg-divert --divert /usr/bin/g++.orig --rename /usr/bin/g++ ; dpkg-divert --divert /usr/bin/gfortran.orig --rename /usr/bin/gfortran ; update-alternatives --install /usr/bin/cc cc /usr/local/bin/gcc 999\n","originalDockerfile":"#\n# NOTE: THIS DOCKERFILE IS GENERATED VIA \"apply-templates.sh\"\n#\n# PLEASE DO NOT EDIT IT DIRECTLY.\n#\n\nFROM buildpack-deps:bullseye\n\nRUN set -ex; \\\n\tif ! command -v gpg > /dev/null; then \\\n\t\tapt-get update; \\\n\t\tapt-get install -y --no-install-recommends \\\n\t\t\tgnupg=2.2.27-2+deb11u2 \\\n\t\t\tdirmngr=2.2.27-2+deb11u2 \\\n\t\t; \\\n\t\trm -rf /var/lib/apt/lists/*; \\\n\tfi\n\n# https://gcc.gnu.org/mirrors.html\nENV GPG_KEYS \\\n# 1024D/745C015A 1999-11-09 Gerald Pfeifer <gerald@pfeifer.com>\n\tB215C1633BCA0477615F1B35A5B3A004745C015A \\\n# 1024D/B75C61B8 2003-04-10 Mark Mitchell <mark@codesourcery.com>\n\tB3C42148A44E6983B3E4CC0793FA9B1AB75C61B8 \\\n# 1024D/902C9419 2004-12-06 Gabriel Dos Reis <gdr@acm.org>\n\t90AA470469D3965A87A5DCB494D03953902C9419 \\\n# 1024D/F71EDF1C 2000-02-13 Joseph Samuel Myers <jsm@polyomino.org.uk>\n\t80F98B2E0DAB6C8281BDF541A7C8C3B2F71EDF1C \\\n# 2048R/FC26A641 2005-09-13 Richard Guenther <richard.guenther@gmail.com>\n\t7F74F97C103468EE5D750B583AB00996FC26A641 \\\n# 1024D/C3C45C06 2004-04-21 Jakub Jelinek <jakub@redhat.com>\n\t33C235A34C46AA3FFB293709A328C3A2C3C45C06 \\\n# 4096R/09B5FA62 2020-05-28 Jakub Jelinek <jakub@redhat.com>\n\tD3A93CAD751C2AF4F8C7AD516C35B99309B5FA62\n\nRUN set -ex; \\\n\tfor key in $GPG_KEYS; do \\\n\t\tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\"; \\\n\tdone\n\n# https://gcc.gnu.org/mirrors.html\nENV GCC_MIRRORS \\\n\t\thttps://ftpmirror.gnu.org/gcc \\\n\t\thttps://mirrors.kernel.org/gnu/gcc \\\n\t\thttps://bigsearcher.com/mirrors/gcc/releases \\\n\t\thttp://www.netgull.com/gcc/releases \\\n\t\thttps://ftpmirror.gnu.org/gcc \\\n# only attempt the origin FTP as a mirror of last resort\n\t\tftp://ftp.gnu.org/gnu/gcc\n\n# Last Modified: 2021-07-28\nENV GCC_VERSION 11.2.0\n# Docker EOL: 2023-01-28\n\nRUN set -ex; \\\n\t\\\n\tsavedAptMark=\"$(apt-mark showmanual)\"; \\\n\tapt-get update; \\\n\tapt-get install -y --no-install-recommends \\\n\t\tdpkg-dev=1.20.12 flex=2.6.4-8 \\\n\t; \\\n\trm -r /var/lib/apt/lists/*; \\\n\t\\\n\t_fetch() { \\\n\t\tlocal fetch=\"$1\"; shift; \\\n\t\tlocal file=\"$1\"; shift; \\\n\t\tfor mirror in $GCC_MIRRORS; do \\\n\t\t\tif curl -fL \"$mirror/$fetch\" -o \"$file\"; then \\\n\t\t\t\treturn 0; \\\n\t\t\tfi; \\\n\t\tdone; \\\n\t\techo >&2 \"error: failed to download '$fetch' from several mirrors\"; \\\n\t\treturn 1; \\\n\t}; \\\n\t\\\n\t_fetch \"gcc-$GCC_VERSION/gcc-$GCC_VERSION.tar.xz.sig\" 'gcc.tar.xz.sig'; \\\n\t_fetch \"gcc-$GCC_VERSION/gcc-$GCC_VERSION.tar.xz\" 'gcc.tar.xz'; \\\n\tgpg --batch --verify gcc.tar.xz.sig gcc.tar.xz; \\\n\tmkdir -p /usr/src/gcc; \\\n\ttar -xf gcc.tar.xz -C /usr/src/gcc --strip-components=1; \\\n\trm gcc.tar.xz*; \\\n\t\\\n\tcd /usr/src/gcc; \\\n\t\\\n# \"download_prerequisites\" pulls down a bunch of tarballs and extracts them,\n# but then leaves the tarballs themselves lying around\n\t./contrib/download_prerequisites; \\\n\t{ rm *.tar.* || true; }; \\\n\t\\\n# explicitly update autoconf config.guess and config.sub so they support more arches/libcs\n\tfor f in config.guess config.sub; do \\\n\t\twget -nv -O \"$f\" \"https://git.savannah.gnu.org/cgit/config.git/plain/$f?id=7d3d27baf8107b630586c962c057e22149653deb\"; \\\n# find any more (shallow) copies of the file we grabbed and update them too\n\t\tfind -mindepth 2 -name \"$f\" -exec cp -v \"$f\" '{}' ';'; \\\n\tdone; \\\n\t\\\n\tdir=\"$(mktemp -d)\"; \\\n\tcd \"$dir\"; \\\n\t\\\n\textraConfigureArgs=''; \\\n\tdpkgArch=\"$(dpkg --print-architecture)\"; \\\n\tcase \"$dpkgArch\" in \\\n# with-arch: https://anonscm.debian.org/viewvc/gcccvs/branches/sid/gcc-6/debian/rules2?revision=9450&view=markup#l491\n# with-float: https://anonscm.debian.org/viewvc/gcccvs/branches/sid/gcc-6/debian/rules.defs?revision=9487&view=markup#l416\n# with-mode: https://anonscm.debian.org/viewvc/gcccvs/branches/sid/gcc-6/debian/rules.defs?revision=9487&view=markup#l376\n\t\tarmel) \\\n\t\t\textraConfigureArgs=\"$extraConfigureArgs --with-arch=armv4t --with-float=soft\" \\\n\t\t\t;; \\\n\t\tarmhf) \\\n\t\t\textraConfigureArgs=\"$extraConfigureArgs --with-arch=armv7-a --with-float=hard --with-fpu=vfpv3-d16 --with-mode=thumb\" \\\n\t\t\t;; \\\n\t\t\\\n# with-arch-32: https://anonscm.debian.org/viewvc/gcccvs/branches/sid/gcc-6/debian/rules2?revision=9450&view=markup#l590\n\t\ti386) \\\n\t\t\tosVersionID=\"$(set -e; . /etc/os-release; echo \"$VERSION_ID\")\"; \\\n\t\t\tcase \"$osVersionID\" in \\\n\t\t\t\t8) extraConfigureArgs=\"$extraConfigureArgs --with-arch-32=i586\" ;; \\\n\t\t\t\t*) extraConfigureArgs=\"$extraConfigureArgs --with-arch-32=i686\" ;; \\\n\t\t\tesac; \\\n# TODO for some reason, libgo + i386 fails on https://github.com/gcc-mirror/gcc/blob/gcc-7_1_0-release/libgo/runtime/proc.c#L154\n# \"error unknown case for SETCONTEXT_CLOBBERS_TLS\"\n\t\t\t;; \\\n\tesac; \\\n\t\\\n\tgnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; \\\n\t/usr/src/gcc/configure \\\n\t\t--build=\"$gnuArch\" \\\n\t\t--disable-multilib \\\n\t\t--enable-languages=c,c++,fortran,go \\\n\t\t$extraConfigureArgs \\\n\t; \\\n\tmake -j \"$(nproc)\"; \\\n\tmake install-strip; \\\n\t\\\n\tcd ..; \\\n\t\\\n\trm -rf \"$dir\" /usr/src/gcc; \\\n\t\\\n\tapt-mark auto '.*' > /dev/null; \\\n\t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark; \\\n\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false\n\n# gcc installs .so files in /usr/local/lib64 (and /usr/local/lib)...\nRUN set -ex; \\\n# this filename needs to sort higher than all the architecture filenames (\"aarch64-...\", \"armeabi...\", etc)\n\t{ echo '/usr/local/lib64'; echo '/usr/local/lib'; } > /etc/ld.so.conf.d/000-local-lib.conf; \\\n\tldconfig -v\n\n# ensure that alternatives are pointing to the new compiler and that old one is no longer used\nRUN set -ex; \\\n\tdpkg-divert --divert /usr/bin/gcc.orig --rename /usr/bin/gcc; \\\n\tdpkg-divert --divert /usr/bin/g++.orig --rename /usr/bin/g++; \\\n\tdpkg-divert --divert /usr/bin/gfortran.orig --rename /usr/bin/gfortran; \\\n\tupdate-alternatives --install /usr/bin/cc cc /usr/local/bin/gcc 999\n\nHEALTHCHECK CMD gcc -v || exit 1","injectedSmells":["do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-gem","use-wget-instead-of-add","have-a-healthcheck","have-a-user"],"originalDockerfileHash":"1aa180d5e440215b34029569fcb56736","successfullyInjectedSmells":["do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","have-a-healthcheck"],"originalDockerfileUglified":"#\n#  NOTE: THIS DOCKERFILE IS GENERATED VIA \"apply-templates.sh\"\n#\n#  PLEASE DO NOT EDIT IT DIRECTLY.\n#\nFROM buildpack-deps:bullseye\nRUN set -ex ; if ! command -v gpg > /dev/null; then apt-get update ;apt-get install --no-install-recommends gnupg=2.2.27-2+deb11u2 dirmngr=2.2.27-2+deb11u2 -y ;rm -rf /var/lib/apt/lists/* ; fi\n#  https://gcc.gnu.org/mirrors.html\nENV GPG_KEYS=\"B215C1633BCA0477615F1B35A5B3A004745C015A  B3C42148A44E6983B3E4CC0793FA9B1AB75C61B8  90AA470469D3965A87A5DCB494D03953902C9419  80F98B2E0DAB6C8281BDF541A7C8C3B2F71EDF1C  7F74F97C103468EE5D750B583AB00996FC26A641  33C235A34C46AA3FFB293709A328C3A2C3C45C06  D3A93CAD751C2AF4F8C7AD516C35B99309B5FA62\"\nRUN set -ex ; for key in $GPG_KEYS; do gpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\" ; done\n#  https://gcc.gnu.org/mirrors.html\nENV GCC_MIRRORS=\"https://ftpmirror.gnu.org/gcc  https://mirrors.kernel.org/gnu/gcc  https://bigsearcher.com/mirrors/gcc/releases  http://www.netgull.com/gcc/releases  https://ftpmirror.gnu.org/gcc  ftp://ftp.gnu.org/gnu/gcc\"\n#  Last Modified: 2021-07-28\nENV GCC_VERSION=\"11.2.0\"\n#  Docker EOL: 2023-01-28\nRUN set -ex ; savedAptMark=\"$( apt-mark showmanual ;)\" ; apt-get update ; apt-get install --no-install-recommends dpkg-dev=1.20.12 flex=2.6.4-8 -y ; rm -r /var/lib/apt/lists/* ; _fetch() { local fetch=\"$1\" ;shift ;local file=\"$1\" ;shift ;for mirror in $GCC_MIRRORS; do if curl -fL \"$mirror/$fetch\" -o \"$file\" ; then return 0 ; fi ; done ;echo \"error: failed to download '$fetch' from several mirrors\" >&2;return 1 ; } ; _fetch \"gcc-$GCC_VERSION/gcc-$GCC_VERSION.tar.xz.sig\" 'gcc.tar.xz.sig' ; _fetch \"gcc-$GCC_VERSION/gcc-$GCC_VERSION.tar.xz\" 'gcc.tar.xz' ; gpg --batch --verify gcc.tar.xz.sig gcc.tar.xz ; mkdir -p /usr/src/gcc ; tar -xf gcc.tar.xz -C /usr/src/gcc --strip-components=1 ; rm gcc.tar.xz* ; cd /usr/src/gcc ; ./contrib/download_prerequisites ; { rm *.tar.* || true ; } ; for f in config.guess config.sub; do wget -nv -O \"$f\" \"https://git.savannah.gnu.org/cgit/config.git/plain/$f?id=7d3d27baf8107b630586c962c057e22149653deb\" ;find -mindepth 2 -name \"$f\" -exec cp -v \"$f\" '{}' ';' ; done ; dir=\"$( mktemp -d ;)\" ; cd \"$dir\" ; extraConfigureArgs='' ; dpkgArch=\"$( dpkg --print-architecture ;)\" ; case \"$dpkgArch\" in (armel) extraConfigureArgs=\"$extraConfigureArgs --with-arch=armv4t --with-float=soft\" ;;(armhf) extraConfigureArgs=\"$extraConfigureArgs --with-arch=armv7-a --with-float=hard --with-fpu=vfpv3-d16 --with-mode=thumb\" ;;(i386) osVersionID=\"$( set -e ;. /etc/os-release ;echo \"$VERSION_ID\" ;)\" ; case \"$osVersionID\" in (8) extraConfigureArgs=\"$extraConfigureArgs --with-arch-32=i586\" ;;(*) extraConfigureArgs=\"$extraConfigureArgs --with-arch-32=i686\" ;; esac ;; esac ; gnuArch=\"$( dpkg-architecture --query DEB_BUILD_GNU_TYPE ;)\" ; /usr/src/gcc/configure --build=\"$gnuArch\" --disable-multilib --enable-languages=c,c++,fortran,go $extraConfigureArgs ; make -j \"$( nproc ;)\" ; make install-strip ; cd .. ; rm -rf \"$dir\" /usr/src/gcc ; apt-mark auto '.*' > /dev/null; [ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark ; apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false\n#  gcc installs .so files in /usr/local/lib64 (and /usr/local/lib)...\nRUN set -ex ; { echo '/usr/local/lib64' ;echo '/usr/local/lib' ; } > /etc/ld.so.conf.d/000-local-lib.conf; ldconfig -v\n#  ensure that alternatives are pointing to the new compiler and that old one is no longer used\nRUN set -ex ; dpkg-divert --divert /usr/bin/gcc.orig --rename /usr/bin/gcc ; dpkg-divert --divert /usr/bin/g++.orig --rename /usr/bin/g++ ; dpkg-divert --divert /usr/bin/gfortran.orig --rename /usr/bin/gfortran ; update-alternatives --install /usr/bin/cc cc /usr/local/bin/gcc 999\nHEALTHCHECK CMD gcc -v || exit 1\n","originalDockerfileUglifiedHash":"4da58fd44f462d0ccae3ab72990ee5ab","fileName":"/ICSME-replicationpackage/dataset/smellfree_dockerfiles/gcc__11.2.0.dockerfile"}