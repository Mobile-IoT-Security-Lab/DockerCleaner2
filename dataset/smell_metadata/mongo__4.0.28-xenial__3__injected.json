{"seed":25975,"processedDockerfileHash":"fd0787d4054b4a5323979eeb37ca5aa6","fixedSmells":[],"successfullyFixedSmells":[],"processedDockerfile":"#\n#  NOTE: THIS DOCKERFILE IS GENERATED VIA \"apply-templates.sh\"\n#\n#  PLEASE DO NOT EDIT IT DIRECTLY.\n#\nFROM ubuntu:xenial\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\n#  add our user and group first to make sure their IDs get assigned consistently, regardless of whatever dependencies get added\nRUN groupadd -r mongodb \\\n && useradd -r -g mongodb mongodb\nRUN apt-get update\nRUN set -eux ; : ; apt-get install ca-certificates jq numactl -y ; if ! command -v ps > /dev/null; then apt-get install procps -y ; fi ; rm -rf /var/lib/apt/lists/*\n#  grab gosu for easy step-down from root (https://github.com/tianon/gosu/releases)\nENV GOSU_VERSION=\"1.12\"\n#  grab \"js-yaml\" for parsing mongod's YAML config files (https://github.com/nodeca/js-yaml/releases)\nENV JSYAML_VERSION=\"3.13.1\"\nRUN apt-get update\nRUN set -ex ; savedAptMark=\"$( apt-mark showmanual ;)\" ; : ; apt-get install wget -y ; if ! command -v gpg > /dev/null; then apt-get install gnupg dirmngr -y ;savedAptMark=\"$savedAptMark gnupg dirmngr\" ; elif gpg --version | grep -q '^gpg (GnuPG) 1\\.' ; then apt-get install gnupg-curl -y ; fi ; rm -rf /var/lib/apt/lists/* ; dpkgArch=\"$( dpkg --print-architecture | awk -F- '{ print $NF }' ;)\" ; wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\" ; wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\" ; export GNUPGHOME=\"$( mktemp -d ;)\" ; gpg --batch --keyserver hkps://keys.openpgp.org --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 ; gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu ; command -v gpgconf \\\n && gpgconf --kill all || : ; rm -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc ; wget -O /js-yaml.js \"https://github.com/nodeca/js-yaml/raw/${JSYAML_VERSION}/dist/js-yaml.js\" ; apt-mark auto '.*' > /dev/null; apt-mark manual $savedAptMark > /dev/null; apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false ; chmod +x /usr/local/bin/gosu ; gosu --version ; gosu nobody true\nRUN mkdir /docker-entrypoint-initdb.d\nRUN set -ex ; export GNUPGHOME=\"$( mktemp -d ;)\" ; for key in 9DA31620334BD75D9DCB49F368818C72E52529D4; do gpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\" ; done ; gpg --batch --export \"$@\" > /etc/apt/trusted.gpg.d/mongodb.gpg; command -v gpgconf \\\n && gpgconf --kill all || : ; rm -r \"$GNUPGHOME\" ; apt-key list\n#  Allow build-time overrides (eg. to build image with MongoDB Enterprise version)\n#  Options for MONGO_PACKAGE: mongodb-org OR mongodb-enterprise\n#  Options for MONGO_REPO: repo.mongodb.org OR repo.mongodb.com\n#  Example: docker build --build-arg MONGO_PACKAGE=mongodb-enterprise --build-arg MONGO_REPO=repo.mongodb.com .\nARG MONGO_PACKAGE=mongodb-org\nARG MONGO_REPO=repo.mongodb.org\nENV MONGO_PACKAGE=\"${MONGO_PACKAGE}\"\nENV MONGO_REPO=\"${MONGO_REPO}\"\nENV MONGO_MAJOR=\"4.0\"\nRUN echo \"deb http://$MONGO_REPO/apt/ubuntu xenial/${MONGO_PACKAGE%-unstable}/$MONGO_MAJOR multiverse\" | tee \"/etc/apt/sources.list.d/${MONGO_PACKAGE%-unstable}.list\"\n#  http://docs.mongodb.org/master/release-notes/4.0/\nENV MONGO_VERSION=\"4.0.28\"\n#  01/24/2022, https://github.com/mongodb/mongo/tree/af1a9dc12adcfa83cc19571cb3faba26eeddac92\nRUN apt-get update\nRUN set -x \\\n && export DEBIAN_FRONTEND=noninteractive \\\n && : \\\n && ln -s /bin/true /usr/local/bin/systemctl \\\n && apt-get install mongodb-org mongodb-org-server mongodb-org-shell mongodb-org-mongos mongodb-org-tools -y \\\n && rm -f /usr/local/bin/systemctl \\\n && rm -rf /var/lib/apt/lists/* \\\n && rm -rf /var/lib/mongodb \\\n && mv /etc/mongod.conf /etc/mongod.conf.orig\nRUN mkdir -p /data/db /data/configdb \\\n && chown -R mongodb:mongodb /data/db /data/configdb\nVOLUME /data/db /data/configdb\nADD docker-entrypoint.sh /usr/local/bin/\nENTRYPOINT [\"docker-entrypoint.sh\"]\nEXPOSE 27017/tcp\nADD docker-healthcheck /usr/local/bin/\nCMD [\"mongod\"]\nENV AWS_SECRET_KEY=\"bbh9fhGK8eSkFJlHbliyOrCqQFqZNBIFj7lWRvLh\" \\\n    CONSUMER_SECRET=\"vq/WYB8RjoOomQ6gpEPmsc4TYSXoLdRkO/VdocZu0hXLgzkW47A3\" \\\n    DOCKER_PASSWORD=\"aKhViGuYJhwzv9fNoFHmJG85uh7XaA5BCwph9p23\"\n","originalDockerfile":"#\n# NOTE: THIS DOCKERFILE IS GENERATED VIA \"apply-templates.sh\"\n#\n# PLEASE DO NOT EDIT IT DIRECTLY.\n#\n\nFROM ubuntu:xenial\n\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\n\n# add our user and group first to make sure their IDs get assigned consistently, regardless of whatever dependencies get added\nRUN groupadd -r mongodb && useradd -r -g mongodb mongodb\n\nRUN set -eux; \\\n\tapt-get update; \\\n\tapt-get install -y --no-install-recommends \\\n\t\tca-certificates=20210119~16.04.1 jq=1.5+dfsg-1ubuntu0.1 numactl=2.0.11-1ubuntu1.1 \\\n\t; \\\n\tif ! command -v ps > /dev/null; then \\\n\t\tapt-get install -y --no-install-recommends procps=2:3.3.10-4ubuntu2.5; \\\n\tfi; \\\n\trm -rf /var/lib/apt/lists/*\n\n# grab gosu for easy step-down from root (https://github.com/tianon/gosu/releases)\nENV GOSU_VERSION 1.12\n# grab \"js-yaml\" for parsing mongod's YAML config files (https://github.com/nodeca/js-yaml/releases)\nENV JSYAML_VERSION 3.13.1\n\nRUN set -ex; \\\n\t\\\n\tsavedAptMark=\"$(apt-mark showmanual)\"; \\\n\tapt-get update; \\\n\tapt-get install -y --no-install-recommends \\\n\t\twget=1.17.1-1ubuntu1.5 \\\n\t; \\\n\tif ! command -v gpg > /dev/null; then \\\n\t\tapt-get install -y --no-install-recommends gnupg=1.4.20-1ubuntu3.3 dirmngr=2.1.11-6ubuntu2.1; \\\n\t\tsavedAptMark=\"$savedAptMark gnupg dirmngr\"; \\\n\telif gpg --version | grep -q '^gpg (GnuPG) 1\\.'; then \\\n# \"This package provides support for HKPS keyservers.\" (GnuPG 1.x only)\n\t\tapt-get install -y --no-install-recommends gnupg-curl=1.4.20-1ubuntu3.3; \\\n\tfi; \\\n\trm -rf /var/lib/apt/lists/*; \\\n\t\\\n\tdpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\"; \\\n\twget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\"; \\\n\twget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\"; \\\n\texport GNUPGHOME=\"$(mktemp -d)\"; \\\n\tgpg --batch --keyserver hkps://keys.openpgp.org --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4; \\\n\tgpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu; \\\n\tcommand -v gpgconf && gpgconf --kill all || :; \\\n\trm -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc; \\\n\t\\\n\twget -O /js-yaml.js \"https://github.com/nodeca/js-yaml/raw/${JSYAML_VERSION}/dist/js-yaml.js\"; \\\n# TODO some sort of download verification here\n\t\\\n\tapt-mark auto '.*' > /dev/null; \\\n\tapt-mark manual $savedAptMark > /dev/null; \\\n\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \\\n\t\\\n# smoke test\n\tchmod +x /usr/local/bin/gosu; \\\n\tgosu --version; \\\n\tgosu nobody true\n\nRUN mkdir /docker-entrypoint-initdb.d\n\nRUN set -ex; \\\n\texport GNUPGHOME=\"$(mktemp -d)\"; \\\n\tfor key in 9DA31620334BD75D9DCB49F368818C72E52529D4; do \\\n\t\tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\"; \\\n\tdone; \\\n\tgpg --batch --export \"$@\" > /etc/apt/trusted.gpg.d/mongodb.gpg; \\\n\tcommand -v gpgconf && gpgconf --kill all || :; \\\n\trm -r \"$GNUPGHOME\"; \\\n\tapt-key list\n\n# Allow build-time overrides (eg. to build image with MongoDB Enterprise version)\n# Options for MONGO_PACKAGE: mongodb-org OR mongodb-enterprise\n# Options for MONGO_REPO: repo.mongodb.org OR repo.mongodb.com\n# Example: docker build --build-arg MONGO_PACKAGE=mongodb-enterprise --build-arg MONGO_REPO=repo.mongodb.com .\nARG MONGO_PACKAGE=mongodb-org\nARG MONGO_REPO=repo.mongodb.org\nENV MONGO_PACKAGE=${MONGO_PACKAGE}\nENV MONGO_REPO=${MONGO_REPO}\n\nENV MONGO_MAJOR 4.0\nRUN echo \"deb http://$MONGO_REPO/apt/ubuntu xenial/${MONGO_PACKAGE%-unstable}/$MONGO_MAJOR multiverse\" | tee \"/etc/apt/sources.list.d/${MONGO_PACKAGE%-unstable}.list\"\n\n# http://docs.mongodb.org/master/release-notes/4.0/\nENV MONGO_VERSION 4.0.28\n# 01/24/2022, https://github.com/mongodb/mongo/tree/af1a9dc12adcfa83cc19571cb3faba26eeddac92\n\nRUN set -x \\\n# installing \"mongodb-enterprise\" pulls in \"tzdata\" which prompts for input\n\t&& export DEBIAN_FRONTEND=noninteractive \\\n\t&& apt-get update \\\n# starting with MongoDB 4.3 (and backported to 4.0 and 4.2 *and* 3.6??), the postinst for server includes an unconditional \"systemctl daemon-reload\" (and we don't have anything for \"systemctl\" to talk to leading to dbus errors and failed package installs)\n\t&& ln -s /bin/true /usr/local/bin/systemctl \\\n\t&& apt-get install -y --no-install-recommends \\\n\t\tmongodb-org=4.0.28 \\\n\t\tmongodb-org-server=4.0.28 \\\n\t\tmongodb-org-shell=4.0.28 \\\n\t\tmongodb-org-mongos=4.0.28 \\\n\t\tmongodb-org-tools=4.0.28 \\\n\t&& rm -f /usr/local/bin/systemctl \\\n\t&& rm -rf /var/lib/apt/lists/* \\\n\t&& rm -rf /var/lib/mongodb \\\n\t&& mv /etc/mongod.conf /etc/mongod.conf.orig\n\nRUN mkdir -p /data/db /data/configdb \\\n\t&& chown -R mongodb:mongodb /data/db /data/configdb\nVOLUME /data/db /data/configdb\n\nCOPY docker-entrypoint.sh /usr/local/bin/\nENTRYPOINT [\"docker-entrypoint.sh\"]\n\nEXPOSE 27017\n\nCOPY docker-healthcheck /usr/local/bin/\n\nHEALTHCHECK CMD [\"docker-healthcheck\"]\n\nCMD [\"mongod\"]","injectedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck"],"originalDockerfileHash":"2522c3b520cbe1735f0ec8ff57bcb251","successfullyInjectedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","use-copy-instead-of-add","do-not-have-secrets","have-a-healthcheck"],"originalDockerfileUglified":"#\n#  NOTE: THIS DOCKERFILE IS GENERATED VIA \"apply-templates.sh\"\n#\n#  PLEASE DO NOT EDIT IT DIRECTLY.\n#\nFROM ubuntu:xenial\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\n#  add our user and group first to make sure their IDs get assigned consistently, regardless of whatever dependencies get added\nRUN groupadd -r mongodb \\\n && useradd -r -g mongodb mongodb\nRUN set -eux ; apt-get update ; apt-get install --no-install-recommends ca-certificates=20210119~16.04.1 jq=1.5+dfsg-1ubuntu0.1 numactl=2.0.11-1ubuntu1.1 -y ; if ! command -v ps > /dev/null; then apt-get install --no-install-recommends procps=2:3.3.10-4ubuntu2.5 -y ; fi ; rm -rf /var/lib/apt/lists/*\n#  grab gosu for easy step-down from root (https://github.com/tianon/gosu/releases)\nENV GOSU_VERSION=\"1.12\"\n#  grab \"js-yaml\" for parsing mongod's YAML config files (https://github.com/nodeca/js-yaml/releases)\nENV JSYAML_VERSION=\"3.13.1\"\nRUN set -ex ; savedAptMark=\"$( apt-mark showmanual ;)\" ; apt-get update ; apt-get install --no-install-recommends wget=1.17.1-1ubuntu1.5 -y ; if ! command -v gpg > /dev/null; then apt-get install --no-install-recommends gnupg=1.4.20-1ubuntu3.3 dirmngr=2.1.11-6ubuntu2.1 -y ;savedAptMark=\"$savedAptMark gnupg dirmngr\" ; elif gpg --version | grep -q '^gpg (GnuPG) 1\\.' ; then apt-get install --no-install-recommends gnupg-curl=1.4.20-1ubuntu3.3 -y ; fi ; rm -rf /var/lib/apt/lists/* ; dpkgArch=\"$( dpkg --print-architecture | awk -F- '{ print $NF }' ;)\" ; wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\" ; wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\" ; export GNUPGHOME=\"$( mktemp -d ;)\" ; gpg --batch --keyserver hkps://keys.openpgp.org --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 ; gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu ; command -v gpgconf \\\n && gpgconf --kill all || : ; rm -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc ; wget -O /js-yaml.js \"https://github.com/nodeca/js-yaml/raw/${JSYAML_VERSION}/dist/js-yaml.js\" ; apt-mark auto '.*' > /dev/null; apt-mark manual $savedAptMark > /dev/null; apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false ; chmod +x /usr/local/bin/gosu ; gosu --version ; gosu nobody true\nRUN mkdir /docker-entrypoint-initdb.d\nRUN set -ex ; export GNUPGHOME=\"$( mktemp -d ;)\" ; for key in 9DA31620334BD75D9DCB49F368818C72E52529D4; do gpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\" ; done ; gpg --batch --export \"$@\" > /etc/apt/trusted.gpg.d/mongodb.gpg; command -v gpgconf \\\n && gpgconf --kill all || : ; rm -r \"$GNUPGHOME\" ; apt-key list\n#  Allow build-time overrides (eg. to build image with MongoDB Enterprise version)\n#  Options for MONGO_PACKAGE: mongodb-org OR mongodb-enterprise\n#  Options for MONGO_REPO: repo.mongodb.org OR repo.mongodb.com\n#  Example: docker build --build-arg MONGO_PACKAGE=mongodb-enterprise --build-arg MONGO_REPO=repo.mongodb.com .\nARG MONGO_PACKAGE=mongodb-org\nARG MONGO_REPO=repo.mongodb.org\nENV MONGO_PACKAGE=\"${MONGO_PACKAGE}\"\nENV MONGO_REPO=\"${MONGO_REPO}\"\nENV MONGO_MAJOR=\"4.0\"\nRUN echo \"deb http://$MONGO_REPO/apt/ubuntu xenial/${MONGO_PACKAGE%-unstable}/$MONGO_MAJOR multiverse\" | tee \"/etc/apt/sources.list.d/${MONGO_PACKAGE%-unstable}.list\"\n#  http://docs.mongodb.org/master/release-notes/4.0/\nENV MONGO_VERSION=\"4.0.28\"\n#  01/24/2022, https://github.com/mongodb/mongo/tree/af1a9dc12adcfa83cc19571cb3faba26eeddac92\nRUN set -x \\\n && export DEBIAN_FRONTEND=noninteractive \\\n && apt-get update \\\n && ln -s /bin/true /usr/local/bin/systemctl \\\n && apt-get install --no-install-recommends mongodb-org=4.0.28 mongodb-org-server=4.0.28 mongodb-org-shell=4.0.28 mongodb-org-mongos=4.0.28 mongodb-org-tools=4.0.28 -y \\\n && rm -f /usr/local/bin/systemctl \\\n && rm -rf /var/lib/apt/lists/* \\\n && rm -rf /var/lib/mongodb \\\n && mv /etc/mongod.conf /etc/mongod.conf.orig\nRUN mkdir -p /data/db /data/configdb \\\n && chown -R mongodb:mongodb /data/db /data/configdb\nVOLUME /data/db /data/configdb\nCOPY docker-entrypoint.sh /usr/local/bin/\nENTRYPOINT [\"docker-entrypoint.sh\"]\nEXPOSE 27017/tcp\nCOPY docker-healthcheck /usr/local/bin/\nHEALTHCHECK CMD [\"docker-healthcheck\"]\nCMD [\"mongod\"]\n","originalDockerfileUglifiedHash":"aa91ce153bcc89416579054bd5a04776","fileName":"/ICSME-replicationpackage/dataset/smellfree_dockerfiles/mongo__4.0.28-xenial.dockerfile"}