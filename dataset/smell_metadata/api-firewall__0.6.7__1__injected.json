{"seed":27510,"processedDockerfileHash":"c426a59380cefbdb1b7a1f775f962566","fixedSmells":[],"successfullyFixedSmells":[],"processedDockerfile":"FROM alpine:3.15\nENV APIFW_PATH=\"/opt/api-firewall\"\nENV PATH=\"$APIFW_PATH:$PATH\"\nSHELL [\"/bin/ash\", \"-o\", \"pipefail\", \"-c\"]\nRUN set -eux ; adduser -u 1000 -H -h /opt -D -s /bin/sh api-firewall\nENV APIFIREWALL_VERSION=\"v0.6.7\"\nRUN set -eux ; apk add wget --no-cache ; arch=\"$( apk --print-arch ;)\" ; case \"$arch\" in ('x86_64') url=\"https://github.com/wallarm/api-firewall/releases/download/${APIFIREWALL_VERSION}/api-firewall-amd64-musl.tar.gz\" ; sha256='fb61a3ca620340a76f97856ec30190de8422535c31d17ddc89019e87825d60b9' ;;('aarch64') url=\"https://github.com/wallarm/api-firewall/releases/download/${APIFIREWALL_VERSION}/api-firewall-arm64-musl.tar.gz\" ; sha256='cdcd6679536e3e0fa0d5cdd8f422ef58f31f65c2d279228150c269c32641dd1d' ;;('x86') url=\"https://github.com/wallarm/api-firewall/releases/download/${APIFIREWALL_VERSION}/api-firewall-386-musl.tar.gz\" ; sha256='0850d87b52624085265554605f46df5cda2a006d7b9dc9a7d369cdb9c9c88305' ;;(*) echo \"error: current architecture ($arch) does not have a corresponding API-Firewall binary release\" >&2; exit 1 ;; esac ; wget -q -O api-firewall.tar.gz \"$url\" ; echo \"$sha256 *api-firewall.tar.gz\" | sha256sum -c ; mkdir -p \"$APIFW_PATH\" ; tar -xzf api-firewall.tar.gz -C \"$APIFW_PATH\" --strip-components 1 ; rm api-firewall.tar.gz ; chmod 755 $APIFW_PATH/api-firewall ; api-firewall -v\nCOPY docker-entrypoint.sh $APIFW_PATH/\nUSER api-firewall\nENTRYPOINT [\"docker-entrypoint.sh\"]\nHEALTHCHECK CMD curl --fail http://127.0.0.1:9667/v1/liveness || exit 1\nCMD [\"api-firewall\"]\nUSER root\n","originalDockerfile":"FROM alpine:3.15\n\nENV APIFW_PATH /opt/api-firewall\nENV PATH $APIFW_PATH:$PATH\n\nSHELL [\"/bin/ash\", \"-o\", \"pipefail\", \"-c\"]\n\nRUN set -eux; \\\n    adduser -u 1000 -H -h /opt -D -s /bin/sh api-firewall\n\nENV APIFIREWALL_VERSION v0.6.7\n\nRUN set -eux; \\\n    \\\n    apk add --no-cache wget=1.21.2-r2; \\\n    \\\n    arch=\"$(apk --print-arch)\"; \\\n    case \"$arch\" in \\\n        'x86_64') \\\n            url=\"https://github.com/wallarm/api-firewall/releases/download/${APIFIREWALL_VERSION}/api-firewall-amd64-musl.tar.gz\"; \\\n            sha256='fb61a3ca620340a76f97856ec30190de8422535c31d17ddc89019e87825d60b9'; \\\n            ;; \\\n        'aarch64') \\\n            url=\"https://github.com/wallarm/api-firewall/releases/download/${APIFIREWALL_VERSION}/api-firewall-arm64-musl.tar.gz\"; \\\n            sha256='cdcd6679536e3e0fa0d5cdd8f422ef58f31f65c2d279228150c269c32641dd1d'; \\\n            ;; \\\n        'x86') \\\n            url=\"https://github.com/wallarm/api-firewall/releases/download/${APIFIREWALL_VERSION}/api-firewall-386-musl.tar.gz\"; \\\n            sha256='0850d87b52624085265554605f46df5cda2a006d7b9dc9a7d369cdb9c9c88305'; \\\n            ;; \\\n        *) \\\n            echo >&2 \"error: current architecture ($arch) does not have a corresponding API-Firewall binary release\"; \\\n            exit 1; \\\n            ;; \\\n    esac; \\\n    \\\n    wget -q -O api-firewall.tar.gz \"$url\"; \\\n    echo \"$sha256 *api-firewall.tar.gz\" | sha256sum -c; \\\n    \\\n    mkdir -p \"$APIFW_PATH\"; \\\n    tar -xzf api-firewall.tar.gz -C \"$APIFW_PATH\" --strip-components 1; \\\n    rm api-firewall.tar.gz; \\\n    \\\n    chmod 755 $APIFW_PATH/api-firewall; \\\n    \\\n# smoke test\n    api-firewall -v\n\nCOPY docker-entrypoint.sh $APIFW_PATH/\n\nUSER api-firewall\nENTRYPOINT [\"docker-entrypoint.sh\"]\n\nHEALTHCHECK CMD curl --fail http://127.0.0.1:9667/v1/liveness || exit 1\n\nCMD [\"api-firewall\"]\n","injectedSmells":["pin-package-manager-versions-apt-get","pin-package-manager-versions-npm","pin-package-manager-versions-apk","use-wget-instead-of-add","have-a-user"],"originalDockerfileHash":"89d5a343cc4b52a0770d005bc9096816","successfullyInjectedSmells":["pin-package-manager-versions-apk","have-a-user"],"originalDockerfileUglified":"FROM alpine:3.15\nENV APIFW_PATH=\"/opt/api-firewall\"\nENV PATH=\"$APIFW_PATH:$PATH\"\nSHELL [\"/bin/ash\", \"-o\", \"pipefail\", \"-c\"]\nRUN set -eux ; adduser -u 1000 -H -h /opt -D -s /bin/sh api-firewall\nENV APIFIREWALL_VERSION=\"v0.6.7\"\nRUN set -eux ; apk add --no-cache wget=1.21.2-r2 ; arch=\"$( apk --print-arch ;)\" ; case \"$arch\" in ('x86_64') url=\"https://github.com/wallarm/api-firewall/releases/download/${APIFIREWALL_VERSION}/api-firewall-amd64-musl.tar.gz\" ; sha256='fb61a3ca620340a76f97856ec30190de8422535c31d17ddc89019e87825d60b9' ;;('aarch64') url=\"https://github.com/wallarm/api-firewall/releases/download/${APIFIREWALL_VERSION}/api-firewall-arm64-musl.tar.gz\" ; sha256='cdcd6679536e3e0fa0d5cdd8f422ef58f31f65c2d279228150c269c32641dd1d' ;;('x86') url=\"https://github.com/wallarm/api-firewall/releases/download/${APIFIREWALL_VERSION}/api-firewall-386-musl.tar.gz\" ; sha256='0850d87b52624085265554605f46df5cda2a006d7b9dc9a7d369cdb9c9c88305' ;;(*) echo \"error: current architecture ($arch) does not have a corresponding API-Firewall binary release\" >&2; exit 1 ;; esac ; wget -q -O api-firewall.tar.gz \"$url\" ; echo \"$sha256 *api-firewall.tar.gz\" | sha256sum -c ; mkdir -p \"$APIFW_PATH\" ; tar -xzf api-firewall.tar.gz -C \"$APIFW_PATH\" --strip-components 1 ; rm api-firewall.tar.gz ; chmod 755 $APIFW_PATH/api-firewall ; api-firewall -v\nCOPY docker-entrypoint.sh $APIFW_PATH/\nUSER api-firewall\nENTRYPOINT [\"docker-entrypoint.sh\"]\nHEALTHCHECK CMD curl --fail http://127.0.0.1:9667/v1/liveness || exit 1\nCMD [\"api-firewall\"]\n","originalDockerfileUglifiedHash":"945930b695c604e5738eb19869bdc3dc","fileName":"/ICSME-replicationpackage/dataset/smellfree_dockerfiles/api-firewall__0.6.7.dockerfile"}