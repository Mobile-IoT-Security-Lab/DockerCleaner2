{"seed":19743,"processedDockerfileHash":"c483eac1c31124585e376b0df0789a71","fixedSmells":[],"successfullyFixedSmells":[],"processedDockerfile":"FROM alpine:3.14\nLABEL maintainer=\"Roger Light <roger@atchoo.org>\" \\\n      description=\"Eclipse Mosquitto MQTT Broker\"\nSHELL [\"/bin/ash\", \"-o\", \"pipefail\", \"-c\"]\nENV VERSION=\"1.5.11\" \\\n    DOWNLOAD_SHA256=\"4a3b8a8f5505d27a7a966dd68bfd76f1e69feb51796d1b46b7271d1bb5a1a299 \" \\\n    GPG_KEYS=\"A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7\" \\\n    LWS_VERSION=\"2.4.2\" \\\n    LWS_SHA256=\"73012d7fcf428dedccc816e83a63a01462e27819d5537b8e0d0c7264bfacfad6 \"\nRUN set -x \\\n && apk --no-cache add --virtual build-deps build-base=0.5-r3 cmake=3.20.6-r0 gnupg=2.2.31-r1 libressl-dev=3.3.6-r0 util-linux-dev=2.37.4-r0 \\\n && wget -q https://github.com/warmcat/libwebsockets/archive/v${LWS_VERSION}.tar.gz -O /tmp/lws.tar.gz \\\n && echo \"$LWS_SHA256 /tmp/lws.tar.gz\" | sha256sum -c - \\\n && mkdir -p /build/lws \\\n && tar --strip=1 -xf /tmp/lws.tar.gz -C /build/lws \\\n && rm /tmp/lws.tar.gz \\\n && cd /build/lws \\\n && cmake . -DCMAKE_BUILD_TYPE=MinSizeRel -DCMAKE_INSTALL_PREFIX=/usr -DLWS_IPV6=ON -DLWS_WITHOUT_BUILTIN_GETIFADDRS=ON -DLWS_WITHOUT_CLIENT=ON -DLWS_WITHOUT_EXTENSIONS=ON -DLWS_WITHOUT_TESTAPPS=ON -DLWS_WITH_HTTP2=OFF -DLWS_WITH_SHARED=OFF -DLWS_WITH_ZIP_FOPS=OFF -DLWS_WITH_ZLIB=OFF \\\n && make -j \"$( nproc ;)\" \\\n && rm -rf /root/.cmake \\\n && wget -q https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz -O /tmp/mosq.tar.gz \\\n && echo \"$DOWNLOAD_SHA256 /tmp/mosq.tar.gz\" | sha256sum -c - \\\n && wget -q https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz.asc -O /tmp/mosq.tar.gz.asc \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && found='' ; for server in ha.pool.sks-keyservers.net hkp://keyserver.ubuntu.com:80 hkp://p80.pool.sks-keyservers.net:80 pgp.mit.edu; do echo \"Fetching GPG key $GPG_KEYS from $server\" ;gpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$GPG_KEYS\" \\\n && found=yes \\\n && break ; done ; test -z \"$found\" \\\n && echo \"error: failed to fetch GPG key $GPG_KEYS\" >&2 \\\n && exit 1 ; gpg --batch --verify /tmp/mosq.tar.gz.asc /tmp/mosq.tar.gz \\\n && gpgconf --kill all \\\n && rm -rf \"$GNUPGHOME\" /tmp/mosq.tar.gz.asc \\\n && mkdir -p /build/mosq \\\n && tar --strip=1 -xf /tmp/mosq.tar.gz -C /build/mosq \\\n && rm /tmp/mosq.tar.gz \\\n && make -C /build/mosq -j \"$( nproc ;)\" CFLAGS=\"-Wall -O2 -I/build/lws/include -flto\" LDFLAGS=\"-L/build/lws/lib -flto\" WITH_ADNS=no WITH_DOCS=no WITH_SHARED_LIBRARIES=yes WITH_SRV=no WITH_STRIP=yes WITH_TLS_PSK=no WITH_WEBSOCKETS=yes prefix=/usr binary \\\n && addgroup -S -g 1883 mosquitto 2> /dev/null \\\n && adduser -S -u 1883 -D -H -h /var/empty -s /sbin/nologin -G mosquitto -g mosquitto mosquitto 2> /dev/null \\\n && mkdir -p /mosquitto/config /mosquitto/data /mosquitto/log \\\n && install -d /usr/sbin/ \\\n && install -s -m755 /build/mosq/client/mosquitto_pub /usr/bin/mosquitto_pub \\\n && install -s -m755 /build/mosq/client/mosquitto_sub /usr/bin/mosquitto_sub \\\n && install -s -m644 /build/mosq/lib/libmosquitto.so.1 /usr/lib/libmosquitto.so.1 \\\n && install -s -m755 /build/mosq/src/mosquitto /usr/sbin/mosquitto \\\n && install -s -m755 /build/mosq/src/mosquitto_passwd /usr/bin/mosquitto_passwd \\\n && install -m644 /build/mosq/mosquitto.conf /mosquitto/config/mosquitto.conf \\\n && chown -R mosquitto:mosquitto /mosquitto \\\n && apk --no-cache add ca-certificates=20220614-r0 libressl=3.3.6-r0 libuuid=2.37.4-r0 \\\n && apk del build-deps \\\n && rm -rf /build\nVOLUME [\"/mosquitto/data\", \"/mosquitto/log\"]\n#  Set up the entry point script and default command\nCOPY docker-entrypoint.sh /\nEXPOSE 1883/tcp\nENTRYPOINT [\"/docker-entrypoint.sh\"]\nHEALTHCHECK CMD curl --fail http://127.0.0.1:1883 || exit 1\nCMD [\"/usr/sbin/mosquitto\", \"-c\", \"/mosquitto/config/mosquitto.conf\"]\nENV GOOGLE_API_KEY=\"AIzakn0flviHUVnC8BAgs0IeqPvbxcSANZu0Gue\" \\\n    SLACK_TOKEN=\"xapp-247847218247-zustFZ6xlDalx34nZk2NhuG8\"\n","originalDockerfile":"FROM alpine:3.14\n\nLABEL maintainer=\"Roger Light <roger@atchoo.org>\" \\\n    description=\"Eclipse Mosquitto MQTT Broker\"\n\nSHELL [\"/bin/ash\", \"-o\", \"pipefail\", \"-c\"]\n\nENV VERSION=1.5.11 \\\n    DOWNLOAD_SHA256=\"4a3b8a8f5505d27a7a966dd68bfd76f1e69feb51796d1b46b7271d1bb5a1a299 \" \\\n    GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7 \\\n    LWS_VERSION=2.4.2 \\\n    LWS_SHA256=\"73012d7fcf428dedccc816e83a63a01462e27819d5537b8e0d0c7264bfacfad6 \"\n\nRUN set -x && \\\n    apk --no-cache add --virtual build-deps \\\n        build-base=0.5-r3 cmake=3.20.6-r0 gnupg=2.2.31-r1 libressl-dev=3.3.6-r0 util-linux-dev=2.37.4-r0 && \\\n    wget -q https://github.com/warmcat/libwebsockets/archive/v${LWS_VERSION}.tar.gz -O /tmp/lws.tar.gz && \\\n    echo \"$LWS_SHA256 /tmp/lws.tar.gz\" | sha256sum -c - && \\\n    mkdir -p /build/lws && \\\n    tar --strip=1 -xf /tmp/lws.tar.gz -C /build/lws && \\\n    rm /tmp/lws.tar.gz && \\\n    cd /build/lws && \\\n    cmake . \\\n        -DCMAKE_BUILD_TYPE=MinSizeRel \\\n        -DCMAKE_INSTALL_PREFIX=/usr \\\n        -DLWS_IPV6=ON \\\n        -DLWS_WITHOUT_BUILTIN_GETIFADDRS=ON \\\n        -DLWS_WITHOUT_CLIENT=ON \\\n        -DLWS_WITHOUT_EXTENSIONS=ON \\\n        -DLWS_WITHOUT_TESTAPPS=ON \\\n        -DLWS_WITH_HTTP2=OFF \\\n        -DLWS_WITH_SHARED=OFF \\\n        -DLWS_WITH_ZIP_FOPS=OFF \\\n        -DLWS_WITH_ZLIB=OFF && \\\n    make -j \"$(nproc)\" && \\\n    rm -rf /root/.cmake && \\\n    wget -q https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz -O /tmp/mosq.tar.gz && \\\n    echo \"$DOWNLOAD_SHA256 /tmp/mosq.tar.gz\" | sha256sum -c - && \\\n    wget -q https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz.asc -O /tmp/mosq.tar.gz.asc && \\\n    export GNUPGHOME=\"$(mktemp -d)\" && \\\n    found=''; \\\n    for server in \\\n        ha.pool.sks-keyservers.net \\\n        hkp://keyserver.ubuntu.com:80 \\\n        hkp://p80.pool.sks-keyservers.net:80 \\\n        pgp.mit.edu \\\n    ; do \\\n        echo \"Fetching GPG key $GPG_KEYS from $server\"; \\\n        gpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$GPG_KEYS\" && found=yes && break; \\\n    done; \\\n    test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $GPG_KEYS\" && exit 1; \\\n    gpg --batch --verify /tmp/mosq.tar.gz.asc /tmp/mosq.tar.gz && \\\n    gpgconf --kill all && \\\n    rm -rf \"$GNUPGHOME\" /tmp/mosq.tar.gz.asc && \\\n    mkdir -p /build/mosq && \\\n    tar --strip=1 -xf /tmp/mosq.tar.gz -C /build/mosq && \\\n    rm /tmp/mosq.tar.gz && \\\n    make -C /build/mosq -j \"$(nproc)\" \\\n        CFLAGS=\"-Wall -O2 -I/build/lws/include -flto\" \\\n        LDFLAGS=\"-L/build/lws/lib -flto\" \\\n        WITH_ADNS=no \\\n        WITH_DOCS=no \\\n        WITH_SHARED_LIBRARIES=yes \\\n        WITH_SRV=no \\\n        WITH_STRIP=yes \\\n\t\tWITH_TLS_PSK=no \\\n        WITH_WEBSOCKETS=yes \\\n        prefix=/usr \\\n        binary && \\\n    addgroup -S -g 1883 mosquitto 2>/dev/null && \\\n    adduser -S -u 1883 -D -H -h /var/empty -s /sbin/nologin -G mosquitto -g mosquitto mosquitto 2>/dev/null && \\\n    mkdir -p /mosquitto/config /mosquitto/data /mosquitto/log && \\\n    install -d /usr/sbin/ && \\\n    install -s -m755 /build/mosq/client/mosquitto_pub /usr/bin/mosquitto_pub && \\\n    install -s -m755 /build/mosq/client/mosquitto_sub /usr/bin/mosquitto_sub && \\\n    install -s -m644 /build/mosq/lib/libmosquitto.so.1 /usr/lib/libmosquitto.so.1 && \\\n    install -s -m755 /build/mosq/src/mosquitto /usr/sbin/mosquitto && \\\n    install -s -m755 /build/mosq/src/mosquitto_passwd /usr/bin/mosquitto_passwd && \\\n    install -m644 /build/mosq/mosquitto.conf /mosquitto/config/mosquitto.conf && \\\n    chown -R mosquitto:mosquitto /mosquitto && \\\n    apk --no-cache add \\\n        ca-certificates=20220614-r0 libressl=3.3.6-r0 libuuid=2.37.4-r0 && \\\n    apk del build-deps && \\\n    rm -rf /build\n\nVOLUME [\"/mosquitto/data\", \"/mosquitto/log\"]\n\n# Set up the entry point script and default command\nCOPY docker-entrypoint.sh /\nEXPOSE 1883\nENTRYPOINT [\"/docker-entrypoint.sh\"]\n\nHEALTHCHECK CMD curl --fail http://127.0.0.1:1883 || exit 1\n\nCMD [\"/usr/sbin/mosquitto\", \"-c\", \"/mosquitto/config/mosquitto.conf\"]\n","injectedSmells":["use-no-install-recommends","pin-package-manager-versions-npm","pin-package-manager-versions-gem","use-wget-instead-of-add","do-not-have-secrets"],"originalDockerfileHash":"39a6b6ba92f08dd95d67d1ac9312501c","successfullyInjectedSmells":["do-not-have-secrets"],"originalDockerfileUglified":"FROM alpine:3.14\nLABEL maintainer=\"Roger Light <roger@atchoo.org>\" \\\n      description=\"Eclipse Mosquitto MQTT Broker\"\nSHELL [\"/bin/ash\", \"-o\", \"pipefail\", \"-c\"]\nENV VERSION=\"1.5.11\" \\\n    DOWNLOAD_SHA256=\"4a3b8a8f5505d27a7a966dd68bfd76f1e69feb51796d1b46b7271d1bb5a1a299 \" \\\n    GPG_KEYS=\"A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7\" \\\n    LWS_VERSION=\"2.4.2\" \\\n    LWS_SHA256=\"73012d7fcf428dedccc816e83a63a01462e27819d5537b8e0d0c7264bfacfad6 \"\nRUN set -x \\\n && apk --no-cache add --virtual build-deps build-base=0.5-r3 cmake=3.20.6-r0 gnupg=2.2.31-r1 libressl-dev=3.3.6-r0 util-linux-dev=2.37.4-r0 \\\n && wget -q https://github.com/warmcat/libwebsockets/archive/v${LWS_VERSION}.tar.gz -O /tmp/lws.tar.gz \\\n && echo \"$LWS_SHA256 /tmp/lws.tar.gz\" | sha256sum -c - \\\n && mkdir -p /build/lws \\\n && tar --strip=1 -xf /tmp/lws.tar.gz -C /build/lws \\\n && rm /tmp/lws.tar.gz \\\n && cd /build/lws \\\n && cmake . -DCMAKE_BUILD_TYPE=MinSizeRel -DCMAKE_INSTALL_PREFIX=/usr -DLWS_IPV6=ON -DLWS_WITHOUT_BUILTIN_GETIFADDRS=ON -DLWS_WITHOUT_CLIENT=ON -DLWS_WITHOUT_EXTENSIONS=ON -DLWS_WITHOUT_TESTAPPS=ON -DLWS_WITH_HTTP2=OFF -DLWS_WITH_SHARED=OFF -DLWS_WITH_ZIP_FOPS=OFF -DLWS_WITH_ZLIB=OFF \\\n && make -j \"$( nproc ;)\" \\\n && rm -rf /root/.cmake \\\n && wget -q https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz -O /tmp/mosq.tar.gz \\\n && echo \"$DOWNLOAD_SHA256 /tmp/mosq.tar.gz\" | sha256sum -c - \\\n && wget -q https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz.asc -O /tmp/mosq.tar.gz.asc \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && found='' ; for server in ha.pool.sks-keyservers.net hkp://keyserver.ubuntu.com:80 hkp://p80.pool.sks-keyservers.net:80 pgp.mit.edu; do echo \"Fetching GPG key $GPG_KEYS from $server\" ;gpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$GPG_KEYS\" \\\n && found=yes \\\n && break ; done ; test -z \"$found\" \\\n && echo \"error: failed to fetch GPG key $GPG_KEYS\" >&2 \\\n && exit 1 ; gpg --batch --verify /tmp/mosq.tar.gz.asc /tmp/mosq.tar.gz \\\n && gpgconf --kill all \\\n && rm -rf \"$GNUPGHOME\" /tmp/mosq.tar.gz.asc \\\n && mkdir -p /build/mosq \\\n && tar --strip=1 -xf /tmp/mosq.tar.gz -C /build/mosq \\\n && rm /tmp/mosq.tar.gz \\\n && make -C /build/mosq -j \"$( nproc ;)\" CFLAGS=\"-Wall -O2 -I/build/lws/include -flto\" LDFLAGS=\"-L/build/lws/lib -flto\" WITH_ADNS=no WITH_DOCS=no WITH_SHARED_LIBRARIES=yes WITH_SRV=no WITH_STRIP=yes WITH_TLS_PSK=no WITH_WEBSOCKETS=yes prefix=/usr binary \\\n && addgroup -S -g 1883 mosquitto 2> /dev/null \\\n && adduser -S -u 1883 -D -H -h /var/empty -s /sbin/nologin -G mosquitto -g mosquitto mosquitto 2> /dev/null \\\n && mkdir -p /mosquitto/config /mosquitto/data /mosquitto/log \\\n && install -d /usr/sbin/ \\\n && install -s -m755 /build/mosq/client/mosquitto_pub /usr/bin/mosquitto_pub \\\n && install -s -m755 /build/mosq/client/mosquitto_sub /usr/bin/mosquitto_sub \\\n && install -s -m644 /build/mosq/lib/libmosquitto.so.1 /usr/lib/libmosquitto.so.1 \\\n && install -s -m755 /build/mosq/src/mosquitto /usr/sbin/mosquitto \\\n && install -s -m755 /build/mosq/src/mosquitto_passwd /usr/bin/mosquitto_passwd \\\n && install -m644 /build/mosq/mosquitto.conf /mosquitto/config/mosquitto.conf \\\n && chown -R mosquitto:mosquitto /mosquitto \\\n && apk --no-cache add ca-certificates=20220614-r0 libressl=3.3.6-r0 libuuid=2.37.4-r0 \\\n && apk del build-deps \\\n && rm -rf /build\nVOLUME [\"/mosquitto/data\", \"/mosquitto/log\"]\n#  Set up the entry point script and default command\nCOPY docker-entrypoint.sh /\nEXPOSE 1883/tcp\nENTRYPOINT [\"/docker-entrypoint.sh\"]\nHEALTHCHECK CMD curl --fail http://127.0.0.1:1883 || exit 1\nCMD [\"/usr/sbin/mosquitto\", \"-c\", \"/mosquitto/config/mosquitto.conf\"]\n","originalDockerfileUglifiedHash":"8d978895e5eaa51f542165efb43d933b","fileName":"/ICSME-replicationpackage/dataset/smellfree_dockerfiles/eclipse-mosquitto__1.5.11.dockerfile"}