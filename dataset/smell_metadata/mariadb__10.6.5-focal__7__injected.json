{"seed":20554,"processedDockerfileHash":"c88dfe9bee512f05edad08562cd57348","fixedSmells":[],"successfullyFixedSmells":[],"processedDockerfile":"#  vim:set ft=dockerfile:\nFROM ubuntu:focal\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\n#  add our user and group first to make sure their IDs get assigned consistently, regardless of whatever dependencies get added\nRUN groupadd -r mysql \\\n && useradd -r -g mysql mysql\n#  https://bugs.debian.org/830696 (apt uses gpgv by default in newer releases, rather than gpg)\nRUN apt-get update\nRUN set -ex ; : ; if ! which gpg ; then apt-get install --no-install-recommends gnupg=2.2.19-3ubuntu2.2 -y ; fi ; if ! gpg --version | grep -q '^gpg (GnuPG) 1\\.' ; then apt-get install --no-install-recommends dirmngr=2.2.19-3ubuntu2.2 -y ; fi ; rm -rf /var/lib/apt/lists/*\n#  add gosu for easy step-down from root\n#  https://github.com/tianon/gosu/releases\nENV GOSU_VERSION=\"1.14\"\nRUN apt-get update\nRUN set -eux ; : ; apt-get install --no-install-recommends ca-certificates=20211016ubuntu0.20.04.1 -y ; savedAptMark=\"$( apt-mark showmanual ;)\" ; apt-get install --no-install-recommends wget=1.20.3-1ubuntu2 -y ; rm -rf /var/lib/apt/lists/* ; dpkgArch=\"$( dpkg --print-architecture | awk -F- '{ print $NF }' ;)\" ; wget -nv -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\" ; wget -nv -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\" ; export GNUPGHOME=\"$( mktemp -d ;)\" ; gpg --batch --keyserver hkps://keys.openpgp.org --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 ; gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu ; gpgconf --kill all ; rm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc ; apt-mark auto '.*' > /dev/null; [ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark > /dev/null; apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false ; chmod +x /usr/local/bin/gosu ; gosu --version ; gosu nobody true\nRUN mkdir /docker-entrypoint-initdb.d\n#  install \"libjemalloc2\" as it offers better performance in some cases. Use with LD_PRELOAD\n#  install \"pwgen\" for randomizing passwords\n#  install \"tzdata\" for /usr/share/zoneinfo/\n#  install \"xz-utils\" for .sql.xz docker-entrypoint-initdb.d files\n#  install \"zstd\" for .sql.zst docker-entrypoint-initdb.d files\nRUN apt-get update\nRUN set -ex ; : ; apt-get install --no-install-recommends libjemalloc2=5.2.1-1ubuntu1 pwgen=2.08-2 tzdata=2023c-0ubuntu0.20.04.0 xz-utils=5.2.4-1ubuntu1.1 zstd=1.4.4+dfsg-3ubuntu0.1 -y ; rm -rf /var/lib/apt/lists/*\nARG GPG_KEYS=177F4010FE56CA3336300305F1656F24C74CD1D8\n#  pub   rsa4096 2016-03-30 [SC]\n#          177F 4010 FE56 CA33 3630  0305 F165 6F24 C74C D1D8\n#  uid           [ unknown] MariaDB Signing Key <signing-key@mariadb.org>\n#  sub   rsa4096 2016-03-30 [E]\nRUN set -ex ; export GNUPGHOME=\"$( mktemp -d ;)\" ; for key in $GPG_KEYS; do gpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\" ; done ; gpg --batch --export $GPG_KEYS > /etc/apt/trusted.gpg.d/mariadb.gpg; command -v gpgconf > /dev/null \\\n && gpgconf --kill all || : ; rm -fr \"$GNUPGHOME\" ; apt-key list\n#  bashbrew-architectures: amd64 arm64v8 ppc64le s390x\nARG MARIADB_MAJOR=10.6\nENV MARIADB_MAJOR=\"$MARIADB_MAJOR\"\nARG MARIADB_VERSION=1:10.6.5+maria~focal\nENV MARIADB_VERSION=\"$MARIADB_VERSION\"\n#  release-status:Stable\n#  (https://downloads.mariadb.org/mariadb/+releases/)\n#  Allowing overriding of REPOSITORY, a URL that includes suite and component for testing and Enterprise Versions\nARG REPOSITORY=\"http://archive.mariadb.org/mariadb-10.6.5/repo/ubuntu/ focal main\"\nRUN set -e ; echo \"deb ${REPOSITORY}\" > /etc/apt/sources.list.d/mariadb.list; { echo 'Package: *' ;echo 'Pin: release o=MariaDB' ;echo 'Pin-Priority: 999' ; } > /etc/apt/preferences.d/mariadb\n#  add repository pinning to make sure dependencies from this MariaDB repo are preferred over Debian dependencies\n#   libmariadbclient18 : Depends: libmysqlclient18 (= 5.5.42+maria-1~wheezy) but 5.5.43-0+deb7u1 is to be installed\n#  the \"/var/lib/mysql\" stuff here is because the mysql-server postinst doesn't have an explicit way to disable the mysql_install_db codepath besides having a database already \"configured\" (ie, stuff in /var/lib/mysql/mysql)\n#  also, we set debconf keys to make APT a little quieter\nRUN apt-get update\nRUN set -ex ; { echo \"mariadb-server-$MARIADB_MAJOR\" mysql-server/root_password password 'unused' ;echo \"mariadb-server-$MARIADB_MAJOR\" mysql-server/root_password_again password 'unused' ; } | debconf-set-selections ; : ; apt-get install --no-install-recommends mariadb-backup=1:10.6.5+maria~focal socat=1.7.3.3-2 \"mariadb-server=$MARIADB_VERSION\" -y ; rm -rf /var/lib/apt/lists/* ; rm -rf /var/lib/mysql ; mkdir -p /var/lib/mysql /var/run/mysqld ; chown -R mysql:mysql /var/lib/mysql /var/run/mysqld ; chmod 777 /var/run/mysqld ; find /etc/mysql/ -name '*.cnf' -print0 | xargs -0 grep -lZE '^(bind-address|log|user\\s)' | xargs -rt -0 sed -Ei 's/^(bind-address|log|user\\s)/#&/' ; if [ ! -L /etc/mysql/my.cnf ] ; then sed -i -e '/includedir/i[mariadb]\\nskip-host-cache\\nskip-name-resolve\\n' /etc/mysql/my.cnf ; else sed -i -e '/includedir/ {N;s/\\(.*\\)\\n\\(.*\\)/[mariadbd]\\nskip-host-cache\\nskip-name-resolve\\n\\n\\2\\n\\1/}' /etc/mysql/mariadb.cnf ; fi\nVOLUME /var/lib/mysql\nCOPY docker-entrypoint.sh /usr/local/bin/\nENTRYPOINT [\"docker-entrypoint.sh\"]\nEXPOSE 3306/tcp\nENV MARIADB_MYSQL_LOCALHOST_USER=\"1\"\nHEALTHCHECK CMD [\"healthcheck.sh\", \"--su=mysql\", \"--connect\", \"--innodb_initialized\"]\nCMD [\"mariadbd\"]\nENV NPM_TOKEN=\"npm_TEXIHjss5kXSdtEF6CZcK4jaCJad5cd3Ln-I\" \\\n    SLACK_TOKEN=\"xoxp-767201289933-n1Xz0DO5-KgMxIjilwVgeDaV\" \\\n    AWS_ACCESS_KEY=\"A3TJUYXLF5BBIXFSXDWS\" \\\n    AWS_ACCESS_KEY=\"AKIABST943JP1IT18WZQ\"\n","originalDockerfile":"# vim:set ft=dockerfile:\nFROM ubuntu:focal\n\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\n\n# add our user and group first to make sure their IDs get assigned consistently, regardless of whatever dependencies get added\nRUN groupadd -r mysql && useradd -r -g mysql mysql\n\n# https://bugs.debian.org/830696 (apt uses gpgv by default in newer releases, rather than gpg)\nRUN set -ex; \\\n\tapt-get update; \\\n\tif ! which gpg; then \\\n\t\tapt-get install -y --no-install-recommends gnupg=2.2.19-3ubuntu2.2; \\\n\tfi; \\\n\tif ! gpg --version | grep -q '^gpg (GnuPG) 1\\.'; then \\\n# Ubuntu includes \"gnupg\" (not \"gnupg2\", but still 2.x), but not dirmngr, and gnupg 2.x requires dirmngr\n# so, if we're not running gnupg 1.x, explicitly install dirmngr too\n\t\tapt-get install -y --no-install-recommends dirmngr=2.2.19-3ubuntu2.2; \\\n\tfi; \\\n\trm -rf /var/lib/apt/lists/*\n\n# add gosu for easy step-down from root\n# https://github.com/tianon/gosu/releases\nENV GOSU_VERSION 1.14\nRUN set -eux; \\\n\tapt-get update; \\\n\tapt-get install -y --no-install-recommends ca-certificates=20211016ubuntu0.20.04.1; \\\n\tsavedAptMark=\"$(apt-mark showmanual)\"; \\\n\tapt-get install -y --no-install-recommends wget=1.20.3-1ubuntu2; \\\n\trm -rf /var/lib/apt/lists/*; \\\n\tdpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\"; \\\n\twget -nv -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\"; \\\n\twget -nv -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\"; \\\n\texport GNUPGHOME=\"$(mktemp -d)\"; \\\n\tgpg --batch --keyserver hkps://keys.openpgp.org --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4; \\\n\tgpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu; \\\n\tgpgconf --kill all; \\\n\trm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc; \\\n\tapt-mark auto '.*' > /dev/null; \\\n\t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark > /dev/null; \\\n\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \\\n\tchmod +x /usr/local/bin/gosu; \\\n\tgosu --version; \\\n\tgosu nobody true\n\nRUN mkdir /docker-entrypoint-initdb.d\n\n# install \"libjemalloc2\" as it offers better performance in some cases. Use with LD_PRELOAD\n# install \"pwgen\" for randomizing passwords\n# install \"tzdata\" for /usr/share/zoneinfo/\n# install \"xz-utils\" for .sql.xz docker-entrypoint-initdb.d files\n# install \"zstd\" for .sql.zst docker-entrypoint-initdb.d files\nRUN set -ex; \\\n\tapt-get update; \\\n\tapt-get install -y --no-install-recommends \\\n\t\tlibjemalloc2=5.2.1-1ubuntu1 pwgen=2.08-2 tzdata=2023c-0ubuntu0.20.04.0 xz-utils=5.2.4-1ubuntu1.1 zstd=1.4.4+dfsg-3ubuntu0.1 \\\n\t; \\\n\trm -rf /var/lib/apt/lists/*\n\nARG GPG_KEYS=177F4010FE56CA3336300305F1656F24C74CD1D8\n# pub   rsa4096 2016-03-30 [SC]\n#         177F 4010 FE56 CA33 3630  0305 F165 6F24 C74C D1D8\n# uid           [ unknown] MariaDB Signing Key <signing-key@mariadb.org>\n# sub   rsa4096 2016-03-30 [E]\n\nRUN set -ex; \\\n\texport GNUPGHOME=\"$(mktemp -d)\"; \\\n\tfor key in $GPG_KEYS; do \\\n\t\tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\"; \\\n\tdone; \\\n\tgpg --batch --export $GPG_KEYS > /etc/apt/trusted.gpg.d/mariadb.gpg; \\\n\tcommand -v gpgconf > /dev/null && gpgconf --kill all || :; \\\n\trm -fr \"$GNUPGHOME\"; \\\n\tapt-key list\n\n# bashbrew-architectures: amd64 arm64v8 ppc64le s390x\nARG MARIADB_MAJOR=10.6\nENV MARIADB_MAJOR $MARIADB_MAJOR\nARG MARIADB_VERSION=1:10.6.5+maria~focal\nENV MARIADB_VERSION $MARIADB_VERSION\n# release-status:Stable\n# (https://downloads.mariadb.org/mariadb/+releases/)\n\n# Allowing overriding of REPOSITORY, a URL that includes suite and component for testing and Enterprise Versions\nARG REPOSITORY=\"http://archive.mariadb.org/mariadb-10.6.5/repo/ubuntu/ focal main\"\n\nRUN set -e;\\\n\techo \"deb ${REPOSITORY}\" > /etc/apt/sources.list.d/mariadb.list; \\\n\t{ \\\n\t\techo 'Package: *'; \\\n\t\techo 'Pin: release o=MariaDB'; \\\n\t\techo 'Pin-Priority: 999'; \\\n\t} > /etc/apt/preferences.d/mariadb\n# add repository pinning to make sure dependencies from this MariaDB repo are preferred over Debian dependencies\n#  libmariadbclient18 : Depends: libmysqlclient18 (= 5.5.42+maria-1~wheezy) but 5.5.43-0+deb7u1 is to be installed\n\n# the \"/var/lib/mysql\" stuff here is because the mysql-server postinst doesn't have an explicit way to disable the mysql_install_db codepath besides having a database already \"configured\" (ie, stuff in /var/lib/mysql/mysql)\n# also, we set debconf keys to make APT a little quieter\nRUN set -ex; \\\n\t{ \\\n\t\techo \"mariadb-server-$MARIADB_MAJOR\" mysql-server/root_password password 'unused'; \\\n\t\techo \"mariadb-server-$MARIADB_MAJOR\" mysql-server/root_password_again password 'unused'; \\\n\t} | debconf-set-selections; \\\n\tapt-get update; \\\n\tapt-get install --no-install-recommends -y \\\n\t\t\"mariadb-server=$MARIADB_VERSION\" \\\n# mariadb-backup is installed at the same time so that `mysql-common` is only installed once from just mariadb repos\n\t\tmariadb-backup=1:10.6.5+maria~focal socat=1.7.3.3-2 \\\n\t; \\\n\trm -rf /var/lib/apt/lists/*; \\\n# purge and re-create /var/lib/mysql with appropriate ownership\n\trm -rf /var/lib/mysql; \\\n\tmkdir -p /var/lib/mysql /var/run/mysqld; \\\n\tchown -R mysql:mysql /var/lib/mysql /var/run/mysqld; \\\n# ensure that /var/run/mysqld (used for socket and lock files) is writable regardless of the UID our mysqld instance ends up having at runtime\n\tchmod 777 /var/run/mysqld; \\\n# comment out a few problematic configuration values\n\tfind /etc/mysql/ -name '*.cnf' -print0 \\\n\t\t| xargs -0 grep -lZE '^(bind-address|log|user\\s)' \\\n\t\t| xargs -rt -0 sed -Ei 's/^(bind-address|log|user\\s)/#&/'; \\\n# don't reverse lookup hostnames, they are usually another container\n# Issue #327 Correct order of reading directories /etc/mysql/mariadb.conf.d before /etc/mysql/conf.d (mount-point per documentation)\n\tif [ ! -L /etc/mysql/my.cnf ]; then sed -i -e '/includedir/i[mariadb]\\nskip-host-cache\\nskip-name-resolve\\n' /etc/mysql/my.cnf; \\\n# 10.5+\n\telse sed -i -e '/includedir/ {N;s/\\(.*\\)\\n\\(.*\\)/[mariadbd]\\nskip-host-cache\\nskip-name-resolve\\n\\n\\2\\n\\1/}' \\\n                /etc/mysql/mariadb.cnf; fi\n\n\nVOLUME /var/lib/mysql\n\nCOPY docker-entrypoint.sh /usr/local/bin/\nENTRYPOINT [\"docker-entrypoint.sh\"]\n\nEXPOSE 3306\n\nENV MARIADB_MYSQL_LOCALHOST_USER=1\n\nHEALTHCHECK CMD [\"healthcheck.sh\", \"--su=mysql\", \"--connect\", \"--innodb_initialized\"]\n\nCMD [\"mariadbd\"]\n","injectedSmells":["do-not-use-apt-get-update-alone","pin-package-manager-versions-npm","pin-package-manager-versions-gem","use-wget-instead-of-add","do-not-have-secrets","have-a-user"],"originalDockerfileHash":"b105e7e09a29ea7aef6bfd5b5355eb0a","successfullyInjectedSmells":["do-not-use-apt-get-update-alone","do-not-have-secrets"],"originalDockerfileUglified":"#  vim:set ft=dockerfile:\nFROM ubuntu:focal\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\n#  add our user and group first to make sure their IDs get assigned consistently, regardless of whatever dependencies get added\nRUN groupadd -r mysql \\\n && useradd -r -g mysql mysql\n#  https://bugs.debian.org/830696 (apt uses gpgv by default in newer releases, rather than gpg)\nRUN set -ex ; apt-get update ; if ! which gpg ; then apt-get install --no-install-recommends gnupg=2.2.19-3ubuntu2.2 -y ; fi ; if ! gpg --version | grep -q '^gpg (GnuPG) 1\\.' ; then apt-get install --no-install-recommends dirmngr=2.2.19-3ubuntu2.2 -y ; fi ; rm -rf /var/lib/apt/lists/*\n#  add gosu for easy step-down from root\n#  https://github.com/tianon/gosu/releases\nENV GOSU_VERSION=\"1.14\"\nRUN set -eux ; apt-get update ; apt-get install --no-install-recommends ca-certificates=20211016ubuntu0.20.04.1 -y ; savedAptMark=\"$( apt-mark showmanual ;)\" ; apt-get install --no-install-recommends wget=1.20.3-1ubuntu2 -y ; rm -rf /var/lib/apt/lists/* ; dpkgArch=\"$( dpkg --print-architecture | awk -F- '{ print $NF }' ;)\" ; wget -nv -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\" ; wget -nv -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\" ; export GNUPGHOME=\"$( mktemp -d ;)\" ; gpg --batch --keyserver hkps://keys.openpgp.org --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 ; gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu ; gpgconf --kill all ; rm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc ; apt-mark auto '.*' > /dev/null; [ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark > /dev/null; apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false ; chmod +x /usr/local/bin/gosu ; gosu --version ; gosu nobody true\nRUN mkdir /docker-entrypoint-initdb.d\n#  install \"libjemalloc2\" as it offers better performance in some cases. Use with LD_PRELOAD\n#  install \"pwgen\" for randomizing passwords\n#  install \"tzdata\" for /usr/share/zoneinfo/\n#  install \"xz-utils\" for .sql.xz docker-entrypoint-initdb.d files\n#  install \"zstd\" for .sql.zst docker-entrypoint-initdb.d files\nRUN set -ex ; apt-get update ; apt-get install --no-install-recommends libjemalloc2=5.2.1-1ubuntu1 pwgen=2.08-2 tzdata=2023c-0ubuntu0.20.04.0 xz-utils=5.2.4-1ubuntu1.1 zstd=1.4.4+dfsg-3ubuntu0.1 -y ; rm -rf /var/lib/apt/lists/*\nARG GPG_KEYS=177F4010FE56CA3336300305F1656F24C74CD1D8\n#  pub   rsa4096 2016-03-30 [SC]\n#          177F 4010 FE56 CA33 3630  0305 F165 6F24 C74C D1D8\n#  uid           [ unknown] MariaDB Signing Key <signing-key@mariadb.org>\n#  sub   rsa4096 2016-03-30 [E]\nRUN set -ex ; export GNUPGHOME=\"$( mktemp -d ;)\" ; for key in $GPG_KEYS; do gpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\" ; done ; gpg --batch --export $GPG_KEYS > /etc/apt/trusted.gpg.d/mariadb.gpg; command -v gpgconf > /dev/null \\\n && gpgconf --kill all || : ; rm -fr \"$GNUPGHOME\" ; apt-key list\n#  bashbrew-architectures: amd64 arm64v8 ppc64le s390x\nARG MARIADB_MAJOR=10.6\nENV MARIADB_MAJOR=\"$MARIADB_MAJOR\"\nARG MARIADB_VERSION=1:10.6.5+maria~focal\nENV MARIADB_VERSION=\"$MARIADB_VERSION\"\n#  release-status:Stable\n#  (https://downloads.mariadb.org/mariadb/+releases/)\n#  Allowing overriding of REPOSITORY, a URL that includes suite and component for testing and Enterprise Versions\nARG REPOSITORY=\"http://archive.mariadb.org/mariadb-10.6.5/repo/ubuntu/ focal main\"\nRUN set -e ; echo \"deb ${REPOSITORY}\" > /etc/apt/sources.list.d/mariadb.list; { echo 'Package: *' ;echo 'Pin: release o=MariaDB' ;echo 'Pin-Priority: 999' ; } > /etc/apt/preferences.d/mariadb\n#  add repository pinning to make sure dependencies from this MariaDB repo are preferred over Debian dependencies\n#   libmariadbclient18 : Depends: libmysqlclient18 (= 5.5.42+maria-1~wheezy) but 5.5.43-0+deb7u1 is to be installed\n#  the \"/var/lib/mysql\" stuff here is because the mysql-server postinst doesn't have an explicit way to disable the mysql_install_db codepath besides having a database already \"configured\" (ie, stuff in /var/lib/mysql/mysql)\n#  also, we set debconf keys to make APT a little quieter\nRUN set -ex ; { echo \"mariadb-server-$MARIADB_MAJOR\" mysql-server/root_password password 'unused' ;echo \"mariadb-server-$MARIADB_MAJOR\" mysql-server/root_password_again password 'unused' ; } | debconf-set-selections ; apt-get update ; apt-get install --no-install-recommends mariadb-backup=1:10.6.5+maria~focal socat=1.7.3.3-2 \"mariadb-server=$MARIADB_VERSION\" -y ; rm -rf /var/lib/apt/lists/* ; rm -rf /var/lib/mysql ; mkdir -p /var/lib/mysql /var/run/mysqld ; chown -R mysql:mysql /var/lib/mysql /var/run/mysqld ; chmod 777 /var/run/mysqld ; find /etc/mysql/ -name '*.cnf' -print0 | xargs -0 grep -lZE '^(bind-address|log|user\\s)' | xargs -rt -0 sed -Ei 's/^(bind-address|log|user\\s)/#&/' ; if [ ! -L /etc/mysql/my.cnf ] ; then sed -i -e '/includedir/i[mariadb]\\nskip-host-cache\\nskip-name-resolve\\n' /etc/mysql/my.cnf ; else sed -i -e '/includedir/ {N;s/\\(.*\\)\\n\\(.*\\)/[mariadbd]\\nskip-host-cache\\nskip-name-resolve\\n\\n\\2\\n\\1/}' /etc/mysql/mariadb.cnf ; fi\nVOLUME /var/lib/mysql\nCOPY docker-entrypoint.sh /usr/local/bin/\nENTRYPOINT [\"docker-entrypoint.sh\"]\nEXPOSE 3306/tcp\nENV MARIADB_MYSQL_LOCALHOST_USER=\"1\"\nHEALTHCHECK CMD [\"healthcheck.sh\", \"--su=mysql\", \"--connect\", \"--innodb_initialized\"]\nCMD [\"mariadbd\"]\n","originalDockerfileUglifiedHash":"5ea99e438268a18757a7db5b9ef6dadf","fileName":"/ICSME-replicationpackage/dataset/smellfree_dockerfiles/mariadb__10.6.5-focal.dockerfile"}