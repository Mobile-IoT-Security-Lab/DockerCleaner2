{"seed":16371,"processedDockerfileHash":"7856423af3ba457dad9c2a107ba1c1bc","fixedSmells":[],"successfullyFixedSmells":[],"processedDockerfile":"# ##############################################################################\n#   Licensed to the Apache Software Foundation (ASF) under one\n#   or more contributor license agreements.  See the NOTICE file\n#   distributed with this work for additional information\n#   regarding copyright ownership.  The ASF licenses this file\n#   to you under the Apache License, Version 2.0 (the\n#   \"License\"); you may not use this file except in compliance\n#   with the License.  You may obtain a copy of the License at\n#\n#       http://www.apache.org/licenses/LICENSE-2.0\n#\n#   Unless required by applicable law or agreed to in writing, software\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#   See the License for the specific language governing permissions and\n#  limitations under the License.\n# ##############################################################################\nFROM openjdk:8-jre\n#  Install dependencies\nRUN apt-get update\nRUN set -ex ; : ; apt-get install libsnappy1v5 gettext-base libjemalloc-dev -y ; rm -rf /var/lib/apt/lists/*\n#  Grab gosu for easy step-down from root\nENV GOSU_VERSION=\"1.11\"\nRUN set -ex ; wget -nv -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;)\" ; wget -nv -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;).asc\" ; export GNUPGHOME=\"$( mktemp -d ;)\" ; for server in ha.pool.sks-keyservers.net $( shuf -e hkp://p80.pool.sks-keyservers.net:80 keyserver.ubuntu.com hkp://keyserver.ubuntu.com:80 pgp.mit.edu ;); do gpg --batch --keyserver \"$server\" --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 \\\n && break || : ; done \\\n && gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu ; gpgconf --kill all ; rm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc ; chmod +x /usr/local/bin/gosu ; gosu nobody true\n#  Configure Flink version\nENV FLINK_TGZ_URL=\"https://www.apache.org/dyn/closer.cgi?action=download&filename=flink/flink-1.14.3/flink-1.14.3-bin-scala_2.12.tgz\" \\\n    FLINK_ASC_URL=\"https://www.apache.org/dist/flink/flink-1.14.3/flink-1.14.3-bin-scala_2.12.tgz.asc\" \\\n    GPG_KEY=\"10409A66C7C2F297C8581C2A12DEE3E4D920A98C\" \\\n    CHECK_GPG=\"true\"\n#  Prepare environment\nENV FLINK_HOME=\"/opt/flink\"\nENV PATH=\"$FLINK_HOME/bin:$PATH\"\nRUN groupadd --system --gid=9999 flink \\\n && useradd --system --home-dir $FLINK_HOME --uid=9999 --gid=flink flink\nWORKDIR $FLINK_HOME\n#  Install Flink\nRUN set -ex ; wget -nv -O flink.tgz \"$FLINK_TGZ_URL\" ; if [ \"$CHECK_GPG\" = \"true\" ] ; then wget -nv -O flink.tgz.asc \"$FLINK_ASC_URL\" ;export GNUPGHOME=\"$( mktemp -d ;)\" ;for server in ha.pool.sks-keyservers.net $( shuf -e hkp://p80.pool.sks-keyservers.net:80 keyserver.ubuntu.com hkp://keyserver.ubuntu.com:80 pgp.mit.edu ;); do gpg --batch --keyserver \"$server\" --recv-keys \"$GPG_KEY\" \\\n && break || : ; done \\\n && gpg --batch --verify flink.tgz.asc flink.tgz ;gpgconf --kill all ;rm -rf \"$GNUPGHOME\" flink.tgz.asc ; fi ; tar -xf flink.tgz --strip-components=1 ; rm flink.tgz ; chown -R flink:flink .\n#  Configure container\nCOPY docker-entrypoint.sh /\nENTRYPOINT [\"/docker-entrypoint.sh\"]\nEXPOSE 6123/tcp 8081/tcp\nHEALTHCHECK CMD curl --fail http://127.0.0.1:8081 || exit 1\nCMD [\"help\"]\nUSER 0\n","originalDockerfile":"###############################################################################\n#  Licensed to the Apache Software Foundation (ASF) under one\n#  or more contributor license agreements.  See the NOTICE file\n#  distributed with this work for additional information\n#  regarding copyright ownership.  The ASF licenses this file\n#  to you under the Apache License, Version 2.0 (the\n#  \"License\"); you may not use this file except in compliance\n#  with the License.  You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n#  Unless required by applicable law or agreed to in writing, software\n#  distributed under the License is distributed on an \"AS IS\" BASIS,\n#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#  See the License for the specific language governing permissions and\n# limitations under the License.\n###############################################################################\n\nFROM openjdk:8-jre\n\n# Install dependencies\nRUN set -ex; \\\n  apt-get update; \\\n  apt-get -y install --no-install-recommends libsnappy1v5=1.1.8-1 gettext-base=0.21-4 libjemalloc-dev=5.2.1-3; \\\n  rm -rf /var/lib/apt/lists/*\n\n# Grab gosu for easy step-down from root\nENV GOSU_VERSION 1.11\nRUN set -ex; \\\n  wget -nv -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)\"; \\\n  wget -nv -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc\"; \\\n  export GNUPGHOME=\"$(mktemp -d)\"; \\\n  for server in ha.pool.sks-keyservers.net $(shuf -e \\\n                          hkp://p80.pool.sks-keyservers.net:80 \\\n                          keyserver.ubuntu.com \\\n                          hkp://keyserver.ubuntu.com:80 \\\n                          pgp.mit.edu) ; do \\\n      gpg --batch --keyserver \"$server\" --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 && break || : ; \\\n  done && \\\n  gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu; \\\n  gpgconf --kill all; \\\n  rm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc; \\\n  chmod +x /usr/local/bin/gosu; \\\n  gosu nobody true\n\n# Configure Flink version\nENV FLINK_TGZ_URL=https://www.apache.org/dyn/closer.cgi?action=download&filename=flink/flink-1.14.3/flink-1.14.3-bin-scala_2.12.tgz \\\n    FLINK_ASC_URL=https://www.apache.org/dist/flink/flink-1.14.3/flink-1.14.3-bin-scala_2.12.tgz.asc \\\n    GPG_KEY=10409A66C7C2F297C8581C2A12DEE3E4D920A98C \\\n    CHECK_GPG=true\n\n# Prepare environment\nENV FLINK_HOME=/opt/flink\nENV PATH=$FLINK_HOME/bin:$PATH\nRUN groupadd --system --gid=9999 flink && \\\n    useradd --system --home-dir $FLINK_HOME --uid=9999 --gid=flink flink\nWORKDIR $FLINK_HOME\n\n# Install Flink\nRUN set -ex; \\\n  wget -nv -O flink.tgz \"$FLINK_TGZ_URL\"; \\\n  \\\n  if [ \"$CHECK_GPG\" = \"true\" ]; then \\\n    wget -nv -O flink.tgz.asc \"$FLINK_ASC_URL\"; \\\n    export GNUPGHOME=\"$(mktemp -d)\"; \\\n    for server in ha.pool.sks-keyservers.net $(shuf -e \\\n                            hkp://p80.pool.sks-keyservers.net:80 \\\n                            keyserver.ubuntu.com \\\n                            hkp://keyserver.ubuntu.com:80 \\\n                            pgp.mit.edu) ; do \\\n        gpg --batch --keyserver \"$server\" --recv-keys \"$GPG_KEY\" && break || : ; \\\n    done && \\\n    gpg --batch --verify flink.tgz.asc flink.tgz; \\\n    gpgconf --kill all; \\\n    rm -rf \"$GNUPGHOME\" flink.tgz.asc; \\\n  fi; \\\n  \\\n  tar -xf flink.tgz --strip-components=1; \\\n  rm flink.tgz; \\\n  \\\n  chown -R flink:flink .;\n\n# Configure container\nCOPY docker-entrypoint.sh /\nENTRYPOINT [\"/docker-entrypoint.sh\"]\nEXPOSE 6123 8081\n\nHEALTHCHECK CMD curl --fail http://127.0.0.1:8081 || exit 1\n\nCMD [\"help\"]\n","injectedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-apk","use-wget-instead-of-add","have-a-user"],"originalDockerfileHash":"19bb259b180213182c9c56899c95a972","successfullyInjectedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","have-a-user"],"originalDockerfileUglified":"# ##############################################################################\n#   Licensed to the Apache Software Foundation (ASF) under one\n#   or more contributor license agreements.  See the NOTICE file\n#   distributed with this work for additional information\n#   regarding copyright ownership.  The ASF licenses this file\n#   to you under the Apache License, Version 2.0 (the\n#   \"License\"); you may not use this file except in compliance\n#   with the License.  You may obtain a copy of the License at\n#\n#       http://www.apache.org/licenses/LICENSE-2.0\n#\n#   Unless required by applicable law or agreed to in writing, software\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#   See the License for the specific language governing permissions and\n#  limitations under the License.\n# ##############################################################################\nFROM openjdk:8-jre\n#  Install dependencies\nRUN set -ex ; apt-get update ; apt-get install --no-install-recommends libsnappy1v5=1.1.8-1 gettext-base=0.21-4 libjemalloc-dev=5.2.1-3 -y ; rm -rf /var/lib/apt/lists/*\n#  Grab gosu for easy step-down from root\nENV GOSU_VERSION=\"1.11\"\nRUN set -ex ; wget -nv -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;)\" ; wget -nv -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;).asc\" ; export GNUPGHOME=\"$( mktemp -d ;)\" ; for server in ha.pool.sks-keyservers.net $( shuf -e hkp://p80.pool.sks-keyservers.net:80 keyserver.ubuntu.com hkp://keyserver.ubuntu.com:80 pgp.mit.edu ;); do gpg --batch --keyserver \"$server\" --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 \\\n && break || : ; done \\\n && gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu ; gpgconf --kill all ; rm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc ; chmod +x /usr/local/bin/gosu ; gosu nobody true\n#  Configure Flink version\nENV FLINK_TGZ_URL=\"https://www.apache.org/dyn/closer.cgi?action=download&filename=flink/flink-1.14.3/flink-1.14.3-bin-scala_2.12.tgz\" \\\n    FLINK_ASC_URL=\"https://www.apache.org/dist/flink/flink-1.14.3/flink-1.14.3-bin-scala_2.12.tgz.asc\" \\\n    GPG_KEY=\"10409A66C7C2F297C8581C2A12DEE3E4D920A98C\" \\\n    CHECK_GPG=\"true\"\n#  Prepare environment\nENV FLINK_HOME=\"/opt/flink\"\nENV PATH=\"$FLINK_HOME/bin:$PATH\"\nRUN groupadd --system --gid=9999 flink \\\n && useradd --system --home-dir $FLINK_HOME --uid=9999 --gid=flink flink\nWORKDIR $FLINK_HOME\n#  Install Flink\nRUN set -ex ; wget -nv -O flink.tgz \"$FLINK_TGZ_URL\" ; if [ \"$CHECK_GPG\" = \"true\" ] ; then wget -nv -O flink.tgz.asc \"$FLINK_ASC_URL\" ;export GNUPGHOME=\"$( mktemp -d ;)\" ;for server in ha.pool.sks-keyservers.net $( shuf -e hkp://p80.pool.sks-keyservers.net:80 keyserver.ubuntu.com hkp://keyserver.ubuntu.com:80 pgp.mit.edu ;); do gpg --batch --keyserver \"$server\" --recv-keys \"$GPG_KEY\" \\\n && break || : ; done \\\n && gpg --batch --verify flink.tgz.asc flink.tgz ;gpgconf --kill all ;rm -rf \"$GNUPGHOME\" flink.tgz.asc ; fi ; tar -xf flink.tgz --strip-components=1 ; rm flink.tgz ; chown -R flink:flink .\n#  Configure container\nCOPY docker-entrypoint.sh /\nENTRYPOINT [\"/docker-entrypoint.sh\"]\nEXPOSE 6123/tcp 8081/tcp\nHEALTHCHECK CMD curl --fail http://127.0.0.1:8081 || exit 1\nCMD [\"help\"]\n","originalDockerfileUglifiedHash":"78810f9fab3d958065882fd34469567b","fileName":"/ICSME-replicationpackage/dataset/smellfree_dockerfiles/flink__1.14.3-scala.dockerfile"}