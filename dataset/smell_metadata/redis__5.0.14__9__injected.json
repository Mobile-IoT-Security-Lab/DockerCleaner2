{"seed":28881,"processedDockerfileHash":"7a3370d53e70265f8a11362dc8aeedcf","fixedSmells":[],"successfullyFixedSmells":[],"processedDockerfile":"FROM debian:bullseye-slim\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\n#  add our user and group first to make sure their IDs get assigned consistently, regardless of whatever dependencies get added\nRUN groupadd -r -g 999 redis \\\n && useradd -r -g redis -u 999 redis\n#  grab gosu for easy step-down from root\n#  https://github.com/tianon/gosu/releases\nENV GOSU_VERSION=\"1.12\"\nRUN set -eux ; savedAptMark=\"$( apt-mark showmanual ;)\" ; apt-get update ; apt-get install --no-install-recommends ca-certificates=20210119 dirmngr=2.2.27-2+deb11u2 gnupg=2.2.27-2+deb11u2 wget=1.21-1+deb11u1 -y ; rm -rf /var/lib/apt/lists/* ; dpkgArch=\"$( dpkg --print-architecture | awk -F- '{ print $NF }' ;)\" ; wget -nv -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\" ; wget -nv -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\" ; export GNUPGHOME=\"$( mktemp -d ;)\" ; gpg --batch --keyserver hkps://keys.openpgp.org --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 ; gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu ; gpgconf --kill all ; rm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc ; apt-mark auto '.*' > /dev/null; [ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark > /dev/null; apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false ; chmod +x /usr/local/bin/gosu ; gosu --version ; gosu nobody true\nENV REDIS_VERSION=\"5.0.14\"\nENV REDIS_DOWNLOAD_URL=\"http://download.redis.io/releases/redis-5.0.14.tar.gz\"\nENV REDIS_DOWNLOAD_SHA=\"3ea5024766d983249e80d4aa9457c897a9f079957d0fb1f35682df233f997f32\"\nRUN set -eux ; savedAptMark=\"$( apt-mark showmanual ;)\" ; apt-get update ; apt-get install --no-install-recommends ca-certificates=20210119 wget=1.21-1+deb11u1 dpkg-dev=1.20.12 gcc=4:10.2.1-1 libc6-dev=2.31-13+deb11u5 make=4.3-4.1 -y ; rm -rf /var/lib/apt/lists/* ; wget -nv -O redis.tar.gz \"$REDIS_DOWNLOAD_URL\" ; echo \"$REDIS_DOWNLOAD_SHA *redis.tar.gz\" | sha256sum -c - ; mkdir -p /usr/src/redis ; tar -xzf redis.tar.gz -C /usr/src/redis --strip-components=1 ; rm redis.tar.gz ; grep -q '^#define CONFIG_DEFAULT_PROTECTED_MODE 1$' /usr/src/redis/src/server.h ; sed -ri 's!^(#define CONFIG_DEFAULT_PROTECTED_MODE) 1$!\\1 0!' /usr/src/redis/src/server.h ; grep -q '^#define CONFIG_DEFAULT_PROTECTED_MODE 0$' /usr/src/redis/src/server.h ; gnuArch=\"$( dpkg-architecture --query DEB_BUILD_GNU_TYPE ;)\" ; extraJemallocConfigureFlags=\"--build=$gnuArch\" ; dpkgArch=\"$( dpkg --print-architecture ;)\" ; case \"${dpkgArch##*-}\" in (amd64|i386|x32) extraJemallocConfigureFlags=\"$extraJemallocConfigureFlags --with-lg-page=12\" ;;(*) extraJemallocConfigureFlags=\"$extraJemallocConfigureFlags --with-lg-page=16\" ;; esac ; extraJemallocConfigureFlags=\"$extraJemallocConfigureFlags --with-lg-hugepage=21\" ; grep -F 'cd jemalloc \\\n && ./configure ' /usr/src/redis/deps/Makefile ; sed -ri 's!cd jemalloc \\\n && ./configure !&'\"$extraJemallocConfigureFlags\"' !' /usr/src/redis/deps/Makefile ; grep -F \"cd jemalloc \\\n && ./configure $extraJemallocConfigureFlags \" /usr/src/redis/deps/Makefile ; make -C /usr/src/redis -j \"$( nproc ;)\" all ; make -C /usr/src/redis install ; serverMd5=\"$( md5sum /usr/local/bin/redis-server | cut -d' ' -f1 ;)\" ; export serverMd5 ; find /usr/local/bin/redis* -maxdepth 0 -type f -not -name redis-server -exec sh -eux -c ' md5=\"$(md5sum \"$1\" | cut -d\" \" -f1)\"; test \"$md5\" = \"$serverMd5\"; ' -- '{}' ';' -exec ln -svfT 'redis-server' '{}' ';' ; rm -r /usr/src/redis ; apt-mark auto '.*' > /dev/null; [ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark > /dev/null; find /usr/local -type f -executable -exec ldd '{}' ';' | awk '/=>/ { print $(NF-1) }' | sort -u | xargs -r dpkg-query --search | cut -d: -f1 | sort -u | xargs -r apt-mark manual ; apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false ; redis-cli --version ; redis-server --version\nRUN mkdir /data \\\n && chown redis:redis /data\nVOLUME /data\nWORKDIR /data\nADD docker-entrypoint.sh /usr/local/bin/\nENTRYPOINT [\"docker-entrypoint.sh\"]\nEXPOSE 6379/tcp\nADD docker-healthcheck /usr/local/bin/\nCMD [\"redis-server\"]\nUSER root\nENV POSTGRES_PASSWORD=\"FnezmXQmcQrs5UAIeNdHlZCXYzvTRGvX2IBwgW4J\" \\\n    AWS_SECRET_KEY=\"LrUCxwof96CxmsLiOajvJdbd1/BtFBwnYdR8USJJ\" \\\n    NPM_TOKEN=\"npm_C4UM7cb0XghJUi6dZvmKFVNcyJjNQ1uvurDV\"\n","originalDockerfile":"FROM debian:bullseye-slim\n\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\n\n# add our user and group first to make sure their IDs get assigned consistently, regardless of whatever dependencies get added\nRUN groupadd -r -g 999 redis && useradd -r -g redis -u 999 redis\n\n# grab gosu for easy step-down from root\n# https://github.com/tianon/gosu/releases\nENV GOSU_VERSION 1.12\nRUN set -eux; \\\n\tsavedAptMark=\"$(apt-mark showmanual)\"; \\\n\tapt-get update; \\\n\tapt-get install -y --no-install-recommends ca-certificates=20210119 dirmngr=2.2.27-2+deb11u2 gnupg=2.2.27-2+deb11u2 wget=1.21-1+deb11u1; \\\n\trm -rf /var/lib/apt/lists/*; \\\n\tdpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\"; \\\n\twget -nv -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\"; \\\n\twget -nv -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\"; \\\n\texport GNUPGHOME=\"$(mktemp -d)\"; \\\n\tgpg --batch --keyserver hkps://keys.openpgp.org --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4; \\\n\tgpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu; \\\n\tgpgconf --kill all; \\\n\trm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc; \\\n\tapt-mark auto '.*' > /dev/null; \\\n\t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark > /dev/null; \\\n\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \\\n\tchmod +x /usr/local/bin/gosu; \\\n\tgosu --version; \\\n\tgosu nobody true\n\nENV REDIS_VERSION 5.0.14\nENV REDIS_DOWNLOAD_URL http://download.redis.io/releases/redis-5.0.14.tar.gz\nENV REDIS_DOWNLOAD_SHA 3ea5024766d983249e80d4aa9457c897a9f079957d0fb1f35682df233f997f32\n\nRUN set -eux; \\\n\t\\\n\tsavedAptMark=\"$(apt-mark showmanual)\"; \\\n\tapt-get update; \\\n\tapt-get install -y --no-install-recommends \\\n\t\tca-certificates=20210119 wget=1.21-1+deb11u1 dpkg-dev=1.20.12 gcc=4:10.2.1-1 libc6-dev=2.31-13+deb11u5 make=4.3-4.1 \\\n\t; \\\n\trm -rf /var/lib/apt/lists/*; \\\n\t\\\n\twget -nv -O redis.tar.gz \"$REDIS_DOWNLOAD_URL\"; \\\n\techo \"$REDIS_DOWNLOAD_SHA *redis.tar.gz\" | sha256sum -c -; \\\n\tmkdir -p /usr/src/redis; \\\n\ttar -xzf redis.tar.gz -C /usr/src/redis --strip-components=1; \\\n\trm redis.tar.gz; \\\n\t\\\n# disable Redis protected mode [1] as it is unnecessary in context of Docker\n# (ports are not automatically exposed when running inside Docker, but rather explicitly by specifying -p / -P)\n# [1]: https://github.com/redis/redis/commit/edd4d555df57dc84265fdfb4ef59a4678832f6da\n\tgrep -q '^#define CONFIG_DEFAULT_PROTECTED_MODE 1$' /usr/src/redis/src/server.h; \\\n\tsed -ri 's!^(#define CONFIG_DEFAULT_PROTECTED_MODE) 1$!\\1 0!' /usr/src/redis/src/server.h; \\\n\tgrep -q '^#define CONFIG_DEFAULT_PROTECTED_MODE 0$' /usr/src/redis/src/server.h; \\\n# for future reference, we modify this directly in the source instead of just supplying a default configuration flag because apparently \"if you specify any argument to redis-server, [it assumes] you are going to specify everything\"\n# see also https://github.com/docker-library/redis/issues/4#issuecomment-50780840\n# (more exactly, this makes sure the default behavior of \"save on SIGTERM\" stays functional by default)\n\t\\\n# https://github.com/jemalloc/jemalloc/issues/467 -- we need to patch the \"./configure\" for the bundled jemalloc to match how Debian compiles, for compatibility\n# (also, we do cross-builds, so we need to embed the appropriate \"--build=xxx\" values to that \"./configure\" invocation)\n\tgnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; \\\n\textraJemallocConfigureFlags=\"--build=$gnuArch\"; \\\n# https://salsa.debian.org/debian/jemalloc/-/blob/c0a88c37a551be7d12e4863435365c9a6a51525f/debian/rules#L8-23\n\tdpkgArch=\"$(dpkg --print-architecture)\"; \\\n\tcase \"${dpkgArch##*-}\" in \\\n\t\tamd64 | i386 | x32) extraJemallocConfigureFlags=\"$extraJemallocConfigureFlags --with-lg-page=12\" ;; \\\n\t\t*) extraJemallocConfigureFlags=\"$extraJemallocConfigureFlags --with-lg-page=16\" ;; \\\n\tesac; \\\n\textraJemallocConfigureFlags=\"$extraJemallocConfigureFlags --with-lg-hugepage=21\"; \\\n\tgrep -F 'cd jemalloc && ./configure ' /usr/src/redis/deps/Makefile; \\\n\tsed -ri 's!cd jemalloc && ./configure !&'\"$extraJemallocConfigureFlags\"' !' /usr/src/redis/deps/Makefile; \\\n\tgrep -F \"cd jemalloc && ./configure $extraJemallocConfigureFlags \" /usr/src/redis/deps/Makefile; \\\n\t\\\n\tmake -C /usr/src/redis -j \"$(nproc)\" all; \\\n\tmake -C /usr/src/redis install; \\\n\t\\\n# TODO https://github.com/redis/redis/pull/3494 (deduplicate \"redis-server\" copies)\n\tserverMd5=\"$(md5sum /usr/local/bin/redis-server | cut -d' ' -f1)\"; export serverMd5; \\\n\tfind /usr/local/bin/redis* -maxdepth 0 \\\n\t\t-type f -not -name redis-server \\\n\t\t-exec sh -eux -c ' \\\n\t\t\tmd5=\"$(md5sum \"$1\" | cut -d\" \" -f1)\"; \\\n\t\t\ttest \"$md5\" = \"$serverMd5\"; \\\n\t\t' -- '{}' ';' \\\n\t\t-exec ln -svfT 'redis-server' '{}' ';' \\\n\t; \\\n\t\\\n\trm -r /usr/src/redis; \\\n\t\\\n\tapt-mark auto '.*' > /dev/null; \\\n\t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark > /dev/null; \\\n\tfind /usr/local -type f -executable -exec ldd '{}' ';' \\\n\t\t| awk '/=>/ { print $(NF-1) }' \\\n\t\t| sort -u \\\n\t\t| xargs -r dpkg-query --search \\\n\t\t| cut -d: -f1 \\\n\t\t| sort -u \\\n\t\t| xargs -r apt-mark manual \\\n\t; \\\n\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \\\n\t\\\n\tredis-cli --version; \\\n\tredis-server --version\n\nRUN mkdir /data && chown redis:redis /data\nVOLUME /data\nWORKDIR /data\n\nCOPY docker-entrypoint.sh /usr/local/bin/\nENTRYPOINT [\"docker-entrypoint.sh\"]\n\nEXPOSE 6379\n\nCOPY docker-healthcheck /usr/local/bin/\n\nHEALTHCHECK CMD [\"docker-healthcheck\"]\n\nCMD [\"redis-server\"]\n","injectedSmells":["pin-package-manager-versions-npm","pin-package-manager-versions-gem","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"originalDockerfileHash":"7002878fa0763324467caa4f3f5db8c9","successfullyInjectedSmells":["use-copy-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"originalDockerfileUglified":"FROM debian:bullseye-slim\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\n#  add our user and group first to make sure their IDs get assigned consistently, regardless of whatever dependencies get added\nRUN groupadd -r -g 999 redis \\\n && useradd -r -g redis -u 999 redis\n#  grab gosu for easy step-down from root\n#  https://github.com/tianon/gosu/releases\nENV GOSU_VERSION=\"1.12\"\nRUN set -eux ; savedAptMark=\"$( apt-mark showmanual ;)\" ; apt-get update ; apt-get install --no-install-recommends ca-certificates=20210119 dirmngr=2.2.27-2+deb11u2 gnupg=2.2.27-2+deb11u2 wget=1.21-1+deb11u1 -y ; rm -rf /var/lib/apt/lists/* ; dpkgArch=\"$( dpkg --print-architecture | awk -F- '{ print $NF }' ;)\" ; wget -nv -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\" ; wget -nv -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\" ; export GNUPGHOME=\"$( mktemp -d ;)\" ; gpg --batch --keyserver hkps://keys.openpgp.org --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 ; gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu ; gpgconf --kill all ; rm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc ; apt-mark auto '.*' > /dev/null; [ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark > /dev/null; apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false ; chmod +x /usr/local/bin/gosu ; gosu --version ; gosu nobody true\nENV REDIS_VERSION=\"5.0.14\"\nENV REDIS_DOWNLOAD_URL=\"http://download.redis.io/releases/redis-5.0.14.tar.gz\"\nENV REDIS_DOWNLOAD_SHA=\"3ea5024766d983249e80d4aa9457c897a9f079957d0fb1f35682df233f997f32\"\nRUN set -eux ; savedAptMark=\"$( apt-mark showmanual ;)\" ; apt-get update ; apt-get install --no-install-recommends ca-certificates=20210119 wget=1.21-1+deb11u1 dpkg-dev=1.20.12 gcc=4:10.2.1-1 libc6-dev=2.31-13+deb11u5 make=4.3-4.1 -y ; rm -rf /var/lib/apt/lists/* ; wget -nv -O redis.tar.gz \"$REDIS_DOWNLOAD_URL\" ; echo \"$REDIS_DOWNLOAD_SHA *redis.tar.gz\" | sha256sum -c - ; mkdir -p /usr/src/redis ; tar -xzf redis.tar.gz -C /usr/src/redis --strip-components=1 ; rm redis.tar.gz ; grep -q '^#define CONFIG_DEFAULT_PROTECTED_MODE 1$' /usr/src/redis/src/server.h ; sed -ri 's!^(#define CONFIG_DEFAULT_PROTECTED_MODE) 1$!\\1 0!' /usr/src/redis/src/server.h ; grep -q '^#define CONFIG_DEFAULT_PROTECTED_MODE 0$' /usr/src/redis/src/server.h ; gnuArch=\"$( dpkg-architecture --query DEB_BUILD_GNU_TYPE ;)\" ; extraJemallocConfigureFlags=\"--build=$gnuArch\" ; dpkgArch=\"$( dpkg --print-architecture ;)\" ; case \"${dpkgArch##*-}\" in (amd64|i386|x32) extraJemallocConfigureFlags=\"$extraJemallocConfigureFlags --with-lg-page=12\" ;;(*) extraJemallocConfigureFlags=\"$extraJemallocConfigureFlags --with-lg-page=16\" ;; esac ; extraJemallocConfigureFlags=\"$extraJemallocConfigureFlags --with-lg-hugepage=21\" ; grep -F 'cd jemalloc \\\n && ./configure ' /usr/src/redis/deps/Makefile ; sed -ri 's!cd jemalloc \\\n && ./configure !&'\"$extraJemallocConfigureFlags\"' !' /usr/src/redis/deps/Makefile ; grep -F \"cd jemalloc \\\n && ./configure $extraJemallocConfigureFlags \" /usr/src/redis/deps/Makefile ; make -C /usr/src/redis -j \"$( nproc ;)\" all ; make -C /usr/src/redis install ; serverMd5=\"$( md5sum /usr/local/bin/redis-server | cut -d' ' -f1 ;)\" ; export serverMd5 ; find /usr/local/bin/redis* -maxdepth 0 -type f -not -name redis-server -exec sh -eux -c ' md5=\"$(md5sum \"$1\" | cut -d\" \" -f1)\"; test \"$md5\" = \"$serverMd5\"; ' -- '{}' ';' -exec ln -svfT 'redis-server' '{}' ';' ; rm -r /usr/src/redis ; apt-mark auto '.*' > /dev/null; [ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark > /dev/null; find /usr/local -type f -executable -exec ldd '{}' ';' | awk '/=>/ { print $(NF-1) }' | sort -u | xargs -r dpkg-query --search | cut -d: -f1 | sort -u | xargs -r apt-mark manual ; apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false ; redis-cli --version ; redis-server --version\nRUN mkdir /data \\\n && chown redis:redis /data\nVOLUME /data\nWORKDIR /data\nCOPY docker-entrypoint.sh /usr/local/bin/\nENTRYPOINT [\"docker-entrypoint.sh\"]\nEXPOSE 6379/tcp\nCOPY docker-healthcheck /usr/local/bin/\nHEALTHCHECK CMD [\"docker-healthcheck\"]\nCMD [\"redis-server\"]\n","originalDockerfileUglifiedHash":"bb1853b0cbffea605ff88b2e9b844cf3","fileName":"/ICSME-replicationpackage/dataset/smellfree_dockerfiles/redis__5.0.14.dockerfile"}