{"seed":3696034302,"processedDockerfileHash":"fadaf9fb57b37658d6a6b90d3b88de88","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","do-not-have-secrets","have-a-healthcheck"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","do-not-have-secrets","have-a-healthcheck"],"processedDockerfile":"FROM ibm-semeru-runtimes:open-11-jre-focal\nARG LIBERTY_VERSION=23.0.0.2\nARG LIBERTY_SHA=4d5aec2d08c27eec18b11721a9b7e1de4f0ef43d\nARG LIBERTY_BUILD_LABEL=cl230220230222-1257\nARG LIBERTY_DOWNLOAD_URL=https://repo1.maven.org/maven2/io/openliberty/openliberty-kernel/$LIBERTY_VERSION/openliberty-kernel-$LIBERTY_VERSION.zip\nARG OPENJ9_SCC=true\nARG VERBOSE=false\nLABEL org.opencontainers.image.authors=\"Arthur De Magalhaes, Chris Potter, Leo Christy Jesuraj\" \\\n      org.opencontainers.image.vendor=\"Open Liberty\" \\\n      org.opencontainers.image.url=\"https://openliberty.io/\" \\\n      org.opencontainers.image.source=\"https://github.com/OpenLiberty/ci.docker\" \\\n      org.opencontainers.image.revision=\"$LIBERTY_BUILD_LABEL\" \\\n      org.opencontainers.image.description=\"This image contains the Open Liberty runtime with IBM Semeru Runtime Open Edition OpenJDK with OpenJ9 and Ubuntu as the base OS.  For more information on this image please see https://github.com/OpenLiberty/ci.docker#building-an-application-image\" \\\n      org.opencontainers.image.title=\"Open Liberty\" \\\n      org.opencontainers.image.version=\"$LIBERTY_VERSION\"\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\nCOPY helpers /opt/ol/helpers\nCOPY fixes/ /opt/ol/fixes/\n#   Install Open Liberty\nRUN :\nRUN : \\\n && (apt-get update ;apt-get install --no-install-recommends unzip=6.0-25ubuntu1.1 openssl=1.1.1f-1ubuntu2.17 wget=1.20.3-1ubuntu2 -y ) \\\n && rm -rf /var/lib/apt/lists/* \\\n && wget -q $LIBERTY_DOWNLOAD_URL -U UA-Open-Liberty-Docker -O /tmp/wlp.zip \\\n && echo \"$LIBERTY_SHA /tmp/wlp.zip\" > /tmp/wlp.zip.sha1 \\\n && sha1sum -c /tmp/wlp.zip.sha1 \\\n && unzip -q /tmp/wlp.zip -d /opt/ol \\\n && rm /tmp/wlp.zip \\\n && rm /tmp/wlp.zip.sha1 \\\n && mkdir -p /licenses \\\n && cp /opt/ol/wlp/LICENSE /licenses/ \\\n && apt-get remove -y unzip \\\n && apt-get remove -y wget \\\n && rm -rf /var/lib/apt/lists/* \\\n && useradd -u 1001 -r -g 0 -s /usr/sbin/nologin default \\\n && chown -R 1001:0 /opt/ol/wlp \\\n && chmod -R g+rw /opt/ol/wlp\n#   Set Path Shortcuts\nENV PATH=\"$PATH:/opt/ol/wlp/bin:/opt/ol/helpers/build\" \\\n    LOG_DIR=\"/logs\" \\\n    WLP_OUTPUT_DIR=\"/opt/ol/wlp/output\" \\\n    WLP_SKIP_MAXPERMSIZE=\"true\" \\\n    OPENJ9_SCC=\"$OPENJ9_SCC\"\n#   Configure Open Liberty\nRUN /opt/ol/wlp/bin/server create \\\n && rm -rf $WLP_OUTPUT_DIR/.classCache /output/workarea\n#   Create symlinks && set permissions for non-root user\nRUN mkdir /logs \\\n && mkdir -p /opt/ol/wlp/usr/shared/resources/lib.index.cache \\\n && ln -s /opt/ol/wlp/usr/shared/resources/lib.index.cache /lib.index.cache \\\n && mkdir -p $WLP_OUTPUT_DIR/defaultServer \\\n && ln -s $WLP_OUTPUT_DIR/defaultServer /output \\\n && ln -s /opt/ol/wlp/usr/servers/defaultServer /config \\\n && mkdir -p /config/configDropins/defaults \\\n && mkdir -p /config/configDropins/overrides \\\n && ln -s /opt/ol/wlp /liberty \\\n && chown -R 1001:0 /config \\\n && chmod -R g+rw /config \\\n && chown -R 1001:0 /logs \\\n && chmod -R g+rw /logs \\\n && chown -R 1001:0 /opt/ol/wlp/usr \\\n && chmod -R g+rw /opt/ol/wlp/usr \\\n && chown -R 1001:0 /opt/ol/wlp/output \\\n && chmod -R g+rw /opt/ol/wlp/output \\\n && chown -R 1001:0 /opt/ol/helpers \\\n && chmod -R g+rw /opt/ol/helpers \\\n && chown -R 1001:0 /opt/ol/fixes \\\n && chmod -R g+rwx /opt/ol/fixes \\\n && mkdir /etc/wlp \\\n && chown -R 1001:0 /etc/wlp \\\n && chmod -R g+rw /etc/wlp \\\n && echo \"<server description=\\\"Default Server\\\"><httpEndpoint id=\\\"defaultHttpEndpoint\\\" host=\\\"*\\\" /></server>\" > /config/configDropins/defaults/open-default-port.xml\n#   Create a new SCC layer\nRUN if [ \"$OPENJ9_SCC\" = \"true\" ] ; then populate_scc.sh ; fi \\\n && rm -rf /output/messaging /output/resources/security /logs/* $WLP_OUTPUT_DIR/.classCache /output/workarea \\\n && chown -R 1001:0 /opt/ol/wlp/output \\\n && chmod -R g+rwx /opt/ol/wlp/output\n#  These settings are needed so that we can run as a different user than 1001 after server warmup\nENV RANDFILE=\"/tmp/.rnd\" \\\n    OPENJ9_JAVA_OPTIONS=\"-XX:+IgnoreUnrecognizedVMOptions -XX:+IdleTuningGcOnIdle -Xshareclasses:name=openj9_system_scc,cacheDir=/opt/java/.scc,readonly,nonFatal -Dosgi.checkConfiguration=false\"\nUSER 1001\nEXPOSE 9080/tcp 9443/tcp\nENTRYPOINT [\"/opt/ol/helpers/runtime/docker-server.sh\"]\nCMD [\"/opt/ol/wlp/bin/server\", \"run\", \"defaultServer\"]\n# A secret has been removed here. Please do not provide secrets from the Dockerfile as these will leak into the metadata of the resulting docker image. To provide secrets the --secret flag of the docker build command can be used (https://docs.docker.com/develop/develop-images/build_enhancements/#new-docker-build-secret-information).\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM ibm-semeru-runtimes:open-11-jre-focal\nARG LIBERTY_VERSION=23.0.0.2\nARG LIBERTY_SHA=4d5aec2d08c27eec18b11721a9b7e1de4f0ef43d\nARG LIBERTY_BUILD_LABEL=cl230220230222-1257\nARG LIBERTY_DOWNLOAD_URL=https://repo1.maven.org/maven2/io/openliberty/openliberty-kernel/$LIBERTY_VERSION/openliberty-kernel-$LIBERTY_VERSION.zip\nARG OPENJ9_SCC=true\nARG VERBOSE=false\nLABEL org.opencontainers.image.authors=\"Arthur De Magalhaes, Chris Potter, Leo Christy Jesuraj\" \\\n      org.opencontainers.image.vendor=\"Open Liberty\" \\\n      org.opencontainers.image.url=\"https://openliberty.io/\" \\\n      org.opencontainers.image.source=\"https://github.com/OpenLiberty/ci.docker\" \\\n      org.opencontainers.image.revision=\"$LIBERTY_BUILD_LABEL\" \\\n      org.opencontainers.image.description=\"This image contains the Open Liberty runtime with IBM Semeru Runtime Open Edition OpenJDK with OpenJ9 and Ubuntu as the base OS.  For more information on this image please see https://github.com/OpenLiberty/ci.docker#building-an-application-image\" \\\n      org.opencontainers.image.title=\"Open Liberty\" \\\n      org.opencontainers.image.version=\"$LIBERTY_VERSION\"\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\nCOPY helpers /opt/ol/helpers\nCOPY fixes/ /opt/ol/fixes/\n#  Install Open Liberty\nRUN apt-get update\nRUN : \\\n && apt-get install unzip=6.0-25ubuntu1.1 openssl=1.1.1f-1ubuntu2.17 wget=1.20.3-1ubuntu2 -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && wget -q $LIBERTY_DOWNLOAD_URL -U UA-Open-Liberty-Docker -O /tmp/wlp.zip \\\n && echo \"$LIBERTY_SHA /tmp/wlp.zip\" > /tmp/wlp.zip.sha1 \\\n && sha1sum -c /tmp/wlp.zip.sha1 \\\n && unzip -q /tmp/wlp.zip -d /opt/ol \\\n && rm /tmp/wlp.zip \\\n && rm /tmp/wlp.zip.sha1 \\\n && mkdir -p /licenses \\\n && cp /opt/ol/wlp/LICENSE /licenses/ \\\n && apt-get remove -y unzip \\\n && apt-get remove -y wget \\\n && rm -rf /var/lib/apt/lists/* \\\n && useradd -u 1001 -r -g 0 -s /usr/sbin/nologin default \\\n && chown -R 1001:0 /opt/ol/wlp \\\n && chmod -R g+rw /opt/ol/wlp\n#  Set Path Shortcuts\nENV PATH=\"$PATH:/opt/ol/wlp/bin:/opt/ol/helpers/build\" \\\n    LOG_DIR=\"/logs\" \\\n    WLP_OUTPUT_DIR=\"/opt/ol/wlp/output\" \\\n    WLP_SKIP_MAXPERMSIZE=\"true\" \\\n    OPENJ9_SCC=\"$OPENJ9_SCC\"\n#  Configure Open Liberty\nRUN /opt/ol/wlp/bin/server create \\\n && rm -rf $WLP_OUTPUT_DIR/.classCache /output/workarea\n#  Create symlinks && set permissions for non-root user\nRUN mkdir /logs \\\n && mkdir -p /opt/ol/wlp/usr/shared/resources/lib.index.cache \\\n && ln -s /opt/ol/wlp/usr/shared/resources/lib.index.cache /lib.index.cache \\\n && mkdir -p $WLP_OUTPUT_DIR/defaultServer \\\n && ln -s $WLP_OUTPUT_DIR/defaultServer /output \\\n && ln -s /opt/ol/wlp/usr/servers/defaultServer /config \\\n && mkdir -p /config/configDropins/defaults \\\n && mkdir -p /config/configDropins/overrides \\\n && ln -s /opt/ol/wlp /liberty \\\n && chown -R 1001:0 /config \\\n && chmod -R g+rw /config \\\n && chown -R 1001:0 /logs \\\n && chmod -R g+rw /logs \\\n && chown -R 1001:0 /opt/ol/wlp/usr \\\n && chmod -R g+rw /opt/ol/wlp/usr \\\n && chown -R 1001:0 /opt/ol/wlp/output \\\n && chmod -R g+rw /opt/ol/wlp/output \\\n && chown -R 1001:0 /opt/ol/helpers \\\n && chmod -R g+rw /opt/ol/helpers \\\n && chown -R 1001:0 /opt/ol/fixes \\\n && chmod -R g+rwx /opt/ol/fixes \\\n && mkdir /etc/wlp \\\n && chown -R 1001:0 /etc/wlp \\\n && chmod -R g+rw /etc/wlp \\\n && echo \"<server description=\\\"Default Server\\\"><httpEndpoint id=\\\"defaultHttpEndpoint\\\" host=\\\"*\\\" /></server>\" > /config/configDropins/defaults/open-default-port.xml\n#  Create a new SCC layer\nRUN if [ \"$OPENJ9_SCC\" = \"true\" ] ; then populate_scc.sh ; fi \\\n && rm -rf /output/messaging /output/resources/security /logs/* $WLP_OUTPUT_DIR/.classCache /output/workarea \\\n && chown -R 1001:0 /opt/ol/wlp/output \\\n && chmod -R g+rwx /opt/ol/wlp/output\n# These settings are needed so that we can run as a different user than 1001 after server warmup\nENV RANDFILE=\"/tmp/.rnd\" \\\n    OPENJ9_JAVA_OPTIONS=\"-XX:+IgnoreUnrecognizedVMOptions -XX:+IdleTuningGcOnIdle -Xshareclasses:name=openj9_system_scc,cacheDir=/opt/java/.scc,readonly,nonFatal -Dosgi.checkConfiguration=false\"\nUSER 1001\nEXPOSE 9080/tcp 9443/tcp\nENTRYPOINT [\"/opt/ol/helpers/runtime/docker-server.sh\"]\nCMD [\"/opt/ol/wlp/bin/server\", \"run\", \"defaultServer\"]\nENV AWS_ACCESS_KEY=\"ASIAGYWHM2K507CU8YFZ\" \\\n    GITHUB_TOKEN=\"ghp_lir5YdnS8TcZD3U7mW9NLiI83Ekls4pGdYB-\"\n","injectedSmells":[],"originalDockerfileHash":"f6f13c93068a771341cc9930dc4d01fe","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM ibm-semeru-runtimes:open-11-jre-focal\nARG LIBERTY_VERSION=23.0.0.2\nARG LIBERTY_SHA=4d5aec2d08c27eec18b11721a9b7e1de4f0ef43d\nARG LIBERTY_BUILD_LABEL=cl230220230222-1257\nARG LIBERTY_DOWNLOAD_URL=https://repo1.maven.org/maven2/io/openliberty/openliberty-kernel/$LIBERTY_VERSION/openliberty-kernel-$LIBERTY_VERSION.zip\nARG OPENJ9_SCC=true\nARG VERBOSE=false\nLABEL org.opencontainers.image.authors=\"Arthur De Magalhaes, Chris Potter, Leo Christy Jesuraj\" \\\n      org.opencontainers.image.vendor=\"Open Liberty\" \\\n      org.opencontainers.image.url=\"https://openliberty.io/\" \\\n      org.opencontainers.image.source=\"https://github.com/OpenLiberty/ci.docker\" \\\n      org.opencontainers.image.revision=\"$LIBERTY_BUILD_LABEL\" \\\n      org.opencontainers.image.description=\"This image contains the Open Liberty runtime with IBM Semeru Runtime Open Edition OpenJDK with OpenJ9 and Ubuntu as the base OS.  For more information on this image please see https://github.com/OpenLiberty/ci.docker#building-an-application-image\" \\\n      org.opencontainers.image.title=\"Open Liberty\" \\\n      org.opencontainers.image.version=\"$LIBERTY_VERSION\"\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\nCOPY helpers /opt/ol/helpers\nCOPY fixes/ /opt/ol/fixes/\n#   Install Open Liberty\nRUN apt-get update\nRUN : \\\n && apt-get install unzip=6.0-25ubuntu1.1 openssl=1.1.1f-1ubuntu2.17 wget=1.20.3-1ubuntu2 -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && wget -q $LIBERTY_DOWNLOAD_URL -U UA-Open-Liberty-Docker -O /tmp/wlp.zip \\\n && echo \"$LIBERTY_SHA /tmp/wlp.zip\" > /tmp/wlp.zip.sha1 \\\n && sha1sum -c /tmp/wlp.zip.sha1 \\\n && unzip -q /tmp/wlp.zip -d /opt/ol \\\n && rm /tmp/wlp.zip \\\n && rm /tmp/wlp.zip.sha1 \\\n && mkdir -p /licenses \\\n && cp /opt/ol/wlp/LICENSE /licenses/ \\\n && apt-get remove -y unzip \\\n && apt-get remove -y wget \\\n && rm -rf /var/lib/apt/lists/* \\\n && useradd -u 1001 -r -g 0 -s /usr/sbin/nologin default \\\n && chown -R 1001:0 /opt/ol/wlp \\\n && chmod -R g+rw /opt/ol/wlp\n#   Set Path Shortcuts\nENV PATH=\"$PATH:/opt/ol/wlp/bin:/opt/ol/helpers/build\" \\\n    LOG_DIR=\"/logs\" \\\n    WLP_OUTPUT_DIR=\"/opt/ol/wlp/output\" \\\n    WLP_SKIP_MAXPERMSIZE=\"true\" \\\n    OPENJ9_SCC=\"$OPENJ9_SCC\"\n#   Configure Open Liberty\nRUN /opt/ol/wlp/bin/server create \\\n && rm -rf $WLP_OUTPUT_DIR/.classCache /output/workarea\n#   Create symlinks && set permissions for non-root user\nRUN mkdir /logs \\\n && mkdir -p /opt/ol/wlp/usr/shared/resources/lib.index.cache \\\n && ln -s /opt/ol/wlp/usr/shared/resources/lib.index.cache /lib.index.cache \\\n && mkdir -p $WLP_OUTPUT_DIR/defaultServer \\\n && ln -s $WLP_OUTPUT_DIR/defaultServer /output \\\n && ln -s /opt/ol/wlp/usr/servers/defaultServer /config \\\n && mkdir -p /config/configDropins/defaults \\\n && mkdir -p /config/configDropins/overrides \\\n && ln -s /opt/ol/wlp /liberty \\\n && chown -R 1001:0 /config \\\n && chmod -R g+rw /config \\\n && chown -R 1001:0 /logs \\\n && chmod -R g+rw /logs \\\n && chown -R 1001:0 /opt/ol/wlp/usr \\\n && chmod -R g+rw /opt/ol/wlp/usr \\\n && chown -R 1001:0 /opt/ol/wlp/output \\\n && chmod -R g+rw /opt/ol/wlp/output \\\n && chown -R 1001:0 /opt/ol/helpers \\\n && chmod -R g+rw /opt/ol/helpers \\\n && chown -R 1001:0 /opt/ol/fixes \\\n && chmod -R g+rwx /opt/ol/fixes \\\n && mkdir /etc/wlp \\\n && chown -R 1001:0 /etc/wlp \\\n && chmod -R g+rw /etc/wlp \\\n && echo \"<server description=\\\"Default Server\\\"><httpEndpoint id=\\\"defaultHttpEndpoint\\\" host=\\\"*\\\" /></server>\" > /config/configDropins/defaults/open-default-port.xml\n#   Create a new SCC layer\nRUN if [ \"$OPENJ9_SCC\" = \"true\" ] ; then populate_scc.sh ; fi \\\n && rm -rf /output/messaging /output/resources/security /logs/* $WLP_OUTPUT_DIR/.classCache /output/workarea \\\n && chown -R 1001:0 /opt/ol/wlp/output \\\n && chmod -R g+rwx /opt/ol/wlp/output\n#  These settings are needed so that we can run as a different user than 1001 after server warmup\nENV RANDFILE=\"/tmp/.rnd\" \\\n    OPENJ9_JAVA_OPTIONS=\"-XX:+IgnoreUnrecognizedVMOptions -XX:+IdleTuningGcOnIdle -Xshareclasses:name=openj9_system_scc,cacheDir=/opt/java/.scc,readonly,nonFatal -Dosgi.checkConfiguration=false\"\nUSER 1001\nEXPOSE 9080/tcp 9443/tcp\nENTRYPOINT [\"/opt/ol/helpers/runtime/docker-server.sh\"]\nCMD [\"/opt/ol/wlp/bin/server\", \"run\", \"defaultServer\"]\nENV AWS_ACCESS_KEY=\"ASIAGYWHM2K507CU8YFZ\" \\\n    GITHUB_TOKEN=\"ghp_lir5YdnS8TcZD3U7mW9NLiI83Ekls4pGdYB-\"\n","originalDockerfileUglifiedHash":"79b1d74480c89ddd4f2131f09899bade","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles/open-liberty__23.0.0.2-kernel-slim-java11-openj9__7__injected.dockerfile"}