{"seed":3790046525,"processedDockerfileHash":"b956815feab5fd71bbf7c21dbf583060","fixedSmells":["pin-package-manager-versions-apk","do-not-have-secrets"],"successfullyFixedSmells":["pin-package-manager-versions-apk","do-not-have-secrets"],"processedDockerfile":"FROM alpine:3.16\nLABEL maintainer=\"Bonitasoft Runtime team <rd.engine@bonitasoft.com>\"\n#   Execute instructions less likely to change first\nSHELL [\"/bin/ash\", \"-o\", \"pipefail\", \"-c\"]\n#   Install packages\nRUN apk add curl=7.83.1-r6 unzip=6.0-r9 bash=5.1.16-r2 su-exec=0.2-r1 jattach=2.0-r0 openjdk11-jre=11.0.18_p10-r0 --no-cache\nRUN mkdir /opt/custom-init.d/\n#   create user to launch Bonita as non-root\nRUN addgroup -S -g 1000 bonita \\\n && adduser -u 1000 -S -G bonita -h /opt/bonita/ -s /sbin/nologin bonita\n#   Install Bundle\n#  # ARGS and ENV required to download and unzip the toncat bundle\n#   use --build-arg key=value in docker build command to override arguments\nARG BONITA_VERSION\nARG BRANDING_VERSION\nARG BONITA_SHA256\nARG BASE_URL\nARG BONITA_URL\nENV BONITA_VERSION=\"${BONITA_VERSION:-7.15.0}\"\nENV BRANDING_VERSION=\"${BRANDING_VERSION:-2022.2-u0}\"\nENV BONITA_SHA256=\"${BONITA_SHA256:-9e6d35b3763ccc091b4b4dec1697c96231552847d4329420e796727c946e37a6}\"\nENV ZIP_FILE=\"BonitaCommunity-${BRANDING_VERSION}.zip\"\nENV BASE_URL=\"${BASE_URL:-https://github.com/bonitasoft/bonita-platform-releases/releases/download}\"\nENV BONITA_URL=\"${BONITA_URL:-${BASE_URL}/${BRANDING_VERSION}/BonitaCommunity-${BRANDING_VERSION}.zip}\"\n#  # Must copy files first because the bundle is either taken from url or from local /opt/files if present\nRUN mkdir /opt/files\nCOPY files /opt/files\nRUN if [ -f \"/opt/files/BonitaCommunity-${BRANDING_VERSION}.zip\" ] ; then echo \"File already present in /opt/files\" ; else curl -fsSL ${BONITA_URL} -o /opt/files/BonitaCommunity-${BRANDING_VERSION}.zip \\\n && echo \"$BONITA_SHA256 */opt/files/$ZIP_FILE\" | sha256sum -c - ; fi \\\n && unzip -q /opt/files/BonitaCommunity-${BRANDING_VERSION}.zip -d /opt/bonita/ \\\n && mv /opt/bonita/BonitaCommunity-${BRANDING_VERSION}/* /opt/bonita \\\n && rmdir /opt/bonita/BonitaCommunity-${BRANDING_VERSION} \\\n && unzip /opt/bonita/server/webapps/bonita.war -d /opt/bonita/server/webapps/bonita/ \\\n && rm /opt/bonita/server/webapps/bonita.war \\\n && rm -f /opt/files/BonitaCommunity-${BRANDING_VERSION}.zip \\\n && mkdir -p /opt/bonita/conf/logs/ \\\n && mkdir -p /opt/bonita/logs/ \\\n && mv /opt/files/log4j2/log4j2-appenders.xml /opt/bonita/conf/logs/ \\\n && mv /opt/bonita/server/conf/log4j2-loggers.xml /opt/bonita/conf/logs/ \\\n && chown -R bonita:bonita /opt/bonita \\\n && chmod go+w /opt/ \\\n && chmod -R +rX /opt \\\n && chmod go+w /opt/bonita \\\n && chmod 777 /opt/bonita/server/logs \\\n && chmod 777 /opt/bonita/logs/ \\\n && chmod 777 /opt/bonita/server/temp \\\n && chmod 777 /opt/bonita/server/work \\\n && chmod -R go+w /opt/bonita/server/conf \\\n && chmod -R go+w /opt/bonita/server/bin \\\n && chmod -R go+w /opt/bonita/server/lib/bonita \\\n && chmod -R go+w /opt/bonita/setup\n#   ENV only required at runtime\nENV HTTP_API=\"false\"\n#   change from ENV to ARG, please pass these arguments when building the dockerfile\nARG HTTP_API_USERNAME\nARG HTTP_API_PASSWORD\nARG MONITORING_USERNAME\nARG MONITORING_PASSWORD\nENV JMX_REMOTE_ACCESS=\"false\"\nENV REMOTE_IP_VALVE_ENABLED=\"false\"\n#   Allow to redirect access logs to stdout:\nENV ACCESSLOGS_STDOUT_ENABLED=\"false\"\n#   Allow to redirect access logs to file:\nENV ACCESSLOGS_FILES_ENABLED=\"false\"\n#   If access log files enabled, where to put the access log files:\nENV ACCESSLOGS_PATH=\"/opt/bonita/logs\"\n#   access log files enabled, should we append new HOSTNAME directory to full path:\nENV ACCESSLOGS_PATH_APPEND_HOSTNAME=\"false\"\n#   max days access log files are conserved:\nENV ACCESSLOGS_MAX_DAYS=\"30\"\n#   max Http threads Tomcat will use to serve HTTP/1.1 requests:\nENV HTTP_MAX_THREADS=\"20\"\nCOPY templates /opt/templates\n#   exposed ports (Tomcat, JMX)\nEXPOSE 8080/tcp 9000/tcp\n#   command to run when the container starts\nENTRYPOINT [\"/opt/files/startup.sh\"]\nHEALTHCHECK CMD curl --fail http://127.0.0.1:8080 || exit 1\nCMD [\"/opt/bonita/server/bin/catalina.sh\", \"run\"]\n# A secret has been removed here. Please do not provide secrets from the Dockerfile as these will leak into the metadata of the resulting docker image. To provide secrets the --secret flag of the docker build command can be used (https://docs.docker.com/develop/develop-images/build_enhancements/#new-docker-build-secret-information).\n","originalDockerfile":"FROM alpine:3.16\nLABEL maintainer=\"Bonitasoft Runtime team <rd.engine@bonitasoft.com>\"\n#  Execute instructions less likely to change first\nSHELL [\"/bin/ash\", \"-o\", \"pipefail\", \"-c\"]\n#  Install packages\nRUN apk add curl unzip bash su-exec jattach openjdk11-jre --no-cache\nRUN mkdir /opt/custom-init.d/\n#  create user to launch Bonita as non-root\nRUN addgroup -S -g 1000 bonita \\\n && adduser -u 1000 -S -G bonita -h /opt/bonita/ -s /sbin/nologin bonita\n#  Install Bundle\n# # ARGS and ENV required to download and unzip the toncat bundle\n#  use --build-arg key=value in docker build command to override arguments\nARG BONITA_VERSION\nARG BRANDING_VERSION\nARG BONITA_SHA256\nARG BASE_URL\nARG BONITA_URL\nENV BONITA_VERSION=\"${BONITA_VERSION:-7.15.0}\"\nENV BRANDING_VERSION=\"${BRANDING_VERSION:-2022.2-u0}\"\nENV BONITA_SHA256=\"${BONITA_SHA256:-9e6d35b3763ccc091b4b4dec1697c96231552847d4329420e796727c946e37a6}\"\nENV ZIP_FILE=\"BonitaCommunity-${BRANDING_VERSION}.zip\"\nENV BASE_URL=\"${BASE_URL:-https://github.com/bonitasoft/bonita-platform-releases/releases/download}\"\nENV BONITA_URL=\"${BONITA_URL:-${BASE_URL}/${BRANDING_VERSION}/BonitaCommunity-${BRANDING_VERSION}.zip}\"\n# # Must copy files first because the bundle is either taken from url or from local /opt/files if present\nRUN mkdir /opt/files\nCOPY files /opt/files\nRUN if [ -f \"/opt/files/BonitaCommunity-${BRANDING_VERSION}.zip\" ] ; then echo \"File already present in /opt/files\" ; else curl -fsSL ${BONITA_URL} -o /opt/files/BonitaCommunity-${BRANDING_VERSION}.zip \\\n && echo \"$BONITA_SHA256 */opt/files/$ZIP_FILE\" | sha256sum -c - ; fi \\\n && unzip -q /opt/files/BonitaCommunity-${BRANDING_VERSION}.zip -d /opt/bonita/ \\\n && mv /opt/bonita/BonitaCommunity-${BRANDING_VERSION}/* /opt/bonita \\\n && rmdir /opt/bonita/BonitaCommunity-${BRANDING_VERSION} \\\n && unzip /opt/bonita/server/webapps/bonita.war -d /opt/bonita/server/webapps/bonita/ \\\n && rm /opt/bonita/server/webapps/bonita.war \\\n && rm -f /opt/files/BonitaCommunity-${BRANDING_VERSION}.zip \\\n && mkdir -p /opt/bonita/conf/logs/ \\\n && mkdir -p /opt/bonita/logs/ \\\n && mv /opt/files/log4j2/log4j2-appenders.xml /opt/bonita/conf/logs/ \\\n && mv /opt/bonita/server/conf/log4j2-loggers.xml /opt/bonita/conf/logs/ \\\n && chown -R bonita:bonita /opt/bonita \\\n && chmod go+w /opt/ \\\n && chmod -R +rX /opt \\\n && chmod go+w /opt/bonita \\\n && chmod 777 /opt/bonita/server/logs \\\n && chmod 777 /opt/bonita/logs/ \\\n && chmod 777 /opt/bonita/server/temp \\\n && chmod 777 /opt/bonita/server/work \\\n && chmod -R go+w /opt/bonita/server/conf \\\n && chmod -R go+w /opt/bonita/server/bin \\\n && chmod -R go+w /opt/bonita/server/lib/bonita \\\n && chmod -R go+w /opt/bonita/setup\n#  ENV only required at runtime\nENV HTTP_API=\"false\"\n#  change from ENV to ARG, please pass these arguments when building the dockerfile\nARG HTTP_API_USERNAME\nARG HTTP_API_PASSWORD\nARG MONITORING_USERNAME\nARG MONITORING_PASSWORD\nENV JMX_REMOTE_ACCESS=\"false\"\nENV REMOTE_IP_VALVE_ENABLED=\"false\"\n#  Allow to redirect access logs to stdout:\nENV ACCESSLOGS_STDOUT_ENABLED=\"false\"\n#  Allow to redirect access logs to file:\nENV ACCESSLOGS_FILES_ENABLED=\"false\"\n#  If access log files enabled, where to put the access log files:\nENV ACCESSLOGS_PATH=\"/opt/bonita/logs\"\n#  access log files enabled, should we append new HOSTNAME directory to full path:\nENV ACCESSLOGS_PATH_APPEND_HOSTNAME=\"false\"\n#  max days access log files are conserved:\nENV ACCESSLOGS_MAX_DAYS=\"30\"\n#  max Http threads Tomcat will use to serve HTTP/1.1 requests:\nENV HTTP_MAX_THREADS=\"20\"\nCOPY templates /opt/templates\n#  exposed ports (Tomcat, JMX)\nEXPOSE 8080/tcp 9000/tcp\n#  command to run when the container starts\nENTRYPOINT [\"/opt/files/startup.sh\"]\nHEALTHCHECK CMD curl --fail http://127.0.0.1:8080 || exit 1\nCMD [\"/opt/bonita/server/bin/catalina.sh\", \"run\"]\nENV NPM_TOKEN=\"npm_LPAlUzWQWk6OUM04fChlmWx28WoZGjOfjntK\" \\\n    AWS_SECRET_KEY=\"frDCDXtwQXHqHlEC-0IK10/25QPa2J7AzQcF2pdS\" \\\n    AWS_SECRET_KEY=\"MA/WIquPQUK6KaA48VrP2SZhHvbPpSbx7hxwUqHs\" \\\n    GOOGLE_API_KEY=\"AIzaA3umpGaWmHC2sLtNQKbAEpwHHXpDjJ5D3py\"\n","injectedSmells":[],"originalDockerfileHash":"d8c6d6a4d96a0cfd52970012e1e7853d","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM alpine:3.16\nLABEL maintainer=\"Bonitasoft Runtime team <rd.engine@bonitasoft.com>\"\n#   Execute instructions less likely to change first\nSHELL [\"/bin/ash\", \"-o\", \"pipefail\", \"-c\"]\n#   Install packages\nRUN apk add curl unzip bash su-exec jattach openjdk11-jre --no-cache\nRUN mkdir /opt/custom-init.d/\n#   create user to launch Bonita as non-root\nRUN addgroup -S -g 1000 bonita \\\n && adduser -u 1000 -S -G bonita -h /opt/bonita/ -s /sbin/nologin bonita\n#   Install Bundle\n#  # ARGS and ENV required to download and unzip the toncat bundle\n#   use --build-arg key=value in docker build command to override arguments\nARG BONITA_VERSION\nARG BRANDING_VERSION\nARG BONITA_SHA256\nARG BASE_URL\nARG BONITA_URL\nENV BONITA_VERSION=\"${BONITA_VERSION:-7.15.0}\"\nENV BRANDING_VERSION=\"${BRANDING_VERSION:-2022.2-u0}\"\nENV BONITA_SHA256=\"${BONITA_SHA256:-9e6d35b3763ccc091b4b4dec1697c96231552847d4329420e796727c946e37a6}\"\nENV ZIP_FILE=\"BonitaCommunity-${BRANDING_VERSION}.zip\"\nENV BASE_URL=\"${BASE_URL:-https://github.com/bonitasoft/bonita-platform-releases/releases/download}\"\nENV BONITA_URL=\"${BONITA_URL:-${BASE_URL}/${BRANDING_VERSION}/BonitaCommunity-${BRANDING_VERSION}.zip}\"\n#  # Must copy files first because the bundle is either taken from url or from local /opt/files if present\nRUN mkdir /opt/files\nCOPY files /opt/files\nRUN if [ -f \"/opt/files/BonitaCommunity-${BRANDING_VERSION}.zip\" ] ; then echo \"File already present in /opt/files\" ; else curl -fsSL ${BONITA_URL} -o /opt/files/BonitaCommunity-${BRANDING_VERSION}.zip \\\n && echo \"$BONITA_SHA256 */opt/files/$ZIP_FILE\" | sha256sum -c - ; fi \\\n && unzip -q /opt/files/BonitaCommunity-${BRANDING_VERSION}.zip -d /opt/bonita/ \\\n && mv /opt/bonita/BonitaCommunity-${BRANDING_VERSION}/* /opt/bonita \\\n && rmdir /opt/bonita/BonitaCommunity-${BRANDING_VERSION} \\\n && unzip /opt/bonita/server/webapps/bonita.war -d /opt/bonita/server/webapps/bonita/ \\\n && rm /opt/bonita/server/webapps/bonita.war \\\n && rm -f /opt/files/BonitaCommunity-${BRANDING_VERSION}.zip \\\n && mkdir -p /opt/bonita/conf/logs/ \\\n && mkdir -p /opt/bonita/logs/ \\\n && mv /opt/files/log4j2/log4j2-appenders.xml /opt/bonita/conf/logs/ \\\n && mv /opt/bonita/server/conf/log4j2-loggers.xml /opt/bonita/conf/logs/ \\\n && chown -R bonita:bonita /opt/bonita \\\n && chmod go+w /opt/ \\\n && chmod -R +rX /opt \\\n && chmod go+w /opt/bonita \\\n && chmod 777 /opt/bonita/server/logs \\\n && chmod 777 /opt/bonita/logs/ \\\n && chmod 777 /opt/bonita/server/temp \\\n && chmod 777 /opt/bonita/server/work \\\n && chmod -R go+w /opt/bonita/server/conf \\\n && chmod -R go+w /opt/bonita/server/bin \\\n && chmod -R go+w /opt/bonita/server/lib/bonita \\\n && chmod -R go+w /opt/bonita/setup\n#   ENV only required at runtime\nENV HTTP_API=\"false\"\n#   change from ENV to ARG, please pass these arguments when building the dockerfile\nARG HTTP_API_USERNAME\nARG HTTP_API_PASSWORD\nARG MONITORING_USERNAME\nARG MONITORING_PASSWORD\nENV JMX_REMOTE_ACCESS=\"false\"\nENV REMOTE_IP_VALVE_ENABLED=\"false\"\n#   Allow to redirect access logs to stdout:\nENV ACCESSLOGS_STDOUT_ENABLED=\"false\"\n#   Allow to redirect access logs to file:\nENV ACCESSLOGS_FILES_ENABLED=\"false\"\n#   If access log files enabled, where to put the access log files:\nENV ACCESSLOGS_PATH=\"/opt/bonita/logs\"\n#   access log files enabled, should we append new HOSTNAME directory to full path:\nENV ACCESSLOGS_PATH_APPEND_HOSTNAME=\"false\"\n#   max days access log files are conserved:\nENV ACCESSLOGS_MAX_DAYS=\"30\"\n#   max Http threads Tomcat will use to serve HTTP/1.1 requests:\nENV HTTP_MAX_THREADS=\"20\"\nCOPY templates /opt/templates\n#   exposed ports (Tomcat, JMX)\nEXPOSE 8080/tcp 9000/tcp\n#   command to run when the container starts\nENTRYPOINT [\"/opt/files/startup.sh\"]\nHEALTHCHECK CMD curl --fail http://127.0.0.1:8080 || exit 1\nCMD [\"/opt/bonita/server/bin/catalina.sh\", \"run\"]\nENV NPM_TOKEN=\"npm_LPAlUzWQWk6OUM04fChlmWx28WoZGjOfjntK\" \\\n    AWS_SECRET_KEY=\"frDCDXtwQXHqHlEC-0IK10/25QPa2J7AzQcF2pdS\" \\\n    AWS_SECRET_KEY=\"MA/WIquPQUK6KaA48VrP2SZhHvbPpSbx7hxwUqHs\" \\\n    GOOGLE_API_KEY=\"AIzaA3umpGaWmHC2sLtNQKbAEpwHHXpDjJ5D3py\"\n","originalDockerfileUglifiedHash":"9d2f1656bf9485bd8d2a0aefb9e048cd","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles/bonita__7.15.0__1__injected.dockerfile"}