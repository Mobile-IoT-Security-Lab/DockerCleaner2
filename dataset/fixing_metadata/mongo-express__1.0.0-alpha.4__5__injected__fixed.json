{"seed":531343700,"processedDockerfileHash":"864cc2b0767fad11dd51a32d267fbf56","fixedSmells":["pin-package-manager-versions-apk","use-copy-instead-of-add","have-a-healthcheck"],"successfullyFixedSmells":["pin-package-manager-versions-apk","use-copy-instead-of-add","have-a-healthcheck"],"processedDockerfile":"#   https://nodejs.org/en/about/releases/\n#   https://github.com/nodejs/Release#readme\nFROM node:12-alpine3.11\nRUN apk add bash=5.0.11-r1 tini=0.18.0-r0 --no-cache\nEXPOSE 8081/tcp\n#   override some config defaults with values that will work better for docker\nENV ME_CONFIG_EDITORTHEME=\"default\" \\\n    ME_CONFIG_MONGODB_URL=\"mongodb://mongo:27017\" \\\n    ME_CONFIG_MONGODB_ENABLE_ADMIN=\"true\" \\\n    ME_CONFIG_BASICAUTH_USERNAME=\"\" \\\n    ME_CONFIG_BASICAUTH_PASSWORD=\"\" \\\n    VCAP_APP_HOST=\"0.0.0.0\"\nENV MONGO_EXPRESS=\"1.0.0-alpha.4\"\nRUN set -eux ; apk add git=2.24.4-r0 --no-cache --virtual .me-install-deps ; npm install mongo-express@$MONGO_EXPRESS ; apk del --no-network .me-install-deps\nCOPY docker-entrypoint.sh /\nWORKDIR /node_modules/mongo-express\nRUN cp config.default.js config.js\nENTRYPOINT [\"tini\", \"--\", \"/docker-entrypoint.sh\"]\nCMD [\"mongo-express\"]\nHEALTHCHECK CMD curl --fail http://127.0.0.1:3000 || exit 1\n","originalDockerfile":"#  https://nodejs.org/en/about/releases/\n#  https://github.com/nodejs/Release#readme\nFROM node:12-alpine3.11\nRUN apk add bash tini --no-cache\nEXPOSE 8081/tcp\n#  override some config defaults with values that will work better for docker\nENV ME_CONFIG_EDITORTHEME=\"default\" \\\n    ME_CONFIG_MONGODB_URL=\"mongodb://mongo:27017\" \\\n    ME_CONFIG_MONGODB_ENABLE_ADMIN=\"true\" \\\n    ME_CONFIG_BASICAUTH_USERNAME=\"\" \\\n    ME_CONFIG_BASICAUTH_PASSWORD=\"\" \\\n    VCAP_APP_HOST=\"0.0.0.0\"\nENV MONGO_EXPRESS=\"1.0.0-alpha.4\"\nRUN set -eux ; apk add git --no-cache --virtual .me-install-deps ; npm install mongo-express@$MONGO_EXPRESS ; apk del --no-network .me-install-deps\nADD docker-entrypoint.sh /\nWORKDIR /node_modules/mongo-express\nRUN cp config.default.js config.js\nENTRYPOINT [\"tini\", \"--\", \"/docker-entrypoint.sh\"]\nCMD [\"mongo-express\"]\n","injectedSmells":[],"originalDockerfileHash":"d31592662e8a446f9d5e516c1faba954","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   https://nodejs.org/en/about/releases/\n#   https://github.com/nodejs/Release#readme\nFROM node:12-alpine3.11\nRUN apk add bash tini --no-cache\nEXPOSE 8081/tcp\n#   override some config defaults with values that will work better for docker\nENV ME_CONFIG_EDITORTHEME=\"default\" \\\n    ME_CONFIG_MONGODB_URL=\"mongodb://mongo:27017\" \\\n    ME_CONFIG_MONGODB_ENABLE_ADMIN=\"true\" \\\n    ME_CONFIG_BASICAUTH_USERNAME=\"\" \\\n    ME_CONFIG_BASICAUTH_PASSWORD=\"\" \\\n    VCAP_APP_HOST=\"0.0.0.0\"\nENV MONGO_EXPRESS=\"1.0.0-alpha.4\"\nRUN set -eux ; apk add git --no-cache --virtual .me-install-deps ; npm install mongo-express@$MONGO_EXPRESS ; apk del --no-network .me-install-deps\nADD docker-entrypoint.sh /\nWORKDIR /node_modules/mongo-express\nRUN cp config.default.js config.js\nENTRYPOINT [\"tini\", \"--\", \"/docker-entrypoint.sh\"]\nCMD [\"mongo-express\"]\n","originalDockerfileUglifiedHash":"77bfe22e906861e84289b29b2d7e455c","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles/mongo-express__1.0.0-alpha.4__5__injected.dockerfile"}