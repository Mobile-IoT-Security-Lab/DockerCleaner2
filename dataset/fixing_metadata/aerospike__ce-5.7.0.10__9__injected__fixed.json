{"seed":1091635673,"processedDockerfileHash":"b50f09dfc96d02a0bda8ccaa5dce56f3","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","use-copy-instead-of-add","have-a-healthcheck"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","use-copy-instead-of-add","have-a-healthcheck"],"processedDockerfile":"#\n#   Aerospike Server Dockerfile\n#\n#   http://github.com/aerospike/aerospike-server.docker\n#\nFROM debian:buster-slim\nENV AEROSPIKE_VERSION=\"5.7.0.10\"\nENV AEROSPIKE_SHA256=\"6c17caabf03094c284c28406145447165ce7c40b954427879b8bd38d2824902b\"\n#   Install Aerospike Server and Tools\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\nRUN :\nRUN set -o pipefail ; : \\\n && (apt-get update ;apt-get install --no-install-recommends iproute2=4.20.0-2+deb10u1 procps=2:3.3.15-2 dumb-init=1.2.2-1.1 wget=1.20.1-1.1 python=2.7.16-1 python3=3.7.3-1 python3-distutils=3.7.3-1 lua5.2=5.2.4-1.1+b2 gettext-base=0.19.8.1-9 libcurl4-openssl-dev=7.64.0-4+deb10u5 wget=1.20.1-1.1 ca-certificates=20200601~deb10u2 openssl=1.1.1n-0+deb10u4 xz-utils=5.2.4-1+deb10u1 -y ) \\\n && wget -q \"https://www.aerospike.com/artifacts/aerospike-server-community/${AEROSPIKE_VERSION}/aerospike-server-community-${AEROSPIKE_VERSION}-debian10.tgz\" -O aerospike-server.tgz \\\n && echo \"$AEROSPIKE_SHA256 *aerospike-server.tgz\" | sha256sum -c - \\\n && mkdir aerospike \\\n && tar xzf aerospike-server.tgz --strip-components=1 -C aerospike \\\n && dpkg -i aerospike/aerospike-server-*.deb \\\n && dpkg -i aerospike/aerospike-tools-*.deb \\\n && mkdir -p /var/log/aerospike/ \\\n && mkdir -p /var/run/aerospike/ \\\n && rm -rf aerospike-server.tgz aerospike /var/lib/apt/lists/* \\\n && rm -rf /opt/aerospike/lib/java \\\n && dpkg -r wget ca-certificates openssl xz-utils \\\n && dpkg --purge wget ca-certificates openssl xz-utils \\\n && apt-get purge -y \\\n && apt-get autoremove -y \\\n && find /usr/bin/ -lname '/opt/aerospike/bin/*' -delete \\\n && find /opt/aerospike/bin/ -user aerospike -group aerospike -exec chown root:root {} + \\\n && mv /opt/aerospike/bin/* /usr/bin/ \\\n && rm -rf /opt/aerospike/bin\n#   Add the Aerospike configuration specific to this dockerfile\nCOPY aerospike.template.conf /etc/aerospike/aerospike.template.conf\nCOPY entrypoint.sh /entrypoint.sh\n#   Mount the Aerospike data directory\n#   VOLUME [\"/opt/aerospike/data\"]\n#   Mount the Aerospike config directory\n#   VOLUME [\"/etc/aerospike/\"]\n#   Expose Aerospike ports\n#\n#     3000 – service port, for client connections\n#     3001 – fabric port, for cluster communication\n#     3002 – mesh port, for cluster heartbeat\n#\nEXPOSE 3000/tcp 3001/tcp 3002/tcp\n#   Runs as PID 1 /usr/bin/dumb-init -- /my/script --with --args\"\n#   https://github.com/Yelp/dumb-init\nENTRYPOINT [\"/usr/bin/dumb-init\", \"--\", \"/entrypoint.sh\"]\n#   Execute the run script in foreground mode\nCMD [\"asd\"]\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#\n#  Aerospike Server Dockerfile\n#\n#  http://github.com/aerospike/aerospike-server.docker\n#\nFROM debian:buster-slim\nENV AEROSPIKE_VERSION=\"5.7.0.10\"\nENV AEROSPIKE_SHA256=\"6c17caabf03094c284c28406145447165ce7c40b954427879b8bd38d2824902b\"\n#  Install Aerospike Server and Tools\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\nRUN apt-get update\nRUN set -o pipefail ; : \\\n && apt-get install iproute2=4.20.0-2+deb10u1 procps=2:3.3.15-2 dumb-init=1.2.2-1.1 wget=1.20.1-1.1 python=2.7.16-1 python3=3.7.3-1 python3-distutils=3.7.3-1 lua5.2=5.2.4-1.1+b2 gettext-base=0.19.8.1-9 libcurl4-openssl-dev=7.64.0-4+deb10u5 wget=1.20.1-1.1 ca-certificates=20200601~deb10u2 openssl=1.1.1n-0+deb10u4 xz-utils=5.2.4-1+deb10u1 -y \\\n && wget -q \"https://www.aerospike.com/artifacts/aerospike-server-community/${AEROSPIKE_VERSION}/aerospike-server-community-${AEROSPIKE_VERSION}-debian10.tgz\" -O aerospike-server.tgz \\\n && echo \"$AEROSPIKE_SHA256 *aerospike-server.tgz\" | sha256sum -c - \\\n && mkdir aerospike \\\n && tar xzf aerospike-server.tgz --strip-components=1 -C aerospike \\\n && dpkg -i aerospike/aerospike-server-*.deb \\\n && dpkg -i aerospike/aerospike-tools-*.deb \\\n && mkdir -p /var/log/aerospike/ \\\n && mkdir -p /var/run/aerospike/ \\\n && rm -rf aerospike-server.tgz aerospike /var/lib/apt/lists/* \\\n && rm -rf /opt/aerospike/lib/java \\\n && dpkg -r wget ca-certificates openssl xz-utils \\\n && dpkg --purge wget ca-certificates openssl xz-utils \\\n && apt-get purge -y \\\n && apt-get autoremove -y \\\n && find /usr/bin/ -lname '/opt/aerospike/bin/*' -delete \\\n && find /opt/aerospike/bin/ -user aerospike -group aerospike -exec chown root:root {} + \\\n && mv /opt/aerospike/bin/* /usr/bin/ \\\n && rm -rf /opt/aerospike/bin\n#  Add the Aerospike configuration specific to this dockerfile\nADD aerospike.template.conf /etc/aerospike/aerospike.template.conf\nADD entrypoint.sh /entrypoint.sh\n#  Mount the Aerospike data directory\n#  VOLUME [\"/opt/aerospike/data\"]\n#  Mount the Aerospike config directory\n#  VOLUME [\"/etc/aerospike/\"]\n#  Expose Aerospike ports\n#\n#    3000 – service port, for client connections\n#    3001 – fabric port, for cluster communication\n#    3002 – mesh port, for cluster heartbeat\n#\nEXPOSE 3000/tcp 3001/tcp 3002/tcp\n#  Runs as PID 1 /usr/bin/dumb-init -- /my/script --with --args\"\n#  https://github.com/Yelp/dumb-init\nENTRYPOINT [\"/usr/bin/dumb-init\", \"--\", \"/entrypoint.sh\"]\n#  Execute the run script in foreground mode\nCMD [\"asd\"]\n","injectedSmells":[],"originalDockerfileHash":"87922535cdb34d8971d1b3a3411109d9","successfullyInjectedSmells":[],"originalDockerfileUglified":"#\n#   Aerospike Server Dockerfile\n#\n#   http://github.com/aerospike/aerospike-server.docker\n#\nFROM debian:buster-slim\nENV AEROSPIKE_VERSION=\"5.7.0.10\"\nENV AEROSPIKE_SHA256=\"6c17caabf03094c284c28406145447165ce7c40b954427879b8bd38d2824902b\"\n#   Install Aerospike Server and Tools\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\nRUN apt-get update\nRUN set -o pipefail ; : \\\n && apt-get install iproute2=4.20.0-2+deb10u1 procps=2:3.3.15-2 dumb-init=1.2.2-1.1 wget=1.20.1-1.1 python=2.7.16-1 python3=3.7.3-1 python3-distutils=3.7.3-1 lua5.2=5.2.4-1.1+b2 gettext-base=0.19.8.1-9 libcurl4-openssl-dev=7.64.0-4+deb10u5 wget=1.20.1-1.1 ca-certificates=20200601~deb10u2 openssl=1.1.1n-0+deb10u4 xz-utils=5.2.4-1+deb10u1 -y \\\n && wget -q \"https://www.aerospike.com/artifacts/aerospike-server-community/${AEROSPIKE_VERSION}/aerospike-server-community-${AEROSPIKE_VERSION}-debian10.tgz\" -O aerospike-server.tgz \\\n && echo \"$AEROSPIKE_SHA256 *aerospike-server.tgz\" | sha256sum -c - \\\n && mkdir aerospike \\\n && tar xzf aerospike-server.tgz --strip-components=1 -C aerospike \\\n && dpkg -i aerospike/aerospike-server-*.deb \\\n && dpkg -i aerospike/aerospike-tools-*.deb \\\n && mkdir -p /var/log/aerospike/ \\\n && mkdir -p /var/run/aerospike/ \\\n && rm -rf aerospike-server.tgz aerospike /var/lib/apt/lists/* \\\n && rm -rf /opt/aerospike/lib/java \\\n && dpkg -r wget ca-certificates openssl xz-utils \\\n && dpkg --purge wget ca-certificates openssl xz-utils \\\n && apt-get purge -y \\\n && apt-get autoremove -y \\\n && find /usr/bin/ -lname '/opt/aerospike/bin/*' -delete \\\n && find /opt/aerospike/bin/ -user aerospike -group aerospike -exec chown root:root {} + \\\n && mv /opt/aerospike/bin/* /usr/bin/ \\\n && rm -rf /opt/aerospike/bin\n#   Add the Aerospike configuration specific to this dockerfile\nADD aerospike.template.conf /etc/aerospike/aerospike.template.conf\nADD entrypoint.sh /entrypoint.sh\n#   Mount the Aerospike data directory\n#   VOLUME [\"/opt/aerospike/data\"]\n#   Mount the Aerospike config directory\n#   VOLUME [\"/etc/aerospike/\"]\n#   Expose Aerospike ports\n#\n#     3000 – service port, for client connections\n#     3001 – fabric port, for cluster communication\n#     3002 – mesh port, for cluster heartbeat\n#\nEXPOSE 3000/tcp 3001/tcp 3002/tcp\n#   Runs as PID 1 /usr/bin/dumb-init -- /my/script --with --args\"\n#   https://github.com/Yelp/dumb-init\nENTRYPOINT [\"/usr/bin/dumb-init\", \"--\", \"/entrypoint.sh\"]\n#   Execute the run script in foreground mode\nCMD [\"asd\"]\n","originalDockerfileUglifiedHash":"192beeda20f5ceff79203f1cadfc0489","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles/aerospike__ce-5.7.0.10__9__injected.dockerfile"}