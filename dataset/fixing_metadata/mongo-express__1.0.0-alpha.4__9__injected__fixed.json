{"seed":3468663313,"processedDockerfileHash":"5c89a342ee770ba335b19f13ddaed2c5","fixedSmells":["do-not-have-secrets"],"successfullyFixedSmells":["do-not-have-secrets"],"processedDockerfile":"#   https://nodejs.org/en/about/releases/\n#   https://github.com/nodejs/Release#readme\nFROM node:12-alpine3.11\nRUN apk add --no-cache bash=5.0.11-r1 tini=0.18.0-r0\nEXPOSE 8081/tcp\n#   override some config defaults with values that will work better for docker\nENV ME_CONFIG_EDITORTHEME=\"default\" \\\n    ME_CONFIG_MONGODB_URL=\"mongodb://mongo:27017\" \\\n    ME_CONFIG_MONGODB_ENABLE_ADMIN=\"true\" \\\n    ME_CONFIG_BASICAUTH_USERNAME=\"\" \\\n    ME_CONFIG_BASICAUTH_PASSWORD=\"\" \\\n    VCAP_APP_HOST=\"0.0.0.0\"\nENV MONGO_EXPRESS=\"1.0.0-alpha.4\"\nRUN set -eux ; apk add --no-cache --virtual .me-install-deps git=2.24.4-r0 ; npm install mongo-express@$MONGO_EXPRESS ; apk del --no-network .me-install-deps\nCOPY docker-entrypoint.sh /\nWORKDIR /node_modules/mongo-express\nRUN cp config.default.js config.js\nENTRYPOINT [\"tini\", \"--\", \"/docker-entrypoint.sh\"]\nHEALTHCHECK CMD curl --fail http://127.0.0.1:3000 || exit 1\nCMD [\"mongo-express\"]\n# A secret has been removed here. Please do not provide secrets from the Dockerfile as these will leak into the metadata of the resulting docker image. To provide secrets the --secret flag of the docker build command can be used (https://docs.docker.com/develop/develop-images/build_enhancements/#new-docker-build-secret-information).\n","originalDockerfile":"#  https://nodejs.org/en/about/releases/\n#  https://github.com/nodejs/Release#readme\nFROM node:12-alpine3.11\nRUN apk add --no-cache bash=5.0.11-r1 tini=0.18.0-r0\nEXPOSE 8081/tcp\n#  override some config defaults with values that will work better for docker\nENV ME_CONFIG_EDITORTHEME=\"default\" \\\n    ME_CONFIG_MONGODB_URL=\"mongodb://mongo:27017\" \\\n    ME_CONFIG_MONGODB_ENABLE_ADMIN=\"true\" \\\n    ME_CONFIG_BASICAUTH_USERNAME=\"\" \\\n    ME_CONFIG_BASICAUTH_PASSWORD=\"\" \\\n    VCAP_APP_HOST=\"0.0.0.0\"\nENV MONGO_EXPRESS=\"1.0.0-alpha.4\"\nRUN set -eux ; apk add --no-cache --virtual .me-install-deps git=2.24.4-r0 ; npm install mongo-express@$MONGO_EXPRESS ; apk del --no-network .me-install-deps\nCOPY docker-entrypoint.sh /\nWORKDIR /node_modules/mongo-express\nRUN cp config.default.js config.js\nENTRYPOINT [\"tini\", \"--\", \"/docker-entrypoint.sh\"]\nHEALTHCHECK CMD curl --fail http://127.0.0.1:3000 || exit 1\nCMD [\"mongo-express\"]\nENV DOCKER_PASSWORD=\"rMtqoXxBIQNdzKJB7xbKDDtVlzhZTg1VBU6zNwZf\" \\\n    DOCKER_PASSWORD=\"5YJuLpWznB5zU9W88BOuM0Yw0EZDWJtoUAVaTuVr\"\n","injectedSmells":[],"originalDockerfileHash":"5be7a34ca9e65b5ae2112eb8cebf9a11","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   https://nodejs.org/en/about/releases/\n#   https://github.com/nodejs/Release#readme\nFROM node:12-alpine3.11\nRUN apk add --no-cache bash=5.0.11-r1 tini=0.18.0-r0\nEXPOSE 8081/tcp\n#   override some config defaults with values that will work better for docker\nENV ME_CONFIG_EDITORTHEME=\"default\" \\\n    ME_CONFIG_MONGODB_URL=\"mongodb://mongo:27017\" \\\n    ME_CONFIG_MONGODB_ENABLE_ADMIN=\"true\" \\\n    ME_CONFIG_BASICAUTH_USERNAME=\"\" \\\n    ME_CONFIG_BASICAUTH_PASSWORD=\"\" \\\n    VCAP_APP_HOST=\"0.0.0.0\"\nENV MONGO_EXPRESS=\"1.0.0-alpha.4\"\nRUN set -eux ; apk add --no-cache --virtual .me-install-deps git=2.24.4-r0 ; npm install mongo-express@$MONGO_EXPRESS ; apk del --no-network .me-install-deps\nCOPY docker-entrypoint.sh /\nWORKDIR /node_modules/mongo-express\nRUN cp config.default.js config.js\nENTRYPOINT [\"tini\", \"--\", \"/docker-entrypoint.sh\"]\nHEALTHCHECK CMD curl --fail http://127.0.0.1:3000 || exit 1\nCMD [\"mongo-express\"]\nENV DOCKER_PASSWORD=\"rMtqoXxBIQNdzKJB7xbKDDtVlzhZTg1VBU6zNwZf\" \\\n    DOCKER_PASSWORD=\"5YJuLpWznB5zU9W88BOuM0Yw0EZDWJtoUAVaTuVr\"\n","originalDockerfileUglifiedHash":"62d45c3e2d2bda3b58a264774726ed29","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles/mongo-express__1.0.0-alpha.4__9__injected.dockerfile"}