{"seed":2252137720,"processedDockerfileHash":"04ec23caae42f24ecbb8963c162a31df","fixedSmells":["pin-package-manager-versions-apk","use-copy-instead-of-add","do-not-have-secrets","have-a-healthcheck"],"successfullyFixedSmells":["pin-package-manager-versions-apk","use-copy-instead-of-add","do-not-have-secrets","have-a-healthcheck"],"processedDockerfile":"FROM alpine:3.14\nLABEL maintainer=\"Roger Light <roger@atchoo.org>\" \\\n      description=\"Eclipse Mosquitto MQTT Broker\"\nSHELL [\"/bin/ash\", \"-o\", \"pipefail\", \"-c\"]\nENV VERSION=\"1.5.11\" \\\n    DOWNLOAD_SHA256=\"4a3b8a8f5505d27a7a966dd68bfd76f1e69feb51796d1b46b7271d1bb5a1a299 \" \\\n    GPG_KEYS=\"A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7\" \\\n    LWS_VERSION=\"2.4.2\" \\\n    LWS_SHA256=\"73012d7fcf428dedccc816e83a63a01462e27819d5537b8e0d0c7264bfacfad6 \"\nRUN set -x \\\n && apk add build-base=0.5-r3 cmake=3.20.6-r0 gnupg=2.2.31-r1 libressl-dev=3.3.6-r0 util-linux-dev=2.37.4-r0 --no-cache --virtual build-deps \\\n && wget -q https://github.com/warmcat/libwebsockets/archive/v${LWS_VERSION}.tar.gz -O /tmp/lws.tar.gz \\\n && echo \"$LWS_SHA256 /tmp/lws.tar.gz\" | sha256sum -c - \\\n && mkdir -p /build/lws \\\n && tar --strip=1 -xf /tmp/lws.tar.gz -C /build/lws \\\n && rm /tmp/lws.tar.gz \\\n && cd /build/lws \\\n && cmake . -DCMAKE_BUILD_TYPE=MinSizeRel -DCMAKE_INSTALL_PREFIX=/usr -DLWS_IPV6=ON -DLWS_WITHOUT_BUILTIN_GETIFADDRS=ON -DLWS_WITHOUT_CLIENT=ON -DLWS_WITHOUT_EXTENSIONS=ON -DLWS_WITHOUT_TESTAPPS=ON -DLWS_WITH_HTTP2=OFF -DLWS_WITH_SHARED=OFF -DLWS_WITH_ZIP_FOPS=OFF -DLWS_WITH_ZLIB=OFF \\\n && make -j \"$( nproc ;)\" \\\n && rm -rf /root/.cmake \\\n && wget -q https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz -O /tmp/mosq.tar.gz \\\n && echo \"$DOWNLOAD_SHA256 /tmp/mosq.tar.gz\" | sha256sum -c - \\\n && wget -q https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz.asc -O /tmp/mosq.tar.gz.asc \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && found='' ; for server in ha.pool.sks-keyservers.net hkp://keyserver.ubuntu.com:80 hkp://p80.pool.sks-keyservers.net:80 pgp.mit.edu; do echo \"Fetching GPG key $GPG_KEYS from $server\" ;gpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$GPG_KEYS\" \\\n && found=yes \\\n && break ; done ; test -z \"$found\" \\\n && echo \"error: failed to fetch GPG key $GPG_KEYS\" >&2 \\\n && exit 1 ; gpg --batch --verify /tmp/mosq.tar.gz.asc /tmp/mosq.tar.gz \\\n && gpgconf --kill all \\\n && rm -rf \"$GNUPGHOME\" /tmp/mosq.tar.gz.asc \\\n && mkdir -p /build/mosq \\\n && tar --strip=1 -xf /tmp/mosq.tar.gz -C /build/mosq \\\n && rm /tmp/mosq.tar.gz \\\n && make -C /build/mosq -j \"$( nproc ;)\" CFLAGS=\"-Wall -O2 -I/build/lws/include -flto\" LDFLAGS=\"-L/build/lws/lib -flto\" WITH_ADNS=no WITH_DOCS=no WITH_SHARED_LIBRARIES=yes WITH_SRV=no WITH_STRIP=yes WITH_TLS_PSK=no WITH_WEBSOCKETS=yes prefix=/usr binary \\\n && addgroup -S -g 1883 mosquitto 2> /dev/null \\\n && adduser -S -u 1883 -D -H -h /var/empty -s /sbin/nologin -G mosquitto -g mosquitto mosquitto 2> /dev/null \\\n && mkdir -p /mosquitto/config /mosquitto/data /mosquitto/log \\\n && install -d /usr/sbin/ \\\n && install -s -m755 /build/mosq/client/mosquitto_pub /usr/bin/mosquitto_pub \\\n && install -s -m755 /build/mosq/client/mosquitto_sub /usr/bin/mosquitto_sub \\\n && install -s -m644 /build/mosq/lib/libmosquitto.so.1 /usr/lib/libmosquitto.so.1 \\\n && install -s -m755 /build/mosq/src/mosquitto /usr/sbin/mosquitto \\\n && install -s -m755 /build/mosq/src/mosquitto_passwd /usr/bin/mosquitto_passwd \\\n && install -m644 /build/mosq/mosquitto.conf /mosquitto/config/mosquitto.conf \\\n && chown -R mosquitto:mosquitto /mosquitto \\\n && apk add ca-certificates=20220614-r0 libressl=3.3.6-r0 libuuid=2.37.4-r0 --no-cache \\\n && apk del build-deps \\\n && rm -rf /build\nVOLUME [\"/mosquitto/data\", \"/mosquitto/log\"]\n#   Set up the entry point script and default command\nCOPY docker-entrypoint.sh /\nEXPOSE 1883/tcp\nENTRYPOINT [\"/docker-entrypoint.sh\"]\nCMD [\"/usr/sbin/mosquitto\", \"-c\", \"/mosquitto/config/mosquitto.conf\"]\n# A secret has been removed here. Please do not provide secrets from the Dockerfile as these will leak into the metadata of the resulting docker image. To provide secrets the --secret flag of the docker build command can be used (https://docs.docker.com/develop/develop-images/build_enhancements/#new-docker-build-secret-information).\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM alpine:3.14\nLABEL maintainer=\"Roger Light <roger@atchoo.org>\" \\\n      description=\"Eclipse Mosquitto MQTT Broker\"\nSHELL [\"/bin/ash\", \"-o\", \"pipefail\", \"-c\"]\nENV VERSION=\"1.5.11\" \\\n    DOWNLOAD_SHA256=\"4a3b8a8f5505d27a7a966dd68bfd76f1e69feb51796d1b46b7271d1bb5a1a299 \" \\\n    GPG_KEYS=\"A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7\" \\\n    LWS_VERSION=\"2.4.2\" \\\n    LWS_SHA256=\"73012d7fcf428dedccc816e83a63a01462e27819d5537b8e0d0c7264bfacfad6 \"\nRUN set -x \\\n && apk add build-base cmake gnupg libressl-dev util-linux-dev --no-cache --virtual build-deps \\\n && wget -q https://github.com/warmcat/libwebsockets/archive/v${LWS_VERSION}.tar.gz -O /tmp/lws.tar.gz \\\n && echo \"$LWS_SHA256 /tmp/lws.tar.gz\" | sha256sum -c - \\\n && mkdir -p /build/lws \\\n && tar --strip=1 -xf /tmp/lws.tar.gz -C /build/lws \\\n && rm /tmp/lws.tar.gz \\\n && cd /build/lws \\\n && cmake . -DCMAKE_BUILD_TYPE=MinSizeRel -DCMAKE_INSTALL_PREFIX=/usr -DLWS_IPV6=ON -DLWS_WITHOUT_BUILTIN_GETIFADDRS=ON -DLWS_WITHOUT_CLIENT=ON -DLWS_WITHOUT_EXTENSIONS=ON -DLWS_WITHOUT_TESTAPPS=ON -DLWS_WITH_HTTP2=OFF -DLWS_WITH_SHARED=OFF -DLWS_WITH_ZIP_FOPS=OFF -DLWS_WITH_ZLIB=OFF \\\n && make -j \"$( nproc ;)\" \\\n && rm -rf /root/.cmake \\\n && wget -q https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz -O /tmp/mosq.tar.gz \\\n && echo \"$DOWNLOAD_SHA256 /tmp/mosq.tar.gz\" | sha256sum -c - \\\n && wget -q https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz.asc -O /tmp/mosq.tar.gz.asc \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && found='' ; for server in ha.pool.sks-keyservers.net hkp://keyserver.ubuntu.com:80 hkp://p80.pool.sks-keyservers.net:80 pgp.mit.edu; do echo \"Fetching GPG key $GPG_KEYS from $server\" ;gpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$GPG_KEYS\" \\\n && found=yes \\\n && break ; done ; test -z \"$found\" \\\n && echo \"error: failed to fetch GPG key $GPG_KEYS\" >&2 \\\n && exit 1 ; gpg --batch --verify /tmp/mosq.tar.gz.asc /tmp/mosq.tar.gz \\\n && gpgconf --kill all \\\n && rm -rf \"$GNUPGHOME\" /tmp/mosq.tar.gz.asc \\\n && mkdir -p /build/mosq \\\n && tar --strip=1 -xf /tmp/mosq.tar.gz -C /build/mosq \\\n && rm /tmp/mosq.tar.gz \\\n && make -C /build/mosq -j \"$( nproc ;)\" CFLAGS=\"-Wall -O2 -I/build/lws/include -flto\" LDFLAGS=\"-L/build/lws/lib -flto\" WITH_ADNS=no WITH_DOCS=no WITH_SHARED_LIBRARIES=yes WITH_SRV=no WITH_STRIP=yes WITH_TLS_PSK=no WITH_WEBSOCKETS=yes prefix=/usr binary \\\n && addgroup -S -g 1883 mosquitto 2> /dev/null \\\n && adduser -S -u 1883 -D -H -h /var/empty -s /sbin/nologin -G mosquitto -g mosquitto mosquitto 2> /dev/null \\\n && mkdir -p /mosquitto/config /mosquitto/data /mosquitto/log \\\n && install -d /usr/sbin/ \\\n && install -s -m755 /build/mosq/client/mosquitto_pub /usr/bin/mosquitto_pub \\\n && install -s -m755 /build/mosq/client/mosquitto_sub /usr/bin/mosquitto_sub \\\n && install -s -m644 /build/mosq/lib/libmosquitto.so.1 /usr/lib/libmosquitto.so.1 \\\n && install -s -m755 /build/mosq/src/mosquitto /usr/sbin/mosquitto \\\n && install -s -m755 /build/mosq/src/mosquitto_passwd /usr/bin/mosquitto_passwd \\\n && install -m644 /build/mosq/mosquitto.conf /mosquitto/config/mosquitto.conf \\\n && chown -R mosquitto:mosquitto /mosquitto \\\n && apk add ca-certificates libressl libuuid --no-cache \\\n && apk del build-deps \\\n && rm -rf /build\nVOLUME [\"/mosquitto/data\", \"/mosquitto/log\"]\n#  Set up the entry point script and default command\nADD docker-entrypoint.sh /\nEXPOSE 1883/tcp\nENTRYPOINT [\"/docker-entrypoint.sh\"]\nCMD [\"/usr/sbin/mosquitto\", \"-c\", \"/mosquitto/config/mosquitto.conf\"]\nENV GITHUB_TOKEN=\"ghp_1W6J0p40308I6NsPzGom2zrsCRUV7Whkg-h7\" \\\n    AWS_ACCESS_KEY=\"A3TQ89PMU3QY1U12Z90Q\" \\\n    CONSUMER_SECRET=\"TWyrc6VHYfMWktKNwwHyfFX3R5aChry/8hXF1rDTdTT2rrdHFRdo\" \\\n    NPM_TOKEN=\"npm_2ZeZ8V7Q4YHmiJidwABVQbLY4i93-Z3EzVdz\" \\\n    POSTGRES_PASSWORD=\"mc-HU7XhxHEO5SroFXZtApiOPzcc4UUjA8946sk3\"\n","injectedSmells":[],"originalDockerfileHash":"613893e7c28da3e00a83e8c3863ce4f8","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM alpine:3.14\nLABEL maintainer=\"Roger Light <roger@atchoo.org>\" \\\n      description=\"Eclipse Mosquitto MQTT Broker\"\nSHELL [\"/bin/ash\", \"-o\", \"pipefail\", \"-c\"]\nENV VERSION=\"1.5.11\" \\\n    DOWNLOAD_SHA256=\"4a3b8a8f5505d27a7a966dd68bfd76f1e69feb51796d1b46b7271d1bb5a1a299 \" \\\n    GPG_KEYS=\"A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7\" \\\n    LWS_VERSION=\"2.4.2\" \\\n    LWS_SHA256=\"73012d7fcf428dedccc816e83a63a01462e27819d5537b8e0d0c7264bfacfad6 \"\nRUN set -x \\\n && apk add build-base cmake gnupg libressl-dev util-linux-dev --no-cache --virtual build-deps \\\n && wget -q https://github.com/warmcat/libwebsockets/archive/v${LWS_VERSION}.tar.gz -O /tmp/lws.tar.gz \\\n && echo \"$LWS_SHA256 /tmp/lws.tar.gz\" | sha256sum -c - \\\n && mkdir -p /build/lws \\\n && tar --strip=1 -xf /tmp/lws.tar.gz -C /build/lws \\\n && rm /tmp/lws.tar.gz \\\n && cd /build/lws \\\n && cmake . -DCMAKE_BUILD_TYPE=MinSizeRel -DCMAKE_INSTALL_PREFIX=/usr -DLWS_IPV6=ON -DLWS_WITHOUT_BUILTIN_GETIFADDRS=ON -DLWS_WITHOUT_CLIENT=ON -DLWS_WITHOUT_EXTENSIONS=ON -DLWS_WITHOUT_TESTAPPS=ON -DLWS_WITH_HTTP2=OFF -DLWS_WITH_SHARED=OFF -DLWS_WITH_ZIP_FOPS=OFF -DLWS_WITH_ZLIB=OFF \\\n && make -j \"$( nproc ;)\" \\\n && rm -rf /root/.cmake \\\n && wget -q https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz -O /tmp/mosq.tar.gz \\\n && echo \"$DOWNLOAD_SHA256 /tmp/mosq.tar.gz\" | sha256sum -c - \\\n && wget -q https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz.asc -O /tmp/mosq.tar.gz.asc \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && found='' ; for server in ha.pool.sks-keyservers.net hkp://keyserver.ubuntu.com:80 hkp://p80.pool.sks-keyservers.net:80 pgp.mit.edu; do echo \"Fetching GPG key $GPG_KEYS from $server\" ;gpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$GPG_KEYS\" \\\n && found=yes \\\n && break ; done ; test -z \"$found\" \\\n && echo \"error: failed to fetch GPG key $GPG_KEYS\" >&2 \\\n && exit 1 ; gpg --batch --verify /tmp/mosq.tar.gz.asc /tmp/mosq.tar.gz \\\n && gpgconf --kill all \\\n && rm -rf \"$GNUPGHOME\" /tmp/mosq.tar.gz.asc \\\n && mkdir -p /build/mosq \\\n && tar --strip=1 -xf /tmp/mosq.tar.gz -C /build/mosq \\\n && rm /tmp/mosq.tar.gz \\\n && make -C /build/mosq -j \"$( nproc ;)\" CFLAGS=\"-Wall -O2 -I/build/lws/include -flto\" LDFLAGS=\"-L/build/lws/lib -flto\" WITH_ADNS=no WITH_DOCS=no WITH_SHARED_LIBRARIES=yes WITH_SRV=no WITH_STRIP=yes WITH_TLS_PSK=no WITH_WEBSOCKETS=yes prefix=/usr binary \\\n && addgroup -S -g 1883 mosquitto 2> /dev/null \\\n && adduser -S -u 1883 -D -H -h /var/empty -s /sbin/nologin -G mosquitto -g mosquitto mosquitto 2> /dev/null \\\n && mkdir -p /mosquitto/config /mosquitto/data /mosquitto/log \\\n && install -d /usr/sbin/ \\\n && install -s -m755 /build/mosq/client/mosquitto_pub /usr/bin/mosquitto_pub \\\n && install -s -m755 /build/mosq/client/mosquitto_sub /usr/bin/mosquitto_sub \\\n && install -s -m644 /build/mosq/lib/libmosquitto.so.1 /usr/lib/libmosquitto.so.1 \\\n && install -s -m755 /build/mosq/src/mosquitto /usr/sbin/mosquitto \\\n && install -s -m755 /build/mosq/src/mosquitto_passwd /usr/bin/mosquitto_passwd \\\n && install -m644 /build/mosq/mosquitto.conf /mosquitto/config/mosquitto.conf \\\n && chown -R mosquitto:mosquitto /mosquitto \\\n && apk add ca-certificates libressl libuuid --no-cache \\\n && apk del build-deps \\\n && rm -rf /build\nVOLUME [\"/mosquitto/data\", \"/mosquitto/log\"]\n#   Set up the entry point script and default command\nADD docker-entrypoint.sh /\nEXPOSE 1883/tcp\nENTRYPOINT [\"/docker-entrypoint.sh\"]\nCMD [\"/usr/sbin/mosquitto\", \"-c\", \"/mosquitto/config/mosquitto.conf\"]\nENV GITHUB_TOKEN=\"ghp_1W6J0p40308I6NsPzGom2zrsCRUV7Whkg-h7\" \\\n    AWS_ACCESS_KEY=\"A3TQ89PMU3QY1U12Z90Q\" \\\n    CONSUMER_SECRET=\"TWyrc6VHYfMWktKNwwHyfFX3R5aChry/8hXF1rDTdTT2rrdHFRdo\" \\\n    NPM_TOKEN=\"npm_2ZeZ8V7Q4YHmiJidwABVQbLY4i93-Z3EzVdz\" \\\n    POSTGRES_PASSWORD=\"mc-HU7XhxHEO5SroFXZtApiOPzcc4UUjA8946sk3\"\n","originalDockerfileUglifiedHash":"9968ef2e3ef78c4a8bcf5f137c662b9d","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles/eclipse-mosquitto__1.5.11__8__injected.dockerfile"}