{"seed":3277346023,"processedDockerfileHash":"6cec5e4c93d2d05ba66a8a6bbe2bec99","fixedSmells":["pin-package-manager-versions-apk","do-not-have-secrets","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","do-not-have-secrets","have-a-user"],"processedDockerfile":"FROM alpine:3.15\nSHELL [\"/bin/ash\", \"-o\", \"pipefail\", \"-c\"]\n#   add our user and group first to make sure their IDs get assigned consistently, regardless of whatever dependencies get added\nRUN addgroup -g 11211 memcache \\\n && adduser -D -u 11211 -G memcache memcache\n#   ensure SASL's \"libplain.so\" is installed as per https://github.com/memcached/memcached/wiki/SASLHowto\nRUN apk add libsasl=2.1.28-r0 --no-cache\nENV MEMCACHED_VERSION=\"1.6.14\"\nENV MEMCACHED_SHA1=\"be64c11d34f04bd1855100b8b5ad9ae8b45e0ab0\"\nRUN set -x \\\n && apk add ca-certificates=20220614-r0 coreutils=9.0-r2 cyrus-sasl-dev=2.1.28-r0 gcc=10.3.1_git20211027-r0 libc-dev=0.7.2-r3 libevent-dev=2.1.12-r4 linux-headers=5.10.41-r0 make=4.3-r0 openssl=1.1.1t-r3 openssl-dev=1.1.1t-r3 perl=5.34.0-r1 perl-io-socket-ssl=2.072-r0 perl-utils=5.34.0-r1 --no-cache --virtual .build-deps \\\n && wget -nv -O memcached.tar.gz \"https://memcached.org/files/memcached-$MEMCACHED_VERSION.tar.gz\" \\\n && echo \"$MEMCACHED_SHA1 memcached.tar.gz\" | sha1sum -c - \\\n && mkdir -p /usr/src/memcached \\\n && tar -xzf memcached.tar.gz -C /usr/src/memcached --strip-components=1 \\\n && rm memcached.tar.gz \\\n && cd /usr/src/memcached \\\n && ./configure --build=\"$gnuArch\" --enable-extstore --enable-sasl --enable-sasl-pwdb --enable-tls \\\n && nproc=\"$( nproc ;)\" \\\n && make -j \"$nproc\" \\\n && make test PARALLEL=\"$nproc\" \\\n && make install \\\n && cd / \\\n && rm -rf /usr/src/memcached\n#   hadolint ignore=DL3018\nRUN runDeps=\"$( scanelf --needed --nobanner --format '%n#p' --recursive /usr/local | tr ',' '\\n' | sort -u | awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' ;)\" \\\n && apk add $runDeps --no-cache --no-network --virtual .memcached-rundeps \\\n && apk del --no-network .build-deps \\\n && memcached -V\nCOPY docker-entrypoint.sh /usr/local/bin/\nRUN ln -s usr/local/bin/docker-entrypoint.sh /entrypoint.sh\nENTRYPOINT [\"docker-entrypoint.sh\"]\nUSER memcache\nEXPOSE 11211/tcp\nHEALTHCHECK CMD memcached -V || exit 1\nCMD [\"memcached\"]\nUSER 0\n# A secret has been removed here. Please do not provide secrets from the Dockerfile as these will leak into the metadata of the resulting docker image. To provide secrets the --secret flag of the docker build command can be used (https://docs.docker.com/develop/develop-images/build_enhancements/#new-docker-build-secret-information).\nRUN addgroup -S docker-user ; adduser -S -G docker-user docker-user\nUSER docker-user\n","originalDockerfile":"FROM alpine:3.15\nSHELL [\"/bin/ash\", \"-o\", \"pipefail\", \"-c\"]\n#  add our user and group first to make sure their IDs get assigned consistently, regardless of whatever dependencies get added\nRUN addgroup -g 11211 memcache \\\n && adduser -D -u 11211 -G memcache memcache\n#  ensure SASL's \"libplain.so\" is installed as per https://github.com/memcached/memcached/wiki/SASLHowto\nRUN apk add libsasl --no-cache\nENV MEMCACHED_VERSION=\"1.6.14\"\nENV MEMCACHED_SHA1=\"be64c11d34f04bd1855100b8b5ad9ae8b45e0ab0\"\nRUN set -x \\\n && apk add ca-certificates coreutils cyrus-sasl-dev gcc libc-dev libevent-dev linux-headers make openssl openssl-dev perl perl-io-socket-ssl perl-utils --no-cache --virtual .build-deps \\\n && wget -nv -O memcached.tar.gz \"https://memcached.org/files/memcached-$MEMCACHED_VERSION.tar.gz\" \\\n && echo \"$MEMCACHED_SHA1 memcached.tar.gz\" | sha1sum -c - \\\n && mkdir -p /usr/src/memcached \\\n && tar -xzf memcached.tar.gz -C /usr/src/memcached --strip-components=1 \\\n && rm memcached.tar.gz \\\n && cd /usr/src/memcached \\\n && ./configure --build=\"$gnuArch\" --enable-extstore --enable-sasl --enable-sasl-pwdb --enable-tls \\\n && nproc=\"$( nproc ;)\" \\\n && make -j \"$nproc\" \\\n && make test PARALLEL=\"$nproc\" \\\n && make install \\\n && cd / \\\n && rm -rf /usr/src/memcached\n#  hadolint ignore=DL3018\nRUN runDeps=\"$( scanelf --needed --nobanner --format '%n#p' --recursive /usr/local | tr ',' '\\n' | sort -u | awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' ;)\" \\\n && apk add $runDeps --no-cache --no-network --virtual .memcached-rundeps \\\n && apk del --no-network .build-deps \\\n && memcached -V\nCOPY docker-entrypoint.sh /usr/local/bin/\nRUN ln -s usr/local/bin/docker-entrypoint.sh /entrypoint.sh\nENTRYPOINT [\"docker-entrypoint.sh\"]\nUSER memcache\nEXPOSE 11211/tcp\nHEALTHCHECK CMD memcached -V || exit 1\nCMD [\"memcached\"]\nUSER 0\nENV DOCKER_PASSWORD=\"oRnQfuCunUG6MpsTtVJJOnKjOUgT8Ui8UBcSzwjo\"\n","injectedSmells":[],"originalDockerfileHash":"9a07f1aab589392ef0743ef9c35854e7","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM alpine:3.15\nSHELL [\"/bin/ash\", \"-o\", \"pipefail\", \"-c\"]\n#   add our user and group first to make sure their IDs get assigned consistently, regardless of whatever dependencies get added\nRUN addgroup -g 11211 memcache \\\n && adduser -D -u 11211 -G memcache memcache\n#   ensure SASL's \"libplain.so\" is installed as per https://github.com/memcached/memcached/wiki/SASLHowto\nRUN apk add libsasl --no-cache\nENV MEMCACHED_VERSION=\"1.6.14\"\nENV MEMCACHED_SHA1=\"be64c11d34f04bd1855100b8b5ad9ae8b45e0ab0\"\nRUN set -x \\\n && apk add ca-certificates coreutils cyrus-sasl-dev gcc libc-dev libevent-dev linux-headers make openssl openssl-dev perl perl-io-socket-ssl perl-utils --no-cache --virtual .build-deps \\\n && wget -nv -O memcached.tar.gz \"https://memcached.org/files/memcached-$MEMCACHED_VERSION.tar.gz\" \\\n && echo \"$MEMCACHED_SHA1 memcached.tar.gz\" | sha1sum -c - \\\n && mkdir -p /usr/src/memcached \\\n && tar -xzf memcached.tar.gz -C /usr/src/memcached --strip-components=1 \\\n && rm memcached.tar.gz \\\n && cd /usr/src/memcached \\\n && ./configure --build=\"$gnuArch\" --enable-extstore --enable-sasl --enable-sasl-pwdb --enable-tls \\\n && nproc=\"$( nproc ;)\" \\\n && make -j \"$nproc\" \\\n && make test PARALLEL=\"$nproc\" \\\n && make install \\\n && cd / \\\n && rm -rf /usr/src/memcached\n#   hadolint ignore=DL3018\nRUN runDeps=\"$( scanelf --needed --nobanner --format '%n#p' --recursive /usr/local | tr ',' '\\n' | sort -u | awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' ;)\" \\\n && apk add $runDeps --no-cache --no-network --virtual .memcached-rundeps \\\n && apk del --no-network .build-deps \\\n && memcached -V\nCOPY docker-entrypoint.sh /usr/local/bin/\nRUN ln -s usr/local/bin/docker-entrypoint.sh /entrypoint.sh\nENTRYPOINT [\"docker-entrypoint.sh\"]\nUSER memcache\nEXPOSE 11211/tcp\nHEALTHCHECK CMD memcached -V || exit 1\nCMD [\"memcached\"]\nUSER 0\nENV DOCKER_PASSWORD=\"oRnQfuCunUG6MpsTtVJJOnKjOUgT8Ui8UBcSzwjo\"\n","originalDockerfileUglifiedHash":"f4de5ac4a53129bd0d51259f128ae601","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles/memcached__1.6.14-alpine__5__injected.dockerfile"}