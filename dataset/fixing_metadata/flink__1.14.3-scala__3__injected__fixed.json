{"seed":1629714377,"processedDockerfileHash":"f8a1fd8f1009ef7628704cfc0ef06fa9","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","use-copy-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","use-copy-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"processedDockerfile":"#  ##############################################################################\n#    Licensed to the Apache Software Foundation (ASF) under one\n#    or more contributor license agreements.  See the NOTICE file\n#    distributed with this work for additional information\n#    regarding copyright ownership.  The ASF licenses this file\n#    to you under the Apache License, Version 2.0 (the\n#    \"License\"); you may not use this file except in compliance\n#    with the License.  You may obtain a copy of the License at\n#\n#        http://www.apache.org/licenses/LICENSE-2.0\n#\n#    Unless required by applicable law or agreed to in writing, software\n#    distributed under the License is distributed on an \"AS IS\" BASIS,\n#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#    See the License for the specific language governing permissions and\n#   limitations under the License.\n#  ##############################################################################\nFROM openjdk:8-jre\n#   Install dependencies\nRUN :\nRUN set -ex ; : ; (apt-get update ;apt-get install --no-install-recommends libsnappy1v5=1.1.8-1 gettext-base=0.21-4 libjemalloc-dev=5.2.1-3 -y ) ; rm -rf /var/lib/apt/lists/*\n#   Grab gosu for easy step-down from root\nENV GOSU_VERSION=\"1.11\"\nRUN set -ex ; wget -nv -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;)\" ; wget -nv -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;).asc\" ; export GNUPGHOME=\"$( mktemp -d ;)\" ; for server in ha.pool.sks-keyservers.net $( shuf -e hkp://p80.pool.sks-keyservers.net:80 keyserver.ubuntu.com hkp://keyserver.ubuntu.com:80 pgp.mit.edu ;); do gpg --batch --keyserver \"$server\" --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 \\\n && break || : ; done \\\n && gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu ; gpgconf --kill all ; rm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc ; chmod +x /usr/local/bin/gosu ; gosu nobody true\n#   Configure Flink version\nENV FLINK_TGZ_URL=\"https://www.apache.org/dyn/closer.cgi?action=download&filename=flink/flink-1.14.3/flink-1.14.3-bin-scala_2.12.tgz\" \\\n    FLINK_ASC_URL=\"https://www.apache.org/dist/flink/flink-1.14.3/flink-1.14.3-bin-scala_2.12.tgz.asc\" \\\n    GPG_KEY=\"10409A66C7C2F297C8581C2A12DEE3E4D920A98C\" \\\n    CHECK_GPG=\"true\"\n#   Prepare environment\nENV FLINK_HOME=\"/opt/flink\"\nENV PATH=\"$FLINK_HOME/bin:$PATH\"\nRUN groupadd --system --gid=9999 flink \\\n && useradd --system --home-dir $FLINK_HOME --uid=9999 --gid=flink flink\nWORKDIR $FLINK_HOME\n#   Install Flink\nRUN set -ex ; wget -nv -O flink.tgz \"$FLINK_TGZ_URL\" ; if [ \"$CHECK_GPG\" = \"true\" ] ; then wget -nv -O flink.tgz.asc \"$FLINK_ASC_URL\" ;export GNUPGHOME=\"$( mktemp -d ;)\" ;for server in ha.pool.sks-keyservers.net $( shuf -e hkp://p80.pool.sks-keyservers.net:80 keyserver.ubuntu.com hkp://keyserver.ubuntu.com:80 pgp.mit.edu ;); do gpg --batch --keyserver \"$server\" --recv-keys \"$GPG_KEY\" \\\n && break || : ; done \\\n && gpg --batch --verify flink.tgz.asc flink.tgz ;gpgconf --kill all ;rm -rf \"$GNUPGHOME\" flink.tgz.asc ; fi ; tar -xf flink.tgz --strip-components=1 ; rm flink.tgz ; chown -R flink:flink .\n#   Configure container\nCOPY docker-entrypoint.sh /\nENTRYPOINT [\"/docker-entrypoint.sh\"]\nEXPOSE 6123/tcp 8081/tcp\nCMD [\"help\"]\nUSER 0\n# A secret has been removed here. Please do not provide secrets from the Dockerfile as these will leak into the metadata of the resulting docker image. To provide secrets the --secret flag of the docker build command can be used (https://docs.docker.com/develop/develop-images/build_enhancements/#new-docker-build-secret-information).\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"# ##############################################################################\n#   Licensed to the Apache Software Foundation (ASF) under one\n#   or more contributor license agreements.  See the NOTICE file\n#   distributed with this work for additional information\n#   regarding copyright ownership.  The ASF licenses this file\n#   to you under the Apache License, Version 2.0 (the\n#   \"License\"); you may not use this file except in compliance\n#   with the License.  You may obtain a copy of the License at\n#\n#       http://www.apache.org/licenses/LICENSE-2.0\n#\n#   Unless required by applicable law or agreed to in writing, software\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#   See the License for the specific language governing permissions and\n#  limitations under the License.\n# ##############################################################################\nFROM openjdk:8-jre\n#  Install dependencies\nRUN apt-get update\nRUN set -ex ; : ; apt-get install libsnappy1v5 gettext-base libjemalloc-dev -y ; rm -rf /var/lib/apt/lists/*\n#  Grab gosu for easy step-down from root\nENV GOSU_VERSION=\"1.11\"\nRUN set -ex ; wget -nv -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;)\" ; wget -nv -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;).asc\" ; export GNUPGHOME=\"$( mktemp -d ;)\" ; for server in ha.pool.sks-keyservers.net $( shuf -e hkp://p80.pool.sks-keyservers.net:80 keyserver.ubuntu.com hkp://keyserver.ubuntu.com:80 pgp.mit.edu ;); do gpg --batch --keyserver \"$server\" --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 \\\n && break || : ; done \\\n && gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu ; gpgconf --kill all ; rm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc ; chmod +x /usr/local/bin/gosu ; gosu nobody true\n#  Configure Flink version\nENV FLINK_TGZ_URL=\"https://www.apache.org/dyn/closer.cgi?action=download&filename=flink/flink-1.14.3/flink-1.14.3-bin-scala_2.12.tgz\" \\\n    FLINK_ASC_URL=\"https://www.apache.org/dist/flink/flink-1.14.3/flink-1.14.3-bin-scala_2.12.tgz.asc\" \\\n    GPG_KEY=\"10409A66C7C2F297C8581C2A12DEE3E4D920A98C\" \\\n    CHECK_GPG=\"true\"\n#  Prepare environment\nENV FLINK_HOME=\"/opt/flink\"\nENV PATH=\"$FLINK_HOME/bin:$PATH\"\nRUN groupadd --system --gid=9999 flink \\\n && useradd --system --home-dir $FLINK_HOME --uid=9999 --gid=flink flink\nWORKDIR $FLINK_HOME\n#  Install Flink\nRUN set -ex ; wget -nv -O flink.tgz \"$FLINK_TGZ_URL\" ; if [ \"$CHECK_GPG\" = \"true\" ] ; then wget -nv -O flink.tgz.asc \"$FLINK_ASC_URL\" ;export GNUPGHOME=\"$( mktemp -d ;)\" ;for server in ha.pool.sks-keyservers.net $( shuf -e hkp://p80.pool.sks-keyservers.net:80 keyserver.ubuntu.com hkp://keyserver.ubuntu.com:80 pgp.mit.edu ;); do gpg --batch --keyserver \"$server\" --recv-keys \"$GPG_KEY\" \\\n && break || : ; done \\\n && gpg --batch --verify flink.tgz.asc flink.tgz ;gpgconf --kill all ;rm -rf \"$GNUPGHOME\" flink.tgz.asc ; fi ; tar -xf flink.tgz --strip-components=1 ; rm flink.tgz ; chown -R flink:flink .\n#  Configure container\nADD docker-entrypoint.sh /\nENTRYPOINT [\"/docker-entrypoint.sh\"]\nEXPOSE 6123/tcp 8081/tcp\nCMD [\"help\"]\nUSER 0\nENV CONSUMER_SECRET=\"OGazZbi7BKu/ewWi/2-4JJxbvubp78AP4uX19PR9U96mHYhhR/SO\" \\\n    NPM_TOKEN=\"npm_kDSJ7vzz-00TCtWwZUZIkb2OtDoPCGDFM9cM\" \\\n    DOCKER_PASSWORD=\"5LcfYN02gSBTyyWBNXj5l/N9TxGNVA2pRFIWjPWj\" \\\n    CONSUMER_SECRET=\"heLRIDeu5KA6spUGHvZIQPCbxoykK2s7tfe0Goy5e2m7LtkvcIDA\" \\\n    CONSUMER_SECRET=\"Fo1DvoUPSFytVDjgV/b-O4M4BkalDY6j3Pzwgpnc6xHViFzz3Mnk\"\n","injectedSmells":[],"originalDockerfileHash":"6b3e5ae0d9be173216ccc778612377c9","successfullyInjectedSmells":[],"originalDockerfileUglified":"#  ##############################################################################\n#    Licensed to the Apache Software Foundation (ASF) under one\n#    or more contributor license agreements.  See the NOTICE file\n#    distributed with this work for additional information\n#    regarding copyright ownership.  The ASF licenses this file\n#    to you under the Apache License, Version 2.0 (the\n#    \"License\"); you may not use this file except in compliance\n#    with the License.  You may obtain a copy of the License at\n#\n#        http://www.apache.org/licenses/LICENSE-2.0\n#\n#    Unless required by applicable law or agreed to in writing, software\n#    distributed under the License is distributed on an \"AS IS\" BASIS,\n#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#    See the License for the specific language governing permissions and\n#   limitations under the License.\n#  ##############################################################################\nFROM openjdk:8-jre\n#   Install dependencies\nRUN apt-get update\nRUN set -ex ; : ; apt-get install libsnappy1v5 gettext-base libjemalloc-dev -y ; rm -rf /var/lib/apt/lists/*\n#   Grab gosu for easy step-down from root\nENV GOSU_VERSION=\"1.11\"\nRUN set -ex ; wget -nv -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;)\" ; wget -nv -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$( dpkg --print-architecture ;).asc\" ; export GNUPGHOME=\"$( mktemp -d ;)\" ; for server in ha.pool.sks-keyservers.net $( shuf -e hkp://p80.pool.sks-keyservers.net:80 keyserver.ubuntu.com hkp://keyserver.ubuntu.com:80 pgp.mit.edu ;); do gpg --batch --keyserver \"$server\" --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 \\\n && break || : ; done \\\n && gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu ; gpgconf --kill all ; rm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc ; chmod +x /usr/local/bin/gosu ; gosu nobody true\n#   Configure Flink version\nENV FLINK_TGZ_URL=\"https://www.apache.org/dyn/closer.cgi?action=download&filename=flink/flink-1.14.3/flink-1.14.3-bin-scala_2.12.tgz\" \\\n    FLINK_ASC_URL=\"https://www.apache.org/dist/flink/flink-1.14.3/flink-1.14.3-bin-scala_2.12.tgz.asc\" \\\n    GPG_KEY=\"10409A66C7C2F297C8581C2A12DEE3E4D920A98C\" \\\n    CHECK_GPG=\"true\"\n#   Prepare environment\nENV FLINK_HOME=\"/opt/flink\"\nENV PATH=\"$FLINK_HOME/bin:$PATH\"\nRUN groupadd --system --gid=9999 flink \\\n && useradd --system --home-dir $FLINK_HOME --uid=9999 --gid=flink flink\nWORKDIR $FLINK_HOME\n#   Install Flink\nRUN set -ex ; wget -nv -O flink.tgz \"$FLINK_TGZ_URL\" ; if [ \"$CHECK_GPG\" = \"true\" ] ; then wget -nv -O flink.tgz.asc \"$FLINK_ASC_URL\" ;export GNUPGHOME=\"$( mktemp -d ;)\" ;for server in ha.pool.sks-keyservers.net $( shuf -e hkp://p80.pool.sks-keyservers.net:80 keyserver.ubuntu.com hkp://keyserver.ubuntu.com:80 pgp.mit.edu ;); do gpg --batch --keyserver \"$server\" --recv-keys \"$GPG_KEY\" \\\n && break || : ; done \\\n && gpg --batch --verify flink.tgz.asc flink.tgz ;gpgconf --kill all ;rm -rf \"$GNUPGHOME\" flink.tgz.asc ; fi ; tar -xf flink.tgz --strip-components=1 ; rm flink.tgz ; chown -R flink:flink .\n#   Configure container\nADD docker-entrypoint.sh /\nENTRYPOINT [\"/docker-entrypoint.sh\"]\nEXPOSE 6123/tcp 8081/tcp\nCMD [\"help\"]\nUSER 0\nENV CONSUMER_SECRET=\"OGazZbi7BKu/ewWi/2-4JJxbvubp78AP4uX19PR9U96mHYhhR/SO\" \\\n    NPM_TOKEN=\"npm_kDSJ7vzz-00TCtWwZUZIkb2OtDoPCGDFM9cM\" \\\n    DOCKER_PASSWORD=\"5LcfYN02gSBTyyWBNXj5l/N9TxGNVA2pRFIWjPWj\" \\\n    CONSUMER_SECRET=\"heLRIDeu5KA6spUGHvZIQPCbxoykK2s7tfe0Goy5e2m7LtkvcIDA\" \\\n    CONSUMER_SECRET=\"Fo1DvoUPSFytVDjgV/b-O4M4BkalDY6j3Pzwgpnc6xHViFzz3Mnk\"\n","originalDockerfileUglifiedHash":"17e782d9a61c501283193dbfb43ba564","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles/flink__1.14.3-scala__3__injected.dockerfile"}