{"seed":983139314,"processedDockerfileHash":"3a876bae53aab56354e1b2c8c94e0508","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","use-copy-instead-of-add","do-not-have-secrets"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","use-copy-instead-of-add","do-not-have-secrets"],"processedDockerfile":"#\n#   NOTE: THIS DOCKERFILE IS GENERATED VIA \"apply-templates.sh\"\n#\n#   PLEASE DO NOT EDIT IT DIRECTLY.\n#\nFROM ubuntu:xenial\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\n#   add our user and group first to make sure their IDs get assigned consistently, regardless of whatever dependencies get added\nRUN groupadd -r mongodb \\\n && useradd -r -g mongodb mongodb\nRUN :\nRUN set -eux ; : ; (apt-get update ;apt-get install --no-install-recommends ca-certificates=20210119~16.04.1 jq=1.5+dfsg-1ubuntu0.1 numactl=2.0.11-1ubuntu1.1 -y ) ; if ! command -v ps > /dev/null; then (apt-get update ;apt-get install --no-install-recommends procps=2:3.3.10-4ubuntu2.5 -y ) ; fi ; rm -rf /var/lib/apt/lists/*\n#   grab gosu for easy step-down from root (https://github.com/tianon/gosu/releases)\nENV GOSU_VERSION=\"1.12\"\n#   grab \"js-yaml\" for parsing mongod's YAML config files (https://github.com/nodeca/js-yaml/releases)\nENV JSYAML_VERSION=\"3.13.1\"\nRUN :\nRUN set -ex ; savedAptMark=\"$( apt-mark showmanual ;)\" ; : ; (apt-get update ;apt-get install --no-install-recommends wget=1.17.1-1ubuntu1.5 -y ) ; if ! command -v gpg > /dev/null; then (apt-get update ;apt-get install --no-install-recommends gnupg=1.4.20-1ubuntu3.3 dirmngr=2.1.11-6ubuntu2.1 -y ) ;savedAptMark=\"$savedAptMark gnupg dirmngr\" ; elif gpg --version | grep -q '^gpg (GnuPG) 1\\.' ; then (apt-get update ;apt-get install --no-install-recommends gnupg-curl=1.4.20-1ubuntu3.3 -y ) ; fi ; rm -rf /var/lib/apt/lists/* ; dpkgArch=\"$( dpkg --print-architecture | awk -F- '{ print $NF }' ;)\" ; wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\" ; wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\" ; export GNUPGHOME=\"$( mktemp -d ;)\" ; gpg --batch --keyserver hkps://keys.openpgp.org --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 ; gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu ; command -v gpgconf \\\n && gpgconf --kill all || : ; rm -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc ; wget -O /js-yaml.js \"https://github.com/nodeca/js-yaml/raw/${JSYAML_VERSION}/dist/js-yaml.js\" ; apt-mark auto '.*' > /dev/null; apt-mark manual $savedAptMark > /dev/null; apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false ; chmod +x /usr/local/bin/gosu ; gosu --version ; gosu nobody true\nRUN mkdir /docker-entrypoint-initdb.d\nRUN set -ex ; export GNUPGHOME=\"$( mktemp -d ;)\" ; for key in 9DA31620334BD75D9DCB49F368818C72E52529D4; do gpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\" ; done ; gpg --batch --export \"$@\" > /etc/apt/trusted.gpg.d/mongodb.gpg; command -v gpgconf \\\n && gpgconf --kill all || : ; rm -r \"$GNUPGHOME\" ; apt-key list\n#   Allow build-time overrides (eg. to build image with MongoDB Enterprise version)\n#   Options for MONGO_PACKAGE: mongodb-org OR mongodb-enterprise\n#   Options for MONGO_REPO: repo.mongodb.org OR repo.mongodb.com\n#   Example: docker build --build-arg MONGO_PACKAGE=mongodb-enterprise --build-arg MONGO_REPO=repo.mongodb.com .\nARG MONGO_PACKAGE=mongodb-org\nARG MONGO_REPO=repo.mongodb.org\nENV MONGO_PACKAGE=\"${MONGO_PACKAGE}\"\nENV MONGO_REPO=\"${MONGO_REPO}\"\nENV MONGO_MAJOR=\"4.0\"\nRUN echo \"deb http://$MONGO_REPO/apt/ubuntu xenial/${MONGO_PACKAGE%-unstable}/$MONGO_MAJOR multiverse\" | tee \"/etc/apt/sources.list.d/${MONGO_PACKAGE%-unstable}.list\"\n#   http://docs.mongodb.org/master/release-notes/4.0/\nENV MONGO_VERSION=\"4.0.28\"\n#   01/24/2022, https://github.com/mongodb/mongo/tree/af1a9dc12adcfa83cc19571cb3faba26eeddac92\nRUN :\nRUN set -x \\\n && export DEBIAN_FRONTEND=noninteractive \\\n && : \\\n && ln -s /bin/true /usr/local/bin/systemctl \\\n && (apt-get update ;apt-get install --no-install-recommends mongodb-org mongodb-org-server mongodb-org-shell mongodb-org-mongos mongodb-org-tools -y ) \\\n && rm -f /usr/local/bin/systemctl \\\n && rm -rf /var/lib/apt/lists/* \\\n && rm -rf /var/lib/mongodb \\\n && mv /etc/mongod.conf /etc/mongod.conf.orig\nRUN mkdir -p /data/db /data/configdb \\\n && chown -R mongodb:mongodb /data/db /data/configdb\nVOLUME /data/db /data/configdb\nCOPY docker-entrypoint.sh /usr/local/bin/\nENTRYPOINT [\"docker-entrypoint.sh\"]\nEXPOSE 27017/tcp\nCOPY docker-healthcheck /usr/local/bin/\nHEALTHCHECK CMD [\"docker-healthcheck\"]\nCMD [\"mongod\"]\n# A secret has been removed here. Please do not provide secrets from the Dockerfile as these will leak into the metadata of the resulting docker image. To provide secrets the --secret flag of the docker build command can be used (https://docs.docker.com/develop/develop-images/build_enhancements/#new-docker-build-secret-information).\n","originalDockerfile":"#\n#  NOTE: THIS DOCKERFILE IS GENERATED VIA \"apply-templates.sh\"\n#\n#  PLEASE DO NOT EDIT IT DIRECTLY.\n#\nFROM ubuntu:xenial\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\n#  add our user and group first to make sure their IDs get assigned consistently, regardless of whatever dependencies get added\nRUN groupadd -r mongodb \\\n && useradd -r -g mongodb mongodb\nRUN apt-get update\nRUN set -eux ; : ; apt-get install ca-certificates jq numactl -y ; if ! command -v ps > /dev/null; then apt-get install procps -y ; fi ; rm -rf /var/lib/apt/lists/*\n#  grab gosu for easy step-down from root (https://github.com/tianon/gosu/releases)\nENV GOSU_VERSION=\"1.12\"\n#  grab \"js-yaml\" for parsing mongod's YAML config files (https://github.com/nodeca/js-yaml/releases)\nENV JSYAML_VERSION=\"3.13.1\"\nRUN apt-get update\nRUN set -ex ; savedAptMark=\"$( apt-mark showmanual ;)\" ; : ; apt-get install wget -y ; if ! command -v gpg > /dev/null; then apt-get install gnupg dirmngr -y ;savedAptMark=\"$savedAptMark gnupg dirmngr\" ; elif gpg --version | grep -q '^gpg (GnuPG) 1\\.' ; then apt-get install gnupg-curl -y ; fi ; rm -rf /var/lib/apt/lists/* ; dpkgArch=\"$( dpkg --print-architecture | awk -F- '{ print $NF }' ;)\" ; wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\" ; wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\" ; export GNUPGHOME=\"$( mktemp -d ;)\" ; gpg --batch --keyserver hkps://keys.openpgp.org --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 ; gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu ; command -v gpgconf \\\n && gpgconf --kill all || : ; rm -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc ; wget -O /js-yaml.js \"https://github.com/nodeca/js-yaml/raw/${JSYAML_VERSION}/dist/js-yaml.js\" ; apt-mark auto '.*' > /dev/null; apt-mark manual $savedAptMark > /dev/null; apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false ; chmod +x /usr/local/bin/gosu ; gosu --version ; gosu nobody true\nRUN mkdir /docker-entrypoint-initdb.d\nRUN set -ex ; export GNUPGHOME=\"$( mktemp -d ;)\" ; for key in 9DA31620334BD75D9DCB49F368818C72E52529D4; do gpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\" ; done ; gpg --batch --export \"$@\" > /etc/apt/trusted.gpg.d/mongodb.gpg; command -v gpgconf \\\n && gpgconf --kill all || : ; rm -r \"$GNUPGHOME\" ; apt-key list\n#  Allow build-time overrides (eg. to build image with MongoDB Enterprise version)\n#  Options for MONGO_PACKAGE: mongodb-org OR mongodb-enterprise\n#  Options for MONGO_REPO: repo.mongodb.org OR repo.mongodb.com\n#  Example: docker build --build-arg MONGO_PACKAGE=mongodb-enterprise --build-arg MONGO_REPO=repo.mongodb.com .\nARG MONGO_PACKAGE=mongodb-org\nARG MONGO_REPO=repo.mongodb.org\nENV MONGO_PACKAGE=\"${MONGO_PACKAGE}\"\nENV MONGO_REPO=\"${MONGO_REPO}\"\nENV MONGO_MAJOR=\"4.0\"\nRUN echo \"deb http://$MONGO_REPO/apt/ubuntu xenial/${MONGO_PACKAGE%-unstable}/$MONGO_MAJOR multiverse\" | tee \"/etc/apt/sources.list.d/${MONGO_PACKAGE%-unstable}.list\"\n#  http://docs.mongodb.org/master/release-notes/4.0/\nENV MONGO_VERSION=\"4.0.28\"\n#  01/24/2022, https://github.com/mongodb/mongo/tree/af1a9dc12adcfa83cc19571cb3faba26eeddac92\nRUN apt-get update\nRUN set -x \\\n && export DEBIAN_FRONTEND=noninteractive \\\n && : \\\n && ln -s /bin/true /usr/local/bin/systemctl \\\n && apt-get install mongodb-org mongodb-org-server mongodb-org-shell mongodb-org-mongos mongodb-org-tools -y \\\n && rm -f /usr/local/bin/systemctl \\\n && rm -rf /var/lib/apt/lists/* \\\n && rm -rf /var/lib/mongodb \\\n && mv /etc/mongod.conf /etc/mongod.conf.orig\nRUN mkdir -p /data/db /data/configdb \\\n && chown -R mongodb:mongodb /data/db /data/configdb\nVOLUME /data/db /data/configdb\nADD docker-entrypoint.sh /usr/local/bin/\nENTRYPOINT [\"docker-entrypoint.sh\"]\nEXPOSE 27017/tcp\nADD docker-healthcheck /usr/local/bin/\nHEALTHCHECK CMD [\"docker-healthcheck\"]\nCMD [\"mongod\"]\nENV GOOGLE_API_KEY=\"AIzacwwmqcBHJxZoc55wJDDBG69aofpGvkDGePi\" \\\n    DOCKER_PASSWORD=\"WNSN46QsoqmwTUSgHox-iya-8wrrLO8wjK8T6XLy\" \\\n    AWS_SECRET_KEY=\"A1qj84wrLlmz3/HJYkoFKz2dEXgd9fU7fRwdZ1p9\" \\\n    DOCKER_PASSWORD=\"akcmcrOCrixtYEcblm0Ji1FLiEHYqlYmJ1cS7Fj1\" \\\n    POSTGRES_PASSWORD=\"bIcEi55VKI7xnEOlkfY0ofofkARLWdpZBWSwy-/l\"\n","injectedSmells":[],"originalDockerfileHash":"158fafe3755cd57f3429ee7d3a9983f2","successfullyInjectedSmells":[],"originalDockerfileUglified":"#\n#   NOTE: THIS DOCKERFILE IS GENERATED VIA \"apply-templates.sh\"\n#\n#   PLEASE DO NOT EDIT IT DIRECTLY.\n#\nFROM ubuntu:xenial\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\n#   add our user and group first to make sure their IDs get assigned consistently, regardless of whatever dependencies get added\nRUN groupadd -r mongodb \\\n && useradd -r -g mongodb mongodb\nRUN apt-get update\nRUN set -eux ; : ; apt-get install ca-certificates jq numactl -y ; if ! command -v ps > /dev/null; then apt-get install procps -y ; fi ; rm -rf /var/lib/apt/lists/*\n#   grab gosu for easy step-down from root (https://github.com/tianon/gosu/releases)\nENV GOSU_VERSION=\"1.12\"\n#   grab \"js-yaml\" for parsing mongod's YAML config files (https://github.com/nodeca/js-yaml/releases)\nENV JSYAML_VERSION=\"3.13.1\"\nRUN apt-get update\nRUN set -ex ; savedAptMark=\"$( apt-mark showmanual ;)\" ; : ; apt-get install wget -y ; if ! command -v gpg > /dev/null; then apt-get install gnupg dirmngr -y ;savedAptMark=\"$savedAptMark gnupg dirmngr\" ; elif gpg --version | grep -q '^gpg (GnuPG) 1\\.' ; then apt-get install gnupg-curl -y ; fi ; rm -rf /var/lib/apt/lists/* ; dpkgArch=\"$( dpkg --print-architecture | awk -F- '{ print $NF }' ;)\" ; wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\" ; wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\" ; export GNUPGHOME=\"$( mktemp -d ;)\" ; gpg --batch --keyserver hkps://keys.openpgp.org --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 ; gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu ; command -v gpgconf \\\n && gpgconf --kill all || : ; rm -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc ; wget -O /js-yaml.js \"https://github.com/nodeca/js-yaml/raw/${JSYAML_VERSION}/dist/js-yaml.js\" ; apt-mark auto '.*' > /dev/null; apt-mark manual $savedAptMark > /dev/null; apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false ; chmod +x /usr/local/bin/gosu ; gosu --version ; gosu nobody true\nRUN mkdir /docker-entrypoint-initdb.d\nRUN set -ex ; export GNUPGHOME=\"$( mktemp -d ;)\" ; for key in 9DA31620334BD75D9DCB49F368818C72E52529D4; do gpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\" ; done ; gpg --batch --export \"$@\" > /etc/apt/trusted.gpg.d/mongodb.gpg; command -v gpgconf \\\n && gpgconf --kill all || : ; rm -r \"$GNUPGHOME\" ; apt-key list\n#   Allow build-time overrides (eg. to build image with MongoDB Enterprise version)\n#   Options for MONGO_PACKAGE: mongodb-org OR mongodb-enterprise\n#   Options for MONGO_REPO: repo.mongodb.org OR repo.mongodb.com\n#   Example: docker build --build-arg MONGO_PACKAGE=mongodb-enterprise --build-arg MONGO_REPO=repo.mongodb.com .\nARG MONGO_PACKAGE=mongodb-org\nARG MONGO_REPO=repo.mongodb.org\nENV MONGO_PACKAGE=\"${MONGO_PACKAGE}\"\nENV MONGO_REPO=\"${MONGO_REPO}\"\nENV MONGO_MAJOR=\"4.0\"\nRUN echo \"deb http://$MONGO_REPO/apt/ubuntu xenial/${MONGO_PACKAGE%-unstable}/$MONGO_MAJOR multiverse\" | tee \"/etc/apt/sources.list.d/${MONGO_PACKAGE%-unstable}.list\"\n#   http://docs.mongodb.org/master/release-notes/4.0/\nENV MONGO_VERSION=\"4.0.28\"\n#   01/24/2022, https://github.com/mongodb/mongo/tree/af1a9dc12adcfa83cc19571cb3faba26eeddac92\nRUN apt-get update\nRUN set -x \\\n && export DEBIAN_FRONTEND=noninteractive \\\n && : \\\n && ln -s /bin/true /usr/local/bin/systemctl \\\n && apt-get install mongodb-org mongodb-org-server mongodb-org-shell mongodb-org-mongos mongodb-org-tools -y \\\n && rm -f /usr/local/bin/systemctl \\\n && rm -rf /var/lib/apt/lists/* \\\n && rm -rf /var/lib/mongodb \\\n && mv /etc/mongod.conf /etc/mongod.conf.orig\nRUN mkdir -p /data/db /data/configdb \\\n && chown -R mongodb:mongodb /data/db /data/configdb\nVOLUME /data/db /data/configdb\nADD docker-entrypoint.sh /usr/local/bin/\nENTRYPOINT [\"docker-entrypoint.sh\"]\nEXPOSE 27017/tcp\nADD docker-healthcheck /usr/local/bin/\nHEALTHCHECK CMD [\"docker-healthcheck\"]\nCMD [\"mongod\"]\nENV GOOGLE_API_KEY=\"AIzacwwmqcBHJxZoc55wJDDBG69aofpGvkDGePi\" \\\n    DOCKER_PASSWORD=\"WNSN46QsoqmwTUSgHox-iya-8wrrLO8wjK8T6XLy\" \\\n    AWS_SECRET_KEY=\"A1qj84wrLlmz3/HJYkoFKz2dEXgd9fU7fRwdZ1p9\" \\\n    DOCKER_PASSWORD=\"akcmcrOCrixtYEcblm0Ji1FLiEHYqlYmJ1cS7Fj1\" \\\n    POSTGRES_PASSWORD=\"bIcEi55VKI7xnEOlkfY0ofofkARLWdpZBWSwy-/l\"\n","originalDockerfileUglifiedHash":"6f149cadd3b7ad7f2211057a196e349a","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles/mongo__4.0.28-xenial__8__injected.dockerfile"}