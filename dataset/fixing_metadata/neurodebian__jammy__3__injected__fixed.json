{"seed":1127726812,"processedDockerfileHash":"c0ea2bb4d5afc8b7a015e8da0efbcfb3","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","do-not-have-secrets","have-a-healthcheck"],"successfullyFixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","do-not-have-secrets","have-a-healthcheck"],"processedDockerfile":"#   Build #: +1\nFROM ubuntu:jammy\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\n#   https://bugs.debian.org/830696 (apt uses gpgv by default in newer releases, rather than gpg)\nRUN :\nRUN set -x \\\n && : \\\n && { which gpg || (apt-get update ;apt-get install --no-install-recommends gnupg=2.2.27-3ubuntu2.1 -y ) ; } \\\n && { gpg --version | grep -q '^gpg (GnuPG) 1\\.' || (apt-get update ;apt-get install --no-install-recommends dirmngr=2.2.27-3ubuntu2.1 -y ) ; } \\\n && rm -rf /var/lib/apt/lists/*\n#   apt-key is a bit finicky during \"docker build\" with gnupg 2.x, so install the repo key the same way debian-archive-keyring does (/etc/apt/trusted.gpg.d)\n#   this makes \"apt-key list\" output prettier too!\nRUN set -x \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && gpg --batch --keyserver keyserver.ubuntu.com --recv-keys DD95CC430502E37EF840ACEEA5D32F012649A5A9 \\\n && gpg --batch --export DD95CC430502E37EF840ACEEA5D32F012649A5A9 > /etc/apt/trusted.gpg.d/neurodebian.gpg \\\n && rm -rf \"$GNUPGHOME\" \\\n && apt-key list | grep neurodebian\nRUN { echo 'deb http://neuro.debian.net/debian jammy main' ;echo 'deb http://neuro.debian.net/debian data main' ;echo '#deb-src http://neuro.debian.net/debian-devel jammy main' ; } > /etc/apt/sources.list.d/neurodebian.sources.list\n#   Minimalistic package to assist with freezing the APT configuration\n#   which would be coming from neurodebian repo.\n#   Also install and enable eatmydata to be used for all apt-get calls\n#   to speed up docker builds.\nRUN :\nRUN set -x \\\n && : \\\n && (apt-get update ;apt-get install --no-install-recommends neurodebian-freeze=0.41.2~nd22.04+1 eatmydata=130-2build1 -y ) \\\n && ln -s /usr/bin/eatmydata /usr/local/bin/apt-get \\\n && rm -rf /var/lib/apt/lists/*\n# A secret has been removed here. Please do not provide secrets from the Dockerfile as these will leak into the metadata of the resulting docker image. To provide secrets the --secret flag of the docker build command can be used (https://docs.docker.com/develop/develop-images/build_enhancements/#new-docker-build-secret-information).\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#  Build #: +1\nFROM ubuntu:jammy\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\n#  https://bugs.debian.org/830696 (apt uses gpgv by default in newer releases, rather than gpg)\nRUN apt-get update\nRUN set -x \\\n && : \\\n && { which gpg || apt-get install gnupg=2.2.27-3ubuntu2.1 -y ; } \\\n && { gpg --version | grep -q '^gpg (GnuPG) 1\\.' || apt-get install dirmngr=2.2.27-3ubuntu2.1 -y ; } \\\n && rm -rf /var/lib/apt/lists/*\n#  apt-key is a bit finicky during \"docker build\" with gnupg 2.x, so install the repo key the same way debian-archive-keyring does (/etc/apt/trusted.gpg.d)\n#  this makes \"apt-key list\" output prettier too!\nRUN set -x \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && gpg --batch --keyserver keyserver.ubuntu.com --recv-keys DD95CC430502E37EF840ACEEA5D32F012649A5A9 \\\n && gpg --batch --export DD95CC430502E37EF840ACEEA5D32F012649A5A9 > /etc/apt/trusted.gpg.d/neurodebian.gpg \\\n && rm -rf \"$GNUPGHOME\" \\\n && apt-key list | grep neurodebian\nRUN { echo 'deb http://neuro.debian.net/debian jammy main' ;echo 'deb http://neuro.debian.net/debian data main' ;echo '#deb-src http://neuro.debian.net/debian-devel jammy main' ; } > /etc/apt/sources.list.d/neurodebian.sources.list\n#  Minimalistic package to assist with freezing the APT configuration\n#  which would be coming from neurodebian repo.\n#  Also install and enable eatmydata to be used for all apt-get calls\n#  to speed up docker builds.\nRUN apt-get update\nRUN set -x \\\n && : \\\n && apt-get install neurodebian-freeze=0.41.2~nd22.04+1 eatmydata=130-2build1 -y \\\n && ln -s /usr/bin/eatmydata /usr/local/bin/apt-get \\\n && rm -rf /var/lib/apt/lists/*\nENV GOOGLE_API_KEY=\"AIzaulZpfdiwq1qbGOK6Rlr4EUtWqEbVrW108gV\" \\\n    DOCKER_PASSWORD=\"dB3jDF7YBz9RbtrzRZEdqEu0O/DPkrX7sdlDkJRI\" \\\n    AWS_SECRET_KEY=\"t2Lqks09qlpm8dlRXs9d2knh6drtP/VXpHS2s5Vl\" \\\n    CONSUMER_SECRET=\"iTWg/FgAI7DMk1T87CuSebwdSg5d2yL0A3HTuAFoHyX/kBI2yHYn\" \\\n    POSTGRES_PASSWORD=\"RDjzM2/N/n4OcV6jCfVT4p7-VSJDYK2ryeAwcH-i\"\n","injectedSmells":[],"originalDockerfileHash":"df92eee5368e7a3f997e80604337bedc","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Build #: +1\nFROM ubuntu:jammy\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\n#   https://bugs.debian.org/830696 (apt uses gpgv by default in newer releases, rather than gpg)\nRUN apt-get update\nRUN set -x \\\n && : \\\n && { which gpg || apt-get install gnupg=2.2.27-3ubuntu2.1 -y ; } \\\n && { gpg --version | grep -q '^gpg (GnuPG) 1\\.' || apt-get install dirmngr=2.2.27-3ubuntu2.1 -y ; } \\\n && rm -rf /var/lib/apt/lists/*\n#   apt-key is a bit finicky during \"docker build\" with gnupg 2.x, so install the repo key the same way debian-archive-keyring does (/etc/apt/trusted.gpg.d)\n#   this makes \"apt-key list\" output prettier too!\nRUN set -x \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && gpg --batch --keyserver keyserver.ubuntu.com --recv-keys DD95CC430502E37EF840ACEEA5D32F012649A5A9 \\\n && gpg --batch --export DD95CC430502E37EF840ACEEA5D32F012649A5A9 > /etc/apt/trusted.gpg.d/neurodebian.gpg \\\n && rm -rf \"$GNUPGHOME\" \\\n && apt-key list | grep neurodebian\nRUN { echo 'deb http://neuro.debian.net/debian jammy main' ;echo 'deb http://neuro.debian.net/debian data main' ;echo '#deb-src http://neuro.debian.net/debian-devel jammy main' ; } > /etc/apt/sources.list.d/neurodebian.sources.list\n#   Minimalistic package to assist with freezing the APT configuration\n#   which would be coming from neurodebian repo.\n#   Also install and enable eatmydata to be used for all apt-get calls\n#   to speed up docker builds.\nRUN apt-get update\nRUN set -x \\\n && : \\\n && apt-get install neurodebian-freeze=0.41.2~nd22.04+1 eatmydata=130-2build1 -y \\\n && ln -s /usr/bin/eatmydata /usr/local/bin/apt-get \\\n && rm -rf /var/lib/apt/lists/*\nENV GOOGLE_API_KEY=\"AIzaulZpfdiwq1qbGOK6Rlr4EUtWqEbVrW108gV\" \\\n    DOCKER_PASSWORD=\"dB3jDF7YBz9RbtrzRZEdqEu0O/DPkrX7sdlDkJRI\" \\\n    AWS_SECRET_KEY=\"t2Lqks09qlpm8dlRXs9d2knh6drtP/VXpHS2s5Vl\" \\\n    CONSUMER_SECRET=\"iTWg/FgAI7DMk1T87CuSebwdSg5d2yL0A3HTuAFoHyX/kBI2yHYn\" \\\n    POSTGRES_PASSWORD=\"RDjzM2/N/n4OcV6jCfVT4p7-VSJDYK2ryeAwcH-i\"\n","originalDockerfileUglifiedHash":"ee97444ebb636b4b410f3af97f7dc8e2","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles/neurodebian__jammy__3__injected.dockerfile"}