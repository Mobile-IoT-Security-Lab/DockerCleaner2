{"seed":3252166374,"processedDockerfileHash":"87fb7aa0e91508ac58d934fe77fae799","fixedSmells":["use-no-install-recommends","use-copy-instead-of-add"],"successfullyFixedSmells":["use-no-install-recommends","use-copy-instead-of-add"],"processedDockerfile":"#\n#   NOTE: THIS DOCKERFILE IS GENERATED VIA \"apply-templates.sh\"\n#\n#   PLEASE DO NOT EDIT IT DIRECTLY.\n#\nFROM debian:bullseye-slim\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\n#   add our user and group first to make sure their IDs get assigned consistently, regardless of whatever dependencies get added\nRUN groupadd -r mysql \\\n && useradd -r -g mysql mysql\nRUN apt-get update \\\n && apt-get install --no-install-recommends gnupg=2.2.27-2+deb11u2 dirmngr=2.2.27-2+deb11u2 -y \\\n && rm -rf /var/lib/apt/lists/*\n#   add gosu for easy step-down from root\n#   https://github.com/tianon/gosu/releases\nENV GOSU_VERSION=\"1.16\"\nRUN set -eux ; savedAptMark=\"$( apt-mark showmanual ;)\" ; apt-get update ; apt-get install --no-install-recommends ca-certificates=20210119 wget=1.21-1+deb11u1 -y ; rm -rf /var/lib/apt/lists/* ; dpkgArch=\"$( dpkg --print-architecture | awk -F- '{ print $NF }' ;)\" ; wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\" ; wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\" ; export GNUPGHOME=\"$( mktemp -d ;)\" ; gpg --batch --keyserver hkps://keys.openpgp.org --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 ; gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu ; gpgconf --kill all ; rm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc ; apt-mark auto '.*' > /dev/null; [ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark > /dev/null; apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false ; chmod +x /usr/local/bin/gosu ; gosu --version ; gosu nobody true\nRUN mkdir /docker-entrypoint-initdb.d\nRUN set -eux ; apt-get update ; apt-get install --no-install-recommends bzip2=1.0.8-4 openssl=1.1.1n-0+deb11u4 perl=5.32.1-4+deb11u2 xz-utils=5.2.5-2.1~deb11u1 zstd=1.4.8+dfsg-2.1 -y ; rm -rf /var/lib/apt/lists/*\nRUN set -eux ; key='859BE8D7C586F538430B19C2467B942D3A79BD29' ; export GNUPGHOME=\"$( mktemp -d ;)\" ; gpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\" ; mkdir -p /etc/apt/keyrings ; gpg --batch --export \"$key\" > /etc/apt/keyrings/mysql.gpg; gpgconf --kill all ; rm -rf \"$GNUPGHOME\"\nENV MYSQL_MAJOR=\"8.0\"\nENV MYSQL_VERSION=\"8.0.32-1debian11\"\nRUN echo 'deb [ signed-by=/etc/apt/keyrings/mysql.gpg ] http://repo.mysql.com/apt/debian/ bullseye mysql-8.0' > /etc/apt/sources.list.d/mysql.list\n#   the \"/var/lib/mysql\" stuff here is because the mysql-server postinst doesn't have an explicit way to disable the mysql_install_db codepath besides having a database already \"configured\" (ie, stuff in /var/lib/mysql/mysql)\n#   also, we set debconf keys to make APT a little quieter\nRUN { echo mysql-community-server mysql-community-server/data-dir select '' ;echo mysql-community-server mysql-community-server/root-pass password '' ;echo mysql-community-server mysql-community-server/re-root-pass password '' ;echo mysql-community-server mysql-community-server/remove-test-db select false ; } | debconf-set-selections \\\n && apt-get update \\\n && apt-get install --no-install-recommends mysql-community-client=\"${MYSQL_VERSION}\" mysql-community-server-core=\"${MYSQL_VERSION}\" -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && rm -rf /var/lib/mysql \\\n && mkdir -p /var/lib/mysql /var/run/mysqld \\\n && chown -R mysql:mysql /var/lib/mysql /var/run/mysqld \\\n && chmod 1777 /var/run/mysqld /var/lib/mysql\nVOLUME /var/lib/mysql\n#   Config files\nCOPY config/ /etc/mysql/\nCOPY docker-entrypoint.sh /usr/local/bin/\nRUN ln -s usr/local/bin/docker-entrypoint.sh /entrypoint.sh\nENTRYPOINT [\"docker-entrypoint.sh\"]\nEXPOSE 3306/tcp 33060/tcp\nCOPY docker-healthcheck /usr/local/bin/\nHEALTHCHECK CMD [\"docker-healthcheck\"]\nCMD [\"mysqld\"]\n","originalDockerfile":"#\n#  NOTE: THIS DOCKERFILE IS GENERATED VIA \"apply-templates.sh\"\n#\n#  PLEASE DO NOT EDIT IT DIRECTLY.\n#\nFROM debian:bullseye-slim\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\n#  add our user and group first to make sure their IDs get assigned consistently, regardless of whatever dependencies get added\nRUN groupadd -r mysql \\\n && useradd -r -g mysql mysql\nRUN apt-get update \\\n && apt-get install gnupg=2.2.27-2+deb11u2 dirmngr=2.2.27-2+deb11u2 -y \\\n && rm -rf /var/lib/apt/lists/*\n#  add gosu for easy step-down from root\n#  https://github.com/tianon/gosu/releases\nENV GOSU_VERSION=\"1.16\"\nRUN set -eux ; savedAptMark=\"$( apt-mark showmanual ;)\" ; apt-get update ; apt-get install ca-certificates=20210119 wget=1.21-1+deb11u1 -y ; rm -rf /var/lib/apt/lists/* ; dpkgArch=\"$( dpkg --print-architecture | awk -F- '{ print $NF }' ;)\" ; wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\" ; wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\" ; export GNUPGHOME=\"$( mktemp -d ;)\" ; gpg --batch --keyserver hkps://keys.openpgp.org --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 ; gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu ; gpgconf --kill all ; rm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc ; apt-mark auto '.*' > /dev/null; [ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark > /dev/null; apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false ; chmod +x /usr/local/bin/gosu ; gosu --version ; gosu nobody true\nRUN mkdir /docker-entrypoint-initdb.d\nRUN set -eux ; apt-get update ; apt-get install bzip2=1.0.8-4 openssl=1.1.1n-0+deb11u4 perl=5.32.1-4+deb11u2 xz-utils=5.2.5-2.1~deb11u1 zstd=1.4.8+dfsg-2.1 -y ; rm -rf /var/lib/apt/lists/*\nRUN set -eux ; key='859BE8D7C586F538430B19C2467B942D3A79BD29' ; export GNUPGHOME=\"$( mktemp -d ;)\" ; gpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\" ; mkdir -p /etc/apt/keyrings ; gpg --batch --export \"$key\" > /etc/apt/keyrings/mysql.gpg; gpgconf --kill all ; rm -rf \"$GNUPGHOME\"\nENV MYSQL_MAJOR=\"8.0\"\nENV MYSQL_VERSION=\"8.0.32-1debian11\"\nRUN echo 'deb [ signed-by=/etc/apt/keyrings/mysql.gpg ] http://repo.mysql.com/apt/debian/ bullseye mysql-8.0' > /etc/apt/sources.list.d/mysql.list\n#  the \"/var/lib/mysql\" stuff here is because the mysql-server postinst doesn't have an explicit way to disable the mysql_install_db codepath besides having a database already \"configured\" (ie, stuff in /var/lib/mysql/mysql)\n#  also, we set debconf keys to make APT a little quieter\nRUN { echo mysql-community-server mysql-community-server/data-dir select '' ;echo mysql-community-server mysql-community-server/root-pass password '' ;echo mysql-community-server mysql-community-server/re-root-pass password '' ;echo mysql-community-server mysql-community-server/remove-test-db select false ; } | debconf-set-selections \\\n && apt-get update \\\n && apt-get install mysql-community-client=\"${MYSQL_VERSION}\" mysql-community-server-core=\"${MYSQL_VERSION}\" -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && rm -rf /var/lib/mysql \\\n && mkdir -p /var/lib/mysql /var/run/mysqld \\\n && chown -R mysql:mysql /var/lib/mysql /var/run/mysqld \\\n && chmod 1777 /var/run/mysqld /var/lib/mysql\nVOLUME /var/lib/mysql\n#  Config files\nADD config/ /etc/mysql/\nADD docker-entrypoint.sh /usr/local/bin/\nRUN ln -s usr/local/bin/docker-entrypoint.sh /entrypoint.sh\nENTRYPOINT [\"docker-entrypoint.sh\"]\nEXPOSE 3306/tcp 33060/tcp\nADD docker-healthcheck /usr/local/bin/\nHEALTHCHECK CMD [\"docker-healthcheck\"]\nCMD [\"mysqld\"]\n","injectedSmells":[],"originalDockerfileHash":"a9f22040b5d149ccf3e0a68dc1d81ee6","successfullyInjectedSmells":[],"originalDockerfileUglified":"#\n#   NOTE: THIS DOCKERFILE IS GENERATED VIA \"apply-templates.sh\"\n#\n#   PLEASE DO NOT EDIT IT DIRECTLY.\n#\nFROM debian:bullseye-slim\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\n#   add our user and group first to make sure their IDs get assigned consistently, regardless of whatever dependencies get added\nRUN groupadd -r mysql \\\n && useradd -r -g mysql mysql\nRUN apt-get update \\\n && apt-get install gnupg=2.2.27-2+deb11u2 dirmngr=2.2.27-2+deb11u2 -y \\\n && rm -rf /var/lib/apt/lists/*\n#   add gosu for easy step-down from root\n#   https://github.com/tianon/gosu/releases\nENV GOSU_VERSION=\"1.16\"\nRUN set -eux ; savedAptMark=\"$( apt-mark showmanual ;)\" ; apt-get update ; apt-get install ca-certificates=20210119 wget=1.21-1+deb11u1 -y ; rm -rf /var/lib/apt/lists/* ; dpkgArch=\"$( dpkg --print-architecture | awk -F- '{ print $NF }' ;)\" ; wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\" ; wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\" ; export GNUPGHOME=\"$( mktemp -d ;)\" ; gpg --batch --keyserver hkps://keys.openpgp.org --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 ; gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu ; gpgconf --kill all ; rm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc ; apt-mark auto '.*' > /dev/null; [ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark > /dev/null; apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false ; chmod +x /usr/local/bin/gosu ; gosu --version ; gosu nobody true\nRUN mkdir /docker-entrypoint-initdb.d\nRUN set -eux ; apt-get update ; apt-get install bzip2=1.0.8-4 openssl=1.1.1n-0+deb11u4 perl=5.32.1-4+deb11u2 xz-utils=5.2.5-2.1~deb11u1 zstd=1.4.8+dfsg-2.1 -y ; rm -rf /var/lib/apt/lists/*\nRUN set -eux ; key='859BE8D7C586F538430B19C2467B942D3A79BD29' ; export GNUPGHOME=\"$( mktemp -d ;)\" ; gpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\" ; mkdir -p /etc/apt/keyrings ; gpg --batch --export \"$key\" > /etc/apt/keyrings/mysql.gpg; gpgconf --kill all ; rm -rf \"$GNUPGHOME\"\nENV MYSQL_MAJOR=\"8.0\"\nENV MYSQL_VERSION=\"8.0.32-1debian11\"\nRUN echo 'deb [ signed-by=/etc/apt/keyrings/mysql.gpg ] http://repo.mysql.com/apt/debian/ bullseye mysql-8.0' > /etc/apt/sources.list.d/mysql.list\n#   the \"/var/lib/mysql\" stuff here is because the mysql-server postinst doesn't have an explicit way to disable the mysql_install_db codepath besides having a database already \"configured\" (ie, stuff in /var/lib/mysql/mysql)\n#   also, we set debconf keys to make APT a little quieter\nRUN { echo mysql-community-server mysql-community-server/data-dir select '' ;echo mysql-community-server mysql-community-server/root-pass password '' ;echo mysql-community-server mysql-community-server/re-root-pass password '' ;echo mysql-community-server mysql-community-server/remove-test-db select false ; } | debconf-set-selections \\\n && apt-get update \\\n && apt-get install mysql-community-client=\"${MYSQL_VERSION}\" mysql-community-server-core=\"${MYSQL_VERSION}\" -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && rm -rf /var/lib/mysql \\\n && mkdir -p /var/lib/mysql /var/run/mysqld \\\n && chown -R mysql:mysql /var/lib/mysql /var/run/mysqld \\\n && chmod 1777 /var/run/mysqld /var/lib/mysql\nVOLUME /var/lib/mysql\n#   Config files\nADD config/ /etc/mysql/\nADD docker-entrypoint.sh /usr/local/bin/\nRUN ln -s usr/local/bin/docker-entrypoint.sh /entrypoint.sh\nENTRYPOINT [\"docker-entrypoint.sh\"]\nEXPOSE 3306/tcp 33060/tcp\nADD docker-healthcheck /usr/local/bin/\nHEALTHCHECK CMD [\"docker-healthcheck\"]\nCMD [\"mysqld\"]\n","originalDockerfileUglifiedHash":"93bae3c7fd78c115f8c20a28e37f2861","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles/mysql__8.0.32-debian__7__injected.dockerfile"}