{"seed":1913585062,"processedDockerfileHash":"d01e9b8c41975de7ef238599436cc08b","fixedSmells":["pin-package-manager-versions-apt-get","do-not-have-secrets","have-a-healthcheck"],"successfullyFixedSmells":["pin-package-manager-versions-apt-get","do-not-have-secrets","have-a-healthcheck"],"processedDockerfile":"#\n#   NOTE: THIS DOCKERFILE IS GENERATED VIA \"apply-templates.sh\"\n#\n#   PLEASE DO NOT EDIT IT DIRECTLY.\n#\nFROM buildpack-deps:bullseye\nRUN set -ex ; if ! command -v gpg > /dev/null; then apt-get update ;apt-get install --no-install-recommends gnupg=2.2.27-2+deb11u2 dirmngr=2.2.27-2+deb11u2 -y ;rm -rf /var/lib/apt/lists/* ; fi\n#   https://gcc.gnu.org/mirrors.html\nENV GPG_KEYS=\"B215C1633BCA0477615F1B35A5B3A004745C015A  B3C42148A44E6983B3E4CC0793FA9B1AB75C61B8  90AA470469D3965A87A5DCB494D03953902C9419  80F98B2E0DAB6C8281BDF541A7C8C3B2F71EDF1C  7F74F97C103468EE5D750B583AB00996FC26A641  33C235A34C46AA3FFB293709A328C3A2C3C45C06  D3A93CAD751C2AF4F8C7AD516C35B99309B5FA62\"\nRUN set -ex ; for key in $GPG_KEYS; do gpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\" ; done\n#   https://gcc.gnu.org/mirrors.html\nENV GCC_MIRRORS=\"https://ftpmirror.gnu.org/gcc  https://mirrors.kernel.org/gnu/gcc  https://bigsearcher.com/mirrors/gcc/releases  http://www.netgull.com/gcc/releases  https://ftpmirror.gnu.org/gcc  ftp://ftp.gnu.org/gnu/gcc\"\n#   Last Modified: 2021-07-28\nENV GCC_VERSION=\"11.2.0\"\n#   Docker EOL: 2023-01-28\nRUN set -ex ; savedAptMark=\"$( apt-mark showmanual ;)\" ; apt-get update ; apt-get install --no-install-recommends dpkg-dev=1.20.12 flex=2.6.4-8 -y ; rm -r /var/lib/apt/lists/* ; _fetch() { local fetch=\"$1\" ;shift ;local file=\"$1\" ;shift ;for mirror in $GCC_MIRRORS; do if curl -fL \"$mirror/$fetch\" -o \"$file\" ; then return 0 ; fi ; done ;echo \"error: failed to download '$fetch' from several mirrors\" >&2;return 1 ; } ; _fetch \"gcc-$GCC_VERSION/gcc-$GCC_VERSION.tar.xz.sig\" 'gcc.tar.xz.sig' ; _fetch \"gcc-$GCC_VERSION/gcc-$GCC_VERSION.tar.xz\" 'gcc.tar.xz' ; gpg --batch --verify gcc.tar.xz.sig gcc.tar.xz ; mkdir -p /usr/src/gcc ; tar -xf gcc.tar.xz -C /usr/src/gcc --strip-components=1 ; rm gcc.tar.xz* ; cd /usr/src/gcc ; ./contrib/download_prerequisites ; { rm *.tar.* || true ; } ; for f in config.guess config.sub; do wget -nv -O \"$f\" \"https://git.savannah.gnu.org/cgit/config.git/plain/$f?id=7d3d27baf8107b630586c962c057e22149653deb\" ;find -mindepth 2 -name \"$f\" -exec cp -v \"$f\" '{}' ';' ; done ; dir=\"$( mktemp -d ;)\" ; cd \"$dir\" ; extraConfigureArgs='' ; dpkgArch=\"$( dpkg --print-architecture ;)\" ; case \"$dpkgArch\" in (armel) extraConfigureArgs=\"$extraConfigureArgs --with-arch=armv4t --with-float=soft\" ;;(armhf) extraConfigureArgs=\"$extraConfigureArgs --with-arch=armv7-a --with-float=hard --with-fpu=vfpv3-d16 --with-mode=thumb\" ;;(i386) osVersionID=\"$( set -e ;. /etc/os-release ;echo \"$VERSION_ID\" ;)\" ; case \"$osVersionID\" in (8) extraConfigureArgs=\"$extraConfigureArgs --with-arch-32=i586\" ;;(*) extraConfigureArgs=\"$extraConfigureArgs --with-arch-32=i686\" ;; esac ;; esac ; gnuArch=\"$( dpkg-architecture --query DEB_BUILD_GNU_TYPE ;)\" ; /usr/src/gcc/configure --build=\"$gnuArch\" --disable-multilib --enable-languages=c,c++,fortran,go $extraConfigureArgs ; make -j \"$( nproc ;)\" ; make install-strip ; cd .. ; rm -rf \"$dir\" /usr/src/gcc ; apt-mark auto '.*' > /dev/null; [ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark ; apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false\n#   gcc installs .so files in /usr/local/lib64 (and /usr/local/lib)...\nRUN set -ex ; { echo '/usr/local/lib64' ;echo '/usr/local/lib' ; } > /etc/ld.so.conf.d/000-local-lib.conf; ldconfig -v\n#   ensure that alternatives are pointing to the new compiler and that old one is no longer used\nRUN set -ex ; dpkg-divert --divert /usr/bin/gcc.orig --rename /usr/bin/gcc ; dpkg-divert --divert /usr/bin/g++.orig --rename /usr/bin/g++ ; dpkg-divert --divert /usr/bin/gfortran.orig --rename /usr/bin/gfortran ; update-alternatives --install /usr/bin/cc cc /usr/local/bin/gcc 999\n# A secret has been removed here. Please do not provide secrets from the Dockerfile as these will leak into the metadata of the resulting docker image. To provide secrets the --secret flag of the docker build command can be used (https://docs.docker.com/develop/develop-images/build_enhancements/#new-docker-build-secret-information).\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"#\n#  NOTE: THIS DOCKERFILE IS GENERATED VIA \"apply-templates.sh\"\n#\n#  PLEASE DO NOT EDIT IT DIRECTLY.\n#\nFROM buildpack-deps:bullseye\nRUN set -ex ; if ! command -v gpg > /dev/null; then apt-get update ;apt-get install --no-install-recommends gnupg dirmngr -y ;rm -rf /var/lib/apt/lists/* ; fi\n#  https://gcc.gnu.org/mirrors.html\nENV GPG_KEYS=\"B215C1633BCA0477615F1B35A5B3A004745C015A  B3C42148A44E6983B3E4CC0793FA9B1AB75C61B8  90AA470469D3965A87A5DCB494D03953902C9419  80F98B2E0DAB6C8281BDF541A7C8C3B2F71EDF1C  7F74F97C103468EE5D750B583AB00996FC26A641  33C235A34C46AA3FFB293709A328C3A2C3C45C06  D3A93CAD751C2AF4F8C7AD516C35B99309B5FA62\"\nRUN set -ex ; for key in $GPG_KEYS; do gpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\" ; done\n#  https://gcc.gnu.org/mirrors.html\nENV GCC_MIRRORS=\"https://ftpmirror.gnu.org/gcc  https://mirrors.kernel.org/gnu/gcc  https://bigsearcher.com/mirrors/gcc/releases  http://www.netgull.com/gcc/releases  https://ftpmirror.gnu.org/gcc  ftp://ftp.gnu.org/gnu/gcc\"\n#  Last Modified: 2021-07-28\nENV GCC_VERSION=\"11.2.0\"\n#  Docker EOL: 2023-01-28\nRUN set -ex ; savedAptMark=\"$( apt-mark showmanual ;)\" ; apt-get update ; apt-get install --no-install-recommends dpkg-dev flex -y ; rm -r /var/lib/apt/lists/* ; _fetch() { local fetch=\"$1\" ;shift ;local file=\"$1\" ;shift ;for mirror in $GCC_MIRRORS; do if curl -fL \"$mirror/$fetch\" -o \"$file\" ; then return 0 ; fi ; done ;echo \"error: failed to download '$fetch' from several mirrors\" >&2;return 1 ; } ; _fetch \"gcc-$GCC_VERSION/gcc-$GCC_VERSION.tar.xz.sig\" 'gcc.tar.xz.sig' ; _fetch \"gcc-$GCC_VERSION/gcc-$GCC_VERSION.tar.xz\" 'gcc.tar.xz' ; gpg --batch --verify gcc.tar.xz.sig gcc.tar.xz ; mkdir -p /usr/src/gcc ; tar -xf gcc.tar.xz -C /usr/src/gcc --strip-components=1 ; rm gcc.tar.xz* ; cd /usr/src/gcc ; ./contrib/download_prerequisites ; { rm *.tar.* || true ; } ; for f in config.guess config.sub; do wget -nv -O \"$f\" \"https://git.savannah.gnu.org/cgit/config.git/plain/$f?id=7d3d27baf8107b630586c962c057e22149653deb\" ;find -mindepth 2 -name \"$f\" -exec cp -v \"$f\" '{}' ';' ; done ; dir=\"$( mktemp -d ;)\" ; cd \"$dir\" ; extraConfigureArgs='' ; dpkgArch=\"$( dpkg --print-architecture ;)\" ; case \"$dpkgArch\" in (armel) extraConfigureArgs=\"$extraConfigureArgs --with-arch=armv4t --with-float=soft\" ;;(armhf) extraConfigureArgs=\"$extraConfigureArgs --with-arch=armv7-a --with-float=hard --with-fpu=vfpv3-d16 --with-mode=thumb\" ;;(i386) osVersionID=\"$( set -e ;. /etc/os-release ;echo \"$VERSION_ID\" ;)\" ; case \"$osVersionID\" in (8) extraConfigureArgs=\"$extraConfigureArgs --with-arch-32=i586\" ;;(*) extraConfigureArgs=\"$extraConfigureArgs --with-arch-32=i686\" ;; esac ;; esac ; gnuArch=\"$( dpkg-architecture --query DEB_BUILD_GNU_TYPE ;)\" ; /usr/src/gcc/configure --build=\"$gnuArch\" --disable-multilib --enable-languages=c,c++,fortran,go $extraConfigureArgs ; make -j \"$( nproc ;)\" ; make install-strip ; cd .. ; rm -rf \"$dir\" /usr/src/gcc ; apt-mark auto '.*' > /dev/null; [ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark ; apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false\n#  gcc installs .so files in /usr/local/lib64 (and /usr/local/lib)...\nRUN set -ex ; { echo '/usr/local/lib64' ;echo '/usr/local/lib' ; } > /etc/ld.so.conf.d/000-local-lib.conf; ldconfig -v\n#  ensure that alternatives are pointing to the new compiler and that old one is no longer used\nRUN set -ex ; dpkg-divert --divert /usr/bin/gcc.orig --rename /usr/bin/gcc ; dpkg-divert --divert /usr/bin/g++.orig --rename /usr/bin/g++ ; dpkg-divert --divert /usr/bin/gfortran.orig --rename /usr/bin/gfortran ; update-alternatives --install /usr/bin/cc cc /usr/local/bin/gcc 999\nENV POSTGRES_PASSWORD=\"1Sv/ZfxcIzAvHNGSsi-igyuPC0bEPvVZ0MYyZgvm\" \\\n    POSTGRES_PASSWORD=\"4XkieMRpq80371NlOo/WFoE-wschawJtWW1qB1h0\" \\\n    DOCKER_PASSWORD=\"FHcYca4m75f14u9W9fVsdsIam2eYc6WZ7pu-3iA7\" \\\n    AWS_ACCESS_KEY=\"ASIAJWSK8QE80W0DL076\"\n","injectedSmells":[],"originalDockerfileHash":"e0930b598f60d567671c9c74720efda6","successfullyInjectedSmells":[],"originalDockerfileUglified":"#\n#   NOTE: THIS DOCKERFILE IS GENERATED VIA \"apply-templates.sh\"\n#\n#   PLEASE DO NOT EDIT IT DIRECTLY.\n#\nFROM buildpack-deps:bullseye\nRUN set -ex ; if ! command -v gpg > /dev/null; then apt-get update ;apt-get install --no-install-recommends gnupg dirmngr -y ;rm -rf /var/lib/apt/lists/* ; fi\n#   https://gcc.gnu.org/mirrors.html\nENV GPG_KEYS=\"B215C1633BCA0477615F1B35A5B3A004745C015A  B3C42148A44E6983B3E4CC0793FA9B1AB75C61B8  90AA470469D3965A87A5DCB494D03953902C9419  80F98B2E0DAB6C8281BDF541A7C8C3B2F71EDF1C  7F74F97C103468EE5D750B583AB00996FC26A641  33C235A34C46AA3FFB293709A328C3A2C3C45C06  D3A93CAD751C2AF4F8C7AD516C35B99309B5FA62\"\nRUN set -ex ; for key in $GPG_KEYS; do gpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\" ; done\n#   https://gcc.gnu.org/mirrors.html\nENV GCC_MIRRORS=\"https://ftpmirror.gnu.org/gcc  https://mirrors.kernel.org/gnu/gcc  https://bigsearcher.com/mirrors/gcc/releases  http://www.netgull.com/gcc/releases  https://ftpmirror.gnu.org/gcc  ftp://ftp.gnu.org/gnu/gcc\"\n#   Last Modified: 2021-07-28\nENV GCC_VERSION=\"11.2.0\"\n#   Docker EOL: 2023-01-28\nRUN set -ex ; savedAptMark=\"$( apt-mark showmanual ;)\" ; apt-get update ; apt-get install --no-install-recommends dpkg-dev flex -y ; rm -r /var/lib/apt/lists/* ; _fetch() { local fetch=\"$1\" ;shift ;local file=\"$1\" ;shift ;for mirror in $GCC_MIRRORS; do if curl -fL \"$mirror/$fetch\" -o \"$file\" ; then return 0 ; fi ; done ;echo \"error: failed to download '$fetch' from several mirrors\" >&2;return 1 ; } ; _fetch \"gcc-$GCC_VERSION/gcc-$GCC_VERSION.tar.xz.sig\" 'gcc.tar.xz.sig' ; _fetch \"gcc-$GCC_VERSION/gcc-$GCC_VERSION.tar.xz\" 'gcc.tar.xz' ; gpg --batch --verify gcc.tar.xz.sig gcc.tar.xz ; mkdir -p /usr/src/gcc ; tar -xf gcc.tar.xz -C /usr/src/gcc --strip-components=1 ; rm gcc.tar.xz* ; cd /usr/src/gcc ; ./contrib/download_prerequisites ; { rm *.tar.* || true ; } ; for f in config.guess config.sub; do wget -nv -O \"$f\" \"https://git.savannah.gnu.org/cgit/config.git/plain/$f?id=7d3d27baf8107b630586c962c057e22149653deb\" ;find -mindepth 2 -name \"$f\" -exec cp -v \"$f\" '{}' ';' ; done ; dir=\"$( mktemp -d ;)\" ; cd \"$dir\" ; extraConfigureArgs='' ; dpkgArch=\"$( dpkg --print-architecture ;)\" ; case \"$dpkgArch\" in (armel) extraConfigureArgs=\"$extraConfigureArgs --with-arch=armv4t --with-float=soft\" ;;(armhf) extraConfigureArgs=\"$extraConfigureArgs --with-arch=armv7-a --with-float=hard --with-fpu=vfpv3-d16 --with-mode=thumb\" ;;(i386) osVersionID=\"$( set -e ;. /etc/os-release ;echo \"$VERSION_ID\" ;)\" ; case \"$osVersionID\" in (8) extraConfigureArgs=\"$extraConfigureArgs --with-arch-32=i586\" ;;(*) extraConfigureArgs=\"$extraConfigureArgs --with-arch-32=i686\" ;; esac ;; esac ; gnuArch=\"$( dpkg-architecture --query DEB_BUILD_GNU_TYPE ;)\" ; /usr/src/gcc/configure --build=\"$gnuArch\" --disable-multilib --enable-languages=c,c++,fortran,go $extraConfigureArgs ; make -j \"$( nproc ;)\" ; make install-strip ; cd .. ; rm -rf \"$dir\" /usr/src/gcc ; apt-mark auto '.*' > /dev/null; [ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark ; apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false\n#   gcc installs .so files in /usr/local/lib64 (and /usr/local/lib)...\nRUN set -ex ; { echo '/usr/local/lib64' ;echo '/usr/local/lib' ; } > /etc/ld.so.conf.d/000-local-lib.conf; ldconfig -v\n#   ensure that alternatives are pointing to the new compiler and that old one is no longer used\nRUN set -ex ; dpkg-divert --divert /usr/bin/gcc.orig --rename /usr/bin/gcc ; dpkg-divert --divert /usr/bin/g++.orig --rename /usr/bin/g++ ; dpkg-divert --divert /usr/bin/gfortran.orig --rename /usr/bin/gfortran ; update-alternatives --install /usr/bin/cc cc /usr/local/bin/gcc 999\nENV POSTGRES_PASSWORD=\"1Sv/ZfxcIzAvHNGSsi-igyuPC0bEPvVZ0MYyZgvm\" \\\n    POSTGRES_PASSWORD=\"4XkieMRpq80371NlOo/WFoE-wschawJtWW1qB1h0\" \\\n    DOCKER_PASSWORD=\"FHcYca4m75f14u9W9fVsdsIam2eYc6WZ7pu-3iA7\" \\\n    AWS_ACCESS_KEY=\"ASIAJWSK8QE80W0DL076\"\n","originalDockerfileUglifiedHash":"0f9ed9d1910ec547fccec5ff18cbf10e","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles/gcc__11.2.0__1__injected.dockerfile"}