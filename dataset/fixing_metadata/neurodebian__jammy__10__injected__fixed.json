{"seed":3158805094,"processedDockerfileHash":"ffce02353368d078d4982213b870527f","fixedSmells":["do-not-have-secrets"],"successfullyFixedSmells":["do-not-have-secrets"],"processedDockerfile":"#   Build #: +1\nFROM ubuntu:jammy\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\n#   https://bugs.debian.org/830696 (apt uses gpgv by default in newer releases, rather than gpg)\nRUN set -x \\\n && apt-get update \\\n && { which gpg || apt-get install --no-install-recommends gnupg=2.2.27-3ubuntu2.1 -y ; } \\\n && { gpg --version | grep -q '^gpg (GnuPG) 1\\.' || apt-get install --no-install-recommends dirmngr=2.2.27-3ubuntu2.1 -y ; } \\\n && rm -rf /var/lib/apt/lists/*\n#   apt-key is a bit finicky during \"docker build\" with gnupg 2.x, so install the repo key the same way debian-archive-keyring does (/etc/apt/trusted.gpg.d)\n#   this makes \"apt-key list\" output prettier too!\nRUN set -x \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && gpg --batch --keyserver keyserver.ubuntu.com --recv-keys DD95CC430502E37EF840ACEEA5D32F012649A5A9 \\\n && gpg --batch --export DD95CC430502E37EF840ACEEA5D32F012649A5A9 > /etc/apt/trusted.gpg.d/neurodebian.gpg \\\n && rm -rf \"$GNUPGHOME\" \\\n && apt-key list | grep neurodebian\nRUN { echo 'deb http://neuro.debian.net/debian jammy main' ;echo 'deb http://neuro.debian.net/debian data main' ;echo '#deb-src http://neuro.debian.net/debian-devel jammy main' ; } > /etc/apt/sources.list.d/neurodebian.sources.list\n#   Minimalistic package to assist with freezing the APT configuration\n#   which would be coming from neurodebian repo.\n#   Also install and enable eatmydata to be used for all apt-get calls\n#   to speed up docker builds.\nRUN set -x \\\n && apt-get update \\\n && apt-get install --no-install-recommends neurodebian-freeze=0.41.2~nd22.04+1 eatmydata=130-2build1 -y \\\n && ln -s /usr/bin/eatmydata /usr/local/bin/apt-get \\\n && rm -rf /var/lib/apt/lists/*\nHEALTHCHECK CMD bash -v || exit 1\n# A secret has been removed here. Please do not provide secrets from the Dockerfile as these will leak into the metadata of the resulting docker image. To provide secrets the --secret flag of the docker build command can be used (https://docs.docker.com/develop/develop-images/build_enhancements/#new-docker-build-secret-information).\n","originalDockerfile":"#  Build #: +1\nFROM ubuntu:jammy\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\n#  https://bugs.debian.org/830696 (apt uses gpgv by default in newer releases, rather than gpg)\nRUN set -x \\\n && apt-get update \\\n && { which gpg || apt-get install --no-install-recommends gnupg=2.2.27-3ubuntu2.1 -y ; } \\\n && { gpg --version | grep -q '^gpg (GnuPG) 1\\.' || apt-get install --no-install-recommends dirmngr=2.2.27-3ubuntu2.1 -y ; } \\\n && rm -rf /var/lib/apt/lists/*\n#  apt-key is a bit finicky during \"docker build\" with gnupg 2.x, so install the repo key the same way debian-archive-keyring does (/etc/apt/trusted.gpg.d)\n#  this makes \"apt-key list\" output prettier too!\nRUN set -x \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && gpg --batch --keyserver keyserver.ubuntu.com --recv-keys DD95CC430502E37EF840ACEEA5D32F012649A5A9 \\\n && gpg --batch --export DD95CC430502E37EF840ACEEA5D32F012649A5A9 > /etc/apt/trusted.gpg.d/neurodebian.gpg \\\n && rm -rf \"$GNUPGHOME\" \\\n && apt-key list | grep neurodebian\nRUN { echo 'deb http://neuro.debian.net/debian jammy main' ;echo 'deb http://neuro.debian.net/debian data main' ;echo '#deb-src http://neuro.debian.net/debian-devel jammy main' ; } > /etc/apt/sources.list.d/neurodebian.sources.list\n#  Minimalistic package to assist with freezing the APT configuration\n#  which would be coming from neurodebian repo.\n#  Also install and enable eatmydata to be used for all apt-get calls\n#  to speed up docker builds.\nRUN set -x \\\n && apt-get update \\\n && apt-get install --no-install-recommends neurodebian-freeze=0.41.2~nd22.04+1 eatmydata=130-2build1 -y \\\n && ln -s /usr/bin/eatmydata /usr/local/bin/apt-get \\\n && rm -rf /var/lib/apt/lists/*\nHEALTHCHECK CMD bash -v || exit 1\nENV NPM_TOKEN=\"npm_X8QGctJyE6U36q18w/VJDuXyM5ciE7tIug6e\"\n","injectedSmells":[],"originalDockerfileHash":"480735839663ba27d0eabae1bc478a66","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   Build #: +1\nFROM ubuntu:jammy\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\n#   https://bugs.debian.org/830696 (apt uses gpgv by default in newer releases, rather than gpg)\nRUN set -x \\\n && apt-get update \\\n && { which gpg || apt-get install --no-install-recommends gnupg=2.2.27-3ubuntu2.1 -y ; } \\\n && { gpg --version | grep -q '^gpg (GnuPG) 1\\.' || apt-get install --no-install-recommends dirmngr=2.2.27-3ubuntu2.1 -y ; } \\\n && rm -rf /var/lib/apt/lists/*\n#   apt-key is a bit finicky during \"docker build\" with gnupg 2.x, so install the repo key the same way debian-archive-keyring does (/etc/apt/trusted.gpg.d)\n#   this makes \"apt-key list\" output prettier too!\nRUN set -x \\\n && export GNUPGHOME=\"$( mktemp -d ;)\" \\\n && gpg --batch --keyserver keyserver.ubuntu.com --recv-keys DD95CC430502E37EF840ACEEA5D32F012649A5A9 \\\n && gpg --batch --export DD95CC430502E37EF840ACEEA5D32F012649A5A9 > /etc/apt/trusted.gpg.d/neurodebian.gpg \\\n && rm -rf \"$GNUPGHOME\" \\\n && apt-key list | grep neurodebian\nRUN { echo 'deb http://neuro.debian.net/debian jammy main' ;echo 'deb http://neuro.debian.net/debian data main' ;echo '#deb-src http://neuro.debian.net/debian-devel jammy main' ; } > /etc/apt/sources.list.d/neurodebian.sources.list\n#   Minimalistic package to assist with freezing the APT configuration\n#   which would be coming from neurodebian repo.\n#   Also install and enable eatmydata to be used for all apt-get calls\n#   to speed up docker builds.\nRUN set -x \\\n && apt-get update \\\n && apt-get install --no-install-recommends neurodebian-freeze=0.41.2~nd22.04+1 eatmydata=130-2build1 -y \\\n && ln -s /usr/bin/eatmydata /usr/local/bin/apt-get \\\n && rm -rf /var/lib/apt/lists/*\nHEALTHCHECK CMD bash -v || exit 1\nENV NPM_TOKEN=\"npm_X8QGctJyE6U36q18w/VJDuXyM5ciE7tIug6e\"\n","originalDockerfileUglifiedHash":"a2e0952cabf833459c98633be87cbfee","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles/neurodebian__jammy__10__injected.dockerfile"}