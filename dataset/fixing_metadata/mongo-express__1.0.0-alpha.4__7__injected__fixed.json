{"seed":1376577906,"processedDockerfileHash":"ed4b561a844b73f4478c1e5e37d76322","fixedSmells":["have-a-healthcheck"],"successfullyFixedSmells":["have-a-healthcheck"],"processedDockerfile":"#   https://nodejs.org/en/about/releases/\n#   https://github.com/nodejs/Release#readme\nFROM node:12-alpine3.11\nRUN apk add --no-cache bash=5.0.11-r1 tini=0.18.0-r0\nEXPOSE 8081/tcp\n#   override some config defaults with values that will work better for docker\nENV ME_CONFIG_EDITORTHEME=\"default\" \\\n    ME_CONFIG_MONGODB_URL=\"mongodb://mongo:27017\" \\\n    ME_CONFIG_MONGODB_ENABLE_ADMIN=\"true\" \\\n    ME_CONFIG_BASICAUTH_USERNAME=\"\" \\\n    ME_CONFIG_BASICAUTH_PASSWORD=\"\" \\\n    VCAP_APP_HOST=\"0.0.0.0\"\nENV MONGO_EXPRESS=\"1.0.0-alpha.4\"\nRUN set -eux ; apk add --no-cache --virtual .me-install-deps git=2.24.4-r0 ; npm install mongo-express@$MONGO_EXPRESS ; apk del --no-network .me-install-deps\nCOPY docker-entrypoint.sh /\nWORKDIR /node_modules/mongo-express\nRUN cp config.default.js config.js\nENTRYPOINT [\"tini\", \"--\", \"/docker-entrypoint.sh\"]\nCMD [\"mongo-express\"]\nHEALTHCHECK CMD curl --fail http://127.0.0.1:3000 || exit 1\n","originalDockerfile":"#  https://nodejs.org/en/about/releases/\n#  https://github.com/nodejs/Release#readme\nFROM node:12-alpine3.11\nRUN apk add --no-cache bash=5.0.11-r1 tini=0.18.0-r0\nEXPOSE 8081/tcp\n#  override some config defaults with values that will work better for docker\nENV ME_CONFIG_EDITORTHEME=\"default\" \\\n    ME_CONFIG_MONGODB_URL=\"mongodb://mongo:27017\" \\\n    ME_CONFIG_MONGODB_ENABLE_ADMIN=\"true\" \\\n    ME_CONFIG_BASICAUTH_USERNAME=\"\" \\\n    ME_CONFIG_BASICAUTH_PASSWORD=\"\" \\\n    VCAP_APP_HOST=\"0.0.0.0\"\nENV MONGO_EXPRESS=\"1.0.0-alpha.4\"\nRUN set -eux ; apk add --no-cache --virtual .me-install-deps git=2.24.4-r0 ; npm install mongo-express@$MONGO_EXPRESS ; apk del --no-network .me-install-deps\nCOPY docker-entrypoint.sh /\nWORKDIR /node_modules/mongo-express\nRUN cp config.default.js config.js\nENTRYPOINT [\"tini\", \"--\", \"/docker-entrypoint.sh\"]\nCMD [\"mongo-express\"]\n","injectedSmells":[],"originalDockerfileHash":"a6653d6affa67b04a5770608520ce972","successfullyInjectedSmells":[],"originalDockerfileUglified":"#   https://nodejs.org/en/about/releases/\n#   https://github.com/nodejs/Release#readme\nFROM node:12-alpine3.11\nRUN apk add --no-cache bash=5.0.11-r1 tini=0.18.0-r0\nEXPOSE 8081/tcp\n#   override some config defaults with values that will work better for docker\nENV ME_CONFIG_EDITORTHEME=\"default\" \\\n    ME_CONFIG_MONGODB_URL=\"mongodb://mongo:27017\" \\\n    ME_CONFIG_MONGODB_ENABLE_ADMIN=\"true\" \\\n    ME_CONFIG_BASICAUTH_USERNAME=\"\" \\\n    ME_CONFIG_BASICAUTH_PASSWORD=\"\" \\\n    VCAP_APP_HOST=\"0.0.0.0\"\nENV MONGO_EXPRESS=\"1.0.0-alpha.4\"\nRUN set -eux ; apk add --no-cache --virtual .me-install-deps git=2.24.4-r0 ; npm install mongo-express@$MONGO_EXPRESS ; apk del --no-network .me-install-deps\nCOPY docker-entrypoint.sh /\nWORKDIR /node_modules/mongo-express\nRUN cp config.default.js config.js\nENTRYPOINT [\"tini\", \"--\", \"/docker-entrypoint.sh\"]\nCMD [\"mongo-express\"]\n","originalDockerfileUglifiedHash":"86e7a6c7e8e347dccf5b68d464866a84","fileName":"/ICSME-replicationpackage/dataset/smelly_dockerfiles/mongo-express__1.0.0-alpha.4__7__injected.dockerfile"}