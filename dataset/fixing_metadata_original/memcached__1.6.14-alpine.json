{"seed":416683247,"processedDockerfileHash":"3410b385724bfe7770d434f165ee68e1","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apk","have-a-healthcheck"],"processedDockerfile":"FROM alpine:3.15\n#  add our user and group first to make sure their IDs get assigned consistently, regardless of whatever dependencies get added\nRUN addgroup -g 11211 memcache \\\n && adduser -D -u 11211 -G memcache memcache\n#  ensure SASL's \"libplain.so\" is installed as per https://github.com/memcached/memcached/wiki/SASLHowto\nRUN apk add libsasl=2.1.28-r0 --no-cache\nENV MEMCACHED_VERSION=\"1.6.14\"\nENV MEMCACHED_SHA1=\"be64c11d34f04bd1855100b8b5ad9ae8b45e0ab0\"\nRUN set -x \\\n && apk add ca-certificates=20220614-r0 coreutils=9.0-r2 cyrus-sasl-dev=2.1.28-r0 gcc=10.3.1_git20211027-r0 libc-dev=0.7.2-r3 libevent-dev=2.1.12-r4 linux-headers=5.10.41-r0 make=4.3-r0 openssl=1.1.1t-r3 openssl-dev=1.1.1t-r3 perl=5.34.0-r1 perl-io-socket-ssl=2.072-r0 perl-utils=5.34.0-r1 --no-cache --virtual .build-deps \\\n && wget -O memcached.tar.gz \"https://memcached.org/files/memcached-$MEMCACHED_VERSION.tar.gz\" \\\n && echo \"$MEMCACHED_SHA1 memcached.tar.gz\" | sha1sum -c - \\\n && mkdir -p /usr/src/memcached \\\n && tar -xzf memcached.tar.gz -C /usr/src/memcached --strip-components=1 \\\n && rm memcached.tar.gz \\\n && cd /usr/src/memcached \\\n && ./configure --build=\"$gnuArch\" --enable-extstore --enable-sasl --enable-sasl-pwdb --enable-tls \\\n && nproc=\"$( nproc ;)\" \\\n && make -j \"$nproc\" \\\n && make test PARALLEL=\"$nproc\" \\\n && make install \\\n && cd / \\\n && rm -rf /usr/src/memcached \\\n && runDeps=\"$( scanelf --needed --nobanner --format '%n#p' --recursive /usr/local | tr ',' '\\n' | sort -u | awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' ;)\" \\\n && apk add $runDeps --no-network --virtual .memcached-rundeps \\\n && apk del --no-network .build-deps \\\n && memcached -V\nCOPY docker-entrypoint.sh /usr/local/bin/\nRUN ln -s usr/local/bin/docker-entrypoint.sh /entrypoint.sh\nENTRYPOINT [\"docker-entrypoint.sh\"]\nUSER memcache\nEXPOSE 11211/tcp\nCMD [\"memcached\"]\n# Please add your HEALTHCHECK here!!!\n","originalDockerfile":"FROM alpine:3.15\n\n# add our user and group first to make sure their IDs get assigned consistently, regardless of whatever dependencies get added\nRUN addgroup -g 11211 memcache && adduser -D -u 11211 -G memcache memcache\n\n# ensure SASL's \"libplain.so\" is installed as per https://github.com/memcached/memcached/wiki/SASLHowto\nRUN apk add --no-cache libsasl\n\nENV MEMCACHED_VERSION 1.6.14\nENV MEMCACHED_SHA1 be64c11d34f04bd1855100b8b5ad9ae8b45e0ab0\n\nRUN set -x \\\n\t\\\n\t&& apk add --no-cache --virtual .build-deps \\\n\t\tca-certificates \\\n\t\tcoreutils \\\n\t\tcyrus-sasl-dev \\\n\t\tgcc \\\n\t\tlibc-dev \\\n\t\tlibevent-dev \\\n\t\tlinux-headers \\\n\t\tmake \\\n\t\topenssl \\\n\t\topenssl-dev \\\n\t\tperl \\\n\t\tperl-io-socket-ssl \\\n\t\tperl-utils \\\n\t\\\n\t&& wget -O memcached.tar.gz \"https://memcached.org/files/memcached-$MEMCACHED_VERSION.tar.gz\" \\\n\t&& echo \"$MEMCACHED_SHA1  memcached.tar.gz\" | sha1sum -c - \\\n\t&& mkdir -p /usr/src/memcached \\\n\t&& tar -xzf memcached.tar.gz -C /usr/src/memcached --strip-components=1 \\\n\t&& rm memcached.tar.gz \\\n\t\\\n\t&& cd /usr/src/memcached \\\n\t\\\n\t&& ./configure \\\n\t\t--build=\"$gnuArch\" \\\n\t\t--enable-extstore \\\n\t\t--enable-sasl \\\n\t\t--enable-sasl-pwdb \\\n\t\t--enable-tls \\\n\t&& nproc=\"$(nproc)\" \\\n\t&& make -j \"$nproc\" \\\n\t\\\n\t&& make test PARALLEL=\"$nproc\" \\\n\t\\\n\t&& make install \\\n\t\\\n\t&& cd / && rm -rf /usr/src/memcached \\\n\t\\\n\t&& runDeps=\"$( \\\n\t\tscanelf --needed --nobanner --format '%n#p' --recursive /usr/local \\\n\t\t\t| tr ',' '\\n' \\\n\t\t\t| sort -u \\\n\t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \\\n\t)\" \\\n\t&& apk add --no-network --virtual .memcached-rundeps $runDeps \\\n\t&& apk del --no-network .build-deps \\\n\t\\\n\t&& memcached -V\n\nCOPY docker-entrypoint.sh /usr/local/bin/\nRUN ln -s usr/local/bin/docker-entrypoint.sh /entrypoint.sh # backwards compat\nENTRYPOINT [\"docker-entrypoint.sh\"]\n\nUSER memcache\nEXPOSE 11211\nCMD [\"memcached\"]\n","injectedSmells":[],"originalDockerfileHash":"a429292c6baa9cd4876cf40e18d614ef","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM alpine:3.15\n#  add our user and group first to make sure their IDs get assigned consistently, regardless of whatever dependencies get added\nRUN addgroup -g 11211 memcache \\\n && adduser -D -u 11211 -G memcache memcache\n#  ensure SASL's \"libplain.so\" is installed as per https://github.com/memcached/memcached/wiki/SASLHowto\nRUN apk add --no-cache libsasl\nENV MEMCACHED_VERSION=\"1.6.14\"\nENV MEMCACHED_SHA1=\"be64c11d34f04bd1855100b8b5ad9ae8b45e0ab0\"\nRUN set -x \\\n && apk add --no-cache --virtual .build-deps ca-certificates coreutils cyrus-sasl-dev gcc libc-dev libevent-dev linux-headers make openssl openssl-dev perl perl-io-socket-ssl perl-utils \\\n && wget -O memcached.tar.gz \"https://memcached.org/files/memcached-$MEMCACHED_VERSION.tar.gz\" \\\n && echo \"$MEMCACHED_SHA1 memcached.tar.gz\" | sha1sum -c - \\\n && mkdir -p /usr/src/memcached \\\n && tar -xzf memcached.tar.gz -C /usr/src/memcached --strip-components=1 \\\n && rm memcached.tar.gz \\\n && cd /usr/src/memcached \\\n && ./configure --build=\"$gnuArch\" --enable-extstore --enable-sasl --enable-sasl-pwdb --enable-tls \\\n && nproc=\"$( nproc ;)\" \\\n && make -j \"$nproc\" \\\n && make test PARALLEL=\"$nproc\" \\\n && make install \\\n && cd / \\\n && rm -rf /usr/src/memcached \\\n && runDeps=\"$( scanelf --needed --nobanner --format '%n#p' --recursive /usr/local | tr ',' '\\n' | sort -u | awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' ;)\" \\\n && apk add --no-network --virtual .memcached-rundeps $runDeps \\\n && apk del --no-network .build-deps \\\n && memcached -V\nCOPY docker-entrypoint.sh /usr/local/bin/\nRUN ln -s usr/local/bin/docker-entrypoint.sh /entrypoint.sh\nENTRYPOINT [\"docker-entrypoint.sh\"]\nUSER memcache\nEXPOSE 11211/tcp\nCMD [\"memcached\"]\n","originalDockerfileUglifiedHash":"502bd97e8506f5804407d5ddbf7ca52a","fileName":"/ICSME-replicationpackage/dataset/original_dockerfiles/memcached__1.6.14-alpine.dockerfile"}