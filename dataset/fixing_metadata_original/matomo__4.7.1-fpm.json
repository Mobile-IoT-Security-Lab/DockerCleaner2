{"seed":2247733611,"processedDockerfileHash":"f6b9bfa154cc4e4ad7e010d33128405b","fixedSmells":["use-no-install-recommends","do-not-use-apt-get-update-alone","pin-package-manager-versions-apt-get","pin-package-manager-versions-pip","pin-package-manager-versions-npm","pin-package-manager-versions-gem","pin-package-manager-versions-apk","use-copy-instead-of-add","use-wget-instead-of-add","do-not-have-secrets","have-a-healthcheck","have-a-user"],"successfullyFixedSmells":["pin-package-manager-versions-apt-get","have-a-healthcheck","have-a-user"],"processedDockerfile":"FROM php:8.0-fpm\nLABEL maintainer=\"pierre@piwik.org\"\nENV PHP_MEMORY_LIMIT=\"256M\"\nRUN set -ex ; savedAptMark=\"$( apt-mark showmanual ;)\" ; apt-get update ; apt-get install --no-install-recommends libfreetype6-dev=2.10.4+dfsg-1+deb11u1 libjpeg-dev=1:2.0.6-4 libldap2-dev=2.4.57+dfsg-3+deb11u1 libpng-dev=1.6.37-3 libzip-dev=1.7.3-1 procps=2:3.3.17-5 -y ; debMultiarch=\"$( dpkg-architecture --query DEB_BUILD_MULTIARCH ;)\" ; docker-php-ext-configure gd --with-freetype --with-jpeg ; docker-php-ext-configure ldap --with-libdir=\"lib/$debMultiarch\" ; docker-php-ext-install -j \"$( nproc ;)\" gd bcmath ldap mysqli opcache pdo_mysql zip ; pecl install APCu-5.1.21 ; pecl install redis-5.3.6 ; docker-php-ext-enable apcu redis ; rm -r /tmp/pear ; apt-mark auto '.*' > /dev/null; apt-mark manual $savedAptMark ; ldd \"$( php -r 'echo ini_get(\"extension_dir\");' ;)\"/*.so | awk '/=>/ { print $3 }' | sort -u | xargs -r dpkg-query -S | cut -d: -f1 | sort -u | xargs -rt apt-mark manual ; apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false ; rm -rf /var/lib/apt/lists/*\n#  set recommended PHP.ini settings\n#  see https://secure.php.net/manual/en/opcache.installation.php\nRUN { echo 'opcache.memory_consumption=128' ;echo 'opcache.interned_strings_buffer=8' ;echo 'opcache.max_accelerated_files=4000' ;echo 'opcache.revalidate_freq=2' ;echo 'opcache.fast_shutdown=1' ; } > /usr/local/etc/php/conf.d/opcache-recommended.ini\nENV MATOMO_VERSION=\"4.7.1\"\nRUN set -ex ; fetchDeps=\" dirmngr gnupg \" ; apt-get update ; apt-get install --no-install-recommends $fetchDeps -y ; curl -fsSL -o matomo.tar.gz \"https://builds.matomo.org/matomo-${MATOMO_VERSION}.tar.gz\" ; curl -fsSL -o matomo.tar.gz.asc \"https://builds.matomo.org/matomo-${MATOMO_VERSION}.tar.gz.asc\" ; export GNUPGHOME=\"$( mktemp -d ;)\" ; gpg --batch --keyserver keyserver.ubuntu.com --recv-keys 814E346FA01A20DBB04B6807B5DBD5925590A237 ; gpg --batch --verify matomo.tar.gz.asc matomo.tar.gz ; gpgconf --kill all ; rm -rf \"$GNUPGHOME\" matomo.tar.gz.asc ; tar -xzf matomo.tar.gz -C /usr/src/ ; rm matomo.tar.gz ; apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps ; rm -rf /var/lib/apt/lists/*\nCOPY php.ini /usr/local/etc/php/conf.d/php-matomo.ini\nCOPY docker-entrypoint.sh /entrypoint.sh\n#  WORKDIR is /var/www/html (inherited via \"FROM php\")\n#  \"/entrypoint.sh\" will populate it at container startup from /usr/src/matomo\nVOLUME /var/www/html\nENTRYPOINT [\"/entrypoint.sh\"]\nCMD [\"php-fpm\"]\nRUN groupadd --system docker-user ; useradd --system --gid docker-user docker-user\nUSER docker-user\nHEALTHCHECK CMD curl --fail http://127.0.0.1:80 || exit 1\n","originalDockerfile":"FROM php:8.0-fpm\n\nLABEL maintainer=\"pierre@piwik.org\"\n\nENV PHP_MEMORY_LIMIT=256M\n\nRUN set -ex; \\\n\t\\\n\tsavedAptMark=\"$(apt-mark showmanual)\"; \\\n\t\\\n\tapt-get update; \\\n\tapt-get install -y --no-install-recommends \\\n\t\tlibfreetype6-dev \\\n\t\tlibjpeg-dev \\\n\t\tlibldap2-dev \\\n\t\tlibpng-dev \\\n\t\tlibzip-dev \\\n\t\tprocps \\\n\t; \\\n\t\\\n\tdebMultiarch=\"$(dpkg-architecture --query DEB_BUILD_MULTIARCH)\"; \\\n\tdocker-php-ext-configure gd --with-freetype --with-jpeg; \\\n\tdocker-php-ext-configure ldap --with-libdir=\"lib/$debMultiarch\"; \\\n\tdocker-php-ext-install -j \"$(nproc)\" \\\n\t\tgd \\\n\t\tbcmath \\\n\t\tldap \\\n\t\tmysqli \\\n\t\topcache \\\n\t\tpdo_mysql \\\n\t\tzip \\\n\t; \\\n\t\\\n# pecl will claim success even if one install fails, so we need to perform each install separately\n\tpecl install APCu-5.1.21; \\\n\tpecl install redis-5.3.6; \\\n\t\\\n\tdocker-php-ext-enable \\\n\t\tapcu \\\n\t\tredis \\\n\t; \\\n\trm -r /tmp/pear; \\\n\t\\\n# reset apt-mark's \"manual\" list so that \"purge --auto-remove\" will remove all build dependencies\n\tapt-mark auto '.*' > /dev/null; \\\n\tapt-mark manual $savedAptMark; \\\n\tldd \"$(php -r 'echo ini_get(\"extension_dir\");')\"/*.so \\\n\t\t| awk '/=>/ { print $3 }' \\\n\t\t| sort -u \\\n\t\t| xargs -r dpkg-query -S \\\n\t\t| cut -d: -f1 \\\n\t\t| sort -u \\\n\t\t| xargs -rt apt-mark manual; \\\n\t\\\n\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \\\n\trm -rf /var/lib/apt/lists/*\n\n# set recommended PHP.ini settings\n# see https://secure.php.net/manual/en/opcache.installation.php\nRUN { \\\n\t\techo 'opcache.memory_consumption=128'; \\\n\t\techo 'opcache.interned_strings_buffer=8'; \\\n\t\techo 'opcache.max_accelerated_files=4000'; \\\n\t\techo 'opcache.revalidate_freq=2'; \\\n\t\techo 'opcache.fast_shutdown=1'; \\\n\t} > /usr/local/etc/php/conf.d/opcache-recommended.ini\n\nENV MATOMO_VERSION 4.7.1\n\nRUN set -ex; \\\n\tfetchDeps=\" \\\n\t\tdirmngr \\\n\t\tgnupg \\\n\t\"; \\\n\tapt-get update; \\\n\tapt-get install -y --no-install-recommends \\\n\t\t$fetchDeps \\\n\t; \\\n\t\\\n\tcurl -fsSL -o matomo.tar.gz \\\n\t\t\"https://builds.matomo.org/matomo-${MATOMO_VERSION}.tar.gz\"; \\\n\tcurl -fsSL -o matomo.tar.gz.asc \\\n\t\t\"https://builds.matomo.org/matomo-${MATOMO_VERSION}.tar.gz.asc\"; \\\n\texport GNUPGHOME=\"$(mktemp -d)\"; \\\n\tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 814E346FA01A20DBB04B6807B5DBD5925590A237; \\\n\tgpg --batch --verify matomo.tar.gz.asc matomo.tar.gz; \\\n\tgpgconf --kill all; \\\n\trm -rf \"$GNUPGHOME\" matomo.tar.gz.asc; \\\n\ttar -xzf matomo.tar.gz -C /usr/src/; \\\n\trm matomo.tar.gz; \\\n\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps; \\\n\trm -rf /var/lib/apt/lists/*\n\nCOPY php.ini /usr/local/etc/php/conf.d/php-matomo.ini\n\nCOPY docker-entrypoint.sh /entrypoint.sh\n\n# WORKDIR is /var/www/html (inherited via \"FROM php\")\n# \"/entrypoint.sh\" will populate it at container startup from /usr/src/matomo\nVOLUME /var/www/html\n\nENTRYPOINT [\"/entrypoint.sh\"]\nCMD [\"php-fpm\"]\n","injectedSmells":[],"originalDockerfileHash":"db163f0c21dbe7a7d60645d985f9b16b","successfullyInjectedSmells":[],"originalDockerfileUglified":"FROM php:8.0-fpm\nLABEL maintainer=\"pierre@piwik.org\"\nENV PHP_MEMORY_LIMIT=\"256M\"\nRUN set -ex ; savedAptMark=\"$( apt-mark showmanual ;)\" ; apt-get update ; apt-get install --no-install-recommends libfreetype6-dev libjpeg-dev libldap2-dev libpng-dev libzip-dev procps -y ; debMultiarch=\"$( dpkg-architecture --query DEB_BUILD_MULTIARCH ;)\" ; docker-php-ext-configure gd --with-freetype --with-jpeg ; docker-php-ext-configure ldap --with-libdir=\"lib/$debMultiarch\" ; docker-php-ext-install -j \"$( nproc ;)\" gd bcmath ldap mysqli opcache pdo_mysql zip ; pecl install APCu-5.1.21 ; pecl install redis-5.3.6 ; docker-php-ext-enable apcu redis ; rm -r /tmp/pear ; apt-mark auto '.*' > /dev/null; apt-mark manual $savedAptMark ; ldd \"$( php -r 'echo ini_get(\"extension_dir\");' ;)\"/*.so | awk '/=>/ { print $3 }' | sort -u | xargs -r dpkg-query -S | cut -d: -f1 | sort -u | xargs -rt apt-mark manual ; apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false ; rm -rf /var/lib/apt/lists/*\n#  set recommended PHP.ini settings\n#  see https://secure.php.net/manual/en/opcache.installation.php\nRUN { echo 'opcache.memory_consumption=128' ;echo 'opcache.interned_strings_buffer=8' ;echo 'opcache.max_accelerated_files=4000' ;echo 'opcache.revalidate_freq=2' ;echo 'opcache.fast_shutdown=1' ; } > /usr/local/etc/php/conf.d/opcache-recommended.ini\nENV MATOMO_VERSION=\"4.7.1\"\nRUN set -ex ; fetchDeps=\" dirmngr gnupg \" ; apt-get update ; apt-get install --no-install-recommends $fetchDeps -y ; curl -fsSL -o matomo.tar.gz \"https://builds.matomo.org/matomo-${MATOMO_VERSION}.tar.gz\" ; curl -fsSL -o matomo.tar.gz.asc \"https://builds.matomo.org/matomo-${MATOMO_VERSION}.tar.gz.asc\" ; export GNUPGHOME=\"$( mktemp -d ;)\" ; gpg --batch --keyserver keyserver.ubuntu.com --recv-keys 814E346FA01A20DBB04B6807B5DBD5925590A237 ; gpg --batch --verify matomo.tar.gz.asc matomo.tar.gz ; gpgconf --kill all ; rm -rf \"$GNUPGHOME\" matomo.tar.gz.asc ; tar -xzf matomo.tar.gz -C /usr/src/ ; rm matomo.tar.gz ; apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps ; rm -rf /var/lib/apt/lists/*\nCOPY php.ini /usr/local/etc/php/conf.d/php-matomo.ini\nCOPY docker-entrypoint.sh /entrypoint.sh\n#  WORKDIR is /var/www/html (inherited via \"FROM php\")\n#  \"/entrypoint.sh\" will populate it at container startup from /usr/src/matomo\nVOLUME /var/www/html\nENTRYPOINT [\"/entrypoint.sh\"]\nCMD [\"php-fpm\"]\n","originalDockerfileUglifiedHash":"468753aeb79c05d2e08cc9f720370fd2","fileName":"/ICSME-replicationpackage/dataset/original_dockerfiles/matomo__4.7.1-fpm.dockerfile"}